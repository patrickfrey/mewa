; ModuleID = 'examples/language1/sources/tree.prg'
source_filename = "examples/language1/sources/tree.prg"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__ctors, i8* null }]
@llvm.global_dtors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__dtors, i8* null }]

%Data1 = type { i32 }

%Tree1 = type { %Data1, %Tree1*, %Tree1* }

define private dso_local void @__ctor_Data1( %Data1* %ptr) alwaysinline {
enter:
%r1 = getelementptr inbounds %Data1, %Data1* %ptr, i32 0, i32 0
store i32 0, i32* %r1
br label %end
end:
ret void
}

define private dso_local void @__ctor_assign_Data1( %Data1* %ptr, %Data1* %oth) alwaysinline {
enter:
%r1 = getelementptr inbounds %Data1, %Data1* %ptr, i32 0, i32 0
%r2 = getelementptr inbounds %Data1, %Data1* %oth, i32 0, i32 0
%r3 = load i32, i32* %r2
store i32 %r3, i32* %r1
br label %end
end:
ret void
}

define private dso_local void @__ctor_elements_Data1( %Data1* %ptr, i32 %p1) alwaysinline {
enter:
%r1 = getelementptr inbounds %Data1, %Data1* %ptr, i32 0, i32 0
store i32 %p1, i32* %r1
br label %end
end:
ret void
}

define private dso_local void @__ctor_Tree1( %Tree1* %ptr) alwaysinline {
enter:
%r1 = getelementptr inbounds %Tree1, %Tree1* %ptr, i32 0, i32 0
call void @__ctor_Data1( %Data1* %r1)
%r3 = getelementptr inbounds %Tree1, %Tree1* %ptr, i32 0, i32 1
store %Tree1* null, %Tree1** %r3
%r6 = getelementptr inbounds %Tree1, %Tree1* %ptr, i32 0, i32 2
store %Tree1* null, %Tree1** %r6
br label %end
end:
ret void
}

define private dso_local void @__ctor_assign_Tree1( %Tree1* %ptr, %Tree1* %oth) alwaysinline {
enter:
%r1 = getelementptr inbounds %Tree1, %Tree1* %ptr, i32 0, i32 0
%r2 = getelementptr inbounds %Tree1, %Tree1* %oth, i32 0, i32 0
call void @__ctor_assign_Data1( %Data1* %r1, %Data1* %r2)
%r3 = getelementptr inbounds %Tree1, %Tree1* %ptr, i32 0, i32 1
%r4 = getelementptr inbounds %Tree1, %Tree1* %oth, i32 0, i32 1
%r5 = load %Tree1*, %Tree1** %r4
store %Tree1* %r5, %Tree1** %r3
%r6 = getelementptr inbounds %Tree1, %Tree1* %ptr, i32 0, i32 2
%r7 = getelementptr inbounds %Tree1, %Tree1* %oth, i32 0, i32 2
%r8 = load %Tree1*, %Tree1** %r7
store %Tree1* %r8, %Tree1** %r6
br label %end
end:
ret void
}

define private dso_local void @__ctor_elements_Tree1( %Tree1* %ptr, %Data1 %p1, %Tree1* %p2, %Tree1* %p3) alwaysinline {
enter:
%r1 = getelementptr inbounds %Tree1, %Tree1* %ptr, i32 0, i32 0
store %Data1 %p1, %Data1* %r1
%r3 = getelementptr inbounds %Tree1, %Tree1* %ptr, i32 0, i32 1
store %Tree1* %p2, %Tree1** %r3
%r6 = getelementptr inbounds %Tree1, %Tree1* %ptr, i32 0, i32 2
store %Tree1* %p3, %Tree1** %r6
br label %end
end:
ret void
}

define private dso_local void @__dtor_Tree1( %Tree1* %ptr) alwaysinline {
enter:
%r1 = getelementptr inbounds %Tree1, %Tree1* %ptr, i32 0, i32 0
call void @__dtor_Data1( %Data1* %r1)
br label %end
end:
ret void
}



define internal void @_GLOBAL__ctors() nounwind uwtable readnone optsize ssp section ".text.startup" {
  ret void
}

define internal void @_GLOBAL__dtors() nounwind uwtable readnone optsize ssp section ".text.startup" {
  ret void
}


declare external void @printf( i8*, i32 ) #1 nounwind

@g_tree = internal global %Tree1 zeroinitializer, align 8

@string1 = private unnamed_addr constant [12 x i8] c"Result: %d\0A\00"


define external i32 @main() #0 noinline nounwind {
entry:
%r1 = alloca %Tree1, align 8
%r2 = getelementptr inbounds [12 x i8], [12 x i8]* @string1, i64 0, i64 0
%r3 = getelementptr inbounds %Tree1, %Tree1* %r1, i32 0, i32 0
%r4 = getelementptr inbounds %Data1, %Data1* %r3, i32 0, i32 0
%r5 = load i32, i32* %r4
call void @printf( i8* %r2, i32 %r5)
ret i32 0
}



attributes #0 = {
	"disable-tail-calls"="false" "frame-pointer"="all" "min-legal-vector-width"="0" 
	"correctly-rounded-divide-sqrt-fp-math"="false" "less-precise-fpmad"="false" "no-infs-fp-math"="false" 
	"no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "unsafe-fp-math"="false" 
	"no-jump-tables"="false" "stack-protector-buffer-size"="8" 
	"target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "use-soft-float"="false"
}
attributes #1 = {
	"no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "stack-protector-buffer-size"="8" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.0-4ubuntu1 "}
