Shift token "extern" at line 3 in state XXX, goto XXX
Shift token DQSTRING = "C" at line 3 in state XXX, goto XXX
Shift token "procedure" at line 3 in state XXX, goto XXX
Shift token IDENT = "printf" at line 3 in state XXX, goto XXX
Shift token '(' at line 3 in state XXX, goto XXX
Shift token "const" at line 3 in state XXX, goto XXX
Shift token IDENT = "byte" at line 3 in state XXX, goto XXX
Reduce #1 to typename by token '^' at line 3 in state XXX, goto XXX
Reduce #2 to typehdr by token '^' at line 3 in state XXX, call typehdr {const=true}, goto XXX
Reduce #1 to typegen by token '^' at line 3 in state XXX, goto XXX
Shift token '^' at line 3 in state XXX, goto XXX
Reduce #2 to typegen by token IDENT = "fmt" at line 3 in state XXX, call typegen_pointer {const=false}, goto XXX
Reduce #1 to typespec by token IDENT = "fmt" at line 3 in state XXX, call typespec, goto XXX
Shift token IDENT = "fmt" at line 3 in state XXX, goto XXX
Reduce #2 to extern_parameters by token "..." at line 3 in state XXX, call extern_paramdeftail, goto XXX
Reduce #1 to extern_paramlist by token "..." at line 3 in state XXX, call extern_paramdeflist, goto XXX
Shift token "..." at line 3 in state XXX, goto XXX
Shift token ')' at line 3 in state XXX, goto XXX
Shift token ';' at line 3 in state XXX, goto XXX
Reduce #9 to extern_definition by token "extern" at line 4 in state XXX, call extern_procdef_vararg, goto XXX
Shift token "extern" at line 4 in state XXX, goto XXX
Shift token DQSTRING = "C" at line 4 in state XXX, goto XXX
Shift token "procedure" at line 4 in state XXX, goto XXX
Shift token IDENT = "putchar" at line 4 in state XXX, goto XXX
Shift token '(' at line 4 in state XXX, goto XXX
Shift token "const" at line 4 in state XXX, goto XXX
Shift token IDENT = "byte" at line 4 in state XXX, goto XXX
Reduce #1 to typename by token ')' at line 4 in state XXX, goto XXX
Reduce #2 to typehdr by token ')' at line 4 in state XXX, call typehdr {const=true}, goto XXX
Reduce #1 to typegen by token ')' at line 4 in state XXX, goto XXX
Reduce #1 to typespec by token ')' at line 4 in state XXX, call typespec, goto XXX
Reduce #1 to extern_parameters by token ')' at line 4 in state XXX, call extern_paramdeftail, goto XXX
Reduce #1 to extern_paramlist by token ')' at line 4 in state XXX, call extern_paramdeflist, goto XXX
Shift token ')' at line 4 in state XXX, goto XXX
Shift token ';' at line 4 in state XXX, goto XXX
Reduce #8 to extern_definition by token "extern" at line 5 in state XXX, call extern_procdef, goto XXX
Shift token "extern" at line 5 in state XXX, goto XXX
Shift token DQSTRING = "C" at line 5 in state XXX, goto XXX
Shift token "function" at line 5 in state XXX, goto XXX
Shift token IDENT = "malloc" at line 5 in state XXX, goto XXX
Shift token IDENT = "byte" at line 5 in state XXX, goto XXX
Reduce #1 to typename by token '^' at line 5 in state XXX, goto XXX
Reduce #1 to typehdr by token '^' at line 5 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token '^' at line 5 in state XXX, goto XXX
Shift token '^' at line 5 in state XXX, goto XXX
Reduce #2 to typegen by token '(' at line 5 in state XXX, call typegen_pointer {const=false}, goto XXX
Reduce #1 to typespec by token '(' at line 5 in state XXX, call typespec, goto XXX
Shift token '(' at line 5 in state XXX, goto XXX
Shift token IDENT = "long" at line 5 in state XXX, goto XXX
Reduce #1 to typename by token ')' at line 5 in state XXX, goto XXX
Reduce #1 to typehdr by token ')' at line 5 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token ')' at line 5 in state XXX, goto XXX
Reduce #1 to typespec by token ')' at line 5 in state XXX, call typespec, goto XXX
Reduce #1 to extern_parameters by token ')' at line 5 in state XXX, call extern_paramdeftail, goto XXX
Reduce #1 to extern_paramlist by token ')' at line 5 in state XXX, call extern_paramdeflist, goto XXX
Shift token ')' at line 5 in state XXX, goto XXX
Shift token ';' at line 5 in state XXX, goto XXX
Reduce #9 to extern_definition by token "extern" at line 6 in state XXX, call extern_funcdef, goto XXX
Shift token "extern" at line 6 in state XXX, goto XXX
Shift token DQSTRING = "C" at line 6 in state XXX, goto XXX
Shift token "procedure" at line 6 in state XXX, goto XXX
Shift token IDENT = "free" at line 6 in state XXX, goto XXX
Shift token '(' at line 6 in state XXX, goto XXX
Shift token IDENT = "byte" at line 6 in state XXX, goto XXX
Reduce #1 to typename by token '^' at line 6 in state XXX, goto XXX
Reduce #1 to typehdr by token '^' at line 6 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token '^' at line 6 in state XXX, goto XXX
Shift token '^' at line 6 in state XXX, goto XXX
Reduce #2 to typegen by token ')' at line 6 in state XXX, call typegen_pointer {const=false}, goto XXX
Reduce #1 to typespec by token ')' at line 6 in state XXX, call typespec, goto XXX
Reduce #1 to extern_parameters by token ')' at line 6 in state XXX, call extern_paramdeftail, goto XXX
Reduce #1 to extern_paramlist by token ')' at line 6 in state XXX, call extern_paramdeflist, goto XXX
Shift token ')' at line 6 in state XXX, goto XXX
Shift token ';' at line 6 in state XXX, goto XXX
Reduce #8 to extern_definition by token "extern" at line 7 in state XXX, call extern_procdef, goto XXX
Shift token "extern" at line 7 in state XXX, goto XXX
Shift token DQSTRING = "C" at line 7 in state XXX, goto XXX
Shift token "function" at line 7 in state XXX, goto XXX
Shift token IDENT = "memcpy" at line 7 in state XXX, goto XXX
Shift token IDENT = "byte" at line 7 in state XXX, goto XXX
Reduce #1 to typename by token '^' at line 7 in state XXX, goto XXX
Reduce #1 to typehdr by token '^' at line 7 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token '^' at line 7 in state XXX, goto XXX
Shift token '^' at line 7 in state XXX, goto XXX
Reduce #2 to typegen by token '(' at line 7 in state XXX, call typegen_pointer {const=false}, goto XXX
Reduce #1 to typespec by token '(' at line 7 in state XXX, call typespec, goto XXX
Shift token '(' at line 7 in state XXX, goto XXX
Shift token IDENT = "byte" at line 7 in state XXX, goto XXX
Reduce #1 to typename by token '^' at line 7 in state XXX, goto XXX
Reduce #1 to typehdr by token '^' at line 7 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token '^' at line 7 in state XXX, goto XXX
Shift token '^' at line 7 in state XXX, goto XXX
Reduce #2 to typegen by token IDENT = "dest" at line 7 in state XXX, call typegen_pointer {const=false}, goto XXX
Reduce #1 to typespec by token IDENT = "dest" at line 7 in state XXX, call typespec, goto XXX
Shift token IDENT = "dest" at line 7 in state XXX, goto XXX
Shift token ',' at line 7 in state XXX, goto XXX
Shift token "const" at line 7 in state XXX, goto XXX
Shift token IDENT = "byte" at line 7 in state XXX, goto XXX
Reduce #1 to typename by token '^' at line 7 in state XXX, goto XXX
Reduce #2 to typehdr by token '^' at line 7 in state XXX, call typehdr {const=true}, goto XXX
Reduce #1 to typegen by token '^' at line 7 in state XXX, goto XXX
Shift token '^' at line 7 in state XXX, goto XXX
Reduce #2 to typegen by token IDENT = "src" at line 7 in state XXX, call typegen_pointer {const=false}, goto XXX
Reduce #1 to typespec by token IDENT = "src" at line 7 in state XXX, call typespec, goto XXX
Shift token IDENT = "src" at line 7 in state XXX, goto XXX
Shift token ',' at line 7 in state XXX, goto XXX
Shift token IDENT = "long" at line 7 in state XXX, goto XXX
Reduce #1 to typename by token IDENT = "n" at line 7 in state XXX, goto XXX
Reduce #1 to typehdr by token IDENT = "n" at line 7 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token IDENT = "n" at line 7 in state XXX, goto XXX
Reduce #1 to typespec by token IDENT = "n" at line 7 in state XXX, call typespec, goto XXX
Shift token IDENT = "n" at line 7 in state XXX, goto XXX
Reduce #2 to extern_parameters by token ')' at line 7 in state XXX, call extern_paramdeftail, goto XXX
Reduce #4 to extern_parameters by token ')' at line 7 in state XXX, call extern_paramdef, goto XXX
Reduce #4 to extern_parameters by token ')' at line 7 in state XXX, call extern_paramdef, goto XXX
Reduce #1 to extern_paramlist by token ')' at line 7 in state XXX, call extern_paramdeflist, goto XXX
Shift token ')' at line 7 in state XXX, goto XXX
Shift token ';' at line 7 in state XXX, goto XXX
Reduce #9 to extern_definition by token "extern" at line 8 in state XXX, call extern_funcdef, goto XXX
Shift token "extern" at line 8 in state XXX, goto XXX
Shift token DQSTRING = "C" at line 8 in state XXX, goto XXX
Shift token "function" at line 8 in state XXX, goto XXX
Shift token IDENT = "strlen" at line 8 in state XXX, goto XXX
Shift token IDENT = "long" at line 8 in state XXX, goto XXX
Reduce #1 to typename by token '(' at line 8 in state XXX, goto XXX
Reduce #1 to typehdr by token '(' at line 8 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token '(' at line 8 in state XXX, goto XXX
Reduce #1 to typespec by token '(' at line 8 in state XXX, call typespec, goto XXX
Shift token '(' at line 8 in state XXX, goto XXX
Shift token "const" at line 8 in state XXX, goto XXX
Shift token IDENT = "byte" at line 8 in state XXX, goto XXX
Reduce #1 to typename by token '^' at line 8 in state XXX, goto XXX
Reduce #2 to typehdr by token '^' at line 8 in state XXX, call typehdr {const=true}, goto XXX
Reduce #1 to typegen by token '^' at line 8 in state XXX, goto XXX
Shift token '^' at line 8 in state XXX, goto XXX
Reduce #2 to typegen by token IDENT = "str" at line 8 in state XXX, call typegen_pointer {const=false}, goto XXX
Reduce #1 to typespec by token IDENT = "str" at line 8 in state XXX, call typespec, goto XXX
Shift token IDENT = "str" at line 8 in state XXX, goto XXX
Reduce #2 to extern_parameters by token ')' at line 8 in state XXX, call extern_paramdeftail, goto XXX
Reduce #1 to extern_paramlist by token ')' at line 8 in state XXX, call extern_paramdeflist, goto XXX
Shift token ')' at line 8 in state XXX, goto XXX
Shift token ';' at line 8 in state XXX, goto XXX
Reduce #9 to extern_definition by token IDENT = "int" at line 10 in state XXX, call extern_funcdef, goto XXX
Reduce #0 to extern_definitionlist by token IDENT = "int" at line 10 in state XXX, goto XXX
Reduce #2 to extern_definitionlist by token IDENT = "int" at line 10 in state XXX, goto XXX
Reduce #2 to extern_definitionlist by token IDENT = "int" at line 10 in state XXX, goto XXX
Reduce #2 to extern_definitionlist by token IDENT = "int" at line 10 in state XXX, goto XXX
Reduce #2 to extern_definitionlist by token IDENT = "int" at line 10 in state XXX, goto XXX
Reduce #2 to extern_definitionlist by token IDENT = "int" at line 10 in state XXX, goto XXX
Reduce #2 to extern_definitionlist by token IDENT = "int" at line 10 in state XXX, goto XXX
Shift token IDENT = "int" at line 10 in state XXX, goto XXX
Reduce #1 to typename by token IDENT = "g_allocCnt" at line 10 in state XXX, goto XXX
Reduce #1 to typehdr by token IDENT = "g_allocCnt" at line 10 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token IDENT = "g_allocCnt" at line 10 in state XXX, goto XXX
Reduce #1 to typespec by token IDENT = "g_allocCnt" at line 10 in state XXX, call typespec, goto XXX
Shift token IDENT = "g_allocCnt" at line 10 in state XXX, goto XXX
Shift token '=' at line 10 in state XXX, goto XXX
Shift token UINTEGER = "0" at line 10 in state XXX, goto XXX
Reduce #1 to expression by token ';' at line 10 in state XXX, call constant "constexpr uint", goto XXX
Reduce #4 to variabledefinition by token ';' at line 10 in state XXX, call vardef_assign, goto XXX
Shift token ';' at line 10 in state XXX, goto XXX
Reduce #2 to free_definition by token IDENT = "int" at line 11 in state XXX, call definition 1, goto XXX
Shift token IDENT = "int" at line 11 in state XXX, goto XXX
Reduce #1 to typename by token IDENT = "g_maxAllocCnt" at line 11 in state XXX, goto XXX
Reduce #1 to typehdr by token IDENT = "g_maxAllocCnt" at line 11 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token IDENT = "g_maxAllocCnt" at line 11 in state XXX, goto XXX
Reduce #1 to typespec by token IDENT = "g_maxAllocCnt" at line 11 in state XXX, call typespec, goto XXX
Shift token IDENT = "g_maxAllocCnt" at line 11 in state XXX, goto XXX
Shift token '=' at line 11 in state XXX, goto XXX
Shift token UINTEGER = "0" at line 11 in state XXX, goto XXX
Reduce #1 to expression by token ';' at line 11 in state XXX, call constant "constexpr uint", goto XXX
Reduce #4 to variabledefinition by token ';' at line 11 in state XXX, call vardef_assign, goto XXX
Shift token ';' at line 11 in state XXX, goto XXX
Reduce #2 to free_definition by token IDENT = "long" at line 12 in state XXX, call definition 1, goto XXX
Shift token IDENT = "long" at line 12 in state XXX, goto XXX
Reduce #1 to typename by token IDENT = "g_exceptionCode" at line 12 in state XXX, goto XXX
Reduce #1 to typehdr by token IDENT = "g_exceptionCode" at line 12 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token IDENT = "g_exceptionCode" at line 12 in state XXX, goto XXX
Reduce #1 to typespec by token IDENT = "g_exceptionCode" at line 12 in state XXX, call typespec, goto XXX
Shift token IDENT = "g_exceptionCode" at line 12 in state XXX, goto XXX
Shift token '=' at line 12 in state XXX, goto XXX
Shift token UINTEGER = "0" at line 12 in state XXX, goto XXX
Reduce #1 to expression by token ';' at line 12 in state XXX, call constant "constexpr uint", goto XXX
Reduce #4 to variabledefinition by token ';' at line 12 in state XXX, call vardef_assign, goto XXX
Shift token ';' at line 12 in state XXX, goto XXX
Reduce #2 to free_definition by token "private" at line 14 in state XXX, call definition 1, goto XXX
Shift token "private" at line 14 in state XXX, goto XXX
Reduce #1 to linkage by token "function" at line 14 in state XXX, call linkage {private=true,linkage="internal",explicit=true}, goto XXX
Shift token "function" at line 14 in state XXX, goto XXX
Shift token IDENT = "allocmem" at line 14 in state XXX, goto XXX
Shift token IDENT = "byte" at line 14 in state XXX, goto XXX
Reduce #1 to typename by token '^' at line 14 in state XXX, goto XXX
Reduce #1 to typehdr by token '^' at line 14 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token '^' at line 14 in state XXX, goto XXX
Shift token '^' at line 14 in state XXX, goto XXX
Reduce #2 to typegen by token '(' at line 14 in state XXX, call typegen_pointer {const=false}, goto XXX
Reduce #1 to typespec by token '(' at line 14 in state XXX, call typespec, goto XXX
Shift token '(' at line 14 in state XXX, goto XXX
Shift token IDENT = "long" at line 14 in state XXX, goto XXX
Reduce #1 to typename by token IDENT = "bytes" at line 14 in state XXX, goto XXX
Reduce #1 to typehdr by token IDENT = "bytes" at line 14 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token IDENT = "bytes" at line 14 in state XXX, goto XXX
Reduce #1 to typespec by token IDENT = "bytes" at line 14 in state XXX, call typespec, goto XXX
Shift token IDENT = "bytes" at line 14 in state XXX, goto XXX
Reduce #2 to paramdecl by token ')' at line 14 in state XXX, call paramdef, goto XXX
Reduce #1 to parameters by token ')' at line 14 in state XXX, goto XXX
Reduce #1 to parameterlist by token ')' at line 14 in state XXX, call paramdeflist, goto XXX
Shift token ')' at line 14 in state XXX, goto XXX
Reduce #0 to funcattribute by token '{' at line 15 in state XXX, call funcattribute {const=false,throws=true}, goto XXX
Shift token '{' at line 15 in state XXX, goto XXX
Shift token IDENT = "g_allocCnt" at line 16 in state XXX, goto XXX
Reduce #1 to expression by token "+=" at line 16 in state XXX, call variable, goto XXX
Shift token "+=" at line 16 in state XXX, goto XXX
Shift token UINTEGER = "1" at line 16 in state XXX, goto XXX
Reduce #1 to expression by token ';' at line 16 in state XXX, call constant "constexpr uint", goto XXX
Reduce #3 to expression by token ';' at line 16 in state XXX, call assign_operator "+", goto XXX
Shift token ';' at line 16 in state XXX, goto XXX
Reduce #2 to statement by token "if" at line 17 in state XXX, call free_expression, goto XXX
Shift token "if" at line 17 in state XXX, goto XXX
Shift token '(' at line 17 in state XXX, goto XXX
Shift token IDENT = "g_allocCnt" at line 17 in state XXX, goto XXX
Reduce #1 to expression by token "==" at line 17 in state XXX, call variable, goto XXX
Shift token "==" at line 17 in state XXX, goto XXX
Shift token IDENT = "g_maxAllocCnt" at line 17 in state XXX, goto XXX
Reduce #1 to expression by token ')' at line 17 in state XXX, call variable, goto XXX
Reduce #3 to expression by token ')' at line 17 in state XXX, call binop "==", goto XXX
Shift token ')' at line 17 in state XXX, goto XXX
Shift token '{' at line 18 in state XXX, goto XXX
Shift token IDENT = "printf" at line 19 in state XXX, goto XXX
Reduce #1 to expression by token '(' at line 19 in state XXX, call variable, goto XXX
Shift token '(' at line 19 in state XXX, goto XXX
Shift token DQSTRING = "Throw: %s\n" at line 19 in state XXX, goto XXX
Reduce #1 to expression by token ',' at line 19 in state XXX, call string_constant, goto XXX
Shift token ',' at line 19 in state XXX, goto XXX
Shift token DQSTRING = "Max allowed allocations reached" at line 19 in state XXX, goto XXX
Reduce #1 to expression by token ')' at line 19 in state XXX, call string_constant, goto XXX
Reduce #1 to expressionlist by token ')' at line 19 in state XXX, goto XXX
Reduce #3 to expressionlist by token ')' at line 19 in state XXX, goto XXX
Shift token ')' at line 19 in state XXX, goto XXX
Reduce #4 to expression by token ';' at line 19 in state XXX, call operator "()", goto XXX
Shift token ';' at line 19 in state XXX, goto XXX
Reduce #2 to statement by token "throw" at line 20 in state XXX, call free_expression, goto XXX
Shift token "throw" at line 20 in state XXX, goto XXX
Shift token UINTEGER = "201" at line 20 in state XXX, goto XXX
Reduce #1 to expression by token ',' at line 20 in state XXX, call constant "constexpr uint", goto XXX
Shift token ',' at line 20 in state XXX, goto XXX
Shift token DQSTRING = "Max allowed allocations reached" at line 20 in state XXX, goto XXX
Reduce #1 to expression by token ';' at line 20 in state XXX, call string_constant, goto XXX
Shift token ';' at line 20 in state XXX, goto XXX
Reduce #5 to statement by token '}' at line 21 in state XXX, call throw_exception, goto XXX
Reduce #0 to statementlist by token '}' at line 21 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 21 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 21 in state XXX, goto XXX
Shift token '}' at line 21 in state XXX, goto XXX
Reduce #3 to codeblock by token "var" at line 22 in state XXX, call codeblock, goto XXX
Reduce #5 to statement by token "var" at line 22 in state XXX, call conditional_if, goto XXX
Shift token "var" at line 22 in state XXX, goto XXX
Shift token IDENT = "byte" at line 22 in state XXX, goto XXX
Reduce #1 to typename by token '^' at line 22 in state XXX, goto XXX
Reduce #1 to typehdr by token '^' at line 22 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token '^' at line 22 in state XXX, goto XXX
Shift token '^' at line 22 in state XXX, goto XXX
Reduce #2 to typegen by token IDENT = "rt" at line 22 in state XXX, call typegen_pointer {const=false}, goto XXX
Reduce #1 to typespec by token IDENT = "rt" at line 22 in state XXX, call typespec, goto XXX
Shift token IDENT = "rt" at line 22 in state XXX, goto XXX
Shift token '=' at line 22 in state XXX, goto XXX
Shift token IDENT = "malloc" at line 22 in state XXX, goto XXX
Reduce #1 to expression by token '(' at line 22 in state XXX, call variable, goto XXX
Shift token '(' at line 22 in state XXX, goto XXX
Shift token IDENT = "bytes" at line 22 in state XXX, goto XXX
Reduce #1 to expression by token ')' at line 22 in state XXX, call variable, goto XXX
Reduce #1 to expressionlist by token ')' at line 22 in state XXX, goto XXX
Shift token ')' at line 22 in state XXX, goto XXX
Reduce #4 to expression by token ';' at line 22 in state XXX, call operator "()", goto XXX
Reduce #4 to variabledefinition by token ';' at line 22 in state XXX, call vardef_assign, goto XXX
Shift token ';' at line 22 in state XXX, goto XXX
Reduce #3 to statement by token "if" at line 23 in state XXX, call definition 1, goto XXX
Shift token "if" at line 23 in state XXX, goto XXX
Shift token '(' at line 23 in state XXX, goto XXX
Shift token IDENT = "rt" at line 23 in state XXX, goto XXX
Reduce #1 to expression by token "==" at line 23 in state XXX, call variable, goto XXX
Shift token "==" at line 23 in state XXX, goto XXX
Shift token "null" at line 23 in state XXX, goto XXX
Reduce #1 to expression by token ')' at line 23 in state XXX, call null, goto XXX
Reduce #3 to expression by token ')' at line 23 in state XXX, call binop "==", goto XXX
Shift token ')' at line 23 in state XXX, goto XXX
Shift token '{' at line 24 in state XXX, goto XXX
Shift token IDENT = "printf" at line 25 in state XXX, goto XXX
Reduce #1 to expression by token '(' at line 25 in state XXX, call variable, goto XXX
Shift token '(' at line 25 in state XXX, goto XXX
Shift token DQSTRING = "Throw: %s\n" at line 25 in state XXX, goto XXX
Reduce #1 to expression by token ',' at line 25 in state XXX, call string_constant, goto XXX
Shift token ',' at line 25 in state XXX, goto XXX
Shift token DQSTRING = "Out of memory" at line 25 in state XXX, goto XXX
Reduce #1 to expression by token ')' at line 25 in state XXX, call string_constant, goto XXX
Reduce #1 to expressionlist by token ')' at line 25 in state XXX, goto XXX
Reduce #3 to expressionlist by token ')' at line 25 in state XXX, goto XXX
Shift token ')' at line 25 in state XXX, goto XXX
Reduce #4 to expression by token ';' at line 25 in state XXX, call operator "()", goto XXX
Shift token ';' at line 25 in state XXX, goto XXX
Reduce #2 to statement by token "throw" at line 26 in state XXX, call free_expression, goto XXX
Shift token "throw" at line 26 in state XXX, goto XXX
Shift token UINTEGER = "12" at line 26 in state XXX, goto XXX
Reduce #1 to expression by token ',' at line 26 in state XXX, call constant "constexpr uint", goto XXX
Shift token ',' at line 26 in state XXX, goto XXX
Shift token DQSTRING = "Out of memory" at line 26 in state XXX, goto XXX
Reduce #1 to expression by token ';' at line 26 in state XXX, call string_constant, goto XXX
Shift token ';' at line 26 in state XXX, goto XXX
Reduce #5 to statement by token '}' at line 27 in state XXX, call throw_exception, goto XXX
Reduce #0 to statementlist by token '}' at line 27 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 27 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 27 in state XXX, goto XXX
Shift token '}' at line 27 in state XXX, goto XXX
Reduce #3 to codeblock by token "return" at line 28 in state XXX, call codeblock, goto XXX
Reduce #5 to statement by token "return" at line 28 in state XXX, call conditional_if, goto XXX
Shift token "return" at line 28 in state XXX, goto XXX
Shift token IDENT = "rt" at line 28 in state XXX, goto XXX
Reduce #1 to expression by token ';' at line 28 in state XXX, call variable, goto XXX
Shift token ';' at line 28 in state XXX, goto XXX
Reduce #3 to statement by token '}' at line 29 in state XXX, call return_value, goto XXX
Reduce #0 to statementlist by token '}' at line 29 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 29 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 29 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 29 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 29 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 29 in state XXX, goto XXX
Shift token '}' at line 29 in state XXX, goto XXX
Reduce #7 to callablebody by token "private" at line 30 in state XXX, call callablebody, goto XXX
Reduce #5 to functiondefinition by token "private" at line 30 in state XXX, call funcdef, goto XXX
Reduce #1 to free_definition by token "private" at line 30 in state XXX, call definition 1, goto XXX
Shift token "private" at line 30 in state XXX, goto XXX
Reduce #1 to linkage by token "procedure" at line 30 in state XXX, call linkage {private=true,linkage="internal",explicit=true}, goto XXX
Shift token "procedure" at line 30 in state XXX, goto XXX
Shift token IDENT = "freemem" at line 30 in state XXX, goto XXX
Shift token '(' at line 30 in state XXX, goto XXX
Shift token IDENT = "byte" at line 30 in state XXX, goto XXX
Reduce #1 to typename by token '^' at line 30 in state XXX, goto XXX
Reduce #1 to typehdr by token '^' at line 30 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token '^' at line 30 in state XXX, goto XXX
Shift token '^' at line 30 in state XXX, goto XXX
Reduce #2 to typegen by token IDENT = "ptr" at line 30 in state XXX, call typegen_pointer {const=false}, goto XXX
Reduce #1 to typespec by token IDENT = "ptr" at line 30 in state XXX, call typespec, goto XXX
Shift token IDENT = "ptr" at line 30 in state XXX, goto XXX
Reduce #2 to paramdecl by token ')' at line 30 in state XXX, call paramdef, goto XXX
Reduce #1 to parameters by token ')' at line 30 in state XXX, goto XXX
Reduce #1 to parameterlist by token ')' at line 30 in state XXX, call paramdeflist, goto XXX
Shift token ')' at line 30 in state XXX, goto XXX
Shift token "nothrow" at line 30 in state XXX, goto XXX
Reduce #0 to funcattribute by token '{' at line 31 in state XXX, call funcattribute {const=false,throws=true}, goto XXX
Reduce #2 to funcattribute by token '{' at line 31 in state XXX, call funcattribute {throws=false}, goto XXX
Shift token '{' at line 31 in state XXX, goto XXX
Shift token IDENT = "free" at line 32 in state XXX, goto XXX
Reduce #1 to expression by token '(' at line 32 in state XXX, call variable, goto XXX
Shift token '(' at line 32 in state XXX, goto XXX
Shift token IDENT = "ptr" at line 32 in state XXX, goto XXX
Reduce #1 to expression by token ')' at line 32 in state XXX, call variable, goto XXX
Reduce #1 to expressionlist by token ')' at line 32 in state XXX, goto XXX
Shift token ')' at line 32 in state XXX, goto XXX
Reduce #4 to expression by token ';' at line 32 in state XXX, call operator "()", goto XXX
Shift token ';' at line 32 in state XXX, goto XXX
Reduce #2 to statement by token '}' at line 33 in state XXX, call free_expression, goto XXX
Reduce #0 to statementlist by token '}' at line 33 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 33 in state XXX, goto XXX
Shift token '}' at line 33 in state XXX, goto XXX
Reduce #7 to callablebody by token "namespace" at line 36 in state XXX, call callablebody, goto XXX
Reduce #4 to functiondefinition by token "namespace" at line 36 in state XXX, call procdef, goto XXX
Reduce #1 to free_definition by token "namespace" at line 36 in state XXX, call definition 1, goto XXX
Shift token "namespace" at line 36 in state XXX, goto XXX
Shift token IDENT = "std" at line 36 in state XXX, goto XXX
Shift token '{' at line 36 in state XXX, goto XXX
Shift token "class" at line 37 in state XXX, goto XXX
Shift token IDENT = "String" at line 37 in state XXX, goto XXX
Shift token '{' at line 38 in state XXX, goto XXX
Shift token "public" at line 39 in state XXX, goto XXX
Reduce #1 to linkage by token "constructor" at line 39 in state XXX, call linkage {private=false,linkage="external",explicit=true}, goto XXX
Shift token "constructor" at line 39 in state XXX, goto XXX
Shift token '(' at line 39 in state XXX, goto XXX
Reduce #0 to parameterlist by token ')' at line 39 in state XXX, call paramdeflist, goto XXX
Shift token ')' at line 39 in state XXX, goto XXX
Shift token "nothrow" at line 39 in state XXX, goto XXX
Reduce #0 to funcattribute by token '{' at line 40 in state XXX, call funcattribute {const=false,throws=true}, goto XXX
Reduce #2 to funcattribute by token '{' at line 40 in state XXX, call funcattribute {throws=false}, goto XXX
Shift token '{' at line 40 in state XXX, goto XXX
Shift token IDENT = "printf" at line 41 in state XXX, goto XXX
Reduce #1 to expression by token '(' at line 41 in state XXX, call variable, goto XXX
Shift token '(' at line 41 in state XXX, goto XXX
Shift token DQSTRING = "Default constructor string\n" at line 41 in state XXX, goto XXX
Reduce #1 to expression by token ')' at line 41 in state XXX, call string_constant, goto XXX
Reduce #1 to expressionlist by token ')' at line 41 in state XXX, goto XXX
Shift token ')' at line 41 in state XXX, goto XXX
Reduce #4 to expression by token ';' at line 41 in state XXX, call operator "()", goto XXX
Shift token ';' at line 41 in state XXX, goto XXX
Reduce #2 to statement by token IDENT = "m_ptr" at line 42 in state XXX, call free_expression, goto XXX
Shift token IDENT = "m_ptr" at line 42 in state XXX, goto XXX
Reduce #1 to expression by token '=' at line 42 in state XXX, call variable, goto XXX
Shift token '=' at line 42 in state XXX, goto XXX
Shift token "null" at line 42 in state XXX, goto XXX
Reduce #1 to expression by token ';' at line 42 in state XXX, call null, goto XXX
Reduce #3 to expression by token ';' at line 42 in state XXX, call binop "=", goto XXX
Shift token ';' at line 42 in state XXX, goto XXX
Reduce #2 to statement by token IDENT = "m_size" at line 43 in state XXX, call free_expression, goto XXX
Shift token IDENT = "m_size" at line 43 in state XXX, goto XXX
Reduce #1 to expression by token '=' at line 43 in state XXX, call variable, goto XXX
Shift token '=' at line 43 in state XXX, goto XXX
Shift token UINTEGER = "0" at line 43 in state XXX, goto XXX
Reduce #1 to expression by token ';' at line 43 in state XXX, call constant "constexpr uint", goto XXX
Reduce #3 to expression by token ';' at line 43 in state XXX, call binop "=", goto XXX
Shift token ';' at line 43 in state XXX, goto XXX
Reduce #2 to statement by token '}' at line 44 in state XXX, call free_expression, goto XXX
Reduce #0 to statementlist by token '}' at line 44 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 44 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 44 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 44 in state XXX, goto XXX
Shift token '}' at line 44 in state XXX, goto XXX
Reduce #7 to callablebody by token "public" at line 45 in state XXX, call callablebody, goto XXX
Reduce #3 to constructordefinition by token "public" at line 45 in state XXX, call constructordef, goto XXX
Reduce #1 to inclass_definition by token "public" at line 45 in state XXX, call definition_decl_impl_pass 4, goto XXX
Shift token "public" at line 45 in state XXX, goto XXX
Reduce #1 to linkage by token "constructor" at line 45 in state XXX, call linkage {private=false,linkage="external",explicit=true}, goto XXX
Shift token "constructor" at line 45 in state XXX, goto XXX
Shift token '(' at line 45 in state XXX, goto XXX
Shift token "const" at line 45 in state XXX, goto XXX
Shift token IDENT = "byte" at line 45 in state XXX, goto XXX
Reduce #1 to typename by token '^' at line 45 in state XXX, goto XXX
Reduce #2 to typehdr by token '^' at line 45 in state XXX, call typehdr {const=true}, goto XXX
Reduce #1 to typegen by token '^' at line 45 in state XXX, goto XXX
Shift token '^' at line 45 in state XXX, goto XXX
Reduce #2 to typegen by token IDENT = "cstr_" at line 45 in state XXX, call typegen_pointer {const=false}, goto XXX
Reduce #1 to typespec by token IDENT = "cstr_" at line 45 in state XXX, call typespec, goto XXX
Shift token IDENT = "cstr_" at line 45 in state XXX, goto XXX
Reduce #2 to paramdecl by token ')' at line 45 in state XXX, call paramdef, goto XXX
Reduce #1 to parameters by token ')' at line 45 in state XXX, goto XXX
Reduce #1 to parameterlist by token ')' at line 45 in state XXX, call paramdeflist, goto XXX
Shift token ')' at line 45 in state XXX, goto XXX
Reduce #0 to funcattribute by token '{' at line 46 in state XXX, call funcattribute {const=false,throws=true}, goto XXX
Shift token '{' at line 46 in state XXX, goto XXX
Shift token "var" at line 47 in state XXX, goto XXX
Shift token IDENT = "int" at line 47 in state XXX, goto XXX
Reduce #1 to typename by token IDENT = "size_" at line 47 in state XXX, goto XXX
Reduce #1 to typehdr by token IDENT = "size_" at line 47 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token IDENT = "size_" at line 47 in state XXX, goto XXX
Reduce #1 to typespec by token IDENT = "size_" at line 47 in state XXX, call typespec, goto XXX
Shift token IDENT = "size_" at line 47 in state XXX, goto XXX
Shift token '=' at line 47 in state XXX, goto XXX
Shift token IDENT = "strlen" at line 47 in state XXX, goto XXX
Reduce #1 to expression by token '(' at line 47 in state XXX, call variable, goto XXX
Shift token '(' at line 47 in state XXX, goto XXX
Shift token IDENT = "cstr_" at line 47 in state XXX, goto XXX
Reduce #1 to expression by token ')' at line 47 in state XXX, call variable, goto XXX
Reduce #1 to expressionlist by token ')' at line 47 in state XXX, goto XXX
Shift token ')' at line 47 in state XXX, goto XXX
Reduce #4 to expression by token ';' at line 47 in state XXX, call operator "()", goto XXX
Reduce #4 to variabledefinition by token ';' at line 47 in state XXX, call vardef_assign, goto XXX
Shift token ';' at line 47 in state XXX, goto XXX
Reduce #3 to statement by token IDENT = "m_ptr" at line 48 in state XXX, call definition 1, goto XXX
Shift token IDENT = "m_ptr" at line 48 in state XXX, goto XXX
Reduce #1 to expression by token '=' at line 48 in state XXX, call variable, goto XXX
Shift token '=' at line 48 in state XXX, goto XXX
Shift token IDENT = "allocmem" at line 48 in state XXX, goto XXX
Reduce #1 to expression by token '(' at line 48 in state XXX, call variable, goto XXX
Shift token '(' at line 48 in state XXX, goto XXX
Shift token IDENT = "size_" at line 48 in state XXX, goto XXX
Reduce #1 to expression by token '+' at line 48 in state XXX, call variable, goto XXX
Shift token '+' at line 48 in state XXX, goto XXX
Shift token UINTEGER = "1" at line 48 in state XXX, goto XXX
Reduce #1 to expression by token ')' at line 48 in state XXX, call constant "constexpr uint", goto XXX
Reduce #3 to expression by token ')' at line 48 in state XXX, call binop "+", goto XXX
Reduce #1 to expressionlist by token ')' at line 48 in state XXX, goto XXX
Shift token ')' at line 48 in state XXX, goto XXX
Reduce #4 to expression by token ';' at line 48 in state XXX, call operator "()", goto XXX
Reduce #3 to expression by token ';' at line 48 in state XXX, call binop "=", goto XXX
Shift token ';' at line 48 in state XXX, goto XXX
Reduce #2 to statement by token IDENT = "m_size" at line 49 in state XXX, call free_expression, goto XXX
Shift token IDENT = "m_size" at line 49 in state XXX, goto XXX
Reduce #1 to expression by token '=' at line 49 in state XXX, call variable, goto XXX
Shift token '=' at line 49 in state XXX, goto XXX
Shift token IDENT = "size_" at line 49 in state XXX, goto XXX
Reduce #1 to expression by token ';' at line 49 in state XXX, call variable, goto XXX
Reduce #3 to expression by token ';' at line 49 in state XXX, call binop "=", goto XXX
Shift token ';' at line 49 in state XXX, goto XXX
Reduce #2 to statement by token IDENT = "memcpy" at line 50 in state XXX, call free_expression, goto XXX
Shift token IDENT = "memcpy" at line 50 in state XXX, goto XXX
Reduce #1 to expression by token '(' at line 50 in state XXX, call variable, goto XXX
Shift token '(' at line 50 in state XXX, goto XXX
Shift token IDENT = "m_ptr" at line 50 in state XXX, goto XXX
Reduce #1 to expression by token ',' at line 50 in state XXX, call variable, goto XXX
Shift token ',' at line 50 in state XXX, goto XXX
Shift token IDENT = "cstr_" at line 50 in state XXX, goto XXX
Reduce #1 to expression by token ',' at line 50 in state XXX, call variable, goto XXX
Shift token ',' at line 50 in state XXX, goto XXX
Shift token IDENT = "size_" at line 50 in state XXX, goto XXX
Reduce #1 to expression by token ')' at line 50 in state XXX, call variable, goto XXX
Reduce #1 to expressionlist by token ')' at line 50 in state XXX, goto XXX
Reduce #3 to expressionlist by token ')' at line 50 in state XXX, goto XXX
Reduce #3 to expressionlist by token ')' at line 50 in state XXX, goto XXX
Shift token ')' at line 50 in state XXX, goto XXX
Reduce #4 to expression by token ';' at line 50 in state XXX, call operator "()", goto XXX
Shift token ';' at line 50 in state XXX, goto XXX
Reduce #2 to statement by token IDENT = "m_ptr" at line 51 in state XXX, call free_expression, goto XXX
Shift token IDENT = "m_ptr" at line 51 in state XXX, goto XXX
Reduce #1 to expression by token '[' at line 51 in state XXX, call variable, goto XXX
Shift token '[' at line 51 in state XXX, goto XXX
Shift token IDENT = "size_" at line 51 in state XXX, goto XXX
Reduce #1 to expression by token ']' at line 51 in state XXX, call variable, goto XXX
Reduce #1 to expressionlist by token ']' at line 51 in state XXX, goto XXX
Shift token ']' at line 51 in state XXX, goto XXX
Reduce #4 to expression by token '=' at line 51 in state XXX, call operator_array "[]", goto XXX
Shift token '=' at line 51 in state XXX, goto XXX
Shift token UINTEGER = "0" at line 51 in state XXX, goto XXX
Reduce #1 to expression by token ';' at line 51 in state XXX, call constant "constexpr uint", goto XXX
Reduce #3 to expression by token ';' at line 51 in state XXX, call binop "=", goto XXX
Shift token ';' at line 51 in state XXX, goto XXX
Reduce #2 to statement by token IDENT = "printf" at line 52 in state XXX, call free_expression, goto XXX
Shift token IDENT = "printf" at line 52 in state XXX, goto XXX
Reduce #1 to expression by token '(' at line 52 in state XXX, call variable, goto XXX
Shift token '(' at line 52 in state XXX, goto XXX
Shift token DQSTRING = "Constructor string [%s]\n" at line 52 in state XXX, goto XXX
Reduce #1 to expression by token ',' at line 52 in state XXX, call string_constant, goto XXX
Shift token ',' at line 52 in state XXX, goto XXX
Shift token IDENT = "c_str" at line 52 in state XXX, goto XXX
Reduce #1 to expression by token '(' at line 52 in state XXX, call variable, goto XXX
Shift token '(' at line 52 in state XXX, goto XXX
Shift token ')' at line 52 in state XXX, goto XXX
Reduce #3 to expression by token ')' at line 52 in state XXX, call operator "()", goto XXX
Reduce #1 to expressionlist by token ')' at line 52 in state XXX, goto XXX
Reduce #3 to expressionlist by token ')' at line 52 in state XXX, goto XXX
Shift token ')' at line 52 in state XXX, goto XXX
Reduce #4 to expression by token ';' at line 52 in state XXX, call operator "()", goto XXX
Shift token ';' at line 52 in state XXX, goto XXX
Reduce #2 to statement by token '}' at line 53 in state XXX, call free_expression, goto XXX
Reduce #0 to statementlist by token '}' at line 53 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 53 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 53 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 53 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 53 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 53 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 53 in state XXX, goto XXX
Shift token '}' at line 53 in state XXX, goto XXX
Reduce #7 to callablebody by token "destructor" at line 54 in state XXX, call callablebody, goto XXX
Reduce #3 to constructordefinition by token "destructor" at line 54 in state XXX, call constructordef, goto XXX
Reduce #1 to inclass_definition by token "destructor" at line 54 in state XXX, call definition_decl_impl_pass 4, goto XXX
Shift token "destructor" at line 54 in state XXX, goto XXX
Shift token '{' at line 55 in state XXX, goto XXX
Shift token IDENT = "printf" at line 56 in state XXX, goto XXX
Reduce #1 to expression by token '(' at line 56 in state XXX, call variable, goto XXX
Shift token '(' at line 56 in state XXX, goto XXX
Shift token DQSTRING = "Destructor string [%s]\n" at line 56 in state XXX, goto XXX
Reduce #1 to expression by token ',' at line 56 in state XXX, call string_constant, goto XXX
Shift token ',' at line 56 in state XXX, goto XXX
Shift token IDENT = "c_str" at line 56 in state XXX, goto XXX
Reduce #1 to expression by token '(' at line 56 in state XXX, call variable, goto XXX
Shift token '(' at line 56 in state XXX, goto XXX
Shift token ')' at line 56 in state XXX, goto XXX
Reduce #3 to expression by token ')' at line 56 in state XXX, call operator "()", goto XXX
Reduce #1 to expressionlist by token ')' at line 56 in state XXX, goto XXX
Reduce #3 to expressionlist by token ')' at line 56 in state XXX, goto XXX
Shift token ')' at line 56 in state XXX, goto XXX
Reduce #4 to expression by token ';' at line 56 in state XXX, call operator "()", goto XXX
Shift token ';' at line 56 in state XXX, goto XXX
Reduce #2 to statement by token IDENT = "freemem" at line 57 in state XXX, call free_expression, goto XXX
Shift token IDENT = "freemem" at line 57 in state XXX, goto XXX
Reduce #1 to expression by token '(' at line 57 in state XXX, call variable, goto XXX
Shift token '(' at line 57 in state XXX, goto XXX
Shift token IDENT = "m_ptr" at line 57 in state XXX, goto XXX
Reduce #1 to expression by token ')' at line 57 in state XXX, call variable, goto XXX
Reduce #1 to expressionlist by token ')' at line 57 in state XXX, goto XXX
Shift token ')' at line 57 in state XXX, goto XXX
Reduce #4 to expression by token ';' at line 57 in state XXX, call operator "()", goto XXX
Shift token ';' at line 57 in state XXX, goto XXX
Reduce #2 to statement by token '}' at line 58 in state XXX, call free_expression, goto XXX
Reduce #0 to statementlist by token '}' at line 58 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 58 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 58 in state XXX, goto XXX
Shift token '}' at line 58 in state XXX, goto XXX
Reduce #3 to codeblock by token "public" at line 59 in state XXX, call codeblock, goto XXX
Reduce #2 to constructordefinition by token "public" at line 59 in state XXX, call destructordef {linkage="external"}, goto XXX
Reduce #1 to inclass_definition by token "public" at line 59 in state XXX, call definition_decl_impl_pass 4, goto XXX
Shift token "public" at line 59 in state XXX, goto XXX
Reduce #1 to linkage by token "function" at line 59 in state XXX, call linkage {private=false,linkage="external",explicit=true}, goto XXX
Shift token "function" at line 59 in state XXX, goto XXX
Shift token IDENT = "c_str" at line 59 in state XXX, goto XXX
Shift token "const" at line 59 in state XXX, goto XXX
Shift token IDENT = "byte" at line 59 in state XXX, goto XXX
Reduce #1 to typename by token '^' at line 59 in state XXX, goto XXX
Reduce #2 to typehdr by token '^' at line 59 in state XXX, call typehdr {const=true}, goto XXX
Reduce #1 to typegen by token '^' at line 59 in state XXX, goto XXX
Shift token '^' at line 59 in state XXX, goto XXX
Reduce #2 to typegen by token '(' at line 59 in state XXX, call typegen_pointer {const=false}, goto XXX
Reduce #1 to typespec by token '(' at line 59 in state XXX, call typespec, goto XXX
Shift token '(' at line 59 in state XXX, goto XXX
Reduce #0 to parameterlist by token ')' at line 59 in state XXX, call paramdeflist, goto XXX
Shift token ')' at line 59 in state XXX, goto XXX
Shift token "const" at line 59 in state XXX, goto XXX
Shift token "nothrow" at line 59 in state XXX, goto XXX
Reduce #0 to funcattribute by token '{' at line 60 in state XXX, call funcattribute {const=false,throws=true}, goto XXX
Reduce #2 to funcattribute by token '{' at line 60 in state XXX, call funcattribute {throws=false}, goto XXX
Reduce #2 to funcattribute by token '{' at line 60 in state XXX, call funcattribute {const=true}, goto XXX
Shift token '{' at line 60 in state XXX, goto XXX
Shift token IDENT = "printf" at line 61 in state XXX, goto XXX
Reduce #1 to expression by token '(' at line 61 in state XXX, call variable, goto XXX
Shift token '(' at line 61 in state XXX, goto XXX
Shift token DQSTRING = "Get string\n" at line 61 in state XXX, goto XXX
Reduce #1 to expression by token ')' at line 61 in state XXX, call string_constant, goto XXX
Reduce #1 to expressionlist by token ')' at line 61 in state XXX, goto XXX
Shift token ')' at line 61 in state XXX, goto XXX
Reduce #4 to expression by token ';' at line 61 in state XXX, call operator "()", goto XXX
Shift token ';' at line 61 in state XXX, goto XXX
Reduce #2 to statement by token "if" at line 62 in state XXX, call free_expression, goto XXX
Shift token "if" at line 62 in state XXX, goto XXX
Shift token '(' at line 62 in state XXX, goto XXX
Shift token IDENT = "m_ptr" at line 62 in state XXX, goto XXX
Reduce #1 to expression by token "!=" at line 62 in state XXX, call variable, goto XXX
Shift token "!=" at line 62 in state XXX, goto XXX
Shift token "null" at line 62 in state XXX, goto XXX
Reduce #1 to expression by token ')' at line 62 in state XXX, call null, goto XXX
Reduce #3 to expression by token ')' at line 62 in state XXX, call binop "!=", goto XXX
Shift token ')' at line 62 in state XXX, goto XXX
Shift token '{' at line 63 in state XXX, goto XXX
Shift token "return" at line 64 in state XXX, goto XXX
Shift token IDENT = "m_ptr" at line 64 in state XXX, goto XXX
Reduce #1 to expression by token ';' at line 64 in state XXX, call variable, goto XXX
Shift token ';' at line 64 in state XXX, goto XXX
Reduce #3 to statement by token '}' at line 65 in state XXX, call return_value, goto XXX
Reduce #0 to statementlist by token '}' at line 65 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 65 in state XXX, goto XXX
Shift token '}' at line 65 in state XXX, goto XXX
Reduce #3 to codeblock by token "else" at line 66 in state XXX, call codeblock, goto XXX
Shift token "else" at line 66 in state XXX, goto XXX
Shift token '{' at line 67 in state XXX, goto XXX
Shift token "return" at line 68 in state XXX, goto XXX
Shift token DQSTRING = "" at line 68 in state XXX, goto XXX
Reduce #1 to expression by token ';' at line 68 in state XXX, call string_constant, goto XXX
Shift token ';' at line 68 in state XXX, goto XXX
Reduce #3 to statement by token '}' at line 69 in state XXX, call return_value, goto XXX
Reduce #0 to statementlist by token '}' at line 69 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 69 in state XXX, goto XXX
Shift token '}' at line 69 in state XXX, goto XXX
Reduce #3 to codeblock by token '}' at line 70 in state XXX, call codeblock, goto XXX
Reduce #2 to elseblock by token '}' at line 70 in state XXX, call conditional_else, goto XXX
Reduce #6 to statement by token '}' at line 70 in state XXX, call conditional_if, goto XXX
Reduce #0 to statementlist by token '}' at line 70 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 70 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 70 in state XXX, goto XXX
Shift token '}' at line 70 in state XXX, goto XXX
Reduce #7 to callablebody by token IDENT = "byte" at line 71 in state XXX, call callablebody, goto XXX
Reduce #5 to functiondefinition by token IDENT = "byte" at line 71 in state XXX, call funcdef, goto XXX
Reduce #1 to inclass_definition by token IDENT = "byte" at line 71 in state XXX, call definition_decl_impl_pass 4, goto XXX
Shift token IDENT = "byte" at line 71 in state XXX, goto XXX
Reduce #1 to typename by token '^' at line 71 in state XXX, goto XXX
Reduce #1 to typehdr by token '^' at line 71 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token '^' at line 71 in state XXX, goto XXX
Shift token '^' at line 71 in state XXX, goto XXX
Reduce #2 to typegen by token IDENT = "m_ptr" at line 71 in state XXX, call typegen_pointer {const=false}, goto XXX
Reduce #1 to typespec by token IDENT = "m_ptr" at line 71 in state XXX, call typespec, goto XXX
Shift token IDENT = "m_ptr" at line 71 in state XXX, goto XXX
Reduce #2 to variabledefinition by token ';' at line 71 in state XXX, call vardef, goto XXX
Shift token ';' at line 71 in state XXX, goto XXX
Reduce #2 to inclass_definition by token IDENT = "int" at line 72 in state XXX, call definition 2, goto XXX
Shift token IDENT = "int" at line 72 in state XXX, goto XXX
Reduce #1 to typename by token IDENT = "m_size" at line 72 in state XXX, goto XXX
Reduce #1 to typehdr by token IDENT = "m_size" at line 72 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token IDENT = "m_size" at line 72 in state XXX, goto XXX
Reduce #1 to typespec by token IDENT = "m_size" at line 72 in state XXX, call typespec, goto XXX
Shift token IDENT = "m_size" at line 72 in state XXX, goto XXX
Reduce #2 to variabledefinition by token ';' at line 72 in state XXX, call vardef, goto XXX
Shift token ';' at line 72 in state XXX, goto XXX
Reduce #2 to inclass_definition by token '}' at line 73 in state XXX, call definition 2, goto XXX
Reduce #0 to inclass_definitionlist by token '}' at line 73 in state XXX, goto XXX
Reduce #2 to inclass_definitionlist by token '}' at line 73 in state XXX, goto XXX
Reduce #2 to inclass_definitionlist by token '}' at line 73 in state XXX, goto XXX
Reduce #2 to inclass_definitionlist by token '}' at line 73 in state XXX, goto XXX
Reduce #2 to inclass_definitionlist by token '}' at line 73 in state XXX, goto XXX
Reduce #2 to inclass_definitionlist by token '}' at line 73 in state XXX, goto XXX
Reduce #2 to inclass_definitionlist by token '}' at line 73 in state XXX, goto XXX
Shift token '}' at line 73 in state XXX, goto XXX
Reduce #5 to classdefinition by token '}' at line 74 in state XXX, call classdef, goto XXX
Reduce #1 to namespace_definition by token '}' at line 74 in state XXX, call definition 1, goto XXX
Reduce #0 to namespace_definitionlist by token '}' at line 74 in state XXX, goto XXX
Reduce #2 to namespace_definitionlist by token '}' at line 74 in state XXX, goto XXX
Shift token '}' at line 74 in state XXX, goto XXX
Reduce #5 to namespacedefinition by token "private" at line 76 in state XXX, call namespacedef, goto XXX
Reduce #1 to free_definition by token "private" at line 76 in state XXX, goto XXX
Shift token "private" at line 76 in state XXX, goto XXX
Reduce #1 to linkage by token "procedure" at line 76 in state XXX, call linkage {private=true,linkage="internal",explicit=true}, goto XXX
Shift token "procedure" at line 76 in state XXX, goto XXX
Shift token IDENT = "test" at line 76 in state XXX, goto XXX
Shift token '(' at line 76 in state XXX, goto XXX
Shift token IDENT = "int" at line 76 in state XXX, goto XXX
Reduce #1 to typename by token IDENT = "allocCnt" at line 76 in state XXX, goto XXX
Reduce #1 to typehdr by token IDENT = "allocCnt" at line 76 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token IDENT = "allocCnt" at line 76 in state XXX, goto XXX
Reduce #1 to typespec by token IDENT = "allocCnt" at line 76 in state XXX, call typespec, goto XXX
Shift token IDENT = "allocCnt" at line 76 in state XXX, goto XXX
Reduce #2 to paramdecl by token ')' at line 76 in state XXX, call paramdef, goto XXX
Reduce #1 to parameters by token ')' at line 76 in state XXX, goto XXX
Reduce #1 to parameterlist by token ')' at line 76 in state XXX, call paramdeflist, goto XXX
Shift token ')' at line 76 in state XXX, goto XXX
Shift token "nothrow" at line 76 in state XXX, goto XXX
Reduce #0 to funcattribute by token '{' at line 77 in state XXX, call funcattribute {const=false,throws=true}, goto XXX
Reduce #2 to funcattribute by token '{' at line 77 in state XXX, call funcattribute {throws=false}, goto XXX
Shift token '{' at line 77 in state XXX, goto XXX
Shift token IDENT = "g_maxAllocCnt" at line 78 in state XXX, goto XXX
Reduce #1 to expression by token '=' at line 78 in state XXX, call variable, goto XXX
Shift token '=' at line 78 in state XXX, goto XXX
Shift token IDENT = "allocCnt" at line 78 in state XXX, goto XXX
Reduce #1 to expression by token ';' at line 78 in state XXX, call variable, goto XXX
Reduce #3 to expression by token ';' at line 78 in state XXX, call binop "=", goto XXX
Shift token ';' at line 78 in state XXX, goto XXX
Reduce #2 to statement by token "try" at line 79 in state XXX, call free_expression, goto XXX
Shift token "try" at line 79 in state XXX, goto XXX
Shift token '{' at line 80 in state XXX, goto XXX
Shift token "var" at line 81 in state XXX, goto XXX
Shift token IDENT = "std" at line 81 in state XXX, goto XXX
Shift token "::" at line 81 in state XXX, goto XXX
Shift token IDENT = "String" at line 81 in state XXX, goto XXX
Reduce #1 to typename by token IDENT = "str" at line 81 in state XXX, goto XXX
Reduce #3 to typename by token IDENT = "str" at line 81 in state XXX, goto XXX
Reduce #1 to typehdr by token IDENT = "str" at line 81 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token IDENT = "str" at line 81 in state XXX, goto XXX
Reduce #1 to typespec by token IDENT = "str" at line 81 in state XXX, call typespec, goto XXX
Shift token IDENT = "str" at line 81 in state XXX, goto XXX
Shift token '=' at line 81 in state XXX, goto XXX
Shift token DQSTRING = "Hello world!" at line 81 in state XXX, goto XXX
Reduce #1 to expression by token ';' at line 81 in state XXX, call string_constant, goto XXX
Reduce #4 to variabledefinition by token ';' at line 81 in state XXX, call vardef_assign, goto XXX
Shift token ';' at line 81 in state XXX, goto XXX
Reduce #3 to statement by token IDENT = "printf" at line 82 in state XXX, call definition 1, goto XXX
Shift token IDENT = "printf" at line 82 in state XXX, goto XXX
Reduce #1 to expression by token '(' at line 82 in state XXX, call variable, goto XXX
Shift token '(' at line 82 in state XXX, goto XXX
Shift token DQSTRING = "DEBUG\n" at line 82 in state XXX, goto XXX
Reduce #1 to expression by token ')' at line 82 in state XXX, call string_constant, goto XXX
Reduce #1 to expressionlist by token ')' at line 82 in state XXX, goto XXX
Shift token ')' at line 82 in state XXX, goto XXX
Reduce #4 to expression by token ';' at line 82 in state XXX, call operator "()", goto XXX
Shift token ';' at line 82 in state XXX, goto XXX
Reduce #2 to statement by token "var" at line 83 in state XXX, call free_expression, goto XXX
Shift token "var" at line 83 in state XXX, goto XXX
Shift token IDENT = "std" at line 83 in state XXX, goto XXX
Shift token "::" at line 83 in state XXX, goto XXX
Shift token IDENT = "String" at line 83 in state XXX, goto XXX
Reduce #1 to typename by token '[' at line 83 in state XXX, goto XXX
Reduce #3 to typename by token '[' at line 83 in state XXX, goto XXX
Reduce #1 to typehdr by token '[' at line 83 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token '[' at line 83 in state XXX, goto XXX
Shift token '[' at line 83 in state XXX, goto XXX
Shift token UINTEGER = "20" at line 83 in state XXX, goto XXX
Reduce #1 to generic_instance_deflist by token ']' at line 83 in state XXX, call generic_instance_dimension, goto XXX
Reduce #1 to generic_instance by token ']' at line 83 in state XXX, call generic_instance, goto XXX
Shift token ']' at line 83 in state XXX, goto XXX
Reduce #4 to typegen by token IDENT = "ar" at line 83 in state XXX, call typegen_generic, goto XXX
Reduce #1 to typespec by token IDENT = "ar" at line 83 in state XXX, call typespec, goto XXX
Shift token IDENT = "ar" at line 83 in state XXX, goto XXX
Shift token '=' at line 83 in state XXX, goto XXX
Shift token '{' at line 83 in state XXX, goto XXX
Shift token DQSTRING = "H" at line 83 in state XXX, goto XXX
Reduce #1 to expression by token ',' at line 83 in state XXX, call string_constant, goto XXX
Shift token ',' at line 83 in state XXX, goto XXX
Shift token DQSTRING = "e" at line 83 in state XXX, goto XXX
Reduce #1 to expression by token ',' at line 83 in state XXX, call string_constant, goto XXX
Shift token ',' at line 83 in state XXX, goto XXX
Shift token DQSTRING = "l" at line 83 in state XXX, goto XXX
Reduce #1 to expression by token ',' at line 83 in state XXX, call string_constant, goto XXX
Shift token ',' at line 83 in state XXX, goto XXX
Shift token DQSTRING = "l" at line 83 in state XXX, goto XXX
Reduce #1 to expression by token ',' at line 83 in state XXX, call string_constant, goto XXX
Shift token ',' at line 83 in state XXX, goto XXX
Shift token DQSTRING = "o" at line 83 in state XXX, goto XXX
Reduce #1 to expression by token ',' at line 83 in state XXX, call string_constant, goto XXX
Shift token ',' at line 83 in state XXX, goto XXX
Shift token DQSTRING = " " at line 83 in state XXX, goto XXX
Reduce #1 to expression by token ',' at line 83 in state XXX, call string_constant, goto XXX
Shift token ',' at line 83 in state XXX, goto XXX
Shift token DQSTRING = "w" at line 83 in state XXX, goto XXX
Reduce #1 to expression by token ',' at line 83 in state XXX, call string_constant, goto XXX
Shift token ',' at line 83 in state XXX, goto XXX
Shift token DQSTRING = "o" at line 83 in state XXX, goto XXX
Reduce #1 to expression by token ',' at line 83 in state XXX, call string_constant, goto XXX
Shift token ',' at line 83 in state XXX, goto XXX
Shift token DQSTRING = "r" at line 83 in state XXX, goto XXX
Reduce #1 to expression by token ',' at line 83 in state XXX, call string_constant, goto XXX
Shift token ',' at line 83 in state XXX, goto XXX
Shift token DQSTRING = "l" at line 83 in state XXX, goto XXX
Reduce #1 to expression by token ',' at line 83 in state XXX, call string_constant, goto XXX
Shift token ',' at line 83 in state XXX, goto XXX
Shift token DQSTRING = "d!" at line 83 in state XXX, goto XXX
Reduce #1 to expression by token '}' at line 83 in state XXX, call string_constant, goto XXX
Reduce #1 to expressionlist by token '}' at line 83 in state XXX, goto XXX
Reduce #3 to expressionlist by token '}' at line 83 in state XXX, goto XXX
Reduce #3 to expressionlist by token '}' at line 83 in state XXX, goto XXX
Reduce #3 to expressionlist by token '}' at line 83 in state XXX, goto XXX
Reduce #3 to expressionlist by token '}' at line 83 in state XXX, goto XXX
Reduce #3 to expressionlist by token '}' at line 83 in state XXX, goto XXX
Reduce #3 to expressionlist by token '}' at line 83 in state XXX, goto XXX
Reduce #3 to expressionlist by token '}' at line 83 in state XXX, goto XXX
Reduce #3 to expressionlist by token '}' at line 83 in state XXX, goto XXX
Reduce #3 to expressionlist by token '}' at line 83 in state XXX, goto XXX
Reduce #3 to expressionlist by token '}' at line 83 in state XXX, goto XXX
Shift token '}' at line 83 in state XXX, goto XXX
Reduce #3 to expression by token ';' at line 83 in state XXX, call structure, goto XXX
Reduce #4 to variabledefinition by token ';' at line 83 in state XXX, call vardef_assign, goto XXX
Shift token ';' at line 83 in state XXX, goto XXX
Reduce #3 to statement by token IDENT = "printf" at line 84 in state XXX, call definition 1, goto XXX
Shift token IDENT = "printf" at line 84 in state XXX, goto XXX
Reduce #1 to expression by token '(' at line 84 in state XXX, call variable, goto XXX
Shift token '(' at line 84 in state XXX, goto XXX
Shift token DQSTRING = "%s\n" at line 84 in state XXX, goto XXX
Reduce #1 to expression by token ',' at line 84 in state XXX, call string_constant, goto XXX
Shift token ',' at line 84 in state XXX, goto XXX
Shift token IDENT = "str" at line 84 in state XXX, goto XXX
Reduce #1 to expression by token '.' at line 84 in state XXX, call variable, goto XXX
Shift token '.' at line 84 in state XXX, goto XXX
Shift token IDENT = "c_str" at line 84 in state XXX, goto XXX
Reduce #3 to expression by token '(' at line 84 in state XXX, call member, goto XXX
Shift token '(' at line 84 in state XXX, goto XXX
Shift token ')' at line 84 in state XXX, goto XXX
Reduce #3 to expression by token ')' at line 84 in state XXX, call operator "()", goto XXX
Reduce #1 to expressionlist by token ')' at line 84 in state XXX, goto XXX
Reduce #3 to expressionlist by token ')' at line 84 in state XXX, goto XXX
Shift token ')' at line 84 in state XXX, goto XXX
Reduce #4 to expression by token ';' at line 84 in state XXX, call operator "()", goto XXX
Shift token ';' at line 84 in state XXX, goto XXX
Reduce #2 to statement by token '}' at line 86 in state XXX, call free_expression, goto XXX
Reduce #0 to statementlist by token '}' at line 86 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 86 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 86 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 86 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 86 in state XXX, goto XXX
Shift token '}' at line 86 in state XXX, goto XXX
Reduce #3 to codeblock by token "catch" at line 87 in state XXX, call codeblock, goto XXX
Reduce #2 to tryblock by token "catch" at line 87 in state XXX, call tryblock, goto XXX
Shift token "catch" at line 87 in state XXX, goto XXX
Shift token IDENT = "errcode" at line 87 in state XXX, goto XXX
Shift token ',' at line 87 in state XXX, goto XXX
Shift token IDENT = "errmsg" at line 87 in state XXX, goto XXX
Shift token '{' at line 88 in state XXX, goto XXX
Shift token IDENT = "printf" at line 89 in state XXX, goto XXX
Reduce #1 to expression by token '(' at line 89 in state XXX, call variable, goto XXX
Shift token '(' at line 89 in state XXX, goto XXX
Shift token DQSTRING = "ERR %ld %ld %s\n" at line 89 in state XXX, goto XXX
Reduce #1 to expression by token ',' at line 89 in state XXX, call string_constant, goto XXX
Shift token ',' at line 89 in state XXX, goto XXX
Shift token IDENT = "g_exceptionCode" at line 89 in state XXX, goto XXX
Reduce #1 to expression by token ',' at line 89 in state XXX, call variable, goto XXX
Shift token ',' at line 89 in state XXX, goto XXX
Shift token IDENT = "errcode" at line 89 in state XXX, goto XXX
Reduce #1 to expression by token ',' at line 89 in state XXX, call variable, goto XXX
Shift token ',' at line 89 in state XXX, goto XXX
Shift token IDENT = "errmsg" at line 89 in state XXX, goto XXX
Reduce #1 to expression by token ')' at line 89 in state XXX, call variable, goto XXX
Reduce #1 to expressionlist by token ')' at line 89 in state XXX, goto XXX
Reduce #3 to expressionlist by token ')' at line 89 in state XXX, goto XXX
Reduce #3 to expressionlist by token ')' at line 89 in state XXX, goto XXX
Reduce #3 to expressionlist by token ')' at line 89 in state XXX, goto XXX
Shift token ')' at line 89 in state XXX, goto XXX
Reduce #4 to expression by token ';' at line 89 in state XXX, call operator "()", goto XXX
Shift token ';' at line 89 in state XXX, goto XXX
Reduce #2 to statement by token '}' at line 90 in state XXX, call free_expression, goto XXX
Reduce #0 to statementlist by token '}' at line 90 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 90 in state XXX, goto XXX
Shift token '}' at line 90 in state XXX, goto XXX
Reduce #3 to codeblock by token '}' at line 91 in state XXX, call codeblock, goto XXX
Reduce #5 to catchblock by token '}' at line 91 in state XXX, call catchblock, goto XXX
Reduce #2 to statement by token '}' at line 91 in state XXX, call trycatch, goto XXX
Reduce #0 to statementlist by token '}' at line 91 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 91 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 91 in state XXX, goto XXX
Shift token '}' at line 91 in state XXX, goto XXX
Reduce #7 to callablebody by token "main" at line 93 in state XXX, call callablebody, goto XXX
Reduce #4 to functiondefinition by token "main" at line 93 in state XXX, call procdef, goto XXX
Reduce #1 to free_definition by token "main" at line 93 in state XXX, call definition 1, goto XXX
Reduce #0 to free_definitionlist by token "main" at line 93 in state XXX, goto XXX
Reduce #2 to free_definitionlist by token "main" at line 93 in state XXX, goto XXX
Reduce #2 to free_definitionlist by token "main" at line 93 in state XXX, goto XXX
Reduce #2 to free_definitionlist by token "main" at line 93 in state XXX, goto XXX
Reduce #2 to free_definitionlist by token "main" at line 93 in state XXX, goto XXX
Reduce #2 to free_definitionlist by token "main" at line 93 in state XXX, goto XXX
Reduce #2 to free_definitionlist by token "main" at line 93 in state XXX, goto XXX
Reduce #2 to free_definitionlist by token "main" at line 93 in state XXX, goto XXX
Shift token "main" at line 93 in state XXX, goto XXX
Shift token '{' at line 94 in state XXX, goto XXX
Shift token IDENT = "test" at line 95 in state XXX, goto XXX
Reduce #1 to expression by token '(' at line 95 in state XXX, call variable, goto XXX
Shift token '(' at line 95 in state XXX, goto XXX
Shift token UINTEGER = "100" at line 95 in state XXX, goto XXX
Reduce #1 to expression by token ')' at line 95 in state XXX, call constant "constexpr uint", goto XXX
Reduce #1 to expressionlist by token ')' at line 95 in state XXX, goto XXX
Shift token ')' at line 95 in state XXX, goto XXX
Reduce #4 to expression by token ';' at line 95 in state XXX, call operator "()", goto XXX
Shift token ';' at line 95 in state XXX, goto XXX
Reduce #2 to statement by token '}' at line 97 in state XXX, call free_expression, goto XXX
Reduce #0 to statementlist by token '}' at line 97 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 97 in state XXX, goto XXX
Shift token '}' at line 97 in state XXX, goto XXX
Reduce #2 to main_procedure by token $ at line 101 in state XXX, call main_procdef, goto XXX
Accept
Calling Lua function: program
Lua call result [1]
{
  arg = {
    {
      arg = {
        {
          line = 3,
          name = "DQSTRING",
          value = "C"},
        {
          line = 3,
          name = "IDENT",
          value = "printf"},
        {
          arg = {
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {
                        {
                          arg = {
                            {
                              line = 3,
                              name = "IDENT",
                              value = "byte"}},
                          call = {
                            name = "typehdr {const=true}",
                            obj = {
                              const = true},
                            proc = <function>},
                          line = 3,
                          step = 0}},
                      call = {
                        name = "typegen_pointer {const=false}",
                        obj = {
                          const = false},
                        proc = <function>},
                      line = 3,
                      step = 0}},
                  call = {
                    name = "typespec",
                    proc = <function>},
                  line = 3,
                  step = 0},
                {
                  line = 3,
                  name = "IDENT",
                  value = "fmt"}},
              call = {
                name = "extern_paramdeftail",
                proc = <function>},
              line = 3,
              step = 0}},
          call = {
            name = "extern_paramdeflist",
            proc = <function>},
          line = 3,
          step = 0}},
      call = {
        name = "extern_procdef_vararg",
        proc = <function>},
      line = 3,
      step = 0},
    {
      arg = {
        {
          line = 4,
          name = "DQSTRING",
          value = "C"},
        {
          line = 4,
          name = "IDENT",
          value = "putchar"},
        {
          arg = {
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {
                        {
                          line = 4,
                          name = "IDENT",
                          value = "byte"}},
                      call = {
                        name = "typehdr {const=true}",
                        obj = {
                          const = true},
                        proc = <function>},
                      line = 4,
                      step = 0}},
                  call = {
                    name = "typespec",
                    proc = <function>},
                  line = 4,
                  step = 0}},
              call = {
                name = "extern_paramdeftail",
                proc = <function>},
              line = 4,
              step = 0}},
          call = {
            name = "extern_paramdeflist",
            proc = <function>},
          line = 4,
          step = 0}},
      call = {
        name = "extern_procdef",
        proc = <function>},
      line = 4,
      step = 0},
    {
      arg = {
        {
          line = 5,
          name = "DQSTRING",
          value = "C"},
        {
          line = 5,
          name = "IDENT",
          value = "malloc"},
        {
          arg = {
            {
              arg = {
                {
                  arg = {
                    {
                      line = 5,
                      name = "IDENT",
                      value = "byte"}},
                  call = {
                    name = "typehdr {const=false}",
                    obj = {
                      const = false},
                    proc = <function>},
                  line = 5,
                  step = 0}},
              call = {
                name = "typegen_pointer {const=false}",
                obj = {
                  const = false},
                proc = <function>},
              line = 5,
              step = 0}},
          call = {
            name = "typespec",
            proc = <function>},
          line = 5,
          step = 0},
        {
          arg = {
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {
                        {
                          line = 5,
                          name = "IDENT",
                          value = "long"}},
                      call = {
                        name = "typehdr {const=false}",
                        obj = {
                          const = false},
                        proc = <function>},
                      line = 5,
                      step = 0}},
                  call = {
                    name = "typespec",
                    proc = <function>},
                  line = 5,
                  step = 0}},
              call = {
                name = "extern_paramdeftail",
                proc = <function>},
              line = 5,
              step = 0}},
          call = {
            name = "extern_paramdeflist",
            proc = <function>},
          line = 5,
          step = 0}},
      call = {
        name = "extern_funcdef",
        proc = <function>},
      line = 5,
      step = 0},
    {
      arg = {
        {
          line = 6,
          name = "DQSTRING",
          value = "C"},
        {
          line = 6,
          name = "IDENT",
          value = "free"},
        {
          arg = {
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {
                        {
                          arg = {
                            {
                              line = 6,
                              name = "IDENT",
                              value = "byte"}},
                          call = {
                            name = "typehdr {const=false}",
                            obj = {
                              const = false},
                            proc = <function>},
                          line = 6,
                          step = 0}},
                      call = {
                        name = "typegen_pointer {const=false}",
                        obj = {
                          const = false},
                        proc = <function>},
                      line = 6,
                      step = 0}},
                  call = {
                    name = "typespec",
                    proc = <function>},
                  line = 6,
                  step = 0}},
              call = {
                name = "extern_paramdeftail",
                proc = <function>},
              line = 6,
              step = 0}},
          call = {
            name = "extern_paramdeflist",
            proc = <function>},
          line = 6,
          step = 0}},
      call = {
        name = "extern_procdef",
        proc = <function>},
      line = 6,
      step = 0},
    {
      arg = {
        {
          line = 7,
          name = "DQSTRING",
          value = "C"},
        {
          line = 7,
          name = "IDENT",
          value = "memcpy"},
        {
          arg = {
            {
              arg = {
                {
                  arg = {
                    {
                      line = 7,
                      name = "IDENT",
                      value = "byte"}},
                  call = {
                    name = "typehdr {const=false}",
                    obj = {
                      const = false},
                    proc = <function>},
                  line = 7,
                  step = 0}},
              call = {
                name = "typegen_pointer {const=false}",
                obj = {
                  const = false},
                proc = <function>},
              line = 7,
              step = 0}},
          call = {
            name = "typespec",
            proc = <function>},
          line = 7,
          step = 0},
        {
          arg = {
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {
                        {
                          arg = {
                            {
                              line = 7,
                              name = "IDENT",
                              value = "byte"}},
                          call = {
                            name = "typehdr {const=false}",
                            obj = {
                              const = false},
                            proc = <function>},
                          line = 7,
                          step = 0}},
                      call = {
                        name = "typegen_pointer {const=false}",
                        obj = {
                          const = false},
                        proc = <function>},
                      line = 7,
                      step = 0}},
                  call = {
                    name = "typespec",
                    proc = <function>},
                  line = 7,
                  step = 0},
                {
                  line = 7,
                  name = "IDENT",
                  value = "dest"},
                {
                  arg = {
                    {
                      arg = {
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  line = 7,
                                  name = "IDENT",
                                  value = "byte"}},
                              call = {
                                name = "typehdr {const=true}",
                                obj = {
                                  const = true},
                                proc = <function>},
                              line = 7,
                              step = 0}},
                          call = {
                            name = "typegen_pointer {const=false}",
                            obj = {
                              const = false},
                            proc = <function>},
                          line = 7,
                          step = 0}},
                      call = {
                        name = "typespec",
                        proc = <function>},
                      line = 7,
                      step = 0},
                    {
                      line = 7,
                      name = "IDENT",
                      value = "src"},
                    {
                      arg = {
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  line = 7,
                                  name = "IDENT",
                                  value = "long"}},
                              call = {
                                name = "typehdr {const=false}",
                                obj = {
                                  const = false},
                                proc = <function>},
                              line = 7,
                              step = 0}},
                          call = {
                            name = "typespec",
                            proc = <function>},
                          line = 7,
                          step = 0},
                        {
                          line = 7,
                          name = "IDENT",
                          value = "n"}},
                      call = {
                        name = "extern_paramdeftail",
                        proc = <function>},
                      line = 7,
                      step = 0}},
                  call = {
                    name = "extern_paramdef",
                    proc = <function>},
                  line = 7,
                  step = 0}},
              call = {
                name = "extern_paramdef",
                proc = <function>},
              line = 7,
              step = 0}},
          call = {
            name = "extern_paramdeflist",
            proc = <function>},
          line = 7,
          step = 0}},
      call = {
        name = "extern_funcdef",
        proc = <function>},
      line = 7,
      step = 0},
    {
      arg = {
        {
          line = 8,
          name = "DQSTRING",
          value = "C"},
        {
          line = 8,
          name = "IDENT",
          value = "strlen"},
        {
          arg = {
            {
              arg = {
                {
                  line = 8,
                  name = "IDENT",
                  value = "long"}},
              call = {
                name = "typehdr {const=false}",
                obj = {
                  const = false},
                proc = <function>},
              line = 8,
              step = 0}},
          call = {
            name = "typespec",
            proc = <function>},
          line = 8,
          step = 0},
        {
          arg = {
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {
                        {
                          arg = {
                            {
                              line = 8,
                              name = "IDENT",
                              value = "byte"}},
                          call = {
                            name = "typehdr {const=true}",
                            obj = {
                              const = true},
                            proc = <function>},
                          line = 8,
                          step = 0}},
                      call = {
                        name = "typegen_pointer {const=false}",
                        obj = {
                          const = false},
                        proc = <function>},
                      line = 8,
                      step = 0}},
                  call = {
                    name = "typespec",
                    proc = <function>},
                  line = 8,
                  step = 0},
                {
                  line = 8,
                  name = "IDENT",
                  value = "str"}},
              call = {
                name = "extern_paramdeftail",
                proc = <function>},
              line = 8,
              step = 0}},
          call = {
            name = "extern_paramdeflist",
            proc = <function>},
          line = 8,
          step = 0}},
      call = {
        name = "extern_funcdef",
        proc = <function>},
      line = 8,
      step = 0},
    {
      arg = {
        {
          arg = {
            {
              arg = {
                {
                  arg = {
                    {
                      line = 10,
                      name = "IDENT",
                      value = "int"}},
                  call = {
                    name = "typehdr {const=false}",
                    obj = {
                      const = false},
                    proc = <function>},
                  line = 10,
                  step = 0}},
              call = {
                name = "typespec",
                proc = <function>},
              line = 10,
              step = 0},
            {
              line = 10,
              name = "IDENT",
              value = "g_allocCnt"},
            {
              arg = {
                {
                  line = 10,
                  name = "UINTEGER",
                  value = "0"}},
              call = {
                name = "constant constexpr uint",
                obj = "constexpr uint",
                proc = <function>},
              line = 10,
              step = 0}},
          call = {
            name = "vardef_assign",
            proc = <function>},
          line = 10,
          step = 1}},
      call = {
        name = "definition 1",
        obj = 1,
        proc = <function>},
      line = 10,
      step = 1},
    {
      arg = {
        {
          arg = {
            {
              arg = {
                {
                  arg = {
                    {
                      line = 11,
                      name = "IDENT",
                      value = "int"}},
                  call = {
                    name = "typehdr {const=false}",
                    obj = {
                      const = false},
                    proc = <function>},
                  line = 11,
                  step = 1}},
              call = {
                name = "typespec",
                proc = <function>},
              line = 11,
              step = 1},
            {
              line = 11,
              name = "IDENT",
              value = "g_maxAllocCnt"},
            {
              arg = {
                {
                  line = 11,
                  name = "UINTEGER",
                  value = "0"}},
              call = {
                name = "constant constexpr uint",
                obj = "constexpr uint",
                proc = <function>},
              line = 11,
              step = 1}},
          call = {
            name = "vardef_assign",
            proc = <function>},
          line = 11,
          step = 2}},
      call = {
        name = "definition 1",
        obj = 1,
        proc = <function>},
      line = 11,
      step = 2},
    {
      arg = {
        {
          arg = {
            {
              arg = {
                {
                  arg = {
                    {
                      line = 12,
                      name = "IDENT",
                      value = "long"}},
                  call = {
                    name = "typehdr {const=false}",
                    obj = {
                      const = false},
                    proc = <function>},
                  line = 12,
                  step = 2}},
              call = {
                name = "typespec",
                proc = <function>},
              line = 12,
              step = 2},
            {
              line = 12,
              name = "IDENT",
              value = "g_exceptionCode"},
            {
              arg = {
                {
                  line = 12,
                  name = "UINTEGER",
                  value = "0"}},
              call = {
                name = "constant constexpr uint",
                obj = "constexpr uint",
                proc = <function>},
              line = 12,
              step = 2}},
          call = {
            name = "vardef_assign",
            proc = <function>},
          line = 12,
          step = 3}},
      call = {
        name = "definition 1",
        obj = 1,
        proc = <function>},
      line = 12,
      step = 3},
    {
      arg = {
        {
          arg = {
            {
              arg = {},
              call = {
                name = "linkage {private=true,linkage="internal",explicit=true}",
                obj = {
                  explicit = true,
                  linkage = "internal",
                  private = true},
                proc = <function>},
              line = 12,
              step = 3},
            {
              line = 14,
              name = "IDENT",
              value = "allocmem"},
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {
                        {
                          line = 14,
                          name = "IDENT",
                          value = "byte"}},
                      call = {
                        name = "typehdr {const=false}",
                        obj = {
                          const = false},
                        proc = <function>},
                      line = 14,
                      step = 3}},
                  call = {
                    name = "typegen_pointer {const=false}",
                    obj = {
                      const = false},
                    proc = <function>},
                  line = 14,
                  step = 3}},
              call = {
                name = "typespec",
                proc = <function>},
              line = 14,
              step = 3},
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  line = 14,
                                  name = "IDENT",
                                  value = "long"}},
                              call = {
                                name = "typehdr {const=false}",
                                obj = {
                                  const = false},
                                proc = <function>},
                              line = 14,
                              step = 3}},
                          call = {
                            name = "typespec",
                            proc = <function>},
                          line = 14,
                          step = 3},
                        {
                          line = 14,
                          name = "IDENT",
                          value = "bytes"}},
                      call = {
                        name = "paramdef",
                        proc = <function>},
                      line = 14,
                      step = 3}},
                  call = {
                    name = "paramdeflist",
                    proc = <function>},
                  line = 14,
                  step = 3},
                {
                  arg = {},
                  call = {
                    name = "funcattribute {const=false,throws=true}",
                    obj = {
                      const = false,
                      throws = true},
                    proc = <function>},
                  line = 14,
                  step = 3},
                {
                  arg = {
                    {
                      arg = {
                        {
                          arg = {
                            {
                              line = 16,
                              name = "IDENT",
                              value = "g_allocCnt"}},
                          call = {
                            name = "variable",
                            proc = <function>},
                          line = 16,
                          step = 3},
                        {
                          arg = {
                            {
                              line = 16,
                              name = "UINTEGER",
                              value = "1"}},
                          call = {
                            name = "constant constexpr uint",
                            obj = "constexpr uint",
                            proc = <function>},
                          line = 16,
                          step = 3}},
                      call = {
                        name = "assign_operator +",
                        obj = "+",
                        proc = <function>},
                      line = 16,
                      step = 4}},
                  call = {
                    name = "free_expression",
                    proc = <function>},
                  line = 16,
                  step = 4},
                {
                  arg = {
                    {
                      arg = {
                        {
                          arg = {
                            {
                              line = 17,
                              name = "IDENT",
                              value = "g_allocCnt"}},
                          call = {
                            name = "variable",
                            proc = <function>},
                          line = 17,
                          step = 4},
                        {
                          arg = {
                            {
                              line = 17,
                              name = "IDENT",
                              value = "g_maxAllocCnt"}},
                          call = {
                            name = "variable",
                            proc = <function>},
                          line = 17,
                          step = 4}},
                      call = {
                        name = "binop ==",
                        obj = "==",
                        proc = <function>},
                      line = 17,
                      step = 4},
                    {
                      arg = {
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      line = 19,
                                      name = "IDENT",
                                      value = "printf"}},
                                  call = {
                                    name = "variable",
                                    proc = <function>},
                                  line = 19,
                                  step = 4},
                                {
                                  arg = {
                                    {
                                      line = 19,
                                      name = "DQSTRING",
                                      value = "Throw: %s\\n"}},
                                  call = {
                                    name = "string_constant",
                                    proc = <function>},
                                  line = 19,
                                  step = 4},
                                {
                                  arg = {
                                    {
                                      line = 19,
                                      name = "DQSTRING",
                                      value = "Max allowed allocations reached"}},
                                  call = {
                                    name = "string_constant",
                                    proc = <function>},
                                  line = 19,
                                  step = 4}},
                              call = {
                                name = "operator ()",
                                obj = "()",
                                proc = <function>},
                              line = 19,
                              step = 4}},
                          call = {
                            name = "free_expression",
                            proc = <function>},
                          line = 19,
                          step = 4},
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  line = 20,
                                  name = "UINTEGER",
                                  value = "201"}},
                              call = {
                                name = "constant constexpr uint",
                                obj = "constexpr uint",
                                proc = <function>},
                              line = 20,
                              step = 4},
                            {
                              arg = {
                                {
                                  line = 20,
                                  name = "DQSTRING",
                                  value = "Max allowed allocations reached"}},
                              call = {
                                name = "string_constant",
                                proc = <function>},
                              line = 20,
                              step = 4}},
                          call = {
                            name = "throw_exception",
                            proc = <function>},
                          line = 20,
                          step = 4}},
                      call = {
                        name = "codeblock",
                        proc = <function>},
                      line = 20,
                      scope = {
                        4,
                        5}}},
                  call = {
                    name = "conditional_if",
                    proc = <function>},
                  line = 20,
                  step = 5},
                {
                  arg = {
                    {
                      arg = {
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      line = 22,
                                      name = "IDENT",
                                      value = "byte"}},
                                  call = {
                                    name = "typehdr {const=false}",
                                    obj = {
                                      const = false},
                                    proc = <function>},
                                  line = 22,
                                  step = 5}},
                              call = {
                                name = "typegen_pointer {const=false}",
                                obj = {
                                  const = false},
                                proc = <function>},
                              line = 22,
                              step = 5}},
                          call = {
                            name = "typespec",
                            proc = <function>},
                          line = 22,
                          step = 5},
                        {
                          line = 22,
                          name = "IDENT",
                          value = "rt"},
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  line = 22,
                                  name = "IDENT",
                                  value = "malloc"}},
                              call = {
                                name = "variable",
                                proc = <function>},
                              line = 22,
                              step = 5},
                            {
                              arg = {
                                {
                                  line = 22,
                                  name = "IDENT",
                                  value = "bytes"}},
                              call = {
                                name = "variable",
                                proc = <function>},
                              line = 22,
                              step = 5}},
                          call = {
                            name = "operator ()",
                            obj = "()",
                            proc = <function>},
                          line = 22,
                          step = 5}},
                      call = {
                        name = "vardef_assign",
                        proc = <function>},
                      line = 22,
                      step = 6}},
                  call = {
                    name = "definition 1",
                    obj = 1,
                    proc = <function>},
                  line = 22,
                  step = 7},
                {
                  arg = {
                    {
                      arg = {
                        {
                          arg = {
                            {
                              line = 23,
                              name = "IDENT",
                              value = "rt"}},
                          call = {
                            name = "variable",
                            proc = <function>},
                          line = 23,
                          step = 7},
                        {
                          arg = {},
                          call = {
                            name = "null",
                            proc = <function>},
                          line = 23,
                          step = 7}},
                      call = {
                        name = "binop ==",
                        obj = "==",
                        proc = <function>},
                      line = 23,
                      step = 7},
                    {
                      arg = {
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      line = 25,
                                      name = "IDENT",
                                      value = "printf"}},
                                  call = {
                                    name = "variable",
                                    proc = <function>},
                                  line = 25,
                                  step = 7},
                                {
                                  arg = {
                                    {
                                      line = 25,
                                      name = "DQSTRING",
                                      value = "Throw: %s\\n"}},
                                  call = {
                                    name = "string_constant",
                                    proc = <function>},
                                  line = 25,
                                  step = 7},
                                {
                                  arg = {
                                    {
                                      line = 25,
                                      name = "DQSTRING",
                                      value = "Out of memory"}},
                                  call = {
                                    name = "string_constant",
                                    proc = <function>},
                                  line = 25,
                                  step = 7}},
                              call = {
                                name = "operator ()",
                                obj = "()",
                                proc = <function>},
                              line = 25,
                              step = 7}},
                          call = {
                            name = "free_expression",
                            proc = <function>},
                          line = 25,
                          step = 7},
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  line = 26,
                                  name = "UINTEGER",
                                  value = "12"}},
                              call = {
                                name = "constant constexpr uint",
                                obj = "constexpr uint",
                                proc = <function>},
                              line = 26,
                              step = 7},
                            {
                              arg = {
                                {
                                  line = 26,
                                  name = "DQSTRING",
                                  value = "Out of memory"}},
                              call = {
                                name = "string_constant",
                                proc = <function>},
                              line = 26,
                              step = 7}},
                          call = {
                            name = "throw_exception",
                            proc = <function>},
                          line = 26,
                          step = 7}},
                      call = {
                        name = "codeblock",
                        proc = <function>},
                      line = 26,
                      scope = {
                        7,
                        8}}},
                  call = {
                    name = "conditional_if",
                    proc = <function>},
                  line = 26,
                  step = 8},
                {
                  arg = {
                    {
                      arg = {
                        {
                          line = 28,
                          name = "IDENT",
                          value = "rt"}},
                      call = {
                        name = "variable",
                        proc = <function>},
                      line = 28,
                      step = 8}},
                  call = {
                    name = "return_value",
                    proc = <function>},
                  line = 28,
                  step = 9}},
              call = {
                name = "callablebody",
                proc = <function>},
              line = 28,
              scope = {
                3,
                10}}},
          call = {
            name = "funcdef",
            proc = <function>},
          id = 1,
          line = 28,
          step = 10}},
      call = {
        name = "definition 1",
        obj = 1,
        proc = <function>},
      line = 28,
      step = 10},
    {
      arg = {
        {
          arg = {
            {
              arg = {},
              call = {
                name = "linkage {private=true,linkage="internal",explicit=true}",
                obj = {
                  explicit = true,
                  linkage = "internal",
                  private = true},
                proc = <function>},
              line = 28,
              step = 10},
            {
              line = 30,
              name = "IDENT",
              value = "freemem"},
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      line = 30,
                                      name = "IDENT",
                                      value = "byte"}},
                                  call = {
                                    name = "typehdr {const=false}",
                                    obj = {
                                      const = false},
                                    proc = <function>},
                                  line = 30,
                                  step = 10}},
                              call = {
                                name = "typegen_pointer {const=false}",
                                obj = {
                                  const = false},
                                proc = <function>},
                              line = 30,
                              step = 10}},
                          call = {
                            name = "typespec",
                            proc = <function>},
                          line = 30,
                          step = 10},
                        {
                          line = 30,
                          name = "IDENT",
                          value = "ptr"}},
                      call = {
                        name = "paramdef",
                        proc = <function>},
                      line = 30,
                      step = 10}},
                  call = {
                    name = "paramdeflist",
                    proc = <function>},
                  line = 30,
                  step = 10},
                {
                  arg = {
                    {
                      arg = {},
                      call = {
                        name = "funcattribute {const=false,throws=true}",
                        obj = {
                          const = false,
                          throws = true},
                        proc = <function>},
                      line = 30,
                      step = 10}},
                  call = {
                    name = "funcattribute {throws=false}",
                    obj = {
                      throws = false},
                    proc = <function>},
                  line = 30,
                  step = 10},
                {
                  arg = {
                    {
                      arg = {
                        {
                          arg = {
                            {
                              line = 32,
                              name = "IDENT",
                              value = "free"}},
                          call = {
                            name = "variable",
                            proc = <function>},
                          line = 32,
                          step = 10},
                        {
                          arg = {
                            {
                              line = 32,
                              name = "IDENT",
                              value = "ptr"}},
                          call = {
                            name = "variable",
                            proc = <function>},
                          line = 32,
                          step = 10}},
                      call = {
                        name = "operator ()",
                        obj = "()",
                        proc = <function>},
                      line = 32,
                      step = 10}},
                  call = {
                    name = "free_expression",
                    proc = <function>},
                  line = 32,
                  step = 10}},
              call = {
                name = "callablebody",
                proc = <function>},
              line = 32,
              scope = {
                10,
                11}}},
          call = {
            name = "procdef",
            proc = <function>},
          id = 2,
          line = 32,
          step = 11}},
      call = {
        name = "definition 1",
        obj = 1,
        proc = <function>},
      line = 32,
      step = 11},
    {
      arg = {
        {
          line = 36,
          name = "IDENT",
          value = "std"},
        {
          arg = {
            {
              arg = {
                {
                  line = 37,
                  name = "IDENT",
                  value = "String"},
                {
                  arg = {
                    {
                      arg = {
                        {
                          arg = {},
                          call = {
                            name = "linkage {private=false,linkage="external",explicit=true}",
                            obj = {
                              explicit = true,
                              linkage = "external",
                              private = false},
                            proc = <function>},
                          line = 37,
                          step = 11},
                        {
                          arg = {
                            {
                              arg = {},
                              call = {
                                name = "paramdeflist",
                                proc = <function>},
                              line = 37,
                              step = 11},
                            {
                              arg = {
                                {
                                  arg = {},
                                  call = {
                                    name = "funcattribute {const=false,throws=true}",
                                    obj = {
                                      const = false,
                                      throws = true},
                                    proc = <function>},
                                  line = 37,
                                  step = 11}},
                              call = {
                                name = "funcattribute {throws=false}",
                                obj = {
                                  throws = false},
                                proc = <function>},
                              line = 37,
                              step = 11},
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          line = 41,
                                          name = "IDENT",
                                          value = "printf"}},
                                      call = {
                                        name = "variable",
                                        proc = <function>},
                                      line = 41,
                                      step = 11},
                                    {
                                      arg = {
                                        {
                                          line = 41,
                                          name = "DQSTRING",
                                          value = "Default constructor string\\n"}},
                                      call = {
                                        name = "string_constant",
                                        proc = <function>},
                                      line = 41,
                                      step = 11}},
                                  call = {
                                    name = "operator ()",
                                    obj = "()",
                                    proc = <function>},
                                  line = 41,
                                  step = 11}},
                              call = {
                                name = "free_expression",
                                proc = <function>},
                              line = 41,
                              step = 11},
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          line = 42,
                                          name = "IDENT",
                                          value = "m_ptr"}},
                                      call = {
                                        name = "variable",
                                        proc = <function>},
                                      line = 42,
                                      step = 11},
                                    {
                                      arg = {},
                                      call = {
                                        name = "null",
                                        proc = <function>},
                                      line = 42,
                                      step = 11}},
                                  call = {
                                    name = "binop =",
                                    obj = "=",
                                    proc = <function>},
                                  line = 42,
                                  step = 12}},
                              call = {
                                name = "free_expression",
                                proc = <function>},
                              line = 42,
                              step = 12},
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          line = 43,
                                          name = "IDENT",
                                          value = "m_size"}},
                                      call = {
                                        name = "variable",
                                        proc = <function>},
                                      line = 43,
                                      step = 12},
                                    {
                                      arg = {
                                        {
                                          line = 43,
                                          name = "UINTEGER",
                                          value = "0"}},
                                      call = {
                                        name = "constant constexpr uint",
                                        obj = "constexpr uint",
                                        proc = <function>},
                                      line = 43,
                                      step = 12}},
                                  call = {
                                    name = "binop =",
                                    obj = "=",
                                    proc = <function>},
                                  line = 43,
                                  step = 13}},
                              call = {
                                name = "free_expression",
                                proc = <function>},
                              line = 43,
                              step = 13}},
                          call = {
                            name = "callablebody",
                            proc = <function>},
                          line = 43,
                          scope = {
                            11,
                            14}}},
                      call = {
                        name = "constructordef",
                        proc = <function>},
                      id = 3,
                      line = 43,
                      step = 14}},
                  call = {
                    name = "definition_decl_impl_pass 4",
                    obj = 4,
                    proc = <function>},
                  line = 43,
                  step = 14},
                {
                  arg = {
                    {
                      arg = {
                        {
                          arg = {},
                          call = {
                            name = "linkage {private=false,linkage="external",explicit=true}",
                            obj = {
                              explicit = true,
                              linkage = "external",
                              private = false},
                            proc = <function>},
                          line = 43,
                          step = 14},
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          arg = {
                                            {
                                              arg = {
                                                {
                                                  line = 45,
                                                  name = "IDENT",
                                                  value = "byte"}},
                                              call = {
                                                name = "typehdr {const=true}",
                                                obj = {
                                                  const = true},
                                                proc = <function>},
                                              line = 45,
                                              step = 14}},
                                          call = {
                                            name = "typegen_pointer {const=false}",
                                            obj = {
                                              const = false},
                                            proc = <function>},
                                          line = 45,
                                          step = 14}},
                                      call = {
                                        name = "typespec",
                                        proc = <function>},
                                      line = 45,
                                      step = 14},
                                    {
                                      line = 45,
                                      name = "IDENT",
                                      value = "cstr_"}},
                                  call = {
                                    name = "paramdef",
                                    proc = <function>},
                                  line = 45,
                                  step = 14}},
                              call = {
                                name = "paramdeflist",
                                proc = <function>},
                              line = 45,
                              step = 14},
                            {
                              arg = {},
                              call = {
                                name = "funcattribute {const=false,throws=true}",
                                obj = {
                                  const = false,
                                  throws = true},
                                proc = <function>},
                              line = 45,
                              step = 14},
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          arg = {
                                            {
                                              line = 47,
                                              name = "IDENT",
                                              value = "int"}},
                                          call = {
                                            name = "typehdr {const=false}",
                                            obj = {
                                              const = false},
                                            proc = <function>},
                                          line = 47,
                                          step = 14}},
                                      call = {
                                        name = "typespec",
                                        proc = <function>},
                                      line = 47,
                                      step = 14},
                                    {
                                      line = 47,
                                      name = "IDENT",
                                      value = "size_"},
                                    {
                                      arg = {
                                        {
                                          arg = {
                                            {
                                              line = 47,
                                              name = "IDENT",
                                              value = "strlen"}},
                                          call = {
                                            name = "variable",
                                            proc = <function>},
                                          line = 47,
                                          step = 14},
                                        {
                                          arg = {
                                            {
                                              line = 47,
                                              name = "IDENT",
                                              value = "cstr_"}},
                                          call = {
                                            name = "variable",
                                            proc = <function>},
                                          line = 47,
                                          step = 14}},
                                      call = {
                                        name = "operator ()",
                                        obj = "()",
                                        proc = <function>},
                                      line = 47,
                                      step = 14}},
                                  call = {
                                    name = "vardef_assign",
                                    proc = <function>},
                                  line = 47,
                                  step = 15}},
                              call = {
                                name = "definition 1",
                                obj = 1,
                                proc = <function>},
                              line = 47,
                              step = 16},
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          line = 48,
                                          name = "IDENT",
                                          value = "m_ptr"}},
                                      call = {
                                        name = "variable",
                                        proc = <function>},
                                      line = 48,
                                      step = 16},
                                    {
                                      arg = {
                                        {
                                          arg = {
                                            {
                                              line = 48,
                                              name = "IDENT",
                                              value = "allocmem"}},
                                          call = {
                                            name = "variable",
                                            proc = <function>},
                                          line = 48,
                                          step = 16},
                                        {
                                          arg = {
                                            {
                                              arg = {
                                                {
                                                  line = 48,
                                                  name = "IDENT",
                                                  value = "size_"}},
                                              call = {
                                                name = "variable",
                                                proc = <function>},
                                              line = 48,
                                              step = 16},
                                            {
                                              arg = {
                                                {
                                                  line = 48,
                                                  name = "UINTEGER",
                                                  value = "1"}},
                                              call = {
                                                name = "constant constexpr uint",
                                                obj = "constexpr uint",
                                                proc = <function>},
                                              line = 48,
                                              step = 16}},
                                          call = {
                                            name = "binop +",
                                            obj = "+",
                                            proc = <function>},
                                          line = 48,
                                          step = 16}},
                                      call = {
                                        name = "operator ()",
                                        obj = "()",
                                        proc = <function>},
                                      line = 48,
                                      step = 16}},
                                  call = {
                                    name = "binop =",
                                    obj = "=",
                                    proc = <function>},
                                  line = 48,
                                  step = 17}},
                              call = {
                                name = "free_expression",
                                proc = <function>},
                              line = 48,
                              step = 17},
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          line = 49,
                                          name = "IDENT",
                                          value = "m_size"}},
                                      call = {
                                        name = "variable",
                                        proc = <function>},
                                      line = 49,
                                      step = 17},
                                    {
                                      arg = {
                                        {
                                          line = 49,
                                          name = "IDENT",
                                          value = "size_"}},
                                      call = {
                                        name = "variable",
                                        proc = <function>},
                                      line = 49,
                                      step = 17}},
                                  call = {
                                    name = "binop =",
                                    obj = "=",
                                    proc = <function>},
                                  line = 49,
                                  step = 18}},
                              call = {
                                name = "free_expression",
                                proc = <function>},
                              line = 49,
                              step = 18},
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          line = 50,
                                          name = "IDENT",
                                          value = "memcpy"}},
                                      call = {
                                        name = "variable",
                                        proc = <function>},
                                      line = 50,
                                      step = 18},
                                    {
                                      arg = {
                                        {
                                          line = 50,
                                          name = "IDENT",
                                          value = "m_ptr"}},
                                      call = {
                                        name = "variable",
                                        proc = <function>},
                                      line = 50,
                                      step = 18},
                                    {
                                      arg = {
                                        {
                                          line = 50,
                                          name = "IDENT",
                                          value = "cstr_"}},
                                      call = {
                                        name = "variable",
                                        proc = <function>},
                                      line = 50,
                                      step = 18},
                                    {
                                      arg = {
                                        {
                                          line = 50,
                                          name = "IDENT",
                                          value = "size_"}},
                                      call = {
                                        name = "variable",
                                        proc = <function>},
                                      line = 50,
                                      step = 18}},
                                  call = {
                                    name = "operator ()",
                                    obj = "()",
                                    proc = <function>},
                                  line = 50,
                                  step = 18}},
                              call = {
                                name = "free_expression",
                                proc = <function>},
                              line = 50,
                              step = 18},
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          arg = {
                                            {
                                              line = 51,
                                              name = "IDENT",
                                              value = "m_ptr"}},
                                          call = {
                                            name = "variable",
                                            proc = <function>},
                                          line = 51,
                                          step = 18},
                                        {
                                          arg = {
                                            {
                                              line = 51,
                                              name = "IDENT",
                                              value = "size_"}},
                                          call = {
                                            name = "variable",
                                            proc = <function>},
                                          line = 51,
                                          step = 18}},
                                      call = {
                                        name = "operator_array []",
                                        obj = "[]",
                                        proc = <function>},
                                      line = 51,
                                      step = 18},
                                    {
                                      arg = {
                                        {
                                          line = 51,
                                          name = "UINTEGER",
                                          value = "0"}},
                                      call = {
                                        name = "constant constexpr uint",
                                        obj = "constexpr uint",
                                        proc = <function>},
                                      line = 51,
                                      step = 18}},
                                  call = {
                                    name = "binop =",
                                    obj = "=",
                                    proc = <function>},
                                  line = 51,
                                  step = 19}},
                              call = {
                                name = "free_expression",
                                proc = <function>},
                              line = 51,
                              step = 19},
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          line = 52,
                                          name = "IDENT",
                                          value = "printf"}},
                                      call = {
                                        name = "variable",
                                        proc = <function>},
                                      line = 52,
                                      step = 19},
                                    {
                                      arg = {
                                        {
                                          line = 52,
                                          name = "DQSTRING",
                                          value = "Constructor string [%s]\\n"}},
                                      call = {
                                        name = "string_constant",
                                        proc = <function>},
                                      line = 52,
                                      step = 19},
                                    {
                                      arg = {
                                        {
                                          arg = {
                                            {
                                              line = 52,
                                              name = "IDENT",
                                              value = "c_str"}},
                                          call = {
                                            name = "variable",
                                            proc = <function>},
                                          line = 52,
                                          step = 19}},
                                      call = {
                                        name = "operator ()",
                                        obj = "()",
                                        proc = <function>},
                                      line = 52,
                                      step = 19}},
                                  call = {
                                    name = "operator ()",
                                    obj = "()",
                                    proc = <function>},
                                  line = 52,
                                  step = 19}},
                              call = {
                                name = "free_expression",
                                proc = <function>},
                              line = 52,
                              step = 19}},
                          call = {
                            name = "callablebody",
                            proc = <function>},
                          line = 52,
                          scope = {
                            14,
                            20}}},
                      call = {
                        name = "constructordef",
                        proc = <function>},
                      id = 4,
                      line = 52,
                      step = 20}},
                  call = {
                    name = "definition_decl_impl_pass 4",
                    obj = 4,
                    proc = <function>},
                  line = 52,
                  step = 20},
                {
                  arg = {
                    {
                      arg = {
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          line = 56,
                                          name = "IDENT",
                                          value = "printf"}},
                                      call = {
                                        name = "variable",
                                        proc = <function>},
                                      line = 56,
                                      step = 20},
                                    {
                                      arg = {
                                        {
                                          line = 56,
                                          name = "DQSTRING",
                                          value = "Destructor string [%s]\\n"}},
                                      call = {
                                        name = "string_constant",
                                        proc = <function>},
                                      line = 56,
                                      step = 20},
                                    {
                                      arg = {
                                        {
                                          arg = {
                                            {
                                              line = 56,
                                              name = "IDENT",
                                              value = "c_str"}},
                                          call = {
                                            name = "variable",
                                            proc = <function>},
                                          line = 56,
                                          step = 20}},
                                      call = {
                                        name = "operator ()",
                                        obj = "()",
                                        proc = <function>},
                                      line = 56,
                                      step = 20}},
                                  call = {
                                    name = "operator ()",
                                    obj = "()",
                                    proc = <function>},
                                  line = 56,
                                  step = 20}},
                              call = {
                                name = "free_expression",
                                proc = <function>},
                              line = 56,
                              step = 20},
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          line = 57,
                                          name = "IDENT",
                                          value = "freemem"}},
                                      call = {
                                        name = "variable",
                                        proc = <function>},
                                      line = 57,
                                      step = 20},
                                    {
                                      arg = {
                                        {
                                          line = 57,
                                          name = "IDENT",
                                          value = "m_ptr"}},
                                      call = {
                                        name = "variable",
                                        proc = <function>},
                                      line = 57,
                                      step = 20}},
                                  call = {
                                    name = "operator ()",
                                    obj = "()",
                                    proc = <function>},
                                  line = 57,
                                  step = 20}},
                              call = {
                                name = "free_expression",
                                proc = <function>},
                              line = 57,
                              step = 20}},
                          call = {
                            name = "codeblock",
                            proc = <function>},
                          line = 57,
                          scope = {
                            20,
                            21}}},
                      call = {
                        name = "destructordef {linkage="external"}",
                        obj = {
                          linkage = "external"},
                        proc = <function>},
                      id = 5,
                      line = 57,
                      step = 21}},
                  call = {
                    name = "definition_decl_impl_pass 4",
                    obj = 4,
                    proc = <function>},
                  line = 57,
                  step = 21},
                {
                  arg = {
                    {
                      arg = {
                        {
                          arg = {},
                          call = {
                            name = "linkage {private=false,linkage="external",explicit=true}",
                            obj = {
                              explicit = true,
                              linkage = "external",
                              private = false},
                            proc = <function>},
                          line = 57,
                          step = 21},
                        {
                          line = 59,
                          name = "IDENT",
                          value = "c_str"},
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      line = 59,
                                      name = "IDENT",
                                      value = "byte"}},
                                  call = {
                                    name = "typehdr {const=true}",
                                    obj = {
                                      const = true},
                                    proc = <function>},
                                  line = 59,
                                  step = 21}},
                              call = {
                                name = "typegen_pointer {const=false}",
                                obj = {
                                  const = false},
                                proc = <function>},
                              line = 59,
                              step = 21}},
                          call = {
                            name = "typespec",
                            proc = <function>},
                          line = 59,
                          step = 21},
                        {
                          arg = {
                            {
                              arg = {},
                              call = {
                                name = "paramdeflist",
                                proc = <function>},
                              line = 59,
                              step = 21},
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {},
                                      call = {
                                        name = "funcattribute {const=false,throws=true}",
                                        obj = {
                                          const = false,
                                          throws = true},
                                        proc = <function>},
                                      line = 59,
                                      step = 21}},
                                  call = {
                                    name = "funcattribute {throws=false}",
                                    obj = {
                                      throws = false},
                                    proc = <function>},
                                  line = 59,
                                  step = 21}},
                              call = {
                                name = "funcattribute {const=true}",
                                obj = {
                                  const = true},
                                proc = <function>},
                              line = 59,
                              step = 21},
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          line = 61,
                                          name = "IDENT",
                                          value = "printf"}},
                                      call = {
                                        name = "variable",
                                        proc = <function>},
                                      line = 61,
                                      step = 21},
                                    {
                                      arg = {
                                        {
                                          line = 61,
                                          name = "DQSTRING",
                                          value = "Get string\\n"}},
                                      call = {
                                        name = "string_constant",
                                        proc = <function>},
                                      line = 61,
                                      step = 21}},
                                  call = {
                                    name = "operator ()",
                                    obj = "()",
                                    proc = <function>},
                                  line = 61,
                                  step = 21}},
                              call = {
                                name = "free_expression",
                                proc = <function>},
                              line = 61,
                              step = 21},
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          line = 62,
                                          name = "IDENT",
                                          value = "m_ptr"}},
                                      call = {
                                        name = "variable",
                                        proc = <function>},
                                      line = 62,
                                      step = 21},
                                    {
                                      arg = {},
                                      call = {
                                        name = "null",
                                        proc = <function>},
                                      line = 62,
                                      step = 21}},
                                  call = {
                                    name = "binop !=",
                                    obj = "!=",
                                    proc = <function>},
                                  line = 62,
                                  step = 21},
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          arg = {
                                            {
                                              line = 64,
                                              name = "IDENT",
                                              value = "m_ptr"}},
                                          call = {
                                            name = "variable",
                                            proc = <function>},
                                          line = 64,
                                          step = 21}},
                                      call = {
                                        name = "return_value",
                                        proc = <function>},
                                      line = 64,
                                      step = 22}},
                                  call = {
                                    name = "codeblock",
                                    proc = <function>},
                                  line = 64,
                                  scope = {
                                    21,
                                    23}},
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          arg = {
                                            {
                                              arg = {
                                                {
                                                  line = 68,
                                                  name = "DQSTRING",
                                                  value = ""}},
                                              call = {
                                                name = "string_constant",
                                                proc = <function>},
                                              line = 68,
                                              step = 23}},
                                          call = {
                                            name = "return_value",
                                            proc = <function>},
                                          line = 68,
                                          step = 24}},
                                      call = {
                                        name = "codeblock",
                                        proc = <function>},
                                      line = 68,
                                      scope = {
                                        23,
                                        25}}},
                                  call = {
                                    name = "conditional_else",
                                    proc = <function>},
                                  line = 68,
                                  step = 25}},
                              call = {
                                name = "conditional_if",
                                proc = <function>},
                              line = 68,
                              step = 25}},
                          call = {
                            name = "callablebody",
                            proc = <function>},
                          line = 68,
                          scope = {
                            21,
                            26}}},
                      call = {
                        name = "funcdef",
                        proc = <function>},
                      id = 6,
                      line = 68,
                      step = 26}},
                  call = {
                    name = "definition_decl_impl_pass 4",
                    obj = 4,
                    proc = <function>},
                  line = 68,
                  step = 26},
                {
                  arg = {
                    {
                      arg = {
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      line = 71,
                                      name = "IDENT",
                                      value = "byte"}},
                                  call = {
                                    name = "typehdr {const=false}",
                                    obj = {
                                      const = false},
                                    proc = <function>},
                                  line = 71,
                                  step = 26}},
                              call = {
                                name = "typegen_pointer {const=false}",
                                obj = {
                                  const = false},
                                proc = <function>},
                              line = 71,
                              step = 26}},
                          call = {
                            name = "typespec",
                            proc = <function>},
                          line = 71,
                          step = 26},
                        {
                          line = 71,
                          name = "IDENT",
                          value = "m_ptr"}},
                      call = {
                        name = "vardef",
                        proc = <function>},
                      line = 71,
                      step = 27}},
                  call = {
                    name = "definition 2",
                    obj = 2,
                    proc = <function>},
                  line = 71,
                  step = 27},
                {
                  arg = {
                    {
                      arg = {
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  line = 72,
                                  name = "IDENT",
                                  value = "int"}},
                              call = {
                                name = "typehdr {const=false}",
                                obj = {
                                  const = false},
                                proc = <function>},
                              line = 72,
                              step = 27}},
                          call = {
                            name = "typespec",
                            proc = <function>},
                          line = 72,
                          step = 27},
                        {
                          line = 72,
                          name = "IDENT",
                          value = "m_size"}},
                      call = {
                        name = "vardef",
                        proc = <function>},
                      line = 72,
                      step = 28}},
                  call = {
                    name = "definition 2",
                    obj = 2,
                    proc = <function>},
                  line = 72,
                  step = 28}},
              call = {
                name = "classdef",
                proc = <function>},
              line = 72,
              step = 29}},
          call = {
            name = "definition 1",
            obj = 1,
            proc = <function>},
          line = 72,
          step = 29}},
      call = {
        name = "namespacedef",
        proc = <function>},
      line = 72,
      step = 30},
    {
      arg = {
        {
          arg = {
            {
              arg = {},
              call = {
                name = "linkage {private=true,linkage="internal",explicit=true}",
                obj = {
                  explicit = true,
                  linkage = "internal",
                  private = true},
                proc = <function>},
              line = 72,
              step = 30},
            {
              line = 76,
              name = "IDENT",
              value = "test"},
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  line = 76,
                                  name = "IDENT",
                                  value = "int"}},
                              call = {
                                name = "typehdr {const=false}",
                                obj = {
                                  const = false},
                                proc = <function>},
                              line = 76,
                              step = 30}},
                          call = {
                            name = "typespec",
                            proc = <function>},
                          line = 76,
                          step = 30},
                        {
                          line = 76,
                          name = "IDENT",
                          value = "allocCnt"}},
                      call = {
                        name = "paramdef",
                        proc = <function>},
                      line = 76,
                      step = 30}},
                  call = {
                    name = "paramdeflist",
                    proc = <function>},
                  line = 76,
                  step = 30},
                {
                  arg = {
                    {
                      arg = {},
                      call = {
                        name = "funcattribute {const=false,throws=true}",
                        obj = {
                          const = false,
                          throws = true},
                        proc = <function>},
                      line = 76,
                      step = 30}},
                  call = {
                    name = "funcattribute {throws=false}",
                    obj = {
                      throws = false},
                    proc = <function>},
                  line = 76,
                  step = 30},
                {
                  arg = {
                    {
                      arg = {
                        {
                          arg = {
                            {
                              line = 78,
                              name = "IDENT",
                              value = "g_maxAllocCnt"}},
                          call = {
                            name = "variable",
                            proc = <function>},
                          line = 78,
                          step = 30},
                        {
                          arg = {
                            {
                              line = 78,
                              name = "IDENT",
                              value = "allocCnt"}},
                          call = {
                            name = "variable",
                            proc = <function>},
                          line = 78,
                          step = 30}},
                      call = {
                        name = "binop =",
                        obj = "=",
                        proc = <function>},
                      line = 78,
                      step = 31}},
                  call = {
                    name = "free_expression",
                    proc = <function>},
                  line = 78,
                  step = 31},
                {
                  arg = {
                    {
                      arg = {
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          arg = {
                                            {
                                              line = 81,
                                              name = "IDENT",
                                              value = "std"},
                                            {
                                              line = 81,
                                              name = "IDENT",
                                              value = "String"}},
                                          call = {
                                            name = "typehdr {const=false}",
                                            obj = {
                                              const = false},
                                            proc = <function>},
                                          line = 81,
                                          step = 31}},
                                      call = {
                                        name = "typespec",
                                        proc = <function>},
                                      line = 81,
                                      step = 31},
                                    {
                                      line = 81,
                                      name = "IDENT",
                                      value = "str"},
                                    {
                                      arg = {
                                        {
                                          line = 81,
                                          name = "DQSTRING",
                                          value = "Hello world!"}},
                                      call = {
                                        name = "string_constant",
                                        proc = <function>},
                                      line = 81,
                                      step = 31}},
                                  call = {
                                    name = "vardef_assign",
                                    proc = <function>},
                                  line = 81,
                                  step = 32}},
                              call = {
                                name = "definition 1",
                                obj = 1,
                                proc = <function>},
                              line = 81,
                              step = 33},
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          line = 82,
                                          name = "IDENT",
                                          value = "printf"}},
                                      call = {
                                        name = "variable",
                                        proc = <function>},
                                      line = 82,
                                      step = 33},
                                    {
                                      arg = {
                                        {
                                          line = 82,
                                          name = "DQSTRING",
                                          value = "DEBUG\\n"}},
                                      call = {
                                        name = "string_constant",
                                        proc = <function>},
                                      line = 82,
                                      step = 33}},
                                  call = {
                                    name = "operator ()",
                                    obj = "()",
                                    proc = <function>},
                                  line = 82,
                                  step = 33}},
                              call = {
                                name = "free_expression",
                                proc = <function>},
                              line = 82,
                              step = 33},
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          arg = {
                                            {
                                              arg = {
                                                {
                                                  line = 83,
                                                  name = "IDENT",
                                                  value = "std"},
                                                {
                                                  line = 83,
                                                  name = "IDENT",
                                                  value = "String"}},
                                              call = {
                                                name = "typehdr {const=false}",
                                                obj = {
                                                  const = false},
                                                proc = <function>},
                                              line = 83,
                                              step = 33},
                                            {
                                              arg = {
                                                {
                                                  arg = {
                                                    {
                                                      line = 83,
                                                      name = "UINTEGER",
                                                      value = "20"}},
                                                  call = {
                                                    name = "generic_instance_dimension",
                                                    proc = <function>},
                                                  line = 83,
                                                  step = 33}},
                                              call = {
                                                name = "generic_instance",
                                                proc = <function>},
                                              line = 83,
                                              step = 33}},
                                          call = {
                                            name = "typegen_generic",
                                            proc = <function>},
                                          line = 83,
                                          step = 33}},
                                      call = {
                                        name = "typespec",
                                        proc = <function>},
                                      line = 83,
                                      step = 33},
                                    {
                                      line = 83,
                                      name = "IDENT",
                                      value = "ar"},
                                    {
                                      arg = {
                                        {
                                          arg = {
                                            {
                                              line = 83,
                                              name = "DQSTRING",
                                              value = "H"}},
                                          call = {
                                            name = "string_constant",
                                            proc = <function>},
                                          line = 83,
                                          step = 33},
                                        {
                                          arg = {
                                            {
                                              line = 83,
                                              name = "DQSTRING",
                                              value = "e"}},
                                          call = {
                                            name = "string_constant",
                                            proc = <function>},
                                          line = 83,
                                          step = 33},
                                        {
                                          arg = {
                                            {
                                              line = 83,
                                              name = "DQSTRING",
                                              value = "l"}},
                                          call = {
                                            name = "string_constant",
                                            proc = <function>},
                                          line = 83,
                                          step = 33},
                                        {
                                          arg = {
                                            {
                                              line = 83,
                                              name = "DQSTRING",
                                              value = "l"}},
                                          call = {
                                            name = "string_constant",
                                            proc = <function>},
                                          line = 83,
                                          step = 33},
                                        {
                                          arg = {
                                            {
                                              line = 83,
                                              name = "DQSTRING",
                                              value = "o"}},
                                          call = {
                                            name = "string_constant",
                                            proc = <function>},
                                          line = 83,
                                          step = 33},
                                        {
                                          arg = {
                                            {
                                              line = 83,
                                              name = "DQSTRING",
                                              value = " "}},
                                          call = {
                                            name = "string_constant",
                                            proc = <function>},
                                          line = 83,
                                          step = 33},
                                        {
                                          arg = {
                                            {
                                              line = 83,
                                              name = "DQSTRING",
                                              value = "w"}},
                                          call = {
                                            name = "string_constant",
                                            proc = <function>},
                                          line = 83,
                                          step = 33},
                                        {
                                          arg = {
                                            {
                                              line = 83,
                                              name = "DQSTRING",
                                              value = "o"}},
                                          call = {
                                            name = "string_constant",
                                            proc = <function>},
                                          line = 83,
                                          step = 33},
                                        {
                                          arg = {
                                            {
                                              line = 83,
                                              name = "DQSTRING",
                                              value = "r"}},
                                          call = {
                                            name = "string_constant",
                                            proc = <function>},
                                          line = 83,
                                          step = 33},
                                        {
                                          arg = {
                                            {
                                              line = 83,
                                              name = "DQSTRING",
                                              value = "l"}},
                                          call = {
                                            name = "string_constant",
                                            proc = <function>},
                                          line = 83,
                                          step = 33},
                                        {
                                          arg = {
                                            {
                                              line = 83,
                                              name = "DQSTRING",
                                              value = "d!"}},
                                          call = {
                                            name = "string_constant",
                                            proc = <function>},
                                          line = 83,
                                          step = 33}},
                                      call = {
                                        name = "structure",
                                        proc = <function>},
                                      line = 83,
                                      step = 33}},
                                  call = {
                                    name = "vardef_assign",
                                    proc = <function>},
                                  line = 83,
                                  step = 34}},
                              call = {
                                name = "definition 1",
                                obj = 1,
                                proc = <function>},
                              line = 83,
                              step = 35},
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          line = 84,
                                          name = "IDENT",
                                          value = "printf"}},
                                      call = {
                                        name = "variable",
                                        proc = <function>},
                                      line = 84,
                                      step = 35},
                                    {
                                      arg = {
                                        {
                                          line = 84,
                                          name = "DQSTRING",
                                          value = "%s\\n"}},
                                      call = {
                                        name = "string_constant",
                                        proc = <function>},
                                      line = 84,
                                      step = 35},
                                    {
                                      arg = {
                                        {
                                          arg = {
                                            {
                                              arg = {
                                                {
                                                  line = 84,
                                                  name = "IDENT",
                                                  value = "str"}},
                                              call = {
                                                name = "variable",
                                                proc = <function>},
                                              line = 84,
                                              step = 35},
                                            {
                                              line = 84,
                                              name = "IDENT",
                                              value = "c_str"}},
                                          call = {
                                            name = "member",
                                            proc = <function>},
                                          line = 84,
                                          step = 35}},
                                      call = {
                                        name = "operator ()",
                                        obj = "()",
                                        proc = <function>},
                                      line = 84,
                                      step = 35}},
                                  call = {
                                    name = "operator ()",
                                    obj = "()",
                                    proc = <function>},
                                  line = 84,
                                  step = 35}},
                              call = {
                                name = "free_expression",
                                proc = <function>},
                              line = 84,
                              step = 35}},
                          call = {
                            name = "codeblock",
                            proc = <function>},
                          line = 84,
                          scope = {
                            31,
                            36}}},
                      call = {
                        name = "tryblock",
                        proc = <function>},
                      line = 84,
                      step = 36},
                    {
                      arg = {
                        {
                          line = 87,
                          name = "IDENT",
                          value = "errcode"},
                        {
                          line = 87,
                          name = "IDENT",
                          value = "errmsg"},
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          line = 89,
                                          name = "IDENT",
                                          value = "printf"}},
                                      call = {
                                        name = "variable",
                                        proc = <function>},
                                      line = 89,
                                      step = 36},
                                    {
                                      arg = {
                                        {
                                          line = 89,
                                          name = "DQSTRING",
                                          value = "ERR %ld %ld %s\\n"}},
                                      call = {
                                        name = "string_constant",
                                        proc = <function>},
                                      line = 89,
                                      step = 36},
                                    {
                                      arg = {
                                        {
                                          line = 89,
                                          name = "IDENT",
                                          value = "g_exceptionCode"}},
                                      call = {
                                        name = "variable",
                                        proc = <function>},
                                      line = 89,
                                      step = 36},
                                    {
                                      arg = {
                                        {
                                          line = 89,
                                          name = "IDENT",
                                          value = "errcode"}},
                                      call = {
                                        name = "variable",
                                        proc = <function>},
                                      line = 89,
                                      step = 36},
                                    {
                                      arg = {
                                        {
                                          line = 89,
                                          name = "IDENT",
                                          value = "errmsg"}},
                                      call = {
                                        name = "variable",
                                        proc = <function>},
                                      line = 89,
                                      step = 36}},
                                  call = {
                                    name = "operator ()",
                                    obj = "()",
                                    proc = <function>},
                                  line = 89,
                                  step = 36}},
                              call = {
                                name = "free_expression",
                                proc = <function>},
                              line = 89,
                              step = 36}},
                          call = {
                            name = "codeblock",
                            proc = <function>},
                          line = 89,
                          scope = {
                            36,
                            37}}},
                      call = {
                        name = "catchblock",
                        proc = <function>},
                      line = 89,
                      step = 38}},
                  call = {
                    name = "trycatch",
                    proc = <function>},
                  line = 89,
                  scope = {
                    31,
                    39}}},
              call = {
                name = "callablebody",
                proc = <function>},
              line = 89,
              scope = {
                30,
                40}}},
          call = {
            name = "procdef",
            proc = <function>},
          id = 7,
          line = 89,
          step = 40}},
      call = {
        name = "definition 1",
        obj = 1,
        proc = <function>},
      line = 89,
      step = 40},
    {
      arg = {
        {
          arg = {
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {
                        {
                          line = 95,
                          name = "IDENT",
                          value = "test"}},
                      call = {
                        name = "variable",
                        proc = <function>},
                      line = 95,
                      step = 40},
                    {
                      arg = {
                        {
                          line = 95,
                          name = "UINTEGER",
                          value = "100"}},
                      call = {
                        name = "constant constexpr uint",
                        obj = "constexpr uint",
                        proc = <function>},
                      line = 95,
                      step = 40}},
                  call = {
                    name = "operator ()",
                    obj = "()",
                    proc = <function>},
                  line = 95,
                  step = 40}},
              call = {
                name = "free_expression",
                proc = <function>},
              line = 95,
              step = 40}},
          call = {
            name = "codeblock",
            proc = <function>},
          line = 95,
          scope = {
            40,
            41}}},
      call = {
        name = "main_procdef",
        proc = <function>},
      line = 95,
      step = 41}},
  call = {
    name = "program",
    proc = <function>},
  line = 95,
  step = 41}
