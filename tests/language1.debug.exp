== Language 'test', type system 'language1/typesystem' ==
-- Lexems:
TOKEN BOOLEAN ((true)|(false)) 0 [tf]  ~ 1
TOKEN IDENT [a-zA-Z_]+[a-zA-Z_0-9]* 0 [abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_]  ~ 2
TOKEN DQSTRING ["]((([^\\"\n]+)|([\\][^"\n]))*)["] 1 ["]  ~ 3
TOKEN SQSTRING [']((([^\\'\n]+)|([\\][^'\n]))*)['] 1 [']  ~ 4
TOKEN CARDINAL [0123456789]+ 0 [0123456789]  ~ 5
TOKEN INTEGER [-][0123456789]+ 0 [-]  ~ 6
TOKEN FLOAT [-]{0,1}[0123456789]+[.][0123456789]+ 0 [-]  ~ 7
TOKEN FLOAT [-]{0,1}[0123456789]+[.][0123456789]+[Ee][+-]{0,1}[0123456789]+ 0 [-]  ~ 7
KEYWORD extern [e] ~ 8
KEYWORD function [f] ~ 9
KEYWORD ( [(] ~ 10
KEYWORD ) [)] ~ 11
KEYWORD ; [;] ~ 12
KEYWORD procedure [p] ~ 13
KEYWORD ... [.] ~ 14
KEYWORD , [,] ~ 15
KEYWORD const [c] ~ 16
KEYWORD operator [o] ~ 17
KEYWORD :: [:] ~ 18
KEYWORD & [&] ~ 19
KEYWORD ^ [^] ~ 20
KEYWORD any [a] ~ 21
KEYWORD class [c] ~ 22
KEYWORD struct [s] ~ 23
KEYWORD typedef [t] ~ 24
KEYWORD { [{] ~ 25
KEYWORD } [}] ~ 26
KEYWORD interface [i] ~ 27
KEYWORD : [:] ~ 28
KEYWORD private [p] ~ 29
KEYWORD public [p] ~ 30
KEYWORD constructor [c] ~ 31
KEYWORD destructor [d] ~ 32
KEYWORD -> [-] ~ 33
KEYWORD = [=] ~ 34
KEYWORD + [+] ~ 35
KEYWORD - [-] ~ 36
KEYWORD * [*] ~ 37
KEYWORD / [/] ~ 38
KEYWORD % [%] ~ 39
KEYWORD && [&] ~ 40
KEYWORD || [|] ~ 41
KEYWORD | [|] ~ 42
KEYWORD << [<] ~ 43
KEYWORD >> [>] ~ 44
KEYWORD ~ [~] ~ 45
KEYWORD ! [!] ~ 46
KEYWORD [ [[] ~ 47
KEYWORD ] []] ~ 48
KEYWORD == [=] ~ 49
KEYWORD != [!] ~ 50
KEYWORD >= [>] ~ 51
KEYWORD <= [<] ~ 52
KEYWORD > [>] ~ 53
KEYWORD < [<] ~ 54
KEYWORD main [m] ~ 55
KEYWORD var [v] ~ 56
KEYWORD return [r] ~ 57
KEYWORD delete [d] ~ 58
KEYWORD if [i] ~ 59
KEYWORD else [e] ~ 60
KEYWORD while [w] ~ 61
KEYWORD new [n] ~ 62
KEYWORD cast [c] ~ 63
KEYWORD null [n] ~ 64
KEYWORD += [+] ~ 65
KEYWORD -= [-] ~ 66
KEYWORD *= [*] ~ 67
KEYWORD /= [/] ~ 68
KEYWORD ^= [^] ~ 69
KEYWORD &= [&] ~ 70
KEYWORD %= [%] ~ 71
KEYWORD &&= [&] ~ 72
KEYWORD ||= [|] ~ 73
KEYWORD |= [|] ~ 74
KEYWORD <<= [<] ~ 75
KEYWORD >>= [>] ~ 76
KEYWORD . [.] ~ 77
COMMENT /* */ [/]
COMMENT // [/]

-- Nonterminals:
(1) program
(2) extern_definitionlist
(3) free_definitionlist
(4) struct_definitionlist
(5) class_definitionlist
(6) interface_definitionlist
(7) extern_definition
(8) extern_parameters
(9) extern_paramlist
(10) interface_definition
(11) struct_definition
(12) class_definition
(13) free_definition
(14) typename
(15) typespec
(16) typepath
(17) typedefinition
(18) structdefinition
(19) interfacedefinition
(20) inheritlist
(21) classdefinition
(22) linkage
(23) functiondefinition
(24) constructordefinition
(25) operatordefinition
(26) operatordecl
(27) callablebody
(28) callablebody_const
(29) main_procedure
(30) parameterlist
(31) parameters
(32) paramdecl
(33) codeblock
(34) statementlist
(35) statement
(36) variabledefinition
(37) expression
(38) iexpression
(39) indirection
(40) expressionlist

-- Productions:
program = extern_definitionlist free_definitionlist main_procedure (1)
extern_definitionlist = extern_definition extern_definitionlist
extern_definitionlist = 
free_definitionlist = free_definition free_definitionlist
free_definitionlist = 
struct_definitionlist = struct_definition struct_definitionlist
struct_definitionlist = 
class_definitionlist = class_definition class_definitionlist
class_definitionlist = 
interface_definitionlist = interface_definition interface_definitionlist
interface_definitionlist = 
extern_definition = "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist ")" ";" (2)
extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist ")" ";" (3)
extern_definition = "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist "..." ")" ";" (4)
extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist "..." ")" ";" (5)
extern_parameters = typespec "," extern_parameters (6)
extern_parameters = typespec IDENT "," extern_parameters (6)
extern_parameters = typespec (6)
extern_parameters = typespec IDENT (6)
extern_paramlist = extern_parameters (7)
extern_paramlist =  (7)
interface_definition = "function" IDENT typespec "(" extern_paramlist ")" ";" (8)
interface_definition = "function" IDENT typespec "(" extern_paramlist ")" "const" ";" (9)
interface_definition = "procedure" IDENT "(" extern_paramlist ")" ";" (10)
interface_definition = "procedure" IDENT "(" extern_paramlist ")" "const" ";" (11)
interface_definition = "operator" operatordecl typespec "(" extern_paramlist ")" ";" (12)
interface_definition = "operator" operatordecl typespec "(" extern_paramlist ")" "const" ";" (13)
interface_definition = "operator" operatordecl "(" extern_paramlist ")" ";" (14)
interface_definition = "operator" operatordecl "(" extern_paramlist ")" "const" ";" (15)
struct_definition = typedefinition ";" (16)
struct_definition = variabledefinition ";" (16)
struct_definition = structdefinition (16)
class_definition = typedefinition ";" (16)
class_definition = variabledefinition ";" (16)
class_definition = structdefinition (16)
class_definition = classdefinition (16)
class_definition = interfacedefinition (16)
class_definition = constructordefinition (17)
class_definition = functiondefinition (17)
class_definition = operatordefinition (17)
free_definition = struct_definition
free_definition = functiondefinition (16)
free_definition = classdefinition (16)
free_definition = interfacedefinition (16)
typename/L1 = IDENT
typename/L1 = IDENT "::" typename
typespec/L1 = typename (18)
typespec/L1 = "const" typename (19)
typespec/L1 = typename "&" (20)
typespec/L1 = "const" typename "&" (21)
typespec/L1 = typename "^" (22)
typespec/L1 = "const" typename "^" (23)
typespec/L1 = typename "^" "&" (24)
typespec/L1 = "const" typename "^" "&" (25)
typespec/L1 = typename "^" "^" (26)
typespec/L1 = "const" typename "^" "^" (27)
typespec/L1 = typename "^" "^" "&" (28)
typespec/L1 = "const" typename "^" "^" "&" (29)
typespec/L1 = "any" "class" "^" (30)
typespec/L1 = "any" "const" "class" "^" (31)
typespec/L1 = "any" "struct" "^" (30)
typespec/L1 = "any" "const" "struct" "^" (31)
typepath/L1 = typename (18)
typedefinition = "typedef" typepath IDENT (step:32)
structdefinition = "struct" IDENT "{" struct_definitionlist "}" (step:33)
interfacedefinition = "interface" IDENT "{" interface_definitionlist "}" (step:34)
inheritlist = typepath "," inheritlist (step:35)
inheritlist = typepath (step:35)
classdefinition = "class" IDENT "{" class_definitionlist "}" (step:36)
classdefinition = "class" IDENT ":" inheritlist "{" class_definitionlist "}" (step:36)
linkage = "private" (37)
linkage = "public" (38)
linkage =  (38)
functiondefinition = linkage "function" IDENT typespec callablebody (39)
functiondefinition = linkage "function" IDENT typespec callablebody_const (40)
functiondefinition = linkage "procedure" IDENT callablebody (41)
functiondefinition = linkage "procedure" IDENT callablebody_const (42)
constructordefinition = linkage "constructor" callablebody (43)
constructordefinition = "destructor" "{" codeblock "}" (44)
operatordefinition = linkage "operator" operatordecl typespec callablebody (45)
operatordefinition = linkage "operator" operatordecl typespec callablebody_const (46)
operatordefinition = linkage "operator" operatordecl callablebody (47)
operatordefinition = linkage "operator" operatordecl callablebody_const (48)
operatordecl = "->" (49)
operatordecl = "=" (50)
operatordecl = "+" (51)
operatordecl = "-" (52)
operatordecl = "*" (53)
operatordecl = "/" (54)
operatordecl = "%" (55)
operatordecl = "&&" (56)
operatordecl = "||" (57)
operatordecl = "&" (58)
operatordecl = "|" (59)
operatordecl = "<<" (60)
operatordecl = ">>" (61)
operatordecl = "~" (62)
operatordecl = "!" (63)
operatordecl = "(" ")" (64)
operatordecl = "[" "]" (65)
operatordecl = "==" (66)
operatordecl = "!=" (67)
operatordecl = ">=" (68)
operatordecl = "<=" (69)
operatordecl = ">" (70)
operatordecl = "<" (71)
callablebody = "(" parameterlist ")" "{" codeblock "}" (scope:72)
callablebody_const = "(" parameterlist ")" "const" "{" codeblock "}" (scope:72)
main_procedure = "main" "{" codeblock "}" (scope:73)
main_procedure = 
parameterlist = parameters (74)
parameterlist =  (74)
parameters = paramdecl "," parameters
parameters = paramdecl
paramdecl = typespec IDENT (75)
codeblock = statementlist (76)
statementlist = statement statementlist (step)
statementlist = 
statement/L1 = functiondefinition (77)
statement/L1 = typedefinition ";" (77)
statement/L1 = "var" variabledefinition ";" (77)
statement/L1 = expression ";" (78)
statement/L1 = "return" expression ";" (step:79)
statement/L1 = "delete" expression ";" (80)
statement/L1 = "if" "(" expression ")" "{" codeblock "}" (scope:81)
statement/L1 = "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}" (scope:82)
statement/L1 = "while" "(" expression ")" "{" codeblock "}" (scope:83)
statement/L1 = "{" codeblock "}" (scope)
variabledefinition = typespec IDENT (step:84)
variabledefinition = typespec IDENT "=" expression (step:85)
variabledefinition = typespec IDENT "[" expression "]" "=" expression (step:86)
variabledefinition = typespec IDENT "[" expression "]" (step:87)
expression/L1 = "{" expressionlist "}" (88)
expression/L1 = "{" "}" (88)
expression/L1 = "new" typespec ":" expression (89)
expression/L1 = "cast" typespec ":" "{" expression "}" (90)
expression/L1 = "cast" typespec ":" "{" "}" (90)
expression/L2 = IDENT (91)
expression/L2 = BOOLEAN (92)
expression/L2 = CARDINAL (93)
expression/L2 = INTEGER (94)
expression/L2 = FLOAT (95)
expression/L2 = "null" (96)
expression/L2 = DQSTRING (97)
expression/L2 = SQSTRING (98)
expression/L2 = "(" expression ")"
expression/L3 = expression "=" expression (99)
expression/L3 = expression "+=" expression (100)
expression/L3 = expression "-=" expression (101)
expression/L3 = expression "*=" expression (102)
expression/L3 = expression "/=" expression (103)
expression/L3 = expression "^=" expression (104)
expression/L3 = expression "&=" expression (105)
expression/L3 = expression "%=" expression (106)
expression/L3 = expression "&&=" expression (107)
expression/L3 = expression "||=" expression (108)
expression/L3 = expression "&=" expression (105)
expression/L3 = expression "|=" expression (109)
expression/L3 = expression "<<=" expression (110)
expression/L3 = expression ">>=" expression (111)
expression/L4 = expression "||" expression (112)
expression/L5 = expression "&&" expression (113)
expression/L6 = expression "|" expression (114)
expression/L7 = expression "^" expression (115)
expression/L7 = expression "&" expression (116)
expression/L8 = expression "==" expression (117)
expression/L8 = expression "!=" expression (118)
expression/L8 = expression "<=" expression (119)
expression/L8 = expression "<" expression (120)
expression/L8 = expression ">=" expression (121)
expression/L8 = expression ">" expression (122)
expression/L9 = expression "+" expression (123)
expression/L9 = expression "-" expression (124)
expression/L9 = "&" expression (116)
expression/L9 = "-" expression (124)
expression/L9 = "+" expression (123)
expression/L9 = "~" expression (125)
expression/L9 = "!" expression (126)
expression/L10 = expression "*" expression (127)
expression/L10 = expression "/" expression (128)
expression/L10 = expression "%" expression (129)
expression/L11 = expression "<<" expression (130)
expression/L11 = expression ">>" expression (131)
expression/L12 = iexpression
expression/L12 = expression "." IDENT (132)
expression/L12 = "*" expression (133)
expression/L13 = expression "(" expressionlist ")" (134)
expression/L13 = expression "(" ")" (134)
expression/L13 = expression "[" expressionlist "]" (135)
iexpression = expression indirection IDENT (136)
indirection = "->" indirection (137)
indirection = "->" (137)
expressionlist = expression "," expressionlist
expressionlist = expression

-- LR(0) states:
[1]
	program = . extern_definitionlist free_definitionlist main_procedure
	extern_definitionlist = . extern_definition extern_definitionlist
	extern_definitionlist = .
	extern_definition = . "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist ")" ";"
	extern_definition = . "extern" DQSTRING "procedure" IDENT "(" extern_paramlist ")" ";"
	extern_definition = . "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist "..." ")" ";"
	extern_definition = . "extern" DQSTRING "procedure" IDENT "(" extern_paramlist "..." ")" ";"
[2]
	program = extern_definitionlist . free_definitionlist main_procedure
	free_definitionlist = . free_definition free_definitionlist
	free_definitionlist = .
	struct_definition = . typedefinition ";"
	struct_definition = . variabledefinition ";"
	struct_definition = . structdefinition
	free_definition = . struct_definition
	free_definition = . functiondefinition
	free_definition = . classdefinition
	free_definition = . interfacedefinition
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	typespec/L1 = . "any" "class" "^"
	typespec/L1 = . "any" "const" "class" "^"
	typespec/L1 = . "any" "struct" "^"
	typespec/L1 = . "any" "const" "struct" "^"
	typedefinition = . "typedef" typepath IDENT
	structdefinition = . "struct" IDENT "{" struct_definitionlist "}"
	interfacedefinition = . "interface" IDENT "{" interface_definitionlist "}"
	classdefinition = . "class" IDENT "{" class_definitionlist "}"
	classdefinition = . "class" IDENT ":" inheritlist "{" class_definitionlist "}"
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" IDENT typespec callablebody
	functiondefinition = . linkage "function" IDENT typespec callablebody_const
	functiondefinition = . linkage "procedure" IDENT callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody_const
	variabledefinition = . typespec IDENT
	variabledefinition = . typespec IDENT "=" expression
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression
	variabledefinition = . typespec IDENT "[" expression "]"
[3]
	extern_definitionlist = . extern_definition extern_definitionlist
	extern_definitionlist = extern_definition . extern_definitionlist
	extern_definitionlist = .
	extern_definition = . "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist ")" ";"
	extern_definition = . "extern" DQSTRING "procedure" IDENT "(" extern_paramlist ")" ";"
	extern_definition = . "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist "..." ")" ";"
	extern_definition = . "extern" DQSTRING "procedure" IDENT "(" extern_paramlist "..." ")" ";"
[4]
	extern_definition = "extern" . DQSTRING "function" IDENT typespec "(" extern_paramlist ")" ";"
	extern_definition = "extern" . DQSTRING "procedure" IDENT "(" extern_paramlist ")" ";"
	extern_definition = "extern" . DQSTRING "function" IDENT typespec "(" extern_paramlist "..." ")" ";"
	extern_definition = "extern" . DQSTRING "procedure" IDENT "(" extern_paramlist "..." ")" ";"
[5]
	program = extern_definitionlist free_definitionlist . main_procedure
	main_procedure = . "main" "{" codeblock "}"
	main_procedure = .
[6]
	free_definition = struct_definition .
[7]
	free_definitionlist = . free_definition free_definitionlist
	free_definitionlist = free_definition . free_definitionlist
	free_definitionlist = .
	struct_definition = . typedefinition ";"
	struct_definition = . variabledefinition ";"
	struct_definition = . structdefinition
	free_definition = . struct_definition
	free_definition = . functiondefinition
	free_definition = . classdefinition
	free_definition = . interfacedefinition
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	typespec/L1 = . "any" "class" "^"
	typespec/L1 = . "any" "const" "class" "^"
	typespec/L1 = . "any" "struct" "^"
	typespec/L1 = . "any" "const" "struct" "^"
	typedefinition = . "typedef" typepath IDENT
	structdefinition = . "struct" IDENT "{" struct_definitionlist "}"
	interfacedefinition = . "interface" IDENT "{" interface_definitionlist "}"
	classdefinition = . "class" IDENT "{" class_definitionlist "}"
	classdefinition = . "class" IDENT ":" inheritlist "{" class_definitionlist "}"
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" IDENT typespec callablebody
	functiondefinition = . linkage "function" IDENT typespec callablebody_const
	functiondefinition = . linkage "procedure" IDENT callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody_const
	variabledefinition = . typespec IDENT
	variabledefinition = . typespec IDENT "=" expression
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression
	variabledefinition = . typespec IDENT "[" expression "]"
[8]
	typespec/L1 = typename .
	typespec/L1 = typename . "&"
	typespec/L1 = typename . "^"
	typespec/L1 = typename . "^" "&"
	typespec/L1 = typename . "^" "^"
	typespec/L1 = typename . "^" "^" "&"
[9]
	variabledefinition = typespec . IDENT
	variabledefinition = typespec . IDENT "=" expression
	variabledefinition = typespec . IDENT "[" expression "]" "=" expression
	variabledefinition = typespec . IDENT "[" expression "]"
[10]
	struct_definition = typedefinition . ";"
[11]
	struct_definition = structdefinition .
[12]
	free_definition = interfacedefinition .
[13]
	free_definition = classdefinition .
[14]
	functiondefinition = linkage . "function" IDENT typespec callablebody
	functiondefinition = linkage . "function" IDENT typespec callablebody_const
	functiondefinition = linkage . "procedure" IDENT callablebody
	functiondefinition = linkage . "procedure" IDENT callablebody_const
[15]
	free_definition = functiondefinition .
[16]
	struct_definition = variabledefinition . ";"
[17]
	typename/L1 = IDENT .
	typename/L1 = IDENT . "::" typename
[18]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = "const" . typename
	typespec/L1 = "const" . typename "&"
	typespec/L1 = "const" . typename "^"
	typespec/L1 = "const" . typename "^" "&"
	typespec/L1 = "const" . typename "^" "^"
	typespec/L1 = "const" . typename "^" "^" "&"
[19]
	typespec/L1 = "any" . "class" "^"
	typespec/L1 = "any" . "const" "class" "^"
	typespec/L1 = "any" . "struct" "^"
	typespec/L1 = "any" . "const" "struct" "^"
[20]
	classdefinition = "class" . IDENT "{" class_definitionlist "}"
	classdefinition = "class" . IDENT ":" inheritlist "{" class_definitionlist "}"
[21]
	structdefinition = "struct" . IDENT "{" struct_definitionlist "}"
[22]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typepath/L1 = . typename
	typedefinition = "typedef" . typepath IDENT
[23]
	interfacedefinition = "interface" . IDENT "{" interface_definitionlist "}"
[24]
	linkage = "private" .
[25]
	linkage = "public" .
[26]
	extern_definitionlist = extern_definition extern_definitionlist .
[27]
	extern_definition = "extern" DQSTRING . "function" IDENT typespec "(" extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING . "procedure" IDENT "(" extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING . "function" IDENT typespec "(" extern_paramlist "..." ")" ";"
	extern_definition = "extern" DQSTRING . "procedure" IDENT "(" extern_paramlist "..." ")" ";"
[28]
	program = extern_definitionlist free_definitionlist main_procedure .
[29]
	main_procedure = "main" . "{" codeblock "}"
[30]
	free_definitionlist = free_definition free_definitionlist .
[31]
	typespec/L1 = typename "&" .
[32]
	typespec/L1 = typename "^" .
	typespec/L1 = typename "^" . "&"
	typespec/L1 = typename "^" . "^"
	typespec/L1 = typename "^" . "^" "&"
[33]
	variabledefinition = typespec IDENT .
	variabledefinition = typespec IDENT . "=" expression
	variabledefinition = typespec IDENT . "[" expression "]" "=" expression
	variabledefinition = typespec IDENT . "[" expression "]"
[34]
	struct_definition = typedefinition ";" .
[35]
	functiondefinition = linkage "function" . IDENT typespec callablebody
	functiondefinition = linkage "function" . IDENT typespec callablebody_const
[36]
	functiondefinition = linkage "procedure" . IDENT callablebody
	functiondefinition = linkage "procedure" . IDENT callablebody_const
[37]
	struct_definition = variabledefinition ";" .
[38]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typename/L1 = IDENT "::" . typename
[39]
	typespec/L1 = "const" typename .
	typespec/L1 = "const" typename . "&"
	typespec/L1 = "const" typename . "^"
	typespec/L1 = "const" typename . "^" "&"
	typespec/L1 = "const" typename . "^" "^"
	typespec/L1 = "const" typename . "^" "^" "&"
[40]
	typespec/L1 = "any" "const" . "class" "^"
	typespec/L1 = "any" "const" . "struct" "^"
[41]
	typespec/L1 = "any" "class" . "^"
[42]
	typespec/L1 = "any" "struct" . "^"
[43]
	classdefinition = "class" IDENT . "{" class_definitionlist "}"
	classdefinition = "class" IDENT . ":" inheritlist "{" class_definitionlist "}"
[44]
	structdefinition = "struct" IDENT . "{" struct_definitionlist "}"
[45]
	typepath/L1 = typename .
[46]
	typedefinition = "typedef" typepath . IDENT
[47]
	interfacedefinition = "interface" IDENT . "{" interface_definitionlist "}"
[48]
	extern_definition = "extern" DQSTRING "function" . IDENT typespec "(" extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING "function" . IDENT typespec "(" extern_paramlist "..." ")" ";"
[49]
	extern_definition = "extern" DQSTRING "procedure" . IDENT "(" extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING "procedure" . IDENT "(" extern_paramlist "..." ")" ";"
[50]
	typedefinition = . "typedef" typepath IDENT
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" IDENT typespec callablebody
	functiondefinition = . linkage "function" IDENT typespec callablebody_const
	functiondefinition = . linkage "procedure" IDENT callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody_const
	main_procedure = "main" "{" . codeblock "}"
	codeblock = . statementlist
	statementlist = . statement statementlist
	statementlist = .
	statement/L1 = . functiondefinition
	statement/L1 = . typedefinition ";"
	statement/L1 = . "var" variabledefinition ";"
	statement/L1 = . expression ";"
	statement/L1 = . "return" expression ";"
	statement/L1 = . "delete" expression ";"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}"
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "{" codeblock "}"
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[51]
	typespec/L1 = typename "^" "&" .
[52]
	typespec/L1 = typename "^" "^" .
	typespec/L1 = typename "^" "^" . "&"
[53]
	variabledefinition = typespec IDENT "=" . expression
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[54]
	variabledefinition = typespec IDENT "[" . expression "]" "=" expression
	variabledefinition = typespec IDENT "[" . expression "]"
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[55]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	typespec/L1 = . "any" "class" "^"
	typespec/L1 = . "any" "const" "class" "^"
	typespec/L1 = . "any" "struct" "^"
	typespec/L1 = . "any" "const" "struct" "^"
	functiondefinition = linkage "function" IDENT . typespec callablebody
	functiondefinition = linkage "function" IDENT . typespec callablebody_const
[56]
	functiondefinition = linkage "procedure" IDENT . callablebody
	functiondefinition = linkage "procedure" IDENT . callablebody_const
	callablebody = . "(" parameterlist ")" "{" codeblock "}"
	callablebody_const = . "(" parameterlist ")" "const" "{" codeblock "}"
[57]
	typename/L1 = IDENT "::" typename .
[58]
	typespec/L1 = "const" typename "&" .
[59]
	typespec/L1 = "const" typename "^" .
	typespec/L1 = "const" typename "^" . "&"
	typespec/L1 = "const" typename "^" . "^"
	typespec/L1 = "const" typename "^" . "^" "&"
[60]
	typespec/L1 = "any" "const" "class" . "^"
[61]
	typespec/L1 = "any" "const" "struct" . "^"
[62]
	typespec/L1 = "any" "class" "^" .
[63]
	typespec/L1 = "any" "struct" "^" .
[64]
	class_definitionlist = . class_definition class_definitionlist
	class_definitionlist = .
	class_definition = . typedefinition ";"
	class_definition = . variabledefinition ";"
	class_definition = . structdefinition
	class_definition = . classdefinition
	class_definition = . interfacedefinition
	class_definition = . constructordefinition
	class_definition = . functiondefinition
	class_definition = . operatordefinition
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	typespec/L1 = . "any" "class" "^"
	typespec/L1 = . "any" "const" "class" "^"
	typespec/L1 = . "any" "struct" "^"
	typespec/L1 = . "any" "const" "struct" "^"
	typedefinition = . "typedef" typepath IDENT
	structdefinition = . "struct" IDENT "{" struct_definitionlist "}"
	interfacedefinition = . "interface" IDENT "{" interface_definitionlist "}"
	classdefinition = . "class" IDENT "{" class_definitionlist "}"
	classdefinition = "class" IDENT "{" . class_definitionlist "}"
	classdefinition = . "class" IDENT ":" inheritlist "{" class_definitionlist "}"
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" IDENT typespec callablebody
	functiondefinition = . linkage "function" IDENT typespec callablebody_const
	functiondefinition = . linkage "procedure" IDENT callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody_const
	constructordefinition = . linkage "constructor" callablebody
	constructordefinition = . "destructor" "{" codeblock "}"
	operatordefinition = . linkage "operator" operatordecl typespec callablebody
	operatordefinition = . linkage "operator" operatordecl typespec callablebody_const
	operatordefinition = . linkage "operator" operatordecl callablebody
	operatordefinition = . linkage "operator" operatordecl callablebody_const
	variabledefinition = . typespec IDENT
	variabledefinition = . typespec IDENT "=" expression
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression
	variabledefinition = . typespec IDENT "[" expression "]"
[65]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typepath/L1 = . typename
	inheritlist = . typepath "," inheritlist
	inheritlist = . typepath
	classdefinition = "class" IDENT ":" . inheritlist "{" class_definitionlist "}"
[66]
	struct_definitionlist = . struct_definition struct_definitionlist
	struct_definitionlist = .
	struct_definition = . typedefinition ";"
	struct_definition = . variabledefinition ";"
	struct_definition = . structdefinition
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	typespec/L1 = . "any" "class" "^"
	typespec/L1 = . "any" "const" "class" "^"
	typespec/L1 = . "any" "struct" "^"
	typespec/L1 = . "any" "const" "struct" "^"
	typedefinition = . "typedef" typepath IDENT
	structdefinition = . "struct" IDENT "{" struct_definitionlist "}"
	structdefinition = "struct" IDENT "{" . struct_definitionlist "}"
	variabledefinition = . typespec IDENT
	variabledefinition = . typespec IDENT "=" expression
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression
	variabledefinition = . typespec IDENT "[" expression "]"
[67]
	typedefinition = "typedef" typepath IDENT .
[68]
	interface_definitionlist = . interface_definition interface_definitionlist
	interface_definitionlist = .
	interface_definition = . "function" IDENT typespec "(" extern_paramlist ")" ";"
	interface_definition = . "function" IDENT typespec "(" extern_paramlist ")" "const" ";"
	interface_definition = . "procedure" IDENT "(" extern_paramlist ")" ";"
	interface_definition = . "procedure" IDENT "(" extern_paramlist ")" "const" ";"
	interface_definition = . "operator" operatordecl typespec "(" extern_paramlist ")" ";"
	interface_definition = . "operator" operatordecl typespec "(" extern_paramlist ")" "const" ";"
	interface_definition = . "operator" operatordecl "(" extern_paramlist ")" ";"
	interface_definition = . "operator" operatordecl "(" extern_paramlist ")" "const" ";"
	interfacedefinition = "interface" IDENT "{" . interface_definitionlist "}"
[69]
	extern_definition = "extern" DQSTRING "function" IDENT . typespec "(" extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING "function" IDENT . typespec "(" extern_paramlist "..." ")" ";"
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	typespec/L1 = . "any" "class" "^"
	typespec/L1 = . "any" "const" "class" "^"
	typespec/L1 = . "any" "struct" "^"
	typespec/L1 = . "any" "const" "struct" "^"
[70]
	extern_definition = "extern" DQSTRING "procedure" IDENT . "(" extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING "procedure" IDENT . "(" extern_paramlist "..." ")" ";"
[71]
	statement/L1 = typedefinition . ";"
[72]
	statement/L1 = functiondefinition .
[73]
	main_procedure = "main" "{" codeblock . "}"
[74]
	codeblock = statementlist .
[75]
	typedefinition = . "typedef" typepath IDENT
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" IDENT typespec callablebody
	functiondefinition = . linkage "function" IDENT typespec callablebody_const
	functiondefinition = . linkage "procedure" IDENT callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody_const
	statementlist = . statement statementlist
	statementlist = statement . statementlist
	statementlist = .
	statement/L1 = . functiondefinition
	statement/L1 = . typedefinition ";"
	statement/L1 = . "var" variabledefinition ";"
	statement/L1 = . expression ";"
	statement/L1 = . "return" expression ";"
	statement/L1 = . "delete" expression ";"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}"
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "{" codeblock "}"
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[76]
	statement/L1 = expression . ";"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[77]
	expression/L12 = iexpression .
[78]
	expression/L2 = BOOLEAN .
[79]
	expression/L2 = IDENT .
[80]
	expression/L2 = DQSTRING .
[81]
	expression/L2 = SQSTRING .
[82]
	expression/L2 = CARDINAL .
[83]
	expression/L2 = INTEGER .
[84]
	expression/L2 = FLOAT .
[85]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L2 = "(" . expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[86]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = "&" . expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[87]
	typedefinition = . "typedef" typepath IDENT
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" IDENT typespec callablebody
	functiondefinition = . linkage "function" IDENT typespec callablebody_const
	functiondefinition = . linkage "procedure" IDENT callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody_const
	codeblock = . statementlist
	statementlist = . statement statementlist
	statementlist = .
	statement/L1 = . functiondefinition
	statement/L1 = . typedefinition ";"
	statement/L1 = . "var" variabledefinition ";"
	statement/L1 = . expression ";"
	statement/L1 = . "return" expression ";"
	statement/L1 = . "delete" expression ";"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}"
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "{" codeblock "}"
	statement/L1 = "{" . codeblock "}"
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = "{" . expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = "{" . "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
	expressionlist = . expression "," expressionlist
	expressionlist = . expression
[88]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = "+" . expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[89]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = "-" . expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[90]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L12 = "*" . expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[91]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = "~" . expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[92]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L9 = "!" . expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[93]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	typespec/L1 = . "any" "class" "^"
	typespec/L1 = . "any" "const" "class" "^"
	typespec/L1 = . "any" "struct" "^"
	typespec/L1 = . "any" "const" "struct" "^"
	statement/L1 = "var" . variabledefinition ";"
	variabledefinition = . typespec IDENT
	variabledefinition = . typespec IDENT "=" expression
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression
	variabledefinition = . typespec IDENT "[" expression "]"
[94]
	statement/L1 = "return" . expression ";"
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[95]
	statement/L1 = "delete" . expression ";"
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[96]
	statement/L1 = "if" . "(" expression ")" "{" codeblock "}"
	statement/L1 = "if" . "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}"
[97]
	statement/L1 = "while" . "(" expression ")" "{" codeblock "}"
[98]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	typespec/L1 = . "any" "class" "^"
	typespec/L1 = . "any" "const" "class" "^"
	typespec/L1 = . "any" "struct" "^"
	typespec/L1 = . "any" "const" "struct" "^"
	expression/L1 = "new" . typespec ":" expression
[99]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	typespec/L1 = . "any" "class" "^"
	typespec/L1 = . "any" "const" "class" "^"
	typespec/L1 = . "any" "struct" "^"
	typespec/L1 = . "any" "const" "struct" "^"
	expression/L1 = "cast" . typespec ":" "{" expression "}"
	expression/L1 = "cast" . typespec ":" "{" "}"
[100]
	expression/L2 = "null" .
[101]
	typespec/L1 = typename "^" "^" "&" .
[102]
	variabledefinition = typespec IDENT "=" expression .
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[103]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = "{" . expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = "{" . "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
	expressionlist = . expression "," expressionlist
	expressionlist = . expression
[104]
	variabledefinition = typespec IDENT "[" expression . "]" "=" expression
	variabledefinition = typespec IDENT "[" expression . "]"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[105]
	functiondefinition = linkage "function" IDENT typespec . callablebody
	functiondefinition = linkage "function" IDENT typespec . callablebody_const
	callablebody = . "(" parameterlist ")" "{" codeblock "}"
	callablebody_const = . "(" parameterlist ")" "const" "{" codeblock "}"
[106]
	functiondefinition = linkage "procedure" IDENT callablebody .
[107]
	functiondefinition = linkage "procedure" IDENT callablebody_const .
[108]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	typespec/L1 = . "any" "class" "^"
	typespec/L1 = . "any" "const" "class" "^"
	typespec/L1 = . "any" "struct" "^"
	typespec/L1 = . "any" "const" "struct" "^"
	callablebody = "(" . parameterlist ")" "{" codeblock "}"
	callablebody_const = "(" . parameterlist ")" "const" "{" codeblock "}"
	parameterlist = . parameters
	parameterlist = .
	parameters = . paramdecl "," parameters
	parameters = . paramdecl
	paramdecl = . typespec IDENT
[109]
	typespec/L1 = "const" typename "^" "&" .
[110]
	typespec/L1 = "const" typename "^" "^" .
	typespec/L1 = "const" typename "^" "^" . "&"
[111]
	typespec/L1 = "any" "const" "class" "^" .
[112]
	typespec/L1 = "any" "const" "struct" "^" .
[113]
	classdefinition = "class" IDENT "{" class_definitionlist . "}"
[114]
	class_definitionlist = . class_definition class_definitionlist
	class_definitionlist = class_definition . class_definitionlist
	class_definitionlist = .
	class_definition = . typedefinition ";"
	class_definition = . variabledefinition ";"
	class_definition = . structdefinition
	class_definition = . classdefinition
	class_definition = . interfacedefinition
	class_definition = . constructordefinition
	class_definition = . functiondefinition
	class_definition = . operatordefinition
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	typespec/L1 = . "any" "class" "^"
	typespec/L1 = . "any" "const" "class" "^"
	typespec/L1 = . "any" "struct" "^"
	typespec/L1 = . "any" "const" "struct" "^"
	typedefinition = . "typedef" typepath IDENT
	structdefinition = . "struct" IDENT "{" struct_definitionlist "}"
	interfacedefinition = . "interface" IDENT "{" interface_definitionlist "}"
	classdefinition = . "class" IDENT "{" class_definitionlist "}"
	classdefinition = . "class" IDENT ":" inheritlist "{" class_definitionlist "}"
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" IDENT typespec callablebody
	functiondefinition = . linkage "function" IDENT typespec callablebody_const
	functiondefinition = . linkage "procedure" IDENT callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody_const
	constructordefinition = . linkage "constructor" callablebody
	constructordefinition = . "destructor" "{" codeblock "}"
	operatordefinition = . linkage "operator" operatordecl typespec callablebody
	operatordefinition = . linkage "operator" operatordecl typespec callablebody_const
	operatordefinition = . linkage "operator" operatordecl callablebody
	operatordefinition = . linkage "operator" operatordecl callablebody_const
	variabledefinition = . typespec IDENT
	variabledefinition = . typespec IDENT "=" expression
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression
	variabledefinition = . typespec IDENT "[" expression "]"
[115]
	class_definition = typedefinition . ";"
[116]
	class_definition = structdefinition .
[117]
	class_definition = interfacedefinition .
[118]
	class_definition = classdefinition .
[119]
	functiondefinition = linkage . "function" IDENT typespec callablebody
	functiondefinition = linkage . "function" IDENT typespec callablebody_const
	functiondefinition = linkage . "procedure" IDENT callablebody
	functiondefinition = linkage . "procedure" IDENT callablebody_const
	constructordefinition = linkage . "constructor" callablebody
	operatordefinition = linkage . "operator" operatordecl typespec callablebody
	operatordefinition = linkage . "operator" operatordecl typespec callablebody_const
	operatordefinition = linkage . "operator" operatordecl callablebody
	operatordefinition = linkage . "operator" operatordecl callablebody_const
[120]
	class_definition = functiondefinition .
[121]
	class_definition = constructordefinition .
[122]
	class_definition = operatordefinition .
[123]
	class_definition = variabledefinition . ";"
[124]
	constructordefinition = "destructor" . "{" codeblock "}"
[125]
	inheritlist = typepath . "," inheritlist
	inheritlist = typepath .
[126]
	classdefinition = "class" IDENT ":" inheritlist . "{" class_definitionlist "}"
[127]
	structdefinition = "struct" IDENT "{" struct_definitionlist . "}"
[128]
	struct_definitionlist = . struct_definition struct_definitionlist
	struct_definitionlist = struct_definition . struct_definitionlist
	struct_definitionlist = .
	struct_definition = . typedefinition ";"
	struct_definition = . variabledefinition ";"
	struct_definition = . structdefinition
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	typespec/L1 = . "any" "class" "^"
	typespec/L1 = . "any" "const" "class" "^"
	typespec/L1 = . "any" "struct" "^"
	typespec/L1 = . "any" "const" "struct" "^"
	typedefinition = . "typedef" typepath IDENT
	structdefinition = . "struct" IDENT "{" struct_definitionlist "}"
	variabledefinition = . typespec IDENT
	variabledefinition = . typespec IDENT "=" expression
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression
	variabledefinition = . typespec IDENT "[" expression "]"
[129]
	interfacedefinition = "interface" IDENT "{" interface_definitionlist . "}"
[130]
	interface_definitionlist = . interface_definition interface_definitionlist
	interface_definitionlist = interface_definition . interface_definitionlist
	interface_definitionlist = .
	interface_definition = . "function" IDENT typespec "(" extern_paramlist ")" ";"
	interface_definition = . "function" IDENT typespec "(" extern_paramlist ")" "const" ";"
	interface_definition = . "procedure" IDENT "(" extern_paramlist ")" ";"
	interface_definition = . "procedure" IDENT "(" extern_paramlist ")" "const" ";"
	interface_definition = . "operator" operatordecl typespec "(" extern_paramlist ")" ";"
	interface_definition = . "operator" operatordecl typespec "(" extern_paramlist ")" "const" ";"
	interface_definition = . "operator" operatordecl "(" extern_paramlist ")" ";"
	interface_definition = . "operator" operatordecl "(" extern_paramlist ")" "const" ";"
[131]
	interface_definition = "function" . IDENT typespec "(" extern_paramlist ")" ";"
	interface_definition = "function" . IDENT typespec "(" extern_paramlist ")" "const" ";"
[132]
	interface_definition = "procedure" . IDENT "(" extern_paramlist ")" ";"
	interface_definition = "procedure" . IDENT "(" extern_paramlist ")" "const" ";"
[133]
	interface_definition = "operator" . operatordecl typespec "(" extern_paramlist ")" ";"
	interface_definition = "operator" . operatordecl typespec "(" extern_paramlist ")" "const" ";"
	interface_definition = "operator" . operatordecl "(" extern_paramlist ")" ";"
	interface_definition = "operator" . operatordecl "(" extern_paramlist ")" "const" ";"
	operatordecl = . "->"
	operatordecl = . "="
	operatordecl = . "+"
	operatordecl = . "-"
	operatordecl = . "*"
	operatordecl = . "/"
	operatordecl = . "%"
	operatordecl = . "&&"
	operatordecl = . "||"
	operatordecl = . "&"
	operatordecl = . "|"
	operatordecl = . "<<"
	operatordecl = . ">>"
	operatordecl = . "~"
	operatordecl = . "!"
	operatordecl = . "(" ")"
	operatordecl = . "[" "]"
	operatordecl = . "=="
	operatordecl = . "!="
	operatordecl = . ">="
	operatordecl = . "<="
	operatordecl = . ">"
	operatordecl = . "<"
[134]
	extern_definition = "extern" DQSTRING "function" IDENT typespec . "(" extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING "function" IDENT typespec . "(" extern_paramlist "..." ")" ";"
[135]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" . extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" . extern_paramlist "..." ")" ";"
	extern_parameters = . typespec "," extern_parameters
	extern_parameters = . typespec IDENT "," extern_parameters
	extern_parameters = . typespec
	extern_parameters = . typespec IDENT
	extern_paramlist = . extern_parameters
	extern_paramlist = .
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	typespec/L1 = . "any" "class" "^"
	typespec/L1 = . "any" "const" "class" "^"
	typespec/L1 = . "any" "struct" "^"
	typespec/L1 = . "any" "const" "struct" "^"
[136]
	statement/L1 = typedefinition ";" .
[137]
	main_procedure = "main" "{" codeblock "}" .
[138]
	statementlist = statement statementlist .
[139]
	iexpression = expression indirection . IDENT
[140]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = expression "(" . expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = expression "(" . ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
	expressionlist = . expression "," expressionlist
	expressionlist = . expression
[141]
	statement/L1 = expression ";" .
[142]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L7 = expression "&" . expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[143]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = expression "^" . expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[144]
	indirection = . "->" indirection
	indirection = "->" . indirection
	indirection = . "->"
	indirection = "->" .
[145]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = expression "=" . expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[146]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = expression "+" . expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[147]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = expression "-" . expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[148]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = expression "*" . expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[149]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = expression "/" . expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[150]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L10 = expression "%" . expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[151]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L5 = expression "&&" . expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[152]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L4 = expression "||" . expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[153]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L6 = expression "|" . expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[154]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = expression "<<" . expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[155]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L11 = expression ">>" . expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[156]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	expression/L13 = expression "[" . expressionlist "]"
	iexpression = . expression indirection IDENT
	expressionlist = . expression "," expressionlist
	expressionlist = . expression
[157]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = expression "==" . expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[158]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = expression "!=" . expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[159]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = expression ">=" . expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[160]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = expression "<=" . expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[161]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L8 = expression ">" . expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[162]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = expression "<" . expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[163]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = expression "+=" . expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[164]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = expression "-=" . expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[165]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = expression "*=" . expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[166]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = expression "/=" . expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[167]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = expression "^=" . expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[168]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = expression "&=" . expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = expression "&=" . expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[169]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = expression "%=" . expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[170]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = expression "&&=" . expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[171]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = expression "||=" . expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[172]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = expression "|=" . expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[173]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = expression "<<=" . expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[174]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L3 = expression ">>=" . expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[175]
	expression/L12 = expression "." . IDENT
[176]
	expression/L2 = "(" expression . ")"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[177]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L9 = "&" expression .
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[178]
	statement/L1 = "{" codeblock . "}"
[179]
	statement/L1 = expression . ";"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
	expressionlist = expression . "," expressionlist
	expressionlist = expression .
[180]
	expression/L1 = "{" expressionlist . "}"
[181]
	expression/L1 = "{" "}" .
[182]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L9 = "+" expression .
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[183]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L9 = "-" expression .
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[184]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L12 = "*" expression .
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[185]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L9 = "~" expression .
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[186]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L9 = "!" expression .
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[187]
	statement/L1 = "var" variabledefinition . ";"
[188]
	statement/L1 = "return" expression . ";"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[189]
	statement/L1 = "delete" expression . ";"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[190]
	statement/L1 = "if" "(" . expression ")" "{" codeblock "}"
	statement/L1 = "if" "(" . expression ")" "{" codeblock "}" "else" "{" codeblock "}"
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[191]
	statement/L1 = "while" "(" . expression ")" "{" codeblock "}"
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[192]
	expression/L1 = "new" typespec . ":" expression
[193]
	expression/L1 = "cast" typespec . ":" "{" expression "}"
	expression/L1 = "cast" typespec . ":" "{" "}"
[194]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
	expressionlist = expression . "," expressionlist
	expressionlist = expression .
[195]
	variabledefinition = typespec IDENT "[" expression "]" . "=" expression
	variabledefinition = typespec IDENT "[" expression "]" .
[196]
	functiondefinition = linkage "function" IDENT typespec callablebody .
[197]
	functiondefinition = linkage "function" IDENT typespec callablebody_const .
[198]
	paramdecl = typespec . IDENT
[199]
	callablebody = "(" parameterlist . ")" "{" codeblock "}"
	callablebody_const = "(" parameterlist . ")" "const" "{" codeblock "}"
[200]
	parameterlist = parameters .
[201]
	parameters = paramdecl . "," parameters
	parameters = paramdecl .
[202]
	typespec/L1 = "const" typename "^" "^" "&" .
[203]
	classdefinition = "class" IDENT "{" class_definitionlist "}" .
[204]
	class_definitionlist = class_definition class_definitionlist .
[205]
	class_definition = typedefinition ";" .
[206]
	operatordefinition = linkage "operator" . operatordecl typespec callablebody
	operatordefinition = linkage "operator" . operatordecl typespec callablebody_const
	operatordefinition = linkage "operator" . operatordecl callablebody
	operatordefinition = linkage "operator" . operatordecl callablebody_const
	operatordecl = . "->"
	operatordecl = . "="
	operatordecl = . "+"
	operatordecl = . "-"
	operatordecl = . "*"
	operatordecl = . "/"
	operatordecl = . "%"
	operatordecl = . "&&"
	operatordecl = . "||"
	operatordecl = . "&"
	operatordecl = . "|"
	operatordecl = . "<<"
	operatordecl = . ">>"
	operatordecl = . "~"
	operatordecl = . "!"
	operatordecl = . "(" ")"
	operatordecl = . "[" "]"
	operatordecl = . "=="
	operatordecl = . "!="
	operatordecl = . ">="
	operatordecl = . "<="
	operatordecl = . ">"
	operatordecl = . "<"
[207]
	constructordefinition = linkage "constructor" . callablebody
	callablebody = . "(" parameterlist ")" "{" codeblock "}"
[208]
	class_definition = variabledefinition ";" .
[209]
	typedefinition = . "typedef" typepath IDENT
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" IDENT typespec callablebody
	functiondefinition = . linkage "function" IDENT typespec callablebody_const
	functiondefinition = . linkage "procedure" IDENT callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody_const
	constructordefinition = "destructor" "{" . codeblock "}"
	codeblock = . statementlist
	statementlist = . statement statementlist
	statementlist = .
	statement/L1 = . functiondefinition
	statement/L1 = . typedefinition ";"
	statement/L1 = . "var" variabledefinition ";"
	statement/L1 = . expression ";"
	statement/L1 = . "return" expression ";"
	statement/L1 = . "delete" expression ";"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}"
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "{" codeblock "}"
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[210]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typepath/L1 = . typename
	inheritlist = . typepath "," inheritlist
	inheritlist = typepath "," . inheritlist
	inheritlist = . typepath
[211]
	class_definitionlist = . class_definition class_definitionlist
	class_definitionlist = .
	class_definition = . typedefinition ";"
	class_definition = . variabledefinition ";"
	class_definition = . structdefinition
	class_definition = . classdefinition
	class_definition = . interfacedefinition
	class_definition = . constructordefinition
	class_definition = . functiondefinition
	class_definition = . operatordefinition
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	typespec/L1 = . "any" "class" "^"
	typespec/L1 = . "any" "const" "class" "^"
	typespec/L1 = . "any" "struct" "^"
	typespec/L1 = . "any" "const" "struct" "^"
	typedefinition = . "typedef" typepath IDENT
	structdefinition = . "struct" IDENT "{" struct_definitionlist "}"
	interfacedefinition = . "interface" IDENT "{" interface_definitionlist "}"
	classdefinition = . "class" IDENT "{" class_definitionlist "}"
	classdefinition = . "class" IDENT ":" inheritlist "{" class_definitionlist "}"
	classdefinition = "class" IDENT ":" inheritlist "{" . class_definitionlist "}"
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" IDENT typespec callablebody
	functiondefinition = . linkage "function" IDENT typespec callablebody_const
	functiondefinition = . linkage "procedure" IDENT callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody_const
	constructordefinition = . linkage "constructor" callablebody
	constructordefinition = . "destructor" "{" codeblock "}"
	operatordefinition = . linkage "operator" operatordecl typespec callablebody
	operatordefinition = . linkage "operator" operatordecl typespec callablebody_const
	operatordefinition = . linkage "operator" operatordecl callablebody
	operatordefinition = . linkage "operator" operatordecl callablebody_const
	variabledefinition = . typespec IDENT
	variabledefinition = . typespec IDENT "=" expression
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression
	variabledefinition = . typespec IDENT "[" expression "]"
[212]
	structdefinition = "struct" IDENT "{" struct_definitionlist "}" .
[213]
	struct_definitionlist = struct_definition struct_definitionlist .
[214]
	interfacedefinition = "interface" IDENT "{" interface_definitionlist "}" .
[215]
	interface_definitionlist = interface_definition interface_definitionlist .
[216]
	interface_definition = "function" IDENT . typespec "(" extern_paramlist ")" ";"
	interface_definition = "function" IDENT . typespec "(" extern_paramlist ")" "const" ";"
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	typespec/L1 = . "any" "class" "^"
	typespec/L1 = . "any" "const" "class" "^"
	typespec/L1 = . "any" "struct" "^"
	typespec/L1 = . "any" "const" "struct" "^"
[217]
	interface_definition = "procedure" IDENT . "(" extern_paramlist ")" ";"
	interface_definition = "procedure" IDENT . "(" extern_paramlist ")" "const" ";"
[218]
	interface_definition = "operator" operatordecl . typespec "(" extern_paramlist ")" ";"
	interface_definition = "operator" operatordecl . typespec "(" extern_paramlist ")" "const" ";"
	interface_definition = "operator" operatordecl . "(" extern_paramlist ")" ";"
	interface_definition = "operator" operatordecl . "(" extern_paramlist ")" "const" ";"
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	typespec/L1 = . "any" "class" "^"
	typespec/L1 = . "any" "const" "class" "^"
	typespec/L1 = . "any" "struct" "^"
	typespec/L1 = . "any" "const" "struct" "^"
[219]
	operatordecl = "(" . ")"
[220]
	operatordecl = "&" .
[221]
	operatordecl = "->" .
[222]
	operatordecl = "=" .
[223]
	operatordecl = "+" .
[224]
	operatordecl = "-" .
[225]
	operatordecl = "*" .
[226]
	operatordecl = "/" .
[227]
	operatordecl = "%" .
[228]
	operatordecl = "&&" .
[229]
	operatordecl = "||" .
[230]
	operatordecl = "|" .
[231]
	operatordecl = "<<" .
[232]
	operatordecl = ">>" .
[233]
	operatordecl = "~" .
[234]
	operatordecl = "!" .
[235]
	operatordecl = "[" . "]"
[236]
	operatordecl = "==" .
[237]
	operatordecl = "!=" .
[238]
	operatordecl = ">=" .
[239]
	operatordecl = "<=" .
[240]
	operatordecl = ">" .
[241]
	operatordecl = "<" .
[242]
	extern_definition = "extern" DQSTRING "function" IDENT typespec "(" . extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING "function" IDENT typespec "(" . extern_paramlist "..." ")" ";"
	extern_parameters = . typespec "," extern_parameters
	extern_parameters = . typespec IDENT "," extern_parameters
	extern_parameters = . typespec
	extern_parameters = . typespec IDENT
	extern_paramlist = . extern_parameters
	extern_paramlist = .
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	typespec/L1 = . "any" "class" "^"
	typespec/L1 = . "any" "const" "class" "^"
	typespec/L1 = . "any" "struct" "^"
	typespec/L1 = . "any" "const" "struct" "^"
[243]
	extern_paramlist = extern_parameters .
[244]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist . ")" ";"
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist . "..." ")" ";"
[245]
	extern_parameters = typespec . "," extern_parameters
	extern_parameters = typespec . IDENT "," extern_parameters
	extern_parameters = typespec .
	extern_parameters = typespec . IDENT
[246]
	iexpression = expression indirection IDENT .
[247]
	expression/L13 = expression "(" expressionlist . ")"
[248]
	expression/L13 = expression "(" ")" .
[249]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L7 = expression "&" expression .
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[250]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression "^" expression .
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[251]
	indirection = "->" indirection .
[252]
	expression/L3 = expression . "=" expression
	expression/L3 = expression "=" expression .
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[253]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression "+" expression .
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[254]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L9 = expression "-" expression .
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[255]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression "*" expression .
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[256]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression "/" expression .
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[257]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L10 = expression "%" expression .
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[258]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L5 = expression "&&" expression .
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[259]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L4 = expression "||" expression .
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[260]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L6 = expression "|" expression .
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[261]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression "<<" expression .
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[262]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L11 = expression ">>" expression .
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[263]
	expression/L13 = expression "[" expressionlist . "]"
[264]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression "==" expression .
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[265]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression "!=" expression .
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[266]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression ">=" expression .
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[267]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression "<=" expression .
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[268]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L8 = expression ">" expression .
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[269]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression "<" expression .
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[270]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression "+=" expression .
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[271]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression "-=" expression .
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[272]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression "*=" expression .
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[273]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression "/=" expression .
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[274]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression "^=" expression .
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[275]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression "&=" expression .
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression "&=" expression .
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[276]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression "%=" expression .
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[277]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression "&&=" expression .
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[278]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression "||=" expression .
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[279]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression "|=" expression .
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[280]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression "<<=" expression .
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[281]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L3 = expression ">>=" expression .
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[282]
	expression/L12 = expression "." IDENT .
[283]
	expression/L2 = "(" expression ")" .
[284]
	statement/L1 = "{" codeblock "}" .
[285]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
	expressionlist = . expression "," expressionlist
	expressionlist = expression "," . expressionlist
	expressionlist = . expression
[286]
	expression/L1 = "{" expressionlist "}" .
[287]
	statement/L1 = "var" variabledefinition ";" .
[288]
	statement/L1 = "return" expression ";" .
[289]
	statement/L1 = "delete" expression ";" .
[290]
	statement/L1 = "if" "(" expression . ")" "{" codeblock "}"
	statement/L1 = "if" "(" expression . ")" "{" codeblock "}" "else" "{" codeblock "}"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[291]
	statement/L1 = "while" "(" expression . ")" "{" codeblock "}"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[292]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = "new" typespec ":" . expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[293]
	expression/L1 = "cast" typespec ":" . "{" expression "}"
	expression/L1 = "cast" typespec ":" . "{" "}"
[294]
	variabledefinition = typespec IDENT "[" expression "]" "=" . expression
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[295]
	paramdecl = typespec IDENT .
[296]
	callablebody = "(" parameterlist ")" . "{" codeblock "}"
	callablebody_const = "(" parameterlist ")" . "const" "{" codeblock "}"
[297]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	typespec/L1 = . "any" "class" "^"
	typespec/L1 = . "any" "const" "class" "^"
	typespec/L1 = . "any" "struct" "^"
	typespec/L1 = . "any" "const" "struct" "^"
	parameters = . paramdecl "," parameters
	parameters = paramdecl "," . parameters
	parameters = . paramdecl
	paramdecl = . typespec IDENT
[298]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	typespec/L1 = . "any" "class" "^"
	typespec/L1 = . "any" "const" "class" "^"
	typespec/L1 = . "any" "struct" "^"
	typespec/L1 = . "any" "const" "struct" "^"
	operatordefinition = linkage "operator" operatordecl . typespec callablebody
	operatordefinition = linkage "operator" operatordecl . typespec callablebody_const
	operatordefinition = linkage "operator" operatordecl . callablebody
	operatordefinition = linkage "operator" operatordecl . callablebody_const
	callablebody = . "(" parameterlist ")" "{" codeblock "}"
	callablebody_const = . "(" parameterlist ")" "const" "{" codeblock "}"
[299]
	constructordefinition = linkage "constructor" callablebody .
[300]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	typespec/L1 = . "any" "class" "^"
	typespec/L1 = . "any" "const" "class" "^"
	typespec/L1 = . "any" "struct" "^"
	typespec/L1 = . "any" "const" "struct" "^"
	callablebody = "(" . parameterlist ")" "{" codeblock "}"
	parameterlist = . parameters
	parameterlist = .
	parameters = . paramdecl "," parameters
	parameters = . paramdecl
	paramdecl = . typespec IDENT
[301]
	constructordefinition = "destructor" "{" codeblock . "}"
[302]
	inheritlist = typepath "," inheritlist .
[303]
	classdefinition = "class" IDENT ":" inheritlist "{" class_definitionlist . "}"
[304]
	interface_definition = "function" IDENT typespec . "(" extern_paramlist ")" ";"
	interface_definition = "function" IDENT typespec . "(" extern_paramlist ")" "const" ";"
[305]
	extern_parameters = . typespec "," extern_parameters
	extern_parameters = . typespec IDENT "," extern_parameters
	extern_parameters = . typespec
	extern_parameters = . typespec IDENT
	extern_paramlist = . extern_parameters
	extern_paramlist = .
	interface_definition = "procedure" IDENT "(" . extern_paramlist ")" ";"
	interface_definition = "procedure" IDENT "(" . extern_paramlist ")" "const" ";"
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	typespec/L1 = . "any" "class" "^"
	typespec/L1 = . "any" "const" "class" "^"
	typespec/L1 = . "any" "struct" "^"
	typespec/L1 = . "any" "const" "struct" "^"
[306]
	interface_definition = "operator" operatordecl typespec . "(" extern_paramlist ")" ";"
	interface_definition = "operator" operatordecl typespec . "(" extern_paramlist ")" "const" ";"
[307]
	extern_parameters = . typespec "," extern_parameters
	extern_parameters = . typespec IDENT "," extern_parameters
	extern_parameters = . typespec
	extern_parameters = . typespec IDENT
	extern_paramlist = . extern_parameters
	extern_paramlist = .
	interface_definition = "operator" operatordecl "(" . extern_paramlist ")" ";"
	interface_definition = "operator" operatordecl "(" . extern_paramlist ")" "const" ";"
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	typespec/L1 = . "any" "class" "^"
	typespec/L1 = . "any" "const" "class" "^"
	typespec/L1 = . "any" "struct" "^"
	typespec/L1 = . "any" "const" "struct" "^"
[308]
	operatordecl = "(" ")" .
[309]
	operatordecl = "[" "]" .
[310]
	extern_definition = "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist . ")" ";"
	extern_definition = "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist . "..." ")" ";"
[311]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist ")" . ";"
[312]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist "..." . ")" ";"
[313]
	extern_parameters = typespec IDENT . "," extern_parameters
	extern_parameters = typespec IDENT .
[314]
	extern_parameters = . typespec "," extern_parameters
	extern_parameters = typespec "," . extern_parameters
	extern_parameters = . typespec IDENT "," extern_parameters
	extern_parameters = . typespec
	extern_parameters = . typespec IDENT
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	typespec/L1 = . "any" "class" "^"
	typespec/L1 = . "any" "const" "class" "^"
	typespec/L1 = . "any" "struct" "^"
	typespec/L1 = . "any" "const" "struct" "^"
[315]
	expression/L13 = expression "(" expressionlist ")" .
[316]
	expression/L13 = expression "[" expressionlist "]" .
[317]
	expressionlist = expression "," expressionlist .
[318]
	statement/L1 = "if" "(" expression ")" . "{" codeblock "}"
	statement/L1 = "if" "(" expression ")" . "{" codeblock "}" "else" "{" codeblock "}"
[319]
	statement/L1 = "while" "(" expression ")" . "{" codeblock "}"
[320]
	expression/L1 = "new" typespec ":" expression .
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[321]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = "cast" typespec ":" "{" . expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L1 = "cast" typespec ":" "{" . "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[322]
	variabledefinition = typespec IDENT "[" expression "]" "=" expression .
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[323]
	callablebody_const = "(" parameterlist ")" "const" . "{" codeblock "}"
[324]
	typedefinition = . "typedef" typepath IDENT
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" IDENT typespec callablebody
	functiondefinition = . linkage "function" IDENT typespec callablebody_const
	functiondefinition = . linkage "procedure" IDENT callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody_const
	callablebody = "(" parameterlist ")" "{" . codeblock "}"
	codeblock = . statementlist
	statementlist = . statement statementlist
	statementlist = .
	statement/L1 = . functiondefinition
	statement/L1 = . typedefinition ";"
	statement/L1 = . "var" variabledefinition ";"
	statement/L1 = . expression ";"
	statement/L1 = . "return" expression ";"
	statement/L1 = . "delete" expression ";"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}"
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "{" codeblock "}"
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[325]
	parameters = paramdecl "," parameters .
[326]
	operatordefinition = linkage "operator" operatordecl typespec . callablebody
	operatordefinition = linkage "operator" operatordecl typespec . callablebody_const
	callablebody = . "(" parameterlist ")" "{" codeblock "}"
	callablebody_const = . "(" parameterlist ")" "const" "{" codeblock "}"
[327]
	operatordefinition = linkage "operator" operatordecl callablebody .
[328]
	operatordefinition = linkage "operator" operatordecl callablebody_const .
[329]
	callablebody = "(" parameterlist . ")" "{" codeblock "}"
[330]
	constructordefinition = "destructor" "{" codeblock "}" .
[331]
	classdefinition = "class" IDENT ":" inheritlist "{" class_definitionlist "}" .
[332]
	extern_parameters = . typespec "," extern_parameters
	extern_parameters = . typespec IDENT "," extern_parameters
	extern_parameters = . typespec
	extern_parameters = . typespec IDENT
	extern_paramlist = . extern_parameters
	extern_paramlist = .
	interface_definition = "function" IDENT typespec "(" . extern_paramlist ")" ";"
	interface_definition = "function" IDENT typespec "(" . extern_paramlist ")" "const" ";"
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	typespec/L1 = . "any" "class" "^"
	typespec/L1 = . "any" "const" "class" "^"
	typespec/L1 = . "any" "struct" "^"
	typespec/L1 = . "any" "const" "struct" "^"
[333]
	interface_definition = "procedure" IDENT "(" extern_paramlist . ")" ";"
	interface_definition = "procedure" IDENT "(" extern_paramlist . ")" "const" ";"
[334]
	extern_parameters = . typespec "," extern_parameters
	extern_parameters = . typespec IDENT "," extern_parameters
	extern_parameters = . typespec
	extern_parameters = . typespec IDENT
	extern_paramlist = . extern_parameters
	extern_paramlist = .
	interface_definition = "operator" operatordecl typespec "(" . extern_paramlist ")" ";"
	interface_definition = "operator" operatordecl typespec "(" . extern_paramlist ")" "const" ";"
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	typespec/L1 = . "any" "class" "^"
	typespec/L1 = . "any" "const" "class" "^"
	typespec/L1 = . "any" "struct" "^"
	typespec/L1 = . "any" "const" "struct" "^"
[335]
	interface_definition = "operator" operatordecl "(" extern_paramlist . ")" ";"
	interface_definition = "operator" operatordecl "(" extern_paramlist . ")" "const" ";"
[336]
	extern_definition = "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist ")" . ";"
[337]
	extern_definition = "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist "..." . ")" ";"
[338]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist ")" ";" .
[339]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist "..." ")" . ";"
[340]
	extern_parameters = . typespec "," extern_parameters
	extern_parameters = . typespec IDENT "," extern_parameters
	extern_parameters = typespec IDENT "," . extern_parameters
	extern_parameters = . typespec
	extern_parameters = . typespec IDENT
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	typespec/L1 = . "any" "class" "^"
	typespec/L1 = . "any" "const" "class" "^"
	typespec/L1 = . "any" "struct" "^"
	typespec/L1 = . "any" "const" "struct" "^"
[341]
	extern_parameters = typespec "," extern_parameters .
[342]
	typedefinition = . "typedef" typepath IDENT
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" IDENT typespec callablebody
	functiondefinition = . linkage "function" IDENT typespec callablebody_const
	functiondefinition = . linkage "procedure" IDENT callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody_const
	codeblock = . statementlist
	statementlist = . statement statementlist
	statementlist = .
	statement/L1 = . functiondefinition
	statement/L1 = . typedefinition ";"
	statement/L1 = . "var" variabledefinition ";"
	statement/L1 = . expression ";"
	statement/L1 = . "return" expression ";"
	statement/L1 = . "delete" expression ";"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}"
	statement/L1 = "if" "(" expression ")" "{" . codeblock "}"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}"
	statement/L1 = "if" "(" expression ")" "{" . codeblock "}" "else" "{" codeblock "}"
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "{" codeblock "}"
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[343]
	typedefinition = . "typedef" typepath IDENT
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" IDENT typespec callablebody
	functiondefinition = . linkage "function" IDENT typespec callablebody_const
	functiondefinition = . linkage "procedure" IDENT callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody_const
	codeblock = . statementlist
	statementlist = . statement statementlist
	statementlist = .
	statement/L1 = . functiondefinition
	statement/L1 = . typedefinition ";"
	statement/L1 = . "var" variabledefinition ";"
	statement/L1 = . expression ";"
	statement/L1 = . "return" expression ";"
	statement/L1 = . "delete" expression ";"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}"
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}"
	statement/L1 = "while" "(" expression ")" "{" . codeblock "}"
	statement/L1 = . "{" codeblock "}"
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[344]
	expression/L1 = "cast" typespec ":" "{" expression . "}"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[345]
	expression/L1 = "cast" typespec ":" "{" "}" .
[346]
	typedefinition = . "typedef" typepath IDENT
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" IDENT typespec callablebody
	functiondefinition = . linkage "function" IDENT typespec callablebody_const
	functiondefinition = . linkage "procedure" IDENT callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody_const
	callablebody_const = "(" parameterlist ")" "const" "{" . codeblock "}"
	codeblock = . statementlist
	statementlist = . statement statementlist
	statementlist = .
	statement/L1 = . functiondefinition
	statement/L1 = . typedefinition ";"
	statement/L1 = . "var" variabledefinition ";"
	statement/L1 = . expression ";"
	statement/L1 = . "return" expression ";"
	statement/L1 = . "delete" expression ";"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}"
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "{" codeblock "}"
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[347]
	callablebody = "(" parameterlist ")" "{" codeblock . "}"
[348]
	operatordefinition = linkage "operator" operatordecl typespec callablebody .
[349]
	operatordefinition = linkage "operator" operatordecl typespec callablebody_const .
[350]
	callablebody = "(" parameterlist ")" . "{" codeblock "}"
[351]
	interface_definition = "function" IDENT typespec "(" extern_paramlist . ")" ";"
	interface_definition = "function" IDENT typespec "(" extern_paramlist . ")" "const" ";"
[352]
	interface_definition = "procedure" IDENT "(" extern_paramlist ")" . ";"
	interface_definition = "procedure" IDENT "(" extern_paramlist ")" . "const" ";"
[353]
	interface_definition = "operator" operatordecl typespec "(" extern_paramlist . ")" ";"
	interface_definition = "operator" operatordecl typespec "(" extern_paramlist . ")" "const" ";"
[354]
	interface_definition = "operator" operatordecl "(" extern_paramlist ")" . ";"
	interface_definition = "operator" operatordecl "(" extern_paramlist ")" . "const" ";"
[355]
	extern_definition = "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist ")" ";" .
[356]
	extern_definition = "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist "..." ")" . ";"
[357]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist "..." ")" ";" .
[358]
	extern_parameters = typespec IDENT "," extern_parameters .
[359]
	statement/L1 = "if" "(" expression ")" "{" codeblock . "}"
	statement/L1 = "if" "(" expression ")" "{" codeblock . "}" "else" "{" codeblock "}"
[360]
	statement/L1 = "while" "(" expression ")" "{" codeblock . "}"
[361]
	expression/L1 = "cast" typespec ":" "{" expression "}" .
[362]
	callablebody_const = "(" parameterlist ")" "const" "{" codeblock . "}"
[363]
	callablebody = "(" parameterlist ")" "{" codeblock "}" .
[364]
	interface_definition = "function" IDENT typespec "(" extern_paramlist ")" . ";"
	interface_definition = "function" IDENT typespec "(" extern_paramlist ")" . "const" ";"
[365]
	interface_definition = "procedure" IDENT "(" extern_paramlist ")" ";" .
[366]
	interface_definition = "procedure" IDENT "(" extern_paramlist ")" "const" . ";"
[367]
	interface_definition = "operator" operatordecl typespec "(" extern_paramlist ")" . ";"
	interface_definition = "operator" operatordecl typespec "(" extern_paramlist ")" . "const" ";"
[368]
	interface_definition = "operator" operatordecl "(" extern_paramlist ")" ";" .
[369]
	interface_definition = "operator" operatordecl "(" extern_paramlist ")" "const" . ";"
[370]
	extern_definition = "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist "..." ")" ";" .
[371]
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" .
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" . "else" "{" codeblock "}"
[372]
	statement/L1 = "while" "(" expression ")" "{" codeblock "}" .
[373]
	callablebody_const = "(" parameterlist ")" "const" "{" codeblock "}" .
[374]
	interface_definition = "function" IDENT typespec "(" extern_paramlist ")" ";" .
[375]
	interface_definition = "function" IDENT typespec "(" extern_paramlist ")" "const" . ";"
[376]
	interface_definition = "procedure" IDENT "(" extern_paramlist ")" "const" ";" .
[377]
	interface_definition = "operator" operatordecl typespec "(" extern_paramlist ")" ";" .
[378]
	interface_definition = "operator" operatordecl typespec "(" extern_paramlist ")" "const" . ";"
[379]
	interface_definition = "operator" operatordecl "(" extern_paramlist ")" "const" ";" .
[380]
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" "else" . "{" codeblock "}"
[381]
	interface_definition = "function" IDENT typespec "(" extern_paramlist ")" "const" ";" .
[382]
	interface_definition = "operator" operatordecl typespec "(" extern_paramlist ")" "const" ";" .
[383]
	typedefinition = . "typedef" typepath IDENT
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" IDENT typespec callablebody
	functiondefinition = . linkage "function" IDENT typespec callablebody_const
	functiondefinition = . linkage "procedure" IDENT callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody_const
	codeblock = . statementlist
	statementlist = . statement statementlist
	statementlist = .
	statement/L1 = . functiondefinition
	statement/L1 = . typedefinition ";"
	statement/L1 = . "var" variabledefinition ";"
	statement/L1 = . expression ";"
	statement/L1 = . "return" expression ";"
	statement/L1 = . "delete" expression ";"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}"
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" "else" "{" . codeblock "}"
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "{" codeblock "}"
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[384]
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock . "}"
[385]
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}" .

-- LR(0) state cores (for calculation of SHIFT follow state):
[2]
	program = extern_definitionlist . free_definitionlist main_procedure
[3]
	extern_definitionlist = extern_definition . extern_definitionlist
[4]
	extern_definition = "extern" . DQSTRING "function" IDENT typespec "(" extern_paramlist ")" ";"
	extern_definition = "extern" . DQSTRING "procedure" IDENT "(" extern_paramlist ")" ";"
	extern_definition = "extern" . DQSTRING "function" IDENT typespec "(" extern_paramlist "..." ")" ";"
	extern_definition = "extern" . DQSTRING "procedure" IDENT "(" extern_paramlist "..." ")" ";"
[5]
	program = extern_definitionlist free_definitionlist . main_procedure
[6]
	free_definition = struct_definition .
[7]
	free_definitionlist = free_definition . free_definitionlist
[8]
	typespec/L1 = typename .
	typespec/L1 = typename . "&"
	typespec/L1 = typename . "^"
	typespec/L1 = typename . "^" "&"
	typespec/L1 = typename . "^" "^"
	typespec/L1 = typename . "^" "^" "&"
[9]
	variabledefinition = typespec . IDENT
	variabledefinition = typespec . IDENT "=" expression
	variabledefinition = typespec . IDENT "[" expression "]" "=" expression
	variabledefinition = typespec . IDENT "[" expression "]"
[10]
	struct_definition = typedefinition . ";"
[11]
	struct_definition = structdefinition .
[12]
	free_definition = interfacedefinition .
[13]
	free_definition = classdefinition .
[14]
	functiondefinition = linkage . "function" IDENT typespec callablebody
	functiondefinition = linkage . "function" IDENT typespec callablebody_const
	functiondefinition = linkage . "procedure" IDENT callablebody
	functiondefinition = linkage . "procedure" IDENT callablebody_const
[15]
	free_definition = functiondefinition .
[16]
	struct_definition = variabledefinition . ";"
[17]
	typename/L1 = IDENT .
	typename/L1 = IDENT . "::" typename
[18]
	typespec/L1 = "const" . typename
	typespec/L1 = "const" . typename "&"
	typespec/L1 = "const" . typename "^"
	typespec/L1 = "const" . typename "^" "&"
	typespec/L1 = "const" . typename "^" "^"
	typespec/L1 = "const" . typename "^" "^" "&"
[19]
	typespec/L1 = "any" . "class" "^"
	typespec/L1 = "any" . "const" "class" "^"
	typespec/L1 = "any" . "struct" "^"
	typespec/L1 = "any" . "const" "struct" "^"
[20]
	classdefinition = "class" . IDENT "{" class_definitionlist "}"
	classdefinition = "class" . IDENT ":" inheritlist "{" class_definitionlist "}"
[21]
	structdefinition = "struct" . IDENT "{" struct_definitionlist "}"
[22]
	typedefinition = "typedef" . typepath IDENT
[23]
	interfacedefinition = "interface" . IDENT "{" interface_definitionlist "}"
[24]
	linkage = "private" .
[25]
	linkage = "public" .
[26]
	extern_definitionlist = extern_definition extern_definitionlist .
[27]
	extern_definition = "extern" DQSTRING . "function" IDENT typespec "(" extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING . "procedure" IDENT "(" extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING . "function" IDENT typespec "(" extern_paramlist "..." ")" ";"
	extern_definition = "extern" DQSTRING . "procedure" IDENT "(" extern_paramlist "..." ")" ";"
[28]
	program = extern_definitionlist free_definitionlist main_procedure .
[29]
	main_procedure = "main" . "{" codeblock "}"
[30]
	free_definitionlist = free_definition free_definitionlist .
[31]
	typespec/L1 = typename "&" .
[32]
	typespec/L1 = typename "^" .
	typespec/L1 = typename "^" . "&"
	typespec/L1 = typename "^" . "^"
	typespec/L1 = typename "^" . "^" "&"
[33]
	variabledefinition = typespec IDENT .
	variabledefinition = typespec IDENT . "=" expression
	variabledefinition = typespec IDENT . "[" expression "]" "=" expression
	variabledefinition = typespec IDENT . "[" expression "]"
[34]
	struct_definition = typedefinition ";" .
[35]
	functiondefinition = linkage "function" . IDENT typespec callablebody
	functiondefinition = linkage "function" . IDENT typespec callablebody_const
[36]
	functiondefinition = linkage "procedure" . IDENT callablebody
	functiondefinition = linkage "procedure" . IDENT callablebody_const
[37]
	struct_definition = variabledefinition ";" .
[38]
	typename/L1 = IDENT "::" . typename
[39]
	typespec/L1 = "const" typename .
	typespec/L1 = "const" typename . "&"
	typespec/L1 = "const" typename . "^"
	typespec/L1 = "const" typename . "^" "&"
	typespec/L1 = "const" typename . "^" "^"
	typespec/L1 = "const" typename . "^" "^" "&"
[40]
	typespec/L1 = "any" "const" . "class" "^"
	typespec/L1 = "any" "const" . "struct" "^"
[41]
	typespec/L1 = "any" "class" . "^"
[42]
	typespec/L1 = "any" "struct" . "^"
[43]
	classdefinition = "class" IDENT . "{" class_definitionlist "}"
	classdefinition = "class" IDENT . ":" inheritlist "{" class_definitionlist "}"
[44]
	structdefinition = "struct" IDENT . "{" struct_definitionlist "}"
[45]
	typepath/L1 = typename .
[46]
	typedefinition = "typedef" typepath . IDENT
[47]
	interfacedefinition = "interface" IDENT . "{" interface_definitionlist "}"
[48]
	extern_definition = "extern" DQSTRING "function" . IDENT typespec "(" extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING "function" . IDENT typespec "(" extern_paramlist "..." ")" ";"
[49]
	extern_definition = "extern" DQSTRING "procedure" . IDENT "(" extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING "procedure" . IDENT "(" extern_paramlist "..." ")" ";"
[50]
	main_procedure = "main" "{" . codeblock "}"
[51]
	typespec/L1 = typename "^" "&" .
[52]
	typespec/L1 = typename "^" "^" .
	typespec/L1 = typename "^" "^" . "&"
[53]
	variabledefinition = typespec IDENT "=" . expression
[54]
	variabledefinition = typespec IDENT "[" . expression "]" "=" expression
	variabledefinition = typespec IDENT "[" . expression "]"
[55]
	functiondefinition = linkage "function" IDENT . typespec callablebody
	functiondefinition = linkage "function" IDENT . typespec callablebody_const
[56]
	functiondefinition = linkage "procedure" IDENT . callablebody
	functiondefinition = linkage "procedure" IDENT . callablebody_const
[57]
	typename/L1 = IDENT "::" typename .
[58]
	typespec/L1 = "const" typename "&" .
[59]
	typespec/L1 = "const" typename "^" .
	typespec/L1 = "const" typename "^" . "&"
	typespec/L1 = "const" typename "^" . "^"
	typespec/L1 = "const" typename "^" . "^" "&"
[60]
	typespec/L1 = "any" "const" "class" . "^"
[61]
	typespec/L1 = "any" "const" "struct" . "^"
[62]
	typespec/L1 = "any" "class" "^" .
[63]
	typespec/L1 = "any" "struct" "^" .
[64]
	classdefinition = "class" IDENT "{" . class_definitionlist "}"
[65]
	classdefinition = "class" IDENT ":" . inheritlist "{" class_definitionlist "}"
[66]
	structdefinition = "struct" IDENT "{" . struct_definitionlist "}"
[67]
	typedefinition = "typedef" typepath IDENT .
[68]
	interfacedefinition = "interface" IDENT "{" . interface_definitionlist "}"
[69]
	extern_definition = "extern" DQSTRING "function" IDENT . typespec "(" extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING "function" IDENT . typespec "(" extern_paramlist "..." ")" ";"
[70]
	extern_definition = "extern" DQSTRING "procedure" IDENT . "(" extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING "procedure" IDENT . "(" extern_paramlist "..." ")" ";"
[71]
	statement/L1 = typedefinition . ";"
[72]
	statement/L1 = functiondefinition .
[73]
	main_procedure = "main" "{" codeblock . "}"
[74]
	codeblock = statementlist .
[75]
	statementlist = statement . statementlist
[76]
	statement/L1 = expression . ";"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[77]
	expression/L12 = iexpression .
[78]
	expression/L2 = BOOLEAN .
[79]
	expression/L2 = IDENT .
[80]
	expression/L2 = DQSTRING .
[81]
	expression/L2 = SQSTRING .
[82]
	expression/L2 = CARDINAL .
[83]
	expression/L2 = INTEGER .
[84]
	expression/L2 = FLOAT .
[85]
	expression/L2 = "(" . expression ")"
[86]
	expression/L9 = "&" . expression
[87]
	statement/L1 = "{" . codeblock "}"
	expression/L1 = "{" . expressionlist "}"
	expression/L1 = "{" . "}"
[88]
	expression/L9 = "+" . expression
[89]
	expression/L9 = "-" . expression
[90]
	expression/L12 = "*" . expression
[91]
	expression/L9 = "~" . expression
[92]
	expression/L9 = "!" . expression
[93]
	statement/L1 = "var" . variabledefinition ";"
[94]
	statement/L1 = "return" . expression ";"
[95]
	statement/L1 = "delete" . expression ";"
[96]
	statement/L1 = "if" . "(" expression ")" "{" codeblock "}"
	statement/L1 = "if" . "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}"
[97]
	statement/L1 = "while" . "(" expression ")" "{" codeblock "}"
[98]
	expression/L1 = "new" . typespec ":" expression
[99]
	expression/L1 = "cast" . typespec ":" "{" expression "}"
	expression/L1 = "cast" . typespec ":" "{" "}"
[100]
	expression/L2 = "null" .
[101]
	typespec/L1 = typename "^" "^" "&" .
[102]
	variabledefinition = typespec IDENT "=" expression .
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[103]
	expression/L1 = "{" . expressionlist "}"
	expression/L1 = "{" . "}"
[104]
	variabledefinition = typespec IDENT "[" expression . "]" "=" expression
	variabledefinition = typespec IDENT "[" expression . "]"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[105]
	functiondefinition = linkage "function" IDENT typespec . callablebody
	functiondefinition = linkage "function" IDENT typespec . callablebody_const
[106]
	functiondefinition = linkage "procedure" IDENT callablebody .
[107]
	functiondefinition = linkage "procedure" IDENT callablebody_const .
[108]
	callablebody = "(" . parameterlist ")" "{" codeblock "}"
	callablebody_const = "(" . parameterlist ")" "const" "{" codeblock "}"
[109]
	typespec/L1 = "const" typename "^" "&" .
[110]
	typespec/L1 = "const" typename "^" "^" .
	typespec/L1 = "const" typename "^" "^" . "&"
[111]
	typespec/L1 = "any" "const" "class" "^" .
[112]
	typespec/L1 = "any" "const" "struct" "^" .
[113]
	classdefinition = "class" IDENT "{" class_definitionlist . "}"
[114]
	class_definitionlist = class_definition . class_definitionlist
[115]
	class_definition = typedefinition . ";"
[116]
	class_definition = structdefinition .
[117]
	class_definition = interfacedefinition .
[118]
	class_definition = classdefinition .
[119]
	functiondefinition = linkage . "function" IDENT typespec callablebody
	functiondefinition = linkage . "function" IDENT typespec callablebody_const
	functiondefinition = linkage . "procedure" IDENT callablebody
	functiondefinition = linkage . "procedure" IDENT callablebody_const
	constructordefinition = linkage . "constructor" callablebody
	operatordefinition = linkage . "operator" operatordecl typespec callablebody
	operatordefinition = linkage . "operator" operatordecl typespec callablebody_const
	operatordefinition = linkage . "operator" operatordecl callablebody
	operatordefinition = linkage . "operator" operatordecl callablebody_const
[120]
	class_definition = functiondefinition .
[121]
	class_definition = constructordefinition .
[122]
	class_definition = operatordefinition .
[123]
	class_definition = variabledefinition . ";"
[124]
	constructordefinition = "destructor" . "{" codeblock "}"
[125]
	inheritlist = typepath . "," inheritlist
	inheritlist = typepath .
[126]
	classdefinition = "class" IDENT ":" inheritlist . "{" class_definitionlist "}"
[127]
	structdefinition = "struct" IDENT "{" struct_definitionlist . "}"
[128]
	struct_definitionlist = struct_definition . struct_definitionlist
[129]
	interfacedefinition = "interface" IDENT "{" interface_definitionlist . "}"
[130]
	interface_definitionlist = interface_definition . interface_definitionlist
[131]
	interface_definition = "function" . IDENT typespec "(" extern_paramlist ")" ";"
	interface_definition = "function" . IDENT typespec "(" extern_paramlist ")" "const" ";"
[132]
	interface_definition = "procedure" . IDENT "(" extern_paramlist ")" ";"
	interface_definition = "procedure" . IDENT "(" extern_paramlist ")" "const" ";"
[133]
	interface_definition = "operator" . operatordecl typespec "(" extern_paramlist ")" ";"
	interface_definition = "operator" . operatordecl typespec "(" extern_paramlist ")" "const" ";"
	interface_definition = "operator" . operatordecl "(" extern_paramlist ")" ";"
	interface_definition = "operator" . operatordecl "(" extern_paramlist ")" "const" ";"
[134]
	extern_definition = "extern" DQSTRING "function" IDENT typespec . "(" extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING "function" IDENT typespec . "(" extern_paramlist "..." ")" ";"
[135]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" . extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" . extern_paramlist "..." ")" ";"
[136]
	statement/L1 = typedefinition ";" .
[137]
	main_procedure = "main" "{" codeblock "}" .
[138]
	statementlist = statement statementlist .
[139]
	iexpression = expression indirection . IDENT
[140]
	expression/L13 = expression "(" . expressionlist ")"
	expression/L13 = expression "(" . ")"
[141]
	statement/L1 = expression ";" .
[142]
	expression/L7 = expression "&" . expression
[143]
	expression/L7 = expression "^" . expression
[144]
	indirection = "->" . indirection
	indirection = "->" .
[145]
	expression/L3 = expression "=" . expression
[146]
	expression/L9 = expression "+" . expression
[147]
	expression/L9 = expression "-" . expression
[148]
	expression/L10 = expression "*" . expression
[149]
	expression/L10 = expression "/" . expression
[150]
	expression/L10 = expression "%" . expression
[151]
	expression/L5 = expression "&&" . expression
[152]
	expression/L4 = expression "||" . expression
[153]
	expression/L6 = expression "|" . expression
[154]
	expression/L11 = expression "<<" . expression
[155]
	expression/L11 = expression ">>" . expression
[156]
	expression/L13 = expression "[" . expressionlist "]"
[157]
	expression/L8 = expression "==" . expression
[158]
	expression/L8 = expression "!=" . expression
[159]
	expression/L8 = expression ">=" . expression
[160]
	expression/L8 = expression "<=" . expression
[161]
	expression/L8 = expression ">" . expression
[162]
	expression/L8 = expression "<" . expression
[163]
	expression/L3 = expression "+=" . expression
[164]
	expression/L3 = expression "-=" . expression
[165]
	expression/L3 = expression "*=" . expression
[166]
	expression/L3 = expression "/=" . expression
[167]
	expression/L3 = expression "^=" . expression
[168]
	expression/L3 = expression "&=" . expression
	expression/L3 = expression "&=" . expression
[169]
	expression/L3 = expression "%=" . expression
[170]
	expression/L3 = expression "&&=" . expression
[171]
	expression/L3 = expression "||=" . expression
[172]
	expression/L3 = expression "|=" . expression
[173]
	expression/L3 = expression "<<=" . expression
[174]
	expression/L3 = expression ">>=" . expression
[175]
	expression/L12 = expression "." . IDENT
[176]
	expression/L2 = "(" expression . ")"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[177]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L9 = "&" expression .
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[178]
	statement/L1 = "{" codeblock . "}"
[179]
	statement/L1 = expression . ";"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	expressionlist = expression . "," expressionlist
	expressionlist = expression .
[180]
	expression/L1 = "{" expressionlist . "}"
[181]
	expression/L1 = "{" "}" .
[182]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L9 = "+" expression .
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[183]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L9 = "-" expression .
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[184]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L12 = "*" expression .
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[185]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L9 = "~" expression .
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[186]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L9 = "!" expression .
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[187]
	statement/L1 = "var" variabledefinition . ";"
[188]
	statement/L1 = "return" expression . ";"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[189]
	statement/L1 = "delete" expression . ";"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[190]
	statement/L1 = "if" "(" . expression ")" "{" codeblock "}"
	statement/L1 = "if" "(" . expression ")" "{" codeblock "}" "else" "{" codeblock "}"
[191]
	statement/L1 = "while" "(" . expression ")" "{" codeblock "}"
[192]
	expression/L1 = "new" typespec . ":" expression
[193]
	expression/L1 = "cast" typespec . ":" "{" expression "}"
	expression/L1 = "cast" typespec . ":" "{" "}"
[194]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	expressionlist = expression . "," expressionlist
	expressionlist = expression .
[195]
	variabledefinition = typespec IDENT "[" expression "]" . "=" expression
	variabledefinition = typespec IDENT "[" expression "]" .
[196]
	functiondefinition = linkage "function" IDENT typespec callablebody .
[197]
	functiondefinition = linkage "function" IDENT typespec callablebody_const .
[198]
	paramdecl = typespec . IDENT
[199]
	callablebody = "(" parameterlist . ")" "{" codeblock "}"
	callablebody_const = "(" parameterlist . ")" "const" "{" codeblock "}"
[200]
	parameterlist = parameters .
[201]
	parameters = paramdecl . "," parameters
	parameters = paramdecl .
[202]
	typespec/L1 = "const" typename "^" "^" "&" .
[203]
	classdefinition = "class" IDENT "{" class_definitionlist "}" .
[204]
	class_definitionlist = class_definition class_definitionlist .
[205]
	class_definition = typedefinition ";" .
[206]
	operatordefinition = linkage "operator" . operatordecl typespec callablebody
	operatordefinition = linkage "operator" . operatordecl typespec callablebody_const
	operatordefinition = linkage "operator" . operatordecl callablebody
	operatordefinition = linkage "operator" . operatordecl callablebody_const
[207]
	constructordefinition = linkage "constructor" . callablebody
[208]
	class_definition = variabledefinition ";" .
[209]
	constructordefinition = "destructor" "{" . codeblock "}"
[210]
	inheritlist = typepath "," . inheritlist
[211]
	classdefinition = "class" IDENT ":" inheritlist "{" . class_definitionlist "}"
[212]
	structdefinition = "struct" IDENT "{" struct_definitionlist "}" .
[213]
	struct_definitionlist = struct_definition struct_definitionlist .
[214]
	interfacedefinition = "interface" IDENT "{" interface_definitionlist "}" .
[215]
	interface_definitionlist = interface_definition interface_definitionlist .
[216]
	interface_definition = "function" IDENT . typespec "(" extern_paramlist ")" ";"
	interface_definition = "function" IDENT . typespec "(" extern_paramlist ")" "const" ";"
[217]
	interface_definition = "procedure" IDENT . "(" extern_paramlist ")" ";"
	interface_definition = "procedure" IDENT . "(" extern_paramlist ")" "const" ";"
[218]
	interface_definition = "operator" operatordecl . typespec "(" extern_paramlist ")" ";"
	interface_definition = "operator" operatordecl . typespec "(" extern_paramlist ")" "const" ";"
	interface_definition = "operator" operatordecl . "(" extern_paramlist ")" ";"
	interface_definition = "operator" operatordecl . "(" extern_paramlist ")" "const" ";"
[219]
	operatordecl = "(" . ")"
[220]
	operatordecl = "&" .
[221]
	operatordecl = "->" .
[222]
	operatordecl = "=" .
[223]
	operatordecl = "+" .
[224]
	operatordecl = "-" .
[225]
	operatordecl = "*" .
[226]
	operatordecl = "/" .
[227]
	operatordecl = "%" .
[228]
	operatordecl = "&&" .
[229]
	operatordecl = "||" .
[230]
	operatordecl = "|" .
[231]
	operatordecl = "<<" .
[232]
	operatordecl = ">>" .
[233]
	operatordecl = "~" .
[234]
	operatordecl = "!" .
[235]
	operatordecl = "[" . "]"
[236]
	operatordecl = "==" .
[237]
	operatordecl = "!=" .
[238]
	operatordecl = ">=" .
[239]
	operatordecl = "<=" .
[240]
	operatordecl = ">" .
[241]
	operatordecl = "<" .
[242]
	extern_definition = "extern" DQSTRING "function" IDENT typespec "(" . extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING "function" IDENT typespec "(" . extern_paramlist "..." ")" ";"
[243]
	extern_paramlist = extern_parameters .
[244]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist . ")" ";"
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist . "..." ")" ";"
[245]
	extern_parameters = typespec . "," extern_parameters
	extern_parameters = typespec . IDENT "," extern_parameters
	extern_parameters = typespec .
	extern_parameters = typespec . IDENT
[246]
	iexpression = expression indirection IDENT .
[247]
	expression/L13 = expression "(" expressionlist . ")"
[248]
	expression/L13 = expression "(" ")" .
[249]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L7 = expression "&" expression .
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[250]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression "^" expression .
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[251]
	indirection = "->" indirection .
[252]
	expression/L3 = expression . "=" expression
	expression/L3 = expression "=" expression .
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[253]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression "+" expression .
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[254]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L9 = expression "-" expression .
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[255]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression "*" expression .
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[256]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression "/" expression .
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[257]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L10 = expression "%" expression .
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[258]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L5 = expression "&&" expression .
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[259]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L4 = expression "||" expression .
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[260]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L6 = expression "|" expression .
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[261]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression "<<" expression .
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[262]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L11 = expression ">>" expression .
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[263]
	expression/L13 = expression "[" expressionlist . "]"
[264]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression "==" expression .
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[265]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression "!=" expression .
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[266]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression ">=" expression .
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[267]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression "<=" expression .
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[268]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L8 = expression ">" expression .
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[269]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression "<" expression .
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[270]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression "+=" expression .
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[271]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression "-=" expression .
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[272]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression "*=" expression .
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[273]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression "/=" expression .
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[274]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression "^=" expression .
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[275]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression "&=" expression .
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression "&=" expression .
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[276]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression "%=" expression .
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[277]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression "&&=" expression .
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[278]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression "||=" expression .
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[279]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression "|=" expression .
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[280]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression "<<=" expression .
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[281]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L3 = expression ">>=" expression .
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[282]
	expression/L12 = expression "." IDENT .
[283]
	expression/L2 = "(" expression ")" .
[284]
	statement/L1 = "{" codeblock "}" .
[285]
	expressionlist = expression "," . expressionlist
[286]
	expression/L1 = "{" expressionlist "}" .
[287]
	statement/L1 = "var" variabledefinition ";" .
[288]
	statement/L1 = "return" expression ";" .
[289]
	statement/L1 = "delete" expression ";" .
[290]
	statement/L1 = "if" "(" expression . ")" "{" codeblock "}"
	statement/L1 = "if" "(" expression . ")" "{" codeblock "}" "else" "{" codeblock "}"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[291]
	statement/L1 = "while" "(" expression . ")" "{" codeblock "}"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[292]
	expression/L1 = "new" typespec ":" . expression
[293]
	expression/L1 = "cast" typespec ":" . "{" expression "}"
	expression/L1 = "cast" typespec ":" . "{" "}"
[294]
	variabledefinition = typespec IDENT "[" expression "]" "=" . expression
[295]
	paramdecl = typespec IDENT .
[296]
	callablebody = "(" parameterlist ")" . "{" codeblock "}"
	callablebody_const = "(" parameterlist ")" . "const" "{" codeblock "}"
[297]
	parameters = paramdecl "," . parameters
[298]
	operatordefinition = linkage "operator" operatordecl . typespec callablebody
	operatordefinition = linkage "operator" operatordecl . typespec callablebody_const
	operatordefinition = linkage "operator" operatordecl . callablebody
	operatordefinition = linkage "operator" operatordecl . callablebody_const
[299]
	constructordefinition = linkage "constructor" callablebody .
[300]
	callablebody = "(" . parameterlist ")" "{" codeblock "}"
[301]
	constructordefinition = "destructor" "{" codeblock . "}"
[302]
	inheritlist = typepath "," inheritlist .
[303]
	classdefinition = "class" IDENT ":" inheritlist "{" class_definitionlist . "}"
[304]
	interface_definition = "function" IDENT typespec . "(" extern_paramlist ")" ";"
	interface_definition = "function" IDENT typespec . "(" extern_paramlist ")" "const" ";"
[305]
	interface_definition = "procedure" IDENT "(" . extern_paramlist ")" ";"
	interface_definition = "procedure" IDENT "(" . extern_paramlist ")" "const" ";"
[306]
	interface_definition = "operator" operatordecl typespec . "(" extern_paramlist ")" ";"
	interface_definition = "operator" operatordecl typespec . "(" extern_paramlist ")" "const" ";"
[307]
	interface_definition = "operator" operatordecl "(" . extern_paramlist ")" ";"
	interface_definition = "operator" operatordecl "(" . extern_paramlist ")" "const" ";"
[308]
	operatordecl = "(" ")" .
[309]
	operatordecl = "[" "]" .
[310]
	extern_definition = "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist . ")" ";"
	extern_definition = "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist . "..." ")" ";"
[311]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist ")" . ";"
[312]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist "..." . ")" ";"
[313]
	extern_parameters = typespec IDENT . "," extern_parameters
	extern_parameters = typespec IDENT .
[314]
	extern_parameters = typespec "," . extern_parameters
[315]
	expression/L13 = expression "(" expressionlist ")" .
[316]
	expression/L13 = expression "[" expressionlist "]" .
[317]
	expressionlist = expression "," expressionlist .
[318]
	statement/L1 = "if" "(" expression ")" . "{" codeblock "}"
	statement/L1 = "if" "(" expression ")" . "{" codeblock "}" "else" "{" codeblock "}"
[319]
	statement/L1 = "while" "(" expression ")" . "{" codeblock "}"
[320]
	expression/L1 = "new" typespec ":" expression .
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[321]
	expression/L1 = "cast" typespec ":" "{" . expression "}"
	expression/L1 = "cast" typespec ":" "{" . "}"
[322]
	variabledefinition = typespec IDENT "[" expression "]" "=" expression .
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[323]
	callablebody_const = "(" parameterlist ")" "const" . "{" codeblock "}"
[324]
	callablebody = "(" parameterlist ")" "{" . codeblock "}"
[325]
	parameters = paramdecl "," parameters .
[326]
	operatordefinition = linkage "operator" operatordecl typespec . callablebody
	operatordefinition = linkage "operator" operatordecl typespec . callablebody_const
[327]
	operatordefinition = linkage "operator" operatordecl callablebody .
[328]
	operatordefinition = linkage "operator" operatordecl callablebody_const .
[329]
	callablebody = "(" parameterlist . ")" "{" codeblock "}"
[330]
	constructordefinition = "destructor" "{" codeblock "}" .
[331]
	classdefinition = "class" IDENT ":" inheritlist "{" class_definitionlist "}" .
[332]
	interface_definition = "function" IDENT typespec "(" . extern_paramlist ")" ";"
	interface_definition = "function" IDENT typespec "(" . extern_paramlist ")" "const" ";"
[333]
	interface_definition = "procedure" IDENT "(" extern_paramlist . ")" ";"
	interface_definition = "procedure" IDENT "(" extern_paramlist . ")" "const" ";"
[334]
	interface_definition = "operator" operatordecl typespec "(" . extern_paramlist ")" ";"
	interface_definition = "operator" operatordecl typespec "(" . extern_paramlist ")" "const" ";"
[335]
	interface_definition = "operator" operatordecl "(" extern_paramlist . ")" ";"
	interface_definition = "operator" operatordecl "(" extern_paramlist . ")" "const" ";"
[336]
	extern_definition = "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist ")" . ";"
[337]
	extern_definition = "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist "..." . ")" ";"
[338]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist ")" ";" .
[339]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist "..." ")" . ";"
[340]
	extern_parameters = typespec IDENT "," . extern_parameters
[341]
	extern_parameters = typespec "," extern_parameters .
[342]
	statement/L1 = "if" "(" expression ")" "{" . codeblock "}"
	statement/L1 = "if" "(" expression ")" "{" . codeblock "}" "else" "{" codeblock "}"
[343]
	statement/L1 = "while" "(" expression ")" "{" . codeblock "}"
[344]
	expression/L1 = "cast" typespec ":" "{" expression . "}"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[345]
	expression/L1 = "cast" typespec ":" "{" "}" .
[346]
	callablebody_const = "(" parameterlist ")" "const" "{" . codeblock "}"
[347]
	callablebody = "(" parameterlist ")" "{" codeblock . "}"
[348]
	operatordefinition = linkage "operator" operatordecl typespec callablebody .
[349]
	operatordefinition = linkage "operator" operatordecl typespec callablebody_const .
[350]
	callablebody = "(" parameterlist ")" . "{" codeblock "}"
[351]
	interface_definition = "function" IDENT typespec "(" extern_paramlist . ")" ";"
	interface_definition = "function" IDENT typespec "(" extern_paramlist . ")" "const" ";"
[352]
	interface_definition = "procedure" IDENT "(" extern_paramlist ")" . ";"
	interface_definition = "procedure" IDENT "(" extern_paramlist ")" . "const" ";"
[353]
	interface_definition = "operator" operatordecl typespec "(" extern_paramlist . ")" ";"
	interface_definition = "operator" operatordecl typespec "(" extern_paramlist . ")" "const" ";"
[354]
	interface_definition = "operator" operatordecl "(" extern_paramlist ")" . ";"
	interface_definition = "operator" operatordecl "(" extern_paramlist ")" . "const" ";"
[355]
	extern_definition = "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist ")" ";" .
[356]
	extern_definition = "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist "..." ")" . ";"
[357]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist "..." ")" ";" .
[358]
	extern_parameters = typespec IDENT "," extern_parameters .
[359]
	statement/L1 = "if" "(" expression ")" "{" codeblock . "}"
	statement/L1 = "if" "(" expression ")" "{" codeblock . "}" "else" "{" codeblock "}"
[360]
	statement/L1 = "while" "(" expression ")" "{" codeblock . "}"
[361]
	expression/L1 = "cast" typespec ":" "{" expression "}" .
[362]
	callablebody_const = "(" parameterlist ")" "const" "{" codeblock . "}"
[363]
	callablebody = "(" parameterlist ")" "{" codeblock "}" .
[364]
	interface_definition = "function" IDENT typespec "(" extern_paramlist ")" . ";"
	interface_definition = "function" IDENT typespec "(" extern_paramlist ")" . "const" ";"
[365]
	interface_definition = "procedure" IDENT "(" extern_paramlist ")" ";" .
[366]
	interface_definition = "procedure" IDENT "(" extern_paramlist ")" "const" . ";"
[367]
	interface_definition = "operator" operatordecl typespec "(" extern_paramlist ")" . ";"
	interface_definition = "operator" operatordecl typespec "(" extern_paramlist ")" . "const" ";"
[368]
	interface_definition = "operator" operatordecl "(" extern_paramlist ")" ";" .
[369]
	interface_definition = "operator" operatordecl "(" extern_paramlist ")" "const" . ";"
[370]
	extern_definition = "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist "..." ")" ";" .
[371]
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" .
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" . "else" "{" codeblock "}"
[372]
	statement/L1 = "while" "(" expression ")" "{" codeblock "}" .
[373]
	callablebody_const = "(" parameterlist ")" "const" "{" codeblock "}" .
[374]
	interface_definition = "function" IDENT typespec "(" extern_paramlist ")" ";" .
[375]
	interface_definition = "function" IDENT typespec "(" extern_paramlist ")" "const" . ";"
[376]
	interface_definition = "procedure" IDENT "(" extern_paramlist ")" "const" ";" .
[377]
	interface_definition = "operator" operatordecl typespec "(" extern_paramlist ")" ";" .
[378]
	interface_definition = "operator" operatordecl typespec "(" extern_paramlist ")" "const" . ";"
[379]
	interface_definition = "operator" operatordecl "(" extern_paramlist ")" "const" ";" .
[380]
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" "else" . "{" codeblock "}"
[381]
	interface_definition = "function" IDENT typespec "(" extern_paramlist ")" "const" ";" .
[382]
	interface_definition = "operator" operatordecl typespec "(" extern_paramlist ")" "const" ";" .
[383]
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" "else" "{" . codeblock "}"
[384]
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock . "}"
[385]
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}" .

-- LR(1) used FOLLOW sets labeled:
[0]: {$}
[1]: {$ IDENT "function" "procedure" "const" "any" "class" "struct" "typedef" "interface" "private" "public" "main"}
[2]: {$ "main"}
[9]: {'('}
[10]: {')'}
[13]: {IDENT}
[15]: {';'}
[18]: {'}'}
[19]: {'{'}
[25]: {']'}
[26]: {':'}
[59]: {$ IDENT "extern" "function" "procedure" "const" "any" "class" "struct" "typedef" "interface" "private" "public" "main"}
[61]: {"function" "procedure"}
[62]: {IDENT '&' '^'}
[97]: {'(' ';' '&' '^' "->" '=' '+' '-' '*' '/' '%' "&&" "||" '|' "<<" ">>" '[' "==" "!=" ">=" "<=" '>' '<' "+=" "-=" "*=" "/=" "^=" "&=" "%=" "&&=" "||=" "|=" "<<=" ">>=" '.'}
[98]: {$ BOOLEAN IDENT DQSTRING SQSTRING CARDINAL INTEGER FLOAT "function" '(' "procedure" '&' "typedef" '{' '}' "private" "public" '+' '-' '*' '~' '!' "var" "return" "delete" "if" "while" "new" "cast" "null"}
[167]: {'(' '&' '^' "->" '=' '+' '-' '*' '/' '%' "&&" "||" '|' "<<" ">>" '[' ']' "==" "!=" ">=" "<=" '>' '<' "+=" "-=" "*=" "/=" "^=" "&=" "%=" "&&=" "||=" "|=" "<<=" ">>=" '.'}
[168]: {'(' '&' '^'}
[170]: {"function" "procedure" "operator" "constructor"}
[171]: {$ IDENT "function" "procedure" "const" "operator" "any" "class" "struct" "typedef" '}' "interface" "private" "public" "constructor" "destructor"}
[172]: {$ IDENT "function" "procedure" "const" "operator" "any" "class" "struct" "typedef" '}' "interface" "private" "public" "constructor" "destructor" "main"}
[173]: {',' '{'}
[174]: {$ IDENT "const" "any" "struct" "typedef" '}'}
[175]: {$ IDENT "function" "procedure" "const" "any" "class" "struct" "typedef" '}' "interface" "private" "public" "main"}
[176]: {$ "function" "procedure" "operator" '}'}
[179]: {'(' ';' ',' '&' '^' '}' "->" '=' '+' '-' '*' '/' '%' "&&" "||" '|' "<<" ">>" '[' "==" "!=" ">=" "<=" '>' '<' "+=" "-=" "*=" "/=" "^=" "&=" "%=" "&&=" "||=" "|=" "<<=" ">>=" '.'}
[180]: {'&' '^' ':'}
[184]: {')' ','}
[185]: {IDENT '(' "const" "any"}
[186]: {')' "..."}
[189]: {IDENT ')' "..." ','}
[190]: {IDENT ')' "..." ',' '&' '^'}
[228]: {'(' ')' '&' '^' "->" '=' '+' '-' '*' '/' '%' "&&" "||" '|' "<<" ">>" '[' "==" "!=" ">=" "<=" '>' '<' "+=" "-=" "*=" "/=" "^=" "&=" "%=" "&&=" "||=" "|=" "<<=" ">>=" '.'}
[230]: {'(' ')' ',' '&' '^' '}' "->" '=' '+' '-' '*' '/' '%' "&&" "||" '|' "<<" ">>" '[' ']' "==" "!=" ">=" "<=" '>' '<' "+=" "-=" "*=" "/=" "^=" "&=" "%=" "&&=" "||=" "|=" "<<=" ">>=" '.'}
[237]: {IDENT ')' ','}
[238]: {IDENT ')' ',' '&' '^'}
[239]: {'(' ')' ';' ',' '&' '^' '}' "->" '=' '+' '-' '*' '/' '%' "&&" "||" '|' "<<" ">>" '[' ']' "==" "!=" ">=" "<=" '>' '<' "+=" "-=" "*=" "/=" "^=" "&=" "%=" "&&=" "||=" "|=" "<<=" ">>=" '.'}
[247]: {$ BOOLEAN IDENT DQSTRING SQSTRING CARDINAL INTEGER FLOAT "function" '(' "procedure" "const" "operator" '&' "any" "class" "struct" "typedef" '{' '}' "interface" "private" "public" "constructor" "destructor" '+' '-' '*' '~' '!' "main" "var" "return" "delete" "if" "while" "new" "cast" "null"}
[255]: {')' '}' ']'}
[257]: {$ BOOLEAN IDENT DQSTRING SQSTRING CARDINAL INTEGER FLOAT "function" '(' "procedure" "const" '&' "any" "class" "struct" "typedef" '{' '}' "interface" "private" "public" '+' '-' '*' '~' '!' "main" "var" "return" "delete" "if" "while" "new" "cast" "null"}
[267]: {IDENT '(' ')' "..." ',' ':'}
[268]: {IDENT '(' ')' "..." ',' '&' '^' ':'}
[274]: {IDENT '(' ')' "..." ',' '&' '^' '{' ':'}
[275]: {IDENT ',' '{'}

-- LALR(1) states (merged LR(1) elements assigned to LR(0) states):
[1]
	program = . extern_definitionlist free_definitionlist main_procedure, FOLLOW [0] -> GOTO 2
	extern_definitionlist = . extern_definition extern_definitionlist, FOLLOW [1] -> GOTO 3
	extern_definition = . "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist ")" ";", FOLLOW [59] -> SHIFT "extern" GOTO 4
	extern_definition = . "extern" DQSTRING "procedure" IDENT "(" extern_paramlist ")" ";", FOLLOW [59] -> SHIFT "extern" GOTO 4
	extern_definition = . "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist "..." ")" ";", FOLLOW [59] -> SHIFT "extern" GOTO 4
	extern_definition = . "extern" DQSTRING "procedure" IDENT "(" extern_paramlist "..." ")" ";", FOLLOW [59] -> SHIFT "extern" GOTO 4
	extern_definitionlist = ., FOLLOW [1] -> REDUCE extern_definitionlist #0
[2]
	program = extern_definitionlist . free_definitionlist main_procedure, FOLLOW [0] -> GOTO 5
	free_definition = . struct_definition, FOLLOW [1] -> GOTO 6
	free_definitionlist = . free_definition free_definitionlist, FOLLOW [2] -> GOTO 7
	typespec/L1 = . typename, FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [13] -> GOTO 8
	variabledefinition = . typespec IDENT, FOLLOW [15] -> GOTO 9
	variabledefinition = . typespec IDENT "=" expression, FOLLOW [15] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression, FOLLOW [15] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]", FOLLOW [15] -> GOTO 9
	struct_definition = . typedefinition ";", FOLLOW [1] -> GOTO 10
	struct_definition = . structdefinition, FOLLOW [1] -> GOTO 11
	free_definition = . interfacedefinition, FOLLOW [1] -> GOTO 12
	free_definition = . classdefinition, FOLLOW [1] -> GOTO 13
	functiondefinition = . linkage "function" IDENT typespec callablebody, FOLLOW [1] -> GOTO 14
	functiondefinition = . linkage "function" IDENT typespec callablebody_const, FOLLOW [1] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [1] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody_const, FOLLOW [1] -> GOTO 14
	free_definition = . functiondefinition, FOLLOW [1] -> GOTO 15
	struct_definition = . variabledefinition ";", FOLLOW [1] -> GOTO 16
	typename/L1 = . IDENT, FOLLOW [62] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [62] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "any" "class" "^", FOLLOW [13] -> SHIFT "any" GOTO 19
	typespec/L1 = . "any" "const" "class" "^", FOLLOW [13] -> SHIFT "any" GOTO 19
	typespec/L1 = . "any" "struct" "^", FOLLOW [13] -> SHIFT "any" GOTO 19
	typespec/L1 = . "any" "const" "struct" "^", FOLLOW [13] -> SHIFT "any" GOTO 19
	classdefinition = . "class" IDENT "{" class_definitionlist "}", FOLLOW [1] -> SHIFT "class" GOTO 20
	classdefinition = . "class" IDENT ":" inheritlist "{" class_definitionlist "}", FOLLOW [1] -> SHIFT "class" GOTO 20
	structdefinition = . "struct" IDENT "{" struct_definitionlist "}", FOLLOW [1] -> SHIFT "struct" GOTO 21
	typedefinition = . "typedef" typepath IDENT, FOLLOW [15] -> SHIFT "typedef" GOTO 22
	interfacedefinition = . "interface" IDENT "{" interface_definitionlist "}", FOLLOW [1] -> SHIFT "interface" GOTO 23
	linkage = . "private", FOLLOW [61] -> SHIFT "private" GOTO 24
	linkage = . "public", FOLLOW [61] -> SHIFT "public" GOTO 25
	free_definitionlist = ., FOLLOW [2] -> REDUCE free_definitionlist #0
	linkage = . (38), FOLLOW [61] -> REDUCE linkage #0 CALL linkage {private=false,linkage="external"}
[3]
	extern_definitionlist = extern_definition . extern_definitionlist, FOLLOW [1] -> GOTO 26
	extern_definitionlist = . extern_definition extern_definitionlist, FOLLOW [1] -> GOTO 3
	extern_definition = . "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist ")" ";", FOLLOW [59] -> SHIFT "extern" GOTO 4
	extern_definition = . "extern" DQSTRING "procedure" IDENT "(" extern_paramlist ")" ";", FOLLOW [59] -> SHIFT "extern" GOTO 4
	extern_definition = . "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist "..." ")" ";", FOLLOW [59] -> SHIFT "extern" GOTO 4
	extern_definition = . "extern" DQSTRING "procedure" IDENT "(" extern_paramlist "..." ")" ";", FOLLOW [59] -> SHIFT "extern" GOTO 4
	extern_definitionlist = ., FOLLOW [1] -> REDUCE extern_definitionlist #0
[4]
	extern_definition = "extern" . DQSTRING "function" IDENT typespec "(" extern_paramlist ")" ";", FOLLOW [59] -> SHIFT DQSTRING GOTO 27
	extern_definition = "extern" . DQSTRING "procedure" IDENT "(" extern_paramlist ")" ";", FOLLOW [59] -> SHIFT DQSTRING GOTO 27
	extern_definition = "extern" . DQSTRING "function" IDENT typespec "(" extern_paramlist "..." ")" ";", FOLLOW [59] -> SHIFT DQSTRING GOTO 27
	extern_definition = "extern" . DQSTRING "procedure" IDENT "(" extern_paramlist "..." ")" ";", FOLLOW [59] -> SHIFT DQSTRING GOTO 27
[5]
	program = extern_definitionlist free_definitionlist . main_procedure, FOLLOW [0] -> GOTO 28
	main_procedure = . "main" "{" codeblock "}", FOLLOW [0] -> SHIFT "main" GOTO 29
	main_procedure = ., FOLLOW [0] -> REDUCE main_procedure #0
[6]
	free_definition = struct_definition ., FOLLOW [1] -> REDUCE free_definition #1
[7]
	free_definitionlist = free_definition . free_definitionlist, FOLLOW [2] -> GOTO 30
	free_definition = . struct_definition, FOLLOW [1] -> GOTO 6
	free_definitionlist = . free_definition free_definitionlist, FOLLOW [2] -> GOTO 7
	typespec/L1 = . typename, FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [13] -> GOTO 8
	variabledefinition = . typespec IDENT, FOLLOW [15] -> GOTO 9
	variabledefinition = . typespec IDENT "=" expression, FOLLOW [15] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression, FOLLOW [15] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]", FOLLOW [15] -> GOTO 9
	struct_definition = . typedefinition ";", FOLLOW [1] -> GOTO 10
	struct_definition = . structdefinition, FOLLOW [1] -> GOTO 11
	free_definition = . interfacedefinition, FOLLOW [1] -> GOTO 12
	free_definition = . classdefinition, FOLLOW [1] -> GOTO 13
	functiondefinition = . linkage "function" IDENT typespec callablebody, FOLLOW [1] -> GOTO 14
	functiondefinition = . linkage "function" IDENT typespec callablebody_const, FOLLOW [1] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [1] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody_const, FOLLOW [1] -> GOTO 14
	free_definition = . functiondefinition, FOLLOW [1] -> GOTO 15
	struct_definition = . variabledefinition ";", FOLLOW [1] -> GOTO 16
	typename/L1 = . IDENT, FOLLOW [62] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [62] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "any" "class" "^", FOLLOW [13] -> SHIFT "any" GOTO 19
	typespec/L1 = . "any" "const" "class" "^", FOLLOW [13] -> SHIFT "any" GOTO 19
	typespec/L1 = . "any" "struct" "^", FOLLOW [13] -> SHIFT "any" GOTO 19
	typespec/L1 = . "any" "const" "struct" "^", FOLLOW [13] -> SHIFT "any" GOTO 19
	classdefinition = . "class" IDENT "{" class_definitionlist "}", FOLLOW [1] -> SHIFT "class" GOTO 20
	classdefinition = . "class" IDENT ":" inheritlist "{" class_definitionlist "}", FOLLOW [1] -> SHIFT "class" GOTO 20
	structdefinition = . "struct" IDENT "{" struct_definitionlist "}", FOLLOW [1] -> SHIFT "struct" GOTO 21
	typedefinition = . "typedef" typepath IDENT, FOLLOW [15] -> SHIFT "typedef" GOTO 22
	interfacedefinition = . "interface" IDENT "{" interface_definitionlist "}", FOLLOW [1] -> SHIFT "interface" GOTO 23
	linkage = . "private", FOLLOW [61] -> SHIFT "private" GOTO 24
	linkage = . "public", FOLLOW [61] -> SHIFT "public" GOTO 25
	free_definitionlist = ., FOLLOW [2] -> REDUCE free_definitionlist #0
	linkage = . (38), FOLLOW [61] -> REDUCE linkage #0 CALL linkage {private=false,linkage="external"}
[8]
	typespec/L1 = typename . "&", FOLLOW [267] -> SHIFT '&' GOTO 31
	typespec/L1 = typename . "^", FOLLOW [267] -> SHIFT '^' GOTO 32
	typespec/L1 = typename . "^" "&", FOLLOW [267] -> SHIFT '^' GOTO 32
	typespec/L1 = typename . "^" "^", FOLLOW [267] -> SHIFT '^' GOTO 32
	typespec/L1 = typename . "^" "^" "&", FOLLOW [267] -> SHIFT '^' GOTO 32
	typespec/L1 = typename . (18), FOLLOW [267] -> REDUCE typespec #1 CALL typespec ""
[9]
	variabledefinition = typespec . IDENT, FOLLOW [15] -> SHIFT IDENT GOTO 33
	variabledefinition = typespec . IDENT "=" expression, FOLLOW [15] -> SHIFT IDENT GOTO 33
	variabledefinition = typespec . IDENT "[" expression "]" "=" expression, FOLLOW [15] -> SHIFT IDENT GOTO 33
	variabledefinition = typespec . IDENT "[" expression "]", FOLLOW [15] -> SHIFT IDENT GOTO 33
[10]
	struct_definition = typedefinition . ";", FOLLOW [175] -> SHIFT ';' GOTO 34
[11]
	struct_definition = structdefinition . (16), FOLLOW [175] -> REDUCE struct_definition #1 CALL definition 1
[12]
	free_definition = interfacedefinition . (16), FOLLOW [1] -> REDUCE free_definition #1 CALL definition 1
[13]
	free_definition = classdefinition . (16), FOLLOW [1] -> REDUCE free_definition #1 CALL definition 1
[14]
	functiondefinition = linkage . "function" IDENT typespec callablebody, FOLLOW [257] -> SHIFT "function" GOTO 35
	functiondefinition = linkage . "function" IDENT typespec callablebody_const, FOLLOW [257] -> SHIFT "function" GOTO 35
	functiondefinition = linkage . "procedure" IDENT callablebody, FOLLOW [257] -> SHIFT "procedure" GOTO 36
	functiondefinition = linkage . "procedure" IDENT callablebody_const, FOLLOW [257] -> SHIFT "procedure" GOTO 36
[15]
	free_definition = functiondefinition . (16), FOLLOW [1] -> REDUCE free_definition #1 CALL definition 1
[16]
	struct_definition = variabledefinition . ";", FOLLOW [175] -> SHIFT ';' GOTO 37
[17]
	typename/L1 = IDENT . "::" typename, FOLLOW [274] -> SHIFT "::" GOTO 38
	typename/L1 = IDENT ., FOLLOW [274] -> REDUCE typename #1
[18]
	typespec/L1 = "const" . typename, FOLLOW [267] -> GOTO 39
	typespec/L1 = "const" . typename "&", FOLLOW [267] -> GOTO 39
	typespec/L1 = "const" . typename "^", FOLLOW [267] -> GOTO 39
	typespec/L1 = "const" . typename "^" "&", FOLLOW [267] -> GOTO 39
	typespec/L1 = "const" . typename "^" "^", FOLLOW [267] -> GOTO 39
	typespec/L1 = "const" . typename "^" "^" "&", FOLLOW [267] -> GOTO 39
	typename/L1 = . IDENT, FOLLOW [268] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [268] -> SHIFT IDENT GOTO 17
[19]
	typespec/L1 = "any" . "const" "class" "^", FOLLOW [267] -> SHIFT "const" GOTO 40
	typespec/L1 = "any" . "const" "struct" "^", FOLLOW [267] -> SHIFT "const" GOTO 40
	typespec/L1 = "any" . "class" "^", FOLLOW [267] -> SHIFT "class" GOTO 41
	typespec/L1 = "any" . "struct" "^", FOLLOW [267] -> SHIFT "struct" GOTO 42
[20]
	classdefinition = "class" . IDENT "{" class_definitionlist "}", FOLLOW [172] -> SHIFT IDENT GOTO 43
	classdefinition = "class" . IDENT ":" inheritlist "{" class_definitionlist "}", FOLLOW [172] -> SHIFT IDENT GOTO 43
[21]
	structdefinition = "struct" . IDENT "{" struct_definitionlist "}", FOLLOW [172] -> SHIFT IDENT GOTO 44
[22]
	typepath/L1 = . typename, FOLLOW [13] -> GOTO 45
	typedefinition = "typedef" . typepath IDENT, FOLLOW [15] -> GOTO 46
	typename/L1 = . IDENT, FOLLOW [13] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [13] -> SHIFT IDENT GOTO 17
[23]
	interfacedefinition = "interface" . IDENT "{" interface_definitionlist "}", FOLLOW [172] -> SHIFT IDENT GOTO 47
[24]
	linkage = "private" . (37), FOLLOW [170] -> REDUCE linkage #1 CALL linkage {private=true,linkage="internal"}
[25]
	linkage = "public" . (38), FOLLOW [170] -> REDUCE linkage #1 CALL linkage {private=false,linkage="external"}
[26]
	extern_definitionlist = extern_definition extern_definitionlist ., FOLLOW [1] -> REDUCE extern_definitionlist #2
[27]
	extern_definition = "extern" DQSTRING . "function" IDENT typespec "(" extern_paramlist ")" ";", FOLLOW [59] -> SHIFT "function" GOTO 48
	extern_definition = "extern" DQSTRING . "function" IDENT typespec "(" extern_paramlist "..." ")" ";", FOLLOW [59] -> SHIFT "function" GOTO 48
	extern_definition = "extern" DQSTRING . "procedure" IDENT "(" extern_paramlist ")" ";", FOLLOW [59] -> SHIFT "procedure" GOTO 49
	extern_definition = "extern" DQSTRING . "procedure" IDENT "(" extern_paramlist "..." ")" ";", FOLLOW [59] -> SHIFT "procedure" GOTO 49
[28]
	program = extern_definitionlist free_definitionlist main_procedure . (1) -> ACCEPT
	program = extern_definitionlist free_definitionlist main_procedure . (1), FOLLOW [0] -> REDUCE program #3 CALL program
[29]
	main_procedure = "main" . "{" codeblock "}", FOLLOW [0] -> SHIFT '{' GOTO 50
[30]
	free_definitionlist = free_definition free_definitionlist ., FOLLOW [2] -> REDUCE free_definitionlist #2
[31]
	typespec/L1 = typename "&" . (20), FOLLOW [267] -> REDUCE typespec #2 CALL typespec "&"
[32]
	typespec/L1 = typename "^" . "&", FOLLOW [267] -> SHIFT '&' GOTO 51
	typespec/L1 = typename "^" . "^", FOLLOW [267] -> SHIFT '^' GOTO 52
	typespec/L1 = typename "^" . "^" "&", FOLLOW [267] -> SHIFT '^' GOTO 52
	typespec/L1 = typename "^" . (22), FOLLOW [267] -> REDUCE typespec #2 CALL typespec "^"
[33]
	variabledefinition = typespec IDENT . "=" expression, FOLLOW [15] -> SHIFT '=' GOTO 53
	variabledefinition = typespec IDENT . "[" expression "]" "=" expression, FOLLOW [15] -> SHIFT '[' GOTO 54
	variabledefinition = typespec IDENT . "[" expression "]", FOLLOW [15] -> SHIFT '[' GOTO 54
	variabledefinition = typespec IDENT . (step:84), FOLLOW [15] -> REDUCE variabledefinition #2 CALL vardef
[34]
	struct_definition = typedefinition ";" . (16), FOLLOW [175] -> REDUCE struct_definition #2 CALL definition 1
[35]
	functiondefinition = linkage "function" . IDENT typespec callablebody, FOLLOW [247] -> SHIFT IDENT GOTO 55
	functiondefinition = linkage "function" . IDENT typespec callablebody_const, FOLLOW [247] -> SHIFT IDENT GOTO 55
[36]
	functiondefinition = linkage "procedure" . IDENT callablebody, FOLLOW [247] -> SHIFT IDENT GOTO 56
	functiondefinition = linkage "procedure" . IDENT callablebody_const, FOLLOW [247] -> SHIFT IDENT GOTO 56
[37]
	struct_definition = variabledefinition ";" . (16), FOLLOW [175] -> REDUCE struct_definition #2 CALL definition 1
[38]
	typename/L1 = IDENT "::" . typename, FOLLOW [274] -> GOTO 57
	typename/L1 = . IDENT, FOLLOW [274] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [274] -> SHIFT IDENT GOTO 17
[39]
	typespec/L1 = "const" typename . "&", FOLLOW [267] -> SHIFT '&' GOTO 58
	typespec/L1 = "const" typename . "^", FOLLOW [267] -> SHIFT '^' GOTO 59
	typespec/L1 = "const" typename . "^" "&", FOLLOW [267] -> SHIFT '^' GOTO 59
	typespec/L1 = "const" typename . "^" "^", FOLLOW [267] -> SHIFT '^' GOTO 59
	typespec/L1 = "const" typename . "^" "^" "&", FOLLOW [267] -> SHIFT '^' GOTO 59
	typespec/L1 = "const" typename . (19), FOLLOW [267] -> REDUCE typespec #2 CALL typespec "const "
[40]
	typespec/L1 = "any" "const" . "class" "^", FOLLOW [267] -> SHIFT "class" GOTO 60
	typespec/L1 = "any" "const" . "struct" "^", FOLLOW [267] -> SHIFT "struct" GOTO 61
[41]
	typespec/L1 = "any" "class" . "^", FOLLOW [267] -> SHIFT '^' GOTO 62
[42]
	typespec/L1 = "any" "struct" . "^", FOLLOW [267] -> SHIFT '^' GOTO 63
[43]
	classdefinition = "class" IDENT . "{" class_definitionlist "}", FOLLOW [172] -> SHIFT '{' GOTO 64
	classdefinition = "class" IDENT . ":" inheritlist "{" class_definitionlist "}", FOLLOW [172] -> SHIFT ':' GOTO 65
[44]
	structdefinition = "struct" IDENT . "{" struct_definitionlist "}", FOLLOW [172] -> SHIFT '{' GOTO 66
[45]
	typepath/L1 = typename . (18), FOLLOW [275] -> REDUCE typepath #1 CALL typespec ""
[46]
	typedefinition = "typedef" typepath . IDENT, FOLLOW [15] -> SHIFT IDENT GOTO 67
[47]
	interfacedefinition = "interface" IDENT . "{" interface_definitionlist "}", FOLLOW [172] -> SHIFT '{' GOTO 68
[48]
	extern_definition = "extern" DQSTRING "function" . IDENT typespec "(" extern_paramlist ")" ";", FOLLOW [59] -> SHIFT IDENT GOTO 69
	extern_definition = "extern" DQSTRING "function" . IDENT typespec "(" extern_paramlist "..." ")" ";", FOLLOW [59] -> SHIFT IDENT GOTO 69
[49]
	extern_definition = "extern" DQSTRING "procedure" . IDENT "(" extern_paramlist ")" ";", FOLLOW [59] -> SHIFT IDENT GOTO 70
	extern_definition = "extern" DQSTRING "procedure" . IDENT "(" extern_paramlist "..." ")" ";", FOLLOW [59] -> SHIFT IDENT GOTO 70
[50]
	statement/L1 = . typedefinition ";", FOLLOW [98] -> GOTO 71
	functiondefinition = . linkage "function" IDENT typespec callablebody, FOLLOW [98] -> GOTO 14
	functiondefinition = . linkage "function" IDENT typespec callablebody_const, FOLLOW [98] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [98] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody_const, FOLLOW [98] -> GOTO 14
	statement/L1 = . functiondefinition, FOLLOW [98] -> GOTO 72
	main_procedure = "main" "{" . codeblock "}", FOLLOW [0] -> GOTO 73
	codeblock = . statementlist, FOLLOW [18] -> GOTO 74
	statementlist = . statement statementlist, FOLLOW [18] -> GOTO 75
	statement/L1 = . expression ";", FOLLOW [98] -> GOTO 76
	expression/L3 = . expression "=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "+=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "-=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "*=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "/=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "^=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "&=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "%=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "&&=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "||=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "&=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "|=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "<<=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression ">>=" expression, FOLLOW [97] -> GOTO 76
	expression/L4 = . expression "||" expression, FOLLOW [97] -> GOTO 76
	expression/L5 = . expression "&&" expression, FOLLOW [97] -> GOTO 76
	expression/L6 = . expression "|" expression, FOLLOW [97] -> GOTO 76
	expression/L7 = . expression "^" expression, FOLLOW [97] -> GOTO 76
	expression/L7 = . expression "&" expression, FOLLOW [97] -> GOTO 76
	expression/L8 = . expression "==" expression, FOLLOW [97] -> GOTO 76
	expression/L8 = . expression "!=" expression, FOLLOW [97] -> GOTO 76
	expression/L8 = . expression "<=" expression, FOLLOW [97] -> GOTO 76
	expression/L8 = . expression "<" expression, FOLLOW [97] -> GOTO 76
	expression/L8 = . expression ">=" expression, FOLLOW [97] -> GOTO 76
	expression/L8 = . expression ">" expression, FOLLOW [97] -> GOTO 76
	expression/L9 = . expression "+" expression, FOLLOW [97] -> GOTO 76
	expression/L9 = . expression "-" expression, FOLLOW [97] -> GOTO 76
	expression/L10 = . expression "*" expression, FOLLOW [97] -> GOTO 76
	expression/L10 = . expression "/" expression, FOLLOW [97] -> GOTO 76
	expression/L10 = . expression "%" expression, FOLLOW [97] -> GOTO 76
	expression/L11 = . expression "<<" expression, FOLLOW [97] -> GOTO 76
	expression/L11 = . expression ">>" expression, FOLLOW [97] -> GOTO 76
	expression/L12 = . expression "." IDENT, FOLLOW [97] -> GOTO 76
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [97] -> GOTO 76
	expression/L13 = . expression "(" ")", FOLLOW [97] -> GOTO 76
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [97] -> GOTO 76
	iexpression = . expression indirection IDENT, FOLLOW [97] -> GOTO 76
	expression/L12 = . iexpression, FOLLOW [97] -> GOTO 77
	expression/L2 = . BOOLEAN, FOLLOW [97] -> SHIFT BOOLEAN GOTO 78
	expression/L2 = . IDENT, FOLLOW [97] -> SHIFT IDENT GOTO 79
	expression/L2 = . DQSTRING, FOLLOW [97] -> SHIFT DQSTRING GOTO 80
	expression/L2 = . SQSTRING, FOLLOW [97] -> SHIFT SQSTRING GOTO 81
	expression/L2 = . CARDINAL, FOLLOW [97] -> SHIFT CARDINAL GOTO 82
	expression/L2 = . INTEGER, FOLLOW [97] -> SHIFT INTEGER GOTO 83
	expression/L2 = . FLOAT, FOLLOW [97] -> SHIFT FLOAT GOTO 84
	expression/L2 = . "(" expression ")", FOLLOW [97] -> SHIFT '(' GOTO 85
	expression/L9 = . "&" expression, FOLLOW [97] -> SHIFT '&' GOTO 86
	typedefinition = . "typedef" typepath IDENT, FOLLOW [15] -> SHIFT "typedef" GOTO 22
	statement/L1 = . "{" codeblock "}", FOLLOW [98] -> SHIFT '{' GOTO 87
	expression/L1 = . "{" expressionlist "}", FOLLOW [97] -> SHIFT '{' GOTO 87
	expression/L1 = . "{" "}", FOLLOW [97] -> SHIFT '{' GOTO 87
	linkage = . "private", FOLLOW [61] -> SHIFT "private" GOTO 24
	linkage = . "public", FOLLOW [61] -> SHIFT "public" GOTO 25
	expression/L9 = . "+" expression, FOLLOW [97] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [97] -> SHIFT '-' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [97] -> SHIFT '*' GOTO 90
	expression/L9 = . "~" expression, FOLLOW [97] -> SHIFT '~' GOTO 91
	expression/L9 = . "!" expression, FOLLOW [97] -> SHIFT '!' GOTO 92
	statement/L1 = . "var" variabledefinition ";", FOLLOW [98] -> SHIFT "var" GOTO 93
	statement/L1 = . "return" expression ";", FOLLOW [98] -> SHIFT "return" GOTO 94
	statement/L1 = . "delete" expression ";", FOLLOW [98] -> SHIFT "delete" GOTO 95
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}", FOLLOW [98] -> SHIFT "if" GOTO 96
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}", FOLLOW [98] -> SHIFT "if" GOTO 96
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}", FOLLOW [98] -> SHIFT "while" GOTO 97
	expression/L1 = . "new" typespec ":" expression, FOLLOW [97] -> SHIFT "new" GOTO 98
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [97] -> SHIFT "cast" GOTO 99
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [97] -> SHIFT "cast" GOTO 99
	expression/L2 = . "null", FOLLOW [97] -> SHIFT "null" GOTO 100
	statementlist = ., FOLLOW [18] -> REDUCE statementlist #0
	linkage = . (38), FOLLOW [61] -> REDUCE linkage #0 CALL linkage {private=false,linkage="external"}
[51]
	typespec/L1 = typename "^" "&" . (24), FOLLOW [267] -> REDUCE typespec #3 CALL typespec "^&"
[52]
	typespec/L1 = typename "^" "^" . "&", FOLLOW [267] -> SHIFT '&' GOTO 101
	typespec/L1 = typename "^" "^" . (26), FOLLOW [267] -> REDUCE typespec #3 CALL typespec "^^"
[53]
	variabledefinition = typespec IDENT "=" . expression, FOLLOW [15] -> GOTO 102
	expression/L3 = . expression "=" expression, FOLLOW [97] -> GOTO 102
	expression/L3 = . expression "+=" expression, FOLLOW [97] -> GOTO 102
	expression/L3 = . expression "-=" expression, FOLLOW [97] -> GOTO 102
	expression/L3 = . expression "*=" expression, FOLLOW [97] -> GOTO 102
	expression/L3 = . expression "/=" expression, FOLLOW [97] -> GOTO 102
	expression/L3 = . expression "^=" expression, FOLLOW [97] -> GOTO 102
	expression/L3 = . expression "&=" expression, FOLLOW [97] -> GOTO 102
	expression/L3 = . expression "%=" expression, FOLLOW [97] -> GOTO 102
	expression/L3 = . expression "&&=" expression, FOLLOW [97] -> GOTO 102
	expression/L3 = . expression "||=" expression, FOLLOW [97] -> GOTO 102
	expression/L3 = . expression "&=" expression, FOLLOW [97] -> GOTO 102
	expression/L3 = . expression "|=" expression, FOLLOW [97] -> GOTO 102
	expression/L3 = . expression "<<=" expression, FOLLOW [97] -> GOTO 102
	expression/L3 = . expression ">>=" expression, FOLLOW [97] -> GOTO 102
	expression/L4 = . expression "||" expression, FOLLOW [97] -> GOTO 102
	expression/L5 = . expression "&&" expression, FOLLOW [97] -> GOTO 102
	expression/L6 = . expression "|" expression, FOLLOW [97] -> GOTO 102
	expression/L7 = . expression "^" expression, FOLLOW [97] -> GOTO 102
	expression/L7 = . expression "&" expression, FOLLOW [97] -> GOTO 102
	expression/L8 = . expression "==" expression, FOLLOW [97] -> GOTO 102
	expression/L8 = . expression "!=" expression, FOLLOW [97] -> GOTO 102
	expression/L8 = . expression "<=" expression, FOLLOW [97] -> GOTO 102
	expression/L8 = . expression "<" expression, FOLLOW [97] -> GOTO 102
	expression/L8 = . expression ">=" expression, FOLLOW [97] -> GOTO 102
	expression/L8 = . expression ">" expression, FOLLOW [97] -> GOTO 102
	expression/L9 = . expression "+" expression, FOLLOW [97] -> GOTO 102
	expression/L9 = . expression "-" expression, FOLLOW [97] -> GOTO 102
	expression/L10 = . expression "*" expression, FOLLOW [97] -> GOTO 102
	expression/L10 = . expression "/" expression, FOLLOW [97] -> GOTO 102
	expression/L10 = . expression "%" expression, FOLLOW [97] -> GOTO 102
	expression/L11 = . expression "<<" expression, FOLLOW [97] -> GOTO 102
	expression/L11 = . expression ">>" expression, FOLLOW [97] -> GOTO 102
	expression/L12 = . expression "." IDENT, FOLLOW [97] -> GOTO 102
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [97] -> GOTO 102
	expression/L13 = . expression "(" ")", FOLLOW [97] -> GOTO 102
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [97] -> GOTO 102
	iexpression = . expression indirection IDENT, FOLLOW [97] -> GOTO 102
	expression/L12 = . iexpression, FOLLOW [97] -> GOTO 77
	expression/L2 = . BOOLEAN, FOLLOW [97] -> SHIFT BOOLEAN GOTO 78
	expression/L2 = . IDENT, FOLLOW [97] -> SHIFT IDENT GOTO 79
	expression/L2 = . DQSTRING, FOLLOW [97] -> SHIFT DQSTRING GOTO 80
	expression/L2 = . SQSTRING, FOLLOW [97] -> SHIFT SQSTRING GOTO 81
	expression/L2 = . CARDINAL, FOLLOW [97] -> SHIFT CARDINAL GOTO 82
	expression/L2 = . INTEGER, FOLLOW [97] -> SHIFT INTEGER GOTO 83
	expression/L2 = . FLOAT, FOLLOW [97] -> SHIFT FLOAT GOTO 84
	expression/L2 = . "(" expression ")", FOLLOW [97] -> SHIFT '(' GOTO 85
	expression/L9 = . "&" expression, FOLLOW [97] -> SHIFT '&' GOTO 86
	expression/L1 = . "{" expressionlist "}", FOLLOW [97] -> SHIFT '{' GOTO 103
	expression/L1 = . "{" "}", FOLLOW [97] -> SHIFT '{' GOTO 103
	expression/L9 = . "+" expression, FOLLOW [97] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [97] -> SHIFT '-' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [97] -> SHIFT '*' GOTO 90
	expression/L9 = . "~" expression, FOLLOW [97] -> SHIFT '~' GOTO 91
	expression/L9 = . "!" expression, FOLLOW [97] -> SHIFT '!' GOTO 92
	expression/L1 = . "new" typespec ":" expression, FOLLOW [97] -> SHIFT "new" GOTO 98
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [97] -> SHIFT "cast" GOTO 99
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [97] -> SHIFT "cast" GOTO 99
	expression/L2 = . "null", FOLLOW [97] -> SHIFT "null" GOTO 100
[54]
	variabledefinition = typespec IDENT "[" . expression "]" "=" expression, FOLLOW [15] -> GOTO 104
	variabledefinition = typespec IDENT "[" . expression "]", FOLLOW [15] -> GOTO 104
	expression/L3 = . expression "=" expression, FOLLOW [167] -> GOTO 104
	expression/L3 = . expression "+=" expression, FOLLOW [167] -> GOTO 104
	expression/L3 = . expression "-=" expression, FOLLOW [167] -> GOTO 104
	expression/L3 = . expression "*=" expression, FOLLOW [167] -> GOTO 104
	expression/L3 = . expression "/=" expression, FOLLOW [167] -> GOTO 104
	expression/L3 = . expression "^=" expression, FOLLOW [167] -> GOTO 104
	expression/L3 = . expression "&=" expression, FOLLOW [167] -> GOTO 104
	expression/L3 = . expression "%=" expression, FOLLOW [167] -> GOTO 104
	expression/L3 = . expression "&&=" expression, FOLLOW [167] -> GOTO 104
	expression/L3 = . expression "||=" expression, FOLLOW [167] -> GOTO 104
	expression/L3 = . expression "&=" expression, FOLLOW [167] -> GOTO 104
	expression/L3 = . expression "|=" expression, FOLLOW [167] -> GOTO 104
	expression/L3 = . expression "<<=" expression, FOLLOW [167] -> GOTO 104
	expression/L3 = . expression ">>=" expression, FOLLOW [167] -> GOTO 104
	expression/L4 = . expression "||" expression, FOLLOW [167] -> GOTO 104
	expression/L5 = . expression "&&" expression, FOLLOW [167] -> GOTO 104
	expression/L6 = . expression "|" expression, FOLLOW [167] -> GOTO 104
	expression/L7 = . expression "^" expression, FOLLOW [167] -> GOTO 104
	expression/L7 = . expression "&" expression, FOLLOW [167] -> GOTO 104
	expression/L8 = . expression "==" expression, FOLLOW [167] -> GOTO 104
	expression/L8 = . expression "!=" expression, FOLLOW [167] -> GOTO 104
	expression/L8 = . expression "<=" expression, FOLLOW [167] -> GOTO 104
	expression/L8 = . expression "<" expression, FOLLOW [167] -> GOTO 104
	expression/L8 = . expression ">=" expression, FOLLOW [167] -> GOTO 104
	expression/L8 = . expression ">" expression, FOLLOW [167] -> GOTO 104
	expression/L9 = . expression "+" expression, FOLLOW [167] -> GOTO 104
	expression/L9 = . expression "-" expression, FOLLOW [167] -> GOTO 104
	expression/L10 = . expression "*" expression, FOLLOW [167] -> GOTO 104
	expression/L10 = . expression "/" expression, FOLLOW [167] -> GOTO 104
	expression/L10 = . expression "%" expression, FOLLOW [167] -> GOTO 104
	expression/L11 = . expression "<<" expression, FOLLOW [167] -> GOTO 104
	expression/L11 = . expression ">>" expression, FOLLOW [167] -> GOTO 104
	expression/L12 = . expression "." IDENT, FOLLOW [167] -> GOTO 104
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [167] -> GOTO 104
	expression/L13 = . expression "(" ")", FOLLOW [167] -> GOTO 104
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [167] -> GOTO 104
	iexpression = . expression indirection IDENT, FOLLOW [167] -> GOTO 104
	expression/L12 = . iexpression, FOLLOW [167] -> GOTO 77
	expression/L2 = . BOOLEAN, FOLLOW [167] -> SHIFT BOOLEAN GOTO 78
	expression/L2 = . IDENT, FOLLOW [167] -> SHIFT IDENT GOTO 79
	expression/L2 = . DQSTRING, FOLLOW [167] -> SHIFT DQSTRING GOTO 80
	expression/L2 = . SQSTRING, FOLLOW [167] -> SHIFT SQSTRING GOTO 81
	expression/L2 = . CARDINAL, FOLLOW [167] -> SHIFT CARDINAL GOTO 82
	expression/L2 = . INTEGER, FOLLOW [167] -> SHIFT INTEGER GOTO 83
	expression/L2 = . FLOAT, FOLLOW [167] -> SHIFT FLOAT GOTO 84
	expression/L2 = . "(" expression ")", FOLLOW [167] -> SHIFT '(' GOTO 85
	expression/L9 = . "&" expression, FOLLOW [167] -> SHIFT '&' GOTO 86
	expression/L1 = . "{" expressionlist "}", FOLLOW [167] -> SHIFT '{' GOTO 103
	expression/L1 = . "{" "}", FOLLOW [167] -> SHIFT '{' GOTO 103
	expression/L9 = . "+" expression, FOLLOW [167] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [167] -> SHIFT '-' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [167] -> SHIFT '*' GOTO 90
	expression/L9 = . "~" expression, FOLLOW [167] -> SHIFT '~' GOTO 91
	expression/L9 = . "!" expression, FOLLOW [167] -> SHIFT '!' GOTO 92
	expression/L1 = . "new" typespec ":" expression, FOLLOW [167] -> SHIFT "new" GOTO 98
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [167] -> SHIFT "cast" GOTO 99
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [167] -> SHIFT "cast" GOTO 99
	expression/L2 = . "null", FOLLOW [167] -> SHIFT "null" GOTO 100
[55]
	typespec/L1 = . typename, FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [9] -> GOTO 8
	functiondefinition = linkage "function" IDENT . typespec callablebody, FOLLOW [247] -> GOTO 105
	functiondefinition = linkage "function" IDENT . typespec callablebody_const, FOLLOW [247] -> GOTO 105
	typename/L1 = . IDENT, FOLLOW [168] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [168] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "any" "class" "^", FOLLOW [9] -> SHIFT "any" GOTO 19
	typespec/L1 = . "any" "const" "class" "^", FOLLOW [9] -> SHIFT "any" GOTO 19
	typespec/L1 = . "any" "struct" "^", FOLLOW [9] -> SHIFT "any" GOTO 19
	typespec/L1 = . "any" "const" "struct" "^", FOLLOW [9] -> SHIFT "any" GOTO 19
[56]
	functiondefinition = linkage "procedure" IDENT . callablebody, FOLLOW [247] -> GOTO 106
	functiondefinition = linkage "procedure" IDENT . callablebody_const, FOLLOW [247] -> GOTO 107
	callablebody = . "(" parameterlist ")" "{" codeblock "}", FOLLOW [247] -> SHIFT '(' GOTO 108
	callablebody_const = . "(" parameterlist ")" "const" "{" codeblock "}", FOLLOW [247] -> SHIFT '(' GOTO 108
[57]
	typename/L1 = IDENT "::" typename ., FOLLOW [274] -> REDUCE typename #3
[58]
	typespec/L1 = "const" typename "&" . (21), FOLLOW [267] -> REDUCE typespec #3 CALL typespec "const&"
[59]
	typespec/L1 = "const" typename "^" . "&", FOLLOW [267] -> SHIFT '&' GOTO 109
	typespec/L1 = "const" typename "^" . "^", FOLLOW [267] -> SHIFT '^' GOTO 110
	typespec/L1 = "const" typename "^" . "^" "&", FOLLOW [267] -> SHIFT '^' GOTO 110
	typespec/L1 = "const" typename "^" . (23), FOLLOW [267] -> REDUCE typespec #3 CALL typespec "const^"
[60]
	typespec/L1 = "any" "const" "class" . "^", FOLLOW [267] -> SHIFT '^' GOTO 111
[61]
	typespec/L1 = "any" "const" "struct" . "^", FOLLOW [267] -> SHIFT '^' GOTO 112
[62]
	typespec/L1 = "any" "class" "^" . (30), FOLLOW [267] -> REDUCE typespec #3 CALL typespec_key "class^"
[63]
	typespec/L1 = "any" "struct" "^" . (30), FOLLOW [267] -> REDUCE typespec #3 CALL typespec_key "class^"
[64]
	classdefinition = "class" IDENT "{" . class_definitionlist "}", FOLLOW [172] -> GOTO 113
	class_definitionlist = . class_definition class_definitionlist, FOLLOW [18] -> GOTO 114
	typespec/L1 = . typename, FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [13] -> GOTO 8
	variabledefinition = . typespec IDENT, FOLLOW [15] -> GOTO 9
	variabledefinition = . typespec IDENT "=" expression, FOLLOW [15] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression, FOLLOW [15] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]", FOLLOW [15] -> GOTO 9
	class_definition = . typedefinition ";", FOLLOW [171] -> GOTO 115
	class_definition = . structdefinition, FOLLOW [171] -> GOTO 116
	class_definition = . interfacedefinition, FOLLOW [171] -> GOTO 117
	class_definition = . classdefinition, FOLLOW [171] -> GOTO 118
	functiondefinition = . linkage "function" IDENT typespec callablebody, FOLLOW [171] -> GOTO 119
	functiondefinition = . linkage "function" IDENT typespec callablebody_const, FOLLOW [171] -> GOTO 119
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [171] -> GOTO 119
	functiondefinition = . linkage "procedure" IDENT callablebody_const, FOLLOW [171] -> GOTO 119
	constructordefinition = . linkage "constructor" callablebody, FOLLOW [171] -> GOTO 119
	operatordefinition = . linkage "operator" operatordecl typespec callablebody, FOLLOW [171] -> GOTO 119
	operatordefinition = . linkage "operator" operatordecl typespec callablebody_const, FOLLOW [171] -> GOTO 119
	operatordefinition = . linkage "operator" operatordecl callablebody, FOLLOW [171] -> GOTO 119
	operatordefinition = . linkage "operator" operatordecl callablebody_const, FOLLOW [171] -> GOTO 119
	class_definition = . functiondefinition, FOLLOW [171] -> GOTO 120
	class_definition = . constructordefinition, FOLLOW [171] -> GOTO 121
	class_definition = . operatordefinition, FOLLOW [171] -> GOTO 122
	class_definition = . variabledefinition ";", FOLLOW [171] -> GOTO 123
	typename/L1 = . IDENT, FOLLOW [62] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [62] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "any" "class" "^", FOLLOW [13] -> SHIFT "any" GOTO 19
	typespec/L1 = . "any" "const" "class" "^", FOLLOW [13] -> SHIFT "any" GOTO 19
	typespec/L1 = . "any" "struct" "^", FOLLOW [13] -> SHIFT "any" GOTO 19
	typespec/L1 = . "any" "const" "struct" "^", FOLLOW [13] -> SHIFT "any" GOTO 19
	classdefinition = . "class" IDENT "{" class_definitionlist "}", FOLLOW [172] -> SHIFT "class" GOTO 20
	classdefinition = . "class" IDENT ":" inheritlist "{" class_definitionlist "}", FOLLOW [172] -> SHIFT "class" GOTO 20
	structdefinition = . "struct" IDENT "{" struct_definitionlist "}", FOLLOW [171] -> SHIFT "struct" GOTO 21
	typedefinition = . "typedef" typepath IDENT, FOLLOW [15] -> SHIFT "typedef" GOTO 22
	interfacedefinition = . "interface" IDENT "{" interface_definitionlist "}", FOLLOW [171] -> SHIFT "interface" GOTO 23
	linkage = . "private", FOLLOW [170] -> SHIFT "private" GOTO 24
	linkage = . "public", FOLLOW [170] -> SHIFT "public" GOTO 25
	constructordefinition = . "destructor" "{" codeblock "}", FOLLOW [171] -> SHIFT "destructor" GOTO 124
	class_definitionlist = ., FOLLOW [18] -> REDUCE class_definitionlist #0
	linkage = . (38), FOLLOW [170] -> REDUCE linkage #0 CALL linkage {private=false,linkage="external"}
[65]
	typepath/L1 = . typename, FOLLOW [173] -> GOTO 45
	inheritlist = . typepath "," inheritlist, FOLLOW [19] -> GOTO 125
	inheritlist = . typepath, FOLLOW [19] -> GOTO 125
	classdefinition = "class" IDENT ":" . inheritlist "{" class_definitionlist "}", FOLLOW [172] -> GOTO 126
	typename/L1 = . IDENT, FOLLOW [173] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [173] -> SHIFT IDENT GOTO 17
[66]
	structdefinition = "struct" IDENT "{" . struct_definitionlist "}", FOLLOW [172] -> GOTO 127
	struct_definitionlist = . struct_definition struct_definitionlist, FOLLOW [18] -> GOTO 128
	typespec/L1 = . typename, FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [13] -> GOTO 8
	variabledefinition = . typespec IDENT, FOLLOW [15] -> GOTO 9
	variabledefinition = . typespec IDENT "=" expression, FOLLOW [15] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression, FOLLOW [15] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]", FOLLOW [15] -> GOTO 9
	struct_definition = . typedefinition ";", FOLLOW [174] -> GOTO 10
	struct_definition = . structdefinition, FOLLOW [174] -> GOTO 11
	struct_definition = . variabledefinition ";", FOLLOW [174] -> GOTO 16
	typename/L1 = . IDENT, FOLLOW [62] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [62] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "any" "class" "^", FOLLOW [13] -> SHIFT "any" GOTO 19
	typespec/L1 = . "any" "const" "class" "^", FOLLOW [13] -> SHIFT "any" GOTO 19
	typespec/L1 = . "any" "struct" "^", FOLLOW [13] -> SHIFT "any" GOTO 19
	typespec/L1 = . "any" "const" "struct" "^", FOLLOW [13] -> SHIFT "any" GOTO 19
	structdefinition = . "struct" IDENT "{" struct_definitionlist "}", FOLLOW [172] -> SHIFT "struct" GOTO 21
	typedefinition = . "typedef" typepath IDENT, FOLLOW [15] -> SHIFT "typedef" GOTO 22
	struct_definitionlist = ., FOLLOW [18] -> REDUCE struct_definitionlist #0
[67]
	typedefinition = "typedef" typepath IDENT . (step:32), FOLLOW [15] -> REDUCE typedefinition #3 CALL typedef
[68]
	interfacedefinition = "interface" IDENT "{" . interface_definitionlist "}", FOLLOW [172] -> GOTO 129
	interface_definitionlist = . interface_definition interface_definitionlist, FOLLOW [18] -> GOTO 130
	interface_definition = . "function" IDENT typespec "(" extern_paramlist ")" ";", FOLLOW [176] -> SHIFT "function" GOTO 131
	interface_definition = . "function" IDENT typespec "(" extern_paramlist ")" "const" ";", FOLLOW [176] -> SHIFT "function" GOTO 131
	interface_definition = . "procedure" IDENT "(" extern_paramlist ")" ";", FOLLOW [176] -> SHIFT "procedure" GOTO 132
	interface_definition = . "procedure" IDENT "(" extern_paramlist ")" "const" ";", FOLLOW [176] -> SHIFT "procedure" GOTO 132
	interface_definition = . "operator" operatordecl typespec "(" extern_paramlist ")" ";", FOLLOW [176] -> SHIFT "operator" GOTO 133
	interface_definition = . "operator" operatordecl typespec "(" extern_paramlist ")" "const" ";", FOLLOW [176] -> SHIFT "operator" GOTO 133
	interface_definition = . "operator" operatordecl "(" extern_paramlist ")" ";", FOLLOW [176] -> SHIFT "operator" GOTO 133
	interface_definition = . "operator" operatordecl "(" extern_paramlist ")" "const" ";", FOLLOW [176] -> SHIFT "operator" GOTO 133
	interface_definitionlist = ., FOLLOW [18] -> REDUCE interface_definitionlist #0
[69]
	typespec/L1 = . typename, FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [9] -> GOTO 8
	extern_definition = "extern" DQSTRING "function" IDENT . typespec "(" extern_paramlist ")" ";", FOLLOW [59] -> GOTO 134
	extern_definition = "extern" DQSTRING "function" IDENT . typespec "(" extern_paramlist "..." ")" ";", FOLLOW [59] -> GOTO 134
	typename/L1 = . IDENT, FOLLOW [168] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [168] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "any" "class" "^", FOLLOW [9] -> SHIFT "any" GOTO 19
	typespec/L1 = . "any" "const" "class" "^", FOLLOW [9] -> SHIFT "any" GOTO 19
	typespec/L1 = . "any" "struct" "^", FOLLOW [9] -> SHIFT "any" GOTO 19
	typespec/L1 = . "any" "const" "struct" "^", FOLLOW [9] -> SHIFT "any" GOTO 19
[70]
	extern_definition = "extern" DQSTRING "procedure" IDENT . "(" extern_paramlist ")" ";", FOLLOW [59] -> SHIFT '(' GOTO 135
	extern_definition = "extern" DQSTRING "procedure" IDENT . "(" extern_paramlist "..." ")" ";", FOLLOW [59] -> SHIFT '(' GOTO 135
[71]
	statement/L1 = typedefinition . ";", FOLLOW [98] -> SHIFT ';' GOTO 136
[72]
	statement/L1 = functiondefinition . (77), FOLLOW [98] -> REDUCE statement #1 CALL definition
[73]
	main_procedure = "main" "{" codeblock . "}", FOLLOW [0] -> SHIFT '}' GOTO 137
[74]
	codeblock = statementlist . (76), FOLLOW [18] -> REDUCE codeblock #1 CALL codeblock
[75]
	statement/L1 = . typedefinition ";", FOLLOW [98] -> GOTO 71
	functiondefinition = . linkage "function" IDENT typespec callablebody, FOLLOW [98] -> GOTO 14
	functiondefinition = . linkage "function" IDENT typespec callablebody_const, FOLLOW [98] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [98] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody_const, FOLLOW [98] -> GOTO 14
	statement/L1 = . functiondefinition, FOLLOW [98] -> GOTO 72
	statementlist = statement . statementlist, FOLLOW [18] -> GOTO 138
	statementlist = . statement statementlist, FOLLOW [18] -> GOTO 75
	statement/L1 = . expression ";", FOLLOW [98] -> GOTO 76
	expression/L3 = . expression "=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "+=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "-=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "*=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "/=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "^=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "&=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "%=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "&&=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "||=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "&=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "|=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "<<=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression ">>=" expression, FOLLOW [97] -> GOTO 76
	expression/L4 = . expression "||" expression, FOLLOW [97] -> GOTO 76
	expression/L5 = . expression "&&" expression, FOLLOW [97] -> GOTO 76
	expression/L6 = . expression "|" expression, FOLLOW [97] -> GOTO 76
	expression/L7 = . expression "^" expression, FOLLOW [97] -> GOTO 76
	expression/L7 = . expression "&" expression, FOLLOW [97] -> GOTO 76
	expression/L8 = . expression "==" expression, FOLLOW [97] -> GOTO 76
	expression/L8 = . expression "!=" expression, FOLLOW [97] -> GOTO 76
	expression/L8 = . expression "<=" expression, FOLLOW [97] -> GOTO 76
	expression/L8 = . expression "<" expression, FOLLOW [97] -> GOTO 76
	expression/L8 = . expression ">=" expression, FOLLOW [97] -> GOTO 76
	expression/L8 = . expression ">" expression, FOLLOW [97] -> GOTO 76
	expression/L9 = . expression "+" expression, FOLLOW [97] -> GOTO 76
	expression/L9 = . expression "-" expression, FOLLOW [97] -> GOTO 76
	expression/L10 = . expression "*" expression, FOLLOW [97] -> GOTO 76
	expression/L10 = . expression "/" expression, FOLLOW [97] -> GOTO 76
	expression/L10 = . expression "%" expression, FOLLOW [97] -> GOTO 76
	expression/L11 = . expression "<<" expression, FOLLOW [97] -> GOTO 76
	expression/L11 = . expression ">>" expression, FOLLOW [97] -> GOTO 76
	expression/L12 = . expression "." IDENT, FOLLOW [97] -> GOTO 76
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [97] -> GOTO 76
	expression/L13 = . expression "(" ")", FOLLOW [97] -> GOTO 76
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [97] -> GOTO 76
	iexpression = . expression indirection IDENT, FOLLOW [97] -> GOTO 76
	expression/L12 = . iexpression, FOLLOW [97] -> GOTO 77
	expression/L2 = . BOOLEAN, FOLLOW [97] -> SHIFT BOOLEAN GOTO 78
	expression/L2 = . IDENT, FOLLOW [97] -> SHIFT IDENT GOTO 79
	expression/L2 = . DQSTRING, FOLLOW [97] -> SHIFT DQSTRING GOTO 80
	expression/L2 = . SQSTRING, FOLLOW [97] -> SHIFT SQSTRING GOTO 81
	expression/L2 = . CARDINAL, FOLLOW [97] -> SHIFT CARDINAL GOTO 82
	expression/L2 = . INTEGER, FOLLOW [97] -> SHIFT INTEGER GOTO 83
	expression/L2 = . FLOAT, FOLLOW [97] -> SHIFT FLOAT GOTO 84
	expression/L2 = . "(" expression ")", FOLLOW [97] -> SHIFT '(' GOTO 85
	expression/L9 = . "&" expression, FOLLOW [97] -> SHIFT '&' GOTO 86
	typedefinition = . "typedef" typepath IDENT, FOLLOW [15] -> SHIFT "typedef" GOTO 22
	statement/L1 = . "{" codeblock "}", FOLLOW [98] -> SHIFT '{' GOTO 87
	expression/L1 = . "{" expressionlist "}", FOLLOW [97] -> SHIFT '{' GOTO 87
	expression/L1 = . "{" "}", FOLLOW [97] -> SHIFT '{' GOTO 87
	linkage = . "private", FOLLOW [61] -> SHIFT "private" GOTO 24
	linkage = . "public", FOLLOW [61] -> SHIFT "public" GOTO 25
	expression/L9 = . "+" expression, FOLLOW [97] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [97] -> SHIFT '-' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [97] -> SHIFT '*' GOTO 90
	expression/L9 = . "~" expression, FOLLOW [97] -> SHIFT '~' GOTO 91
	expression/L9 = . "!" expression, FOLLOW [97] -> SHIFT '!' GOTO 92
	statement/L1 = . "var" variabledefinition ";", FOLLOW [98] -> SHIFT "var" GOTO 93
	statement/L1 = . "return" expression ";", FOLLOW [98] -> SHIFT "return" GOTO 94
	statement/L1 = . "delete" expression ";", FOLLOW [98] -> SHIFT "delete" GOTO 95
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}", FOLLOW [98] -> SHIFT "if" GOTO 96
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}", FOLLOW [98] -> SHIFT "if" GOTO 96
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}", FOLLOW [98] -> SHIFT "while" GOTO 97
	expression/L1 = . "new" typespec ":" expression, FOLLOW [97] -> SHIFT "new" GOTO 98
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [97] -> SHIFT "cast" GOTO 99
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [97] -> SHIFT "cast" GOTO 99
	expression/L2 = . "null", FOLLOW [97] -> SHIFT "null" GOTO 100
	statementlist = ., FOLLOW [18] -> REDUCE statementlist #0
	linkage = . (38), FOLLOW [61] -> REDUCE linkage #0 CALL linkage {private=false,linkage="external"}
[76]
	iexpression = expression . indirection IDENT, FOLLOW [97] -> GOTO 139
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [97] -> SHIFT '(' GOTO 140
	expression/L13 = expression . "(" ")", FOLLOW [97] -> SHIFT '(' GOTO 140
	statement/L1 = expression . ";", FOLLOW [98] -> SHIFT ';' GOTO 141
	expression/L7 = expression . "&" expression, FOLLOW [97] -> SHIFT '&' GOTO 142
	expression/L7 = expression . "^" expression, FOLLOW [97] -> SHIFT '^' GOTO 143
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 144
	expression/L3 = expression . "=" expression, FOLLOW [97] -> SHIFT '=' GOTO 145
	expression/L9 = expression . "+" expression, FOLLOW [97] -> SHIFT '+' GOTO 146
	expression/L9 = expression . "-" expression, FOLLOW [97] -> SHIFT '-' GOTO 147
	expression/L10 = expression . "*" expression, FOLLOW [97] -> SHIFT '*' GOTO 148
	expression/L10 = expression . "/" expression, FOLLOW [97] -> SHIFT '/' GOTO 149
	expression/L10 = expression . "%" expression, FOLLOW [97] -> SHIFT '%' GOTO 150
	expression/L5 = expression . "&&" expression, FOLLOW [97] -> SHIFT "&&" GOTO 151
	expression/L4 = expression . "||" expression, FOLLOW [97] -> SHIFT "||" GOTO 152
	expression/L6 = expression . "|" expression, FOLLOW [97] -> SHIFT '|' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [97] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [97] -> SHIFT ">>" GOTO 155
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [97] -> SHIFT '[' GOTO 156
	expression/L8 = expression . "==" expression, FOLLOW [97] -> SHIFT "==" GOTO 157
	expression/L8 = expression . "!=" expression, FOLLOW [97] -> SHIFT "!=" GOTO 158
	expression/L8 = expression . ">=" expression, FOLLOW [97] -> SHIFT ">=" GOTO 159
	expression/L8 = expression . "<=" expression, FOLLOW [97] -> SHIFT "<=" GOTO 160
	expression/L8 = expression . ">" expression, FOLLOW [97] -> SHIFT '>' GOTO 161
	expression/L8 = expression . "<" expression, FOLLOW [97] -> SHIFT '<' GOTO 162
	expression/L3 = expression . "+=" expression, FOLLOW [97] -> SHIFT "+=" GOTO 163
	expression/L3 = expression . "-=" expression, FOLLOW [97] -> SHIFT "-=" GOTO 164
	expression/L3 = expression . "*=" expression, FOLLOW [97] -> SHIFT "*=" GOTO 165
	expression/L3 = expression . "/=" expression, FOLLOW [97] -> SHIFT "/=" GOTO 166
	expression/L3 = expression . "^=" expression, FOLLOW [97] -> SHIFT "^=" GOTO 167
	expression/L3 = expression . "&=" expression, FOLLOW [97] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "&=" expression, FOLLOW [97] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "%=" expression, FOLLOW [97] -> SHIFT "%=" GOTO 169
	expression/L3 = expression . "&&=" expression, FOLLOW [97] -> SHIFT "&&=" GOTO 170
	expression/L3 = expression . "||=" expression, FOLLOW [97] -> SHIFT "||=" GOTO 171
	expression/L3 = expression . "|=" expression, FOLLOW [97] -> SHIFT "|=" GOTO 172
	expression/L3 = expression . "<<=" expression, FOLLOW [97] -> SHIFT "<<=" GOTO 173
	expression/L3 = expression . ">>=" expression, FOLLOW [97] -> SHIFT ">>=" GOTO 174
	expression/L12 = expression . "." IDENT, FOLLOW [97] -> SHIFT '.' GOTO 175
[77]
	expression/L12 = iexpression ., FOLLOW [239] -> REDUCE expression #1
[78]
	expression/L2 = BOOLEAN . (92), FOLLOW [239] -> REDUCE expression #1 CALL constant "constexpr bool"
[79]
	expression/L2 = IDENT . (91), FOLLOW [239] -> REDUCE expression #1 CALL variable
[80]
	expression/L2 = DQSTRING . (97), FOLLOW [239] -> REDUCE expression #1 CALL string_constant "constexpr float"
[81]
	expression/L2 = SQSTRING . (98), FOLLOW [239] -> REDUCE expression #1 CALL char_constant "constexpr float"
[82]
	expression/L2 = CARDINAL . (93), FOLLOW [239] -> REDUCE expression #1 CALL constant "constexpr uint"
[83]
	expression/L2 = INTEGER . (94), FOLLOW [239] -> REDUCE expression #1 CALL constant "constexpr int"
[84]
	expression/L2 = FLOAT . (95), FOLLOW [239] -> REDUCE expression #1 CALL constant "constexpr float"
[85]
	expression/L2 = "(" . expression ")", FOLLOW [239] -> GOTO 176
	expression/L3 = . expression "=" expression, FOLLOW [239] -> GOTO 176
	expression/L3 = . expression "+=" expression, FOLLOW [239] -> GOTO 176
	expression/L3 = . expression "-=" expression, FOLLOW [239] -> GOTO 176
	expression/L3 = . expression "*=" expression, FOLLOW [239] -> GOTO 176
	expression/L3 = . expression "/=" expression, FOLLOW [239] -> GOTO 176
	expression/L3 = . expression "^=" expression, FOLLOW [239] -> GOTO 176
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 176
	expression/L3 = . expression "%=" expression, FOLLOW [239] -> GOTO 176
	expression/L3 = . expression "&&=" expression, FOLLOW [239] -> GOTO 176
	expression/L3 = . expression "||=" expression, FOLLOW [239] -> GOTO 176
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 176
	expression/L3 = . expression "|=" expression, FOLLOW [239] -> GOTO 176
	expression/L3 = . expression "<<=" expression, FOLLOW [239] -> GOTO 176
	expression/L3 = . expression ">>=" expression, FOLLOW [239] -> GOTO 176
	expression/L4 = . expression "||" expression, FOLLOW [239] -> GOTO 176
	expression/L5 = . expression "&&" expression, FOLLOW [239] -> GOTO 176
	expression/L6 = . expression "|" expression, FOLLOW [239] -> GOTO 176
	expression/L7 = . expression "^" expression, FOLLOW [239] -> GOTO 176
	expression/L7 = . expression "&" expression, FOLLOW [239] -> GOTO 176
	expression/L8 = . expression "==" expression, FOLLOW [239] -> GOTO 176
	expression/L8 = . expression "!=" expression, FOLLOW [239] -> GOTO 176
	expression/L8 = . expression "<=" expression, FOLLOW [239] -> GOTO 176
	expression/L8 = . expression "<" expression, FOLLOW [239] -> GOTO 176
	expression/L8 = . expression ">=" expression, FOLLOW [239] -> GOTO 176
	expression/L8 = . expression ">" expression, FOLLOW [239] -> GOTO 176
	expression/L9 = . expression "+" expression, FOLLOW [239] -> GOTO 176
	expression/L9 = . expression "-" expression, FOLLOW [239] -> GOTO 176
	expression/L10 = . expression "*" expression, FOLLOW [239] -> GOTO 176
	expression/L10 = . expression "/" expression, FOLLOW [239] -> GOTO 176
	expression/L10 = . expression "%" expression, FOLLOW [239] -> GOTO 176
	expression/L11 = . expression "<<" expression, FOLLOW [239] -> GOTO 176
	expression/L11 = . expression ">>" expression, FOLLOW [239] -> GOTO 176
	expression/L12 = . expression "." IDENT, FOLLOW [239] -> GOTO 176
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [239] -> GOTO 176
	expression/L13 = . expression "(" ")", FOLLOW [239] -> GOTO 176
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [239] -> GOTO 176
	iexpression = . expression indirection IDENT, FOLLOW [239] -> GOTO 176
	expression/L12 = . iexpression, FOLLOW [239] -> GOTO 77
	expression/L2 = . BOOLEAN, FOLLOW [239] -> SHIFT BOOLEAN GOTO 78
	expression/L2 = . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 79
	expression/L2 = . DQSTRING, FOLLOW [239] -> SHIFT DQSTRING GOTO 80
	expression/L2 = . SQSTRING, FOLLOW [239] -> SHIFT SQSTRING GOTO 81
	expression/L2 = . CARDINAL, FOLLOW [239] -> SHIFT CARDINAL GOTO 82
	expression/L2 = . INTEGER, FOLLOW [239] -> SHIFT INTEGER GOTO 83
	expression/L2 = . FLOAT, FOLLOW [239] -> SHIFT FLOAT GOTO 84
	expression/L2 = . "(" expression ")", FOLLOW [239] -> SHIFT '(' GOTO 85
	expression/L9 = . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 86
	expression/L1 = . "{" expressionlist "}", FOLLOW [239] -> SHIFT '{' GOTO 103
	expression/L1 = . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 103
	expression/L9 = . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 90
	expression/L9 = . "~" expression, FOLLOW [239] -> SHIFT '~' GOTO 91
	expression/L9 = . "!" expression, FOLLOW [239] -> SHIFT '!' GOTO 92
	expression/L1 = . "new" typespec ":" expression, FOLLOW [239] -> SHIFT "new" GOTO 98
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [239] -> SHIFT "cast" GOTO 99
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [239] -> SHIFT "cast" GOTO 99
	expression/L2 = . "null", FOLLOW [239] -> SHIFT "null" GOTO 100
[86]
	expression/L3 = . expression "=" expression, FOLLOW [239] -> GOTO 177
	expression/L3 = . expression "+=" expression, FOLLOW [239] -> GOTO 177
	expression/L3 = . expression "-=" expression, FOLLOW [239] -> GOTO 177
	expression/L3 = . expression "*=" expression, FOLLOW [239] -> GOTO 177
	expression/L3 = . expression "/=" expression, FOLLOW [239] -> GOTO 177
	expression/L3 = . expression "^=" expression, FOLLOW [239] -> GOTO 177
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 177
	expression/L3 = . expression "%=" expression, FOLLOW [239] -> GOTO 177
	expression/L3 = . expression "&&=" expression, FOLLOW [239] -> GOTO 177
	expression/L3 = . expression "||=" expression, FOLLOW [239] -> GOTO 177
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 177
	expression/L3 = . expression "|=" expression, FOLLOW [239] -> GOTO 177
	expression/L3 = . expression "<<=" expression, FOLLOW [239] -> GOTO 177
	expression/L3 = . expression ">>=" expression, FOLLOW [239] -> GOTO 177
	expression/L4 = . expression "||" expression, FOLLOW [239] -> GOTO 177
	expression/L5 = . expression "&&" expression, FOLLOW [239] -> GOTO 177
	expression/L6 = . expression "|" expression, FOLLOW [239] -> GOTO 177
	expression/L7 = . expression "^" expression, FOLLOW [239] -> GOTO 177
	expression/L7 = . expression "&" expression, FOLLOW [239] -> GOTO 177
	expression/L8 = . expression "==" expression, FOLLOW [239] -> GOTO 177
	expression/L8 = . expression "!=" expression, FOLLOW [239] -> GOTO 177
	expression/L8 = . expression "<=" expression, FOLLOW [239] -> GOTO 177
	expression/L8 = . expression "<" expression, FOLLOW [239] -> GOTO 177
	expression/L8 = . expression ">=" expression, FOLLOW [239] -> GOTO 177
	expression/L8 = . expression ">" expression, FOLLOW [239] -> GOTO 177
	expression/L9 = . expression "+" expression, FOLLOW [239] -> GOTO 177
	expression/L9 = . expression "-" expression, FOLLOW [239] -> GOTO 177
	expression/L9 = "&" . expression, FOLLOW [239] -> GOTO 177
	expression/L10 = . expression "*" expression, FOLLOW [239] -> GOTO 177
	expression/L10 = . expression "/" expression, FOLLOW [239] -> GOTO 177
	expression/L10 = . expression "%" expression, FOLLOW [239] -> GOTO 177
	expression/L11 = . expression "<<" expression, FOLLOW [239] -> GOTO 177
	expression/L11 = . expression ">>" expression, FOLLOW [239] -> GOTO 177
	expression/L12 = . expression "." IDENT, FOLLOW [239] -> GOTO 177
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [239] -> GOTO 177
	expression/L13 = . expression "(" ")", FOLLOW [239] -> GOTO 177
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [239] -> GOTO 177
	iexpression = . expression indirection IDENT, FOLLOW [239] -> GOTO 177
	expression/L12 = . iexpression, FOLLOW [239] -> GOTO 77
	expression/L2 = . BOOLEAN, FOLLOW [239] -> SHIFT BOOLEAN GOTO 78
	expression/L2 = . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 79
	expression/L2 = . DQSTRING, FOLLOW [239] -> SHIFT DQSTRING GOTO 80
	expression/L2 = . SQSTRING, FOLLOW [239] -> SHIFT SQSTRING GOTO 81
	expression/L2 = . CARDINAL, FOLLOW [239] -> SHIFT CARDINAL GOTO 82
	expression/L2 = . INTEGER, FOLLOW [239] -> SHIFT INTEGER GOTO 83
	expression/L2 = . FLOAT, FOLLOW [239] -> SHIFT FLOAT GOTO 84
	expression/L2 = . "(" expression ")", FOLLOW [239] -> SHIFT '(' GOTO 85
	expression/L9 = . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 86
	expression/L1 = . "{" expressionlist "}", FOLLOW [239] -> SHIFT '{' GOTO 103
	expression/L1 = . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 103
	expression/L9 = . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 90
	expression/L9 = . "~" expression, FOLLOW [239] -> SHIFT '~' GOTO 91
	expression/L9 = . "!" expression, FOLLOW [239] -> SHIFT '!' GOTO 92
	expression/L1 = . "new" typespec ":" expression, FOLLOW [239] -> SHIFT "new" GOTO 98
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [239] -> SHIFT "cast" GOTO 99
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [239] -> SHIFT "cast" GOTO 99
	expression/L2 = . "null", FOLLOW [239] -> SHIFT "null" GOTO 100
[87]
	statement/L1 = . typedefinition ";", FOLLOW [98] -> GOTO 71
	functiondefinition = . linkage "function" IDENT typespec callablebody, FOLLOW [98] -> GOTO 14
	functiondefinition = . linkage "function" IDENT typespec callablebody_const, FOLLOW [98] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [98] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody_const, FOLLOW [98] -> GOTO 14
	statement/L1 = . functiondefinition, FOLLOW [98] -> GOTO 72
	statement/L1 = "{" . codeblock "}", FOLLOW [98] -> GOTO 178
	codeblock = . statementlist, FOLLOW [18] -> GOTO 74
	statementlist = . statement statementlist, FOLLOW [18] -> GOTO 75
	statement/L1 = . expression ";", FOLLOW [98] -> GOTO 179
	expression/L3 = . expression "=" expression, FOLLOW [179] -> GOTO 179
	expression/L3 = . expression "+=" expression, FOLLOW [179] -> GOTO 179
	expression/L3 = . expression "-=" expression, FOLLOW [179] -> GOTO 179
	expression/L3 = . expression "*=" expression, FOLLOW [179] -> GOTO 179
	expression/L3 = . expression "/=" expression, FOLLOW [179] -> GOTO 179
	expression/L3 = . expression "^=" expression, FOLLOW [179] -> GOTO 179
	expression/L3 = . expression "&=" expression, FOLLOW [179] -> GOTO 179
	expression/L3 = . expression "%=" expression, FOLLOW [179] -> GOTO 179
	expression/L3 = . expression "&&=" expression, FOLLOW [179] -> GOTO 179
	expression/L3 = . expression "||=" expression, FOLLOW [179] -> GOTO 179
	expression/L3 = . expression "&=" expression, FOLLOW [179] -> GOTO 179
	expression/L3 = . expression "|=" expression, FOLLOW [179] -> GOTO 179
	expression/L3 = . expression "<<=" expression, FOLLOW [179] -> GOTO 179
	expression/L3 = . expression ">>=" expression, FOLLOW [179] -> GOTO 179
	expression/L4 = . expression "||" expression, FOLLOW [179] -> GOTO 179
	expression/L5 = . expression "&&" expression, FOLLOW [179] -> GOTO 179
	expression/L6 = . expression "|" expression, FOLLOW [179] -> GOTO 179
	expression/L7 = . expression "^" expression, FOLLOW [179] -> GOTO 179
	expression/L7 = . expression "&" expression, FOLLOW [179] -> GOTO 179
	expression/L8 = . expression "==" expression, FOLLOW [179] -> GOTO 179
	expression/L8 = . expression "!=" expression, FOLLOW [179] -> GOTO 179
	expression/L8 = . expression "<=" expression, FOLLOW [179] -> GOTO 179
	expression/L8 = . expression "<" expression, FOLLOW [179] -> GOTO 179
	expression/L8 = . expression ">=" expression, FOLLOW [179] -> GOTO 179
	expression/L8 = . expression ">" expression, FOLLOW [179] -> GOTO 179
	expression/L9 = . expression "+" expression, FOLLOW [179] -> GOTO 179
	expression/L9 = . expression "-" expression, FOLLOW [179] -> GOTO 179
	expression/L10 = . expression "*" expression, FOLLOW [179] -> GOTO 179
	expression/L10 = . expression "/" expression, FOLLOW [179] -> GOTO 179
	expression/L10 = . expression "%" expression, FOLLOW [179] -> GOTO 179
	expression/L11 = . expression "<<" expression, FOLLOW [179] -> GOTO 179
	expression/L11 = . expression ">>" expression, FOLLOW [179] -> GOTO 179
	expression/L12 = . expression "." IDENT, FOLLOW [179] -> GOTO 179
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [179] -> GOTO 179
	expression/L13 = . expression "(" ")", FOLLOW [179] -> GOTO 179
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [179] -> GOTO 179
	iexpression = . expression indirection IDENT, FOLLOW [179] -> GOTO 179
	expressionlist = . expression "," expressionlist, FOLLOW [18] -> GOTO 179
	expressionlist = . expression, FOLLOW [18] -> GOTO 179
	expression/L12 = . iexpression, FOLLOW [179] -> GOTO 77
	expression/L1 = "{" . expressionlist "}", FOLLOW [179] -> GOTO 180
	expression/L2 = . BOOLEAN, FOLLOW [179] -> SHIFT BOOLEAN GOTO 78
	expression/L2 = . IDENT, FOLLOW [179] -> SHIFT IDENT GOTO 79
	expression/L2 = . DQSTRING, FOLLOW [179] -> SHIFT DQSTRING GOTO 80
	expression/L2 = . SQSTRING, FOLLOW [179] -> SHIFT SQSTRING GOTO 81
	expression/L2 = . CARDINAL, FOLLOW [179] -> SHIFT CARDINAL GOTO 82
	expression/L2 = . INTEGER, FOLLOW [179] -> SHIFT INTEGER GOTO 83
	expression/L2 = . FLOAT, FOLLOW [179] -> SHIFT FLOAT GOTO 84
	expression/L2 = . "(" expression ")", FOLLOW [179] -> SHIFT '(' GOTO 85
	expression/L9 = . "&" expression, FOLLOW [179] -> SHIFT '&' GOTO 86
	typedefinition = . "typedef" typepath IDENT, FOLLOW [15] -> SHIFT "typedef" GOTO 22
	statement/L1 = . "{" codeblock "}", FOLLOW [98] -> SHIFT '{' GOTO 87
	expression/L1 = . "{" expressionlist "}", FOLLOW [179] -> SHIFT '{' GOTO 87
	expression/L1 = . "{" "}", FOLLOW [179] -> SHIFT '{' GOTO 87
	expression/L1 = "{" . "}", FOLLOW [179] -> SHIFT '}' GOTO 181
	linkage = . "private", FOLLOW [61] -> SHIFT "private" GOTO 24
	linkage = . "public", FOLLOW [61] -> SHIFT "public" GOTO 25
	expression/L9 = . "+" expression, FOLLOW [179] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [179] -> SHIFT '-' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [179] -> SHIFT '*' GOTO 90
	expression/L9 = . "~" expression, FOLLOW [179] -> SHIFT '~' GOTO 91
	expression/L9 = . "!" expression, FOLLOW [179] -> SHIFT '!' GOTO 92
	statement/L1 = . "var" variabledefinition ";", FOLLOW [98] -> SHIFT "var" GOTO 93
	statement/L1 = . "return" expression ";", FOLLOW [98] -> SHIFT "return" GOTO 94
	statement/L1 = . "delete" expression ";", FOLLOW [98] -> SHIFT "delete" GOTO 95
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}", FOLLOW [98] -> SHIFT "if" GOTO 96
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}", FOLLOW [98] -> SHIFT "if" GOTO 96
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}", FOLLOW [98] -> SHIFT "while" GOTO 97
	expression/L1 = . "new" typespec ":" expression, FOLLOW [179] -> SHIFT "new" GOTO 98
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [179] -> SHIFT "cast" GOTO 99
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [179] -> SHIFT "cast" GOTO 99
	expression/L2 = . "null", FOLLOW [179] -> SHIFT "null" GOTO 100
	statementlist = ., FOLLOW [18] -> REDUCE statementlist #0
	linkage = . (38), FOLLOW [61] -> REDUCE linkage #0 CALL linkage {private=false,linkage="external"}
[88]
	expression/L3 = . expression "=" expression, FOLLOW [239] -> GOTO 182
	expression/L3 = . expression "+=" expression, FOLLOW [239] -> GOTO 182
	expression/L3 = . expression "-=" expression, FOLLOW [239] -> GOTO 182
	expression/L3 = . expression "*=" expression, FOLLOW [239] -> GOTO 182
	expression/L3 = . expression "/=" expression, FOLLOW [239] -> GOTO 182
	expression/L3 = . expression "^=" expression, FOLLOW [239] -> GOTO 182
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 182
	expression/L3 = . expression "%=" expression, FOLLOW [239] -> GOTO 182
	expression/L3 = . expression "&&=" expression, FOLLOW [239] -> GOTO 182
	expression/L3 = . expression "||=" expression, FOLLOW [239] -> GOTO 182
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 182
	expression/L3 = . expression "|=" expression, FOLLOW [239] -> GOTO 182
	expression/L3 = . expression "<<=" expression, FOLLOW [239] -> GOTO 182
	expression/L3 = . expression ">>=" expression, FOLLOW [239] -> GOTO 182
	expression/L4 = . expression "||" expression, FOLLOW [239] -> GOTO 182
	expression/L5 = . expression "&&" expression, FOLLOW [239] -> GOTO 182
	expression/L6 = . expression "|" expression, FOLLOW [239] -> GOTO 182
	expression/L7 = . expression "^" expression, FOLLOW [239] -> GOTO 182
	expression/L7 = . expression "&" expression, FOLLOW [239] -> GOTO 182
	expression/L8 = . expression "==" expression, FOLLOW [239] -> GOTO 182
	expression/L8 = . expression "!=" expression, FOLLOW [239] -> GOTO 182
	expression/L8 = . expression "<=" expression, FOLLOW [239] -> GOTO 182
	expression/L8 = . expression "<" expression, FOLLOW [239] -> GOTO 182
	expression/L8 = . expression ">=" expression, FOLLOW [239] -> GOTO 182
	expression/L8 = . expression ">" expression, FOLLOW [239] -> GOTO 182
	expression/L9 = . expression "+" expression, FOLLOW [239] -> GOTO 182
	expression/L9 = . expression "-" expression, FOLLOW [239] -> GOTO 182
	expression/L9 = "+" . expression, FOLLOW [239] -> GOTO 182
	expression/L10 = . expression "*" expression, FOLLOW [239] -> GOTO 182
	expression/L10 = . expression "/" expression, FOLLOW [239] -> GOTO 182
	expression/L10 = . expression "%" expression, FOLLOW [239] -> GOTO 182
	expression/L11 = . expression "<<" expression, FOLLOW [239] -> GOTO 182
	expression/L11 = . expression ">>" expression, FOLLOW [239] -> GOTO 182
	expression/L12 = . expression "." IDENT, FOLLOW [239] -> GOTO 182
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [239] -> GOTO 182
	expression/L13 = . expression "(" ")", FOLLOW [239] -> GOTO 182
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [239] -> GOTO 182
	iexpression = . expression indirection IDENT, FOLLOW [239] -> GOTO 182
	expression/L12 = . iexpression, FOLLOW [239] -> GOTO 77
	expression/L2 = . BOOLEAN, FOLLOW [239] -> SHIFT BOOLEAN GOTO 78
	expression/L2 = . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 79
	expression/L2 = . DQSTRING, FOLLOW [239] -> SHIFT DQSTRING GOTO 80
	expression/L2 = . SQSTRING, FOLLOW [239] -> SHIFT SQSTRING GOTO 81
	expression/L2 = . CARDINAL, FOLLOW [239] -> SHIFT CARDINAL GOTO 82
	expression/L2 = . INTEGER, FOLLOW [239] -> SHIFT INTEGER GOTO 83
	expression/L2 = . FLOAT, FOLLOW [239] -> SHIFT FLOAT GOTO 84
	expression/L2 = . "(" expression ")", FOLLOW [239] -> SHIFT '(' GOTO 85
	expression/L9 = . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 86
	expression/L1 = . "{" expressionlist "}", FOLLOW [239] -> SHIFT '{' GOTO 103
	expression/L1 = . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 103
	expression/L9 = . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 90
	expression/L9 = . "~" expression, FOLLOW [239] -> SHIFT '~' GOTO 91
	expression/L9 = . "!" expression, FOLLOW [239] -> SHIFT '!' GOTO 92
	expression/L1 = . "new" typespec ":" expression, FOLLOW [239] -> SHIFT "new" GOTO 98
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [239] -> SHIFT "cast" GOTO 99
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [239] -> SHIFT "cast" GOTO 99
	expression/L2 = . "null", FOLLOW [239] -> SHIFT "null" GOTO 100
[89]
	expression/L3 = . expression "=" expression, FOLLOW [239] -> GOTO 183
	expression/L3 = . expression "+=" expression, FOLLOW [239] -> GOTO 183
	expression/L3 = . expression "-=" expression, FOLLOW [239] -> GOTO 183
	expression/L3 = . expression "*=" expression, FOLLOW [239] -> GOTO 183
	expression/L3 = . expression "/=" expression, FOLLOW [239] -> GOTO 183
	expression/L3 = . expression "^=" expression, FOLLOW [239] -> GOTO 183
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 183
	expression/L3 = . expression "%=" expression, FOLLOW [239] -> GOTO 183
	expression/L3 = . expression "&&=" expression, FOLLOW [239] -> GOTO 183
	expression/L3 = . expression "||=" expression, FOLLOW [239] -> GOTO 183
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 183
	expression/L3 = . expression "|=" expression, FOLLOW [239] -> GOTO 183
	expression/L3 = . expression "<<=" expression, FOLLOW [239] -> GOTO 183
	expression/L3 = . expression ">>=" expression, FOLLOW [239] -> GOTO 183
	expression/L4 = . expression "||" expression, FOLLOW [239] -> GOTO 183
	expression/L5 = . expression "&&" expression, FOLLOW [239] -> GOTO 183
	expression/L6 = . expression "|" expression, FOLLOW [239] -> GOTO 183
	expression/L7 = . expression "^" expression, FOLLOW [239] -> GOTO 183
	expression/L7 = . expression "&" expression, FOLLOW [239] -> GOTO 183
	expression/L8 = . expression "==" expression, FOLLOW [239] -> GOTO 183
	expression/L8 = . expression "!=" expression, FOLLOW [239] -> GOTO 183
	expression/L8 = . expression "<=" expression, FOLLOW [239] -> GOTO 183
	expression/L8 = . expression "<" expression, FOLLOW [239] -> GOTO 183
	expression/L8 = . expression ">=" expression, FOLLOW [239] -> GOTO 183
	expression/L8 = . expression ">" expression, FOLLOW [239] -> GOTO 183
	expression/L9 = . expression "+" expression, FOLLOW [239] -> GOTO 183
	expression/L9 = . expression "-" expression, FOLLOW [239] -> GOTO 183
	expression/L9 = "-" . expression, FOLLOW [239] -> GOTO 183
	expression/L10 = . expression "*" expression, FOLLOW [239] -> GOTO 183
	expression/L10 = . expression "/" expression, FOLLOW [239] -> GOTO 183
	expression/L10 = . expression "%" expression, FOLLOW [239] -> GOTO 183
	expression/L11 = . expression "<<" expression, FOLLOW [239] -> GOTO 183
	expression/L11 = . expression ">>" expression, FOLLOW [239] -> GOTO 183
	expression/L12 = . expression "." IDENT, FOLLOW [239] -> GOTO 183
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [239] -> GOTO 183
	expression/L13 = . expression "(" ")", FOLLOW [239] -> GOTO 183
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [239] -> GOTO 183
	iexpression = . expression indirection IDENT, FOLLOW [239] -> GOTO 183
	expression/L12 = . iexpression, FOLLOW [239] -> GOTO 77
	expression/L2 = . BOOLEAN, FOLLOW [239] -> SHIFT BOOLEAN GOTO 78
	expression/L2 = . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 79
	expression/L2 = . DQSTRING, FOLLOW [239] -> SHIFT DQSTRING GOTO 80
	expression/L2 = . SQSTRING, FOLLOW [239] -> SHIFT SQSTRING GOTO 81
	expression/L2 = . CARDINAL, FOLLOW [239] -> SHIFT CARDINAL GOTO 82
	expression/L2 = . INTEGER, FOLLOW [239] -> SHIFT INTEGER GOTO 83
	expression/L2 = . FLOAT, FOLLOW [239] -> SHIFT FLOAT GOTO 84
	expression/L2 = . "(" expression ")", FOLLOW [239] -> SHIFT '(' GOTO 85
	expression/L9 = . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 86
	expression/L1 = . "{" expressionlist "}", FOLLOW [239] -> SHIFT '{' GOTO 103
	expression/L1 = . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 103
	expression/L9 = . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 90
	expression/L9 = . "~" expression, FOLLOW [239] -> SHIFT '~' GOTO 91
	expression/L9 = . "!" expression, FOLLOW [239] -> SHIFT '!' GOTO 92
	expression/L1 = . "new" typespec ":" expression, FOLLOW [239] -> SHIFT "new" GOTO 98
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [239] -> SHIFT "cast" GOTO 99
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [239] -> SHIFT "cast" GOTO 99
	expression/L2 = . "null", FOLLOW [239] -> SHIFT "null" GOTO 100
[90]
	expression/L3 = . expression "=" expression, FOLLOW [239] -> GOTO 184
	expression/L3 = . expression "+=" expression, FOLLOW [239] -> GOTO 184
	expression/L3 = . expression "-=" expression, FOLLOW [239] -> GOTO 184
	expression/L3 = . expression "*=" expression, FOLLOW [239] -> GOTO 184
	expression/L3 = . expression "/=" expression, FOLLOW [239] -> GOTO 184
	expression/L3 = . expression "^=" expression, FOLLOW [239] -> GOTO 184
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 184
	expression/L3 = . expression "%=" expression, FOLLOW [239] -> GOTO 184
	expression/L3 = . expression "&&=" expression, FOLLOW [239] -> GOTO 184
	expression/L3 = . expression "||=" expression, FOLLOW [239] -> GOTO 184
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 184
	expression/L3 = . expression "|=" expression, FOLLOW [239] -> GOTO 184
	expression/L3 = . expression "<<=" expression, FOLLOW [239] -> GOTO 184
	expression/L3 = . expression ">>=" expression, FOLLOW [239] -> GOTO 184
	expression/L4 = . expression "||" expression, FOLLOW [239] -> GOTO 184
	expression/L5 = . expression "&&" expression, FOLLOW [239] -> GOTO 184
	expression/L6 = . expression "|" expression, FOLLOW [239] -> GOTO 184
	expression/L7 = . expression "^" expression, FOLLOW [239] -> GOTO 184
	expression/L7 = . expression "&" expression, FOLLOW [239] -> GOTO 184
	expression/L8 = . expression "==" expression, FOLLOW [239] -> GOTO 184
	expression/L8 = . expression "!=" expression, FOLLOW [239] -> GOTO 184
	expression/L8 = . expression "<=" expression, FOLLOW [239] -> GOTO 184
	expression/L8 = . expression "<" expression, FOLLOW [239] -> GOTO 184
	expression/L8 = . expression ">=" expression, FOLLOW [239] -> GOTO 184
	expression/L8 = . expression ">" expression, FOLLOW [239] -> GOTO 184
	expression/L9 = . expression "+" expression, FOLLOW [239] -> GOTO 184
	expression/L9 = . expression "-" expression, FOLLOW [239] -> GOTO 184
	expression/L10 = . expression "*" expression, FOLLOW [239] -> GOTO 184
	expression/L10 = . expression "/" expression, FOLLOW [239] -> GOTO 184
	expression/L10 = . expression "%" expression, FOLLOW [239] -> GOTO 184
	expression/L11 = . expression "<<" expression, FOLLOW [239] -> GOTO 184
	expression/L11 = . expression ">>" expression, FOLLOW [239] -> GOTO 184
	expression/L12 = . expression "." IDENT, FOLLOW [239] -> GOTO 184
	expression/L12 = "*" . expression, FOLLOW [239] -> GOTO 184
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [239] -> GOTO 184
	expression/L13 = . expression "(" ")", FOLLOW [239] -> GOTO 184
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [239] -> GOTO 184
	iexpression = . expression indirection IDENT, FOLLOW [239] -> GOTO 184
	expression/L12 = . iexpression, FOLLOW [239] -> GOTO 77
	expression/L2 = . BOOLEAN, FOLLOW [239] -> SHIFT BOOLEAN GOTO 78
	expression/L2 = . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 79
	expression/L2 = . DQSTRING, FOLLOW [239] -> SHIFT DQSTRING GOTO 80
	expression/L2 = . SQSTRING, FOLLOW [239] -> SHIFT SQSTRING GOTO 81
	expression/L2 = . CARDINAL, FOLLOW [239] -> SHIFT CARDINAL GOTO 82
	expression/L2 = . INTEGER, FOLLOW [239] -> SHIFT INTEGER GOTO 83
	expression/L2 = . FLOAT, FOLLOW [239] -> SHIFT FLOAT GOTO 84
	expression/L2 = . "(" expression ")", FOLLOW [239] -> SHIFT '(' GOTO 85
	expression/L9 = . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 86
	expression/L1 = . "{" expressionlist "}", FOLLOW [239] -> SHIFT '{' GOTO 103
	expression/L1 = . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 103
	expression/L9 = . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 90
	expression/L9 = . "~" expression, FOLLOW [239] -> SHIFT '~' GOTO 91
	expression/L9 = . "!" expression, FOLLOW [239] -> SHIFT '!' GOTO 92
	expression/L1 = . "new" typespec ":" expression, FOLLOW [239] -> SHIFT "new" GOTO 98
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [239] -> SHIFT "cast" GOTO 99
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [239] -> SHIFT "cast" GOTO 99
	expression/L2 = . "null", FOLLOW [239] -> SHIFT "null" GOTO 100
[91]
	expression/L3 = . expression "=" expression, FOLLOW [239] -> GOTO 185
	expression/L3 = . expression "+=" expression, FOLLOW [239] -> GOTO 185
	expression/L3 = . expression "-=" expression, FOLLOW [239] -> GOTO 185
	expression/L3 = . expression "*=" expression, FOLLOW [239] -> GOTO 185
	expression/L3 = . expression "/=" expression, FOLLOW [239] -> GOTO 185
	expression/L3 = . expression "^=" expression, FOLLOW [239] -> GOTO 185
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 185
	expression/L3 = . expression "%=" expression, FOLLOW [239] -> GOTO 185
	expression/L3 = . expression "&&=" expression, FOLLOW [239] -> GOTO 185
	expression/L3 = . expression "||=" expression, FOLLOW [239] -> GOTO 185
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 185
	expression/L3 = . expression "|=" expression, FOLLOW [239] -> GOTO 185
	expression/L3 = . expression "<<=" expression, FOLLOW [239] -> GOTO 185
	expression/L3 = . expression ">>=" expression, FOLLOW [239] -> GOTO 185
	expression/L4 = . expression "||" expression, FOLLOW [239] -> GOTO 185
	expression/L5 = . expression "&&" expression, FOLLOW [239] -> GOTO 185
	expression/L6 = . expression "|" expression, FOLLOW [239] -> GOTO 185
	expression/L7 = . expression "^" expression, FOLLOW [239] -> GOTO 185
	expression/L7 = . expression "&" expression, FOLLOW [239] -> GOTO 185
	expression/L8 = . expression "==" expression, FOLLOW [239] -> GOTO 185
	expression/L8 = . expression "!=" expression, FOLLOW [239] -> GOTO 185
	expression/L8 = . expression "<=" expression, FOLLOW [239] -> GOTO 185
	expression/L8 = . expression "<" expression, FOLLOW [239] -> GOTO 185
	expression/L8 = . expression ">=" expression, FOLLOW [239] -> GOTO 185
	expression/L8 = . expression ">" expression, FOLLOW [239] -> GOTO 185
	expression/L9 = . expression "+" expression, FOLLOW [239] -> GOTO 185
	expression/L9 = . expression "-" expression, FOLLOW [239] -> GOTO 185
	expression/L9 = "~" . expression, FOLLOW [239] -> GOTO 185
	expression/L10 = . expression "*" expression, FOLLOW [239] -> GOTO 185
	expression/L10 = . expression "/" expression, FOLLOW [239] -> GOTO 185
	expression/L10 = . expression "%" expression, FOLLOW [239] -> GOTO 185
	expression/L11 = . expression "<<" expression, FOLLOW [239] -> GOTO 185
	expression/L11 = . expression ">>" expression, FOLLOW [239] -> GOTO 185
	expression/L12 = . expression "." IDENT, FOLLOW [239] -> GOTO 185
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [239] -> GOTO 185
	expression/L13 = . expression "(" ")", FOLLOW [239] -> GOTO 185
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [239] -> GOTO 185
	iexpression = . expression indirection IDENT, FOLLOW [239] -> GOTO 185
	expression/L12 = . iexpression, FOLLOW [239] -> GOTO 77
	expression/L2 = . BOOLEAN, FOLLOW [239] -> SHIFT BOOLEAN GOTO 78
	expression/L2 = . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 79
	expression/L2 = . DQSTRING, FOLLOW [239] -> SHIFT DQSTRING GOTO 80
	expression/L2 = . SQSTRING, FOLLOW [239] -> SHIFT SQSTRING GOTO 81
	expression/L2 = . CARDINAL, FOLLOW [239] -> SHIFT CARDINAL GOTO 82
	expression/L2 = . INTEGER, FOLLOW [239] -> SHIFT INTEGER GOTO 83
	expression/L2 = . FLOAT, FOLLOW [239] -> SHIFT FLOAT GOTO 84
	expression/L2 = . "(" expression ")", FOLLOW [239] -> SHIFT '(' GOTO 85
	expression/L9 = . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 86
	expression/L1 = . "{" expressionlist "}", FOLLOW [239] -> SHIFT '{' GOTO 103
	expression/L1 = . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 103
	expression/L9 = . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 90
	expression/L9 = . "~" expression, FOLLOW [239] -> SHIFT '~' GOTO 91
	expression/L9 = . "!" expression, FOLLOW [239] -> SHIFT '!' GOTO 92
	expression/L1 = . "new" typespec ":" expression, FOLLOW [239] -> SHIFT "new" GOTO 98
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [239] -> SHIFT "cast" GOTO 99
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [239] -> SHIFT "cast" GOTO 99
	expression/L2 = . "null", FOLLOW [239] -> SHIFT "null" GOTO 100
[92]
	expression/L3 = . expression "=" expression, FOLLOW [239] -> GOTO 186
	expression/L3 = . expression "+=" expression, FOLLOW [239] -> GOTO 186
	expression/L3 = . expression "-=" expression, FOLLOW [239] -> GOTO 186
	expression/L3 = . expression "*=" expression, FOLLOW [239] -> GOTO 186
	expression/L3 = . expression "/=" expression, FOLLOW [239] -> GOTO 186
	expression/L3 = . expression "^=" expression, FOLLOW [239] -> GOTO 186
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 186
	expression/L3 = . expression "%=" expression, FOLLOW [239] -> GOTO 186
	expression/L3 = . expression "&&=" expression, FOLLOW [239] -> GOTO 186
	expression/L3 = . expression "||=" expression, FOLLOW [239] -> GOTO 186
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 186
	expression/L3 = . expression "|=" expression, FOLLOW [239] -> GOTO 186
	expression/L3 = . expression "<<=" expression, FOLLOW [239] -> GOTO 186
	expression/L3 = . expression ">>=" expression, FOLLOW [239] -> GOTO 186
	expression/L4 = . expression "||" expression, FOLLOW [239] -> GOTO 186
	expression/L5 = . expression "&&" expression, FOLLOW [239] -> GOTO 186
	expression/L6 = . expression "|" expression, FOLLOW [239] -> GOTO 186
	expression/L7 = . expression "^" expression, FOLLOW [239] -> GOTO 186
	expression/L7 = . expression "&" expression, FOLLOW [239] -> GOTO 186
	expression/L8 = . expression "==" expression, FOLLOW [239] -> GOTO 186
	expression/L8 = . expression "!=" expression, FOLLOW [239] -> GOTO 186
	expression/L8 = . expression "<=" expression, FOLLOW [239] -> GOTO 186
	expression/L8 = . expression "<" expression, FOLLOW [239] -> GOTO 186
	expression/L8 = . expression ">=" expression, FOLLOW [239] -> GOTO 186
	expression/L8 = . expression ">" expression, FOLLOW [239] -> GOTO 186
	expression/L9 = . expression "+" expression, FOLLOW [239] -> GOTO 186
	expression/L9 = . expression "-" expression, FOLLOW [239] -> GOTO 186
	expression/L9 = "!" . expression, FOLLOW [239] -> GOTO 186
	expression/L10 = . expression "*" expression, FOLLOW [239] -> GOTO 186
	expression/L10 = . expression "/" expression, FOLLOW [239] -> GOTO 186
	expression/L10 = . expression "%" expression, FOLLOW [239] -> GOTO 186
	expression/L11 = . expression "<<" expression, FOLLOW [239] -> GOTO 186
	expression/L11 = . expression ">>" expression, FOLLOW [239] -> GOTO 186
	expression/L12 = . expression "." IDENT, FOLLOW [239] -> GOTO 186
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [239] -> GOTO 186
	expression/L13 = . expression "(" ")", FOLLOW [239] -> GOTO 186
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [239] -> GOTO 186
	iexpression = . expression indirection IDENT, FOLLOW [239] -> GOTO 186
	expression/L12 = . iexpression, FOLLOW [239] -> GOTO 77
	expression/L2 = . BOOLEAN, FOLLOW [239] -> SHIFT BOOLEAN GOTO 78
	expression/L2 = . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 79
	expression/L2 = . DQSTRING, FOLLOW [239] -> SHIFT DQSTRING GOTO 80
	expression/L2 = . SQSTRING, FOLLOW [239] -> SHIFT SQSTRING GOTO 81
	expression/L2 = . CARDINAL, FOLLOW [239] -> SHIFT CARDINAL GOTO 82
	expression/L2 = . INTEGER, FOLLOW [239] -> SHIFT INTEGER GOTO 83
	expression/L2 = . FLOAT, FOLLOW [239] -> SHIFT FLOAT GOTO 84
	expression/L2 = . "(" expression ")", FOLLOW [239] -> SHIFT '(' GOTO 85
	expression/L9 = . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 86
	expression/L1 = . "{" expressionlist "}", FOLLOW [239] -> SHIFT '{' GOTO 103
	expression/L1 = . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 103
	expression/L9 = . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 90
	expression/L9 = . "~" expression, FOLLOW [239] -> SHIFT '~' GOTO 91
	expression/L9 = . "!" expression, FOLLOW [239] -> SHIFT '!' GOTO 92
	expression/L1 = . "new" typespec ":" expression, FOLLOW [239] -> SHIFT "new" GOTO 98
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [239] -> SHIFT "cast" GOTO 99
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [239] -> SHIFT "cast" GOTO 99
	expression/L2 = . "null", FOLLOW [239] -> SHIFT "null" GOTO 100
[93]
	typespec/L1 = . typename, FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [13] -> GOTO 8
	variabledefinition = . typespec IDENT, FOLLOW [15] -> GOTO 9
	variabledefinition = . typespec IDENT "=" expression, FOLLOW [15] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression, FOLLOW [15] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]", FOLLOW [15] -> GOTO 9
	statement/L1 = "var" . variabledefinition ";", FOLLOW [98] -> GOTO 187
	typename/L1 = . IDENT, FOLLOW [62] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [62] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "any" "class" "^", FOLLOW [13] -> SHIFT "any" GOTO 19
	typespec/L1 = . "any" "const" "class" "^", FOLLOW [13] -> SHIFT "any" GOTO 19
	typespec/L1 = . "any" "struct" "^", FOLLOW [13] -> SHIFT "any" GOTO 19
	typespec/L1 = . "any" "const" "struct" "^", FOLLOW [13] -> SHIFT "any" GOTO 19
[94]
	statement/L1 = "return" . expression ";", FOLLOW [98] -> GOTO 188
	expression/L3 = . expression "=" expression, FOLLOW [97] -> GOTO 188
	expression/L3 = . expression "+=" expression, FOLLOW [97] -> GOTO 188
	expression/L3 = . expression "-=" expression, FOLLOW [97] -> GOTO 188
	expression/L3 = . expression "*=" expression, FOLLOW [97] -> GOTO 188
	expression/L3 = . expression "/=" expression, FOLLOW [97] -> GOTO 188
	expression/L3 = . expression "^=" expression, FOLLOW [97] -> GOTO 188
	expression/L3 = . expression "&=" expression, FOLLOW [97] -> GOTO 188
	expression/L3 = . expression "%=" expression, FOLLOW [97] -> GOTO 188
	expression/L3 = . expression "&&=" expression, FOLLOW [97] -> GOTO 188
	expression/L3 = . expression "||=" expression, FOLLOW [97] -> GOTO 188
	expression/L3 = . expression "&=" expression, FOLLOW [97] -> GOTO 188
	expression/L3 = . expression "|=" expression, FOLLOW [97] -> GOTO 188
	expression/L3 = . expression "<<=" expression, FOLLOW [97] -> GOTO 188
	expression/L3 = . expression ">>=" expression, FOLLOW [97] -> GOTO 188
	expression/L4 = . expression "||" expression, FOLLOW [97] -> GOTO 188
	expression/L5 = . expression "&&" expression, FOLLOW [97] -> GOTO 188
	expression/L6 = . expression "|" expression, FOLLOW [97] -> GOTO 188
	expression/L7 = . expression "^" expression, FOLLOW [97] -> GOTO 188
	expression/L7 = . expression "&" expression, FOLLOW [97] -> GOTO 188
	expression/L8 = . expression "==" expression, FOLLOW [97] -> GOTO 188
	expression/L8 = . expression "!=" expression, FOLLOW [97] -> GOTO 188
	expression/L8 = . expression "<=" expression, FOLLOW [97] -> GOTO 188
	expression/L8 = . expression "<" expression, FOLLOW [97] -> GOTO 188
	expression/L8 = . expression ">=" expression, FOLLOW [97] -> GOTO 188
	expression/L8 = . expression ">" expression, FOLLOW [97] -> GOTO 188
	expression/L9 = . expression "+" expression, FOLLOW [97] -> GOTO 188
	expression/L9 = . expression "-" expression, FOLLOW [97] -> GOTO 188
	expression/L10 = . expression "*" expression, FOLLOW [97] -> GOTO 188
	expression/L10 = . expression "/" expression, FOLLOW [97] -> GOTO 188
	expression/L10 = . expression "%" expression, FOLLOW [97] -> GOTO 188
	expression/L11 = . expression "<<" expression, FOLLOW [97] -> GOTO 188
	expression/L11 = . expression ">>" expression, FOLLOW [97] -> GOTO 188
	expression/L12 = . expression "." IDENT, FOLLOW [97] -> GOTO 188
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [97] -> GOTO 188
	expression/L13 = . expression "(" ")", FOLLOW [97] -> GOTO 188
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [97] -> GOTO 188
	iexpression = . expression indirection IDENT, FOLLOW [97] -> GOTO 188
	expression/L12 = . iexpression, FOLLOW [97] -> GOTO 77
	expression/L2 = . BOOLEAN, FOLLOW [97] -> SHIFT BOOLEAN GOTO 78
	expression/L2 = . IDENT, FOLLOW [97] -> SHIFT IDENT GOTO 79
	expression/L2 = . DQSTRING, FOLLOW [97] -> SHIFT DQSTRING GOTO 80
	expression/L2 = . SQSTRING, FOLLOW [97] -> SHIFT SQSTRING GOTO 81
	expression/L2 = . CARDINAL, FOLLOW [97] -> SHIFT CARDINAL GOTO 82
	expression/L2 = . INTEGER, FOLLOW [97] -> SHIFT INTEGER GOTO 83
	expression/L2 = . FLOAT, FOLLOW [97] -> SHIFT FLOAT GOTO 84
	expression/L2 = . "(" expression ")", FOLLOW [97] -> SHIFT '(' GOTO 85
	expression/L9 = . "&" expression, FOLLOW [97] -> SHIFT '&' GOTO 86
	expression/L1 = . "{" expressionlist "}", FOLLOW [97] -> SHIFT '{' GOTO 103
	expression/L1 = . "{" "}", FOLLOW [97] -> SHIFT '{' GOTO 103
	expression/L9 = . "+" expression, FOLLOW [97] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [97] -> SHIFT '-' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [97] -> SHIFT '*' GOTO 90
	expression/L9 = . "~" expression, FOLLOW [97] -> SHIFT '~' GOTO 91
	expression/L9 = . "!" expression, FOLLOW [97] -> SHIFT '!' GOTO 92
	expression/L1 = . "new" typespec ":" expression, FOLLOW [97] -> SHIFT "new" GOTO 98
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [97] -> SHIFT "cast" GOTO 99
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [97] -> SHIFT "cast" GOTO 99
	expression/L2 = . "null", FOLLOW [97] -> SHIFT "null" GOTO 100
[95]
	statement/L1 = "delete" . expression ";", FOLLOW [98] -> GOTO 189
	expression/L3 = . expression "=" expression, FOLLOW [97] -> GOTO 189
	expression/L3 = . expression "+=" expression, FOLLOW [97] -> GOTO 189
	expression/L3 = . expression "-=" expression, FOLLOW [97] -> GOTO 189
	expression/L3 = . expression "*=" expression, FOLLOW [97] -> GOTO 189
	expression/L3 = . expression "/=" expression, FOLLOW [97] -> GOTO 189
	expression/L3 = . expression "^=" expression, FOLLOW [97] -> GOTO 189
	expression/L3 = . expression "&=" expression, FOLLOW [97] -> GOTO 189
	expression/L3 = . expression "%=" expression, FOLLOW [97] -> GOTO 189
	expression/L3 = . expression "&&=" expression, FOLLOW [97] -> GOTO 189
	expression/L3 = . expression "||=" expression, FOLLOW [97] -> GOTO 189
	expression/L3 = . expression "&=" expression, FOLLOW [97] -> GOTO 189
	expression/L3 = . expression "|=" expression, FOLLOW [97] -> GOTO 189
	expression/L3 = . expression "<<=" expression, FOLLOW [97] -> GOTO 189
	expression/L3 = . expression ">>=" expression, FOLLOW [97] -> GOTO 189
	expression/L4 = . expression "||" expression, FOLLOW [97] -> GOTO 189
	expression/L5 = . expression "&&" expression, FOLLOW [97] -> GOTO 189
	expression/L6 = . expression "|" expression, FOLLOW [97] -> GOTO 189
	expression/L7 = . expression "^" expression, FOLLOW [97] -> GOTO 189
	expression/L7 = . expression "&" expression, FOLLOW [97] -> GOTO 189
	expression/L8 = . expression "==" expression, FOLLOW [97] -> GOTO 189
	expression/L8 = . expression "!=" expression, FOLLOW [97] -> GOTO 189
	expression/L8 = . expression "<=" expression, FOLLOW [97] -> GOTO 189
	expression/L8 = . expression "<" expression, FOLLOW [97] -> GOTO 189
	expression/L8 = . expression ">=" expression, FOLLOW [97] -> GOTO 189
	expression/L8 = . expression ">" expression, FOLLOW [97] -> GOTO 189
	expression/L9 = . expression "+" expression, FOLLOW [97] -> GOTO 189
	expression/L9 = . expression "-" expression, FOLLOW [97] -> GOTO 189
	expression/L10 = . expression "*" expression, FOLLOW [97] -> GOTO 189
	expression/L10 = . expression "/" expression, FOLLOW [97] -> GOTO 189
	expression/L10 = . expression "%" expression, FOLLOW [97] -> GOTO 189
	expression/L11 = . expression "<<" expression, FOLLOW [97] -> GOTO 189
	expression/L11 = . expression ">>" expression, FOLLOW [97] -> GOTO 189
	expression/L12 = . expression "." IDENT, FOLLOW [97] -> GOTO 189
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [97] -> GOTO 189
	expression/L13 = . expression "(" ")", FOLLOW [97] -> GOTO 189
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [97] -> GOTO 189
	iexpression = . expression indirection IDENT, FOLLOW [97] -> GOTO 189
	expression/L12 = . iexpression, FOLLOW [97] -> GOTO 77
	expression/L2 = . BOOLEAN, FOLLOW [97] -> SHIFT BOOLEAN GOTO 78
	expression/L2 = . IDENT, FOLLOW [97] -> SHIFT IDENT GOTO 79
	expression/L2 = . DQSTRING, FOLLOW [97] -> SHIFT DQSTRING GOTO 80
	expression/L2 = . SQSTRING, FOLLOW [97] -> SHIFT SQSTRING GOTO 81
	expression/L2 = . CARDINAL, FOLLOW [97] -> SHIFT CARDINAL GOTO 82
	expression/L2 = . INTEGER, FOLLOW [97] -> SHIFT INTEGER GOTO 83
	expression/L2 = . FLOAT, FOLLOW [97] -> SHIFT FLOAT GOTO 84
	expression/L2 = . "(" expression ")", FOLLOW [97] -> SHIFT '(' GOTO 85
	expression/L9 = . "&" expression, FOLLOW [97] -> SHIFT '&' GOTO 86
	expression/L1 = . "{" expressionlist "}", FOLLOW [97] -> SHIFT '{' GOTO 103
	expression/L1 = . "{" "}", FOLLOW [97] -> SHIFT '{' GOTO 103
	expression/L9 = . "+" expression, FOLLOW [97] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [97] -> SHIFT '-' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [97] -> SHIFT '*' GOTO 90
	expression/L9 = . "~" expression, FOLLOW [97] -> SHIFT '~' GOTO 91
	expression/L9 = . "!" expression, FOLLOW [97] -> SHIFT '!' GOTO 92
	expression/L1 = . "new" typespec ":" expression, FOLLOW [97] -> SHIFT "new" GOTO 98
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [97] -> SHIFT "cast" GOTO 99
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [97] -> SHIFT "cast" GOTO 99
	expression/L2 = . "null", FOLLOW [97] -> SHIFT "null" GOTO 100
[96]
	statement/L1 = "if" . "(" expression ")" "{" codeblock "}", FOLLOW [98] -> SHIFT '(' GOTO 190
	statement/L1 = "if" . "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}", FOLLOW [98] -> SHIFT '(' GOTO 190
[97]
	statement/L1 = "while" . "(" expression ")" "{" codeblock "}", FOLLOW [98] -> SHIFT '(' GOTO 191
[98]
	typespec/L1 = . typename, FOLLOW [26] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [26] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [26] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [26] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [26] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [26] -> GOTO 8
	expression/L1 = "new" . typespec ":" expression, FOLLOW [239] -> GOTO 192
	typename/L1 = . IDENT, FOLLOW [180] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [180] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [26] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [26] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [26] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [26] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [26] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [26] -> SHIFT "const" GOTO 18
	typespec/L1 = . "any" "class" "^", FOLLOW [26] -> SHIFT "any" GOTO 19
	typespec/L1 = . "any" "const" "class" "^", FOLLOW [26] -> SHIFT "any" GOTO 19
	typespec/L1 = . "any" "struct" "^", FOLLOW [26] -> SHIFT "any" GOTO 19
	typespec/L1 = . "any" "const" "struct" "^", FOLLOW [26] -> SHIFT "any" GOTO 19
[99]
	typespec/L1 = . typename, FOLLOW [26] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [26] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [26] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [26] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [26] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [26] -> GOTO 8
	expression/L1 = "cast" . typespec ":" "{" expression "}", FOLLOW [239] -> GOTO 193
	expression/L1 = "cast" . typespec ":" "{" "}", FOLLOW [239] -> GOTO 193
	typename/L1 = . IDENT, FOLLOW [180] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [180] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [26] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [26] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [26] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [26] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [26] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [26] -> SHIFT "const" GOTO 18
	typespec/L1 = . "any" "class" "^", FOLLOW [26] -> SHIFT "any" GOTO 19
	typespec/L1 = . "any" "const" "class" "^", FOLLOW [26] -> SHIFT "any" GOTO 19
	typespec/L1 = . "any" "struct" "^", FOLLOW [26] -> SHIFT "any" GOTO 19
	typespec/L1 = . "any" "const" "struct" "^", FOLLOW [26] -> SHIFT "any" GOTO 19
[100]
	expression/L2 = "null" . (96), FOLLOW [239] -> REDUCE expression #1 CALL null "constexpr float"
[101]
	typespec/L1 = typename "^" "^" "&" . (28), FOLLOW [267] -> REDUCE typespec #4 CALL typespec "^^&"
[102]
	iexpression = expression . indirection IDENT, FOLLOW [97] -> GOTO 139
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [97] -> SHIFT '(' GOTO 140
	expression/L13 = expression . "(" ")", FOLLOW [97] -> SHIFT '(' GOTO 140
	expression/L7 = expression . "&" expression, FOLLOW [97] -> SHIFT '&' GOTO 142
	expression/L7 = expression . "^" expression, FOLLOW [97] -> SHIFT '^' GOTO 143
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 144
	expression/L3 = expression . "=" expression, FOLLOW [97] -> SHIFT '=' GOTO 145
	expression/L9 = expression . "+" expression, FOLLOW [97] -> SHIFT '+' GOTO 146
	expression/L9 = expression . "-" expression, FOLLOW [97] -> SHIFT '-' GOTO 147
	expression/L10 = expression . "*" expression, FOLLOW [97] -> SHIFT '*' GOTO 148
	expression/L10 = expression . "/" expression, FOLLOW [97] -> SHIFT '/' GOTO 149
	expression/L10 = expression . "%" expression, FOLLOW [97] -> SHIFT '%' GOTO 150
	expression/L5 = expression . "&&" expression, FOLLOW [97] -> SHIFT "&&" GOTO 151
	expression/L4 = expression . "||" expression, FOLLOW [97] -> SHIFT "||" GOTO 152
	expression/L6 = expression . "|" expression, FOLLOW [97] -> SHIFT '|' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [97] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [97] -> SHIFT ">>" GOTO 155
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [97] -> SHIFT '[' GOTO 156
	expression/L8 = expression . "==" expression, FOLLOW [97] -> SHIFT "==" GOTO 157
	expression/L8 = expression . "!=" expression, FOLLOW [97] -> SHIFT "!=" GOTO 158
	expression/L8 = expression . ">=" expression, FOLLOW [97] -> SHIFT ">=" GOTO 159
	expression/L8 = expression . "<=" expression, FOLLOW [97] -> SHIFT "<=" GOTO 160
	expression/L8 = expression . ">" expression, FOLLOW [97] -> SHIFT '>' GOTO 161
	expression/L8 = expression . "<" expression, FOLLOW [97] -> SHIFT '<' GOTO 162
	expression/L3 = expression . "+=" expression, FOLLOW [97] -> SHIFT "+=" GOTO 163
	expression/L3 = expression . "-=" expression, FOLLOW [97] -> SHIFT "-=" GOTO 164
	expression/L3 = expression . "*=" expression, FOLLOW [97] -> SHIFT "*=" GOTO 165
	expression/L3 = expression . "/=" expression, FOLLOW [97] -> SHIFT "/=" GOTO 166
	expression/L3 = expression . "^=" expression, FOLLOW [97] -> SHIFT "^=" GOTO 167
	expression/L3 = expression . "&=" expression, FOLLOW [97] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "&=" expression, FOLLOW [97] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "%=" expression, FOLLOW [97] -> SHIFT "%=" GOTO 169
	expression/L3 = expression . "&&=" expression, FOLLOW [97] -> SHIFT "&&=" GOTO 170
	expression/L3 = expression . "||=" expression, FOLLOW [97] -> SHIFT "||=" GOTO 171
	expression/L3 = expression . "|=" expression, FOLLOW [97] -> SHIFT "|=" GOTO 172
	expression/L3 = expression . "<<=" expression, FOLLOW [97] -> SHIFT "<<=" GOTO 173
	expression/L3 = expression . ">>=" expression, FOLLOW [97] -> SHIFT ">>=" GOTO 174
	expression/L12 = expression . "." IDENT, FOLLOW [97] -> SHIFT '.' GOTO 175
	variabledefinition = typespec IDENT "=" expression . (step:85), FOLLOW [15] -> REDUCE variabledefinition #4 CALL vardef_assign
[103]
	expression/L3 = . expression "=" expression, FOLLOW [239] -> GOTO 194
	expression/L3 = . expression "+=" expression, FOLLOW [239] -> GOTO 194
	expression/L3 = . expression "-=" expression, FOLLOW [239] -> GOTO 194
	expression/L3 = . expression "*=" expression, FOLLOW [239] -> GOTO 194
	expression/L3 = . expression "/=" expression, FOLLOW [239] -> GOTO 194
	expression/L3 = . expression "^=" expression, FOLLOW [239] -> GOTO 194
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 194
	expression/L3 = . expression "%=" expression, FOLLOW [239] -> GOTO 194
	expression/L3 = . expression "&&=" expression, FOLLOW [239] -> GOTO 194
	expression/L3 = . expression "||=" expression, FOLLOW [239] -> GOTO 194
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 194
	expression/L3 = . expression "|=" expression, FOLLOW [239] -> GOTO 194
	expression/L3 = . expression "<<=" expression, FOLLOW [239] -> GOTO 194
	expression/L3 = . expression ">>=" expression, FOLLOW [239] -> GOTO 194
	expression/L4 = . expression "||" expression, FOLLOW [239] -> GOTO 194
	expression/L5 = . expression "&&" expression, FOLLOW [239] -> GOTO 194
	expression/L6 = . expression "|" expression, FOLLOW [239] -> GOTO 194
	expression/L7 = . expression "^" expression, FOLLOW [239] -> GOTO 194
	expression/L7 = . expression "&" expression, FOLLOW [239] -> GOTO 194
	expression/L8 = . expression "==" expression, FOLLOW [239] -> GOTO 194
	expression/L8 = . expression "!=" expression, FOLLOW [239] -> GOTO 194
	expression/L8 = . expression "<=" expression, FOLLOW [239] -> GOTO 194
	expression/L8 = . expression "<" expression, FOLLOW [239] -> GOTO 194
	expression/L8 = . expression ">=" expression, FOLLOW [239] -> GOTO 194
	expression/L8 = . expression ">" expression, FOLLOW [239] -> GOTO 194
	expression/L9 = . expression "+" expression, FOLLOW [239] -> GOTO 194
	expression/L9 = . expression "-" expression, FOLLOW [239] -> GOTO 194
	expression/L10 = . expression "*" expression, FOLLOW [239] -> GOTO 194
	expression/L10 = . expression "/" expression, FOLLOW [239] -> GOTO 194
	expression/L10 = . expression "%" expression, FOLLOW [239] -> GOTO 194
	expression/L11 = . expression "<<" expression, FOLLOW [239] -> GOTO 194
	expression/L11 = . expression ">>" expression, FOLLOW [239] -> GOTO 194
	expression/L12 = . expression "." IDENT, FOLLOW [239] -> GOTO 194
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [239] -> GOTO 194
	expression/L13 = . expression "(" ")", FOLLOW [239] -> GOTO 194
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [239] -> GOTO 194
	iexpression = . expression indirection IDENT, FOLLOW [239] -> GOTO 194
	expressionlist = . expression "," expressionlist, FOLLOW [18] -> GOTO 194
	expressionlist = . expression, FOLLOW [18] -> GOTO 194
	expression/L12 = . iexpression, FOLLOW [239] -> GOTO 77
	expression/L1 = "{" . expressionlist "}", FOLLOW [239] -> GOTO 180
	expression/L2 = . BOOLEAN, FOLLOW [239] -> SHIFT BOOLEAN GOTO 78
	expression/L2 = . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 79
	expression/L2 = . DQSTRING, FOLLOW [239] -> SHIFT DQSTRING GOTO 80
	expression/L2 = . SQSTRING, FOLLOW [239] -> SHIFT SQSTRING GOTO 81
	expression/L2 = . CARDINAL, FOLLOW [239] -> SHIFT CARDINAL GOTO 82
	expression/L2 = . INTEGER, FOLLOW [239] -> SHIFT INTEGER GOTO 83
	expression/L2 = . FLOAT, FOLLOW [239] -> SHIFT FLOAT GOTO 84
	expression/L2 = . "(" expression ")", FOLLOW [239] -> SHIFT '(' GOTO 85
	expression/L9 = . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 86
	expression/L1 = . "{" expressionlist "}", FOLLOW [239] -> SHIFT '{' GOTO 103
	expression/L1 = . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 103
	expression/L1 = "{" . "}", FOLLOW [239] -> SHIFT '}' GOTO 181
	expression/L9 = . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 90
	expression/L9 = . "~" expression, FOLLOW [239] -> SHIFT '~' GOTO 91
	expression/L9 = . "!" expression, FOLLOW [239] -> SHIFT '!' GOTO 92
	expression/L1 = . "new" typespec ":" expression, FOLLOW [239] -> SHIFT "new" GOTO 98
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [239] -> SHIFT "cast" GOTO 99
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [239] -> SHIFT "cast" GOTO 99
	expression/L2 = . "null", FOLLOW [239] -> SHIFT "null" GOTO 100
[104]
	iexpression = expression . indirection IDENT, FOLLOW [167] -> GOTO 139
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [167] -> SHIFT '(' GOTO 140
	expression/L13 = expression . "(" ")", FOLLOW [167] -> SHIFT '(' GOTO 140
	expression/L7 = expression . "&" expression, FOLLOW [167] -> SHIFT '&' GOTO 142
	expression/L7 = expression . "^" expression, FOLLOW [167] -> SHIFT '^' GOTO 143
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 144
	expression/L3 = expression . "=" expression, FOLLOW [167] -> SHIFT '=' GOTO 145
	expression/L9 = expression . "+" expression, FOLLOW [167] -> SHIFT '+' GOTO 146
	expression/L9 = expression . "-" expression, FOLLOW [167] -> SHIFT '-' GOTO 147
	expression/L10 = expression . "*" expression, FOLLOW [167] -> SHIFT '*' GOTO 148
	expression/L10 = expression . "/" expression, FOLLOW [167] -> SHIFT '/' GOTO 149
	expression/L10 = expression . "%" expression, FOLLOW [167] -> SHIFT '%' GOTO 150
	expression/L5 = expression . "&&" expression, FOLLOW [167] -> SHIFT "&&" GOTO 151
	expression/L4 = expression . "||" expression, FOLLOW [167] -> SHIFT "||" GOTO 152
	expression/L6 = expression . "|" expression, FOLLOW [167] -> SHIFT '|' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [167] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [167] -> SHIFT ">>" GOTO 155
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [167] -> SHIFT '[' GOTO 156
	variabledefinition = typespec IDENT "[" expression . "]" "=" expression, FOLLOW [15] -> SHIFT ']' GOTO 195
	variabledefinition = typespec IDENT "[" expression . "]", FOLLOW [15] -> SHIFT ']' GOTO 195
	expression/L8 = expression . "==" expression, FOLLOW [167] -> SHIFT "==" GOTO 157
	expression/L8 = expression . "!=" expression, FOLLOW [167] -> SHIFT "!=" GOTO 158
	expression/L8 = expression . ">=" expression, FOLLOW [167] -> SHIFT ">=" GOTO 159
	expression/L8 = expression . "<=" expression, FOLLOW [167] -> SHIFT "<=" GOTO 160
	expression/L8 = expression . ">" expression, FOLLOW [167] -> SHIFT '>' GOTO 161
	expression/L8 = expression . "<" expression, FOLLOW [167] -> SHIFT '<' GOTO 162
	expression/L3 = expression . "+=" expression, FOLLOW [167] -> SHIFT "+=" GOTO 163
	expression/L3 = expression . "-=" expression, FOLLOW [167] -> SHIFT "-=" GOTO 164
	expression/L3 = expression . "*=" expression, FOLLOW [167] -> SHIFT "*=" GOTO 165
	expression/L3 = expression . "/=" expression, FOLLOW [167] -> SHIFT "/=" GOTO 166
	expression/L3 = expression . "^=" expression, FOLLOW [167] -> SHIFT "^=" GOTO 167
	expression/L3 = expression . "&=" expression, FOLLOW [167] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "&=" expression, FOLLOW [167] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "%=" expression, FOLLOW [167] -> SHIFT "%=" GOTO 169
	expression/L3 = expression . "&&=" expression, FOLLOW [167] -> SHIFT "&&=" GOTO 170
	expression/L3 = expression . "||=" expression, FOLLOW [167] -> SHIFT "||=" GOTO 171
	expression/L3 = expression . "|=" expression, FOLLOW [167] -> SHIFT "|=" GOTO 172
	expression/L3 = expression . "<<=" expression, FOLLOW [167] -> SHIFT "<<=" GOTO 173
	expression/L3 = expression . ">>=" expression, FOLLOW [167] -> SHIFT ">>=" GOTO 174
	expression/L12 = expression . "." IDENT, FOLLOW [167] -> SHIFT '.' GOTO 175
[105]
	functiondefinition = linkage "function" IDENT typespec . callablebody, FOLLOW [247] -> GOTO 196
	functiondefinition = linkage "function" IDENT typespec . callablebody_const, FOLLOW [247] -> GOTO 197
	callablebody = . "(" parameterlist ")" "{" codeblock "}", FOLLOW [247] -> SHIFT '(' GOTO 108
	callablebody_const = . "(" parameterlist ")" "const" "{" codeblock "}", FOLLOW [247] -> SHIFT '(' GOTO 108
[106]
	functiondefinition = linkage "procedure" IDENT callablebody . (41), FOLLOW [247] -> REDUCE functiondefinition #4 CALL procdef {const=false}
[107]
	functiondefinition = linkage "procedure" IDENT callablebody_const . (42), FOLLOW [247] -> REDUCE functiondefinition #4 CALL procdef {const=true}
[108]
	typespec/L1 = . typename, FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [13] -> GOTO 8
	paramdecl = . typespec IDENT, FOLLOW [184] -> GOTO 198
	callablebody = "(" . parameterlist ")" "{" codeblock "}", FOLLOW [247] -> GOTO 199
	callablebody_const = "(" . parameterlist ")" "const" "{" codeblock "}", FOLLOW [247] -> GOTO 199
	parameterlist = . parameters, FOLLOW [10] -> GOTO 200
	parameters = . paramdecl "," parameters, FOLLOW [10] -> GOTO 201
	parameters = . paramdecl, FOLLOW [10] -> GOTO 201
	typename/L1 = . IDENT, FOLLOW [62] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [62] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "any" "class" "^", FOLLOW [13] -> SHIFT "any" GOTO 19
	typespec/L1 = . "any" "const" "class" "^", FOLLOW [13] -> SHIFT "any" GOTO 19
	typespec/L1 = . "any" "struct" "^", FOLLOW [13] -> SHIFT "any" GOTO 19
	typespec/L1 = . "any" "const" "struct" "^", FOLLOW [13] -> SHIFT "any" GOTO 19
	parameterlist = . (74), FOLLOW [10] -> REDUCE parameterlist #0 CALL paramdeflist
[109]
	typespec/L1 = "const" typename "^" "&" . (25), FOLLOW [267] -> REDUCE typespec #4 CALL typespec "const^&"
[110]
	typespec/L1 = "const" typename "^" "^" . "&", FOLLOW [267] -> SHIFT '&' GOTO 202
	typespec/L1 = "const" typename "^" "^" . (27), FOLLOW [267] -> REDUCE typespec #4 CALL typespec "const^^"
[111]
	typespec/L1 = "any" "const" "class" "^" . (31), FOLLOW [267] -> REDUCE typespec #4 CALL typespec_key "const struct^"
[112]
	typespec/L1 = "any" "const" "struct" "^" . (31), FOLLOW [267] -> REDUCE typespec #4 CALL typespec_key "const struct^"
[113]
	classdefinition = "class" IDENT "{" class_definitionlist . "}", FOLLOW [172] -> SHIFT '}' GOTO 203
[114]
	class_definitionlist = class_definition . class_definitionlist, FOLLOW [18] -> GOTO 204
	class_definitionlist = . class_definition class_definitionlist, FOLLOW [18] -> GOTO 114
	typespec/L1 = . typename, FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [13] -> GOTO 8
	variabledefinition = . typespec IDENT, FOLLOW [15] -> GOTO 9
	variabledefinition = . typespec IDENT "=" expression, FOLLOW [15] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression, FOLLOW [15] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]", FOLLOW [15] -> GOTO 9
	class_definition = . typedefinition ";", FOLLOW [171] -> GOTO 115
	class_definition = . structdefinition, FOLLOW [171] -> GOTO 116
	class_definition = . interfacedefinition, FOLLOW [171] -> GOTO 117
	class_definition = . classdefinition, FOLLOW [171] -> GOTO 118
	functiondefinition = . linkage "function" IDENT typespec callablebody, FOLLOW [171] -> GOTO 119
	functiondefinition = . linkage "function" IDENT typespec callablebody_const, FOLLOW [171] -> GOTO 119
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [171] -> GOTO 119
	functiondefinition = . linkage "procedure" IDENT callablebody_const, FOLLOW [171] -> GOTO 119
	constructordefinition = . linkage "constructor" callablebody, FOLLOW [171] -> GOTO 119
	operatordefinition = . linkage "operator" operatordecl typespec callablebody, FOLLOW [171] -> GOTO 119
	operatordefinition = . linkage "operator" operatordecl typespec callablebody_const, FOLLOW [171] -> GOTO 119
	operatordefinition = . linkage "operator" operatordecl callablebody, FOLLOW [171] -> GOTO 119
	operatordefinition = . linkage "operator" operatordecl callablebody_const, FOLLOW [171] -> GOTO 119
	class_definition = . functiondefinition, FOLLOW [171] -> GOTO 120
	class_definition = . constructordefinition, FOLLOW [171] -> GOTO 121
	class_definition = . operatordefinition, FOLLOW [171] -> GOTO 122
	class_definition = . variabledefinition ";", FOLLOW [171] -> GOTO 123
	typename/L1 = . IDENT, FOLLOW [62] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [62] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "any" "class" "^", FOLLOW [13] -> SHIFT "any" GOTO 19
	typespec/L1 = . "any" "const" "class" "^", FOLLOW [13] -> SHIFT "any" GOTO 19
	typespec/L1 = . "any" "struct" "^", FOLLOW [13] -> SHIFT "any" GOTO 19
	typespec/L1 = . "any" "const" "struct" "^", FOLLOW [13] -> SHIFT "any" GOTO 19
	classdefinition = . "class" IDENT "{" class_definitionlist "}", FOLLOW [171] -> SHIFT "class" GOTO 20
	classdefinition = . "class" IDENT ":" inheritlist "{" class_definitionlist "}", FOLLOW [171] -> SHIFT "class" GOTO 20
	structdefinition = . "struct" IDENT "{" struct_definitionlist "}", FOLLOW [171] -> SHIFT "struct" GOTO 21
	typedefinition = . "typedef" typepath IDENT, FOLLOW [15] -> SHIFT "typedef" GOTO 22
	interfacedefinition = . "interface" IDENT "{" interface_definitionlist "}", FOLLOW [171] -> SHIFT "interface" GOTO 23
	linkage = . "private", FOLLOW [170] -> SHIFT "private" GOTO 24
	linkage = . "public", FOLLOW [170] -> SHIFT "public" GOTO 25
	constructordefinition = . "destructor" "{" codeblock "}", FOLLOW [171] -> SHIFT "destructor" GOTO 124
	class_definitionlist = ., FOLLOW [18] -> REDUCE class_definitionlist #0
	linkage = . (38), FOLLOW [170] -> REDUCE linkage #0 CALL linkage {private=false,linkage="external"}
[115]
	class_definition = typedefinition . ";", FOLLOW [171] -> SHIFT ';' GOTO 205
[116]
	class_definition = structdefinition . (16), FOLLOW [171] -> REDUCE class_definition #1 CALL definition 1
[117]
	class_definition = interfacedefinition . (16), FOLLOW [171] -> REDUCE class_definition #1 CALL definition 1
[118]
	class_definition = classdefinition . (16), FOLLOW [171] -> REDUCE class_definition #1 CALL definition 1
[119]
	functiondefinition = linkage . "function" IDENT typespec callablebody, FOLLOW [171] -> SHIFT "function" GOTO 35
	functiondefinition = linkage . "function" IDENT typespec callablebody_const, FOLLOW [171] -> SHIFT "function" GOTO 35
	functiondefinition = linkage . "procedure" IDENT callablebody, FOLLOW [171] -> SHIFT "procedure" GOTO 36
	functiondefinition = linkage . "procedure" IDENT callablebody_const, FOLLOW [171] -> SHIFT "procedure" GOTO 36
	operatordefinition = linkage . "operator" operatordecl typespec callablebody, FOLLOW [171] -> SHIFT "operator" GOTO 206
	operatordefinition = linkage . "operator" operatordecl typespec callablebody_const, FOLLOW [171] -> SHIFT "operator" GOTO 206
	operatordefinition = linkage . "operator" operatordecl callablebody, FOLLOW [171] -> SHIFT "operator" GOTO 206
	operatordefinition = linkage . "operator" operatordecl callablebody_const, FOLLOW [171] -> SHIFT "operator" GOTO 206
	constructordefinition = linkage . "constructor" callablebody, FOLLOW [171] -> SHIFT "constructor" GOTO 207
[120]
	class_definition = functiondefinition . (17), FOLLOW [171] -> REDUCE class_definition #1 CALL definition 2
[121]
	class_definition = constructordefinition . (17), FOLLOW [171] -> REDUCE class_definition #1 CALL definition 2
[122]
	class_definition = operatordefinition . (17), FOLLOW [171] -> REDUCE class_definition #1 CALL definition 2
[123]
	class_definition = variabledefinition . ";", FOLLOW [171] -> SHIFT ';' GOTO 208
[124]
	constructordefinition = "destructor" . "{" codeblock "}", FOLLOW [171] -> SHIFT '{' GOTO 209
[125]
	inheritlist = typepath . "," inheritlist, FOLLOW [19] -> SHIFT ',' GOTO 210
	inheritlist = typepath . (step:35), FOLLOW [19] -> REDUCE inheritlist #1 CALL inheritdef 1
[126]
	classdefinition = "class" IDENT ":" inheritlist . "{" class_definitionlist "}", FOLLOW [172] -> SHIFT '{' GOTO 211
[127]
	structdefinition = "struct" IDENT "{" struct_definitionlist . "}", FOLLOW [172] -> SHIFT '}' GOTO 212
[128]
	struct_definitionlist = struct_definition . struct_definitionlist, FOLLOW [18] -> GOTO 213
	struct_definitionlist = . struct_definition struct_definitionlist, FOLLOW [18] -> GOTO 128
	typespec/L1 = . typename, FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [13] -> GOTO 8
	variabledefinition = . typespec IDENT, FOLLOW [15] -> GOTO 9
	variabledefinition = . typespec IDENT "=" expression, FOLLOW [15] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression, FOLLOW [15] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]", FOLLOW [15] -> GOTO 9
	struct_definition = . typedefinition ";", FOLLOW [174] -> GOTO 10
	struct_definition = . structdefinition, FOLLOW [174] -> GOTO 11
	struct_definition = . variabledefinition ";", FOLLOW [174] -> GOTO 16
	typename/L1 = . IDENT, FOLLOW [62] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [62] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "any" "class" "^", FOLLOW [13] -> SHIFT "any" GOTO 19
	typespec/L1 = . "any" "const" "class" "^", FOLLOW [13] -> SHIFT "any" GOTO 19
	typespec/L1 = . "any" "struct" "^", FOLLOW [13] -> SHIFT "any" GOTO 19
	typespec/L1 = . "any" "const" "struct" "^", FOLLOW [13] -> SHIFT "any" GOTO 19
	structdefinition = . "struct" IDENT "{" struct_definitionlist "}", FOLLOW [174] -> SHIFT "struct" GOTO 21
	typedefinition = . "typedef" typepath IDENT, FOLLOW [15] -> SHIFT "typedef" GOTO 22
	struct_definitionlist = ., FOLLOW [18] -> REDUCE struct_definitionlist #0
[129]
	interfacedefinition = "interface" IDENT "{" interface_definitionlist . "}", FOLLOW [172] -> SHIFT '}' GOTO 214
[130]
	interface_definitionlist = interface_definition . interface_definitionlist, FOLLOW [18] -> GOTO 215
	interface_definitionlist = . interface_definition interface_definitionlist, FOLLOW [18] -> GOTO 130
	interface_definition = . "function" IDENT typespec "(" extern_paramlist ")" ";", FOLLOW [176] -> SHIFT "function" GOTO 131
	interface_definition = . "function" IDENT typespec "(" extern_paramlist ")" "const" ";", FOLLOW [176] -> SHIFT "function" GOTO 131
	interface_definition = . "procedure" IDENT "(" extern_paramlist ")" ";", FOLLOW [176] -> SHIFT "procedure" GOTO 132
	interface_definition = . "procedure" IDENT "(" extern_paramlist ")" "const" ";", FOLLOW [176] -> SHIFT "procedure" GOTO 132
	interface_definition = . "operator" operatordecl typespec "(" extern_paramlist ")" ";", FOLLOW [176] -> SHIFT "operator" GOTO 133
	interface_definition = . "operator" operatordecl typespec "(" extern_paramlist ")" "const" ";", FOLLOW [176] -> SHIFT "operator" GOTO 133
	interface_definition = . "operator" operatordecl "(" extern_paramlist ")" ";", FOLLOW [176] -> SHIFT "operator" GOTO 133
	interface_definition = . "operator" operatordecl "(" extern_paramlist ")" "const" ";", FOLLOW [176] -> SHIFT "operator" GOTO 133
	interface_definitionlist = ., FOLLOW [18] -> REDUCE interface_definitionlist #0
[131]
	interface_definition = "function" . IDENT typespec "(" extern_paramlist ")" ";", FOLLOW [176] -> SHIFT IDENT GOTO 216
	interface_definition = "function" . IDENT typespec "(" extern_paramlist ")" "const" ";", FOLLOW [176] -> SHIFT IDENT GOTO 216
[132]
	interface_definition = "procedure" . IDENT "(" extern_paramlist ")" ";", FOLLOW [176] -> SHIFT IDENT GOTO 217
	interface_definition = "procedure" . IDENT "(" extern_paramlist ")" "const" ";", FOLLOW [176] -> SHIFT IDENT GOTO 217
[133]
	interface_definition = "operator" . operatordecl typespec "(" extern_paramlist ")" ";", FOLLOW [176] -> GOTO 218
	interface_definition = "operator" . operatordecl typespec "(" extern_paramlist ")" "const" ";", FOLLOW [176] -> GOTO 218
	interface_definition = "operator" . operatordecl "(" extern_paramlist ")" ";", FOLLOW [176] -> GOTO 218
	interface_definition = "operator" . operatordecl "(" extern_paramlist ")" "const" ";", FOLLOW [176] -> GOTO 218
	operatordecl = . "(" ")", FOLLOW [185] -> SHIFT '(' GOTO 219
	operatordecl = . "&", FOLLOW [185] -> SHIFT '&' GOTO 220
	operatordecl = . "->", FOLLOW [185] -> SHIFT "->" GOTO 221
	operatordecl = . "=", FOLLOW [185] -> SHIFT '=' GOTO 222
	operatordecl = . "+", FOLLOW [185] -> SHIFT '+' GOTO 223
	operatordecl = . "-", FOLLOW [185] -> SHIFT '-' GOTO 224
	operatordecl = . "*", FOLLOW [185] -> SHIFT '*' GOTO 225
	operatordecl = . "/", FOLLOW [185] -> SHIFT '/' GOTO 226
	operatordecl = . "%", FOLLOW [185] -> SHIFT '%' GOTO 227
	operatordecl = . "&&", FOLLOW [185] -> SHIFT "&&" GOTO 228
	operatordecl = . "||", FOLLOW [185] -> SHIFT "||" GOTO 229
	operatordecl = . "|", FOLLOW [185] -> SHIFT '|' GOTO 230
	operatordecl = . "<<", FOLLOW [185] -> SHIFT "<<" GOTO 231
	operatordecl = . ">>", FOLLOW [185] -> SHIFT ">>" GOTO 232
	operatordecl = . "~", FOLLOW [185] -> SHIFT '~' GOTO 233
	operatordecl = . "!", FOLLOW [185] -> SHIFT '!' GOTO 234
	operatordecl = . "[" "]", FOLLOW [185] -> SHIFT '[' GOTO 235
	operatordecl = . "==", FOLLOW [185] -> SHIFT "==" GOTO 236
	operatordecl = . "!=", FOLLOW [185] -> SHIFT "!=" GOTO 237
	operatordecl = . ">=", FOLLOW [185] -> SHIFT ">=" GOTO 238
	operatordecl = . "<=", FOLLOW [185] -> SHIFT "<=" GOTO 239
	operatordecl = . ">", FOLLOW [185] -> SHIFT '>' GOTO 240
	operatordecl = . "<", FOLLOW [185] -> SHIFT '<' GOTO 241
[134]
	extern_definition = "extern" DQSTRING "function" IDENT typespec . "(" extern_paramlist ")" ";", FOLLOW [59] -> SHIFT '(' GOTO 242
	extern_definition = "extern" DQSTRING "function" IDENT typespec . "(" extern_paramlist "..." ")" ";", FOLLOW [59] -> SHIFT '(' GOTO 242
[135]
	extern_paramlist = . extern_parameters, FOLLOW [186] -> GOTO 243
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" . extern_paramlist ")" ";", FOLLOW [59] -> GOTO 244
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" . extern_paramlist "..." ")" ";", FOLLOW [59] -> GOTO 244
	typespec/L1 = . typename, FOLLOW [189] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [189] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [189] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [189] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [189] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [189] -> GOTO 8
	extern_parameters = . typespec "," extern_parameters, FOLLOW [186] -> GOTO 245
	extern_parameters = . typespec IDENT "," extern_parameters, FOLLOW [186] -> GOTO 245
	extern_parameters = . typespec, FOLLOW [186] -> GOTO 245
	extern_parameters = . typespec IDENT, FOLLOW [186] -> GOTO 245
	typename/L1 = . IDENT, FOLLOW [190] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [190] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [189] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [189] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [189] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [189] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [189] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [189] -> SHIFT "const" GOTO 18
	typespec/L1 = . "any" "class" "^", FOLLOW [189] -> SHIFT "any" GOTO 19
	typespec/L1 = . "any" "const" "class" "^", FOLLOW [189] -> SHIFT "any" GOTO 19
	typespec/L1 = . "any" "struct" "^", FOLLOW [189] -> SHIFT "any" GOTO 19
	typespec/L1 = . "any" "const" "struct" "^", FOLLOW [189] -> SHIFT "any" GOTO 19
	extern_paramlist = . (7), FOLLOW [186] -> REDUCE extern_paramlist #0 CALL extern_paramdeflist
[136]
	statement/L1 = typedefinition ";" . (77), FOLLOW [98] -> REDUCE statement #2 CALL definition
[137]
	main_procedure = "main" "{" codeblock "}" . (scope:73), FOLLOW [0] -> REDUCE main_procedure #4 CALL main_procdef
[138]
	statementlist = statement statementlist . (step), FOLLOW [18] -> REDUCE statementlist #2
[139]
	iexpression = expression indirection . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 246
[140]
	expression/L3 = . expression "=" expression, FOLLOW [239] -> GOTO 194
	expression/L3 = . expression "+=" expression, FOLLOW [239] -> GOTO 194
	expression/L3 = . expression "-=" expression, FOLLOW [239] -> GOTO 194
	expression/L3 = . expression "*=" expression, FOLLOW [239] -> GOTO 194
	expression/L3 = . expression "/=" expression, FOLLOW [239] -> GOTO 194
	expression/L3 = . expression "^=" expression, FOLLOW [239] -> GOTO 194
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 194
	expression/L3 = . expression "%=" expression, FOLLOW [239] -> GOTO 194
	expression/L3 = . expression "&&=" expression, FOLLOW [239] -> GOTO 194
	expression/L3 = . expression "||=" expression, FOLLOW [239] -> GOTO 194
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 194
	expression/L3 = . expression "|=" expression, FOLLOW [239] -> GOTO 194
	expression/L3 = . expression "<<=" expression, FOLLOW [239] -> GOTO 194
	expression/L3 = . expression ">>=" expression, FOLLOW [239] -> GOTO 194
	expression/L4 = . expression "||" expression, FOLLOW [239] -> GOTO 194
	expression/L5 = . expression "&&" expression, FOLLOW [239] -> GOTO 194
	expression/L6 = . expression "|" expression, FOLLOW [239] -> GOTO 194
	expression/L7 = . expression "^" expression, FOLLOW [239] -> GOTO 194
	expression/L7 = . expression "&" expression, FOLLOW [239] -> GOTO 194
	expression/L8 = . expression "==" expression, FOLLOW [239] -> GOTO 194
	expression/L8 = . expression "!=" expression, FOLLOW [239] -> GOTO 194
	expression/L8 = . expression "<=" expression, FOLLOW [239] -> GOTO 194
	expression/L8 = . expression "<" expression, FOLLOW [239] -> GOTO 194
	expression/L8 = . expression ">=" expression, FOLLOW [239] -> GOTO 194
	expression/L8 = . expression ">" expression, FOLLOW [239] -> GOTO 194
	expression/L9 = . expression "+" expression, FOLLOW [239] -> GOTO 194
	expression/L9 = . expression "-" expression, FOLLOW [239] -> GOTO 194
	expression/L10 = . expression "*" expression, FOLLOW [239] -> GOTO 194
	expression/L10 = . expression "/" expression, FOLLOW [239] -> GOTO 194
	expression/L10 = . expression "%" expression, FOLLOW [239] -> GOTO 194
	expression/L11 = . expression "<<" expression, FOLLOW [239] -> GOTO 194
	expression/L11 = . expression ">>" expression, FOLLOW [239] -> GOTO 194
	expression/L12 = . expression "." IDENT, FOLLOW [239] -> GOTO 194
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [239] -> GOTO 194
	expression/L13 = . expression "(" ")", FOLLOW [239] -> GOTO 194
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [239] -> GOTO 194
	iexpression = . expression indirection IDENT, FOLLOW [239] -> GOTO 194
	expressionlist = . expression "," expressionlist, FOLLOW [10] -> GOTO 194
	expressionlist = . expression, FOLLOW [10] -> GOTO 194
	expression/L12 = . iexpression, FOLLOW [239] -> GOTO 77
	expression/L13 = expression "(" . expressionlist ")", FOLLOW [239] -> GOTO 247
	expression/L2 = . BOOLEAN, FOLLOW [239] -> SHIFT BOOLEAN GOTO 78
	expression/L2 = . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 79
	expression/L2 = . DQSTRING, FOLLOW [239] -> SHIFT DQSTRING GOTO 80
	expression/L2 = . SQSTRING, FOLLOW [239] -> SHIFT SQSTRING GOTO 81
	expression/L2 = . CARDINAL, FOLLOW [239] -> SHIFT CARDINAL GOTO 82
	expression/L2 = . INTEGER, FOLLOW [239] -> SHIFT INTEGER GOTO 83
	expression/L2 = . FLOAT, FOLLOW [239] -> SHIFT FLOAT GOTO 84
	expression/L2 = . "(" expression ")", FOLLOW [239] -> SHIFT '(' GOTO 85
	expression/L13 = expression "(" . ")", FOLLOW [239] -> SHIFT ')' GOTO 248
	expression/L9 = . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 86
	expression/L1 = . "{" expressionlist "}", FOLLOW [239] -> SHIFT '{' GOTO 103
	expression/L1 = . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 103
	expression/L9 = . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 90
	expression/L9 = . "~" expression, FOLLOW [239] -> SHIFT '~' GOTO 91
	expression/L9 = . "!" expression, FOLLOW [239] -> SHIFT '!' GOTO 92
	expression/L1 = . "new" typespec ":" expression, FOLLOW [239] -> SHIFT "new" GOTO 98
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [239] -> SHIFT "cast" GOTO 99
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [239] -> SHIFT "cast" GOTO 99
	expression/L2 = . "null", FOLLOW [239] -> SHIFT "null" GOTO 100
[141]
	statement/L1 = expression ";" . (78), FOLLOW [98] -> REDUCE statement #2 CALL free_expression
[142]
	expression/L3 = . expression "=" expression, FOLLOW [239] -> GOTO 249
	expression/L3 = . expression "+=" expression, FOLLOW [239] -> GOTO 249
	expression/L3 = . expression "-=" expression, FOLLOW [239] -> GOTO 249
	expression/L3 = . expression "*=" expression, FOLLOW [239] -> GOTO 249
	expression/L3 = . expression "/=" expression, FOLLOW [239] -> GOTO 249
	expression/L3 = . expression "^=" expression, FOLLOW [239] -> GOTO 249
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 249
	expression/L3 = . expression "%=" expression, FOLLOW [239] -> GOTO 249
	expression/L3 = . expression "&&=" expression, FOLLOW [239] -> GOTO 249
	expression/L3 = . expression "||=" expression, FOLLOW [239] -> GOTO 249
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 249
	expression/L3 = . expression "|=" expression, FOLLOW [239] -> GOTO 249
	expression/L3 = . expression "<<=" expression, FOLLOW [239] -> GOTO 249
	expression/L3 = . expression ">>=" expression, FOLLOW [239] -> GOTO 249
	expression/L4 = . expression "||" expression, FOLLOW [239] -> GOTO 249
	expression/L5 = . expression "&&" expression, FOLLOW [239] -> GOTO 249
	expression/L6 = . expression "|" expression, FOLLOW [239] -> GOTO 249
	expression/L7 = . expression "^" expression, FOLLOW [239] -> GOTO 249
	expression/L7 = . expression "&" expression, FOLLOW [239] -> GOTO 249
	expression/L7 = expression "&" . expression, FOLLOW [239] -> GOTO 249
	expression/L8 = . expression "==" expression, FOLLOW [239] -> GOTO 249
	expression/L8 = . expression "!=" expression, FOLLOW [239] -> GOTO 249
	expression/L8 = . expression "<=" expression, FOLLOW [239] -> GOTO 249
	expression/L8 = . expression "<" expression, FOLLOW [239] -> GOTO 249
	expression/L8 = . expression ">=" expression, FOLLOW [239] -> GOTO 249
	expression/L8 = . expression ">" expression, FOLLOW [239] -> GOTO 249
	expression/L9 = . expression "+" expression, FOLLOW [239] -> GOTO 249
	expression/L9 = . expression "-" expression, FOLLOW [239] -> GOTO 249
	expression/L10 = . expression "*" expression, FOLLOW [239] -> GOTO 249
	expression/L10 = . expression "/" expression, FOLLOW [239] -> GOTO 249
	expression/L10 = . expression "%" expression, FOLLOW [239] -> GOTO 249
	expression/L11 = . expression "<<" expression, FOLLOW [239] -> GOTO 249
	expression/L11 = . expression ">>" expression, FOLLOW [239] -> GOTO 249
	expression/L12 = . expression "." IDENT, FOLLOW [239] -> GOTO 249
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [239] -> GOTO 249
	expression/L13 = . expression "(" ")", FOLLOW [239] -> GOTO 249
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [239] -> GOTO 249
	iexpression = . expression indirection IDENT, FOLLOW [239] -> GOTO 249
	expression/L12 = . iexpression, FOLLOW [239] -> GOTO 77
	expression/L2 = . BOOLEAN, FOLLOW [239] -> SHIFT BOOLEAN GOTO 78
	expression/L2 = . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 79
	expression/L2 = . DQSTRING, FOLLOW [239] -> SHIFT DQSTRING GOTO 80
	expression/L2 = . SQSTRING, FOLLOW [239] -> SHIFT SQSTRING GOTO 81
	expression/L2 = . CARDINAL, FOLLOW [239] -> SHIFT CARDINAL GOTO 82
	expression/L2 = . INTEGER, FOLLOW [239] -> SHIFT INTEGER GOTO 83
	expression/L2 = . FLOAT, FOLLOW [239] -> SHIFT FLOAT GOTO 84
	expression/L2 = . "(" expression ")", FOLLOW [239] -> SHIFT '(' GOTO 85
	expression/L9 = . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 86
	expression/L1 = . "{" expressionlist "}", FOLLOW [239] -> SHIFT '{' GOTO 103
	expression/L1 = . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 103
	expression/L9 = . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 90
	expression/L9 = . "~" expression, FOLLOW [239] -> SHIFT '~' GOTO 91
	expression/L9 = . "!" expression, FOLLOW [239] -> SHIFT '!' GOTO 92
	expression/L1 = . "new" typespec ":" expression, FOLLOW [239] -> SHIFT "new" GOTO 98
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [239] -> SHIFT "cast" GOTO 99
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [239] -> SHIFT "cast" GOTO 99
	expression/L2 = . "null", FOLLOW [239] -> SHIFT "null" GOTO 100
[143]
	expression/L3 = . expression "=" expression, FOLLOW [239] -> GOTO 250
	expression/L3 = . expression "+=" expression, FOLLOW [239] -> GOTO 250
	expression/L3 = . expression "-=" expression, FOLLOW [239] -> GOTO 250
	expression/L3 = . expression "*=" expression, FOLLOW [239] -> GOTO 250
	expression/L3 = . expression "/=" expression, FOLLOW [239] -> GOTO 250
	expression/L3 = . expression "^=" expression, FOLLOW [239] -> GOTO 250
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 250
	expression/L3 = . expression "%=" expression, FOLLOW [239] -> GOTO 250
	expression/L3 = . expression "&&=" expression, FOLLOW [239] -> GOTO 250
	expression/L3 = . expression "||=" expression, FOLLOW [239] -> GOTO 250
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 250
	expression/L3 = . expression "|=" expression, FOLLOW [239] -> GOTO 250
	expression/L3 = . expression "<<=" expression, FOLLOW [239] -> GOTO 250
	expression/L3 = . expression ">>=" expression, FOLLOW [239] -> GOTO 250
	expression/L4 = . expression "||" expression, FOLLOW [239] -> GOTO 250
	expression/L5 = . expression "&&" expression, FOLLOW [239] -> GOTO 250
	expression/L6 = . expression "|" expression, FOLLOW [239] -> GOTO 250
	expression/L7 = . expression "^" expression, FOLLOW [239] -> GOTO 250
	expression/L7 = expression "^" . expression, FOLLOW [239] -> GOTO 250
	expression/L7 = . expression "&" expression, FOLLOW [239] -> GOTO 250
	expression/L8 = . expression "==" expression, FOLLOW [239] -> GOTO 250
	expression/L8 = . expression "!=" expression, FOLLOW [239] -> GOTO 250
	expression/L8 = . expression "<=" expression, FOLLOW [239] -> GOTO 250
	expression/L8 = . expression "<" expression, FOLLOW [239] -> GOTO 250
	expression/L8 = . expression ">=" expression, FOLLOW [239] -> GOTO 250
	expression/L8 = . expression ">" expression, FOLLOW [239] -> GOTO 250
	expression/L9 = . expression "+" expression, FOLLOW [239] -> GOTO 250
	expression/L9 = . expression "-" expression, FOLLOW [239] -> GOTO 250
	expression/L10 = . expression "*" expression, FOLLOW [239] -> GOTO 250
	expression/L10 = . expression "/" expression, FOLLOW [239] -> GOTO 250
	expression/L10 = . expression "%" expression, FOLLOW [239] -> GOTO 250
	expression/L11 = . expression "<<" expression, FOLLOW [239] -> GOTO 250
	expression/L11 = . expression ">>" expression, FOLLOW [239] -> GOTO 250
	expression/L12 = . expression "." IDENT, FOLLOW [239] -> GOTO 250
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [239] -> GOTO 250
	expression/L13 = . expression "(" ")", FOLLOW [239] -> GOTO 250
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [239] -> GOTO 250
	iexpression = . expression indirection IDENT, FOLLOW [239] -> GOTO 250
	expression/L12 = . iexpression, FOLLOW [239] -> GOTO 77
	expression/L2 = . BOOLEAN, FOLLOW [239] -> SHIFT BOOLEAN GOTO 78
	expression/L2 = . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 79
	expression/L2 = . DQSTRING, FOLLOW [239] -> SHIFT DQSTRING GOTO 80
	expression/L2 = . SQSTRING, FOLLOW [239] -> SHIFT SQSTRING GOTO 81
	expression/L2 = . CARDINAL, FOLLOW [239] -> SHIFT CARDINAL GOTO 82
	expression/L2 = . INTEGER, FOLLOW [239] -> SHIFT INTEGER GOTO 83
	expression/L2 = . FLOAT, FOLLOW [239] -> SHIFT FLOAT GOTO 84
	expression/L2 = . "(" expression ")", FOLLOW [239] -> SHIFT '(' GOTO 85
	expression/L9 = . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 86
	expression/L1 = . "{" expressionlist "}", FOLLOW [239] -> SHIFT '{' GOTO 103
	expression/L1 = . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 103
	expression/L9 = . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 90
	expression/L9 = . "~" expression, FOLLOW [239] -> SHIFT '~' GOTO 91
	expression/L9 = . "!" expression, FOLLOW [239] -> SHIFT '!' GOTO 92
	expression/L1 = . "new" typespec ":" expression, FOLLOW [239] -> SHIFT "new" GOTO 98
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [239] -> SHIFT "cast" GOTO 99
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [239] -> SHIFT "cast" GOTO 99
	expression/L2 = . "null", FOLLOW [239] -> SHIFT "null" GOTO 100
[144]
	indirection = "->" . indirection, FOLLOW [13] -> GOTO 251
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 144
	indirection = "->" . (137), FOLLOW [13] -> REDUCE indirection #1 CALL count
[145]
	expression/L3 = . expression "=" expression, FOLLOW [239] -> GOTO 252
	expression/L3 = expression "=" . expression, FOLLOW [239] -> GOTO 252
	expression/L3 = . expression "+=" expression, FOLLOW [239] -> GOTO 252
	expression/L3 = . expression "-=" expression, FOLLOW [239] -> GOTO 252
	expression/L3 = . expression "*=" expression, FOLLOW [239] -> GOTO 252
	expression/L3 = . expression "/=" expression, FOLLOW [239] -> GOTO 252
	expression/L3 = . expression "^=" expression, FOLLOW [239] -> GOTO 252
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 252
	expression/L3 = . expression "%=" expression, FOLLOW [239] -> GOTO 252
	expression/L3 = . expression "&&=" expression, FOLLOW [239] -> GOTO 252
	expression/L3 = . expression "||=" expression, FOLLOW [239] -> GOTO 252
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 252
	expression/L3 = . expression "|=" expression, FOLLOW [239] -> GOTO 252
	expression/L3 = . expression "<<=" expression, FOLLOW [239] -> GOTO 252
	expression/L3 = . expression ">>=" expression, FOLLOW [239] -> GOTO 252
	expression/L4 = . expression "||" expression, FOLLOW [239] -> GOTO 252
	expression/L5 = . expression "&&" expression, FOLLOW [239] -> GOTO 252
	expression/L6 = . expression "|" expression, FOLLOW [239] -> GOTO 252
	expression/L7 = . expression "^" expression, FOLLOW [239] -> GOTO 252
	expression/L7 = . expression "&" expression, FOLLOW [239] -> GOTO 252
	expression/L8 = . expression "==" expression, FOLLOW [239] -> GOTO 252
	expression/L8 = . expression "!=" expression, FOLLOW [239] -> GOTO 252
	expression/L8 = . expression "<=" expression, FOLLOW [239] -> GOTO 252
	expression/L8 = . expression "<" expression, FOLLOW [239] -> GOTO 252
	expression/L8 = . expression ">=" expression, FOLLOW [239] -> GOTO 252
	expression/L8 = . expression ">" expression, FOLLOW [239] -> GOTO 252
	expression/L9 = . expression "+" expression, FOLLOW [239] -> GOTO 252
	expression/L9 = . expression "-" expression, FOLLOW [239] -> GOTO 252
	expression/L10 = . expression "*" expression, FOLLOW [239] -> GOTO 252
	expression/L10 = . expression "/" expression, FOLLOW [239] -> GOTO 252
	expression/L10 = . expression "%" expression, FOLLOW [239] -> GOTO 252
	expression/L11 = . expression "<<" expression, FOLLOW [239] -> GOTO 252
	expression/L11 = . expression ">>" expression, FOLLOW [239] -> GOTO 252
	expression/L12 = . expression "." IDENT, FOLLOW [239] -> GOTO 252
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [239] -> GOTO 252
	expression/L13 = . expression "(" ")", FOLLOW [239] -> GOTO 252
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [239] -> GOTO 252
	iexpression = . expression indirection IDENT, FOLLOW [239] -> GOTO 252
	expression/L12 = . iexpression, FOLLOW [239] -> GOTO 77
	expression/L2 = . BOOLEAN, FOLLOW [239] -> SHIFT BOOLEAN GOTO 78
	expression/L2 = . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 79
	expression/L2 = . DQSTRING, FOLLOW [239] -> SHIFT DQSTRING GOTO 80
	expression/L2 = . SQSTRING, FOLLOW [239] -> SHIFT SQSTRING GOTO 81
	expression/L2 = . CARDINAL, FOLLOW [239] -> SHIFT CARDINAL GOTO 82
	expression/L2 = . INTEGER, FOLLOW [239] -> SHIFT INTEGER GOTO 83
	expression/L2 = . FLOAT, FOLLOW [239] -> SHIFT FLOAT GOTO 84
	expression/L2 = . "(" expression ")", FOLLOW [239] -> SHIFT '(' GOTO 85
	expression/L9 = . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 86
	expression/L1 = . "{" expressionlist "}", FOLLOW [239] -> SHIFT '{' GOTO 103
	expression/L1 = . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 103
	expression/L9 = . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 90
	expression/L9 = . "~" expression, FOLLOW [239] -> SHIFT '~' GOTO 91
	expression/L9 = . "!" expression, FOLLOW [239] -> SHIFT '!' GOTO 92
	expression/L1 = . "new" typespec ":" expression, FOLLOW [239] -> SHIFT "new" GOTO 98
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [239] -> SHIFT "cast" GOTO 99
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [239] -> SHIFT "cast" GOTO 99
	expression/L2 = . "null", FOLLOW [239] -> SHIFT "null" GOTO 100
[146]
	expression/L3 = . expression "=" expression, FOLLOW [239] -> GOTO 253
	expression/L3 = . expression "+=" expression, FOLLOW [239] -> GOTO 253
	expression/L3 = . expression "-=" expression, FOLLOW [239] -> GOTO 253
	expression/L3 = . expression "*=" expression, FOLLOW [239] -> GOTO 253
	expression/L3 = . expression "/=" expression, FOLLOW [239] -> GOTO 253
	expression/L3 = . expression "^=" expression, FOLLOW [239] -> GOTO 253
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 253
	expression/L3 = . expression "%=" expression, FOLLOW [239] -> GOTO 253
	expression/L3 = . expression "&&=" expression, FOLLOW [239] -> GOTO 253
	expression/L3 = . expression "||=" expression, FOLLOW [239] -> GOTO 253
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 253
	expression/L3 = . expression "|=" expression, FOLLOW [239] -> GOTO 253
	expression/L3 = . expression "<<=" expression, FOLLOW [239] -> GOTO 253
	expression/L3 = . expression ">>=" expression, FOLLOW [239] -> GOTO 253
	expression/L4 = . expression "||" expression, FOLLOW [239] -> GOTO 253
	expression/L5 = . expression "&&" expression, FOLLOW [239] -> GOTO 253
	expression/L6 = . expression "|" expression, FOLLOW [239] -> GOTO 253
	expression/L7 = . expression "^" expression, FOLLOW [239] -> GOTO 253
	expression/L7 = . expression "&" expression, FOLLOW [239] -> GOTO 253
	expression/L8 = . expression "==" expression, FOLLOW [239] -> GOTO 253
	expression/L8 = . expression "!=" expression, FOLLOW [239] -> GOTO 253
	expression/L8 = . expression "<=" expression, FOLLOW [239] -> GOTO 253
	expression/L8 = . expression "<" expression, FOLLOW [239] -> GOTO 253
	expression/L8 = . expression ">=" expression, FOLLOW [239] -> GOTO 253
	expression/L8 = . expression ">" expression, FOLLOW [239] -> GOTO 253
	expression/L9 = . expression "+" expression, FOLLOW [239] -> GOTO 253
	expression/L9 = expression "+" . expression, FOLLOW [239] -> GOTO 253
	expression/L9 = . expression "-" expression, FOLLOW [239] -> GOTO 253
	expression/L10 = . expression "*" expression, FOLLOW [239] -> GOTO 253
	expression/L10 = . expression "/" expression, FOLLOW [239] -> GOTO 253
	expression/L10 = . expression "%" expression, FOLLOW [239] -> GOTO 253
	expression/L11 = . expression "<<" expression, FOLLOW [239] -> GOTO 253
	expression/L11 = . expression ">>" expression, FOLLOW [239] -> GOTO 253
	expression/L12 = . expression "." IDENT, FOLLOW [239] -> GOTO 253
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [239] -> GOTO 253
	expression/L13 = . expression "(" ")", FOLLOW [239] -> GOTO 253
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [239] -> GOTO 253
	iexpression = . expression indirection IDENT, FOLLOW [239] -> GOTO 253
	expression/L12 = . iexpression, FOLLOW [239] -> GOTO 77
	expression/L2 = . BOOLEAN, FOLLOW [239] -> SHIFT BOOLEAN GOTO 78
	expression/L2 = . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 79
	expression/L2 = . DQSTRING, FOLLOW [239] -> SHIFT DQSTRING GOTO 80
	expression/L2 = . SQSTRING, FOLLOW [239] -> SHIFT SQSTRING GOTO 81
	expression/L2 = . CARDINAL, FOLLOW [239] -> SHIFT CARDINAL GOTO 82
	expression/L2 = . INTEGER, FOLLOW [239] -> SHIFT INTEGER GOTO 83
	expression/L2 = . FLOAT, FOLLOW [239] -> SHIFT FLOAT GOTO 84
	expression/L2 = . "(" expression ")", FOLLOW [239] -> SHIFT '(' GOTO 85
	expression/L9 = . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 86
	expression/L1 = . "{" expressionlist "}", FOLLOW [239] -> SHIFT '{' GOTO 103
	expression/L1 = . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 103
	expression/L9 = . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 90
	expression/L9 = . "~" expression, FOLLOW [239] -> SHIFT '~' GOTO 91
	expression/L9 = . "!" expression, FOLLOW [239] -> SHIFT '!' GOTO 92
	expression/L1 = . "new" typespec ":" expression, FOLLOW [239] -> SHIFT "new" GOTO 98
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [239] -> SHIFT "cast" GOTO 99
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [239] -> SHIFT "cast" GOTO 99
	expression/L2 = . "null", FOLLOW [239] -> SHIFT "null" GOTO 100
[147]
	expression/L3 = . expression "=" expression, FOLLOW [239] -> GOTO 254
	expression/L3 = . expression "+=" expression, FOLLOW [239] -> GOTO 254
	expression/L3 = . expression "-=" expression, FOLLOW [239] -> GOTO 254
	expression/L3 = . expression "*=" expression, FOLLOW [239] -> GOTO 254
	expression/L3 = . expression "/=" expression, FOLLOW [239] -> GOTO 254
	expression/L3 = . expression "^=" expression, FOLLOW [239] -> GOTO 254
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 254
	expression/L3 = . expression "%=" expression, FOLLOW [239] -> GOTO 254
	expression/L3 = . expression "&&=" expression, FOLLOW [239] -> GOTO 254
	expression/L3 = . expression "||=" expression, FOLLOW [239] -> GOTO 254
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 254
	expression/L3 = . expression "|=" expression, FOLLOW [239] -> GOTO 254
	expression/L3 = . expression "<<=" expression, FOLLOW [239] -> GOTO 254
	expression/L3 = . expression ">>=" expression, FOLLOW [239] -> GOTO 254
	expression/L4 = . expression "||" expression, FOLLOW [239] -> GOTO 254
	expression/L5 = . expression "&&" expression, FOLLOW [239] -> GOTO 254
	expression/L6 = . expression "|" expression, FOLLOW [239] -> GOTO 254
	expression/L7 = . expression "^" expression, FOLLOW [239] -> GOTO 254
	expression/L7 = . expression "&" expression, FOLLOW [239] -> GOTO 254
	expression/L8 = . expression "==" expression, FOLLOW [239] -> GOTO 254
	expression/L8 = . expression "!=" expression, FOLLOW [239] -> GOTO 254
	expression/L8 = . expression "<=" expression, FOLLOW [239] -> GOTO 254
	expression/L8 = . expression "<" expression, FOLLOW [239] -> GOTO 254
	expression/L8 = . expression ">=" expression, FOLLOW [239] -> GOTO 254
	expression/L8 = . expression ">" expression, FOLLOW [239] -> GOTO 254
	expression/L9 = . expression "+" expression, FOLLOW [239] -> GOTO 254
	expression/L9 = . expression "-" expression, FOLLOW [239] -> GOTO 254
	expression/L9 = expression "-" . expression, FOLLOW [239] -> GOTO 254
	expression/L10 = . expression "*" expression, FOLLOW [239] -> GOTO 254
	expression/L10 = . expression "/" expression, FOLLOW [239] -> GOTO 254
	expression/L10 = . expression "%" expression, FOLLOW [239] -> GOTO 254
	expression/L11 = . expression "<<" expression, FOLLOW [239] -> GOTO 254
	expression/L11 = . expression ">>" expression, FOLLOW [239] -> GOTO 254
	expression/L12 = . expression "." IDENT, FOLLOW [239] -> GOTO 254
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [239] -> GOTO 254
	expression/L13 = . expression "(" ")", FOLLOW [239] -> GOTO 254
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [239] -> GOTO 254
	iexpression = . expression indirection IDENT, FOLLOW [239] -> GOTO 254
	expression/L12 = . iexpression, FOLLOW [239] -> GOTO 77
	expression/L2 = . BOOLEAN, FOLLOW [239] -> SHIFT BOOLEAN GOTO 78
	expression/L2 = . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 79
	expression/L2 = . DQSTRING, FOLLOW [239] -> SHIFT DQSTRING GOTO 80
	expression/L2 = . SQSTRING, FOLLOW [239] -> SHIFT SQSTRING GOTO 81
	expression/L2 = . CARDINAL, FOLLOW [239] -> SHIFT CARDINAL GOTO 82
	expression/L2 = . INTEGER, FOLLOW [239] -> SHIFT INTEGER GOTO 83
	expression/L2 = . FLOAT, FOLLOW [239] -> SHIFT FLOAT GOTO 84
	expression/L2 = . "(" expression ")", FOLLOW [239] -> SHIFT '(' GOTO 85
	expression/L9 = . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 86
	expression/L1 = . "{" expressionlist "}", FOLLOW [239] -> SHIFT '{' GOTO 103
	expression/L1 = . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 103
	expression/L9 = . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 90
	expression/L9 = . "~" expression, FOLLOW [239] -> SHIFT '~' GOTO 91
	expression/L9 = . "!" expression, FOLLOW [239] -> SHIFT '!' GOTO 92
	expression/L1 = . "new" typespec ":" expression, FOLLOW [239] -> SHIFT "new" GOTO 98
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [239] -> SHIFT "cast" GOTO 99
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [239] -> SHIFT "cast" GOTO 99
	expression/L2 = . "null", FOLLOW [239] -> SHIFT "null" GOTO 100
[148]
	expression/L3 = . expression "=" expression, FOLLOW [239] -> GOTO 255
	expression/L3 = . expression "+=" expression, FOLLOW [239] -> GOTO 255
	expression/L3 = . expression "-=" expression, FOLLOW [239] -> GOTO 255
	expression/L3 = . expression "*=" expression, FOLLOW [239] -> GOTO 255
	expression/L3 = . expression "/=" expression, FOLLOW [239] -> GOTO 255
	expression/L3 = . expression "^=" expression, FOLLOW [239] -> GOTO 255
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 255
	expression/L3 = . expression "%=" expression, FOLLOW [239] -> GOTO 255
	expression/L3 = . expression "&&=" expression, FOLLOW [239] -> GOTO 255
	expression/L3 = . expression "||=" expression, FOLLOW [239] -> GOTO 255
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 255
	expression/L3 = . expression "|=" expression, FOLLOW [239] -> GOTO 255
	expression/L3 = . expression "<<=" expression, FOLLOW [239] -> GOTO 255
	expression/L3 = . expression ">>=" expression, FOLLOW [239] -> GOTO 255
	expression/L4 = . expression "||" expression, FOLLOW [239] -> GOTO 255
	expression/L5 = . expression "&&" expression, FOLLOW [239] -> GOTO 255
	expression/L6 = . expression "|" expression, FOLLOW [239] -> GOTO 255
	expression/L7 = . expression "^" expression, FOLLOW [239] -> GOTO 255
	expression/L7 = . expression "&" expression, FOLLOW [239] -> GOTO 255
	expression/L8 = . expression "==" expression, FOLLOW [239] -> GOTO 255
	expression/L8 = . expression "!=" expression, FOLLOW [239] -> GOTO 255
	expression/L8 = . expression "<=" expression, FOLLOW [239] -> GOTO 255
	expression/L8 = . expression "<" expression, FOLLOW [239] -> GOTO 255
	expression/L8 = . expression ">=" expression, FOLLOW [239] -> GOTO 255
	expression/L8 = . expression ">" expression, FOLLOW [239] -> GOTO 255
	expression/L9 = . expression "+" expression, FOLLOW [239] -> GOTO 255
	expression/L9 = . expression "-" expression, FOLLOW [239] -> GOTO 255
	expression/L10 = . expression "*" expression, FOLLOW [239] -> GOTO 255
	expression/L10 = expression "*" . expression, FOLLOW [239] -> GOTO 255
	expression/L10 = . expression "/" expression, FOLLOW [239] -> GOTO 255
	expression/L10 = . expression "%" expression, FOLLOW [239] -> GOTO 255
	expression/L11 = . expression "<<" expression, FOLLOW [239] -> GOTO 255
	expression/L11 = . expression ">>" expression, FOLLOW [239] -> GOTO 255
	expression/L12 = . expression "." IDENT, FOLLOW [239] -> GOTO 255
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [239] -> GOTO 255
	expression/L13 = . expression "(" ")", FOLLOW [239] -> GOTO 255
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [239] -> GOTO 255
	iexpression = . expression indirection IDENT, FOLLOW [239] -> GOTO 255
	expression/L12 = . iexpression, FOLLOW [239] -> GOTO 77
	expression/L2 = . BOOLEAN, FOLLOW [239] -> SHIFT BOOLEAN GOTO 78
	expression/L2 = . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 79
	expression/L2 = . DQSTRING, FOLLOW [239] -> SHIFT DQSTRING GOTO 80
	expression/L2 = . SQSTRING, FOLLOW [239] -> SHIFT SQSTRING GOTO 81
	expression/L2 = . CARDINAL, FOLLOW [239] -> SHIFT CARDINAL GOTO 82
	expression/L2 = . INTEGER, FOLLOW [239] -> SHIFT INTEGER GOTO 83
	expression/L2 = . FLOAT, FOLLOW [239] -> SHIFT FLOAT GOTO 84
	expression/L2 = . "(" expression ")", FOLLOW [239] -> SHIFT '(' GOTO 85
	expression/L9 = . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 86
	expression/L1 = . "{" expressionlist "}", FOLLOW [239] -> SHIFT '{' GOTO 103
	expression/L1 = . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 103
	expression/L9 = . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 90
	expression/L9 = . "~" expression, FOLLOW [239] -> SHIFT '~' GOTO 91
	expression/L9 = . "!" expression, FOLLOW [239] -> SHIFT '!' GOTO 92
	expression/L1 = . "new" typespec ":" expression, FOLLOW [239] -> SHIFT "new" GOTO 98
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [239] -> SHIFT "cast" GOTO 99
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [239] -> SHIFT "cast" GOTO 99
	expression/L2 = . "null", FOLLOW [239] -> SHIFT "null" GOTO 100
[149]
	expression/L3 = . expression "=" expression, FOLLOW [239] -> GOTO 256
	expression/L3 = . expression "+=" expression, FOLLOW [239] -> GOTO 256
	expression/L3 = . expression "-=" expression, FOLLOW [239] -> GOTO 256
	expression/L3 = . expression "*=" expression, FOLLOW [239] -> GOTO 256
	expression/L3 = . expression "/=" expression, FOLLOW [239] -> GOTO 256
	expression/L3 = . expression "^=" expression, FOLLOW [239] -> GOTO 256
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 256
	expression/L3 = . expression "%=" expression, FOLLOW [239] -> GOTO 256
	expression/L3 = . expression "&&=" expression, FOLLOW [239] -> GOTO 256
	expression/L3 = . expression "||=" expression, FOLLOW [239] -> GOTO 256
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 256
	expression/L3 = . expression "|=" expression, FOLLOW [239] -> GOTO 256
	expression/L3 = . expression "<<=" expression, FOLLOW [239] -> GOTO 256
	expression/L3 = . expression ">>=" expression, FOLLOW [239] -> GOTO 256
	expression/L4 = . expression "||" expression, FOLLOW [239] -> GOTO 256
	expression/L5 = . expression "&&" expression, FOLLOW [239] -> GOTO 256
	expression/L6 = . expression "|" expression, FOLLOW [239] -> GOTO 256
	expression/L7 = . expression "^" expression, FOLLOW [239] -> GOTO 256
	expression/L7 = . expression "&" expression, FOLLOW [239] -> GOTO 256
	expression/L8 = . expression "==" expression, FOLLOW [239] -> GOTO 256
	expression/L8 = . expression "!=" expression, FOLLOW [239] -> GOTO 256
	expression/L8 = . expression "<=" expression, FOLLOW [239] -> GOTO 256
	expression/L8 = . expression "<" expression, FOLLOW [239] -> GOTO 256
	expression/L8 = . expression ">=" expression, FOLLOW [239] -> GOTO 256
	expression/L8 = . expression ">" expression, FOLLOW [239] -> GOTO 256
	expression/L9 = . expression "+" expression, FOLLOW [239] -> GOTO 256
	expression/L9 = . expression "-" expression, FOLLOW [239] -> GOTO 256
	expression/L10 = . expression "*" expression, FOLLOW [239] -> GOTO 256
	expression/L10 = . expression "/" expression, FOLLOW [239] -> GOTO 256
	expression/L10 = expression "/" . expression, FOLLOW [239] -> GOTO 256
	expression/L10 = . expression "%" expression, FOLLOW [239] -> GOTO 256
	expression/L11 = . expression "<<" expression, FOLLOW [239] -> GOTO 256
	expression/L11 = . expression ">>" expression, FOLLOW [239] -> GOTO 256
	expression/L12 = . expression "." IDENT, FOLLOW [239] -> GOTO 256
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [239] -> GOTO 256
	expression/L13 = . expression "(" ")", FOLLOW [239] -> GOTO 256
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [239] -> GOTO 256
	iexpression = . expression indirection IDENT, FOLLOW [239] -> GOTO 256
	expression/L12 = . iexpression, FOLLOW [239] -> GOTO 77
	expression/L2 = . BOOLEAN, FOLLOW [239] -> SHIFT BOOLEAN GOTO 78
	expression/L2 = . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 79
	expression/L2 = . DQSTRING, FOLLOW [239] -> SHIFT DQSTRING GOTO 80
	expression/L2 = . SQSTRING, FOLLOW [239] -> SHIFT SQSTRING GOTO 81
	expression/L2 = . CARDINAL, FOLLOW [239] -> SHIFT CARDINAL GOTO 82
	expression/L2 = . INTEGER, FOLLOW [239] -> SHIFT INTEGER GOTO 83
	expression/L2 = . FLOAT, FOLLOW [239] -> SHIFT FLOAT GOTO 84
	expression/L2 = . "(" expression ")", FOLLOW [239] -> SHIFT '(' GOTO 85
	expression/L9 = . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 86
	expression/L1 = . "{" expressionlist "}", FOLLOW [239] -> SHIFT '{' GOTO 103
	expression/L1 = . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 103
	expression/L9 = . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 90
	expression/L9 = . "~" expression, FOLLOW [239] -> SHIFT '~' GOTO 91
	expression/L9 = . "!" expression, FOLLOW [239] -> SHIFT '!' GOTO 92
	expression/L1 = . "new" typespec ":" expression, FOLLOW [239] -> SHIFT "new" GOTO 98
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [239] -> SHIFT "cast" GOTO 99
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [239] -> SHIFT "cast" GOTO 99
	expression/L2 = . "null", FOLLOW [239] -> SHIFT "null" GOTO 100
[150]
	expression/L3 = . expression "=" expression, FOLLOW [239] -> GOTO 257
	expression/L3 = . expression "+=" expression, FOLLOW [239] -> GOTO 257
	expression/L3 = . expression "-=" expression, FOLLOW [239] -> GOTO 257
	expression/L3 = . expression "*=" expression, FOLLOW [239] -> GOTO 257
	expression/L3 = . expression "/=" expression, FOLLOW [239] -> GOTO 257
	expression/L3 = . expression "^=" expression, FOLLOW [239] -> GOTO 257
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 257
	expression/L3 = . expression "%=" expression, FOLLOW [239] -> GOTO 257
	expression/L3 = . expression "&&=" expression, FOLLOW [239] -> GOTO 257
	expression/L3 = . expression "||=" expression, FOLLOW [239] -> GOTO 257
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 257
	expression/L3 = . expression "|=" expression, FOLLOW [239] -> GOTO 257
	expression/L3 = . expression "<<=" expression, FOLLOW [239] -> GOTO 257
	expression/L3 = . expression ">>=" expression, FOLLOW [239] -> GOTO 257
	expression/L4 = . expression "||" expression, FOLLOW [239] -> GOTO 257
	expression/L5 = . expression "&&" expression, FOLLOW [239] -> GOTO 257
	expression/L6 = . expression "|" expression, FOLLOW [239] -> GOTO 257
	expression/L7 = . expression "^" expression, FOLLOW [239] -> GOTO 257
	expression/L7 = . expression "&" expression, FOLLOW [239] -> GOTO 257
	expression/L8 = . expression "==" expression, FOLLOW [239] -> GOTO 257
	expression/L8 = . expression "!=" expression, FOLLOW [239] -> GOTO 257
	expression/L8 = . expression "<=" expression, FOLLOW [239] -> GOTO 257
	expression/L8 = . expression "<" expression, FOLLOW [239] -> GOTO 257
	expression/L8 = . expression ">=" expression, FOLLOW [239] -> GOTO 257
	expression/L8 = . expression ">" expression, FOLLOW [239] -> GOTO 257
	expression/L9 = . expression "+" expression, FOLLOW [239] -> GOTO 257
	expression/L9 = . expression "-" expression, FOLLOW [239] -> GOTO 257
	expression/L10 = . expression "*" expression, FOLLOW [239] -> GOTO 257
	expression/L10 = . expression "/" expression, FOLLOW [239] -> GOTO 257
	expression/L10 = . expression "%" expression, FOLLOW [239] -> GOTO 257
	expression/L10 = expression "%" . expression, FOLLOW [239] -> GOTO 257
	expression/L11 = . expression "<<" expression, FOLLOW [239] -> GOTO 257
	expression/L11 = . expression ">>" expression, FOLLOW [239] -> GOTO 257
	expression/L12 = . expression "." IDENT, FOLLOW [239] -> GOTO 257
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [239] -> GOTO 257
	expression/L13 = . expression "(" ")", FOLLOW [239] -> GOTO 257
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [239] -> GOTO 257
	iexpression = . expression indirection IDENT, FOLLOW [239] -> GOTO 257
	expression/L12 = . iexpression, FOLLOW [239] -> GOTO 77
	expression/L2 = . BOOLEAN, FOLLOW [239] -> SHIFT BOOLEAN GOTO 78
	expression/L2 = . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 79
	expression/L2 = . DQSTRING, FOLLOW [239] -> SHIFT DQSTRING GOTO 80
	expression/L2 = . SQSTRING, FOLLOW [239] -> SHIFT SQSTRING GOTO 81
	expression/L2 = . CARDINAL, FOLLOW [239] -> SHIFT CARDINAL GOTO 82
	expression/L2 = . INTEGER, FOLLOW [239] -> SHIFT INTEGER GOTO 83
	expression/L2 = . FLOAT, FOLLOW [239] -> SHIFT FLOAT GOTO 84
	expression/L2 = . "(" expression ")", FOLLOW [239] -> SHIFT '(' GOTO 85
	expression/L9 = . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 86
	expression/L1 = . "{" expressionlist "}", FOLLOW [239] -> SHIFT '{' GOTO 103
	expression/L1 = . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 103
	expression/L9 = . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 90
	expression/L9 = . "~" expression, FOLLOW [239] -> SHIFT '~' GOTO 91
	expression/L9 = . "!" expression, FOLLOW [239] -> SHIFT '!' GOTO 92
	expression/L1 = . "new" typespec ":" expression, FOLLOW [239] -> SHIFT "new" GOTO 98
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [239] -> SHIFT "cast" GOTO 99
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [239] -> SHIFT "cast" GOTO 99
	expression/L2 = . "null", FOLLOW [239] -> SHIFT "null" GOTO 100
[151]
	expression/L3 = . expression "=" expression, FOLLOW [239] -> GOTO 258
	expression/L3 = . expression "+=" expression, FOLLOW [239] -> GOTO 258
	expression/L3 = . expression "-=" expression, FOLLOW [239] -> GOTO 258
	expression/L3 = . expression "*=" expression, FOLLOW [239] -> GOTO 258
	expression/L3 = . expression "/=" expression, FOLLOW [239] -> GOTO 258
	expression/L3 = . expression "^=" expression, FOLLOW [239] -> GOTO 258
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 258
	expression/L3 = . expression "%=" expression, FOLLOW [239] -> GOTO 258
	expression/L3 = . expression "&&=" expression, FOLLOW [239] -> GOTO 258
	expression/L3 = . expression "||=" expression, FOLLOW [239] -> GOTO 258
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 258
	expression/L3 = . expression "|=" expression, FOLLOW [239] -> GOTO 258
	expression/L3 = . expression "<<=" expression, FOLLOW [239] -> GOTO 258
	expression/L3 = . expression ">>=" expression, FOLLOW [239] -> GOTO 258
	expression/L4 = . expression "||" expression, FOLLOW [239] -> GOTO 258
	expression/L5 = . expression "&&" expression, FOLLOW [239] -> GOTO 258
	expression/L5 = expression "&&" . expression, FOLLOW [239] -> GOTO 258
	expression/L6 = . expression "|" expression, FOLLOW [239] -> GOTO 258
	expression/L7 = . expression "^" expression, FOLLOW [239] -> GOTO 258
	expression/L7 = . expression "&" expression, FOLLOW [239] -> GOTO 258
	expression/L8 = . expression "==" expression, FOLLOW [239] -> GOTO 258
	expression/L8 = . expression "!=" expression, FOLLOW [239] -> GOTO 258
	expression/L8 = . expression "<=" expression, FOLLOW [239] -> GOTO 258
	expression/L8 = . expression "<" expression, FOLLOW [239] -> GOTO 258
	expression/L8 = . expression ">=" expression, FOLLOW [239] -> GOTO 258
	expression/L8 = . expression ">" expression, FOLLOW [239] -> GOTO 258
	expression/L9 = . expression "+" expression, FOLLOW [239] -> GOTO 258
	expression/L9 = . expression "-" expression, FOLLOW [239] -> GOTO 258
	expression/L10 = . expression "*" expression, FOLLOW [239] -> GOTO 258
	expression/L10 = . expression "/" expression, FOLLOW [239] -> GOTO 258
	expression/L10 = . expression "%" expression, FOLLOW [239] -> GOTO 258
	expression/L11 = . expression "<<" expression, FOLLOW [239] -> GOTO 258
	expression/L11 = . expression ">>" expression, FOLLOW [239] -> GOTO 258
	expression/L12 = . expression "." IDENT, FOLLOW [239] -> GOTO 258
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [239] -> GOTO 258
	expression/L13 = . expression "(" ")", FOLLOW [239] -> GOTO 258
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [239] -> GOTO 258
	iexpression = . expression indirection IDENT, FOLLOW [239] -> GOTO 258
	expression/L12 = . iexpression, FOLLOW [239] -> GOTO 77
	expression/L2 = . BOOLEAN, FOLLOW [239] -> SHIFT BOOLEAN GOTO 78
	expression/L2 = . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 79
	expression/L2 = . DQSTRING, FOLLOW [239] -> SHIFT DQSTRING GOTO 80
	expression/L2 = . SQSTRING, FOLLOW [239] -> SHIFT SQSTRING GOTO 81
	expression/L2 = . CARDINAL, FOLLOW [239] -> SHIFT CARDINAL GOTO 82
	expression/L2 = . INTEGER, FOLLOW [239] -> SHIFT INTEGER GOTO 83
	expression/L2 = . FLOAT, FOLLOW [239] -> SHIFT FLOAT GOTO 84
	expression/L2 = . "(" expression ")", FOLLOW [239] -> SHIFT '(' GOTO 85
	expression/L9 = . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 86
	expression/L1 = . "{" expressionlist "}", FOLLOW [239] -> SHIFT '{' GOTO 103
	expression/L1 = . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 103
	expression/L9 = . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 90
	expression/L9 = . "~" expression, FOLLOW [239] -> SHIFT '~' GOTO 91
	expression/L9 = . "!" expression, FOLLOW [239] -> SHIFT '!' GOTO 92
	expression/L1 = . "new" typespec ":" expression, FOLLOW [239] -> SHIFT "new" GOTO 98
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [239] -> SHIFT "cast" GOTO 99
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [239] -> SHIFT "cast" GOTO 99
	expression/L2 = . "null", FOLLOW [239] -> SHIFT "null" GOTO 100
[152]
	expression/L3 = . expression "=" expression, FOLLOW [239] -> GOTO 259
	expression/L3 = . expression "+=" expression, FOLLOW [239] -> GOTO 259
	expression/L3 = . expression "-=" expression, FOLLOW [239] -> GOTO 259
	expression/L3 = . expression "*=" expression, FOLLOW [239] -> GOTO 259
	expression/L3 = . expression "/=" expression, FOLLOW [239] -> GOTO 259
	expression/L3 = . expression "^=" expression, FOLLOW [239] -> GOTO 259
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 259
	expression/L3 = . expression "%=" expression, FOLLOW [239] -> GOTO 259
	expression/L3 = . expression "&&=" expression, FOLLOW [239] -> GOTO 259
	expression/L3 = . expression "||=" expression, FOLLOW [239] -> GOTO 259
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 259
	expression/L3 = . expression "|=" expression, FOLLOW [239] -> GOTO 259
	expression/L3 = . expression "<<=" expression, FOLLOW [239] -> GOTO 259
	expression/L3 = . expression ">>=" expression, FOLLOW [239] -> GOTO 259
	expression/L4 = . expression "||" expression, FOLLOW [239] -> GOTO 259
	expression/L4 = expression "||" . expression, FOLLOW [239] -> GOTO 259
	expression/L5 = . expression "&&" expression, FOLLOW [239] -> GOTO 259
	expression/L6 = . expression "|" expression, FOLLOW [239] -> GOTO 259
	expression/L7 = . expression "^" expression, FOLLOW [239] -> GOTO 259
	expression/L7 = . expression "&" expression, FOLLOW [239] -> GOTO 259
	expression/L8 = . expression "==" expression, FOLLOW [239] -> GOTO 259
	expression/L8 = . expression "!=" expression, FOLLOW [239] -> GOTO 259
	expression/L8 = . expression "<=" expression, FOLLOW [239] -> GOTO 259
	expression/L8 = . expression "<" expression, FOLLOW [239] -> GOTO 259
	expression/L8 = . expression ">=" expression, FOLLOW [239] -> GOTO 259
	expression/L8 = . expression ">" expression, FOLLOW [239] -> GOTO 259
	expression/L9 = . expression "+" expression, FOLLOW [239] -> GOTO 259
	expression/L9 = . expression "-" expression, FOLLOW [239] -> GOTO 259
	expression/L10 = . expression "*" expression, FOLLOW [239] -> GOTO 259
	expression/L10 = . expression "/" expression, FOLLOW [239] -> GOTO 259
	expression/L10 = . expression "%" expression, FOLLOW [239] -> GOTO 259
	expression/L11 = . expression "<<" expression, FOLLOW [239] -> GOTO 259
	expression/L11 = . expression ">>" expression, FOLLOW [239] -> GOTO 259
	expression/L12 = . expression "." IDENT, FOLLOW [239] -> GOTO 259
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [239] -> GOTO 259
	expression/L13 = . expression "(" ")", FOLLOW [239] -> GOTO 259
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [239] -> GOTO 259
	iexpression = . expression indirection IDENT, FOLLOW [239] -> GOTO 259
	expression/L12 = . iexpression, FOLLOW [239] -> GOTO 77
	expression/L2 = . BOOLEAN, FOLLOW [239] -> SHIFT BOOLEAN GOTO 78
	expression/L2 = . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 79
	expression/L2 = . DQSTRING, FOLLOW [239] -> SHIFT DQSTRING GOTO 80
	expression/L2 = . SQSTRING, FOLLOW [239] -> SHIFT SQSTRING GOTO 81
	expression/L2 = . CARDINAL, FOLLOW [239] -> SHIFT CARDINAL GOTO 82
	expression/L2 = . INTEGER, FOLLOW [239] -> SHIFT INTEGER GOTO 83
	expression/L2 = . FLOAT, FOLLOW [239] -> SHIFT FLOAT GOTO 84
	expression/L2 = . "(" expression ")", FOLLOW [239] -> SHIFT '(' GOTO 85
	expression/L9 = . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 86
	expression/L1 = . "{" expressionlist "}", FOLLOW [239] -> SHIFT '{' GOTO 103
	expression/L1 = . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 103
	expression/L9 = . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 90
	expression/L9 = . "~" expression, FOLLOW [239] -> SHIFT '~' GOTO 91
	expression/L9 = . "!" expression, FOLLOW [239] -> SHIFT '!' GOTO 92
	expression/L1 = . "new" typespec ":" expression, FOLLOW [239] -> SHIFT "new" GOTO 98
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [239] -> SHIFT "cast" GOTO 99
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [239] -> SHIFT "cast" GOTO 99
	expression/L2 = . "null", FOLLOW [239] -> SHIFT "null" GOTO 100
[153]
	expression/L3 = . expression "=" expression, FOLLOW [239] -> GOTO 260
	expression/L3 = . expression "+=" expression, FOLLOW [239] -> GOTO 260
	expression/L3 = . expression "-=" expression, FOLLOW [239] -> GOTO 260
	expression/L3 = . expression "*=" expression, FOLLOW [239] -> GOTO 260
	expression/L3 = . expression "/=" expression, FOLLOW [239] -> GOTO 260
	expression/L3 = . expression "^=" expression, FOLLOW [239] -> GOTO 260
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 260
	expression/L3 = . expression "%=" expression, FOLLOW [239] -> GOTO 260
	expression/L3 = . expression "&&=" expression, FOLLOW [239] -> GOTO 260
	expression/L3 = . expression "||=" expression, FOLLOW [239] -> GOTO 260
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 260
	expression/L3 = . expression "|=" expression, FOLLOW [239] -> GOTO 260
	expression/L3 = . expression "<<=" expression, FOLLOW [239] -> GOTO 260
	expression/L3 = . expression ">>=" expression, FOLLOW [239] -> GOTO 260
	expression/L4 = . expression "||" expression, FOLLOW [239] -> GOTO 260
	expression/L5 = . expression "&&" expression, FOLLOW [239] -> GOTO 260
	expression/L6 = . expression "|" expression, FOLLOW [239] -> GOTO 260
	expression/L6 = expression "|" . expression, FOLLOW [239] -> GOTO 260
	expression/L7 = . expression "^" expression, FOLLOW [239] -> GOTO 260
	expression/L7 = . expression "&" expression, FOLLOW [239] -> GOTO 260
	expression/L8 = . expression "==" expression, FOLLOW [239] -> GOTO 260
	expression/L8 = . expression "!=" expression, FOLLOW [239] -> GOTO 260
	expression/L8 = . expression "<=" expression, FOLLOW [239] -> GOTO 260
	expression/L8 = . expression "<" expression, FOLLOW [239] -> GOTO 260
	expression/L8 = . expression ">=" expression, FOLLOW [239] -> GOTO 260
	expression/L8 = . expression ">" expression, FOLLOW [239] -> GOTO 260
	expression/L9 = . expression "+" expression, FOLLOW [239] -> GOTO 260
	expression/L9 = . expression "-" expression, FOLLOW [239] -> GOTO 260
	expression/L10 = . expression "*" expression, FOLLOW [239] -> GOTO 260
	expression/L10 = . expression "/" expression, FOLLOW [239] -> GOTO 260
	expression/L10 = . expression "%" expression, FOLLOW [239] -> GOTO 260
	expression/L11 = . expression "<<" expression, FOLLOW [239] -> GOTO 260
	expression/L11 = . expression ">>" expression, FOLLOW [239] -> GOTO 260
	expression/L12 = . expression "." IDENT, FOLLOW [239] -> GOTO 260
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [239] -> GOTO 260
	expression/L13 = . expression "(" ")", FOLLOW [239] -> GOTO 260
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [239] -> GOTO 260
	iexpression = . expression indirection IDENT, FOLLOW [239] -> GOTO 260
	expression/L12 = . iexpression, FOLLOW [239] -> GOTO 77
	expression/L2 = . BOOLEAN, FOLLOW [239] -> SHIFT BOOLEAN GOTO 78
	expression/L2 = . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 79
	expression/L2 = . DQSTRING, FOLLOW [239] -> SHIFT DQSTRING GOTO 80
	expression/L2 = . SQSTRING, FOLLOW [239] -> SHIFT SQSTRING GOTO 81
	expression/L2 = . CARDINAL, FOLLOW [239] -> SHIFT CARDINAL GOTO 82
	expression/L2 = . INTEGER, FOLLOW [239] -> SHIFT INTEGER GOTO 83
	expression/L2 = . FLOAT, FOLLOW [239] -> SHIFT FLOAT GOTO 84
	expression/L2 = . "(" expression ")", FOLLOW [239] -> SHIFT '(' GOTO 85
	expression/L9 = . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 86
	expression/L1 = . "{" expressionlist "}", FOLLOW [239] -> SHIFT '{' GOTO 103
	expression/L1 = . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 103
	expression/L9 = . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 90
	expression/L9 = . "~" expression, FOLLOW [239] -> SHIFT '~' GOTO 91
	expression/L9 = . "!" expression, FOLLOW [239] -> SHIFT '!' GOTO 92
	expression/L1 = . "new" typespec ":" expression, FOLLOW [239] -> SHIFT "new" GOTO 98
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [239] -> SHIFT "cast" GOTO 99
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [239] -> SHIFT "cast" GOTO 99
	expression/L2 = . "null", FOLLOW [239] -> SHIFT "null" GOTO 100
[154]
	expression/L3 = . expression "=" expression, FOLLOW [239] -> GOTO 261
	expression/L3 = . expression "+=" expression, FOLLOW [239] -> GOTO 261
	expression/L3 = . expression "-=" expression, FOLLOW [239] -> GOTO 261
	expression/L3 = . expression "*=" expression, FOLLOW [239] -> GOTO 261
	expression/L3 = . expression "/=" expression, FOLLOW [239] -> GOTO 261
	expression/L3 = . expression "^=" expression, FOLLOW [239] -> GOTO 261
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 261
	expression/L3 = . expression "%=" expression, FOLLOW [239] -> GOTO 261
	expression/L3 = . expression "&&=" expression, FOLLOW [239] -> GOTO 261
	expression/L3 = . expression "||=" expression, FOLLOW [239] -> GOTO 261
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 261
	expression/L3 = . expression "|=" expression, FOLLOW [239] -> GOTO 261
	expression/L3 = . expression "<<=" expression, FOLLOW [239] -> GOTO 261
	expression/L3 = . expression ">>=" expression, FOLLOW [239] -> GOTO 261
	expression/L4 = . expression "||" expression, FOLLOW [239] -> GOTO 261
	expression/L5 = . expression "&&" expression, FOLLOW [239] -> GOTO 261
	expression/L6 = . expression "|" expression, FOLLOW [239] -> GOTO 261
	expression/L7 = . expression "^" expression, FOLLOW [239] -> GOTO 261
	expression/L7 = . expression "&" expression, FOLLOW [239] -> GOTO 261
	expression/L8 = . expression "==" expression, FOLLOW [239] -> GOTO 261
	expression/L8 = . expression "!=" expression, FOLLOW [239] -> GOTO 261
	expression/L8 = . expression "<=" expression, FOLLOW [239] -> GOTO 261
	expression/L8 = . expression "<" expression, FOLLOW [239] -> GOTO 261
	expression/L8 = . expression ">=" expression, FOLLOW [239] -> GOTO 261
	expression/L8 = . expression ">" expression, FOLLOW [239] -> GOTO 261
	expression/L9 = . expression "+" expression, FOLLOW [239] -> GOTO 261
	expression/L9 = . expression "-" expression, FOLLOW [239] -> GOTO 261
	expression/L10 = . expression "*" expression, FOLLOW [239] -> GOTO 261
	expression/L10 = . expression "/" expression, FOLLOW [239] -> GOTO 261
	expression/L10 = . expression "%" expression, FOLLOW [239] -> GOTO 261
	expression/L11 = . expression "<<" expression, FOLLOW [239] -> GOTO 261
	expression/L11 = expression "<<" . expression, FOLLOW [239] -> GOTO 261
	expression/L11 = . expression ">>" expression, FOLLOW [239] -> GOTO 261
	expression/L12 = . expression "." IDENT, FOLLOW [239] -> GOTO 261
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [239] -> GOTO 261
	expression/L13 = . expression "(" ")", FOLLOW [239] -> GOTO 261
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [239] -> GOTO 261
	iexpression = . expression indirection IDENT, FOLLOW [239] -> GOTO 261
	expression/L12 = . iexpression, FOLLOW [239] -> GOTO 77
	expression/L2 = . BOOLEAN, FOLLOW [239] -> SHIFT BOOLEAN GOTO 78
	expression/L2 = . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 79
	expression/L2 = . DQSTRING, FOLLOW [239] -> SHIFT DQSTRING GOTO 80
	expression/L2 = . SQSTRING, FOLLOW [239] -> SHIFT SQSTRING GOTO 81
	expression/L2 = . CARDINAL, FOLLOW [239] -> SHIFT CARDINAL GOTO 82
	expression/L2 = . INTEGER, FOLLOW [239] -> SHIFT INTEGER GOTO 83
	expression/L2 = . FLOAT, FOLLOW [239] -> SHIFT FLOAT GOTO 84
	expression/L2 = . "(" expression ")", FOLLOW [239] -> SHIFT '(' GOTO 85
	expression/L9 = . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 86
	expression/L1 = . "{" expressionlist "}", FOLLOW [239] -> SHIFT '{' GOTO 103
	expression/L1 = . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 103
	expression/L9 = . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 90
	expression/L9 = . "~" expression, FOLLOW [239] -> SHIFT '~' GOTO 91
	expression/L9 = . "!" expression, FOLLOW [239] -> SHIFT '!' GOTO 92
	expression/L1 = . "new" typespec ":" expression, FOLLOW [239] -> SHIFT "new" GOTO 98
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [239] -> SHIFT "cast" GOTO 99
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [239] -> SHIFT "cast" GOTO 99
	expression/L2 = . "null", FOLLOW [239] -> SHIFT "null" GOTO 100
[155]
	expression/L3 = . expression "=" expression, FOLLOW [239] -> GOTO 262
	expression/L3 = . expression "+=" expression, FOLLOW [239] -> GOTO 262
	expression/L3 = . expression "-=" expression, FOLLOW [239] -> GOTO 262
	expression/L3 = . expression "*=" expression, FOLLOW [239] -> GOTO 262
	expression/L3 = . expression "/=" expression, FOLLOW [239] -> GOTO 262
	expression/L3 = . expression "^=" expression, FOLLOW [239] -> GOTO 262
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 262
	expression/L3 = . expression "%=" expression, FOLLOW [239] -> GOTO 262
	expression/L3 = . expression "&&=" expression, FOLLOW [239] -> GOTO 262
	expression/L3 = . expression "||=" expression, FOLLOW [239] -> GOTO 262
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 262
	expression/L3 = . expression "|=" expression, FOLLOW [239] -> GOTO 262
	expression/L3 = . expression "<<=" expression, FOLLOW [239] -> GOTO 262
	expression/L3 = . expression ">>=" expression, FOLLOW [239] -> GOTO 262
	expression/L4 = . expression "||" expression, FOLLOW [239] -> GOTO 262
	expression/L5 = . expression "&&" expression, FOLLOW [239] -> GOTO 262
	expression/L6 = . expression "|" expression, FOLLOW [239] -> GOTO 262
	expression/L7 = . expression "^" expression, FOLLOW [239] -> GOTO 262
	expression/L7 = . expression "&" expression, FOLLOW [239] -> GOTO 262
	expression/L8 = . expression "==" expression, FOLLOW [239] -> GOTO 262
	expression/L8 = . expression "!=" expression, FOLLOW [239] -> GOTO 262
	expression/L8 = . expression "<=" expression, FOLLOW [239] -> GOTO 262
	expression/L8 = . expression "<" expression, FOLLOW [239] -> GOTO 262
	expression/L8 = . expression ">=" expression, FOLLOW [239] -> GOTO 262
	expression/L8 = . expression ">" expression, FOLLOW [239] -> GOTO 262
	expression/L9 = . expression "+" expression, FOLLOW [239] -> GOTO 262
	expression/L9 = . expression "-" expression, FOLLOW [239] -> GOTO 262
	expression/L10 = . expression "*" expression, FOLLOW [239] -> GOTO 262
	expression/L10 = . expression "/" expression, FOLLOW [239] -> GOTO 262
	expression/L10 = . expression "%" expression, FOLLOW [239] -> GOTO 262
	expression/L11 = . expression "<<" expression, FOLLOW [239] -> GOTO 262
	expression/L11 = . expression ">>" expression, FOLLOW [239] -> GOTO 262
	expression/L11 = expression ">>" . expression, FOLLOW [239] -> GOTO 262
	expression/L12 = . expression "." IDENT, FOLLOW [239] -> GOTO 262
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [239] -> GOTO 262
	expression/L13 = . expression "(" ")", FOLLOW [239] -> GOTO 262
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [239] -> GOTO 262
	iexpression = . expression indirection IDENT, FOLLOW [239] -> GOTO 262
	expression/L12 = . iexpression, FOLLOW [239] -> GOTO 77
	expression/L2 = . BOOLEAN, FOLLOW [239] -> SHIFT BOOLEAN GOTO 78
	expression/L2 = . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 79
	expression/L2 = . DQSTRING, FOLLOW [239] -> SHIFT DQSTRING GOTO 80
	expression/L2 = . SQSTRING, FOLLOW [239] -> SHIFT SQSTRING GOTO 81
	expression/L2 = . CARDINAL, FOLLOW [239] -> SHIFT CARDINAL GOTO 82
	expression/L2 = . INTEGER, FOLLOW [239] -> SHIFT INTEGER GOTO 83
	expression/L2 = . FLOAT, FOLLOW [239] -> SHIFT FLOAT GOTO 84
	expression/L2 = . "(" expression ")", FOLLOW [239] -> SHIFT '(' GOTO 85
	expression/L9 = . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 86
	expression/L1 = . "{" expressionlist "}", FOLLOW [239] -> SHIFT '{' GOTO 103
	expression/L1 = . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 103
	expression/L9 = . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 90
	expression/L9 = . "~" expression, FOLLOW [239] -> SHIFT '~' GOTO 91
	expression/L9 = . "!" expression, FOLLOW [239] -> SHIFT '!' GOTO 92
	expression/L1 = . "new" typespec ":" expression, FOLLOW [239] -> SHIFT "new" GOTO 98
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [239] -> SHIFT "cast" GOTO 99
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [239] -> SHIFT "cast" GOTO 99
	expression/L2 = . "null", FOLLOW [239] -> SHIFT "null" GOTO 100
[156]
	expression/L3 = . expression "=" expression, FOLLOW [239] -> GOTO 194
	expression/L3 = . expression "+=" expression, FOLLOW [239] -> GOTO 194
	expression/L3 = . expression "-=" expression, FOLLOW [239] -> GOTO 194
	expression/L3 = . expression "*=" expression, FOLLOW [239] -> GOTO 194
	expression/L3 = . expression "/=" expression, FOLLOW [239] -> GOTO 194
	expression/L3 = . expression "^=" expression, FOLLOW [239] -> GOTO 194
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 194
	expression/L3 = . expression "%=" expression, FOLLOW [239] -> GOTO 194
	expression/L3 = . expression "&&=" expression, FOLLOW [239] -> GOTO 194
	expression/L3 = . expression "||=" expression, FOLLOW [239] -> GOTO 194
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 194
	expression/L3 = . expression "|=" expression, FOLLOW [239] -> GOTO 194
	expression/L3 = . expression "<<=" expression, FOLLOW [239] -> GOTO 194
	expression/L3 = . expression ">>=" expression, FOLLOW [239] -> GOTO 194
	expression/L4 = . expression "||" expression, FOLLOW [239] -> GOTO 194
	expression/L5 = . expression "&&" expression, FOLLOW [239] -> GOTO 194
	expression/L6 = . expression "|" expression, FOLLOW [239] -> GOTO 194
	expression/L7 = . expression "^" expression, FOLLOW [239] -> GOTO 194
	expression/L7 = . expression "&" expression, FOLLOW [239] -> GOTO 194
	expression/L8 = . expression "==" expression, FOLLOW [239] -> GOTO 194
	expression/L8 = . expression "!=" expression, FOLLOW [239] -> GOTO 194
	expression/L8 = . expression "<=" expression, FOLLOW [239] -> GOTO 194
	expression/L8 = . expression "<" expression, FOLLOW [239] -> GOTO 194
	expression/L8 = . expression ">=" expression, FOLLOW [239] -> GOTO 194
	expression/L8 = . expression ">" expression, FOLLOW [239] -> GOTO 194
	expression/L9 = . expression "+" expression, FOLLOW [239] -> GOTO 194
	expression/L9 = . expression "-" expression, FOLLOW [239] -> GOTO 194
	expression/L10 = . expression "*" expression, FOLLOW [239] -> GOTO 194
	expression/L10 = . expression "/" expression, FOLLOW [239] -> GOTO 194
	expression/L10 = . expression "%" expression, FOLLOW [239] -> GOTO 194
	expression/L11 = . expression "<<" expression, FOLLOW [239] -> GOTO 194
	expression/L11 = . expression ">>" expression, FOLLOW [239] -> GOTO 194
	expression/L12 = . expression "." IDENT, FOLLOW [239] -> GOTO 194
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [239] -> GOTO 194
	expression/L13 = . expression "(" ")", FOLLOW [239] -> GOTO 194
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [239] -> GOTO 194
	iexpression = . expression indirection IDENT, FOLLOW [239] -> GOTO 194
	expressionlist = . expression "," expressionlist, FOLLOW [25] -> GOTO 194
	expressionlist = . expression, FOLLOW [25] -> GOTO 194
	expression/L12 = . iexpression, FOLLOW [239] -> GOTO 77
	expression/L13 = expression "[" . expressionlist "]", FOLLOW [239] -> GOTO 263
	expression/L2 = . BOOLEAN, FOLLOW [239] -> SHIFT BOOLEAN GOTO 78
	expression/L2 = . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 79
	expression/L2 = . DQSTRING, FOLLOW [239] -> SHIFT DQSTRING GOTO 80
	expression/L2 = . SQSTRING, FOLLOW [239] -> SHIFT SQSTRING GOTO 81
	expression/L2 = . CARDINAL, FOLLOW [239] -> SHIFT CARDINAL GOTO 82
	expression/L2 = . INTEGER, FOLLOW [239] -> SHIFT INTEGER GOTO 83
	expression/L2 = . FLOAT, FOLLOW [239] -> SHIFT FLOAT GOTO 84
	expression/L2 = . "(" expression ")", FOLLOW [239] -> SHIFT '(' GOTO 85
	expression/L9 = . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 86
	expression/L1 = . "{" expressionlist "}", FOLLOW [239] -> SHIFT '{' GOTO 103
	expression/L1 = . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 103
	expression/L9 = . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 90
	expression/L9 = . "~" expression, FOLLOW [239] -> SHIFT '~' GOTO 91
	expression/L9 = . "!" expression, FOLLOW [239] -> SHIFT '!' GOTO 92
	expression/L1 = . "new" typespec ":" expression, FOLLOW [239] -> SHIFT "new" GOTO 98
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [239] -> SHIFT "cast" GOTO 99
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [239] -> SHIFT "cast" GOTO 99
	expression/L2 = . "null", FOLLOW [239] -> SHIFT "null" GOTO 100
[157]
	expression/L3 = . expression "=" expression, FOLLOW [239] -> GOTO 264
	expression/L3 = . expression "+=" expression, FOLLOW [239] -> GOTO 264
	expression/L3 = . expression "-=" expression, FOLLOW [239] -> GOTO 264
	expression/L3 = . expression "*=" expression, FOLLOW [239] -> GOTO 264
	expression/L3 = . expression "/=" expression, FOLLOW [239] -> GOTO 264
	expression/L3 = . expression "^=" expression, FOLLOW [239] -> GOTO 264
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 264
	expression/L3 = . expression "%=" expression, FOLLOW [239] -> GOTO 264
	expression/L3 = . expression "&&=" expression, FOLLOW [239] -> GOTO 264
	expression/L3 = . expression "||=" expression, FOLLOW [239] -> GOTO 264
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 264
	expression/L3 = . expression "|=" expression, FOLLOW [239] -> GOTO 264
	expression/L3 = . expression "<<=" expression, FOLLOW [239] -> GOTO 264
	expression/L3 = . expression ">>=" expression, FOLLOW [239] -> GOTO 264
	expression/L4 = . expression "||" expression, FOLLOW [239] -> GOTO 264
	expression/L5 = . expression "&&" expression, FOLLOW [239] -> GOTO 264
	expression/L6 = . expression "|" expression, FOLLOW [239] -> GOTO 264
	expression/L7 = . expression "^" expression, FOLLOW [239] -> GOTO 264
	expression/L7 = . expression "&" expression, FOLLOW [239] -> GOTO 264
	expression/L8 = . expression "==" expression, FOLLOW [239] -> GOTO 264
	expression/L8 = expression "==" . expression, FOLLOW [239] -> GOTO 264
	expression/L8 = . expression "!=" expression, FOLLOW [239] -> GOTO 264
	expression/L8 = . expression "<=" expression, FOLLOW [239] -> GOTO 264
	expression/L8 = . expression "<" expression, FOLLOW [239] -> GOTO 264
	expression/L8 = . expression ">=" expression, FOLLOW [239] -> GOTO 264
	expression/L8 = . expression ">" expression, FOLLOW [239] -> GOTO 264
	expression/L9 = . expression "+" expression, FOLLOW [239] -> GOTO 264
	expression/L9 = . expression "-" expression, FOLLOW [239] -> GOTO 264
	expression/L10 = . expression "*" expression, FOLLOW [239] -> GOTO 264
	expression/L10 = . expression "/" expression, FOLLOW [239] -> GOTO 264
	expression/L10 = . expression "%" expression, FOLLOW [239] -> GOTO 264
	expression/L11 = . expression "<<" expression, FOLLOW [239] -> GOTO 264
	expression/L11 = . expression ">>" expression, FOLLOW [239] -> GOTO 264
	expression/L12 = . expression "." IDENT, FOLLOW [239] -> GOTO 264
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [239] -> GOTO 264
	expression/L13 = . expression "(" ")", FOLLOW [239] -> GOTO 264
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [239] -> GOTO 264
	iexpression = . expression indirection IDENT, FOLLOW [239] -> GOTO 264
	expression/L12 = . iexpression, FOLLOW [239] -> GOTO 77
	expression/L2 = . BOOLEAN, FOLLOW [239] -> SHIFT BOOLEAN GOTO 78
	expression/L2 = . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 79
	expression/L2 = . DQSTRING, FOLLOW [239] -> SHIFT DQSTRING GOTO 80
	expression/L2 = . SQSTRING, FOLLOW [239] -> SHIFT SQSTRING GOTO 81
	expression/L2 = . CARDINAL, FOLLOW [239] -> SHIFT CARDINAL GOTO 82
	expression/L2 = . INTEGER, FOLLOW [239] -> SHIFT INTEGER GOTO 83
	expression/L2 = . FLOAT, FOLLOW [239] -> SHIFT FLOAT GOTO 84
	expression/L2 = . "(" expression ")", FOLLOW [239] -> SHIFT '(' GOTO 85
	expression/L9 = . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 86
	expression/L1 = . "{" expressionlist "}", FOLLOW [239] -> SHIFT '{' GOTO 103
	expression/L1 = . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 103
	expression/L9 = . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 90
	expression/L9 = . "~" expression, FOLLOW [239] -> SHIFT '~' GOTO 91
	expression/L9 = . "!" expression, FOLLOW [239] -> SHIFT '!' GOTO 92
	expression/L1 = . "new" typespec ":" expression, FOLLOW [239] -> SHIFT "new" GOTO 98
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [239] -> SHIFT "cast" GOTO 99
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [239] -> SHIFT "cast" GOTO 99
	expression/L2 = . "null", FOLLOW [239] -> SHIFT "null" GOTO 100
[158]
	expression/L3 = . expression "=" expression, FOLLOW [239] -> GOTO 265
	expression/L3 = . expression "+=" expression, FOLLOW [239] -> GOTO 265
	expression/L3 = . expression "-=" expression, FOLLOW [239] -> GOTO 265
	expression/L3 = . expression "*=" expression, FOLLOW [239] -> GOTO 265
	expression/L3 = . expression "/=" expression, FOLLOW [239] -> GOTO 265
	expression/L3 = . expression "^=" expression, FOLLOW [239] -> GOTO 265
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 265
	expression/L3 = . expression "%=" expression, FOLLOW [239] -> GOTO 265
	expression/L3 = . expression "&&=" expression, FOLLOW [239] -> GOTO 265
	expression/L3 = . expression "||=" expression, FOLLOW [239] -> GOTO 265
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 265
	expression/L3 = . expression "|=" expression, FOLLOW [239] -> GOTO 265
	expression/L3 = . expression "<<=" expression, FOLLOW [239] -> GOTO 265
	expression/L3 = . expression ">>=" expression, FOLLOW [239] -> GOTO 265
	expression/L4 = . expression "||" expression, FOLLOW [239] -> GOTO 265
	expression/L5 = . expression "&&" expression, FOLLOW [239] -> GOTO 265
	expression/L6 = . expression "|" expression, FOLLOW [239] -> GOTO 265
	expression/L7 = . expression "^" expression, FOLLOW [239] -> GOTO 265
	expression/L7 = . expression "&" expression, FOLLOW [239] -> GOTO 265
	expression/L8 = . expression "==" expression, FOLLOW [239] -> GOTO 265
	expression/L8 = . expression "!=" expression, FOLLOW [239] -> GOTO 265
	expression/L8 = expression "!=" . expression, FOLLOW [239] -> GOTO 265
	expression/L8 = . expression "<=" expression, FOLLOW [239] -> GOTO 265
	expression/L8 = . expression "<" expression, FOLLOW [239] -> GOTO 265
	expression/L8 = . expression ">=" expression, FOLLOW [239] -> GOTO 265
	expression/L8 = . expression ">" expression, FOLLOW [239] -> GOTO 265
	expression/L9 = . expression "+" expression, FOLLOW [239] -> GOTO 265
	expression/L9 = . expression "-" expression, FOLLOW [239] -> GOTO 265
	expression/L10 = . expression "*" expression, FOLLOW [239] -> GOTO 265
	expression/L10 = . expression "/" expression, FOLLOW [239] -> GOTO 265
	expression/L10 = . expression "%" expression, FOLLOW [239] -> GOTO 265
	expression/L11 = . expression "<<" expression, FOLLOW [239] -> GOTO 265
	expression/L11 = . expression ">>" expression, FOLLOW [239] -> GOTO 265
	expression/L12 = . expression "." IDENT, FOLLOW [239] -> GOTO 265
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [239] -> GOTO 265
	expression/L13 = . expression "(" ")", FOLLOW [239] -> GOTO 265
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [239] -> GOTO 265
	iexpression = . expression indirection IDENT, FOLLOW [239] -> GOTO 265
	expression/L12 = . iexpression, FOLLOW [239] -> GOTO 77
	expression/L2 = . BOOLEAN, FOLLOW [239] -> SHIFT BOOLEAN GOTO 78
	expression/L2 = . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 79
	expression/L2 = . DQSTRING, FOLLOW [239] -> SHIFT DQSTRING GOTO 80
	expression/L2 = . SQSTRING, FOLLOW [239] -> SHIFT SQSTRING GOTO 81
	expression/L2 = . CARDINAL, FOLLOW [239] -> SHIFT CARDINAL GOTO 82
	expression/L2 = . INTEGER, FOLLOW [239] -> SHIFT INTEGER GOTO 83
	expression/L2 = . FLOAT, FOLLOW [239] -> SHIFT FLOAT GOTO 84
	expression/L2 = . "(" expression ")", FOLLOW [239] -> SHIFT '(' GOTO 85
	expression/L9 = . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 86
	expression/L1 = . "{" expressionlist "}", FOLLOW [239] -> SHIFT '{' GOTO 103
	expression/L1 = . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 103
	expression/L9 = . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 90
	expression/L9 = . "~" expression, FOLLOW [239] -> SHIFT '~' GOTO 91
	expression/L9 = . "!" expression, FOLLOW [239] -> SHIFT '!' GOTO 92
	expression/L1 = . "new" typespec ":" expression, FOLLOW [239] -> SHIFT "new" GOTO 98
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [239] -> SHIFT "cast" GOTO 99
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [239] -> SHIFT "cast" GOTO 99
	expression/L2 = . "null", FOLLOW [239] -> SHIFT "null" GOTO 100
[159]
	expression/L3 = . expression "=" expression, FOLLOW [239] -> GOTO 266
	expression/L3 = . expression "+=" expression, FOLLOW [239] -> GOTO 266
	expression/L3 = . expression "-=" expression, FOLLOW [239] -> GOTO 266
	expression/L3 = . expression "*=" expression, FOLLOW [239] -> GOTO 266
	expression/L3 = . expression "/=" expression, FOLLOW [239] -> GOTO 266
	expression/L3 = . expression "^=" expression, FOLLOW [239] -> GOTO 266
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 266
	expression/L3 = . expression "%=" expression, FOLLOW [239] -> GOTO 266
	expression/L3 = . expression "&&=" expression, FOLLOW [239] -> GOTO 266
	expression/L3 = . expression "||=" expression, FOLLOW [239] -> GOTO 266
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 266
	expression/L3 = . expression "|=" expression, FOLLOW [239] -> GOTO 266
	expression/L3 = . expression "<<=" expression, FOLLOW [239] -> GOTO 266
	expression/L3 = . expression ">>=" expression, FOLLOW [239] -> GOTO 266
	expression/L4 = . expression "||" expression, FOLLOW [239] -> GOTO 266
	expression/L5 = . expression "&&" expression, FOLLOW [239] -> GOTO 266
	expression/L6 = . expression "|" expression, FOLLOW [239] -> GOTO 266
	expression/L7 = . expression "^" expression, FOLLOW [239] -> GOTO 266
	expression/L7 = . expression "&" expression, FOLLOW [239] -> GOTO 266
	expression/L8 = . expression "==" expression, FOLLOW [239] -> GOTO 266
	expression/L8 = . expression "!=" expression, FOLLOW [239] -> GOTO 266
	expression/L8 = . expression "<=" expression, FOLLOW [239] -> GOTO 266
	expression/L8 = . expression "<" expression, FOLLOW [239] -> GOTO 266
	expression/L8 = . expression ">=" expression, FOLLOW [239] -> GOTO 266
	expression/L8 = expression ">=" . expression, FOLLOW [239] -> GOTO 266
	expression/L8 = . expression ">" expression, FOLLOW [239] -> GOTO 266
	expression/L9 = . expression "+" expression, FOLLOW [239] -> GOTO 266
	expression/L9 = . expression "-" expression, FOLLOW [239] -> GOTO 266
	expression/L10 = . expression "*" expression, FOLLOW [239] -> GOTO 266
	expression/L10 = . expression "/" expression, FOLLOW [239] -> GOTO 266
	expression/L10 = . expression "%" expression, FOLLOW [239] -> GOTO 266
	expression/L11 = . expression "<<" expression, FOLLOW [239] -> GOTO 266
	expression/L11 = . expression ">>" expression, FOLLOW [239] -> GOTO 266
	expression/L12 = . expression "." IDENT, FOLLOW [239] -> GOTO 266
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [239] -> GOTO 266
	expression/L13 = . expression "(" ")", FOLLOW [239] -> GOTO 266
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [239] -> GOTO 266
	iexpression = . expression indirection IDENT, FOLLOW [239] -> GOTO 266
	expression/L12 = . iexpression, FOLLOW [239] -> GOTO 77
	expression/L2 = . BOOLEAN, FOLLOW [239] -> SHIFT BOOLEAN GOTO 78
	expression/L2 = . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 79
	expression/L2 = . DQSTRING, FOLLOW [239] -> SHIFT DQSTRING GOTO 80
	expression/L2 = . SQSTRING, FOLLOW [239] -> SHIFT SQSTRING GOTO 81
	expression/L2 = . CARDINAL, FOLLOW [239] -> SHIFT CARDINAL GOTO 82
	expression/L2 = . INTEGER, FOLLOW [239] -> SHIFT INTEGER GOTO 83
	expression/L2 = . FLOAT, FOLLOW [239] -> SHIFT FLOAT GOTO 84
	expression/L2 = . "(" expression ")", FOLLOW [239] -> SHIFT '(' GOTO 85
	expression/L9 = . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 86
	expression/L1 = . "{" expressionlist "}", FOLLOW [239] -> SHIFT '{' GOTO 103
	expression/L1 = . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 103
	expression/L9 = . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 90
	expression/L9 = . "~" expression, FOLLOW [239] -> SHIFT '~' GOTO 91
	expression/L9 = . "!" expression, FOLLOW [239] -> SHIFT '!' GOTO 92
	expression/L1 = . "new" typespec ":" expression, FOLLOW [239] -> SHIFT "new" GOTO 98
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [239] -> SHIFT "cast" GOTO 99
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [239] -> SHIFT "cast" GOTO 99
	expression/L2 = . "null", FOLLOW [239] -> SHIFT "null" GOTO 100
[160]
	expression/L3 = . expression "=" expression, FOLLOW [239] -> GOTO 267
	expression/L3 = . expression "+=" expression, FOLLOW [239] -> GOTO 267
	expression/L3 = . expression "-=" expression, FOLLOW [239] -> GOTO 267
	expression/L3 = . expression "*=" expression, FOLLOW [239] -> GOTO 267
	expression/L3 = . expression "/=" expression, FOLLOW [239] -> GOTO 267
	expression/L3 = . expression "^=" expression, FOLLOW [239] -> GOTO 267
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 267
	expression/L3 = . expression "%=" expression, FOLLOW [239] -> GOTO 267
	expression/L3 = . expression "&&=" expression, FOLLOW [239] -> GOTO 267
	expression/L3 = . expression "||=" expression, FOLLOW [239] -> GOTO 267
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 267
	expression/L3 = . expression "|=" expression, FOLLOW [239] -> GOTO 267
	expression/L3 = . expression "<<=" expression, FOLLOW [239] -> GOTO 267
	expression/L3 = . expression ">>=" expression, FOLLOW [239] -> GOTO 267
	expression/L4 = . expression "||" expression, FOLLOW [239] -> GOTO 267
	expression/L5 = . expression "&&" expression, FOLLOW [239] -> GOTO 267
	expression/L6 = . expression "|" expression, FOLLOW [239] -> GOTO 267
	expression/L7 = . expression "^" expression, FOLLOW [239] -> GOTO 267
	expression/L7 = . expression "&" expression, FOLLOW [239] -> GOTO 267
	expression/L8 = . expression "==" expression, FOLLOW [239] -> GOTO 267
	expression/L8 = . expression "!=" expression, FOLLOW [239] -> GOTO 267
	expression/L8 = . expression "<=" expression, FOLLOW [239] -> GOTO 267
	expression/L8 = expression "<=" . expression, FOLLOW [239] -> GOTO 267
	expression/L8 = . expression "<" expression, FOLLOW [239] -> GOTO 267
	expression/L8 = . expression ">=" expression, FOLLOW [239] -> GOTO 267
	expression/L8 = . expression ">" expression, FOLLOW [239] -> GOTO 267
	expression/L9 = . expression "+" expression, FOLLOW [239] -> GOTO 267
	expression/L9 = . expression "-" expression, FOLLOW [239] -> GOTO 267
	expression/L10 = . expression "*" expression, FOLLOW [239] -> GOTO 267
	expression/L10 = . expression "/" expression, FOLLOW [239] -> GOTO 267
	expression/L10 = . expression "%" expression, FOLLOW [239] -> GOTO 267
	expression/L11 = . expression "<<" expression, FOLLOW [239] -> GOTO 267
	expression/L11 = . expression ">>" expression, FOLLOW [239] -> GOTO 267
	expression/L12 = . expression "." IDENT, FOLLOW [239] -> GOTO 267
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [239] -> GOTO 267
	expression/L13 = . expression "(" ")", FOLLOW [239] -> GOTO 267
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [239] -> GOTO 267
	iexpression = . expression indirection IDENT, FOLLOW [239] -> GOTO 267
	expression/L12 = . iexpression, FOLLOW [239] -> GOTO 77
	expression/L2 = . BOOLEAN, FOLLOW [239] -> SHIFT BOOLEAN GOTO 78
	expression/L2 = . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 79
	expression/L2 = . DQSTRING, FOLLOW [239] -> SHIFT DQSTRING GOTO 80
	expression/L2 = . SQSTRING, FOLLOW [239] -> SHIFT SQSTRING GOTO 81
	expression/L2 = . CARDINAL, FOLLOW [239] -> SHIFT CARDINAL GOTO 82
	expression/L2 = . INTEGER, FOLLOW [239] -> SHIFT INTEGER GOTO 83
	expression/L2 = . FLOAT, FOLLOW [239] -> SHIFT FLOAT GOTO 84
	expression/L2 = . "(" expression ")", FOLLOW [239] -> SHIFT '(' GOTO 85
	expression/L9 = . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 86
	expression/L1 = . "{" expressionlist "}", FOLLOW [239] -> SHIFT '{' GOTO 103
	expression/L1 = . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 103
	expression/L9 = . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 90
	expression/L9 = . "~" expression, FOLLOW [239] -> SHIFT '~' GOTO 91
	expression/L9 = . "!" expression, FOLLOW [239] -> SHIFT '!' GOTO 92
	expression/L1 = . "new" typespec ":" expression, FOLLOW [239] -> SHIFT "new" GOTO 98
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [239] -> SHIFT "cast" GOTO 99
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [239] -> SHIFT "cast" GOTO 99
	expression/L2 = . "null", FOLLOW [239] -> SHIFT "null" GOTO 100
[161]
	expression/L3 = . expression "=" expression, FOLLOW [239] -> GOTO 268
	expression/L3 = . expression "+=" expression, FOLLOW [239] -> GOTO 268
	expression/L3 = . expression "-=" expression, FOLLOW [239] -> GOTO 268
	expression/L3 = . expression "*=" expression, FOLLOW [239] -> GOTO 268
	expression/L3 = . expression "/=" expression, FOLLOW [239] -> GOTO 268
	expression/L3 = . expression "^=" expression, FOLLOW [239] -> GOTO 268
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 268
	expression/L3 = . expression "%=" expression, FOLLOW [239] -> GOTO 268
	expression/L3 = . expression "&&=" expression, FOLLOW [239] -> GOTO 268
	expression/L3 = . expression "||=" expression, FOLLOW [239] -> GOTO 268
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 268
	expression/L3 = . expression "|=" expression, FOLLOW [239] -> GOTO 268
	expression/L3 = . expression "<<=" expression, FOLLOW [239] -> GOTO 268
	expression/L3 = . expression ">>=" expression, FOLLOW [239] -> GOTO 268
	expression/L4 = . expression "||" expression, FOLLOW [239] -> GOTO 268
	expression/L5 = . expression "&&" expression, FOLLOW [239] -> GOTO 268
	expression/L6 = . expression "|" expression, FOLLOW [239] -> GOTO 268
	expression/L7 = . expression "^" expression, FOLLOW [239] -> GOTO 268
	expression/L7 = . expression "&" expression, FOLLOW [239] -> GOTO 268
	expression/L8 = . expression "==" expression, FOLLOW [239] -> GOTO 268
	expression/L8 = . expression "!=" expression, FOLLOW [239] -> GOTO 268
	expression/L8 = . expression "<=" expression, FOLLOW [239] -> GOTO 268
	expression/L8 = . expression "<" expression, FOLLOW [239] -> GOTO 268
	expression/L8 = . expression ">=" expression, FOLLOW [239] -> GOTO 268
	expression/L8 = . expression ">" expression, FOLLOW [239] -> GOTO 268
	expression/L8 = expression ">" . expression, FOLLOW [239] -> GOTO 268
	expression/L9 = . expression "+" expression, FOLLOW [239] -> GOTO 268
	expression/L9 = . expression "-" expression, FOLLOW [239] -> GOTO 268
	expression/L10 = . expression "*" expression, FOLLOW [239] -> GOTO 268
	expression/L10 = . expression "/" expression, FOLLOW [239] -> GOTO 268
	expression/L10 = . expression "%" expression, FOLLOW [239] -> GOTO 268
	expression/L11 = . expression "<<" expression, FOLLOW [239] -> GOTO 268
	expression/L11 = . expression ">>" expression, FOLLOW [239] -> GOTO 268
	expression/L12 = . expression "." IDENT, FOLLOW [239] -> GOTO 268
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [239] -> GOTO 268
	expression/L13 = . expression "(" ")", FOLLOW [239] -> GOTO 268
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [239] -> GOTO 268
	iexpression = . expression indirection IDENT, FOLLOW [239] -> GOTO 268
	expression/L12 = . iexpression, FOLLOW [239] -> GOTO 77
	expression/L2 = . BOOLEAN, FOLLOW [239] -> SHIFT BOOLEAN GOTO 78
	expression/L2 = . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 79
	expression/L2 = . DQSTRING, FOLLOW [239] -> SHIFT DQSTRING GOTO 80
	expression/L2 = . SQSTRING, FOLLOW [239] -> SHIFT SQSTRING GOTO 81
	expression/L2 = . CARDINAL, FOLLOW [239] -> SHIFT CARDINAL GOTO 82
	expression/L2 = . INTEGER, FOLLOW [239] -> SHIFT INTEGER GOTO 83
	expression/L2 = . FLOAT, FOLLOW [239] -> SHIFT FLOAT GOTO 84
	expression/L2 = . "(" expression ")", FOLLOW [239] -> SHIFT '(' GOTO 85
	expression/L9 = . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 86
	expression/L1 = . "{" expressionlist "}", FOLLOW [239] -> SHIFT '{' GOTO 103
	expression/L1 = . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 103
	expression/L9 = . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 90
	expression/L9 = . "~" expression, FOLLOW [239] -> SHIFT '~' GOTO 91
	expression/L9 = . "!" expression, FOLLOW [239] -> SHIFT '!' GOTO 92
	expression/L1 = . "new" typespec ":" expression, FOLLOW [239] -> SHIFT "new" GOTO 98
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [239] -> SHIFT "cast" GOTO 99
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [239] -> SHIFT "cast" GOTO 99
	expression/L2 = . "null", FOLLOW [239] -> SHIFT "null" GOTO 100
[162]
	expression/L3 = . expression "=" expression, FOLLOW [239] -> GOTO 269
	expression/L3 = . expression "+=" expression, FOLLOW [239] -> GOTO 269
	expression/L3 = . expression "-=" expression, FOLLOW [239] -> GOTO 269
	expression/L3 = . expression "*=" expression, FOLLOW [239] -> GOTO 269
	expression/L3 = . expression "/=" expression, FOLLOW [239] -> GOTO 269
	expression/L3 = . expression "^=" expression, FOLLOW [239] -> GOTO 269
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 269
	expression/L3 = . expression "%=" expression, FOLLOW [239] -> GOTO 269
	expression/L3 = . expression "&&=" expression, FOLLOW [239] -> GOTO 269
	expression/L3 = . expression "||=" expression, FOLLOW [239] -> GOTO 269
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 269
	expression/L3 = . expression "|=" expression, FOLLOW [239] -> GOTO 269
	expression/L3 = . expression "<<=" expression, FOLLOW [239] -> GOTO 269
	expression/L3 = . expression ">>=" expression, FOLLOW [239] -> GOTO 269
	expression/L4 = . expression "||" expression, FOLLOW [239] -> GOTO 269
	expression/L5 = . expression "&&" expression, FOLLOW [239] -> GOTO 269
	expression/L6 = . expression "|" expression, FOLLOW [239] -> GOTO 269
	expression/L7 = . expression "^" expression, FOLLOW [239] -> GOTO 269
	expression/L7 = . expression "&" expression, FOLLOW [239] -> GOTO 269
	expression/L8 = . expression "==" expression, FOLLOW [239] -> GOTO 269
	expression/L8 = . expression "!=" expression, FOLLOW [239] -> GOTO 269
	expression/L8 = . expression "<=" expression, FOLLOW [239] -> GOTO 269
	expression/L8 = . expression "<" expression, FOLLOW [239] -> GOTO 269
	expression/L8 = expression "<" . expression, FOLLOW [239] -> GOTO 269
	expression/L8 = . expression ">=" expression, FOLLOW [239] -> GOTO 269
	expression/L8 = . expression ">" expression, FOLLOW [239] -> GOTO 269
	expression/L9 = . expression "+" expression, FOLLOW [239] -> GOTO 269
	expression/L9 = . expression "-" expression, FOLLOW [239] -> GOTO 269
	expression/L10 = . expression "*" expression, FOLLOW [239] -> GOTO 269
	expression/L10 = . expression "/" expression, FOLLOW [239] -> GOTO 269
	expression/L10 = . expression "%" expression, FOLLOW [239] -> GOTO 269
	expression/L11 = . expression "<<" expression, FOLLOW [239] -> GOTO 269
	expression/L11 = . expression ">>" expression, FOLLOW [239] -> GOTO 269
	expression/L12 = . expression "." IDENT, FOLLOW [239] -> GOTO 269
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [239] -> GOTO 269
	expression/L13 = . expression "(" ")", FOLLOW [239] -> GOTO 269
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [239] -> GOTO 269
	iexpression = . expression indirection IDENT, FOLLOW [239] -> GOTO 269
	expression/L12 = . iexpression, FOLLOW [239] -> GOTO 77
	expression/L2 = . BOOLEAN, FOLLOW [239] -> SHIFT BOOLEAN GOTO 78
	expression/L2 = . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 79
	expression/L2 = . DQSTRING, FOLLOW [239] -> SHIFT DQSTRING GOTO 80
	expression/L2 = . SQSTRING, FOLLOW [239] -> SHIFT SQSTRING GOTO 81
	expression/L2 = . CARDINAL, FOLLOW [239] -> SHIFT CARDINAL GOTO 82
	expression/L2 = . INTEGER, FOLLOW [239] -> SHIFT INTEGER GOTO 83
	expression/L2 = . FLOAT, FOLLOW [239] -> SHIFT FLOAT GOTO 84
	expression/L2 = . "(" expression ")", FOLLOW [239] -> SHIFT '(' GOTO 85
	expression/L9 = . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 86
	expression/L1 = . "{" expressionlist "}", FOLLOW [239] -> SHIFT '{' GOTO 103
	expression/L1 = . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 103
	expression/L9 = . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 90
	expression/L9 = . "~" expression, FOLLOW [239] -> SHIFT '~' GOTO 91
	expression/L9 = . "!" expression, FOLLOW [239] -> SHIFT '!' GOTO 92
	expression/L1 = . "new" typespec ":" expression, FOLLOW [239] -> SHIFT "new" GOTO 98
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [239] -> SHIFT "cast" GOTO 99
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [239] -> SHIFT "cast" GOTO 99
	expression/L2 = . "null", FOLLOW [239] -> SHIFT "null" GOTO 100
[163]
	expression/L3 = . expression "=" expression, FOLLOW [239] -> GOTO 270
	expression/L3 = . expression "+=" expression, FOLLOW [239] -> GOTO 270
	expression/L3 = expression "+=" . expression, FOLLOW [239] -> GOTO 270
	expression/L3 = . expression "-=" expression, FOLLOW [239] -> GOTO 270
	expression/L3 = . expression "*=" expression, FOLLOW [239] -> GOTO 270
	expression/L3 = . expression "/=" expression, FOLLOW [239] -> GOTO 270
	expression/L3 = . expression "^=" expression, FOLLOW [239] -> GOTO 270
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 270
	expression/L3 = . expression "%=" expression, FOLLOW [239] -> GOTO 270
	expression/L3 = . expression "&&=" expression, FOLLOW [239] -> GOTO 270
	expression/L3 = . expression "||=" expression, FOLLOW [239] -> GOTO 270
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 270
	expression/L3 = . expression "|=" expression, FOLLOW [239] -> GOTO 270
	expression/L3 = . expression "<<=" expression, FOLLOW [239] -> GOTO 270
	expression/L3 = . expression ">>=" expression, FOLLOW [239] -> GOTO 270
	expression/L4 = . expression "||" expression, FOLLOW [239] -> GOTO 270
	expression/L5 = . expression "&&" expression, FOLLOW [239] -> GOTO 270
	expression/L6 = . expression "|" expression, FOLLOW [239] -> GOTO 270
	expression/L7 = . expression "^" expression, FOLLOW [239] -> GOTO 270
	expression/L7 = . expression "&" expression, FOLLOW [239] -> GOTO 270
	expression/L8 = . expression "==" expression, FOLLOW [239] -> GOTO 270
	expression/L8 = . expression "!=" expression, FOLLOW [239] -> GOTO 270
	expression/L8 = . expression "<=" expression, FOLLOW [239] -> GOTO 270
	expression/L8 = . expression "<" expression, FOLLOW [239] -> GOTO 270
	expression/L8 = . expression ">=" expression, FOLLOW [239] -> GOTO 270
	expression/L8 = . expression ">" expression, FOLLOW [239] -> GOTO 270
	expression/L9 = . expression "+" expression, FOLLOW [239] -> GOTO 270
	expression/L9 = . expression "-" expression, FOLLOW [239] -> GOTO 270
	expression/L10 = . expression "*" expression, FOLLOW [239] -> GOTO 270
	expression/L10 = . expression "/" expression, FOLLOW [239] -> GOTO 270
	expression/L10 = . expression "%" expression, FOLLOW [239] -> GOTO 270
	expression/L11 = . expression "<<" expression, FOLLOW [239] -> GOTO 270
	expression/L11 = . expression ">>" expression, FOLLOW [239] -> GOTO 270
	expression/L12 = . expression "." IDENT, FOLLOW [239] -> GOTO 270
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [239] -> GOTO 270
	expression/L13 = . expression "(" ")", FOLLOW [239] -> GOTO 270
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [239] -> GOTO 270
	iexpression = . expression indirection IDENT, FOLLOW [239] -> GOTO 270
	expression/L12 = . iexpression, FOLLOW [239] -> GOTO 77
	expression/L2 = . BOOLEAN, FOLLOW [239] -> SHIFT BOOLEAN GOTO 78
	expression/L2 = . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 79
	expression/L2 = . DQSTRING, FOLLOW [239] -> SHIFT DQSTRING GOTO 80
	expression/L2 = . SQSTRING, FOLLOW [239] -> SHIFT SQSTRING GOTO 81
	expression/L2 = . CARDINAL, FOLLOW [239] -> SHIFT CARDINAL GOTO 82
	expression/L2 = . INTEGER, FOLLOW [239] -> SHIFT INTEGER GOTO 83
	expression/L2 = . FLOAT, FOLLOW [239] -> SHIFT FLOAT GOTO 84
	expression/L2 = . "(" expression ")", FOLLOW [239] -> SHIFT '(' GOTO 85
	expression/L9 = . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 86
	expression/L1 = . "{" expressionlist "}", FOLLOW [239] -> SHIFT '{' GOTO 103
	expression/L1 = . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 103
	expression/L9 = . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 90
	expression/L9 = . "~" expression, FOLLOW [239] -> SHIFT '~' GOTO 91
	expression/L9 = . "!" expression, FOLLOW [239] -> SHIFT '!' GOTO 92
	expression/L1 = . "new" typespec ":" expression, FOLLOW [239] -> SHIFT "new" GOTO 98
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [239] -> SHIFT "cast" GOTO 99
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [239] -> SHIFT "cast" GOTO 99
	expression/L2 = . "null", FOLLOW [239] -> SHIFT "null" GOTO 100
[164]
	expression/L3 = . expression "=" expression, FOLLOW [239] -> GOTO 271
	expression/L3 = . expression "+=" expression, FOLLOW [239] -> GOTO 271
	expression/L3 = . expression "-=" expression, FOLLOW [239] -> GOTO 271
	expression/L3 = expression "-=" . expression, FOLLOW [239] -> GOTO 271
	expression/L3 = . expression "*=" expression, FOLLOW [239] -> GOTO 271
	expression/L3 = . expression "/=" expression, FOLLOW [239] -> GOTO 271
	expression/L3 = . expression "^=" expression, FOLLOW [239] -> GOTO 271
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 271
	expression/L3 = . expression "%=" expression, FOLLOW [239] -> GOTO 271
	expression/L3 = . expression "&&=" expression, FOLLOW [239] -> GOTO 271
	expression/L3 = . expression "||=" expression, FOLLOW [239] -> GOTO 271
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 271
	expression/L3 = . expression "|=" expression, FOLLOW [239] -> GOTO 271
	expression/L3 = . expression "<<=" expression, FOLLOW [239] -> GOTO 271
	expression/L3 = . expression ">>=" expression, FOLLOW [239] -> GOTO 271
	expression/L4 = . expression "||" expression, FOLLOW [239] -> GOTO 271
	expression/L5 = . expression "&&" expression, FOLLOW [239] -> GOTO 271
	expression/L6 = . expression "|" expression, FOLLOW [239] -> GOTO 271
	expression/L7 = . expression "^" expression, FOLLOW [239] -> GOTO 271
	expression/L7 = . expression "&" expression, FOLLOW [239] -> GOTO 271
	expression/L8 = . expression "==" expression, FOLLOW [239] -> GOTO 271
	expression/L8 = . expression "!=" expression, FOLLOW [239] -> GOTO 271
	expression/L8 = . expression "<=" expression, FOLLOW [239] -> GOTO 271
	expression/L8 = . expression "<" expression, FOLLOW [239] -> GOTO 271
	expression/L8 = . expression ">=" expression, FOLLOW [239] -> GOTO 271
	expression/L8 = . expression ">" expression, FOLLOW [239] -> GOTO 271
	expression/L9 = . expression "+" expression, FOLLOW [239] -> GOTO 271
	expression/L9 = . expression "-" expression, FOLLOW [239] -> GOTO 271
	expression/L10 = . expression "*" expression, FOLLOW [239] -> GOTO 271
	expression/L10 = . expression "/" expression, FOLLOW [239] -> GOTO 271
	expression/L10 = . expression "%" expression, FOLLOW [239] -> GOTO 271
	expression/L11 = . expression "<<" expression, FOLLOW [239] -> GOTO 271
	expression/L11 = . expression ">>" expression, FOLLOW [239] -> GOTO 271
	expression/L12 = . expression "." IDENT, FOLLOW [239] -> GOTO 271
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [239] -> GOTO 271
	expression/L13 = . expression "(" ")", FOLLOW [239] -> GOTO 271
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [239] -> GOTO 271
	iexpression = . expression indirection IDENT, FOLLOW [239] -> GOTO 271
	expression/L12 = . iexpression, FOLLOW [239] -> GOTO 77
	expression/L2 = . BOOLEAN, FOLLOW [239] -> SHIFT BOOLEAN GOTO 78
	expression/L2 = . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 79
	expression/L2 = . DQSTRING, FOLLOW [239] -> SHIFT DQSTRING GOTO 80
	expression/L2 = . SQSTRING, FOLLOW [239] -> SHIFT SQSTRING GOTO 81
	expression/L2 = . CARDINAL, FOLLOW [239] -> SHIFT CARDINAL GOTO 82
	expression/L2 = . INTEGER, FOLLOW [239] -> SHIFT INTEGER GOTO 83
	expression/L2 = . FLOAT, FOLLOW [239] -> SHIFT FLOAT GOTO 84
	expression/L2 = . "(" expression ")", FOLLOW [239] -> SHIFT '(' GOTO 85
	expression/L9 = . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 86
	expression/L1 = . "{" expressionlist "}", FOLLOW [239] -> SHIFT '{' GOTO 103
	expression/L1 = . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 103
	expression/L9 = . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 90
	expression/L9 = . "~" expression, FOLLOW [239] -> SHIFT '~' GOTO 91
	expression/L9 = . "!" expression, FOLLOW [239] -> SHIFT '!' GOTO 92
	expression/L1 = . "new" typespec ":" expression, FOLLOW [239] -> SHIFT "new" GOTO 98
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [239] -> SHIFT "cast" GOTO 99
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [239] -> SHIFT "cast" GOTO 99
	expression/L2 = . "null", FOLLOW [239] -> SHIFT "null" GOTO 100
[165]
	expression/L3 = . expression "=" expression, FOLLOW [239] -> GOTO 272
	expression/L3 = . expression "+=" expression, FOLLOW [239] -> GOTO 272
	expression/L3 = . expression "-=" expression, FOLLOW [239] -> GOTO 272
	expression/L3 = . expression "*=" expression, FOLLOW [239] -> GOTO 272
	expression/L3 = expression "*=" . expression, FOLLOW [239] -> GOTO 272
	expression/L3 = . expression "/=" expression, FOLLOW [239] -> GOTO 272
	expression/L3 = . expression "^=" expression, FOLLOW [239] -> GOTO 272
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 272
	expression/L3 = . expression "%=" expression, FOLLOW [239] -> GOTO 272
	expression/L3 = . expression "&&=" expression, FOLLOW [239] -> GOTO 272
	expression/L3 = . expression "||=" expression, FOLLOW [239] -> GOTO 272
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 272
	expression/L3 = . expression "|=" expression, FOLLOW [239] -> GOTO 272
	expression/L3 = . expression "<<=" expression, FOLLOW [239] -> GOTO 272
	expression/L3 = . expression ">>=" expression, FOLLOW [239] -> GOTO 272
	expression/L4 = . expression "||" expression, FOLLOW [239] -> GOTO 272
	expression/L5 = . expression "&&" expression, FOLLOW [239] -> GOTO 272
	expression/L6 = . expression "|" expression, FOLLOW [239] -> GOTO 272
	expression/L7 = . expression "^" expression, FOLLOW [239] -> GOTO 272
	expression/L7 = . expression "&" expression, FOLLOW [239] -> GOTO 272
	expression/L8 = . expression "==" expression, FOLLOW [239] -> GOTO 272
	expression/L8 = . expression "!=" expression, FOLLOW [239] -> GOTO 272
	expression/L8 = . expression "<=" expression, FOLLOW [239] -> GOTO 272
	expression/L8 = . expression "<" expression, FOLLOW [239] -> GOTO 272
	expression/L8 = . expression ">=" expression, FOLLOW [239] -> GOTO 272
	expression/L8 = . expression ">" expression, FOLLOW [239] -> GOTO 272
	expression/L9 = . expression "+" expression, FOLLOW [239] -> GOTO 272
	expression/L9 = . expression "-" expression, FOLLOW [239] -> GOTO 272
	expression/L10 = . expression "*" expression, FOLLOW [239] -> GOTO 272
	expression/L10 = . expression "/" expression, FOLLOW [239] -> GOTO 272
	expression/L10 = . expression "%" expression, FOLLOW [239] -> GOTO 272
	expression/L11 = . expression "<<" expression, FOLLOW [239] -> GOTO 272
	expression/L11 = . expression ">>" expression, FOLLOW [239] -> GOTO 272
	expression/L12 = . expression "." IDENT, FOLLOW [239] -> GOTO 272
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [239] -> GOTO 272
	expression/L13 = . expression "(" ")", FOLLOW [239] -> GOTO 272
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [239] -> GOTO 272
	iexpression = . expression indirection IDENT, FOLLOW [239] -> GOTO 272
	expression/L12 = . iexpression, FOLLOW [239] -> GOTO 77
	expression/L2 = . BOOLEAN, FOLLOW [239] -> SHIFT BOOLEAN GOTO 78
	expression/L2 = . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 79
	expression/L2 = . DQSTRING, FOLLOW [239] -> SHIFT DQSTRING GOTO 80
	expression/L2 = . SQSTRING, FOLLOW [239] -> SHIFT SQSTRING GOTO 81
	expression/L2 = . CARDINAL, FOLLOW [239] -> SHIFT CARDINAL GOTO 82
	expression/L2 = . INTEGER, FOLLOW [239] -> SHIFT INTEGER GOTO 83
	expression/L2 = . FLOAT, FOLLOW [239] -> SHIFT FLOAT GOTO 84
	expression/L2 = . "(" expression ")", FOLLOW [239] -> SHIFT '(' GOTO 85
	expression/L9 = . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 86
	expression/L1 = . "{" expressionlist "}", FOLLOW [239] -> SHIFT '{' GOTO 103
	expression/L1 = . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 103
	expression/L9 = . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 90
	expression/L9 = . "~" expression, FOLLOW [239] -> SHIFT '~' GOTO 91
	expression/L9 = . "!" expression, FOLLOW [239] -> SHIFT '!' GOTO 92
	expression/L1 = . "new" typespec ":" expression, FOLLOW [239] -> SHIFT "new" GOTO 98
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [239] -> SHIFT "cast" GOTO 99
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [239] -> SHIFT "cast" GOTO 99
	expression/L2 = . "null", FOLLOW [239] -> SHIFT "null" GOTO 100
[166]
	expression/L3 = . expression "=" expression, FOLLOW [239] -> GOTO 273
	expression/L3 = . expression "+=" expression, FOLLOW [239] -> GOTO 273
	expression/L3 = . expression "-=" expression, FOLLOW [239] -> GOTO 273
	expression/L3 = . expression "*=" expression, FOLLOW [239] -> GOTO 273
	expression/L3 = . expression "/=" expression, FOLLOW [239] -> GOTO 273
	expression/L3 = expression "/=" . expression, FOLLOW [239] -> GOTO 273
	expression/L3 = . expression "^=" expression, FOLLOW [239] -> GOTO 273
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 273
	expression/L3 = . expression "%=" expression, FOLLOW [239] -> GOTO 273
	expression/L3 = . expression "&&=" expression, FOLLOW [239] -> GOTO 273
	expression/L3 = . expression "||=" expression, FOLLOW [239] -> GOTO 273
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 273
	expression/L3 = . expression "|=" expression, FOLLOW [239] -> GOTO 273
	expression/L3 = . expression "<<=" expression, FOLLOW [239] -> GOTO 273
	expression/L3 = . expression ">>=" expression, FOLLOW [239] -> GOTO 273
	expression/L4 = . expression "||" expression, FOLLOW [239] -> GOTO 273
	expression/L5 = . expression "&&" expression, FOLLOW [239] -> GOTO 273
	expression/L6 = . expression "|" expression, FOLLOW [239] -> GOTO 273
	expression/L7 = . expression "^" expression, FOLLOW [239] -> GOTO 273
	expression/L7 = . expression "&" expression, FOLLOW [239] -> GOTO 273
	expression/L8 = . expression "==" expression, FOLLOW [239] -> GOTO 273
	expression/L8 = . expression "!=" expression, FOLLOW [239] -> GOTO 273
	expression/L8 = . expression "<=" expression, FOLLOW [239] -> GOTO 273
	expression/L8 = . expression "<" expression, FOLLOW [239] -> GOTO 273
	expression/L8 = . expression ">=" expression, FOLLOW [239] -> GOTO 273
	expression/L8 = . expression ">" expression, FOLLOW [239] -> GOTO 273
	expression/L9 = . expression "+" expression, FOLLOW [239] -> GOTO 273
	expression/L9 = . expression "-" expression, FOLLOW [239] -> GOTO 273
	expression/L10 = . expression "*" expression, FOLLOW [239] -> GOTO 273
	expression/L10 = . expression "/" expression, FOLLOW [239] -> GOTO 273
	expression/L10 = . expression "%" expression, FOLLOW [239] -> GOTO 273
	expression/L11 = . expression "<<" expression, FOLLOW [239] -> GOTO 273
	expression/L11 = . expression ">>" expression, FOLLOW [239] -> GOTO 273
	expression/L12 = . expression "." IDENT, FOLLOW [239] -> GOTO 273
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [239] -> GOTO 273
	expression/L13 = . expression "(" ")", FOLLOW [239] -> GOTO 273
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [239] -> GOTO 273
	iexpression = . expression indirection IDENT, FOLLOW [239] -> GOTO 273
	expression/L12 = . iexpression, FOLLOW [239] -> GOTO 77
	expression/L2 = . BOOLEAN, FOLLOW [239] -> SHIFT BOOLEAN GOTO 78
	expression/L2 = . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 79
	expression/L2 = . DQSTRING, FOLLOW [239] -> SHIFT DQSTRING GOTO 80
	expression/L2 = . SQSTRING, FOLLOW [239] -> SHIFT SQSTRING GOTO 81
	expression/L2 = . CARDINAL, FOLLOW [239] -> SHIFT CARDINAL GOTO 82
	expression/L2 = . INTEGER, FOLLOW [239] -> SHIFT INTEGER GOTO 83
	expression/L2 = . FLOAT, FOLLOW [239] -> SHIFT FLOAT GOTO 84
	expression/L2 = . "(" expression ")", FOLLOW [239] -> SHIFT '(' GOTO 85
	expression/L9 = . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 86
	expression/L1 = . "{" expressionlist "}", FOLLOW [239] -> SHIFT '{' GOTO 103
	expression/L1 = . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 103
	expression/L9 = . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 90
	expression/L9 = . "~" expression, FOLLOW [239] -> SHIFT '~' GOTO 91
	expression/L9 = . "!" expression, FOLLOW [239] -> SHIFT '!' GOTO 92
	expression/L1 = . "new" typespec ":" expression, FOLLOW [239] -> SHIFT "new" GOTO 98
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [239] -> SHIFT "cast" GOTO 99
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [239] -> SHIFT "cast" GOTO 99
	expression/L2 = . "null", FOLLOW [239] -> SHIFT "null" GOTO 100
[167]
	expression/L3 = . expression "=" expression, FOLLOW [239] -> GOTO 274
	expression/L3 = . expression "+=" expression, FOLLOW [239] -> GOTO 274
	expression/L3 = . expression "-=" expression, FOLLOW [239] -> GOTO 274
	expression/L3 = . expression "*=" expression, FOLLOW [239] -> GOTO 274
	expression/L3 = . expression "/=" expression, FOLLOW [239] -> GOTO 274
	expression/L3 = . expression "^=" expression, FOLLOW [239] -> GOTO 274
	expression/L3 = expression "^=" . expression, FOLLOW [239] -> GOTO 274
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 274
	expression/L3 = . expression "%=" expression, FOLLOW [239] -> GOTO 274
	expression/L3 = . expression "&&=" expression, FOLLOW [239] -> GOTO 274
	expression/L3 = . expression "||=" expression, FOLLOW [239] -> GOTO 274
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 274
	expression/L3 = . expression "|=" expression, FOLLOW [239] -> GOTO 274
	expression/L3 = . expression "<<=" expression, FOLLOW [239] -> GOTO 274
	expression/L3 = . expression ">>=" expression, FOLLOW [239] -> GOTO 274
	expression/L4 = . expression "||" expression, FOLLOW [239] -> GOTO 274
	expression/L5 = . expression "&&" expression, FOLLOW [239] -> GOTO 274
	expression/L6 = . expression "|" expression, FOLLOW [239] -> GOTO 274
	expression/L7 = . expression "^" expression, FOLLOW [239] -> GOTO 274
	expression/L7 = . expression "&" expression, FOLLOW [239] -> GOTO 274
	expression/L8 = . expression "==" expression, FOLLOW [239] -> GOTO 274
	expression/L8 = . expression "!=" expression, FOLLOW [239] -> GOTO 274
	expression/L8 = . expression "<=" expression, FOLLOW [239] -> GOTO 274
	expression/L8 = . expression "<" expression, FOLLOW [239] -> GOTO 274
	expression/L8 = . expression ">=" expression, FOLLOW [239] -> GOTO 274
	expression/L8 = . expression ">" expression, FOLLOW [239] -> GOTO 274
	expression/L9 = . expression "+" expression, FOLLOW [239] -> GOTO 274
	expression/L9 = . expression "-" expression, FOLLOW [239] -> GOTO 274
	expression/L10 = . expression "*" expression, FOLLOW [239] -> GOTO 274
	expression/L10 = . expression "/" expression, FOLLOW [239] -> GOTO 274
	expression/L10 = . expression "%" expression, FOLLOW [239] -> GOTO 274
	expression/L11 = . expression "<<" expression, FOLLOW [239] -> GOTO 274
	expression/L11 = . expression ">>" expression, FOLLOW [239] -> GOTO 274
	expression/L12 = . expression "." IDENT, FOLLOW [239] -> GOTO 274
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [239] -> GOTO 274
	expression/L13 = . expression "(" ")", FOLLOW [239] -> GOTO 274
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [239] -> GOTO 274
	iexpression = . expression indirection IDENT, FOLLOW [239] -> GOTO 274
	expression/L12 = . iexpression, FOLLOW [239] -> GOTO 77
	expression/L2 = . BOOLEAN, FOLLOW [239] -> SHIFT BOOLEAN GOTO 78
	expression/L2 = . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 79
	expression/L2 = . DQSTRING, FOLLOW [239] -> SHIFT DQSTRING GOTO 80
	expression/L2 = . SQSTRING, FOLLOW [239] -> SHIFT SQSTRING GOTO 81
	expression/L2 = . CARDINAL, FOLLOW [239] -> SHIFT CARDINAL GOTO 82
	expression/L2 = . INTEGER, FOLLOW [239] -> SHIFT INTEGER GOTO 83
	expression/L2 = . FLOAT, FOLLOW [239] -> SHIFT FLOAT GOTO 84
	expression/L2 = . "(" expression ")", FOLLOW [239] -> SHIFT '(' GOTO 85
	expression/L9 = . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 86
	expression/L1 = . "{" expressionlist "}", FOLLOW [239] -> SHIFT '{' GOTO 103
	expression/L1 = . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 103
	expression/L9 = . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 90
	expression/L9 = . "~" expression, FOLLOW [239] -> SHIFT '~' GOTO 91
	expression/L9 = . "!" expression, FOLLOW [239] -> SHIFT '!' GOTO 92
	expression/L1 = . "new" typespec ":" expression, FOLLOW [239] -> SHIFT "new" GOTO 98
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [239] -> SHIFT "cast" GOTO 99
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [239] -> SHIFT "cast" GOTO 99
	expression/L2 = . "null", FOLLOW [239] -> SHIFT "null" GOTO 100
[168]
	expression/L3 = . expression "=" expression, FOLLOW [239] -> GOTO 275
	expression/L3 = . expression "+=" expression, FOLLOW [239] -> GOTO 275
	expression/L3 = . expression "-=" expression, FOLLOW [239] -> GOTO 275
	expression/L3 = . expression "*=" expression, FOLLOW [239] -> GOTO 275
	expression/L3 = . expression "/=" expression, FOLLOW [239] -> GOTO 275
	expression/L3 = . expression "^=" expression, FOLLOW [239] -> GOTO 275
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 275
	expression/L3 = expression "&=" . expression, FOLLOW [239] -> GOTO 275
	expression/L3 = . expression "%=" expression, FOLLOW [239] -> GOTO 275
	expression/L3 = . expression "&&=" expression, FOLLOW [239] -> GOTO 275
	expression/L3 = . expression "||=" expression, FOLLOW [239] -> GOTO 275
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 275
	expression/L3 = expression "&=" . expression, FOLLOW [239] -> GOTO 275
	expression/L3 = . expression "|=" expression, FOLLOW [239] -> GOTO 275
	expression/L3 = . expression "<<=" expression, FOLLOW [239] -> GOTO 275
	expression/L3 = . expression ">>=" expression, FOLLOW [239] -> GOTO 275
	expression/L4 = . expression "||" expression, FOLLOW [239] -> GOTO 275
	expression/L5 = . expression "&&" expression, FOLLOW [239] -> GOTO 275
	expression/L6 = . expression "|" expression, FOLLOW [239] -> GOTO 275
	expression/L7 = . expression "^" expression, FOLLOW [239] -> GOTO 275
	expression/L7 = . expression "&" expression, FOLLOW [239] -> GOTO 275
	expression/L8 = . expression "==" expression, FOLLOW [239] -> GOTO 275
	expression/L8 = . expression "!=" expression, FOLLOW [239] -> GOTO 275
	expression/L8 = . expression "<=" expression, FOLLOW [239] -> GOTO 275
	expression/L8 = . expression "<" expression, FOLLOW [239] -> GOTO 275
	expression/L8 = . expression ">=" expression, FOLLOW [239] -> GOTO 275
	expression/L8 = . expression ">" expression, FOLLOW [239] -> GOTO 275
	expression/L9 = . expression "+" expression, FOLLOW [239] -> GOTO 275
	expression/L9 = . expression "-" expression, FOLLOW [239] -> GOTO 275
	expression/L10 = . expression "*" expression, FOLLOW [239] -> GOTO 275
	expression/L10 = . expression "/" expression, FOLLOW [239] -> GOTO 275
	expression/L10 = . expression "%" expression, FOLLOW [239] -> GOTO 275
	expression/L11 = . expression "<<" expression, FOLLOW [239] -> GOTO 275
	expression/L11 = . expression ">>" expression, FOLLOW [239] -> GOTO 275
	expression/L12 = . expression "." IDENT, FOLLOW [239] -> GOTO 275
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [239] -> GOTO 275
	expression/L13 = . expression "(" ")", FOLLOW [239] -> GOTO 275
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [239] -> GOTO 275
	iexpression = . expression indirection IDENT, FOLLOW [239] -> GOTO 275
	expression/L12 = . iexpression, FOLLOW [239] -> GOTO 77
	expression/L2 = . BOOLEAN, FOLLOW [239] -> SHIFT BOOLEAN GOTO 78
	expression/L2 = . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 79
	expression/L2 = . DQSTRING, FOLLOW [239] -> SHIFT DQSTRING GOTO 80
	expression/L2 = . SQSTRING, FOLLOW [239] -> SHIFT SQSTRING GOTO 81
	expression/L2 = . CARDINAL, FOLLOW [239] -> SHIFT CARDINAL GOTO 82
	expression/L2 = . INTEGER, FOLLOW [239] -> SHIFT INTEGER GOTO 83
	expression/L2 = . FLOAT, FOLLOW [239] -> SHIFT FLOAT GOTO 84
	expression/L2 = . "(" expression ")", FOLLOW [239] -> SHIFT '(' GOTO 85
	expression/L9 = . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 86
	expression/L1 = . "{" expressionlist "}", FOLLOW [239] -> SHIFT '{' GOTO 103
	expression/L1 = . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 103
	expression/L9 = . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 90
	expression/L9 = . "~" expression, FOLLOW [239] -> SHIFT '~' GOTO 91
	expression/L9 = . "!" expression, FOLLOW [239] -> SHIFT '!' GOTO 92
	expression/L1 = . "new" typespec ":" expression, FOLLOW [239] -> SHIFT "new" GOTO 98
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [239] -> SHIFT "cast" GOTO 99
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [239] -> SHIFT "cast" GOTO 99
	expression/L2 = . "null", FOLLOW [239] -> SHIFT "null" GOTO 100
[169]
	expression/L3 = . expression "=" expression, FOLLOW [239] -> GOTO 276
	expression/L3 = . expression "+=" expression, FOLLOW [239] -> GOTO 276
	expression/L3 = . expression "-=" expression, FOLLOW [239] -> GOTO 276
	expression/L3 = . expression "*=" expression, FOLLOW [239] -> GOTO 276
	expression/L3 = . expression "/=" expression, FOLLOW [239] -> GOTO 276
	expression/L3 = . expression "^=" expression, FOLLOW [239] -> GOTO 276
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 276
	expression/L3 = . expression "%=" expression, FOLLOW [239] -> GOTO 276
	expression/L3 = expression "%=" . expression, FOLLOW [239] -> GOTO 276
	expression/L3 = . expression "&&=" expression, FOLLOW [239] -> GOTO 276
	expression/L3 = . expression "||=" expression, FOLLOW [239] -> GOTO 276
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 276
	expression/L3 = . expression "|=" expression, FOLLOW [239] -> GOTO 276
	expression/L3 = . expression "<<=" expression, FOLLOW [239] -> GOTO 276
	expression/L3 = . expression ">>=" expression, FOLLOW [239] -> GOTO 276
	expression/L4 = . expression "||" expression, FOLLOW [239] -> GOTO 276
	expression/L5 = . expression "&&" expression, FOLLOW [239] -> GOTO 276
	expression/L6 = . expression "|" expression, FOLLOW [239] -> GOTO 276
	expression/L7 = . expression "^" expression, FOLLOW [239] -> GOTO 276
	expression/L7 = . expression "&" expression, FOLLOW [239] -> GOTO 276
	expression/L8 = . expression "==" expression, FOLLOW [239] -> GOTO 276
	expression/L8 = . expression "!=" expression, FOLLOW [239] -> GOTO 276
	expression/L8 = . expression "<=" expression, FOLLOW [239] -> GOTO 276
	expression/L8 = . expression "<" expression, FOLLOW [239] -> GOTO 276
	expression/L8 = . expression ">=" expression, FOLLOW [239] -> GOTO 276
	expression/L8 = . expression ">" expression, FOLLOW [239] -> GOTO 276
	expression/L9 = . expression "+" expression, FOLLOW [239] -> GOTO 276
	expression/L9 = . expression "-" expression, FOLLOW [239] -> GOTO 276
	expression/L10 = . expression "*" expression, FOLLOW [239] -> GOTO 276
	expression/L10 = . expression "/" expression, FOLLOW [239] -> GOTO 276
	expression/L10 = . expression "%" expression, FOLLOW [239] -> GOTO 276
	expression/L11 = . expression "<<" expression, FOLLOW [239] -> GOTO 276
	expression/L11 = . expression ">>" expression, FOLLOW [239] -> GOTO 276
	expression/L12 = . expression "." IDENT, FOLLOW [239] -> GOTO 276
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [239] -> GOTO 276
	expression/L13 = . expression "(" ")", FOLLOW [239] -> GOTO 276
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [239] -> GOTO 276
	iexpression = . expression indirection IDENT, FOLLOW [239] -> GOTO 276
	expression/L12 = . iexpression, FOLLOW [239] -> GOTO 77
	expression/L2 = . BOOLEAN, FOLLOW [239] -> SHIFT BOOLEAN GOTO 78
	expression/L2 = . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 79
	expression/L2 = . DQSTRING, FOLLOW [239] -> SHIFT DQSTRING GOTO 80
	expression/L2 = . SQSTRING, FOLLOW [239] -> SHIFT SQSTRING GOTO 81
	expression/L2 = . CARDINAL, FOLLOW [239] -> SHIFT CARDINAL GOTO 82
	expression/L2 = . INTEGER, FOLLOW [239] -> SHIFT INTEGER GOTO 83
	expression/L2 = . FLOAT, FOLLOW [239] -> SHIFT FLOAT GOTO 84
	expression/L2 = . "(" expression ")", FOLLOW [239] -> SHIFT '(' GOTO 85
	expression/L9 = . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 86
	expression/L1 = . "{" expressionlist "}", FOLLOW [239] -> SHIFT '{' GOTO 103
	expression/L1 = . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 103
	expression/L9 = . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 90
	expression/L9 = . "~" expression, FOLLOW [239] -> SHIFT '~' GOTO 91
	expression/L9 = . "!" expression, FOLLOW [239] -> SHIFT '!' GOTO 92
	expression/L1 = . "new" typespec ":" expression, FOLLOW [239] -> SHIFT "new" GOTO 98
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [239] -> SHIFT "cast" GOTO 99
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [239] -> SHIFT "cast" GOTO 99
	expression/L2 = . "null", FOLLOW [239] -> SHIFT "null" GOTO 100
[170]
	expression/L3 = . expression "=" expression, FOLLOW [239] -> GOTO 277
	expression/L3 = . expression "+=" expression, FOLLOW [239] -> GOTO 277
	expression/L3 = . expression "-=" expression, FOLLOW [239] -> GOTO 277
	expression/L3 = . expression "*=" expression, FOLLOW [239] -> GOTO 277
	expression/L3 = . expression "/=" expression, FOLLOW [239] -> GOTO 277
	expression/L3 = . expression "^=" expression, FOLLOW [239] -> GOTO 277
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 277
	expression/L3 = . expression "%=" expression, FOLLOW [239] -> GOTO 277
	expression/L3 = . expression "&&=" expression, FOLLOW [239] -> GOTO 277
	expression/L3 = expression "&&=" . expression, FOLLOW [239] -> GOTO 277
	expression/L3 = . expression "||=" expression, FOLLOW [239] -> GOTO 277
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 277
	expression/L3 = . expression "|=" expression, FOLLOW [239] -> GOTO 277
	expression/L3 = . expression "<<=" expression, FOLLOW [239] -> GOTO 277
	expression/L3 = . expression ">>=" expression, FOLLOW [239] -> GOTO 277
	expression/L4 = . expression "||" expression, FOLLOW [239] -> GOTO 277
	expression/L5 = . expression "&&" expression, FOLLOW [239] -> GOTO 277
	expression/L6 = . expression "|" expression, FOLLOW [239] -> GOTO 277
	expression/L7 = . expression "^" expression, FOLLOW [239] -> GOTO 277
	expression/L7 = . expression "&" expression, FOLLOW [239] -> GOTO 277
	expression/L8 = . expression "==" expression, FOLLOW [239] -> GOTO 277
	expression/L8 = . expression "!=" expression, FOLLOW [239] -> GOTO 277
	expression/L8 = . expression "<=" expression, FOLLOW [239] -> GOTO 277
	expression/L8 = . expression "<" expression, FOLLOW [239] -> GOTO 277
	expression/L8 = . expression ">=" expression, FOLLOW [239] -> GOTO 277
	expression/L8 = . expression ">" expression, FOLLOW [239] -> GOTO 277
	expression/L9 = . expression "+" expression, FOLLOW [239] -> GOTO 277
	expression/L9 = . expression "-" expression, FOLLOW [239] -> GOTO 277
	expression/L10 = . expression "*" expression, FOLLOW [239] -> GOTO 277
	expression/L10 = . expression "/" expression, FOLLOW [239] -> GOTO 277
	expression/L10 = . expression "%" expression, FOLLOW [239] -> GOTO 277
	expression/L11 = . expression "<<" expression, FOLLOW [239] -> GOTO 277
	expression/L11 = . expression ">>" expression, FOLLOW [239] -> GOTO 277
	expression/L12 = . expression "." IDENT, FOLLOW [239] -> GOTO 277
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [239] -> GOTO 277
	expression/L13 = . expression "(" ")", FOLLOW [239] -> GOTO 277
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [239] -> GOTO 277
	iexpression = . expression indirection IDENT, FOLLOW [239] -> GOTO 277
	expression/L12 = . iexpression, FOLLOW [239] -> GOTO 77
	expression/L2 = . BOOLEAN, FOLLOW [239] -> SHIFT BOOLEAN GOTO 78
	expression/L2 = . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 79
	expression/L2 = . DQSTRING, FOLLOW [239] -> SHIFT DQSTRING GOTO 80
	expression/L2 = . SQSTRING, FOLLOW [239] -> SHIFT SQSTRING GOTO 81
	expression/L2 = . CARDINAL, FOLLOW [239] -> SHIFT CARDINAL GOTO 82
	expression/L2 = . INTEGER, FOLLOW [239] -> SHIFT INTEGER GOTO 83
	expression/L2 = . FLOAT, FOLLOW [239] -> SHIFT FLOAT GOTO 84
	expression/L2 = . "(" expression ")", FOLLOW [239] -> SHIFT '(' GOTO 85
	expression/L9 = . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 86
	expression/L1 = . "{" expressionlist "}", FOLLOW [239] -> SHIFT '{' GOTO 103
	expression/L1 = . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 103
	expression/L9 = . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 90
	expression/L9 = . "~" expression, FOLLOW [239] -> SHIFT '~' GOTO 91
	expression/L9 = . "!" expression, FOLLOW [239] -> SHIFT '!' GOTO 92
	expression/L1 = . "new" typespec ":" expression, FOLLOW [239] -> SHIFT "new" GOTO 98
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [239] -> SHIFT "cast" GOTO 99
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [239] -> SHIFT "cast" GOTO 99
	expression/L2 = . "null", FOLLOW [239] -> SHIFT "null" GOTO 100
[171]
	expression/L3 = . expression "=" expression, FOLLOW [239] -> GOTO 278
	expression/L3 = . expression "+=" expression, FOLLOW [239] -> GOTO 278
	expression/L3 = . expression "-=" expression, FOLLOW [239] -> GOTO 278
	expression/L3 = . expression "*=" expression, FOLLOW [239] -> GOTO 278
	expression/L3 = . expression "/=" expression, FOLLOW [239] -> GOTO 278
	expression/L3 = . expression "^=" expression, FOLLOW [239] -> GOTO 278
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 278
	expression/L3 = . expression "%=" expression, FOLLOW [239] -> GOTO 278
	expression/L3 = . expression "&&=" expression, FOLLOW [239] -> GOTO 278
	expression/L3 = . expression "||=" expression, FOLLOW [239] -> GOTO 278
	expression/L3 = expression "||=" . expression, FOLLOW [239] -> GOTO 278
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 278
	expression/L3 = . expression "|=" expression, FOLLOW [239] -> GOTO 278
	expression/L3 = . expression "<<=" expression, FOLLOW [239] -> GOTO 278
	expression/L3 = . expression ">>=" expression, FOLLOW [239] -> GOTO 278
	expression/L4 = . expression "||" expression, FOLLOW [239] -> GOTO 278
	expression/L5 = . expression "&&" expression, FOLLOW [239] -> GOTO 278
	expression/L6 = . expression "|" expression, FOLLOW [239] -> GOTO 278
	expression/L7 = . expression "^" expression, FOLLOW [239] -> GOTO 278
	expression/L7 = . expression "&" expression, FOLLOW [239] -> GOTO 278
	expression/L8 = . expression "==" expression, FOLLOW [239] -> GOTO 278
	expression/L8 = . expression "!=" expression, FOLLOW [239] -> GOTO 278
	expression/L8 = . expression "<=" expression, FOLLOW [239] -> GOTO 278
	expression/L8 = . expression "<" expression, FOLLOW [239] -> GOTO 278
	expression/L8 = . expression ">=" expression, FOLLOW [239] -> GOTO 278
	expression/L8 = . expression ">" expression, FOLLOW [239] -> GOTO 278
	expression/L9 = . expression "+" expression, FOLLOW [239] -> GOTO 278
	expression/L9 = . expression "-" expression, FOLLOW [239] -> GOTO 278
	expression/L10 = . expression "*" expression, FOLLOW [239] -> GOTO 278
	expression/L10 = . expression "/" expression, FOLLOW [239] -> GOTO 278
	expression/L10 = . expression "%" expression, FOLLOW [239] -> GOTO 278
	expression/L11 = . expression "<<" expression, FOLLOW [239] -> GOTO 278
	expression/L11 = . expression ">>" expression, FOLLOW [239] -> GOTO 278
	expression/L12 = . expression "." IDENT, FOLLOW [239] -> GOTO 278
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [239] -> GOTO 278
	expression/L13 = . expression "(" ")", FOLLOW [239] -> GOTO 278
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [239] -> GOTO 278
	iexpression = . expression indirection IDENT, FOLLOW [239] -> GOTO 278
	expression/L12 = . iexpression, FOLLOW [239] -> GOTO 77
	expression/L2 = . BOOLEAN, FOLLOW [239] -> SHIFT BOOLEAN GOTO 78
	expression/L2 = . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 79
	expression/L2 = . DQSTRING, FOLLOW [239] -> SHIFT DQSTRING GOTO 80
	expression/L2 = . SQSTRING, FOLLOW [239] -> SHIFT SQSTRING GOTO 81
	expression/L2 = . CARDINAL, FOLLOW [239] -> SHIFT CARDINAL GOTO 82
	expression/L2 = . INTEGER, FOLLOW [239] -> SHIFT INTEGER GOTO 83
	expression/L2 = . FLOAT, FOLLOW [239] -> SHIFT FLOAT GOTO 84
	expression/L2 = . "(" expression ")", FOLLOW [239] -> SHIFT '(' GOTO 85
	expression/L9 = . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 86
	expression/L1 = . "{" expressionlist "}", FOLLOW [239] -> SHIFT '{' GOTO 103
	expression/L1 = . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 103
	expression/L9 = . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 90
	expression/L9 = . "~" expression, FOLLOW [239] -> SHIFT '~' GOTO 91
	expression/L9 = . "!" expression, FOLLOW [239] -> SHIFT '!' GOTO 92
	expression/L1 = . "new" typespec ":" expression, FOLLOW [239] -> SHIFT "new" GOTO 98
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [239] -> SHIFT "cast" GOTO 99
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [239] -> SHIFT "cast" GOTO 99
	expression/L2 = . "null", FOLLOW [239] -> SHIFT "null" GOTO 100
[172]
	expression/L3 = . expression "=" expression, FOLLOW [239] -> GOTO 279
	expression/L3 = . expression "+=" expression, FOLLOW [239] -> GOTO 279
	expression/L3 = . expression "-=" expression, FOLLOW [239] -> GOTO 279
	expression/L3 = . expression "*=" expression, FOLLOW [239] -> GOTO 279
	expression/L3 = . expression "/=" expression, FOLLOW [239] -> GOTO 279
	expression/L3 = . expression "^=" expression, FOLLOW [239] -> GOTO 279
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 279
	expression/L3 = . expression "%=" expression, FOLLOW [239] -> GOTO 279
	expression/L3 = . expression "&&=" expression, FOLLOW [239] -> GOTO 279
	expression/L3 = . expression "||=" expression, FOLLOW [239] -> GOTO 279
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 279
	expression/L3 = . expression "|=" expression, FOLLOW [239] -> GOTO 279
	expression/L3 = expression "|=" . expression, FOLLOW [239] -> GOTO 279
	expression/L3 = . expression "<<=" expression, FOLLOW [239] -> GOTO 279
	expression/L3 = . expression ">>=" expression, FOLLOW [239] -> GOTO 279
	expression/L4 = . expression "||" expression, FOLLOW [239] -> GOTO 279
	expression/L5 = . expression "&&" expression, FOLLOW [239] -> GOTO 279
	expression/L6 = . expression "|" expression, FOLLOW [239] -> GOTO 279
	expression/L7 = . expression "^" expression, FOLLOW [239] -> GOTO 279
	expression/L7 = . expression "&" expression, FOLLOW [239] -> GOTO 279
	expression/L8 = . expression "==" expression, FOLLOW [239] -> GOTO 279
	expression/L8 = . expression "!=" expression, FOLLOW [239] -> GOTO 279
	expression/L8 = . expression "<=" expression, FOLLOW [239] -> GOTO 279
	expression/L8 = . expression "<" expression, FOLLOW [239] -> GOTO 279
	expression/L8 = . expression ">=" expression, FOLLOW [239] -> GOTO 279
	expression/L8 = . expression ">" expression, FOLLOW [239] -> GOTO 279
	expression/L9 = . expression "+" expression, FOLLOW [239] -> GOTO 279
	expression/L9 = . expression "-" expression, FOLLOW [239] -> GOTO 279
	expression/L10 = . expression "*" expression, FOLLOW [239] -> GOTO 279
	expression/L10 = . expression "/" expression, FOLLOW [239] -> GOTO 279
	expression/L10 = . expression "%" expression, FOLLOW [239] -> GOTO 279
	expression/L11 = . expression "<<" expression, FOLLOW [239] -> GOTO 279
	expression/L11 = . expression ">>" expression, FOLLOW [239] -> GOTO 279
	expression/L12 = . expression "." IDENT, FOLLOW [239] -> GOTO 279
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [239] -> GOTO 279
	expression/L13 = . expression "(" ")", FOLLOW [239] -> GOTO 279
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [239] -> GOTO 279
	iexpression = . expression indirection IDENT, FOLLOW [239] -> GOTO 279
	expression/L12 = . iexpression, FOLLOW [239] -> GOTO 77
	expression/L2 = . BOOLEAN, FOLLOW [239] -> SHIFT BOOLEAN GOTO 78
	expression/L2 = . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 79
	expression/L2 = . DQSTRING, FOLLOW [239] -> SHIFT DQSTRING GOTO 80
	expression/L2 = . SQSTRING, FOLLOW [239] -> SHIFT SQSTRING GOTO 81
	expression/L2 = . CARDINAL, FOLLOW [239] -> SHIFT CARDINAL GOTO 82
	expression/L2 = . INTEGER, FOLLOW [239] -> SHIFT INTEGER GOTO 83
	expression/L2 = . FLOAT, FOLLOW [239] -> SHIFT FLOAT GOTO 84
	expression/L2 = . "(" expression ")", FOLLOW [239] -> SHIFT '(' GOTO 85
	expression/L9 = . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 86
	expression/L1 = . "{" expressionlist "}", FOLLOW [239] -> SHIFT '{' GOTO 103
	expression/L1 = . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 103
	expression/L9 = . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 90
	expression/L9 = . "~" expression, FOLLOW [239] -> SHIFT '~' GOTO 91
	expression/L9 = . "!" expression, FOLLOW [239] -> SHIFT '!' GOTO 92
	expression/L1 = . "new" typespec ":" expression, FOLLOW [239] -> SHIFT "new" GOTO 98
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [239] -> SHIFT "cast" GOTO 99
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [239] -> SHIFT "cast" GOTO 99
	expression/L2 = . "null", FOLLOW [239] -> SHIFT "null" GOTO 100
[173]
	expression/L3 = . expression "=" expression, FOLLOW [239] -> GOTO 280
	expression/L3 = . expression "+=" expression, FOLLOW [239] -> GOTO 280
	expression/L3 = . expression "-=" expression, FOLLOW [239] -> GOTO 280
	expression/L3 = . expression "*=" expression, FOLLOW [239] -> GOTO 280
	expression/L3 = . expression "/=" expression, FOLLOW [239] -> GOTO 280
	expression/L3 = . expression "^=" expression, FOLLOW [239] -> GOTO 280
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 280
	expression/L3 = . expression "%=" expression, FOLLOW [239] -> GOTO 280
	expression/L3 = . expression "&&=" expression, FOLLOW [239] -> GOTO 280
	expression/L3 = . expression "||=" expression, FOLLOW [239] -> GOTO 280
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 280
	expression/L3 = . expression "|=" expression, FOLLOW [239] -> GOTO 280
	expression/L3 = . expression "<<=" expression, FOLLOW [239] -> GOTO 280
	expression/L3 = expression "<<=" . expression, FOLLOW [239] -> GOTO 280
	expression/L3 = . expression ">>=" expression, FOLLOW [239] -> GOTO 280
	expression/L4 = . expression "||" expression, FOLLOW [239] -> GOTO 280
	expression/L5 = . expression "&&" expression, FOLLOW [239] -> GOTO 280
	expression/L6 = . expression "|" expression, FOLLOW [239] -> GOTO 280
	expression/L7 = . expression "^" expression, FOLLOW [239] -> GOTO 280
	expression/L7 = . expression "&" expression, FOLLOW [239] -> GOTO 280
	expression/L8 = . expression "==" expression, FOLLOW [239] -> GOTO 280
	expression/L8 = . expression "!=" expression, FOLLOW [239] -> GOTO 280
	expression/L8 = . expression "<=" expression, FOLLOW [239] -> GOTO 280
	expression/L8 = . expression "<" expression, FOLLOW [239] -> GOTO 280
	expression/L8 = . expression ">=" expression, FOLLOW [239] -> GOTO 280
	expression/L8 = . expression ">" expression, FOLLOW [239] -> GOTO 280
	expression/L9 = . expression "+" expression, FOLLOW [239] -> GOTO 280
	expression/L9 = . expression "-" expression, FOLLOW [239] -> GOTO 280
	expression/L10 = . expression "*" expression, FOLLOW [239] -> GOTO 280
	expression/L10 = . expression "/" expression, FOLLOW [239] -> GOTO 280
	expression/L10 = . expression "%" expression, FOLLOW [239] -> GOTO 280
	expression/L11 = . expression "<<" expression, FOLLOW [239] -> GOTO 280
	expression/L11 = . expression ">>" expression, FOLLOW [239] -> GOTO 280
	expression/L12 = . expression "." IDENT, FOLLOW [239] -> GOTO 280
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [239] -> GOTO 280
	expression/L13 = . expression "(" ")", FOLLOW [239] -> GOTO 280
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [239] -> GOTO 280
	iexpression = . expression indirection IDENT, FOLLOW [239] -> GOTO 280
	expression/L12 = . iexpression, FOLLOW [239] -> GOTO 77
	expression/L2 = . BOOLEAN, FOLLOW [239] -> SHIFT BOOLEAN GOTO 78
	expression/L2 = . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 79
	expression/L2 = . DQSTRING, FOLLOW [239] -> SHIFT DQSTRING GOTO 80
	expression/L2 = . SQSTRING, FOLLOW [239] -> SHIFT SQSTRING GOTO 81
	expression/L2 = . CARDINAL, FOLLOW [239] -> SHIFT CARDINAL GOTO 82
	expression/L2 = . INTEGER, FOLLOW [239] -> SHIFT INTEGER GOTO 83
	expression/L2 = . FLOAT, FOLLOW [239] -> SHIFT FLOAT GOTO 84
	expression/L2 = . "(" expression ")", FOLLOW [239] -> SHIFT '(' GOTO 85
	expression/L9 = . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 86
	expression/L1 = . "{" expressionlist "}", FOLLOW [239] -> SHIFT '{' GOTO 103
	expression/L1 = . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 103
	expression/L9 = . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 90
	expression/L9 = . "~" expression, FOLLOW [239] -> SHIFT '~' GOTO 91
	expression/L9 = . "!" expression, FOLLOW [239] -> SHIFT '!' GOTO 92
	expression/L1 = . "new" typespec ":" expression, FOLLOW [239] -> SHIFT "new" GOTO 98
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [239] -> SHIFT "cast" GOTO 99
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [239] -> SHIFT "cast" GOTO 99
	expression/L2 = . "null", FOLLOW [239] -> SHIFT "null" GOTO 100
[174]
	expression/L3 = . expression "=" expression, FOLLOW [239] -> GOTO 281
	expression/L3 = . expression "+=" expression, FOLLOW [239] -> GOTO 281
	expression/L3 = . expression "-=" expression, FOLLOW [239] -> GOTO 281
	expression/L3 = . expression "*=" expression, FOLLOW [239] -> GOTO 281
	expression/L3 = . expression "/=" expression, FOLLOW [239] -> GOTO 281
	expression/L3 = . expression "^=" expression, FOLLOW [239] -> GOTO 281
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 281
	expression/L3 = . expression "%=" expression, FOLLOW [239] -> GOTO 281
	expression/L3 = . expression "&&=" expression, FOLLOW [239] -> GOTO 281
	expression/L3 = . expression "||=" expression, FOLLOW [239] -> GOTO 281
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 281
	expression/L3 = . expression "|=" expression, FOLLOW [239] -> GOTO 281
	expression/L3 = . expression "<<=" expression, FOLLOW [239] -> GOTO 281
	expression/L3 = . expression ">>=" expression, FOLLOW [239] -> GOTO 281
	expression/L3 = expression ">>=" . expression, FOLLOW [239] -> GOTO 281
	expression/L4 = . expression "||" expression, FOLLOW [239] -> GOTO 281
	expression/L5 = . expression "&&" expression, FOLLOW [239] -> GOTO 281
	expression/L6 = . expression "|" expression, FOLLOW [239] -> GOTO 281
	expression/L7 = . expression "^" expression, FOLLOW [239] -> GOTO 281
	expression/L7 = . expression "&" expression, FOLLOW [239] -> GOTO 281
	expression/L8 = . expression "==" expression, FOLLOW [239] -> GOTO 281
	expression/L8 = . expression "!=" expression, FOLLOW [239] -> GOTO 281
	expression/L8 = . expression "<=" expression, FOLLOW [239] -> GOTO 281
	expression/L8 = . expression "<" expression, FOLLOW [239] -> GOTO 281
	expression/L8 = . expression ">=" expression, FOLLOW [239] -> GOTO 281
	expression/L8 = . expression ">" expression, FOLLOW [239] -> GOTO 281
	expression/L9 = . expression "+" expression, FOLLOW [239] -> GOTO 281
	expression/L9 = . expression "-" expression, FOLLOW [239] -> GOTO 281
	expression/L10 = . expression "*" expression, FOLLOW [239] -> GOTO 281
	expression/L10 = . expression "/" expression, FOLLOW [239] -> GOTO 281
	expression/L10 = . expression "%" expression, FOLLOW [239] -> GOTO 281
	expression/L11 = . expression "<<" expression, FOLLOW [239] -> GOTO 281
	expression/L11 = . expression ">>" expression, FOLLOW [239] -> GOTO 281
	expression/L12 = . expression "." IDENT, FOLLOW [239] -> GOTO 281
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [239] -> GOTO 281
	expression/L13 = . expression "(" ")", FOLLOW [239] -> GOTO 281
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [239] -> GOTO 281
	iexpression = . expression indirection IDENT, FOLLOW [239] -> GOTO 281
	expression/L12 = . iexpression, FOLLOW [239] -> GOTO 77
	expression/L2 = . BOOLEAN, FOLLOW [239] -> SHIFT BOOLEAN GOTO 78
	expression/L2 = . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 79
	expression/L2 = . DQSTRING, FOLLOW [239] -> SHIFT DQSTRING GOTO 80
	expression/L2 = . SQSTRING, FOLLOW [239] -> SHIFT SQSTRING GOTO 81
	expression/L2 = . CARDINAL, FOLLOW [239] -> SHIFT CARDINAL GOTO 82
	expression/L2 = . INTEGER, FOLLOW [239] -> SHIFT INTEGER GOTO 83
	expression/L2 = . FLOAT, FOLLOW [239] -> SHIFT FLOAT GOTO 84
	expression/L2 = . "(" expression ")", FOLLOW [239] -> SHIFT '(' GOTO 85
	expression/L9 = . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 86
	expression/L1 = . "{" expressionlist "}", FOLLOW [239] -> SHIFT '{' GOTO 103
	expression/L1 = . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 103
	expression/L9 = . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 90
	expression/L9 = . "~" expression, FOLLOW [239] -> SHIFT '~' GOTO 91
	expression/L9 = . "!" expression, FOLLOW [239] -> SHIFT '!' GOTO 92
	expression/L1 = . "new" typespec ":" expression, FOLLOW [239] -> SHIFT "new" GOTO 98
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [239] -> SHIFT "cast" GOTO 99
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [239] -> SHIFT "cast" GOTO 99
	expression/L2 = . "null", FOLLOW [239] -> SHIFT "null" GOTO 100
[175]
	expression/L12 = expression "." . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 282
[176]
	iexpression = expression . indirection IDENT, FOLLOW [239] -> GOTO 139
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [239] -> SHIFT '(' GOTO 140
	expression/L13 = expression . "(" ")", FOLLOW [239] -> SHIFT '(' GOTO 140
	expression/L2 = "(" expression . ")", FOLLOW [239] -> SHIFT ')' GOTO 283
	expression/L7 = expression . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 142
	expression/L7 = expression . "^" expression, FOLLOW [239] -> SHIFT '^' GOTO 143
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 144
	expression/L3 = expression . "=" expression, FOLLOW [239] -> SHIFT '=' GOTO 145
	expression/L9 = expression . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 146
	expression/L9 = expression . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 147
	expression/L10 = expression . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 148
	expression/L10 = expression . "/" expression, FOLLOW [239] -> SHIFT '/' GOTO 149
	expression/L10 = expression . "%" expression, FOLLOW [239] -> SHIFT '%' GOTO 150
	expression/L5 = expression . "&&" expression, FOLLOW [239] -> SHIFT "&&" GOTO 151
	expression/L4 = expression . "||" expression, FOLLOW [239] -> SHIFT "||" GOTO 152
	expression/L6 = expression . "|" expression, FOLLOW [239] -> SHIFT '|' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [239] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [239] -> SHIFT ">>" GOTO 155
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [239] -> SHIFT '[' GOTO 156
	expression/L8 = expression . "==" expression, FOLLOW [239] -> SHIFT "==" GOTO 157
	expression/L8 = expression . "!=" expression, FOLLOW [239] -> SHIFT "!=" GOTO 158
	expression/L8 = expression . ">=" expression, FOLLOW [239] -> SHIFT ">=" GOTO 159
	expression/L8 = expression . "<=" expression, FOLLOW [239] -> SHIFT "<=" GOTO 160
	expression/L8 = expression . ">" expression, FOLLOW [239] -> SHIFT '>' GOTO 161
	expression/L8 = expression . "<" expression, FOLLOW [239] -> SHIFT '<' GOTO 162
	expression/L3 = expression . "+=" expression, FOLLOW [239] -> SHIFT "+=" GOTO 163
	expression/L3 = expression . "-=" expression, FOLLOW [239] -> SHIFT "-=" GOTO 164
	expression/L3 = expression . "*=" expression, FOLLOW [239] -> SHIFT "*=" GOTO 165
	expression/L3 = expression . "/=" expression, FOLLOW [239] -> SHIFT "/=" GOTO 166
	expression/L3 = expression . "^=" expression, FOLLOW [239] -> SHIFT "^=" GOTO 167
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "%=" expression, FOLLOW [239] -> SHIFT "%=" GOTO 169
	expression/L3 = expression . "&&=" expression, FOLLOW [239] -> SHIFT "&&=" GOTO 170
	expression/L3 = expression . "||=" expression, FOLLOW [239] -> SHIFT "||=" GOTO 171
	expression/L3 = expression . "|=" expression, FOLLOW [239] -> SHIFT "|=" GOTO 172
	expression/L3 = expression . "<<=" expression, FOLLOW [239] -> SHIFT "<<=" GOTO 173
	expression/L3 = expression . ">>=" expression, FOLLOW [239] -> SHIFT ">>=" GOTO 174
	expression/L12 = expression . "." IDENT, FOLLOW [239] -> SHIFT '.' GOTO 175
[177]
	iexpression = expression . indirection IDENT, FOLLOW [239] -> GOTO 139
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [239] -> SHIFT '(' GOTO 140
	expression/L13 = expression . "(" ")", FOLLOW [239] -> SHIFT '(' GOTO 140
	expression/L7 = expression . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 142
	expression/L7 = expression . "^" expression, FOLLOW [239] -> SHIFT '^' GOTO 143
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 144
	expression/L3 = expression . "=" expression, FOLLOW [239] -> SHIFT '=' GOTO 145
	expression/L9 = expression . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 146
	expression/L9 = expression . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 147
	expression/L10 = expression . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 148
	expression/L10 = expression . "/" expression, FOLLOW [239] -> SHIFT '/' GOTO 149
	expression/L10 = expression . "%" expression, FOLLOW [239] -> SHIFT '%' GOTO 150
	expression/L5 = expression . "&&" expression, FOLLOW [239] -> SHIFT "&&" GOTO 151
	expression/L4 = expression . "||" expression, FOLLOW [239] -> SHIFT "||" GOTO 152
	expression/L6 = expression . "|" expression, FOLLOW [239] -> SHIFT '|' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [239] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [239] -> SHIFT ">>" GOTO 155
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [239] -> SHIFT '[' GOTO 156
	expression/L8 = expression . "==" expression, FOLLOW [239] -> SHIFT "==" GOTO 157
	expression/L8 = expression . "!=" expression, FOLLOW [239] -> SHIFT "!=" GOTO 158
	expression/L8 = expression . ">=" expression, FOLLOW [239] -> SHIFT ">=" GOTO 159
	expression/L8 = expression . "<=" expression, FOLLOW [239] -> SHIFT "<=" GOTO 160
	expression/L8 = expression . ">" expression, FOLLOW [239] -> SHIFT '>' GOTO 161
	expression/L8 = expression . "<" expression, FOLLOW [239] -> SHIFT '<' GOTO 162
	expression/L3 = expression . "+=" expression, FOLLOW [239] -> SHIFT "+=" GOTO 163
	expression/L3 = expression . "-=" expression, FOLLOW [239] -> SHIFT "-=" GOTO 164
	expression/L3 = expression . "*=" expression, FOLLOW [239] -> SHIFT "*=" GOTO 165
	expression/L3 = expression . "/=" expression, FOLLOW [239] -> SHIFT "/=" GOTO 166
	expression/L3 = expression . "^=" expression, FOLLOW [239] -> SHIFT "^=" GOTO 167
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "%=" expression, FOLLOW [239] -> SHIFT "%=" GOTO 169
	expression/L3 = expression . "&&=" expression, FOLLOW [239] -> SHIFT "&&=" GOTO 170
	expression/L3 = expression . "||=" expression, FOLLOW [239] -> SHIFT "||=" GOTO 171
	expression/L3 = expression . "|=" expression, FOLLOW [239] -> SHIFT "|=" GOTO 172
	expression/L3 = expression . "<<=" expression, FOLLOW [239] -> SHIFT "<<=" GOTO 173
	expression/L3 = expression . ">>=" expression, FOLLOW [239] -> SHIFT ">>=" GOTO 174
	expression/L12 = expression . "." IDENT, FOLLOW [239] -> SHIFT '.' GOTO 175
	expression/L9 = "&" expression . (116), FOLLOW [239] -> REDUCE expression #2 CALL operator "&"
[178]
	statement/L1 = "{" codeblock . "}", FOLLOW [98] -> SHIFT '}' GOTO 284
[179]
	iexpression = expression . indirection IDENT, FOLLOW [179] -> GOTO 139
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [179] -> SHIFT '(' GOTO 140
	expression/L13 = expression . "(" ")", FOLLOW [179] -> SHIFT '(' GOTO 140
	statement/L1 = expression . ";", FOLLOW [98] -> SHIFT ';' GOTO 141
	expressionlist = expression . "," expressionlist, FOLLOW [18] -> SHIFT ',' GOTO 285
	expression/L7 = expression . "&" expression, FOLLOW [179] -> SHIFT '&' GOTO 142
	expression/L7 = expression . "^" expression, FOLLOW [179] -> SHIFT '^' GOTO 143
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 144
	expression/L3 = expression . "=" expression, FOLLOW [179] -> SHIFT '=' GOTO 145
	expression/L9 = expression . "+" expression, FOLLOW [179] -> SHIFT '+' GOTO 146
	expression/L9 = expression . "-" expression, FOLLOW [179] -> SHIFT '-' GOTO 147
	expression/L10 = expression . "*" expression, FOLLOW [179] -> SHIFT '*' GOTO 148
	expression/L10 = expression . "/" expression, FOLLOW [179] -> SHIFT '/' GOTO 149
	expression/L10 = expression . "%" expression, FOLLOW [179] -> SHIFT '%' GOTO 150
	expression/L5 = expression . "&&" expression, FOLLOW [179] -> SHIFT "&&" GOTO 151
	expression/L4 = expression . "||" expression, FOLLOW [179] -> SHIFT "||" GOTO 152
	expression/L6 = expression . "|" expression, FOLLOW [179] -> SHIFT '|' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [179] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [179] -> SHIFT ">>" GOTO 155
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [179] -> SHIFT '[' GOTO 156
	expression/L8 = expression . "==" expression, FOLLOW [179] -> SHIFT "==" GOTO 157
	expression/L8 = expression . "!=" expression, FOLLOW [179] -> SHIFT "!=" GOTO 158
	expression/L8 = expression . ">=" expression, FOLLOW [179] -> SHIFT ">=" GOTO 159
	expression/L8 = expression . "<=" expression, FOLLOW [179] -> SHIFT "<=" GOTO 160
	expression/L8 = expression . ">" expression, FOLLOW [179] -> SHIFT '>' GOTO 161
	expression/L8 = expression . "<" expression, FOLLOW [179] -> SHIFT '<' GOTO 162
	expression/L3 = expression . "+=" expression, FOLLOW [179] -> SHIFT "+=" GOTO 163
	expression/L3 = expression . "-=" expression, FOLLOW [179] -> SHIFT "-=" GOTO 164
	expression/L3 = expression . "*=" expression, FOLLOW [179] -> SHIFT "*=" GOTO 165
	expression/L3 = expression . "/=" expression, FOLLOW [179] -> SHIFT "/=" GOTO 166
	expression/L3 = expression . "^=" expression, FOLLOW [179] -> SHIFT "^=" GOTO 167
	expression/L3 = expression . "&=" expression, FOLLOW [179] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "&=" expression, FOLLOW [179] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "%=" expression, FOLLOW [179] -> SHIFT "%=" GOTO 169
	expression/L3 = expression . "&&=" expression, FOLLOW [179] -> SHIFT "&&=" GOTO 170
	expression/L3 = expression . "||=" expression, FOLLOW [179] -> SHIFT "||=" GOTO 171
	expression/L3 = expression . "|=" expression, FOLLOW [179] -> SHIFT "|=" GOTO 172
	expression/L3 = expression . "<<=" expression, FOLLOW [179] -> SHIFT "<<=" GOTO 173
	expression/L3 = expression . ">>=" expression, FOLLOW [179] -> SHIFT ">>=" GOTO 174
	expression/L12 = expression . "." IDENT, FOLLOW [179] -> SHIFT '.' GOTO 175
	expressionlist = expression ., FOLLOW [18] -> REDUCE expressionlist #1
[180]
	expression/L1 = "{" expressionlist . "}", FOLLOW [239] -> SHIFT '}' GOTO 286
[181]
	expression/L1 = "{" "}" . (88), FOLLOW [239] -> REDUCE expression #2 CALL structure
[182]
	iexpression = expression . indirection IDENT, FOLLOW [239] -> GOTO 139
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [239] -> SHIFT '(' GOTO 140
	expression/L13 = expression . "(" ")", FOLLOW [239] -> SHIFT '(' GOTO 140
	expression/L7 = expression . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 142
	expression/L7 = expression . "^" expression, FOLLOW [239] -> SHIFT '^' GOTO 143
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 144
	expression/L3 = expression . "=" expression, FOLLOW [239] -> SHIFT '=' GOTO 145
	expression/L9 = expression . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 146
	expression/L9 = expression . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 147
	expression/L10 = expression . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 148
	expression/L10 = expression . "/" expression, FOLLOW [239] -> SHIFT '/' GOTO 149
	expression/L10 = expression . "%" expression, FOLLOW [239] -> SHIFT '%' GOTO 150
	expression/L5 = expression . "&&" expression, FOLLOW [239] -> SHIFT "&&" GOTO 151
	expression/L4 = expression . "||" expression, FOLLOW [239] -> SHIFT "||" GOTO 152
	expression/L6 = expression . "|" expression, FOLLOW [239] -> SHIFT '|' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [239] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [239] -> SHIFT ">>" GOTO 155
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [239] -> SHIFT '[' GOTO 156
	expression/L8 = expression . "==" expression, FOLLOW [239] -> SHIFT "==" GOTO 157
	expression/L8 = expression . "!=" expression, FOLLOW [239] -> SHIFT "!=" GOTO 158
	expression/L8 = expression . ">=" expression, FOLLOW [239] -> SHIFT ">=" GOTO 159
	expression/L8 = expression . "<=" expression, FOLLOW [239] -> SHIFT "<=" GOTO 160
	expression/L8 = expression . ">" expression, FOLLOW [239] -> SHIFT '>' GOTO 161
	expression/L8 = expression . "<" expression, FOLLOW [239] -> SHIFT '<' GOTO 162
	expression/L3 = expression . "+=" expression, FOLLOW [239] -> SHIFT "+=" GOTO 163
	expression/L3 = expression . "-=" expression, FOLLOW [239] -> SHIFT "-=" GOTO 164
	expression/L3 = expression . "*=" expression, FOLLOW [239] -> SHIFT "*=" GOTO 165
	expression/L3 = expression . "/=" expression, FOLLOW [239] -> SHIFT "/=" GOTO 166
	expression/L3 = expression . "^=" expression, FOLLOW [239] -> SHIFT "^=" GOTO 167
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "%=" expression, FOLLOW [239] -> SHIFT "%=" GOTO 169
	expression/L3 = expression . "&&=" expression, FOLLOW [239] -> SHIFT "&&=" GOTO 170
	expression/L3 = expression . "||=" expression, FOLLOW [239] -> SHIFT "||=" GOTO 171
	expression/L3 = expression . "|=" expression, FOLLOW [239] -> SHIFT "|=" GOTO 172
	expression/L3 = expression . "<<=" expression, FOLLOW [239] -> SHIFT "<<=" GOTO 173
	expression/L3 = expression . ">>=" expression, FOLLOW [239] -> SHIFT ">>=" GOTO 174
	expression/L12 = expression . "." IDENT, FOLLOW [239] -> SHIFT '.' GOTO 175
	expression/L9 = "+" expression . (123), FOLLOW [239] -> REDUCE expression #2 CALL operator "+"
[183]
	iexpression = expression . indirection IDENT, FOLLOW [239] -> GOTO 139
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [239] -> SHIFT '(' GOTO 140
	expression/L13 = expression . "(" ")", FOLLOW [239] -> SHIFT '(' GOTO 140
	expression/L7 = expression . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 142
	expression/L7 = expression . "^" expression, FOLLOW [239] -> SHIFT '^' GOTO 143
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 144
	expression/L3 = expression . "=" expression, FOLLOW [239] -> SHIFT '=' GOTO 145
	expression/L9 = expression . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 146
	expression/L9 = expression . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 147
	expression/L10 = expression . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 148
	expression/L10 = expression . "/" expression, FOLLOW [239] -> SHIFT '/' GOTO 149
	expression/L10 = expression . "%" expression, FOLLOW [239] -> SHIFT '%' GOTO 150
	expression/L5 = expression . "&&" expression, FOLLOW [239] -> SHIFT "&&" GOTO 151
	expression/L4 = expression . "||" expression, FOLLOW [239] -> SHIFT "||" GOTO 152
	expression/L6 = expression . "|" expression, FOLLOW [239] -> SHIFT '|' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [239] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [239] -> SHIFT ">>" GOTO 155
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [239] -> SHIFT '[' GOTO 156
	expression/L8 = expression . "==" expression, FOLLOW [239] -> SHIFT "==" GOTO 157
	expression/L8 = expression . "!=" expression, FOLLOW [239] -> SHIFT "!=" GOTO 158
	expression/L8 = expression . ">=" expression, FOLLOW [239] -> SHIFT ">=" GOTO 159
	expression/L8 = expression . "<=" expression, FOLLOW [239] -> SHIFT "<=" GOTO 160
	expression/L8 = expression . ">" expression, FOLLOW [239] -> SHIFT '>' GOTO 161
	expression/L8 = expression . "<" expression, FOLLOW [239] -> SHIFT '<' GOTO 162
	expression/L3 = expression . "+=" expression, FOLLOW [239] -> SHIFT "+=" GOTO 163
	expression/L3 = expression . "-=" expression, FOLLOW [239] -> SHIFT "-=" GOTO 164
	expression/L3 = expression . "*=" expression, FOLLOW [239] -> SHIFT "*=" GOTO 165
	expression/L3 = expression . "/=" expression, FOLLOW [239] -> SHIFT "/=" GOTO 166
	expression/L3 = expression . "^=" expression, FOLLOW [239] -> SHIFT "^=" GOTO 167
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "%=" expression, FOLLOW [239] -> SHIFT "%=" GOTO 169
	expression/L3 = expression . "&&=" expression, FOLLOW [239] -> SHIFT "&&=" GOTO 170
	expression/L3 = expression . "||=" expression, FOLLOW [239] -> SHIFT "||=" GOTO 171
	expression/L3 = expression . "|=" expression, FOLLOW [239] -> SHIFT "|=" GOTO 172
	expression/L3 = expression . "<<=" expression, FOLLOW [239] -> SHIFT "<<=" GOTO 173
	expression/L3 = expression . ">>=" expression, FOLLOW [239] -> SHIFT ">>=" GOTO 174
	expression/L12 = expression . "." IDENT, FOLLOW [239] -> SHIFT '.' GOTO 175
	expression/L9 = "-" expression . (124), FOLLOW [239] -> REDUCE expression #2 CALL operator "-"
[184]
	iexpression = expression . indirection IDENT, FOLLOW [239] -> GOTO 139
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [239] -> SHIFT '(' GOTO 140
	expression/L13 = expression . "(" ")", FOLLOW [239] -> SHIFT '(' GOTO 140
	expression/L7 = expression . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 142
	expression/L7 = expression . "^" expression, FOLLOW [239] -> SHIFT '^' GOTO 143
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 144
	expression/L3 = expression . "=" expression, FOLLOW [239] -> SHIFT '=' GOTO 145
	expression/L9 = expression . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 146
	expression/L9 = expression . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 147
	expression/L10 = expression . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 148
	expression/L10 = expression . "/" expression, FOLLOW [239] -> SHIFT '/' GOTO 149
	expression/L10 = expression . "%" expression, FOLLOW [239] -> SHIFT '%' GOTO 150
	expression/L5 = expression . "&&" expression, FOLLOW [239] -> SHIFT "&&" GOTO 151
	expression/L4 = expression . "||" expression, FOLLOW [239] -> SHIFT "||" GOTO 152
	expression/L6 = expression . "|" expression, FOLLOW [239] -> SHIFT '|' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [239] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [239] -> SHIFT ">>" GOTO 155
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [239] -> SHIFT '[' GOTO 156
	expression/L8 = expression . "==" expression, FOLLOW [239] -> SHIFT "==" GOTO 157
	expression/L8 = expression . "!=" expression, FOLLOW [239] -> SHIFT "!=" GOTO 158
	expression/L8 = expression . ">=" expression, FOLLOW [239] -> SHIFT ">=" GOTO 159
	expression/L8 = expression . "<=" expression, FOLLOW [239] -> SHIFT "<=" GOTO 160
	expression/L8 = expression . ">" expression, FOLLOW [239] -> SHIFT '>' GOTO 161
	expression/L8 = expression . "<" expression, FOLLOW [239] -> SHIFT '<' GOTO 162
	expression/L3 = expression . "+=" expression, FOLLOW [239] -> SHIFT "+=" GOTO 163
	expression/L3 = expression . "-=" expression, FOLLOW [239] -> SHIFT "-=" GOTO 164
	expression/L3 = expression . "*=" expression, FOLLOW [239] -> SHIFT "*=" GOTO 165
	expression/L3 = expression . "/=" expression, FOLLOW [239] -> SHIFT "/=" GOTO 166
	expression/L3 = expression . "^=" expression, FOLLOW [239] -> SHIFT "^=" GOTO 167
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "%=" expression, FOLLOW [239] -> SHIFT "%=" GOTO 169
	expression/L3 = expression . "&&=" expression, FOLLOW [239] -> SHIFT "&&=" GOTO 170
	expression/L3 = expression . "||=" expression, FOLLOW [239] -> SHIFT "||=" GOTO 171
	expression/L3 = expression . "|=" expression, FOLLOW [239] -> SHIFT "|=" GOTO 172
	expression/L3 = expression . "<<=" expression, FOLLOW [239] -> SHIFT "<<=" GOTO 173
	expression/L3 = expression . ">>=" expression, FOLLOW [239] -> SHIFT ">>=" GOTO 174
	expression/L12 = expression . "." IDENT, FOLLOW [239] -> SHIFT '.' GOTO 175
	expression/L12 = "*" expression . (133), FOLLOW [239] -> REDUCE expression #2 CALL operator "->"
[185]
	iexpression = expression . indirection IDENT, FOLLOW [239] -> GOTO 139
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [239] -> SHIFT '(' GOTO 140
	expression/L13 = expression . "(" ")", FOLLOW [239] -> SHIFT '(' GOTO 140
	expression/L7 = expression . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 142
	expression/L7 = expression . "^" expression, FOLLOW [239] -> SHIFT '^' GOTO 143
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 144
	expression/L3 = expression . "=" expression, FOLLOW [239] -> SHIFT '=' GOTO 145
	expression/L9 = expression . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 146
	expression/L9 = expression . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 147
	expression/L10 = expression . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 148
	expression/L10 = expression . "/" expression, FOLLOW [239] -> SHIFT '/' GOTO 149
	expression/L10 = expression . "%" expression, FOLLOW [239] -> SHIFT '%' GOTO 150
	expression/L5 = expression . "&&" expression, FOLLOW [239] -> SHIFT "&&" GOTO 151
	expression/L4 = expression . "||" expression, FOLLOW [239] -> SHIFT "||" GOTO 152
	expression/L6 = expression . "|" expression, FOLLOW [239] -> SHIFT '|' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [239] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [239] -> SHIFT ">>" GOTO 155
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [239] -> SHIFT '[' GOTO 156
	expression/L8 = expression . "==" expression, FOLLOW [239] -> SHIFT "==" GOTO 157
	expression/L8 = expression . "!=" expression, FOLLOW [239] -> SHIFT "!=" GOTO 158
	expression/L8 = expression . ">=" expression, FOLLOW [239] -> SHIFT ">=" GOTO 159
	expression/L8 = expression . "<=" expression, FOLLOW [239] -> SHIFT "<=" GOTO 160
	expression/L8 = expression . ">" expression, FOLLOW [239] -> SHIFT '>' GOTO 161
	expression/L8 = expression . "<" expression, FOLLOW [239] -> SHIFT '<' GOTO 162
	expression/L3 = expression . "+=" expression, FOLLOW [239] -> SHIFT "+=" GOTO 163
	expression/L3 = expression . "-=" expression, FOLLOW [239] -> SHIFT "-=" GOTO 164
	expression/L3 = expression . "*=" expression, FOLLOW [239] -> SHIFT "*=" GOTO 165
	expression/L3 = expression . "/=" expression, FOLLOW [239] -> SHIFT "/=" GOTO 166
	expression/L3 = expression . "^=" expression, FOLLOW [239] -> SHIFT "^=" GOTO 167
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "%=" expression, FOLLOW [239] -> SHIFT "%=" GOTO 169
	expression/L3 = expression . "&&=" expression, FOLLOW [239] -> SHIFT "&&=" GOTO 170
	expression/L3 = expression . "||=" expression, FOLLOW [239] -> SHIFT "||=" GOTO 171
	expression/L3 = expression . "|=" expression, FOLLOW [239] -> SHIFT "|=" GOTO 172
	expression/L3 = expression . "<<=" expression, FOLLOW [239] -> SHIFT "<<=" GOTO 173
	expression/L3 = expression . ">>=" expression, FOLLOW [239] -> SHIFT ">>=" GOTO 174
	expression/L12 = expression . "." IDENT, FOLLOW [239] -> SHIFT '.' GOTO 175
	expression/L9 = "~" expression . (125), FOLLOW [239] -> REDUCE expression #2 CALL operator "~"
[186]
	iexpression = expression . indirection IDENT, FOLLOW [239] -> GOTO 139
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [239] -> SHIFT '(' GOTO 140
	expression/L13 = expression . "(" ")", FOLLOW [239] -> SHIFT '(' GOTO 140
	expression/L7 = expression . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 142
	expression/L7 = expression . "^" expression, FOLLOW [239] -> SHIFT '^' GOTO 143
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 144
	expression/L3 = expression . "=" expression, FOLLOW [239] -> SHIFT '=' GOTO 145
	expression/L9 = expression . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 146
	expression/L9 = expression . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 147
	expression/L10 = expression . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 148
	expression/L10 = expression . "/" expression, FOLLOW [239] -> SHIFT '/' GOTO 149
	expression/L10 = expression . "%" expression, FOLLOW [239] -> SHIFT '%' GOTO 150
	expression/L5 = expression . "&&" expression, FOLLOW [239] -> SHIFT "&&" GOTO 151
	expression/L4 = expression . "||" expression, FOLLOW [239] -> SHIFT "||" GOTO 152
	expression/L6 = expression . "|" expression, FOLLOW [239] -> SHIFT '|' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [239] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [239] -> SHIFT ">>" GOTO 155
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [239] -> SHIFT '[' GOTO 156
	expression/L8 = expression . "==" expression, FOLLOW [239] -> SHIFT "==" GOTO 157
	expression/L8 = expression . "!=" expression, FOLLOW [239] -> SHIFT "!=" GOTO 158
	expression/L8 = expression . ">=" expression, FOLLOW [239] -> SHIFT ">=" GOTO 159
	expression/L8 = expression . "<=" expression, FOLLOW [239] -> SHIFT "<=" GOTO 160
	expression/L8 = expression . ">" expression, FOLLOW [239] -> SHIFT '>' GOTO 161
	expression/L8 = expression . "<" expression, FOLLOW [239] -> SHIFT '<' GOTO 162
	expression/L3 = expression . "+=" expression, FOLLOW [239] -> SHIFT "+=" GOTO 163
	expression/L3 = expression . "-=" expression, FOLLOW [239] -> SHIFT "-=" GOTO 164
	expression/L3 = expression . "*=" expression, FOLLOW [239] -> SHIFT "*=" GOTO 165
	expression/L3 = expression . "/=" expression, FOLLOW [239] -> SHIFT "/=" GOTO 166
	expression/L3 = expression . "^=" expression, FOLLOW [239] -> SHIFT "^=" GOTO 167
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "%=" expression, FOLLOW [239] -> SHIFT "%=" GOTO 169
	expression/L3 = expression . "&&=" expression, FOLLOW [239] -> SHIFT "&&=" GOTO 170
	expression/L3 = expression . "||=" expression, FOLLOW [239] -> SHIFT "||=" GOTO 171
	expression/L3 = expression . "|=" expression, FOLLOW [239] -> SHIFT "|=" GOTO 172
	expression/L3 = expression . "<<=" expression, FOLLOW [239] -> SHIFT "<<=" GOTO 173
	expression/L3 = expression . ">>=" expression, FOLLOW [239] -> SHIFT ">>=" GOTO 174
	expression/L12 = expression . "." IDENT, FOLLOW [239] -> SHIFT '.' GOTO 175
	expression/L9 = "!" expression . (126), FOLLOW [239] -> REDUCE expression #2 CALL operator "!"
[187]
	statement/L1 = "var" variabledefinition . ";", FOLLOW [98] -> SHIFT ';' GOTO 287
[188]
	iexpression = expression . indirection IDENT, FOLLOW [97] -> GOTO 139
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [97] -> SHIFT '(' GOTO 140
	expression/L13 = expression . "(" ")", FOLLOW [97] -> SHIFT '(' GOTO 140
	statement/L1 = "return" expression . ";", FOLLOW [98] -> SHIFT ';' GOTO 288
	expression/L7 = expression . "&" expression, FOLLOW [97] -> SHIFT '&' GOTO 142
	expression/L7 = expression . "^" expression, FOLLOW [97] -> SHIFT '^' GOTO 143
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 144
	expression/L3 = expression . "=" expression, FOLLOW [97] -> SHIFT '=' GOTO 145
	expression/L9 = expression . "+" expression, FOLLOW [97] -> SHIFT '+' GOTO 146
	expression/L9 = expression . "-" expression, FOLLOW [97] -> SHIFT '-' GOTO 147
	expression/L10 = expression . "*" expression, FOLLOW [97] -> SHIFT '*' GOTO 148
	expression/L10 = expression . "/" expression, FOLLOW [97] -> SHIFT '/' GOTO 149
	expression/L10 = expression . "%" expression, FOLLOW [97] -> SHIFT '%' GOTO 150
	expression/L5 = expression . "&&" expression, FOLLOW [97] -> SHIFT "&&" GOTO 151
	expression/L4 = expression . "||" expression, FOLLOW [97] -> SHIFT "||" GOTO 152
	expression/L6 = expression . "|" expression, FOLLOW [97] -> SHIFT '|' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [97] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [97] -> SHIFT ">>" GOTO 155
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [97] -> SHIFT '[' GOTO 156
	expression/L8 = expression . "==" expression, FOLLOW [97] -> SHIFT "==" GOTO 157
	expression/L8 = expression . "!=" expression, FOLLOW [97] -> SHIFT "!=" GOTO 158
	expression/L8 = expression . ">=" expression, FOLLOW [97] -> SHIFT ">=" GOTO 159
	expression/L8 = expression . "<=" expression, FOLLOW [97] -> SHIFT "<=" GOTO 160
	expression/L8 = expression . ">" expression, FOLLOW [97] -> SHIFT '>' GOTO 161
	expression/L8 = expression . "<" expression, FOLLOW [97] -> SHIFT '<' GOTO 162
	expression/L3 = expression . "+=" expression, FOLLOW [97] -> SHIFT "+=" GOTO 163
	expression/L3 = expression . "-=" expression, FOLLOW [97] -> SHIFT "-=" GOTO 164
	expression/L3 = expression . "*=" expression, FOLLOW [97] -> SHIFT "*=" GOTO 165
	expression/L3 = expression . "/=" expression, FOLLOW [97] -> SHIFT "/=" GOTO 166
	expression/L3 = expression . "^=" expression, FOLLOW [97] -> SHIFT "^=" GOTO 167
	expression/L3 = expression . "&=" expression, FOLLOW [97] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "&=" expression, FOLLOW [97] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "%=" expression, FOLLOW [97] -> SHIFT "%=" GOTO 169
	expression/L3 = expression . "&&=" expression, FOLLOW [97] -> SHIFT "&&=" GOTO 170
	expression/L3 = expression . "||=" expression, FOLLOW [97] -> SHIFT "||=" GOTO 171
	expression/L3 = expression . "|=" expression, FOLLOW [97] -> SHIFT "|=" GOTO 172
	expression/L3 = expression . "<<=" expression, FOLLOW [97] -> SHIFT "<<=" GOTO 173
	expression/L3 = expression . ">>=" expression, FOLLOW [97] -> SHIFT ">>=" GOTO 174
	expression/L12 = expression . "." IDENT, FOLLOW [97] -> SHIFT '.' GOTO 175
[189]
	iexpression = expression . indirection IDENT, FOLLOW [97] -> GOTO 139
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [97] -> SHIFT '(' GOTO 140
	expression/L13 = expression . "(" ")", FOLLOW [97] -> SHIFT '(' GOTO 140
	statement/L1 = "delete" expression . ";", FOLLOW [98] -> SHIFT ';' GOTO 289
	expression/L7 = expression . "&" expression, FOLLOW [97] -> SHIFT '&' GOTO 142
	expression/L7 = expression . "^" expression, FOLLOW [97] -> SHIFT '^' GOTO 143
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 144
	expression/L3 = expression . "=" expression, FOLLOW [97] -> SHIFT '=' GOTO 145
	expression/L9 = expression . "+" expression, FOLLOW [97] -> SHIFT '+' GOTO 146
	expression/L9 = expression . "-" expression, FOLLOW [97] -> SHIFT '-' GOTO 147
	expression/L10 = expression . "*" expression, FOLLOW [97] -> SHIFT '*' GOTO 148
	expression/L10 = expression . "/" expression, FOLLOW [97] -> SHIFT '/' GOTO 149
	expression/L10 = expression . "%" expression, FOLLOW [97] -> SHIFT '%' GOTO 150
	expression/L5 = expression . "&&" expression, FOLLOW [97] -> SHIFT "&&" GOTO 151
	expression/L4 = expression . "||" expression, FOLLOW [97] -> SHIFT "||" GOTO 152
	expression/L6 = expression . "|" expression, FOLLOW [97] -> SHIFT '|' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [97] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [97] -> SHIFT ">>" GOTO 155
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [97] -> SHIFT '[' GOTO 156
	expression/L8 = expression . "==" expression, FOLLOW [97] -> SHIFT "==" GOTO 157
	expression/L8 = expression . "!=" expression, FOLLOW [97] -> SHIFT "!=" GOTO 158
	expression/L8 = expression . ">=" expression, FOLLOW [97] -> SHIFT ">=" GOTO 159
	expression/L8 = expression . "<=" expression, FOLLOW [97] -> SHIFT "<=" GOTO 160
	expression/L8 = expression . ">" expression, FOLLOW [97] -> SHIFT '>' GOTO 161
	expression/L8 = expression . "<" expression, FOLLOW [97] -> SHIFT '<' GOTO 162
	expression/L3 = expression . "+=" expression, FOLLOW [97] -> SHIFT "+=" GOTO 163
	expression/L3 = expression . "-=" expression, FOLLOW [97] -> SHIFT "-=" GOTO 164
	expression/L3 = expression . "*=" expression, FOLLOW [97] -> SHIFT "*=" GOTO 165
	expression/L3 = expression . "/=" expression, FOLLOW [97] -> SHIFT "/=" GOTO 166
	expression/L3 = expression . "^=" expression, FOLLOW [97] -> SHIFT "^=" GOTO 167
	expression/L3 = expression . "&=" expression, FOLLOW [97] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "&=" expression, FOLLOW [97] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "%=" expression, FOLLOW [97] -> SHIFT "%=" GOTO 169
	expression/L3 = expression . "&&=" expression, FOLLOW [97] -> SHIFT "&&=" GOTO 170
	expression/L3 = expression . "||=" expression, FOLLOW [97] -> SHIFT "||=" GOTO 171
	expression/L3 = expression . "|=" expression, FOLLOW [97] -> SHIFT "|=" GOTO 172
	expression/L3 = expression . "<<=" expression, FOLLOW [97] -> SHIFT "<<=" GOTO 173
	expression/L3 = expression . ">>=" expression, FOLLOW [97] -> SHIFT ">>=" GOTO 174
	expression/L12 = expression . "." IDENT, FOLLOW [97] -> SHIFT '.' GOTO 175
[190]
	statement/L1 = "if" "(" . expression ")" "{" codeblock "}", FOLLOW [98] -> GOTO 290
	statement/L1 = "if" "(" . expression ")" "{" codeblock "}" "else" "{" codeblock "}", FOLLOW [98] -> GOTO 290
	expression/L3 = . expression "=" expression, FOLLOW [228] -> GOTO 290
	expression/L3 = . expression "+=" expression, FOLLOW [228] -> GOTO 290
	expression/L3 = . expression "-=" expression, FOLLOW [228] -> GOTO 290
	expression/L3 = . expression "*=" expression, FOLLOW [228] -> GOTO 290
	expression/L3 = . expression "/=" expression, FOLLOW [228] -> GOTO 290
	expression/L3 = . expression "^=" expression, FOLLOW [228] -> GOTO 290
	expression/L3 = . expression "&=" expression, FOLLOW [228] -> GOTO 290
	expression/L3 = . expression "%=" expression, FOLLOW [228] -> GOTO 290
	expression/L3 = . expression "&&=" expression, FOLLOW [228] -> GOTO 290
	expression/L3 = . expression "||=" expression, FOLLOW [228] -> GOTO 290
	expression/L3 = . expression "&=" expression, FOLLOW [228] -> GOTO 290
	expression/L3 = . expression "|=" expression, FOLLOW [228] -> GOTO 290
	expression/L3 = . expression "<<=" expression, FOLLOW [228] -> GOTO 290
	expression/L3 = . expression ">>=" expression, FOLLOW [228] -> GOTO 290
	expression/L4 = . expression "||" expression, FOLLOW [228] -> GOTO 290
	expression/L5 = . expression "&&" expression, FOLLOW [228] -> GOTO 290
	expression/L6 = . expression "|" expression, FOLLOW [228] -> GOTO 290
	expression/L7 = . expression "^" expression, FOLLOW [228] -> GOTO 290
	expression/L7 = . expression "&" expression, FOLLOW [228] -> GOTO 290
	expression/L8 = . expression "==" expression, FOLLOW [228] -> GOTO 290
	expression/L8 = . expression "!=" expression, FOLLOW [228] -> GOTO 290
	expression/L8 = . expression "<=" expression, FOLLOW [228] -> GOTO 290
	expression/L8 = . expression "<" expression, FOLLOW [228] -> GOTO 290
	expression/L8 = . expression ">=" expression, FOLLOW [228] -> GOTO 290
	expression/L8 = . expression ">" expression, FOLLOW [228] -> GOTO 290
	expression/L9 = . expression "+" expression, FOLLOW [228] -> GOTO 290
	expression/L9 = . expression "-" expression, FOLLOW [228] -> GOTO 290
	expression/L10 = . expression "*" expression, FOLLOW [228] -> GOTO 290
	expression/L10 = . expression "/" expression, FOLLOW [228] -> GOTO 290
	expression/L10 = . expression "%" expression, FOLLOW [228] -> GOTO 290
	expression/L11 = . expression "<<" expression, FOLLOW [228] -> GOTO 290
	expression/L11 = . expression ">>" expression, FOLLOW [228] -> GOTO 290
	expression/L12 = . expression "." IDENT, FOLLOW [228] -> GOTO 290
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [228] -> GOTO 290
	expression/L13 = . expression "(" ")", FOLLOW [228] -> GOTO 290
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [228] -> GOTO 290
	iexpression = . expression indirection IDENT, FOLLOW [228] -> GOTO 290
	expression/L12 = . iexpression, FOLLOW [228] -> GOTO 77
	expression/L2 = . BOOLEAN, FOLLOW [228] -> SHIFT BOOLEAN GOTO 78
	expression/L2 = . IDENT, FOLLOW [228] -> SHIFT IDENT GOTO 79
	expression/L2 = . DQSTRING, FOLLOW [228] -> SHIFT DQSTRING GOTO 80
	expression/L2 = . SQSTRING, FOLLOW [228] -> SHIFT SQSTRING GOTO 81
	expression/L2 = . CARDINAL, FOLLOW [228] -> SHIFT CARDINAL GOTO 82
	expression/L2 = . INTEGER, FOLLOW [228] -> SHIFT INTEGER GOTO 83
	expression/L2 = . FLOAT, FOLLOW [228] -> SHIFT FLOAT GOTO 84
	expression/L2 = . "(" expression ")", FOLLOW [228] -> SHIFT '(' GOTO 85
	expression/L9 = . "&" expression, FOLLOW [228] -> SHIFT '&' GOTO 86
	expression/L1 = . "{" expressionlist "}", FOLLOW [228] -> SHIFT '{' GOTO 103
	expression/L1 = . "{" "}", FOLLOW [228] -> SHIFT '{' GOTO 103
	expression/L9 = . "+" expression, FOLLOW [228] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [228] -> SHIFT '-' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [228] -> SHIFT '*' GOTO 90
	expression/L9 = . "~" expression, FOLLOW [228] -> SHIFT '~' GOTO 91
	expression/L9 = . "!" expression, FOLLOW [228] -> SHIFT '!' GOTO 92
	expression/L1 = . "new" typespec ":" expression, FOLLOW [228] -> SHIFT "new" GOTO 98
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [228] -> SHIFT "cast" GOTO 99
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [228] -> SHIFT "cast" GOTO 99
	expression/L2 = . "null", FOLLOW [228] -> SHIFT "null" GOTO 100
[191]
	statement/L1 = "while" "(" . expression ")" "{" codeblock "}", FOLLOW [98] -> GOTO 291
	expression/L3 = . expression "=" expression, FOLLOW [228] -> GOTO 291
	expression/L3 = . expression "+=" expression, FOLLOW [228] -> GOTO 291
	expression/L3 = . expression "-=" expression, FOLLOW [228] -> GOTO 291
	expression/L3 = . expression "*=" expression, FOLLOW [228] -> GOTO 291
	expression/L3 = . expression "/=" expression, FOLLOW [228] -> GOTO 291
	expression/L3 = . expression "^=" expression, FOLLOW [228] -> GOTO 291
	expression/L3 = . expression "&=" expression, FOLLOW [228] -> GOTO 291
	expression/L3 = . expression "%=" expression, FOLLOW [228] -> GOTO 291
	expression/L3 = . expression "&&=" expression, FOLLOW [228] -> GOTO 291
	expression/L3 = . expression "||=" expression, FOLLOW [228] -> GOTO 291
	expression/L3 = . expression "&=" expression, FOLLOW [228] -> GOTO 291
	expression/L3 = . expression "|=" expression, FOLLOW [228] -> GOTO 291
	expression/L3 = . expression "<<=" expression, FOLLOW [228] -> GOTO 291
	expression/L3 = . expression ">>=" expression, FOLLOW [228] -> GOTO 291
	expression/L4 = . expression "||" expression, FOLLOW [228] -> GOTO 291
	expression/L5 = . expression "&&" expression, FOLLOW [228] -> GOTO 291
	expression/L6 = . expression "|" expression, FOLLOW [228] -> GOTO 291
	expression/L7 = . expression "^" expression, FOLLOW [228] -> GOTO 291
	expression/L7 = . expression "&" expression, FOLLOW [228] -> GOTO 291
	expression/L8 = . expression "==" expression, FOLLOW [228] -> GOTO 291
	expression/L8 = . expression "!=" expression, FOLLOW [228] -> GOTO 291
	expression/L8 = . expression "<=" expression, FOLLOW [228] -> GOTO 291
	expression/L8 = . expression "<" expression, FOLLOW [228] -> GOTO 291
	expression/L8 = . expression ">=" expression, FOLLOW [228] -> GOTO 291
	expression/L8 = . expression ">" expression, FOLLOW [228] -> GOTO 291
	expression/L9 = . expression "+" expression, FOLLOW [228] -> GOTO 291
	expression/L9 = . expression "-" expression, FOLLOW [228] -> GOTO 291
	expression/L10 = . expression "*" expression, FOLLOW [228] -> GOTO 291
	expression/L10 = . expression "/" expression, FOLLOW [228] -> GOTO 291
	expression/L10 = . expression "%" expression, FOLLOW [228] -> GOTO 291
	expression/L11 = . expression "<<" expression, FOLLOW [228] -> GOTO 291
	expression/L11 = . expression ">>" expression, FOLLOW [228] -> GOTO 291
	expression/L12 = . expression "." IDENT, FOLLOW [228] -> GOTO 291
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [228] -> GOTO 291
	expression/L13 = . expression "(" ")", FOLLOW [228] -> GOTO 291
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [228] -> GOTO 291
	iexpression = . expression indirection IDENT, FOLLOW [228] -> GOTO 291
	expression/L12 = . iexpression, FOLLOW [228] -> GOTO 77
	expression/L2 = . BOOLEAN, FOLLOW [228] -> SHIFT BOOLEAN GOTO 78
	expression/L2 = . IDENT, FOLLOW [228] -> SHIFT IDENT GOTO 79
	expression/L2 = . DQSTRING, FOLLOW [228] -> SHIFT DQSTRING GOTO 80
	expression/L2 = . SQSTRING, FOLLOW [228] -> SHIFT SQSTRING GOTO 81
	expression/L2 = . CARDINAL, FOLLOW [228] -> SHIFT CARDINAL GOTO 82
	expression/L2 = . INTEGER, FOLLOW [228] -> SHIFT INTEGER GOTO 83
	expression/L2 = . FLOAT, FOLLOW [228] -> SHIFT FLOAT GOTO 84
	expression/L2 = . "(" expression ")", FOLLOW [228] -> SHIFT '(' GOTO 85
	expression/L9 = . "&" expression, FOLLOW [228] -> SHIFT '&' GOTO 86
	expression/L1 = . "{" expressionlist "}", FOLLOW [228] -> SHIFT '{' GOTO 103
	expression/L1 = . "{" "}", FOLLOW [228] -> SHIFT '{' GOTO 103
	expression/L9 = . "+" expression, FOLLOW [228] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [228] -> SHIFT '-' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [228] -> SHIFT '*' GOTO 90
	expression/L9 = . "~" expression, FOLLOW [228] -> SHIFT '~' GOTO 91
	expression/L9 = . "!" expression, FOLLOW [228] -> SHIFT '!' GOTO 92
	expression/L1 = . "new" typespec ":" expression, FOLLOW [228] -> SHIFT "new" GOTO 98
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [228] -> SHIFT "cast" GOTO 99
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [228] -> SHIFT "cast" GOTO 99
	expression/L2 = . "null", FOLLOW [228] -> SHIFT "null" GOTO 100
[192]
	expression/L1 = "new" typespec . ":" expression, FOLLOW [239] -> SHIFT ':' GOTO 292
[193]
	expression/L1 = "cast" typespec . ":" "{" expression "}", FOLLOW [239] -> SHIFT ':' GOTO 293
	expression/L1 = "cast" typespec . ":" "{" "}", FOLLOW [239] -> SHIFT ':' GOTO 293
[194]
	iexpression = expression . indirection IDENT, FOLLOW [239] -> GOTO 139
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [239] -> SHIFT '(' GOTO 140
	expression/L13 = expression . "(" ")", FOLLOW [239] -> SHIFT '(' GOTO 140
	expressionlist = expression . "," expressionlist, FOLLOW [255] -> SHIFT ',' GOTO 285
	expression/L7 = expression . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 142
	expression/L7 = expression . "^" expression, FOLLOW [239] -> SHIFT '^' GOTO 143
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 144
	expression/L3 = expression . "=" expression, FOLLOW [239] -> SHIFT '=' GOTO 145
	expression/L9 = expression . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 146
	expression/L9 = expression . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 147
	expression/L10 = expression . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 148
	expression/L10 = expression . "/" expression, FOLLOW [239] -> SHIFT '/' GOTO 149
	expression/L10 = expression . "%" expression, FOLLOW [239] -> SHIFT '%' GOTO 150
	expression/L5 = expression . "&&" expression, FOLLOW [239] -> SHIFT "&&" GOTO 151
	expression/L4 = expression . "||" expression, FOLLOW [239] -> SHIFT "||" GOTO 152
	expression/L6 = expression . "|" expression, FOLLOW [239] -> SHIFT '|' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [239] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [239] -> SHIFT ">>" GOTO 155
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [239] -> SHIFT '[' GOTO 156
	expression/L8 = expression . "==" expression, FOLLOW [239] -> SHIFT "==" GOTO 157
	expression/L8 = expression . "!=" expression, FOLLOW [239] -> SHIFT "!=" GOTO 158
	expression/L8 = expression . ">=" expression, FOLLOW [239] -> SHIFT ">=" GOTO 159
	expression/L8 = expression . "<=" expression, FOLLOW [239] -> SHIFT "<=" GOTO 160
	expression/L8 = expression . ">" expression, FOLLOW [239] -> SHIFT '>' GOTO 161
	expression/L8 = expression . "<" expression, FOLLOW [239] -> SHIFT '<' GOTO 162
	expression/L3 = expression . "+=" expression, FOLLOW [239] -> SHIFT "+=" GOTO 163
	expression/L3 = expression . "-=" expression, FOLLOW [239] -> SHIFT "-=" GOTO 164
	expression/L3 = expression . "*=" expression, FOLLOW [239] -> SHIFT "*=" GOTO 165
	expression/L3 = expression . "/=" expression, FOLLOW [239] -> SHIFT "/=" GOTO 166
	expression/L3 = expression . "^=" expression, FOLLOW [239] -> SHIFT "^=" GOTO 167
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "%=" expression, FOLLOW [239] -> SHIFT "%=" GOTO 169
	expression/L3 = expression . "&&=" expression, FOLLOW [239] -> SHIFT "&&=" GOTO 170
	expression/L3 = expression . "||=" expression, FOLLOW [239] -> SHIFT "||=" GOTO 171
	expression/L3 = expression . "|=" expression, FOLLOW [239] -> SHIFT "|=" GOTO 172
	expression/L3 = expression . "<<=" expression, FOLLOW [239] -> SHIFT "<<=" GOTO 173
	expression/L3 = expression . ">>=" expression, FOLLOW [239] -> SHIFT ">>=" GOTO 174
	expression/L12 = expression . "." IDENT, FOLLOW [239] -> SHIFT '.' GOTO 175
	expressionlist = expression ., FOLLOW [255] -> REDUCE expressionlist #1
[195]
	variabledefinition = typespec IDENT "[" expression "]" . "=" expression, FOLLOW [15] -> SHIFT '=' GOTO 294
	variabledefinition = typespec IDENT "[" expression "]" . (step:87), FOLLOW [15] -> REDUCE variabledefinition #5 CALL vardef_array
[196]
	functiondefinition = linkage "function" IDENT typespec callablebody . (39), FOLLOW [247] -> REDUCE functiondefinition #5 CALL funcdef {const=false}
[197]
	functiondefinition = linkage "function" IDENT typespec callablebody_const . (40), FOLLOW [247] -> REDUCE functiondefinition #5 CALL funcdef {const=true}
[198]
	paramdecl = typespec . IDENT, FOLLOW [184] -> SHIFT IDENT GOTO 295
[199]
	callablebody = "(" parameterlist . ")" "{" codeblock "}", FOLLOW [247] -> SHIFT ')' GOTO 296
	callablebody_const = "(" parameterlist . ")" "const" "{" codeblock "}", FOLLOW [247] -> SHIFT ')' GOTO 296
[200]
	parameterlist = parameters . (74), FOLLOW [10] -> REDUCE parameterlist #1 CALL paramdeflist
[201]
	parameters = paramdecl . "," parameters, FOLLOW [10] -> SHIFT ',' GOTO 297
	parameters = paramdecl ., FOLLOW [10] -> REDUCE parameters #1
[202]
	typespec/L1 = "const" typename "^" "^" "&" . (29), FOLLOW [267] -> REDUCE typespec #5 CALL typespec "const^^&"
[203]
	classdefinition = "class" IDENT "{" class_definitionlist "}" . (step:36), FOLLOW [172] -> REDUCE classdefinition #5 CALL classdef
[204]
	class_definitionlist = class_definition class_definitionlist ., FOLLOW [18] -> REDUCE class_definitionlist #2
[205]
	class_definition = typedefinition ";" . (16), FOLLOW [171] -> REDUCE class_definition #2 CALL definition 1
[206]
	operatordefinition = linkage "operator" . operatordecl typespec callablebody, FOLLOW [171] -> GOTO 298
	operatordefinition = linkage "operator" . operatordecl typespec callablebody_const, FOLLOW [171] -> GOTO 298
	operatordefinition = linkage "operator" . operatordecl callablebody, FOLLOW [171] -> GOTO 298
	operatordefinition = linkage "operator" . operatordecl callablebody_const, FOLLOW [171] -> GOTO 298
	operatordecl = . "(" ")", FOLLOW [185] -> SHIFT '(' GOTO 219
	operatordecl = . "&", FOLLOW [185] -> SHIFT '&' GOTO 220
	operatordecl = . "->", FOLLOW [185] -> SHIFT "->" GOTO 221
	operatordecl = . "=", FOLLOW [185] -> SHIFT '=' GOTO 222
	operatordecl = . "+", FOLLOW [185] -> SHIFT '+' GOTO 223
	operatordecl = . "-", FOLLOW [185] -> SHIFT '-' GOTO 224
	operatordecl = . "*", FOLLOW [185] -> SHIFT '*' GOTO 225
	operatordecl = . "/", FOLLOW [185] -> SHIFT '/' GOTO 226
	operatordecl = . "%", FOLLOW [185] -> SHIFT '%' GOTO 227
	operatordecl = . "&&", FOLLOW [185] -> SHIFT "&&" GOTO 228
	operatordecl = . "||", FOLLOW [185] -> SHIFT "||" GOTO 229
	operatordecl = . "|", FOLLOW [185] -> SHIFT '|' GOTO 230
	operatordecl = . "<<", FOLLOW [185] -> SHIFT "<<" GOTO 231
	operatordecl = . ">>", FOLLOW [185] -> SHIFT ">>" GOTO 232
	operatordecl = . "~", FOLLOW [185] -> SHIFT '~' GOTO 233
	operatordecl = . "!", FOLLOW [185] -> SHIFT '!' GOTO 234
	operatordecl = . "[" "]", FOLLOW [185] -> SHIFT '[' GOTO 235
	operatordecl = . "==", FOLLOW [185] -> SHIFT "==" GOTO 236
	operatordecl = . "!=", FOLLOW [185] -> SHIFT "!=" GOTO 237
	operatordecl = . ">=", FOLLOW [185] -> SHIFT ">=" GOTO 238
	operatordecl = . "<=", FOLLOW [185] -> SHIFT "<=" GOTO 239
	operatordecl = . ">", FOLLOW [185] -> SHIFT '>' GOTO 240
	operatordecl = . "<", FOLLOW [185] -> SHIFT '<' GOTO 241
[207]
	constructordefinition = linkage "constructor" . callablebody, FOLLOW [171] -> GOTO 299
	callablebody = . "(" parameterlist ")" "{" codeblock "}", FOLLOW [171] -> SHIFT '(' GOTO 300
[208]
	class_definition = variabledefinition ";" . (16), FOLLOW [171] -> REDUCE class_definition #2 CALL definition 1
[209]
	statement/L1 = . typedefinition ";", FOLLOW [98] -> GOTO 71
	functiondefinition = . linkage "function" IDENT typespec callablebody, FOLLOW [98] -> GOTO 14
	functiondefinition = . linkage "function" IDENT typespec callablebody_const, FOLLOW [98] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [98] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody_const, FOLLOW [98] -> GOTO 14
	statement/L1 = . functiondefinition, FOLLOW [98] -> GOTO 72
	constructordefinition = "destructor" "{" . codeblock "}", FOLLOW [171] -> GOTO 301
	codeblock = . statementlist, FOLLOW [18] -> GOTO 74
	statementlist = . statement statementlist, FOLLOW [18] -> GOTO 75
	statement/L1 = . expression ";", FOLLOW [98] -> GOTO 76
	expression/L3 = . expression "=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "+=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "-=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "*=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "/=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "^=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "&=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "%=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "&&=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "||=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "&=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "|=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "<<=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression ">>=" expression, FOLLOW [97] -> GOTO 76
	expression/L4 = . expression "||" expression, FOLLOW [97] -> GOTO 76
	expression/L5 = . expression "&&" expression, FOLLOW [97] -> GOTO 76
	expression/L6 = . expression "|" expression, FOLLOW [97] -> GOTO 76
	expression/L7 = . expression "^" expression, FOLLOW [97] -> GOTO 76
	expression/L7 = . expression "&" expression, FOLLOW [97] -> GOTO 76
	expression/L8 = . expression "==" expression, FOLLOW [97] -> GOTO 76
	expression/L8 = . expression "!=" expression, FOLLOW [97] -> GOTO 76
	expression/L8 = . expression "<=" expression, FOLLOW [97] -> GOTO 76
	expression/L8 = . expression "<" expression, FOLLOW [97] -> GOTO 76
	expression/L8 = . expression ">=" expression, FOLLOW [97] -> GOTO 76
	expression/L8 = . expression ">" expression, FOLLOW [97] -> GOTO 76
	expression/L9 = . expression "+" expression, FOLLOW [97] -> GOTO 76
	expression/L9 = . expression "-" expression, FOLLOW [97] -> GOTO 76
	expression/L10 = . expression "*" expression, FOLLOW [97] -> GOTO 76
	expression/L10 = . expression "/" expression, FOLLOW [97] -> GOTO 76
	expression/L10 = . expression "%" expression, FOLLOW [97] -> GOTO 76
	expression/L11 = . expression "<<" expression, FOLLOW [97] -> GOTO 76
	expression/L11 = . expression ">>" expression, FOLLOW [97] -> GOTO 76
	expression/L12 = . expression "." IDENT, FOLLOW [97] -> GOTO 76
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [97] -> GOTO 76
	expression/L13 = . expression "(" ")", FOLLOW [97] -> GOTO 76
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [97] -> GOTO 76
	iexpression = . expression indirection IDENT, FOLLOW [97] -> GOTO 76
	expression/L12 = . iexpression, FOLLOW [97] -> GOTO 77
	expression/L2 = . BOOLEAN, FOLLOW [97] -> SHIFT BOOLEAN GOTO 78
	expression/L2 = . IDENT, FOLLOW [97] -> SHIFT IDENT GOTO 79
	expression/L2 = . DQSTRING, FOLLOW [97] -> SHIFT DQSTRING GOTO 80
	expression/L2 = . SQSTRING, FOLLOW [97] -> SHIFT SQSTRING GOTO 81
	expression/L2 = . CARDINAL, FOLLOW [97] -> SHIFT CARDINAL GOTO 82
	expression/L2 = . INTEGER, FOLLOW [97] -> SHIFT INTEGER GOTO 83
	expression/L2 = . FLOAT, FOLLOW [97] -> SHIFT FLOAT GOTO 84
	expression/L2 = . "(" expression ")", FOLLOW [97] -> SHIFT '(' GOTO 85
	expression/L9 = . "&" expression, FOLLOW [97] -> SHIFT '&' GOTO 86
	typedefinition = . "typedef" typepath IDENT, FOLLOW [15] -> SHIFT "typedef" GOTO 22
	statement/L1 = . "{" codeblock "}", FOLLOW [98] -> SHIFT '{' GOTO 87
	expression/L1 = . "{" expressionlist "}", FOLLOW [97] -> SHIFT '{' GOTO 87
	expression/L1 = . "{" "}", FOLLOW [97] -> SHIFT '{' GOTO 87
	linkage = . "private", FOLLOW [61] -> SHIFT "private" GOTO 24
	linkage = . "public", FOLLOW [61] -> SHIFT "public" GOTO 25
	expression/L9 = . "+" expression, FOLLOW [97] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [97] -> SHIFT '-' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [97] -> SHIFT '*' GOTO 90
	expression/L9 = . "~" expression, FOLLOW [97] -> SHIFT '~' GOTO 91
	expression/L9 = . "!" expression, FOLLOW [97] -> SHIFT '!' GOTO 92
	statement/L1 = . "var" variabledefinition ";", FOLLOW [98] -> SHIFT "var" GOTO 93
	statement/L1 = . "return" expression ";", FOLLOW [98] -> SHIFT "return" GOTO 94
	statement/L1 = . "delete" expression ";", FOLLOW [98] -> SHIFT "delete" GOTO 95
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}", FOLLOW [98] -> SHIFT "if" GOTO 96
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}", FOLLOW [98] -> SHIFT "if" GOTO 96
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}", FOLLOW [98] -> SHIFT "while" GOTO 97
	expression/L1 = . "new" typespec ":" expression, FOLLOW [97] -> SHIFT "new" GOTO 98
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [97] -> SHIFT "cast" GOTO 99
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [97] -> SHIFT "cast" GOTO 99
	expression/L2 = . "null", FOLLOW [97] -> SHIFT "null" GOTO 100
	statementlist = ., FOLLOW [18] -> REDUCE statementlist #0
	linkage = . (38), FOLLOW [61] -> REDUCE linkage #0 CALL linkage {private=false,linkage="external"}
[210]
	typepath/L1 = . typename, FOLLOW [173] -> GOTO 45
	inheritlist = . typepath "," inheritlist, FOLLOW [19] -> GOTO 125
	inheritlist = . typepath, FOLLOW [19] -> GOTO 125
	inheritlist = typepath "," . inheritlist, FOLLOW [19] -> GOTO 302
	typename/L1 = . IDENT, FOLLOW [173] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [173] -> SHIFT IDENT GOTO 17
[211]
	classdefinition = "class" IDENT ":" inheritlist "{" . class_definitionlist "}", FOLLOW [172] -> GOTO 303
	class_definitionlist = . class_definition class_definitionlist, FOLLOW [18] -> GOTO 114
	typespec/L1 = . typename, FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [13] -> GOTO 8
	variabledefinition = . typespec IDENT, FOLLOW [15] -> GOTO 9
	variabledefinition = . typespec IDENT "=" expression, FOLLOW [15] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression, FOLLOW [15] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]", FOLLOW [15] -> GOTO 9
	class_definition = . typedefinition ";", FOLLOW [171] -> GOTO 115
	class_definition = . structdefinition, FOLLOW [171] -> GOTO 116
	class_definition = . interfacedefinition, FOLLOW [171] -> GOTO 117
	class_definition = . classdefinition, FOLLOW [171] -> GOTO 118
	functiondefinition = . linkage "function" IDENT typespec callablebody, FOLLOW [171] -> GOTO 119
	functiondefinition = . linkage "function" IDENT typespec callablebody_const, FOLLOW [171] -> GOTO 119
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [171] -> GOTO 119
	functiondefinition = . linkage "procedure" IDENT callablebody_const, FOLLOW [171] -> GOTO 119
	constructordefinition = . linkage "constructor" callablebody, FOLLOW [171] -> GOTO 119
	operatordefinition = . linkage "operator" operatordecl typespec callablebody, FOLLOW [171] -> GOTO 119
	operatordefinition = . linkage "operator" operatordecl typespec callablebody_const, FOLLOW [171] -> GOTO 119
	operatordefinition = . linkage "operator" operatordecl callablebody, FOLLOW [171] -> GOTO 119
	operatordefinition = . linkage "operator" operatordecl callablebody_const, FOLLOW [171] -> GOTO 119
	class_definition = . functiondefinition, FOLLOW [171] -> GOTO 120
	class_definition = . constructordefinition, FOLLOW [171] -> GOTO 121
	class_definition = . operatordefinition, FOLLOW [171] -> GOTO 122
	class_definition = . variabledefinition ";", FOLLOW [171] -> GOTO 123
	typename/L1 = . IDENT, FOLLOW [62] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [62] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "any" "class" "^", FOLLOW [13] -> SHIFT "any" GOTO 19
	typespec/L1 = . "any" "const" "class" "^", FOLLOW [13] -> SHIFT "any" GOTO 19
	typespec/L1 = . "any" "struct" "^", FOLLOW [13] -> SHIFT "any" GOTO 19
	typespec/L1 = . "any" "const" "struct" "^", FOLLOW [13] -> SHIFT "any" GOTO 19
	classdefinition = . "class" IDENT "{" class_definitionlist "}", FOLLOW [172] -> SHIFT "class" GOTO 20
	classdefinition = . "class" IDENT ":" inheritlist "{" class_definitionlist "}", FOLLOW [172] -> SHIFT "class" GOTO 20
	structdefinition = . "struct" IDENT "{" struct_definitionlist "}", FOLLOW [171] -> SHIFT "struct" GOTO 21
	typedefinition = . "typedef" typepath IDENT, FOLLOW [15] -> SHIFT "typedef" GOTO 22
	interfacedefinition = . "interface" IDENT "{" interface_definitionlist "}", FOLLOW [171] -> SHIFT "interface" GOTO 23
	linkage = . "private", FOLLOW [170] -> SHIFT "private" GOTO 24
	linkage = . "public", FOLLOW [170] -> SHIFT "public" GOTO 25
	constructordefinition = . "destructor" "{" codeblock "}", FOLLOW [171] -> SHIFT "destructor" GOTO 124
	class_definitionlist = ., FOLLOW [18] -> REDUCE class_definitionlist #0
	linkage = . (38), FOLLOW [170] -> REDUCE linkage #0 CALL linkage {private=false,linkage="external"}
[212]
	structdefinition = "struct" IDENT "{" struct_definitionlist "}" . (step:33), FOLLOW [172] -> REDUCE structdefinition #5 CALL structdef
[213]
	struct_definitionlist = struct_definition struct_definitionlist ., FOLLOW [18] -> REDUCE struct_definitionlist #2
[214]
	interfacedefinition = "interface" IDENT "{" interface_definitionlist "}" . (step:34), FOLLOW [172] -> REDUCE interfacedefinition #5 CALL interfacedef
[215]
	interface_definitionlist = interface_definition interface_definitionlist ., FOLLOW [18] -> REDUCE interface_definitionlist #2
[216]
	typespec/L1 = . typename, FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [9] -> GOTO 8
	interface_definition = "function" IDENT . typespec "(" extern_paramlist ")" ";", FOLLOW [176] -> GOTO 304
	interface_definition = "function" IDENT . typespec "(" extern_paramlist ")" "const" ";", FOLLOW [176] -> GOTO 304
	typename/L1 = . IDENT, FOLLOW [168] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [168] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "any" "class" "^", FOLLOW [9] -> SHIFT "any" GOTO 19
	typespec/L1 = . "any" "const" "class" "^", FOLLOW [9] -> SHIFT "any" GOTO 19
	typespec/L1 = . "any" "struct" "^", FOLLOW [9] -> SHIFT "any" GOTO 19
	typespec/L1 = . "any" "const" "struct" "^", FOLLOW [9] -> SHIFT "any" GOTO 19
[217]
	interface_definition = "procedure" IDENT . "(" extern_paramlist ")" ";", FOLLOW [176] -> SHIFT '(' GOTO 305
	interface_definition = "procedure" IDENT . "(" extern_paramlist ")" "const" ";", FOLLOW [176] -> SHIFT '(' GOTO 305
[218]
	typespec/L1 = . typename, FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [9] -> GOTO 8
	interface_definition = "operator" operatordecl . typespec "(" extern_paramlist ")" ";", FOLLOW [176] -> GOTO 306
	interface_definition = "operator" operatordecl . typespec "(" extern_paramlist ")" "const" ";", FOLLOW [176] -> GOTO 306
	typename/L1 = . IDENT, FOLLOW [168] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [168] -> SHIFT IDENT GOTO 17
	interface_definition = "operator" operatordecl . "(" extern_paramlist ")" ";", FOLLOW [176] -> SHIFT '(' GOTO 307
	interface_definition = "operator" operatordecl . "(" extern_paramlist ")" "const" ";", FOLLOW [176] -> SHIFT '(' GOTO 307
	typespec/L1 = . "const" typename, FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "any" "class" "^", FOLLOW [9] -> SHIFT "any" GOTO 19
	typespec/L1 = . "any" "const" "class" "^", FOLLOW [9] -> SHIFT "any" GOTO 19
	typespec/L1 = . "any" "struct" "^", FOLLOW [9] -> SHIFT "any" GOTO 19
	typespec/L1 = . "any" "const" "struct" "^", FOLLOW [9] -> SHIFT "any" GOTO 19
[219]
	operatordecl = "(" . ")", FOLLOW [185] -> SHIFT ')' GOTO 308
[220]
	operatordecl = "&" . (58), FOLLOW [185] -> REDUCE operatordecl #1 CALL operatordecl {name="&",symbol="bitand"}
[221]
	operatordecl = "->" . (49), FOLLOW [185] -> REDUCE operatordecl #1 CALL operatordecl {name="->",symbol="arrow"}
[222]
	operatordecl = "=" . (50), FOLLOW [185] -> REDUCE operatordecl #1 CALL operatordecl {name="=",symbol="assign"}
[223]
	operatordecl = "+" . (51), FOLLOW [185] -> REDUCE operatordecl #1 CALL operatordecl {name="+",symbol="plus"}
[224]
	operatordecl = "-" . (52), FOLLOW [185] -> REDUCE operatordecl #1 CALL operatordecl {name="-",symbol="minus"}
[225]
	operatordecl = "*" . (53), FOLLOW [185] -> REDUCE operatordecl #1 CALL operatordecl {name="*",symbol="mul"}
[226]
	operatordecl = "/" . (54), FOLLOW [185] -> REDUCE operatordecl #1 CALL operatordecl {name="/",symbol="div"}
[227]
	operatordecl = "%" . (55), FOLLOW [185] -> REDUCE operatordecl #1 CALL operatordecl {name="%",symbol="mod"}
[228]
	operatordecl = "&&" . (56), FOLLOW [185] -> REDUCE operatordecl #1 CALL operatordecl {name="&&",symbol="and"}
[229]
	operatordecl = "||" . (57), FOLLOW [185] -> REDUCE operatordecl #1 CALL operatordecl {name="||",symbol="or"}
[230]
	operatordecl = "|" . (59), FOLLOW [185] -> REDUCE operatordecl #1 CALL operatordecl {name="|",symbol="bitor"}
[231]
	operatordecl = "<<" . (60), FOLLOW [185] -> REDUCE operatordecl #1 CALL operatordecl {name="<<",symbol="lsh"}
[232]
	operatordecl = ">>" . (61), FOLLOW [185] -> REDUCE operatordecl #1 CALL operatordecl {name=">>",symbol="rsh"}
[233]
	operatordecl = "~" . (62), FOLLOW [185] -> REDUCE operatordecl #1 CALL operatordecl {name="~",symbol="lneg"}
[234]
	operatordecl = "!" . (63), FOLLOW [185] -> REDUCE operatordecl #1 CALL operatordecl {name="!",symbol="not"}
[235]
	operatordecl = "[" . "]", FOLLOW [185] -> SHIFT ']' GOTO 309
[236]
	operatordecl = "==" . (66), FOLLOW [185] -> REDUCE operatordecl #1 CALL operatordecl {name="==",symbol="eq"}
[237]
	operatordecl = "!=" . (67), FOLLOW [185] -> REDUCE operatordecl #1 CALL operatordecl {name="!=",symbol="ne"}
[238]
	operatordecl = ">=" . (68), FOLLOW [185] -> REDUCE operatordecl #1 CALL operatordecl {name=">=",symbol="ge"}
[239]
	operatordecl = "<=" . (69), FOLLOW [185] -> REDUCE operatordecl #1 CALL operatordecl {name="<=",symbol="le"}
[240]
	operatordecl = ">" . (70), FOLLOW [185] -> REDUCE operatordecl #1 CALL operatordecl {name=">",symbol="gt"}
[241]
	operatordecl = "<" . (71), FOLLOW [185] -> REDUCE operatordecl #1 CALL operatordecl {name="<",symbol="lt"}
[242]
	extern_paramlist = . extern_parameters, FOLLOW [186] -> GOTO 243
	extern_definition = "extern" DQSTRING "function" IDENT typespec "(" . extern_paramlist ")" ";", FOLLOW [59] -> GOTO 310
	extern_definition = "extern" DQSTRING "function" IDENT typespec "(" . extern_paramlist "..." ")" ";", FOLLOW [59] -> GOTO 310
	typespec/L1 = . typename, FOLLOW [189] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [189] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [189] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [189] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [189] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [189] -> GOTO 8
	extern_parameters = . typespec "," extern_parameters, FOLLOW [186] -> GOTO 245
	extern_parameters = . typespec IDENT "," extern_parameters, FOLLOW [186] -> GOTO 245
	extern_parameters = . typespec, FOLLOW [186] -> GOTO 245
	extern_parameters = . typespec IDENT, FOLLOW [186] -> GOTO 245
	typename/L1 = . IDENT, FOLLOW [190] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [190] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [189] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [189] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [189] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [189] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [189] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [189] -> SHIFT "const" GOTO 18
	typespec/L1 = . "any" "class" "^", FOLLOW [189] -> SHIFT "any" GOTO 19
	typespec/L1 = . "any" "const" "class" "^", FOLLOW [189] -> SHIFT "any" GOTO 19
	typespec/L1 = . "any" "struct" "^", FOLLOW [189] -> SHIFT "any" GOTO 19
	typespec/L1 = . "any" "const" "struct" "^", FOLLOW [189] -> SHIFT "any" GOTO 19
	extern_paramlist = . (7), FOLLOW [186] -> REDUCE extern_paramlist #0 CALL extern_paramdeflist
[243]
	extern_paramlist = extern_parameters . (7), FOLLOW [186] -> REDUCE extern_paramlist #1 CALL extern_paramdeflist
[244]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist . ")" ";", FOLLOW [59] -> SHIFT ')' GOTO 311
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist . "..." ")" ";", FOLLOW [59] -> SHIFT "..." GOTO 312
[245]
	extern_parameters = typespec . IDENT "," extern_parameters, FOLLOW [186] -> SHIFT IDENT GOTO 313
	extern_parameters = typespec . IDENT, FOLLOW [186] -> SHIFT IDENT GOTO 313
	extern_parameters = typespec . "," extern_parameters, FOLLOW [186] -> SHIFT ',' GOTO 314
	extern_parameters = typespec . (6), FOLLOW [186] -> REDUCE extern_parameters #1 CALL extern_paramdef
[246]
	iexpression = expression indirection IDENT . (136), FOLLOW [239] -> REDUCE iexpression #3 CALL rep_operator "->"
[247]
	expression/L13 = expression "(" expressionlist . ")", FOLLOW [239] -> SHIFT ')' GOTO 315
[248]
	expression/L13 = expression "(" ")" . (134), FOLLOW [239] -> REDUCE expression #3 CALL operator "()"
[249]
	iexpression = expression . indirection IDENT, FOLLOW [239] -> GOTO 139
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [239] -> SHIFT '(' GOTO 140
	expression/L13 = expression . "(" ")", FOLLOW [239] -> SHIFT '(' GOTO 140
	expression/L7 = expression . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 142
	expression/L7 = expression . "^" expression, FOLLOW [239] -> SHIFT '^' GOTO 143
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 144
	expression/L3 = expression . "=" expression, FOLLOW [239] -> SHIFT '=' GOTO 145
	expression/L9 = expression . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 146
	expression/L9 = expression . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 147
	expression/L10 = expression . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 148
	expression/L10 = expression . "/" expression, FOLLOW [239] -> SHIFT '/' GOTO 149
	expression/L10 = expression . "%" expression, FOLLOW [239] -> SHIFT '%' GOTO 150
	expression/L5 = expression . "&&" expression, FOLLOW [239] -> SHIFT "&&" GOTO 151
	expression/L4 = expression . "||" expression, FOLLOW [239] -> SHIFT "||" GOTO 152
	expression/L6 = expression . "|" expression, FOLLOW [239] -> SHIFT '|' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [239] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [239] -> SHIFT ">>" GOTO 155
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [239] -> SHIFT '[' GOTO 156
	expression/L8 = expression . "==" expression, FOLLOW [239] -> SHIFT "==" GOTO 157
	expression/L8 = expression . "!=" expression, FOLLOW [239] -> SHIFT "!=" GOTO 158
	expression/L8 = expression . ">=" expression, FOLLOW [239] -> SHIFT ">=" GOTO 159
	expression/L8 = expression . "<=" expression, FOLLOW [239] -> SHIFT "<=" GOTO 160
	expression/L8 = expression . ">" expression, FOLLOW [239] -> SHIFT '>' GOTO 161
	expression/L8 = expression . "<" expression, FOLLOW [239] -> SHIFT '<' GOTO 162
	expression/L3 = expression . "+=" expression, FOLLOW [239] -> SHIFT "+=" GOTO 163
	expression/L3 = expression . "-=" expression, FOLLOW [239] -> SHIFT "-=" GOTO 164
	expression/L3 = expression . "*=" expression, FOLLOW [239] -> SHIFT "*=" GOTO 165
	expression/L3 = expression . "/=" expression, FOLLOW [239] -> SHIFT "/=" GOTO 166
	expression/L3 = expression . "^=" expression, FOLLOW [239] -> SHIFT "^=" GOTO 167
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "%=" expression, FOLLOW [239] -> SHIFT "%=" GOTO 169
	expression/L3 = expression . "&&=" expression, FOLLOW [239] -> SHIFT "&&=" GOTO 170
	expression/L3 = expression . "||=" expression, FOLLOW [239] -> SHIFT "||=" GOTO 171
	expression/L3 = expression . "|=" expression, FOLLOW [239] -> SHIFT "|=" GOTO 172
	expression/L3 = expression . "<<=" expression, FOLLOW [239] -> SHIFT "<<=" GOTO 173
	expression/L3 = expression . ">>=" expression, FOLLOW [239] -> SHIFT ">>=" GOTO 174
	expression/L12 = expression . "." IDENT, FOLLOW [239] -> SHIFT '.' GOTO 175
	expression/L7 = expression "&" expression . (116), FOLLOW [239] -> REDUCE expression #3 CALL operator "&"
[250]
	iexpression = expression . indirection IDENT, FOLLOW [239] -> GOTO 139
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [239] -> SHIFT '(' GOTO 140
	expression/L13 = expression . "(" ")", FOLLOW [239] -> SHIFT '(' GOTO 140
	expression/L7 = expression . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 142
	expression/L7 = expression . "^" expression, FOLLOW [239] -> SHIFT '^' GOTO 143
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 144
	expression/L3 = expression . "=" expression, FOLLOW [239] -> SHIFT '=' GOTO 145
	expression/L9 = expression . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 146
	expression/L9 = expression . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 147
	expression/L10 = expression . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 148
	expression/L10 = expression . "/" expression, FOLLOW [239] -> SHIFT '/' GOTO 149
	expression/L10 = expression . "%" expression, FOLLOW [239] -> SHIFT '%' GOTO 150
	expression/L5 = expression . "&&" expression, FOLLOW [239] -> SHIFT "&&" GOTO 151
	expression/L4 = expression . "||" expression, FOLLOW [239] -> SHIFT "||" GOTO 152
	expression/L6 = expression . "|" expression, FOLLOW [239] -> SHIFT '|' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [239] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [239] -> SHIFT ">>" GOTO 155
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [239] -> SHIFT '[' GOTO 156
	expression/L8 = expression . "==" expression, FOLLOW [239] -> SHIFT "==" GOTO 157
	expression/L8 = expression . "!=" expression, FOLLOW [239] -> SHIFT "!=" GOTO 158
	expression/L8 = expression . ">=" expression, FOLLOW [239] -> SHIFT ">=" GOTO 159
	expression/L8 = expression . "<=" expression, FOLLOW [239] -> SHIFT "<=" GOTO 160
	expression/L8 = expression . ">" expression, FOLLOW [239] -> SHIFT '>' GOTO 161
	expression/L8 = expression . "<" expression, FOLLOW [239] -> SHIFT '<' GOTO 162
	expression/L3 = expression . "+=" expression, FOLLOW [239] -> SHIFT "+=" GOTO 163
	expression/L3 = expression . "-=" expression, FOLLOW [239] -> SHIFT "-=" GOTO 164
	expression/L3 = expression . "*=" expression, FOLLOW [239] -> SHIFT "*=" GOTO 165
	expression/L3 = expression . "/=" expression, FOLLOW [239] -> SHIFT "/=" GOTO 166
	expression/L3 = expression . "^=" expression, FOLLOW [239] -> SHIFT "^=" GOTO 167
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "%=" expression, FOLLOW [239] -> SHIFT "%=" GOTO 169
	expression/L3 = expression . "&&=" expression, FOLLOW [239] -> SHIFT "&&=" GOTO 170
	expression/L3 = expression . "||=" expression, FOLLOW [239] -> SHIFT "||=" GOTO 171
	expression/L3 = expression . "|=" expression, FOLLOW [239] -> SHIFT "|=" GOTO 172
	expression/L3 = expression . "<<=" expression, FOLLOW [239] -> SHIFT "<<=" GOTO 173
	expression/L3 = expression . ">>=" expression, FOLLOW [239] -> SHIFT ">>=" GOTO 174
	expression/L12 = expression . "." IDENT, FOLLOW [239] -> SHIFT '.' GOTO 175
	expression/L7 = expression "^" expression . (115), FOLLOW [239] -> REDUCE expression #3 CALL operator "^"
[251]
	indirection = "->" indirection . (137), FOLLOW [13] -> REDUCE indirection #2 CALL count
[252]
	iexpression = expression . indirection IDENT, FOLLOW [239] -> GOTO 139
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [239] -> SHIFT '(' GOTO 140
	expression/L13 = expression . "(" ")", FOLLOW [239] -> SHIFT '(' GOTO 140
	expression/L7 = expression . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 142
	expression/L7 = expression . "^" expression, FOLLOW [239] -> SHIFT '^' GOTO 143
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 144
	expression/L3 = expression . "=" expression, FOLLOW [239] -> SHIFT '=' GOTO 145
	expression/L9 = expression . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 146
	expression/L9 = expression . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 147
	expression/L10 = expression . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 148
	expression/L10 = expression . "/" expression, FOLLOW [239] -> SHIFT '/' GOTO 149
	expression/L10 = expression . "%" expression, FOLLOW [239] -> SHIFT '%' GOTO 150
	expression/L5 = expression . "&&" expression, FOLLOW [239] -> SHIFT "&&" GOTO 151
	expression/L4 = expression . "||" expression, FOLLOW [239] -> SHIFT "||" GOTO 152
	expression/L6 = expression . "|" expression, FOLLOW [239] -> SHIFT '|' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [239] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [239] -> SHIFT ">>" GOTO 155
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [239] -> SHIFT '[' GOTO 156
	expression/L8 = expression . "==" expression, FOLLOW [239] -> SHIFT "==" GOTO 157
	expression/L8 = expression . "!=" expression, FOLLOW [239] -> SHIFT "!=" GOTO 158
	expression/L8 = expression . ">=" expression, FOLLOW [239] -> SHIFT ">=" GOTO 159
	expression/L8 = expression . "<=" expression, FOLLOW [239] -> SHIFT "<=" GOTO 160
	expression/L8 = expression . ">" expression, FOLLOW [239] -> SHIFT '>' GOTO 161
	expression/L8 = expression . "<" expression, FOLLOW [239] -> SHIFT '<' GOTO 162
	expression/L3 = expression . "+=" expression, FOLLOW [239] -> SHIFT "+=" GOTO 163
	expression/L3 = expression . "-=" expression, FOLLOW [239] -> SHIFT "-=" GOTO 164
	expression/L3 = expression . "*=" expression, FOLLOW [239] -> SHIFT "*=" GOTO 165
	expression/L3 = expression . "/=" expression, FOLLOW [239] -> SHIFT "/=" GOTO 166
	expression/L3 = expression . "^=" expression, FOLLOW [239] -> SHIFT "^=" GOTO 167
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "%=" expression, FOLLOW [239] -> SHIFT "%=" GOTO 169
	expression/L3 = expression . "&&=" expression, FOLLOW [239] -> SHIFT "&&=" GOTO 170
	expression/L3 = expression . "||=" expression, FOLLOW [239] -> SHIFT "||=" GOTO 171
	expression/L3 = expression . "|=" expression, FOLLOW [239] -> SHIFT "|=" GOTO 172
	expression/L3 = expression . "<<=" expression, FOLLOW [239] -> SHIFT "<<=" GOTO 173
	expression/L3 = expression . ">>=" expression, FOLLOW [239] -> SHIFT ">>=" GOTO 174
	expression/L12 = expression . "." IDENT, FOLLOW [239] -> SHIFT '.' GOTO 175
	expression/L3 = expression "=" expression . (99), FOLLOW [239] -> REDUCE expression #3 CALL operator "="
[253]
	iexpression = expression . indirection IDENT, FOLLOW [239] -> GOTO 139
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [239] -> SHIFT '(' GOTO 140
	expression/L13 = expression . "(" ")", FOLLOW [239] -> SHIFT '(' GOTO 140
	expression/L7 = expression . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 142
	expression/L7 = expression . "^" expression, FOLLOW [239] -> SHIFT '^' GOTO 143
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 144
	expression/L3 = expression . "=" expression, FOLLOW [239] -> SHIFT '=' GOTO 145
	expression/L9 = expression . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 146
	expression/L9 = expression . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 147
	expression/L10 = expression . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 148
	expression/L10 = expression . "/" expression, FOLLOW [239] -> SHIFT '/' GOTO 149
	expression/L10 = expression . "%" expression, FOLLOW [239] -> SHIFT '%' GOTO 150
	expression/L5 = expression . "&&" expression, FOLLOW [239] -> SHIFT "&&" GOTO 151
	expression/L4 = expression . "||" expression, FOLLOW [239] -> SHIFT "||" GOTO 152
	expression/L6 = expression . "|" expression, FOLLOW [239] -> SHIFT '|' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [239] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [239] -> SHIFT ">>" GOTO 155
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [239] -> SHIFT '[' GOTO 156
	expression/L8 = expression . "==" expression, FOLLOW [239] -> SHIFT "==" GOTO 157
	expression/L8 = expression . "!=" expression, FOLLOW [239] -> SHIFT "!=" GOTO 158
	expression/L8 = expression . ">=" expression, FOLLOW [239] -> SHIFT ">=" GOTO 159
	expression/L8 = expression . "<=" expression, FOLLOW [239] -> SHIFT "<=" GOTO 160
	expression/L8 = expression . ">" expression, FOLLOW [239] -> SHIFT '>' GOTO 161
	expression/L8 = expression . "<" expression, FOLLOW [239] -> SHIFT '<' GOTO 162
	expression/L3 = expression . "+=" expression, FOLLOW [239] -> SHIFT "+=" GOTO 163
	expression/L3 = expression . "-=" expression, FOLLOW [239] -> SHIFT "-=" GOTO 164
	expression/L3 = expression . "*=" expression, FOLLOW [239] -> SHIFT "*=" GOTO 165
	expression/L3 = expression . "/=" expression, FOLLOW [239] -> SHIFT "/=" GOTO 166
	expression/L3 = expression . "^=" expression, FOLLOW [239] -> SHIFT "^=" GOTO 167
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "%=" expression, FOLLOW [239] -> SHIFT "%=" GOTO 169
	expression/L3 = expression . "&&=" expression, FOLLOW [239] -> SHIFT "&&=" GOTO 170
	expression/L3 = expression . "||=" expression, FOLLOW [239] -> SHIFT "||=" GOTO 171
	expression/L3 = expression . "|=" expression, FOLLOW [239] -> SHIFT "|=" GOTO 172
	expression/L3 = expression . "<<=" expression, FOLLOW [239] -> SHIFT "<<=" GOTO 173
	expression/L3 = expression . ">>=" expression, FOLLOW [239] -> SHIFT ">>=" GOTO 174
	expression/L12 = expression . "." IDENT, FOLLOW [239] -> SHIFT '.' GOTO 175
	expression/L9 = expression "+" expression . (123), FOLLOW [239] -> REDUCE expression #3 CALL operator "+"
[254]
	iexpression = expression . indirection IDENT, FOLLOW [239] -> GOTO 139
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [239] -> SHIFT '(' GOTO 140
	expression/L13 = expression . "(" ")", FOLLOW [239] -> SHIFT '(' GOTO 140
	expression/L7 = expression . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 142
	expression/L7 = expression . "^" expression, FOLLOW [239] -> SHIFT '^' GOTO 143
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 144
	expression/L3 = expression . "=" expression, FOLLOW [239] -> SHIFT '=' GOTO 145
	expression/L9 = expression . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 146
	expression/L9 = expression . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 147
	expression/L10 = expression . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 148
	expression/L10 = expression . "/" expression, FOLLOW [239] -> SHIFT '/' GOTO 149
	expression/L10 = expression . "%" expression, FOLLOW [239] -> SHIFT '%' GOTO 150
	expression/L5 = expression . "&&" expression, FOLLOW [239] -> SHIFT "&&" GOTO 151
	expression/L4 = expression . "||" expression, FOLLOW [239] -> SHIFT "||" GOTO 152
	expression/L6 = expression . "|" expression, FOLLOW [239] -> SHIFT '|' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [239] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [239] -> SHIFT ">>" GOTO 155
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [239] -> SHIFT '[' GOTO 156
	expression/L8 = expression . "==" expression, FOLLOW [239] -> SHIFT "==" GOTO 157
	expression/L8 = expression . "!=" expression, FOLLOW [239] -> SHIFT "!=" GOTO 158
	expression/L8 = expression . ">=" expression, FOLLOW [239] -> SHIFT ">=" GOTO 159
	expression/L8 = expression . "<=" expression, FOLLOW [239] -> SHIFT "<=" GOTO 160
	expression/L8 = expression . ">" expression, FOLLOW [239] -> SHIFT '>' GOTO 161
	expression/L8 = expression . "<" expression, FOLLOW [239] -> SHIFT '<' GOTO 162
	expression/L3 = expression . "+=" expression, FOLLOW [239] -> SHIFT "+=" GOTO 163
	expression/L3 = expression . "-=" expression, FOLLOW [239] -> SHIFT "-=" GOTO 164
	expression/L3 = expression . "*=" expression, FOLLOW [239] -> SHIFT "*=" GOTO 165
	expression/L3 = expression . "/=" expression, FOLLOW [239] -> SHIFT "/=" GOTO 166
	expression/L3 = expression . "^=" expression, FOLLOW [239] -> SHIFT "^=" GOTO 167
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "%=" expression, FOLLOW [239] -> SHIFT "%=" GOTO 169
	expression/L3 = expression . "&&=" expression, FOLLOW [239] -> SHIFT "&&=" GOTO 170
	expression/L3 = expression . "||=" expression, FOLLOW [239] -> SHIFT "||=" GOTO 171
	expression/L3 = expression . "|=" expression, FOLLOW [239] -> SHIFT "|=" GOTO 172
	expression/L3 = expression . "<<=" expression, FOLLOW [239] -> SHIFT "<<=" GOTO 173
	expression/L3 = expression . ">>=" expression, FOLLOW [239] -> SHIFT ">>=" GOTO 174
	expression/L12 = expression . "." IDENT, FOLLOW [239] -> SHIFT '.' GOTO 175
	expression/L9 = expression "-" expression . (124), FOLLOW [239] -> REDUCE expression #3 CALL operator "-"
[255]
	iexpression = expression . indirection IDENT, FOLLOW [239] -> GOTO 139
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [239] -> SHIFT '(' GOTO 140
	expression/L13 = expression . "(" ")", FOLLOW [239] -> SHIFT '(' GOTO 140
	expression/L7 = expression . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 142
	expression/L7 = expression . "^" expression, FOLLOW [239] -> SHIFT '^' GOTO 143
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 144
	expression/L3 = expression . "=" expression, FOLLOW [239] -> SHIFT '=' GOTO 145
	expression/L9 = expression . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 146
	expression/L9 = expression . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 147
	expression/L10 = expression . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 148
	expression/L10 = expression . "/" expression, FOLLOW [239] -> SHIFT '/' GOTO 149
	expression/L10 = expression . "%" expression, FOLLOW [239] -> SHIFT '%' GOTO 150
	expression/L5 = expression . "&&" expression, FOLLOW [239] -> SHIFT "&&" GOTO 151
	expression/L4 = expression . "||" expression, FOLLOW [239] -> SHIFT "||" GOTO 152
	expression/L6 = expression . "|" expression, FOLLOW [239] -> SHIFT '|' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [239] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [239] -> SHIFT ">>" GOTO 155
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [239] -> SHIFT '[' GOTO 156
	expression/L8 = expression . "==" expression, FOLLOW [239] -> SHIFT "==" GOTO 157
	expression/L8 = expression . "!=" expression, FOLLOW [239] -> SHIFT "!=" GOTO 158
	expression/L8 = expression . ">=" expression, FOLLOW [239] -> SHIFT ">=" GOTO 159
	expression/L8 = expression . "<=" expression, FOLLOW [239] -> SHIFT "<=" GOTO 160
	expression/L8 = expression . ">" expression, FOLLOW [239] -> SHIFT '>' GOTO 161
	expression/L8 = expression . "<" expression, FOLLOW [239] -> SHIFT '<' GOTO 162
	expression/L3 = expression . "+=" expression, FOLLOW [239] -> SHIFT "+=" GOTO 163
	expression/L3 = expression . "-=" expression, FOLLOW [239] -> SHIFT "-=" GOTO 164
	expression/L3 = expression . "*=" expression, FOLLOW [239] -> SHIFT "*=" GOTO 165
	expression/L3 = expression . "/=" expression, FOLLOW [239] -> SHIFT "/=" GOTO 166
	expression/L3 = expression . "^=" expression, FOLLOW [239] -> SHIFT "^=" GOTO 167
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "%=" expression, FOLLOW [239] -> SHIFT "%=" GOTO 169
	expression/L3 = expression . "&&=" expression, FOLLOW [239] -> SHIFT "&&=" GOTO 170
	expression/L3 = expression . "||=" expression, FOLLOW [239] -> SHIFT "||=" GOTO 171
	expression/L3 = expression . "|=" expression, FOLLOW [239] -> SHIFT "|=" GOTO 172
	expression/L3 = expression . "<<=" expression, FOLLOW [239] -> SHIFT "<<=" GOTO 173
	expression/L3 = expression . ">>=" expression, FOLLOW [239] -> SHIFT ">>=" GOTO 174
	expression/L12 = expression . "." IDENT, FOLLOW [239] -> SHIFT '.' GOTO 175
	expression/L10 = expression "*" expression . (127), FOLLOW [239] -> REDUCE expression #3 CALL operator "*"
[256]
	iexpression = expression . indirection IDENT, FOLLOW [239] -> GOTO 139
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [239] -> SHIFT '(' GOTO 140
	expression/L13 = expression . "(" ")", FOLLOW [239] -> SHIFT '(' GOTO 140
	expression/L7 = expression . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 142
	expression/L7 = expression . "^" expression, FOLLOW [239] -> SHIFT '^' GOTO 143
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 144
	expression/L3 = expression . "=" expression, FOLLOW [239] -> SHIFT '=' GOTO 145
	expression/L9 = expression . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 146
	expression/L9 = expression . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 147
	expression/L10 = expression . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 148
	expression/L10 = expression . "/" expression, FOLLOW [239] -> SHIFT '/' GOTO 149
	expression/L10 = expression . "%" expression, FOLLOW [239] -> SHIFT '%' GOTO 150
	expression/L5 = expression . "&&" expression, FOLLOW [239] -> SHIFT "&&" GOTO 151
	expression/L4 = expression . "||" expression, FOLLOW [239] -> SHIFT "||" GOTO 152
	expression/L6 = expression . "|" expression, FOLLOW [239] -> SHIFT '|' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [239] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [239] -> SHIFT ">>" GOTO 155
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [239] -> SHIFT '[' GOTO 156
	expression/L8 = expression . "==" expression, FOLLOW [239] -> SHIFT "==" GOTO 157
	expression/L8 = expression . "!=" expression, FOLLOW [239] -> SHIFT "!=" GOTO 158
	expression/L8 = expression . ">=" expression, FOLLOW [239] -> SHIFT ">=" GOTO 159
	expression/L8 = expression . "<=" expression, FOLLOW [239] -> SHIFT "<=" GOTO 160
	expression/L8 = expression . ">" expression, FOLLOW [239] -> SHIFT '>' GOTO 161
	expression/L8 = expression . "<" expression, FOLLOW [239] -> SHIFT '<' GOTO 162
	expression/L3 = expression . "+=" expression, FOLLOW [239] -> SHIFT "+=" GOTO 163
	expression/L3 = expression . "-=" expression, FOLLOW [239] -> SHIFT "-=" GOTO 164
	expression/L3 = expression . "*=" expression, FOLLOW [239] -> SHIFT "*=" GOTO 165
	expression/L3 = expression . "/=" expression, FOLLOW [239] -> SHIFT "/=" GOTO 166
	expression/L3 = expression . "^=" expression, FOLLOW [239] -> SHIFT "^=" GOTO 167
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "%=" expression, FOLLOW [239] -> SHIFT "%=" GOTO 169
	expression/L3 = expression . "&&=" expression, FOLLOW [239] -> SHIFT "&&=" GOTO 170
	expression/L3 = expression . "||=" expression, FOLLOW [239] -> SHIFT "||=" GOTO 171
	expression/L3 = expression . "|=" expression, FOLLOW [239] -> SHIFT "|=" GOTO 172
	expression/L3 = expression . "<<=" expression, FOLLOW [239] -> SHIFT "<<=" GOTO 173
	expression/L3 = expression . ">>=" expression, FOLLOW [239] -> SHIFT ">>=" GOTO 174
	expression/L12 = expression . "." IDENT, FOLLOW [239] -> SHIFT '.' GOTO 175
	expression/L10 = expression "/" expression . (128), FOLLOW [239] -> REDUCE expression #3 CALL operator "/"
[257]
	iexpression = expression . indirection IDENT, FOLLOW [239] -> GOTO 139
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [239] -> SHIFT '(' GOTO 140
	expression/L13 = expression . "(" ")", FOLLOW [239] -> SHIFT '(' GOTO 140
	expression/L7 = expression . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 142
	expression/L7 = expression . "^" expression, FOLLOW [239] -> SHIFT '^' GOTO 143
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 144
	expression/L3 = expression . "=" expression, FOLLOW [239] -> SHIFT '=' GOTO 145
	expression/L9 = expression . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 146
	expression/L9 = expression . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 147
	expression/L10 = expression . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 148
	expression/L10 = expression . "/" expression, FOLLOW [239] -> SHIFT '/' GOTO 149
	expression/L10 = expression . "%" expression, FOLLOW [239] -> SHIFT '%' GOTO 150
	expression/L5 = expression . "&&" expression, FOLLOW [239] -> SHIFT "&&" GOTO 151
	expression/L4 = expression . "||" expression, FOLLOW [239] -> SHIFT "||" GOTO 152
	expression/L6 = expression . "|" expression, FOLLOW [239] -> SHIFT '|' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [239] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [239] -> SHIFT ">>" GOTO 155
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [239] -> SHIFT '[' GOTO 156
	expression/L8 = expression . "==" expression, FOLLOW [239] -> SHIFT "==" GOTO 157
	expression/L8 = expression . "!=" expression, FOLLOW [239] -> SHIFT "!=" GOTO 158
	expression/L8 = expression . ">=" expression, FOLLOW [239] -> SHIFT ">=" GOTO 159
	expression/L8 = expression . "<=" expression, FOLLOW [239] -> SHIFT "<=" GOTO 160
	expression/L8 = expression . ">" expression, FOLLOW [239] -> SHIFT '>' GOTO 161
	expression/L8 = expression . "<" expression, FOLLOW [239] -> SHIFT '<' GOTO 162
	expression/L3 = expression . "+=" expression, FOLLOW [239] -> SHIFT "+=" GOTO 163
	expression/L3 = expression . "-=" expression, FOLLOW [239] -> SHIFT "-=" GOTO 164
	expression/L3 = expression . "*=" expression, FOLLOW [239] -> SHIFT "*=" GOTO 165
	expression/L3 = expression . "/=" expression, FOLLOW [239] -> SHIFT "/=" GOTO 166
	expression/L3 = expression . "^=" expression, FOLLOW [239] -> SHIFT "^=" GOTO 167
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "%=" expression, FOLLOW [239] -> SHIFT "%=" GOTO 169
	expression/L3 = expression . "&&=" expression, FOLLOW [239] -> SHIFT "&&=" GOTO 170
	expression/L3 = expression . "||=" expression, FOLLOW [239] -> SHIFT "||=" GOTO 171
	expression/L3 = expression . "|=" expression, FOLLOW [239] -> SHIFT "|=" GOTO 172
	expression/L3 = expression . "<<=" expression, FOLLOW [239] -> SHIFT "<<=" GOTO 173
	expression/L3 = expression . ">>=" expression, FOLLOW [239] -> SHIFT ">>=" GOTO 174
	expression/L12 = expression . "." IDENT, FOLLOW [239] -> SHIFT '.' GOTO 175
	expression/L10 = expression "%" expression . (129), FOLLOW [239] -> REDUCE expression #3 CALL operator "%"
[258]
	iexpression = expression . indirection IDENT, FOLLOW [239] -> GOTO 139
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [239] -> SHIFT '(' GOTO 140
	expression/L13 = expression . "(" ")", FOLLOW [239] -> SHIFT '(' GOTO 140
	expression/L7 = expression . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 142
	expression/L7 = expression . "^" expression, FOLLOW [239] -> SHIFT '^' GOTO 143
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 144
	expression/L3 = expression . "=" expression, FOLLOW [239] -> SHIFT '=' GOTO 145
	expression/L9 = expression . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 146
	expression/L9 = expression . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 147
	expression/L10 = expression . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 148
	expression/L10 = expression . "/" expression, FOLLOW [239] -> SHIFT '/' GOTO 149
	expression/L10 = expression . "%" expression, FOLLOW [239] -> SHIFT '%' GOTO 150
	expression/L5 = expression . "&&" expression, FOLLOW [239] -> SHIFT "&&" GOTO 151
	expression/L4 = expression . "||" expression, FOLLOW [239] -> SHIFT "||" GOTO 152
	expression/L6 = expression . "|" expression, FOLLOW [239] -> SHIFT '|' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [239] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [239] -> SHIFT ">>" GOTO 155
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [239] -> SHIFT '[' GOTO 156
	expression/L8 = expression . "==" expression, FOLLOW [239] -> SHIFT "==" GOTO 157
	expression/L8 = expression . "!=" expression, FOLLOW [239] -> SHIFT "!=" GOTO 158
	expression/L8 = expression . ">=" expression, FOLLOW [239] -> SHIFT ">=" GOTO 159
	expression/L8 = expression . "<=" expression, FOLLOW [239] -> SHIFT "<=" GOTO 160
	expression/L8 = expression . ">" expression, FOLLOW [239] -> SHIFT '>' GOTO 161
	expression/L8 = expression . "<" expression, FOLLOW [239] -> SHIFT '<' GOTO 162
	expression/L3 = expression . "+=" expression, FOLLOW [239] -> SHIFT "+=" GOTO 163
	expression/L3 = expression . "-=" expression, FOLLOW [239] -> SHIFT "-=" GOTO 164
	expression/L3 = expression . "*=" expression, FOLLOW [239] -> SHIFT "*=" GOTO 165
	expression/L3 = expression . "/=" expression, FOLLOW [239] -> SHIFT "/=" GOTO 166
	expression/L3 = expression . "^=" expression, FOLLOW [239] -> SHIFT "^=" GOTO 167
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "%=" expression, FOLLOW [239] -> SHIFT "%=" GOTO 169
	expression/L3 = expression . "&&=" expression, FOLLOW [239] -> SHIFT "&&=" GOTO 170
	expression/L3 = expression . "||=" expression, FOLLOW [239] -> SHIFT "||=" GOTO 171
	expression/L3 = expression . "|=" expression, FOLLOW [239] -> SHIFT "|=" GOTO 172
	expression/L3 = expression . "<<=" expression, FOLLOW [239] -> SHIFT "<<=" GOTO 173
	expression/L3 = expression . ">>=" expression, FOLLOW [239] -> SHIFT ">>=" GOTO 174
	expression/L12 = expression . "." IDENT, FOLLOW [239] -> SHIFT '.' GOTO 175
	expression/L5 = expression "&&" expression . (113), FOLLOW [239] -> REDUCE expression #3 CALL operator "&&"
[259]
	iexpression = expression . indirection IDENT, FOLLOW [239] -> GOTO 139
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [239] -> SHIFT '(' GOTO 140
	expression/L13 = expression . "(" ")", FOLLOW [239] -> SHIFT '(' GOTO 140
	expression/L7 = expression . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 142
	expression/L7 = expression . "^" expression, FOLLOW [239] -> SHIFT '^' GOTO 143
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 144
	expression/L3 = expression . "=" expression, FOLLOW [239] -> SHIFT '=' GOTO 145
	expression/L9 = expression . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 146
	expression/L9 = expression . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 147
	expression/L10 = expression . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 148
	expression/L10 = expression . "/" expression, FOLLOW [239] -> SHIFT '/' GOTO 149
	expression/L10 = expression . "%" expression, FOLLOW [239] -> SHIFT '%' GOTO 150
	expression/L5 = expression . "&&" expression, FOLLOW [239] -> SHIFT "&&" GOTO 151
	expression/L4 = expression . "||" expression, FOLLOW [239] -> SHIFT "||" GOTO 152
	expression/L6 = expression . "|" expression, FOLLOW [239] -> SHIFT '|' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [239] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [239] -> SHIFT ">>" GOTO 155
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [239] -> SHIFT '[' GOTO 156
	expression/L8 = expression . "==" expression, FOLLOW [239] -> SHIFT "==" GOTO 157
	expression/L8 = expression . "!=" expression, FOLLOW [239] -> SHIFT "!=" GOTO 158
	expression/L8 = expression . ">=" expression, FOLLOW [239] -> SHIFT ">=" GOTO 159
	expression/L8 = expression . "<=" expression, FOLLOW [239] -> SHIFT "<=" GOTO 160
	expression/L8 = expression . ">" expression, FOLLOW [239] -> SHIFT '>' GOTO 161
	expression/L8 = expression . "<" expression, FOLLOW [239] -> SHIFT '<' GOTO 162
	expression/L3 = expression . "+=" expression, FOLLOW [239] -> SHIFT "+=" GOTO 163
	expression/L3 = expression . "-=" expression, FOLLOW [239] -> SHIFT "-=" GOTO 164
	expression/L3 = expression . "*=" expression, FOLLOW [239] -> SHIFT "*=" GOTO 165
	expression/L3 = expression . "/=" expression, FOLLOW [239] -> SHIFT "/=" GOTO 166
	expression/L3 = expression . "^=" expression, FOLLOW [239] -> SHIFT "^=" GOTO 167
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "%=" expression, FOLLOW [239] -> SHIFT "%=" GOTO 169
	expression/L3 = expression . "&&=" expression, FOLLOW [239] -> SHIFT "&&=" GOTO 170
	expression/L3 = expression . "||=" expression, FOLLOW [239] -> SHIFT "||=" GOTO 171
	expression/L3 = expression . "|=" expression, FOLLOW [239] -> SHIFT "|=" GOTO 172
	expression/L3 = expression . "<<=" expression, FOLLOW [239] -> SHIFT "<<=" GOTO 173
	expression/L3 = expression . ">>=" expression, FOLLOW [239] -> SHIFT ">>=" GOTO 174
	expression/L12 = expression . "." IDENT, FOLLOW [239] -> SHIFT '.' GOTO 175
	expression/L4 = expression "||" expression . (112), FOLLOW [239] -> REDUCE expression #3 CALL operator "||"
[260]
	iexpression = expression . indirection IDENT, FOLLOW [239] -> GOTO 139
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [239] -> SHIFT '(' GOTO 140
	expression/L13 = expression . "(" ")", FOLLOW [239] -> SHIFT '(' GOTO 140
	expression/L7 = expression . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 142
	expression/L7 = expression . "^" expression, FOLLOW [239] -> SHIFT '^' GOTO 143
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 144
	expression/L3 = expression . "=" expression, FOLLOW [239] -> SHIFT '=' GOTO 145
	expression/L9 = expression . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 146
	expression/L9 = expression . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 147
	expression/L10 = expression . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 148
	expression/L10 = expression . "/" expression, FOLLOW [239] -> SHIFT '/' GOTO 149
	expression/L10 = expression . "%" expression, FOLLOW [239] -> SHIFT '%' GOTO 150
	expression/L5 = expression . "&&" expression, FOLLOW [239] -> SHIFT "&&" GOTO 151
	expression/L4 = expression . "||" expression, FOLLOW [239] -> SHIFT "||" GOTO 152
	expression/L6 = expression . "|" expression, FOLLOW [239] -> SHIFT '|' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [239] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [239] -> SHIFT ">>" GOTO 155
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [239] -> SHIFT '[' GOTO 156
	expression/L8 = expression . "==" expression, FOLLOW [239] -> SHIFT "==" GOTO 157
	expression/L8 = expression . "!=" expression, FOLLOW [239] -> SHIFT "!=" GOTO 158
	expression/L8 = expression . ">=" expression, FOLLOW [239] -> SHIFT ">=" GOTO 159
	expression/L8 = expression . "<=" expression, FOLLOW [239] -> SHIFT "<=" GOTO 160
	expression/L8 = expression . ">" expression, FOLLOW [239] -> SHIFT '>' GOTO 161
	expression/L8 = expression . "<" expression, FOLLOW [239] -> SHIFT '<' GOTO 162
	expression/L3 = expression . "+=" expression, FOLLOW [239] -> SHIFT "+=" GOTO 163
	expression/L3 = expression . "-=" expression, FOLLOW [239] -> SHIFT "-=" GOTO 164
	expression/L3 = expression . "*=" expression, FOLLOW [239] -> SHIFT "*=" GOTO 165
	expression/L3 = expression . "/=" expression, FOLLOW [239] -> SHIFT "/=" GOTO 166
	expression/L3 = expression . "^=" expression, FOLLOW [239] -> SHIFT "^=" GOTO 167
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "%=" expression, FOLLOW [239] -> SHIFT "%=" GOTO 169
	expression/L3 = expression . "&&=" expression, FOLLOW [239] -> SHIFT "&&=" GOTO 170
	expression/L3 = expression . "||=" expression, FOLLOW [239] -> SHIFT "||=" GOTO 171
	expression/L3 = expression . "|=" expression, FOLLOW [239] -> SHIFT "|=" GOTO 172
	expression/L3 = expression . "<<=" expression, FOLLOW [239] -> SHIFT "<<=" GOTO 173
	expression/L3 = expression . ">>=" expression, FOLLOW [239] -> SHIFT ">>=" GOTO 174
	expression/L12 = expression . "." IDENT, FOLLOW [239] -> SHIFT '.' GOTO 175
	expression/L6 = expression "|" expression . (114), FOLLOW [239] -> REDUCE expression #3 CALL operator "|"
[261]
	iexpression = expression . indirection IDENT, FOLLOW [239] -> GOTO 139
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [239] -> SHIFT '(' GOTO 140
	expression/L13 = expression . "(" ")", FOLLOW [239] -> SHIFT '(' GOTO 140
	expression/L7 = expression . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 142
	expression/L7 = expression . "^" expression, FOLLOW [239] -> SHIFT '^' GOTO 143
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 144
	expression/L3 = expression . "=" expression, FOLLOW [239] -> SHIFT '=' GOTO 145
	expression/L9 = expression . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 146
	expression/L9 = expression . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 147
	expression/L10 = expression . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 148
	expression/L10 = expression . "/" expression, FOLLOW [239] -> SHIFT '/' GOTO 149
	expression/L10 = expression . "%" expression, FOLLOW [239] -> SHIFT '%' GOTO 150
	expression/L5 = expression . "&&" expression, FOLLOW [239] -> SHIFT "&&" GOTO 151
	expression/L4 = expression . "||" expression, FOLLOW [239] -> SHIFT "||" GOTO 152
	expression/L6 = expression . "|" expression, FOLLOW [239] -> SHIFT '|' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [239] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [239] -> SHIFT ">>" GOTO 155
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [239] -> SHIFT '[' GOTO 156
	expression/L8 = expression . "==" expression, FOLLOW [239] -> SHIFT "==" GOTO 157
	expression/L8 = expression . "!=" expression, FOLLOW [239] -> SHIFT "!=" GOTO 158
	expression/L8 = expression . ">=" expression, FOLLOW [239] -> SHIFT ">=" GOTO 159
	expression/L8 = expression . "<=" expression, FOLLOW [239] -> SHIFT "<=" GOTO 160
	expression/L8 = expression . ">" expression, FOLLOW [239] -> SHIFT '>' GOTO 161
	expression/L8 = expression . "<" expression, FOLLOW [239] -> SHIFT '<' GOTO 162
	expression/L3 = expression . "+=" expression, FOLLOW [239] -> SHIFT "+=" GOTO 163
	expression/L3 = expression . "-=" expression, FOLLOW [239] -> SHIFT "-=" GOTO 164
	expression/L3 = expression . "*=" expression, FOLLOW [239] -> SHIFT "*=" GOTO 165
	expression/L3 = expression . "/=" expression, FOLLOW [239] -> SHIFT "/=" GOTO 166
	expression/L3 = expression . "^=" expression, FOLLOW [239] -> SHIFT "^=" GOTO 167
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "%=" expression, FOLLOW [239] -> SHIFT "%=" GOTO 169
	expression/L3 = expression . "&&=" expression, FOLLOW [239] -> SHIFT "&&=" GOTO 170
	expression/L3 = expression . "||=" expression, FOLLOW [239] -> SHIFT "||=" GOTO 171
	expression/L3 = expression . "|=" expression, FOLLOW [239] -> SHIFT "|=" GOTO 172
	expression/L3 = expression . "<<=" expression, FOLLOW [239] -> SHIFT "<<=" GOTO 173
	expression/L3 = expression . ">>=" expression, FOLLOW [239] -> SHIFT ">>=" GOTO 174
	expression/L12 = expression . "." IDENT, FOLLOW [239] -> SHIFT '.' GOTO 175
	expression/L11 = expression "<<" expression . (130), FOLLOW [239] -> REDUCE expression #3 CALL operator "<<"
[262]
	iexpression = expression . indirection IDENT, FOLLOW [239] -> GOTO 139
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [239] -> SHIFT '(' GOTO 140
	expression/L13 = expression . "(" ")", FOLLOW [239] -> SHIFT '(' GOTO 140
	expression/L7 = expression . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 142
	expression/L7 = expression . "^" expression, FOLLOW [239] -> SHIFT '^' GOTO 143
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 144
	expression/L3 = expression . "=" expression, FOLLOW [239] -> SHIFT '=' GOTO 145
	expression/L9 = expression . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 146
	expression/L9 = expression . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 147
	expression/L10 = expression . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 148
	expression/L10 = expression . "/" expression, FOLLOW [239] -> SHIFT '/' GOTO 149
	expression/L10 = expression . "%" expression, FOLLOW [239] -> SHIFT '%' GOTO 150
	expression/L5 = expression . "&&" expression, FOLLOW [239] -> SHIFT "&&" GOTO 151
	expression/L4 = expression . "||" expression, FOLLOW [239] -> SHIFT "||" GOTO 152
	expression/L6 = expression . "|" expression, FOLLOW [239] -> SHIFT '|' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [239] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [239] -> SHIFT ">>" GOTO 155
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [239] -> SHIFT '[' GOTO 156
	expression/L8 = expression . "==" expression, FOLLOW [239] -> SHIFT "==" GOTO 157
	expression/L8 = expression . "!=" expression, FOLLOW [239] -> SHIFT "!=" GOTO 158
	expression/L8 = expression . ">=" expression, FOLLOW [239] -> SHIFT ">=" GOTO 159
	expression/L8 = expression . "<=" expression, FOLLOW [239] -> SHIFT "<=" GOTO 160
	expression/L8 = expression . ">" expression, FOLLOW [239] -> SHIFT '>' GOTO 161
	expression/L8 = expression . "<" expression, FOLLOW [239] -> SHIFT '<' GOTO 162
	expression/L3 = expression . "+=" expression, FOLLOW [239] -> SHIFT "+=" GOTO 163
	expression/L3 = expression . "-=" expression, FOLLOW [239] -> SHIFT "-=" GOTO 164
	expression/L3 = expression . "*=" expression, FOLLOW [239] -> SHIFT "*=" GOTO 165
	expression/L3 = expression . "/=" expression, FOLLOW [239] -> SHIFT "/=" GOTO 166
	expression/L3 = expression . "^=" expression, FOLLOW [239] -> SHIFT "^=" GOTO 167
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "%=" expression, FOLLOW [239] -> SHIFT "%=" GOTO 169
	expression/L3 = expression . "&&=" expression, FOLLOW [239] -> SHIFT "&&=" GOTO 170
	expression/L3 = expression . "||=" expression, FOLLOW [239] -> SHIFT "||=" GOTO 171
	expression/L3 = expression . "|=" expression, FOLLOW [239] -> SHIFT "|=" GOTO 172
	expression/L3 = expression . "<<=" expression, FOLLOW [239] -> SHIFT "<<=" GOTO 173
	expression/L3 = expression . ">>=" expression, FOLLOW [239] -> SHIFT ">>=" GOTO 174
	expression/L12 = expression . "." IDENT, FOLLOW [239] -> SHIFT '.' GOTO 175
	expression/L11 = expression ">>" expression . (131), FOLLOW [239] -> REDUCE expression #3 CALL operator ">>"
[263]
	expression/L13 = expression "[" expressionlist . "]", FOLLOW [239] -> SHIFT ']' GOTO 316
[264]
	iexpression = expression . indirection IDENT, FOLLOW [239] -> GOTO 139
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [239] -> SHIFT '(' GOTO 140
	expression/L13 = expression . "(" ")", FOLLOW [239] -> SHIFT '(' GOTO 140
	expression/L7 = expression . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 142
	expression/L7 = expression . "^" expression, FOLLOW [239] -> SHIFT '^' GOTO 143
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 144
	expression/L3 = expression . "=" expression, FOLLOW [239] -> SHIFT '=' GOTO 145
	expression/L9 = expression . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 146
	expression/L9 = expression . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 147
	expression/L10 = expression . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 148
	expression/L10 = expression . "/" expression, FOLLOW [239] -> SHIFT '/' GOTO 149
	expression/L10 = expression . "%" expression, FOLLOW [239] -> SHIFT '%' GOTO 150
	expression/L5 = expression . "&&" expression, FOLLOW [239] -> SHIFT "&&" GOTO 151
	expression/L4 = expression . "||" expression, FOLLOW [239] -> SHIFT "||" GOTO 152
	expression/L6 = expression . "|" expression, FOLLOW [239] -> SHIFT '|' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [239] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [239] -> SHIFT ">>" GOTO 155
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [239] -> SHIFT '[' GOTO 156
	expression/L8 = expression . "==" expression, FOLLOW [239] -> SHIFT "==" GOTO 157
	expression/L8 = expression . "!=" expression, FOLLOW [239] -> SHIFT "!=" GOTO 158
	expression/L8 = expression . ">=" expression, FOLLOW [239] -> SHIFT ">=" GOTO 159
	expression/L8 = expression . "<=" expression, FOLLOW [239] -> SHIFT "<=" GOTO 160
	expression/L8 = expression . ">" expression, FOLLOW [239] -> SHIFT '>' GOTO 161
	expression/L8 = expression . "<" expression, FOLLOW [239] -> SHIFT '<' GOTO 162
	expression/L3 = expression . "+=" expression, FOLLOW [239] -> SHIFT "+=" GOTO 163
	expression/L3 = expression . "-=" expression, FOLLOW [239] -> SHIFT "-=" GOTO 164
	expression/L3 = expression . "*=" expression, FOLLOW [239] -> SHIFT "*=" GOTO 165
	expression/L3 = expression . "/=" expression, FOLLOW [239] -> SHIFT "/=" GOTO 166
	expression/L3 = expression . "^=" expression, FOLLOW [239] -> SHIFT "^=" GOTO 167
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "%=" expression, FOLLOW [239] -> SHIFT "%=" GOTO 169
	expression/L3 = expression . "&&=" expression, FOLLOW [239] -> SHIFT "&&=" GOTO 170
	expression/L3 = expression . "||=" expression, FOLLOW [239] -> SHIFT "||=" GOTO 171
	expression/L3 = expression . "|=" expression, FOLLOW [239] -> SHIFT "|=" GOTO 172
	expression/L3 = expression . "<<=" expression, FOLLOW [239] -> SHIFT "<<=" GOTO 173
	expression/L3 = expression . ">>=" expression, FOLLOW [239] -> SHIFT ">>=" GOTO 174
	expression/L12 = expression . "." IDENT, FOLLOW [239] -> SHIFT '.' GOTO 175
	expression/L8 = expression "==" expression . (117), FOLLOW [239] -> REDUCE expression #3 CALL operator "=="
[265]
	iexpression = expression . indirection IDENT, FOLLOW [239] -> GOTO 139
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [239] -> SHIFT '(' GOTO 140
	expression/L13 = expression . "(" ")", FOLLOW [239] -> SHIFT '(' GOTO 140
	expression/L7 = expression . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 142
	expression/L7 = expression . "^" expression, FOLLOW [239] -> SHIFT '^' GOTO 143
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 144
	expression/L3 = expression . "=" expression, FOLLOW [239] -> SHIFT '=' GOTO 145
	expression/L9 = expression . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 146
	expression/L9 = expression . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 147
	expression/L10 = expression . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 148
	expression/L10 = expression . "/" expression, FOLLOW [239] -> SHIFT '/' GOTO 149
	expression/L10 = expression . "%" expression, FOLLOW [239] -> SHIFT '%' GOTO 150
	expression/L5 = expression . "&&" expression, FOLLOW [239] -> SHIFT "&&" GOTO 151
	expression/L4 = expression . "||" expression, FOLLOW [239] -> SHIFT "||" GOTO 152
	expression/L6 = expression . "|" expression, FOLLOW [239] -> SHIFT '|' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [239] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [239] -> SHIFT ">>" GOTO 155
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [239] -> SHIFT '[' GOTO 156
	expression/L8 = expression . "==" expression, FOLLOW [239] -> SHIFT "==" GOTO 157
	expression/L8 = expression . "!=" expression, FOLLOW [239] -> SHIFT "!=" GOTO 158
	expression/L8 = expression . ">=" expression, FOLLOW [239] -> SHIFT ">=" GOTO 159
	expression/L8 = expression . "<=" expression, FOLLOW [239] -> SHIFT "<=" GOTO 160
	expression/L8 = expression . ">" expression, FOLLOW [239] -> SHIFT '>' GOTO 161
	expression/L8 = expression . "<" expression, FOLLOW [239] -> SHIFT '<' GOTO 162
	expression/L3 = expression . "+=" expression, FOLLOW [239] -> SHIFT "+=" GOTO 163
	expression/L3 = expression . "-=" expression, FOLLOW [239] -> SHIFT "-=" GOTO 164
	expression/L3 = expression . "*=" expression, FOLLOW [239] -> SHIFT "*=" GOTO 165
	expression/L3 = expression . "/=" expression, FOLLOW [239] -> SHIFT "/=" GOTO 166
	expression/L3 = expression . "^=" expression, FOLLOW [239] -> SHIFT "^=" GOTO 167
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "%=" expression, FOLLOW [239] -> SHIFT "%=" GOTO 169
	expression/L3 = expression . "&&=" expression, FOLLOW [239] -> SHIFT "&&=" GOTO 170
	expression/L3 = expression . "||=" expression, FOLLOW [239] -> SHIFT "||=" GOTO 171
	expression/L3 = expression . "|=" expression, FOLLOW [239] -> SHIFT "|=" GOTO 172
	expression/L3 = expression . "<<=" expression, FOLLOW [239] -> SHIFT "<<=" GOTO 173
	expression/L3 = expression . ">>=" expression, FOLLOW [239] -> SHIFT ">>=" GOTO 174
	expression/L12 = expression . "." IDENT, FOLLOW [239] -> SHIFT '.' GOTO 175
	expression/L8 = expression "!=" expression . (118), FOLLOW [239] -> REDUCE expression #3 CALL operator "!="
[266]
	iexpression = expression . indirection IDENT, FOLLOW [239] -> GOTO 139
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [239] -> SHIFT '(' GOTO 140
	expression/L13 = expression . "(" ")", FOLLOW [239] -> SHIFT '(' GOTO 140
	expression/L7 = expression . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 142
	expression/L7 = expression . "^" expression, FOLLOW [239] -> SHIFT '^' GOTO 143
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 144
	expression/L3 = expression . "=" expression, FOLLOW [239] -> SHIFT '=' GOTO 145
	expression/L9 = expression . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 146
	expression/L9 = expression . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 147
	expression/L10 = expression . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 148
	expression/L10 = expression . "/" expression, FOLLOW [239] -> SHIFT '/' GOTO 149
	expression/L10 = expression . "%" expression, FOLLOW [239] -> SHIFT '%' GOTO 150
	expression/L5 = expression . "&&" expression, FOLLOW [239] -> SHIFT "&&" GOTO 151
	expression/L4 = expression . "||" expression, FOLLOW [239] -> SHIFT "||" GOTO 152
	expression/L6 = expression . "|" expression, FOLLOW [239] -> SHIFT '|' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [239] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [239] -> SHIFT ">>" GOTO 155
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [239] -> SHIFT '[' GOTO 156
	expression/L8 = expression . "==" expression, FOLLOW [239] -> SHIFT "==" GOTO 157
	expression/L8 = expression . "!=" expression, FOLLOW [239] -> SHIFT "!=" GOTO 158
	expression/L8 = expression . ">=" expression, FOLLOW [239] -> SHIFT ">=" GOTO 159
	expression/L8 = expression . "<=" expression, FOLLOW [239] -> SHIFT "<=" GOTO 160
	expression/L8 = expression . ">" expression, FOLLOW [239] -> SHIFT '>' GOTO 161
	expression/L8 = expression . "<" expression, FOLLOW [239] -> SHIFT '<' GOTO 162
	expression/L3 = expression . "+=" expression, FOLLOW [239] -> SHIFT "+=" GOTO 163
	expression/L3 = expression . "-=" expression, FOLLOW [239] -> SHIFT "-=" GOTO 164
	expression/L3 = expression . "*=" expression, FOLLOW [239] -> SHIFT "*=" GOTO 165
	expression/L3 = expression . "/=" expression, FOLLOW [239] -> SHIFT "/=" GOTO 166
	expression/L3 = expression . "^=" expression, FOLLOW [239] -> SHIFT "^=" GOTO 167
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "%=" expression, FOLLOW [239] -> SHIFT "%=" GOTO 169
	expression/L3 = expression . "&&=" expression, FOLLOW [239] -> SHIFT "&&=" GOTO 170
	expression/L3 = expression . "||=" expression, FOLLOW [239] -> SHIFT "||=" GOTO 171
	expression/L3 = expression . "|=" expression, FOLLOW [239] -> SHIFT "|=" GOTO 172
	expression/L3 = expression . "<<=" expression, FOLLOW [239] -> SHIFT "<<=" GOTO 173
	expression/L3 = expression . ">>=" expression, FOLLOW [239] -> SHIFT ">>=" GOTO 174
	expression/L12 = expression . "." IDENT, FOLLOW [239] -> SHIFT '.' GOTO 175
	expression/L8 = expression ">=" expression . (121), FOLLOW [239] -> REDUCE expression #3 CALL operator ">="
[267]
	iexpression = expression . indirection IDENT, FOLLOW [239] -> GOTO 139
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [239] -> SHIFT '(' GOTO 140
	expression/L13 = expression . "(" ")", FOLLOW [239] -> SHIFT '(' GOTO 140
	expression/L7 = expression . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 142
	expression/L7 = expression . "^" expression, FOLLOW [239] -> SHIFT '^' GOTO 143
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 144
	expression/L3 = expression . "=" expression, FOLLOW [239] -> SHIFT '=' GOTO 145
	expression/L9 = expression . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 146
	expression/L9 = expression . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 147
	expression/L10 = expression . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 148
	expression/L10 = expression . "/" expression, FOLLOW [239] -> SHIFT '/' GOTO 149
	expression/L10 = expression . "%" expression, FOLLOW [239] -> SHIFT '%' GOTO 150
	expression/L5 = expression . "&&" expression, FOLLOW [239] -> SHIFT "&&" GOTO 151
	expression/L4 = expression . "||" expression, FOLLOW [239] -> SHIFT "||" GOTO 152
	expression/L6 = expression . "|" expression, FOLLOW [239] -> SHIFT '|' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [239] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [239] -> SHIFT ">>" GOTO 155
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [239] -> SHIFT '[' GOTO 156
	expression/L8 = expression . "==" expression, FOLLOW [239] -> SHIFT "==" GOTO 157
	expression/L8 = expression . "!=" expression, FOLLOW [239] -> SHIFT "!=" GOTO 158
	expression/L8 = expression . ">=" expression, FOLLOW [239] -> SHIFT ">=" GOTO 159
	expression/L8 = expression . "<=" expression, FOLLOW [239] -> SHIFT "<=" GOTO 160
	expression/L8 = expression . ">" expression, FOLLOW [239] -> SHIFT '>' GOTO 161
	expression/L8 = expression . "<" expression, FOLLOW [239] -> SHIFT '<' GOTO 162
	expression/L3 = expression . "+=" expression, FOLLOW [239] -> SHIFT "+=" GOTO 163
	expression/L3 = expression . "-=" expression, FOLLOW [239] -> SHIFT "-=" GOTO 164
	expression/L3 = expression . "*=" expression, FOLLOW [239] -> SHIFT "*=" GOTO 165
	expression/L3 = expression . "/=" expression, FOLLOW [239] -> SHIFT "/=" GOTO 166
	expression/L3 = expression . "^=" expression, FOLLOW [239] -> SHIFT "^=" GOTO 167
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "%=" expression, FOLLOW [239] -> SHIFT "%=" GOTO 169
	expression/L3 = expression . "&&=" expression, FOLLOW [239] -> SHIFT "&&=" GOTO 170
	expression/L3 = expression . "||=" expression, FOLLOW [239] -> SHIFT "||=" GOTO 171
	expression/L3 = expression . "|=" expression, FOLLOW [239] -> SHIFT "|=" GOTO 172
	expression/L3 = expression . "<<=" expression, FOLLOW [239] -> SHIFT "<<=" GOTO 173
	expression/L3 = expression . ">>=" expression, FOLLOW [239] -> SHIFT ">>=" GOTO 174
	expression/L12 = expression . "." IDENT, FOLLOW [239] -> SHIFT '.' GOTO 175
	expression/L8 = expression "<=" expression . (119), FOLLOW [239] -> REDUCE expression #3 CALL operator "<="
[268]
	iexpression = expression . indirection IDENT, FOLLOW [239] -> GOTO 139
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [239] -> SHIFT '(' GOTO 140
	expression/L13 = expression . "(" ")", FOLLOW [239] -> SHIFT '(' GOTO 140
	expression/L7 = expression . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 142
	expression/L7 = expression . "^" expression, FOLLOW [239] -> SHIFT '^' GOTO 143
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 144
	expression/L3 = expression . "=" expression, FOLLOW [239] -> SHIFT '=' GOTO 145
	expression/L9 = expression . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 146
	expression/L9 = expression . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 147
	expression/L10 = expression . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 148
	expression/L10 = expression . "/" expression, FOLLOW [239] -> SHIFT '/' GOTO 149
	expression/L10 = expression . "%" expression, FOLLOW [239] -> SHIFT '%' GOTO 150
	expression/L5 = expression . "&&" expression, FOLLOW [239] -> SHIFT "&&" GOTO 151
	expression/L4 = expression . "||" expression, FOLLOW [239] -> SHIFT "||" GOTO 152
	expression/L6 = expression . "|" expression, FOLLOW [239] -> SHIFT '|' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [239] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [239] -> SHIFT ">>" GOTO 155
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [239] -> SHIFT '[' GOTO 156
	expression/L8 = expression . "==" expression, FOLLOW [239] -> SHIFT "==" GOTO 157
	expression/L8 = expression . "!=" expression, FOLLOW [239] -> SHIFT "!=" GOTO 158
	expression/L8 = expression . ">=" expression, FOLLOW [239] -> SHIFT ">=" GOTO 159
	expression/L8 = expression . "<=" expression, FOLLOW [239] -> SHIFT "<=" GOTO 160
	expression/L8 = expression . ">" expression, FOLLOW [239] -> SHIFT '>' GOTO 161
	expression/L8 = expression . "<" expression, FOLLOW [239] -> SHIFT '<' GOTO 162
	expression/L3 = expression . "+=" expression, FOLLOW [239] -> SHIFT "+=" GOTO 163
	expression/L3 = expression . "-=" expression, FOLLOW [239] -> SHIFT "-=" GOTO 164
	expression/L3 = expression . "*=" expression, FOLLOW [239] -> SHIFT "*=" GOTO 165
	expression/L3 = expression . "/=" expression, FOLLOW [239] -> SHIFT "/=" GOTO 166
	expression/L3 = expression . "^=" expression, FOLLOW [239] -> SHIFT "^=" GOTO 167
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "%=" expression, FOLLOW [239] -> SHIFT "%=" GOTO 169
	expression/L3 = expression . "&&=" expression, FOLLOW [239] -> SHIFT "&&=" GOTO 170
	expression/L3 = expression . "||=" expression, FOLLOW [239] -> SHIFT "||=" GOTO 171
	expression/L3 = expression . "|=" expression, FOLLOW [239] -> SHIFT "|=" GOTO 172
	expression/L3 = expression . "<<=" expression, FOLLOW [239] -> SHIFT "<<=" GOTO 173
	expression/L3 = expression . ">>=" expression, FOLLOW [239] -> SHIFT ">>=" GOTO 174
	expression/L12 = expression . "." IDENT, FOLLOW [239] -> SHIFT '.' GOTO 175
	expression/L8 = expression ">" expression . (122), FOLLOW [239] -> REDUCE expression #3 CALL operator ">"
[269]
	iexpression = expression . indirection IDENT, FOLLOW [239] -> GOTO 139
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [239] -> SHIFT '(' GOTO 140
	expression/L13 = expression . "(" ")", FOLLOW [239] -> SHIFT '(' GOTO 140
	expression/L7 = expression . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 142
	expression/L7 = expression . "^" expression, FOLLOW [239] -> SHIFT '^' GOTO 143
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 144
	expression/L3 = expression . "=" expression, FOLLOW [239] -> SHIFT '=' GOTO 145
	expression/L9 = expression . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 146
	expression/L9 = expression . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 147
	expression/L10 = expression . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 148
	expression/L10 = expression . "/" expression, FOLLOW [239] -> SHIFT '/' GOTO 149
	expression/L10 = expression . "%" expression, FOLLOW [239] -> SHIFT '%' GOTO 150
	expression/L5 = expression . "&&" expression, FOLLOW [239] -> SHIFT "&&" GOTO 151
	expression/L4 = expression . "||" expression, FOLLOW [239] -> SHIFT "||" GOTO 152
	expression/L6 = expression . "|" expression, FOLLOW [239] -> SHIFT '|' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [239] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [239] -> SHIFT ">>" GOTO 155
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [239] -> SHIFT '[' GOTO 156
	expression/L8 = expression . "==" expression, FOLLOW [239] -> SHIFT "==" GOTO 157
	expression/L8 = expression . "!=" expression, FOLLOW [239] -> SHIFT "!=" GOTO 158
	expression/L8 = expression . ">=" expression, FOLLOW [239] -> SHIFT ">=" GOTO 159
	expression/L8 = expression . "<=" expression, FOLLOW [239] -> SHIFT "<=" GOTO 160
	expression/L8 = expression . ">" expression, FOLLOW [239] -> SHIFT '>' GOTO 161
	expression/L8 = expression . "<" expression, FOLLOW [239] -> SHIFT '<' GOTO 162
	expression/L3 = expression . "+=" expression, FOLLOW [239] -> SHIFT "+=" GOTO 163
	expression/L3 = expression . "-=" expression, FOLLOW [239] -> SHIFT "-=" GOTO 164
	expression/L3 = expression . "*=" expression, FOLLOW [239] -> SHIFT "*=" GOTO 165
	expression/L3 = expression . "/=" expression, FOLLOW [239] -> SHIFT "/=" GOTO 166
	expression/L3 = expression . "^=" expression, FOLLOW [239] -> SHIFT "^=" GOTO 167
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "%=" expression, FOLLOW [239] -> SHIFT "%=" GOTO 169
	expression/L3 = expression . "&&=" expression, FOLLOW [239] -> SHIFT "&&=" GOTO 170
	expression/L3 = expression . "||=" expression, FOLLOW [239] -> SHIFT "||=" GOTO 171
	expression/L3 = expression . "|=" expression, FOLLOW [239] -> SHIFT "|=" GOTO 172
	expression/L3 = expression . "<<=" expression, FOLLOW [239] -> SHIFT "<<=" GOTO 173
	expression/L3 = expression . ">>=" expression, FOLLOW [239] -> SHIFT ">>=" GOTO 174
	expression/L12 = expression . "." IDENT, FOLLOW [239] -> SHIFT '.' GOTO 175
	expression/L8 = expression "<" expression . (120), FOLLOW [239] -> REDUCE expression #3 CALL operator "<"
[270]
	iexpression = expression . indirection IDENT, FOLLOW [239] -> GOTO 139
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [239] -> SHIFT '(' GOTO 140
	expression/L13 = expression . "(" ")", FOLLOW [239] -> SHIFT '(' GOTO 140
	expression/L7 = expression . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 142
	expression/L7 = expression . "^" expression, FOLLOW [239] -> SHIFT '^' GOTO 143
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 144
	expression/L3 = expression . "=" expression, FOLLOW [239] -> SHIFT '=' GOTO 145
	expression/L9 = expression . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 146
	expression/L9 = expression . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 147
	expression/L10 = expression . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 148
	expression/L10 = expression . "/" expression, FOLLOW [239] -> SHIFT '/' GOTO 149
	expression/L10 = expression . "%" expression, FOLLOW [239] -> SHIFT '%' GOTO 150
	expression/L5 = expression . "&&" expression, FOLLOW [239] -> SHIFT "&&" GOTO 151
	expression/L4 = expression . "||" expression, FOLLOW [239] -> SHIFT "||" GOTO 152
	expression/L6 = expression . "|" expression, FOLLOW [239] -> SHIFT '|' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [239] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [239] -> SHIFT ">>" GOTO 155
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [239] -> SHIFT '[' GOTO 156
	expression/L8 = expression . "==" expression, FOLLOW [239] -> SHIFT "==" GOTO 157
	expression/L8 = expression . "!=" expression, FOLLOW [239] -> SHIFT "!=" GOTO 158
	expression/L8 = expression . ">=" expression, FOLLOW [239] -> SHIFT ">=" GOTO 159
	expression/L8 = expression . "<=" expression, FOLLOW [239] -> SHIFT "<=" GOTO 160
	expression/L8 = expression . ">" expression, FOLLOW [239] -> SHIFT '>' GOTO 161
	expression/L8 = expression . "<" expression, FOLLOW [239] -> SHIFT '<' GOTO 162
	expression/L3 = expression . "+=" expression, FOLLOW [239] -> SHIFT "+=" GOTO 163
	expression/L3 = expression . "-=" expression, FOLLOW [239] -> SHIFT "-=" GOTO 164
	expression/L3 = expression . "*=" expression, FOLLOW [239] -> SHIFT "*=" GOTO 165
	expression/L3 = expression . "/=" expression, FOLLOW [239] -> SHIFT "/=" GOTO 166
	expression/L3 = expression . "^=" expression, FOLLOW [239] -> SHIFT "^=" GOTO 167
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "%=" expression, FOLLOW [239] -> SHIFT "%=" GOTO 169
	expression/L3 = expression . "&&=" expression, FOLLOW [239] -> SHIFT "&&=" GOTO 170
	expression/L3 = expression . "||=" expression, FOLLOW [239] -> SHIFT "||=" GOTO 171
	expression/L3 = expression . "|=" expression, FOLLOW [239] -> SHIFT "|=" GOTO 172
	expression/L3 = expression . "<<=" expression, FOLLOW [239] -> SHIFT "<<=" GOTO 173
	expression/L3 = expression . ">>=" expression, FOLLOW [239] -> SHIFT ">>=" GOTO 174
	expression/L12 = expression . "." IDENT, FOLLOW [239] -> SHIFT '.' GOTO 175
	expression/L3 = expression "+=" expression . (100), FOLLOW [239] -> REDUCE expression #3 CALL assign_operator "+"
[271]
	iexpression = expression . indirection IDENT, FOLLOW [239] -> GOTO 139
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [239] -> SHIFT '(' GOTO 140
	expression/L13 = expression . "(" ")", FOLLOW [239] -> SHIFT '(' GOTO 140
	expression/L7 = expression . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 142
	expression/L7 = expression . "^" expression, FOLLOW [239] -> SHIFT '^' GOTO 143
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 144
	expression/L3 = expression . "=" expression, FOLLOW [239] -> SHIFT '=' GOTO 145
	expression/L9 = expression . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 146
	expression/L9 = expression . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 147
	expression/L10 = expression . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 148
	expression/L10 = expression . "/" expression, FOLLOW [239] -> SHIFT '/' GOTO 149
	expression/L10 = expression . "%" expression, FOLLOW [239] -> SHIFT '%' GOTO 150
	expression/L5 = expression . "&&" expression, FOLLOW [239] -> SHIFT "&&" GOTO 151
	expression/L4 = expression . "||" expression, FOLLOW [239] -> SHIFT "||" GOTO 152
	expression/L6 = expression . "|" expression, FOLLOW [239] -> SHIFT '|' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [239] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [239] -> SHIFT ">>" GOTO 155
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [239] -> SHIFT '[' GOTO 156
	expression/L8 = expression . "==" expression, FOLLOW [239] -> SHIFT "==" GOTO 157
	expression/L8 = expression . "!=" expression, FOLLOW [239] -> SHIFT "!=" GOTO 158
	expression/L8 = expression . ">=" expression, FOLLOW [239] -> SHIFT ">=" GOTO 159
	expression/L8 = expression . "<=" expression, FOLLOW [239] -> SHIFT "<=" GOTO 160
	expression/L8 = expression . ">" expression, FOLLOW [239] -> SHIFT '>' GOTO 161
	expression/L8 = expression . "<" expression, FOLLOW [239] -> SHIFT '<' GOTO 162
	expression/L3 = expression . "+=" expression, FOLLOW [239] -> SHIFT "+=" GOTO 163
	expression/L3 = expression . "-=" expression, FOLLOW [239] -> SHIFT "-=" GOTO 164
	expression/L3 = expression . "*=" expression, FOLLOW [239] -> SHIFT "*=" GOTO 165
	expression/L3 = expression . "/=" expression, FOLLOW [239] -> SHIFT "/=" GOTO 166
	expression/L3 = expression . "^=" expression, FOLLOW [239] -> SHIFT "^=" GOTO 167
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "%=" expression, FOLLOW [239] -> SHIFT "%=" GOTO 169
	expression/L3 = expression . "&&=" expression, FOLLOW [239] -> SHIFT "&&=" GOTO 170
	expression/L3 = expression . "||=" expression, FOLLOW [239] -> SHIFT "||=" GOTO 171
	expression/L3 = expression . "|=" expression, FOLLOW [239] -> SHIFT "|=" GOTO 172
	expression/L3 = expression . "<<=" expression, FOLLOW [239] -> SHIFT "<<=" GOTO 173
	expression/L3 = expression . ">>=" expression, FOLLOW [239] -> SHIFT ">>=" GOTO 174
	expression/L12 = expression . "." IDENT, FOLLOW [239] -> SHIFT '.' GOTO 175
	expression/L3 = expression "-=" expression . (101), FOLLOW [239] -> REDUCE expression #3 CALL assign_operator "-"
[272]
	iexpression = expression . indirection IDENT, FOLLOW [239] -> GOTO 139
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [239] -> SHIFT '(' GOTO 140
	expression/L13 = expression . "(" ")", FOLLOW [239] -> SHIFT '(' GOTO 140
	expression/L7 = expression . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 142
	expression/L7 = expression . "^" expression, FOLLOW [239] -> SHIFT '^' GOTO 143
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 144
	expression/L3 = expression . "=" expression, FOLLOW [239] -> SHIFT '=' GOTO 145
	expression/L9 = expression . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 146
	expression/L9 = expression . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 147
	expression/L10 = expression . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 148
	expression/L10 = expression . "/" expression, FOLLOW [239] -> SHIFT '/' GOTO 149
	expression/L10 = expression . "%" expression, FOLLOW [239] -> SHIFT '%' GOTO 150
	expression/L5 = expression . "&&" expression, FOLLOW [239] -> SHIFT "&&" GOTO 151
	expression/L4 = expression . "||" expression, FOLLOW [239] -> SHIFT "||" GOTO 152
	expression/L6 = expression . "|" expression, FOLLOW [239] -> SHIFT '|' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [239] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [239] -> SHIFT ">>" GOTO 155
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [239] -> SHIFT '[' GOTO 156
	expression/L8 = expression . "==" expression, FOLLOW [239] -> SHIFT "==" GOTO 157
	expression/L8 = expression . "!=" expression, FOLLOW [239] -> SHIFT "!=" GOTO 158
	expression/L8 = expression . ">=" expression, FOLLOW [239] -> SHIFT ">=" GOTO 159
	expression/L8 = expression . "<=" expression, FOLLOW [239] -> SHIFT "<=" GOTO 160
	expression/L8 = expression . ">" expression, FOLLOW [239] -> SHIFT '>' GOTO 161
	expression/L8 = expression . "<" expression, FOLLOW [239] -> SHIFT '<' GOTO 162
	expression/L3 = expression . "+=" expression, FOLLOW [239] -> SHIFT "+=" GOTO 163
	expression/L3 = expression . "-=" expression, FOLLOW [239] -> SHIFT "-=" GOTO 164
	expression/L3 = expression . "*=" expression, FOLLOW [239] -> SHIFT "*=" GOTO 165
	expression/L3 = expression . "/=" expression, FOLLOW [239] -> SHIFT "/=" GOTO 166
	expression/L3 = expression . "^=" expression, FOLLOW [239] -> SHIFT "^=" GOTO 167
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "%=" expression, FOLLOW [239] -> SHIFT "%=" GOTO 169
	expression/L3 = expression . "&&=" expression, FOLLOW [239] -> SHIFT "&&=" GOTO 170
	expression/L3 = expression . "||=" expression, FOLLOW [239] -> SHIFT "||=" GOTO 171
	expression/L3 = expression . "|=" expression, FOLLOW [239] -> SHIFT "|=" GOTO 172
	expression/L3 = expression . "<<=" expression, FOLLOW [239] -> SHIFT "<<=" GOTO 173
	expression/L3 = expression . ">>=" expression, FOLLOW [239] -> SHIFT ">>=" GOTO 174
	expression/L12 = expression . "." IDENT, FOLLOW [239] -> SHIFT '.' GOTO 175
	expression/L3 = expression "*=" expression . (102), FOLLOW [239] -> REDUCE expression #3 CALL assign_operator "*"
[273]
	iexpression = expression . indirection IDENT, FOLLOW [239] -> GOTO 139
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [239] -> SHIFT '(' GOTO 140
	expression/L13 = expression . "(" ")", FOLLOW [239] -> SHIFT '(' GOTO 140
	expression/L7 = expression . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 142
	expression/L7 = expression . "^" expression, FOLLOW [239] -> SHIFT '^' GOTO 143
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 144
	expression/L3 = expression . "=" expression, FOLLOW [239] -> SHIFT '=' GOTO 145
	expression/L9 = expression . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 146
	expression/L9 = expression . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 147
	expression/L10 = expression . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 148
	expression/L10 = expression . "/" expression, FOLLOW [239] -> SHIFT '/' GOTO 149
	expression/L10 = expression . "%" expression, FOLLOW [239] -> SHIFT '%' GOTO 150
	expression/L5 = expression . "&&" expression, FOLLOW [239] -> SHIFT "&&" GOTO 151
	expression/L4 = expression . "||" expression, FOLLOW [239] -> SHIFT "||" GOTO 152
	expression/L6 = expression . "|" expression, FOLLOW [239] -> SHIFT '|' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [239] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [239] -> SHIFT ">>" GOTO 155
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [239] -> SHIFT '[' GOTO 156
	expression/L8 = expression . "==" expression, FOLLOW [239] -> SHIFT "==" GOTO 157
	expression/L8 = expression . "!=" expression, FOLLOW [239] -> SHIFT "!=" GOTO 158
	expression/L8 = expression . ">=" expression, FOLLOW [239] -> SHIFT ">=" GOTO 159
	expression/L8 = expression . "<=" expression, FOLLOW [239] -> SHIFT "<=" GOTO 160
	expression/L8 = expression . ">" expression, FOLLOW [239] -> SHIFT '>' GOTO 161
	expression/L8 = expression . "<" expression, FOLLOW [239] -> SHIFT '<' GOTO 162
	expression/L3 = expression . "+=" expression, FOLLOW [239] -> SHIFT "+=" GOTO 163
	expression/L3 = expression . "-=" expression, FOLLOW [239] -> SHIFT "-=" GOTO 164
	expression/L3 = expression . "*=" expression, FOLLOW [239] -> SHIFT "*=" GOTO 165
	expression/L3 = expression . "/=" expression, FOLLOW [239] -> SHIFT "/=" GOTO 166
	expression/L3 = expression . "^=" expression, FOLLOW [239] -> SHIFT "^=" GOTO 167
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "%=" expression, FOLLOW [239] -> SHIFT "%=" GOTO 169
	expression/L3 = expression . "&&=" expression, FOLLOW [239] -> SHIFT "&&=" GOTO 170
	expression/L3 = expression . "||=" expression, FOLLOW [239] -> SHIFT "||=" GOTO 171
	expression/L3 = expression . "|=" expression, FOLLOW [239] -> SHIFT "|=" GOTO 172
	expression/L3 = expression . "<<=" expression, FOLLOW [239] -> SHIFT "<<=" GOTO 173
	expression/L3 = expression . ">>=" expression, FOLLOW [239] -> SHIFT ">>=" GOTO 174
	expression/L12 = expression . "." IDENT, FOLLOW [239] -> SHIFT '.' GOTO 175
	expression/L3 = expression "/=" expression . (103), FOLLOW [239] -> REDUCE expression #3 CALL assign_operator "/"
[274]
	iexpression = expression . indirection IDENT, FOLLOW [239] -> GOTO 139
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [239] -> SHIFT '(' GOTO 140
	expression/L13 = expression . "(" ")", FOLLOW [239] -> SHIFT '(' GOTO 140
	expression/L7 = expression . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 142
	expression/L7 = expression . "^" expression, FOLLOW [239] -> SHIFT '^' GOTO 143
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 144
	expression/L3 = expression . "=" expression, FOLLOW [239] -> SHIFT '=' GOTO 145
	expression/L9 = expression . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 146
	expression/L9 = expression . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 147
	expression/L10 = expression . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 148
	expression/L10 = expression . "/" expression, FOLLOW [239] -> SHIFT '/' GOTO 149
	expression/L10 = expression . "%" expression, FOLLOW [239] -> SHIFT '%' GOTO 150
	expression/L5 = expression . "&&" expression, FOLLOW [239] -> SHIFT "&&" GOTO 151
	expression/L4 = expression . "||" expression, FOLLOW [239] -> SHIFT "||" GOTO 152
	expression/L6 = expression . "|" expression, FOLLOW [239] -> SHIFT '|' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [239] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [239] -> SHIFT ">>" GOTO 155
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [239] -> SHIFT '[' GOTO 156
	expression/L8 = expression . "==" expression, FOLLOW [239] -> SHIFT "==" GOTO 157
	expression/L8 = expression . "!=" expression, FOLLOW [239] -> SHIFT "!=" GOTO 158
	expression/L8 = expression . ">=" expression, FOLLOW [239] -> SHIFT ">=" GOTO 159
	expression/L8 = expression . "<=" expression, FOLLOW [239] -> SHIFT "<=" GOTO 160
	expression/L8 = expression . ">" expression, FOLLOW [239] -> SHIFT '>' GOTO 161
	expression/L8 = expression . "<" expression, FOLLOW [239] -> SHIFT '<' GOTO 162
	expression/L3 = expression . "+=" expression, FOLLOW [239] -> SHIFT "+=" GOTO 163
	expression/L3 = expression . "-=" expression, FOLLOW [239] -> SHIFT "-=" GOTO 164
	expression/L3 = expression . "*=" expression, FOLLOW [239] -> SHIFT "*=" GOTO 165
	expression/L3 = expression . "/=" expression, FOLLOW [239] -> SHIFT "/=" GOTO 166
	expression/L3 = expression . "^=" expression, FOLLOW [239] -> SHIFT "^=" GOTO 167
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "%=" expression, FOLLOW [239] -> SHIFT "%=" GOTO 169
	expression/L3 = expression . "&&=" expression, FOLLOW [239] -> SHIFT "&&=" GOTO 170
	expression/L3 = expression . "||=" expression, FOLLOW [239] -> SHIFT "||=" GOTO 171
	expression/L3 = expression . "|=" expression, FOLLOW [239] -> SHIFT "|=" GOTO 172
	expression/L3 = expression . "<<=" expression, FOLLOW [239] -> SHIFT "<<=" GOTO 173
	expression/L3 = expression . ">>=" expression, FOLLOW [239] -> SHIFT ">>=" GOTO 174
	expression/L12 = expression . "." IDENT, FOLLOW [239] -> SHIFT '.' GOTO 175
	expression/L3 = expression "^=" expression . (104), FOLLOW [239] -> REDUCE expression #3 CALL assign_operator "^"
[275]
	iexpression = expression . indirection IDENT, FOLLOW [239] -> GOTO 139
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [239] -> SHIFT '(' GOTO 140
	expression/L13 = expression . "(" ")", FOLLOW [239] -> SHIFT '(' GOTO 140
	expression/L7 = expression . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 142
	expression/L7 = expression . "^" expression, FOLLOW [239] -> SHIFT '^' GOTO 143
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 144
	expression/L3 = expression . "=" expression, FOLLOW [239] -> SHIFT '=' GOTO 145
	expression/L9 = expression . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 146
	expression/L9 = expression . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 147
	expression/L10 = expression . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 148
	expression/L10 = expression . "/" expression, FOLLOW [239] -> SHIFT '/' GOTO 149
	expression/L10 = expression . "%" expression, FOLLOW [239] -> SHIFT '%' GOTO 150
	expression/L5 = expression . "&&" expression, FOLLOW [239] -> SHIFT "&&" GOTO 151
	expression/L4 = expression . "||" expression, FOLLOW [239] -> SHIFT "||" GOTO 152
	expression/L6 = expression . "|" expression, FOLLOW [239] -> SHIFT '|' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [239] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [239] -> SHIFT ">>" GOTO 155
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [239] -> SHIFT '[' GOTO 156
	expression/L8 = expression . "==" expression, FOLLOW [239] -> SHIFT "==" GOTO 157
	expression/L8 = expression . "!=" expression, FOLLOW [239] -> SHIFT "!=" GOTO 158
	expression/L8 = expression . ">=" expression, FOLLOW [239] -> SHIFT ">=" GOTO 159
	expression/L8 = expression . "<=" expression, FOLLOW [239] -> SHIFT "<=" GOTO 160
	expression/L8 = expression . ">" expression, FOLLOW [239] -> SHIFT '>' GOTO 161
	expression/L8 = expression . "<" expression, FOLLOW [239] -> SHIFT '<' GOTO 162
	expression/L3 = expression . "+=" expression, FOLLOW [239] -> SHIFT "+=" GOTO 163
	expression/L3 = expression . "-=" expression, FOLLOW [239] -> SHIFT "-=" GOTO 164
	expression/L3 = expression . "*=" expression, FOLLOW [239] -> SHIFT "*=" GOTO 165
	expression/L3 = expression . "/=" expression, FOLLOW [239] -> SHIFT "/=" GOTO 166
	expression/L3 = expression . "^=" expression, FOLLOW [239] -> SHIFT "^=" GOTO 167
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "%=" expression, FOLLOW [239] -> SHIFT "%=" GOTO 169
	expression/L3 = expression . "&&=" expression, FOLLOW [239] -> SHIFT "&&=" GOTO 170
	expression/L3 = expression . "||=" expression, FOLLOW [239] -> SHIFT "||=" GOTO 171
	expression/L3 = expression . "|=" expression, FOLLOW [239] -> SHIFT "|=" GOTO 172
	expression/L3 = expression . "<<=" expression, FOLLOW [239] -> SHIFT "<<=" GOTO 173
	expression/L3 = expression . ">>=" expression, FOLLOW [239] -> SHIFT ">>=" GOTO 174
	expression/L12 = expression . "." IDENT, FOLLOW [239] -> SHIFT '.' GOTO 175
	expression/L3 = expression "&=" expression . (105), FOLLOW [239] -> REDUCE expression #3 CALL assign_operator "&"
[276]
	iexpression = expression . indirection IDENT, FOLLOW [239] -> GOTO 139
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [239] -> SHIFT '(' GOTO 140
	expression/L13 = expression . "(" ")", FOLLOW [239] -> SHIFT '(' GOTO 140
	expression/L7 = expression . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 142
	expression/L7 = expression . "^" expression, FOLLOW [239] -> SHIFT '^' GOTO 143
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 144
	expression/L3 = expression . "=" expression, FOLLOW [239] -> SHIFT '=' GOTO 145
	expression/L9 = expression . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 146
	expression/L9 = expression . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 147
	expression/L10 = expression . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 148
	expression/L10 = expression . "/" expression, FOLLOW [239] -> SHIFT '/' GOTO 149
	expression/L10 = expression . "%" expression, FOLLOW [239] -> SHIFT '%' GOTO 150
	expression/L5 = expression . "&&" expression, FOLLOW [239] -> SHIFT "&&" GOTO 151
	expression/L4 = expression . "||" expression, FOLLOW [239] -> SHIFT "||" GOTO 152
	expression/L6 = expression . "|" expression, FOLLOW [239] -> SHIFT '|' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [239] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [239] -> SHIFT ">>" GOTO 155
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [239] -> SHIFT '[' GOTO 156
	expression/L8 = expression . "==" expression, FOLLOW [239] -> SHIFT "==" GOTO 157
	expression/L8 = expression . "!=" expression, FOLLOW [239] -> SHIFT "!=" GOTO 158
	expression/L8 = expression . ">=" expression, FOLLOW [239] -> SHIFT ">=" GOTO 159
	expression/L8 = expression . "<=" expression, FOLLOW [239] -> SHIFT "<=" GOTO 160
	expression/L8 = expression . ">" expression, FOLLOW [239] -> SHIFT '>' GOTO 161
	expression/L8 = expression . "<" expression, FOLLOW [239] -> SHIFT '<' GOTO 162
	expression/L3 = expression . "+=" expression, FOLLOW [239] -> SHIFT "+=" GOTO 163
	expression/L3 = expression . "-=" expression, FOLLOW [239] -> SHIFT "-=" GOTO 164
	expression/L3 = expression . "*=" expression, FOLLOW [239] -> SHIFT "*=" GOTO 165
	expression/L3 = expression . "/=" expression, FOLLOW [239] -> SHIFT "/=" GOTO 166
	expression/L3 = expression . "^=" expression, FOLLOW [239] -> SHIFT "^=" GOTO 167
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "%=" expression, FOLLOW [239] -> SHIFT "%=" GOTO 169
	expression/L3 = expression . "&&=" expression, FOLLOW [239] -> SHIFT "&&=" GOTO 170
	expression/L3 = expression . "||=" expression, FOLLOW [239] -> SHIFT "||=" GOTO 171
	expression/L3 = expression . "|=" expression, FOLLOW [239] -> SHIFT "|=" GOTO 172
	expression/L3 = expression . "<<=" expression, FOLLOW [239] -> SHIFT "<<=" GOTO 173
	expression/L3 = expression . ">>=" expression, FOLLOW [239] -> SHIFT ">>=" GOTO 174
	expression/L12 = expression . "." IDENT, FOLLOW [239] -> SHIFT '.' GOTO 175
	expression/L3 = expression "%=" expression . (106), FOLLOW [239] -> REDUCE expression #3 CALL assign_operator "%"
[277]
	iexpression = expression . indirection IDENT, FOLLOW [239] -> GOTO 139
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [239] -> SHIFT '(' GOTO 140
	expression/L13 = expression . "(" ")", FOLLOW [239] -> SHIFT '(' GOTO 140
	expression/L7 = expression . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 142
	expression/L7 = expression . "^" expression, FOLLOW [239] -> SHIFT '^' GOTO 143
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 144
	expression/L3 = expression . "=" expression, FOLLOW [239] -> SHIFT '=' GOTO 145
	expression/L9 = expression . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 146
	expression/L9 = expression . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 147
	expression/L10 = expression . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 148
	expression/L10 = expression . "/" expression, FOLLOW [239] -> SHIFT '/' GOTO 149
	expression/L10 = expression . "%" expression, FOLLOW [239] -> SHIFT '%' GOTO 150
	expression/L5 = expression . "&&" expression, FOLLOW [239] -> SHIFT "&&" GOTO 151
	expression/L4 = expression . "||" expression, FOLLOW [239] -> SHIFT "||" GOTO 152
	expression/L6 = expression . "|" expression, FOLLOW [239] -> SHIFT '|' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [239] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [239] -> SHIFT ">>" GOTO 155
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [239] -> SHIFT '[' GOTO 156
	expression/L8 = expression . "==" expression, FOLLOW [239] -> SHIFT "==" GOTO 157
	expression/L8 = expression . "!=" expression, FOLLOW [239] -> SHIFT "!=" GOTO 158
	expression/L8 = expression . ">=" expression, FOLLOW [239] -> SHIFT ">=" GOTO 159
	expression/L8 = expression . "<=" expression, FOLLOW [239] -> SHIFT "<=" GOTO 160
	expression/L8 = expression . ">" expression, FOLLOW [239] -> SHIFT '>' GOTO 161
	expression/L8 = expression . "<" expression, FOLLOW [239] -> SHIFT '<' GOTO 162
	expression/L3 = expression . "+=" expression, FOLLOW [239] -> SHIFT "+=" GOTO 163
	expression/L3 = expression . "-=" expression, FOLLOW [239] -> SHIFT "-=" GOTO 164
	expression/L3 = expression . "*=" expression, FOLLOW [239] -> SHIFT "*=" GOTO 165
	expression/L3 = expression . "/=" expression, FOLLOW [239] -> SHIFT "/=" GOTO 166
	expression/L3 = expression . "^=" expression, FOLLOW [239] -> SHIFT "^=" GOTO 167
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "%=" expression, FOLLOW [239] -> SHIFT "%=" GOTO 169
	expression/L3 = expression . "&&=" expression, FOLLOW [239] -> SHIFT "&&=" GOTO 170
	expression/L3 = expression . "||=" expression, FOLLOW [239] -> SHIFT "||=" GOTO 171
	expression/L3 = expression . "|=" expression, FOLLOW [239] -> SHIFT "|=" GOTO 172
	expression/L3 = expression . "<<=" expression, FOLLOW [239] -> SHIFT "<<=" GOTO 173
	expression/L3 = expression . ">>=" expression, FOLLOW [239] -> SHIFT ">>=" GOTO 174
	expression/L12 = expression . "." IDENT, FOLLOW [239] -> SHIFT '.' GOTO 175
	expression/L3 = expression "&&=" expression . (107), FOLLOW [239] -> REDUCE expression #3 CALL assign_operator "&&"
[278]
	iexpression = expression . indirection IDENT, FOLLOW [239] -> GOTO 139
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [239] -> SHIFT '(' GOTO 140
	expression/L13 = expression . "(" ")", FOLLOW [239] -> SHIFT '(' GOTO 140
	expression/L7 = expression . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 142
	expression/L7 = expression . "^" expression, FOLLOW [239] -> SHIFT '^' GOTO 143
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 144
	expression/L3 = expression . "=" expression, FOLLOW [239] -> SHIFT '=' GOTO 145
	expression/L9 = expression . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 146
	expression/L9 = expression . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 147
	expression/L10 = expression . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 148
	expression/L10 = expression . "/" expression, FOLLOW [239] -> SHIFT '/' GOTO 149
	expression/L10 = expression . "%" expression, FOLLOW [239] -> SHIFT '%' GOTO 150
	expression/L5 = expression . "&&" expression, FOLLOW [239] -> SHIFT "&&" GOTO 151
	expression/L4 = expression . "||" expression, FOLLOW [239] -> SHIFT "||" GOTO 152
	expression/L6 = expression . "|" expression, FOLLOW [239] -> SHIFT '|' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [239] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [239] -> SHIFT ">>" GOTO 155
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [239] -> SHIFT '[' GOTO 156
	expression/L8 = expression . "==" expression, FOLLOW [239] -> SHIFT "==" GOTO 157
	expression/L8 = expression . "!=" expression, FOLLOW [239] -> SHIFT "!=" GOTO 158
	expression/L8 = expression . ">=" expression, FOLLOW [239] -> SHIFT ">=" GOTO 159
	expression/L8 = expression . "<=" expression, FOLLOW [239] -> SHIFT "<=" GOTO 160
	expression/L8 = expression . ">" expression, FOLLOW [239] -> SHIFT '>' GOTO 161
	expression/L8 = expression . "<" expression, FOLLOW [239] -> SHIFT '<' GOTO 162
	expression/L3 = expression . "+=" expression, FOLLOW [239] -> SHIFT "+=" GOTO 163
	expression/L3 = expression . "-=" expression, FOLLOW [239] -> SHIFT "-=" GOTO 164
	expression/L3 = expression . "*=" expression, FOLLOW [239] -> SHIFT "*=" GOTO 165
	expression/L3 = expression . "/=" expression, FOLLOW [239] -> SHIFT "/=" GOTO 166
	expression/L3 = expression . "^=" expression, FOLLOW [239] -> SHIFT "^=" GOTO 167
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "%=" expression, FOLLOW [239] -> SHIFT "%=" GOTO 169
	expression/L3 = expression . "&&=" expression, FOLLOW [239] -> SHIFT "&&=" GOTO 170
	expression/L3 = expression . "||=" expression, FOLLOW [239] -> SHIFT "||=" GOTO 171
	expression/L3 = expression . "|=" expression, FOLLOW [239] -> SHIFT "|=" GOTO 172
	expression/L3 = expression . "<<=" expression, FOLLOW [239] -> SHIFT "<<=" GOTO 173
	expression/L3 = expression . ">>=" expression, FOLLOW [239] -> SHIFT ">>=" GOTO 174
	expression/L12 = expression . "." IDENT, FOLLOW [239] -> SHIFT '.' GOTO 175
	expression/L3 = expression "||=" expression . (108), FOLLOW [239] -> REDUCE expression #3 CALL assign_operator "||"
[279]
	iexpression = expression . indirection IDENT, FOLLOW [239] -> GOTO 139
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [239] -> SHIFT '(' GOTO 140
	expression/L13 = expression . "(" ")", FOLLOW [239] -> SHIFT '(' GOTO 140
	expression/L7 = expression . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 142
	expression/L7 = expression . "^" expression, FOLLOW [239] -> SHIFT '^' GOTO 143
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 144
	expression/L3 = expression . "=" expression, FOLLOW [239] -> SHIFT '=' GOTO 145
	expression/L9 = expression . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 146
	expression/L9 = expression . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 147
	expression/L10 = expression . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 148
	expression/L10 = expression . "/" expression, FOLLOW [239] -> SHIFT '/' GOTO 149
	expression/L10 = expression . "%" expression, FOLLOW [239] -> SHIFT '%' GOTO 150
	expression/L5 = expression . "&&" expression, FOLLOW [239] -> SHIFT "&&" GOTO 151
	expression/L4 = expression . "||" expression, FOLLOW [239] -> SHIFT "||" GOTO 152
	expression/L6 = expression . "|" expression, FOLLOW [239] -> SHIFT '|' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [239] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [239] -> SHIFT ">>" GOTO 155
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [239] -> SHIFT '[' GOTO 156
	expression/L8 = expression . "==" expression, FOLLOW [239] -> SHIFT "==" GOTO 157
	expression/L8 = expression . "!=" expression, FOLLOW [239] -> SHIFT "!=" GOTO 158
	expression/L8 = expression . ">=" expression, FOLLOW [239] -> SHIFT ">=" GOTO 159
	expression/L8 = expression . "<=" expression, FOLLOW [239] -> SHIFT "<=" GOTO 160
	expression/L8 = expression . ">" expression, FOLLOW [239] -> SHIFT '>' GOTO 161
	expression/L8 = expression . "<" expression, FOLLOW [239] -> SHIFT '<' GOTO 162
	expression/L3 = expression . "+=" expression, FOLLOW [239] -> SHIFT "+=" GOTO 163
	expression/L3 = expression . "-=" expression, FOLLOW [239] -> SHIFT "-=" GOTO 164
	expression/L3 = expression . "*=" expression, FOLLOW [239] -> SHIFT "*=" GOTO 165
	expression/L3 = expression . "/=" expression, FOLLOW [239] -> SHIFT "/=" GOTO 166
	expression/L3 = expression . "^=" expression, FOLLOW [239] -> SHIFT "^=" GOTO 167
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "%=" expression, FOLLOW [239] -> SHIFT "%=" GOTO 169
	expression/L3 = expression . "&&=" expression, FOLLOW [239] -> SHIFT "&&=" GOTO 170
	expression/L3 = expression . "||=" expression, FOLLOW [239] -> SHIFT "||=" GOTO 171
	expression/L3 = expression . "|=" expression, FOLLOW [239] -> SHIFT "|=" GOTO 172
	expression/L3 = expression . "<<=" expression, FOLLOW [239] -> SHIFT "<<=" GOTO 173
	expression/L3 = expression . ">>=" expression, FOLLOW [239] -> SHIFT ">>=" GOTO 174
	expression/L12 = expression . "." IDENT, FOLLOW [239] -> SHIFT '.' GOTO 175
	expression/L3 = expression "|=" expression . (109), FOLLOW [239] -> REDUCE expression #3 CALL assign_operator "|"
[280]
	iexpression = expression . indirection IDENT, FOLLOW [239] -> GOTO 139
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [239] -> SHIFT '(' GOTO 140
	expression/L13 = expression . "(" ")", FOLLOW [239] -> SHIFT '(' GOTO 140
	expression/L7 = expression . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 142
	expression/L7 = expression . "^" expression, FOLLOW [239] -> SHIFT '^' GOTO 143
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 144
	expression/L3 = expression . "=" expression, FOLLOW [239] -> SHIFT '=' GOTO 145
	expression/L9 = expression . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 146
	expression/L9 = expression . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 147
	expression/L10 = expression . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 148
	expression/L10 = expression . "/" expression, FOLLOW [239] -> SHIFT '/' GOTO 149
	expression/L10 = expression . "%" expression, FOLLOW [239] -> SHIFT '%' GOTO 150
	expression/L5 = expression . "&&" expression, FOLLOW [239] -> SHIFT "&&" GOTO 151
	expression/L4 = expression . "||" expression, FOLLOW [239] -> SHIFT "||" GOTO 152
	expression/L6 = expression . "|" expression, FOLLOW [239] -> SHIFT '|' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [239] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [239] -> SHIFT ">>" GOTO 155
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [239] -> SHIFT '[' GOTO 156
	expression/L8 = expression . "==" expression, FOLLOW [239] -> SHIFT "==" GOTO 157
	expression/L8 = expression . "!=" expression, FOLLOW [239] -> SHIFT "!=" GOTO 158
	expression/L8 = expression . ">=" expression, FOLLOW [239] -> SHIFT ">=" GOTO 159
	expression/L8 = expression . "<=" expression, FOLLOW [239] -> SHIFT "<=" GOTO 160
	expression/L8 = expression . ">" expression, FOLLOW [239] -> SHIFT '>' GOTO 161
	expression/L8 = expression . "<" expression, FOLLOW [239] -> SHIFT '<' GOTO 162
	expression/L3 = expression . "+=" expression, FOLLOW [239] -> SHIFT "+=" GOTO 163
	expression/L3 = expression . "-=" expression, FOLLOW [239] -> SHIFT "-=" GOTO 164
	expression/L3 = expression . "*=" expression, FOLLOW [239] -> SHIFT "*=" GOTO 165
	expression/L3 = expression . "/=" expression, FOLLOW [239] -> SHIFT "/=" GOTO 166
	expression/L3 = expression . "^=" expression, FOLLOW [239] -> SHIFT "^=" GOTO 167
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "%=" expression, FOLLOW [239] -> SHIFT "%=" GOTO 169
	expression/L3 = expression . "&&=" expression, FOLLOW [239] -> SHIFT "&&=" GOTO 170
	expression/L3 = expression . "||=" expression, FOLLOW [239] -> SHIFT "||=" GOTO 171
	expression/L3 = expression . "|=" expression, FOLLOW [239] -> SHIFT "|=" GOTO 172
	expression/L3 = expression . "<<=" expression, FOLLOW [239] -> SHIFT "<<=" GOTO 173
	expression/L3 = expression . ">>=" expression, FOLLOW [239] -> SHIFT ">>=" GOTO 174
	expression/L12 = expression . "." IDENT, FOLLOW [239] -> SHIFT '.' GOTO 175
	expression/L3 = expression "<<=" expression . (110), FOLLOW [239] -> REDUCE expression #3 CALL assign_operator "<<"
[281]
	iexpression = expression . indirection IDENT, FOLLOW [239] -> GOTO 139
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [239] -> SHIFT '(' GOTO 140
	expression/L13 = expression . "(" ")", FOLLOW [239] -> SHIFT '(' GOTO 140
	expression/L7 = expression . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 142
	expression/L7 = expression . "^" expression, FOLLOW [239] -> SHIFT '^' GOTO 143
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 144
	expression/L3 = expression . "=" expression, FOLLOW [239] -> SHIFT '=' GOTO 145
	expression/L9 = expression . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 146
	expression/L9 = expression . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 147
	expression/L10 = expression . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 148
	expression/L10 = expression . "/" expression, FOLLOW [239] -> SHIFT '/' GOTO 149
	expression/L10 = expression . "%" expression, FOLLOW [239] -> SHIFT '%' GOTO 150
	expression/L5 = expression . "&&" expression, FOLLOW [239] -> SHIFT "&&" GOTO 151
	expression/L4 = expression . "||" expression, FOLLOW [239] -> SHIFT "||" GOTO 152
	expression/L6 = expression . "|" expression, FOLLOW [239] -> SHIFT '|' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [239] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [239] -> SHIFT ">>" GOTO 155
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [239] -> SHIFT '[' GOTO 156
	expression/L8 = expression . "==" expression, FOLLOW [239] -> SHIFT "==" GOTO 157
	expression/L8 = expression . "!=" expression, FOLLOW [239] -> SHIFT "!=" GOTO 158
	expression/L8 = expression . ">=" expression, FOLLOW [239] -> SHIFT ">=" GOTO 159
	expression/L8 = expression . "<=" expression, FOLLOW [239] -> SHIFT "<=" GOTO 160
	expression/L8 = expression . ">" expression, FOLLOW [239] -> SHIFT '>' GOTO 161
	expression/L8 = expression . "<" expression, FOLLOW [239] -> SHIFT '<' GOTO 162
	expression/L3 = expression . "+=" expression, FOLLOW [239] -> SHIFT "+=" GOTO 163
	expression/L3 = expression . "-=" expression, FOLLOW [239] -> SHIFT "-=" GOTO 164
	expression/L3 = expression . "*=" expression, FOLLOW [239] -> SHIFT "*=" GOTO 165
	expression/L3 = expression . "/=" expression, FOLLOW [239] -> SHIFT "/=" GOTO 166
	expression/L3 = expression . "^=" expression, FOLLOW [239] -> SHIFT "^=" GOTO 167
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "%=" expression, FOLLOW [239] -> SHIFT "%=" GOTO 169
	expression/L3 = expression . "&&=" expression, FOLLOW [239] -> SHIFT "&&=" GOTO 170
	expression/L3 = expression . "||=" expression, FOLLOW [239] -> SHIFT "||=" GOTO 171
	expression/L3 = expression . "|=" expression, FOLLOW [239] -> SHIFT "|=" GOTO 172
	expression/L3 = expression . "<<=" expression, FOLLOW [239] -> SHIFT "<<=" GOTO 173
	expression/L3 = expression . ">>=" expression, FOLLOW [239] -> SHIFT ">>=" GOTO 174
	expression/L12 = expression . "." IDENT, FOLLOW [239] -> SHIFT '.' GOTO 175
	expression/L3 = expression ">>=" expression . (111), FOLLOW [239] -> REDUCE expression #3 CALL assign_operator ">>"
[282]
	expression/L12 = expression "." IDENT . (132), FOLLOW [239] -> REDUCE expression #3 CALL member
[283]
	expression/L2 = "(" expression ")" ., FOLLOW [239] -> REDUCE expression #3
[284]
	statement/L1 = "{" codeblock "}" . (scope), FOLLOW [98] -> REDUCE statement #3
[285]
	expression/L3 = . expression "=" expression, FOLLOW [230] -> GOTO 194
	expression/L3 = . expression "+=" expression, FOLLOW [230] -> GOTO 194
	expression/L3 = . expression "-=" expression, FOLLOW [230] -> GOTO 194
	expression/L3 = . expression "*=" expression, FOLLOW [230] -> GOTO 194
	expression/L3 = . expression "/=" expression, FOLLOW [230] -> GOTO 194
	expression/L3 = . expression "^=" expression, FOLLOW [230] -> GOTO 194
	expression/L3 = . expression "&=" expression, FOLLOW [230] -> GOTO 194
	expression/L3 = . expression "%=" expression, FOLLOW [230] -> GOTO 194
	expression/L3 = . expression "&&=" expression, FOLLOW [230] -> GOTO 194
	expression/L3 = . expression "||=" expression, FOLLOW [230] -> GOTO 194
	expression/L3 = . expression "&=" expression, FOLLOW [230] -> GOTO 194
	expression/L3 = . expression "|=" expression, FOLLOW [230] -> GOTO 194
	expression/L3 = . expression "<<=" expression, FOLLOW [230] -> GOTO 194
	expression/L3 = . expression ">>=" expression, FOLLOW [230] -> GOTO 194
	expression/L4 = . expression "||" expression, FOLLOW [230] -> GOTO 194
	expression/L5 = . expression "&&" expression, FOLLOW [230] -> GOTO 194
	expression/L6 = . expression "|" expression, FOLLOW [230] -> GOTO 194
	expression/L7 = . expression "^" expression, FOLLOW [230] -> GOTO 194
	expression/L7 = . expression "&" expression, FOLLOW [230] -> GOTO 194
	expression/L8 = . expression "==" expression, FOLLOW [230] -> GOTO 194
	expression/L8 = . expression "!=" expression, FOLLOW [230] -> GOTO 194
	expression/L8 = . expression "<=" expression, FOLLOW [230] -> GOTO 194
	expression/L8 = . expression "<" expression, FOLLOW [230] -> GOTO 194
	expression/L8 = . expression ">=" expression, FOLLOW [230] -> GOTO 194
	expression/L8 = . expression ">" expression, FOLLOW [230] -> GOTO 194
	expression/L9 = . expression "+" expression, FOLLOW [230] -> GOTO 194
	expression/L9 = . expression "-" expression, FOLLOW [230] -> GOTO 194
	expression/L10 = . expression "*" expression, FOLLOW [230] -> GOTO 194
	expression/L10 = . expression "/" expression, FOLLOW [230] -> GOTO 194
	expression/L10 = . expression "%" expression, FOLLOW [230] -> GOTO 194
	expression/L11 = . expression "<<" expression, FOLLOW [230] -> GOTO 194
	expression/L11 = . expression ">>" expression, FOLLOW [230] -> GOTO 194
	expression/L12 = . expression "." IDENT, FOLLOW [230] -> GOTO 194
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [230] -> GOTO 194
	expression/L13 = . expression "(" ")", FOLLOW [230] -> GOTO 194
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [230] -> GOTO 194
	iexpression = . expression indirection IDENT, FOLLOW [230] -> GOTO 194
	expressionlist = . expression "," expressionlist, FOLLOW [255] -> GOTO 194
	expressionlist = . expression, FOLLOW [255] -> GOTO 194
	expression/L12 = . iexpression, FOLLOW [230] -> GOTO 77
	expressionlist = expression "," . expressionlist, FOLLOW [255] -> GOTO 317
	expression/L2 = . BOOLEAN, FOLLOW [230] -> SHIFT BOOLEAN GOTO 78
	expression/L2 = . IDENT, FOLLOW [230] -> SHIFT IDENT GOTO 79
	expression/L2 = . DQSTRING, FOLLOW [230] -> SHIFT DQSTRING GOTO 80
	expression/L2 = . SQSTRING, FOLLOW [230] -> SHIFT SQSTRING GOTO 81
	expression/L2 = . CARDINAL, FOLLOW [230] -> SHIFT CARDINAL GOTO 82
	expression/L2 = . INTEGER, FOLLOW [230] -> SHIFT INTEGER GOTO 83
	expression/L2 = . FLOAT, FOLLOW [230] -> SHIFT FLOAT GOTO 84
	expression/L2 = . "(" expression ")", FOLLOW [230] -> SHIFT '(' GOTO 85
	expression/L9 = . "&" expression, FOLLOW [230] -> SHIFT '&' GOTO 86
	expression/L1 = . "{" expressionlist "}", FOLLOW [230] -> SHIFT '{' GOTO 103
	expression/L1 = . "{" "}", FOLLOW [230] -> SHIFT '{' GOTO 103
	expression/L9 = . "+" expression, FOLLOW [230] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [230] -> SHIFT '-' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [230] -> SHIFT '*' GOTO 90
	expression/L9 = . "~" expression, FOLLOW [230] -> SHIFT '~' GOTO 91
	expression/L9 = . "!" expression, FOLLOW [230] -> SHIFT '!' GOTO 92
	expression/L1 = . "new" typespec ":" expression, FOLLOW [230] -> SHIFT "new" GOTO 98
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [230] -> SHIFT "cast" GOTO 99
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [230] -> SHIFT "cast" GOTO 99
	expression/L2 = . "null", FOLLOW [230] -> SHIFT "null" GOTO 100
[286]
	expression/L1 = "{" expressionlist "}" . (88), FOLLOW [239] -> REDUCE expression #3 CALL structure
[287]
	statement/L1 = "var" variabledefinition ";" . (77), FOLLOW [98] -> REDUCE statement #3 CALL definition
[288]
	statement/L1 = "return" expression ";" . (step:79), FOLLOW [98] -> REDUCE statement #3 CALL return_value
[289]
	statement/L1 = "delete" expression ";" . (80), FOLLOW [98] -> REDUCE statement #3 CALL delete
[290]
	iexpression = expression . indirection IDENT, FOLLOW [228] -> GOTO 139
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [228] -> SHIFT '(' GOTO 140
	expression/L13 = expression . "(" ")", FOLLOW [228] -> SHIFT '(' GOTO 140
	statement/L1 = "if" "(" expression . ")" "{" codeblock "}", FOLLOW [98] -> SHIFT ')' GOTO 318
	statement/L1 = "if" "(" expression . ")" "{" codeblock "}" "else" "{" codeblock "}", FOLLOW [98] -> SHIFT ')' GOTO 318
	expression/L7 = expression . "&" expression, FOLLOW [228] -> SHIFT '&' GOTO 142
	expression/L7 = expression . "^" expression, FOLLOW [228] -> SHIFT '^' GOTO 143
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 144
	expression/L3 = expression . "=" expression, FOLLOW [228] -> SHIFT '=' GOTO 145
	expression/L9 = expression . "+" expression, FOLLOW [228] -> SHIFT '+' GOTO 146
	expression/L9 = expression . "-" expression, FOLLOW [228] -> SHIFT '-' GOTO 147
	expression/L10 = expression . "*" expression, FOLLOW [228] -> SHIFT '*' GOTO 148
	expression/L10 = expression . "/" expression, FOLLOW [228] -> SHIFT '/' GOTO 149
	expression/L10 = expression . "%" expression, FOLLOW [228] -> SHIFT '%' GOTO 150
	expression/L5 = expression . "&&" expression, FOLLOW [228] -> SHIFT "&&" GOTO 151
	expression/L4 = expression . "||" expression, FOLLOW [228] -> SHIFT "||" GOTO 152
	expression/L6 = expression . "|" expression, FOLLOW [228] -> SHIFT '|' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [228] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [228] -> SHIFT ">>" GOTO 155
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [228] -> SHIFT '[' GOTO 156
	expression/L8 = expression . "==" expression, FOLLOW [228] -> SHIFT "==" GOTO 157
	expression/L8 = expression . "!=" expression, FOLLOW [228] -> SHIFT "!=" GOTO 158
	expression/L8 = expression . ">=" expression, FOLLOW [228] -> SHIFT ">=" GOTO 159
	expression/L8 = expression . "<=" expression, FOLLOW [228] -> SHIFT "<=" GOTO 160
	expression/L8 = expression . ">" expression, FOLLOW [228] -> SHIFT '>' GOTO 161
	expression/L8 = expression . "<" expression, FOLLOW [228] -> SHIFT '<' GOTO 162
	expression/L3 = expression . "+=" expression, FOLLOW [228] -> SHIFT "+=" GOTO 163
	expression/L3 = expression . "-=" expression, FOLLOW [228] -> SHIFT "-=" GOTO 164
	expression/L3 = expression . "*=" expression, FOLLOW [228] -> SHIFT "*=" GOTO 165
	expression/L3 = expression . "/=" expression, FOLLOW [228] -> SHIFT "/=" GOTO 166
	expression/L3 = expression . "^=" expression, FOLLOW [228] -> SHIFT "^=" GOTO 167
	expression/L3 = expression . "&=" expression, FOLLOW [228] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "&=" expression, FOLLOW [228] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "%=" expression, FOLLOW [228] -> SHIFT "%=" GOTO 169
	expression/L3 = expression . "&&=" expression, FOLLOW [228] -> SHIFT "&&=" GOTO 170
	expression/L3 = expression . "||=" expression, FOLLOW [228] -> SHIFT "||=" GOTO 171
	expression/L3 = expression . "|=" expression, FOLLOW [228] -> SHIFT "|=" GOTO 172
	expression/L3 = expression . "<<=" expression, FOLLOW [228] -> SHIFT "<<=" GOTO 173
	expression/L3 = expression . ">>=" expression, FOLLOW [228] -> SHIFT ">>=" GOTO 174
	expression/L12 = expression . "." IDENT, FOLLOW [228] -> SHIFT '.' GOTO 175
[291]
	iexpression = expression . indirection IDENT, FOLLOW [228] -> GOTO 139
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [228] -> SHIFT '(' GOTO 140
	expression/L13 = expression . "(" ")", FOLLOW [228] -> SHIFT '(' GOTO 140
	statement/L1 = "while" "(" expression . ")" "{" codeblock "}", FOLLOW [98] -> SHIFT ')' GOTO 319
	expression/L7 = expression . "&" expression, FOLLOW [228] -> SHIFT '&' GOTO 142
	expression/L7 = expression . "^" expression, FOLLOW [228] -> SHIFT '^' GOTO 143
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 144
	expression/L3 = expression . "=" expression, FOLLOW [228] -> SHIFT '=' GOTO 145
	expression/L9 = expression . "+" expression, FOLLOW [228] -> SHIFT '+' GOTO 146
	expression/L9 = expression . "-" expression, FOLLOW [228] -> SHIFT '-' GOTO 147
	expression/L10 = expression . "*" expression, FOLLOW [228] -> SHIFT '*' GOTO 148
	expression/L10 = expression . "/" expression, FOLLOW [228] -> SHIFT '/' GOTO 149
	expression/L10 = expression . "%" expression, FOLLOW [228] -> SHIFT '%' GOTO 150
	expression/L5 = expression . "&&" expression, FOLLOW [228] -> SHIFT "&&" GOTO 151
	expression/L4 = expression . "||" expression, FOLLOW [228] -> SHIFT "||" GOTO 152
	expression/L6 = expression . "|" expression, FOLLOW [228] -> SHIFT '|' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [228] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [228] -> SHIFT ">>" GOTO 155
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [228] -> SHIFT '[' GOTO 156
	expression/L8 = expression . "==" expression, FOLLOW [228] -> SHIFT "==" GOTO 157
	expression/L8 = expression . "!=" expression, FOLLOW [228] -> SHIFT "!=" GOTO 158
	expression/L8 = expression . ">=" expression, FOLLOW [228] -> SHIFT ">=" GOTO 159
	expression/L8 = expression . "<=" expression, FOLLOW [228] -> SHIFT "<=" GOTO 160
	expression/L8 = expression . ">" expression, FOLLOW [228] -> SHIFT '>' GOTO 161
	expression/L8 = expression . "<" expression, FOLLOW [228] -> SHIFT '<' GOTO 162
	expression/L3 = expression . "+=" expression, FOLLOW [228] -> SHIFT "+=" GOTO 163
	expression/L3 = expression . "-=" expression, FOLLOW [228] -> SHIFT "-=" GOTO 164
	expression/L3 = expression . "*=" expression, FOLLOW [228] -> SHIFT "*=" GOTO 165
	expression/L3 = expression . "/=" expression, FOLLOW [228] -> SHIFT "/=" GOTO 166
	expression/L3 = expression . "^=" expression, FOLLOW [228] -> SHIFT "^=" GOTO 167
	expression/L3 = expression . "&=" expression, FOLLOW [228] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "&=" expression, FOLLOW [228] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "%=" expression, FOLLOW [228] -> SHIFT "%=" GOTO 169
	expression/L3 = expression . "&&=" expression, FOLLOW [228] -> SHIFT "&&=" GOTO 170
	expression/L3 = expression . "||=" expression, FOLLOW [228] -> SHIFT "||=" GOTO 171
	expression/L3 = expression . "|=" expression, FOLLOW [228] -> SHIFT "|=" GOTO 172
	expression/L3 = expression . "<<=" expression, FOLLOW [228] -> SHIFT "<<=" GOTO 173
	expression/L3 = expression . ">>=" expression, FOLLOW [228] -> SHIFT ">>=" GOTO 174
	expression/L12 = expression . "." IDENT, FOLLOW [228] -> SHIFT '.' GOTO 175
[292]
	expression/L1 = "new" typespec ":" . expression, FOLLOW [239] -> GOTO 320
	expression/L3 = . expression "=" expression, FOLLOW [239] -> GOTO 320
	expression/L3 = . expression "+=" expression, FOLLOW [239] -> GOTO 320
	expression/L3 = . expression "-=" expression, FOLLOW [239] -> GOTO 320
	expression/L3 = . expression "*=" expression, FOLLOW [239] -> GOTO 320
	expression/L3 = . expression "/=" expression, FOLLOW [239] -> GOTO 320
	expression/L3 = . expression "^=" expression, FOLLOW [239] -> GOTO 320
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 320
	expression/L3 = . expression "%=" expression, FOLLOW [239] -> GOTO 320
	expression/L3 = . expression "&&=" expression, FOLLOW [239] -> GOTO 320
	expression/L3 = . expression "||=" expression, FOLLOW [239] -> GOTO 320
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 320
	expression/L3 = . expression "|=" expression, FOLLOW [239] -> GOTO 320
	expression/L3 = . expression "<<=" expression, FOLLOW [239] -> GOTO 320
	expression/L3 = . expression ">>=" expression, FOLLOW [239] -> GOTO 320
	expression/L4 = . expression "||" expression, FOLLOW [239] -> GOTO 320
	expression/L5 = . expression "&&" expression, FOLLOW [239] -> GOTO 320
	expression/L6 = . expression "|" expression, FOLLOW [239] -> GOTO 320
	expression/L7 = . expression "^" expression, FOLLOW [239] -> GOTO 320
	expression/L7 = . expression "&" expression, FOLLOW [239] -> GOTO 320
	expression/L8 = . expression "==" expression, FOLLOW [239] -> GOTO 320
	expression/L8 = . expression "!=" expression, FOLLOW [239] -> GOTO 320
	expression/L8 = . expression "<=" expression, FOLLOW [239] -> GOTO 320
	expression/L8 = . expression "<" expression, FOLLOW [239] -> GOTO 320
	expression/L8 = . expression ">=" expression, FOLLOW [239] -> GOTO 320
	expression/L8 = . expression ">" expression, FOLLOW [239] -> GOTO 320
	expression/L9 = . expression "+" expression, FOLLOW [239] -> GOTO 320
	expression/L9 = . expression "-" expression, FOLLOW [239] -> GOTO 320
	expression/L10 = . expression "*" expression, FOLLOW [239] -> GOTO 320
	expression/L10 = . expression "/" expression, FOLLOW [239] -> GOTO 320
	expression/L10 = . expression "%" expression, FOLLOW [239] -> GOTO 320
	expression/L11 = . expression "<<" expression, FOLLOW [239] -> GOTO 320
	expression/L11 = . expression ">>" expression, FOLLOW [239] -> GOTO 320
	expression/L12 = . expression "." IDENT, FOLLOW [239] -> GOTO 320
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [239] -> GOTO 320
	expression/L13 = . expression "(" ")", FOLLOW [239] -> GOTO 320
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [239] -> GOTO 320
	iexpression = . expression indirection IDENT, FOLLOW [239] -> GOTO 320
	expression/L12 = . iexpression, FOLLOW [239] -> GOTO 77
	expression/L2 = . BOOLEAN, FOLLOW [239] -> SHIFT BOOLEAN GOTO 78
	expression/L2 = . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 79
	expression/L2 = . DQSTRING, FOLLOW [239] -> SHIFT DQSTRING GOTO 80
	expression/L2 = . SQSTRING, FOLLOW [239] -> SHIFT SQSTRING GOTO 81
	expression/L2 = . CARDINAL, FOLLOW [239] -> SHIFT CARDINAL GOTO 82
	expression/L2 = . INTEGER, FOLLOW [239] -> SHIFT INTEGER GOTO 83
	expression/L2 = . FLOAT, FOLLOW [239] -> SHIFT FLOAT GOTO 84
	expression/L2 = . "(" expression ")", FOLLOW [239] -> SHIFT '(' GOTO 85
	expression/L9 = . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 86
	expression/L1 = . "{" expressionlist "}", FOLLOW [239] -> SHIFT '{' GOTO 103
	expression/L1 = . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 103
	expression/L9 = . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 90
	expression/L9 = . "~" expression, FOLLOW [239] -> SHIFT '~' GOTO 91
	expression/L9 = . "!" expression, FOLLOW [239] -> SHIFT '!' GOTO 92
	expression/L1 = . "new" typespec ":" expression, FOLLOW [239] -> SHIFT "new" GOTO 98
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [239] -> SHIFT "cast" GOTO 99
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [239] -> SHIFT "cast" GOTO 99
	expression/L2 = . "null", FOLLOW [239] -> SHIFT "null" GOTO 100
[293]
	expression/L1 = "cast" typespec ":" . "{" expression "}", FOLLOW [239] -> SHIFT '{' GOTO 321
	expression/L1 = "cast" typespec ":" . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 321
[294]
	variabledefinition = typespec IDENT "[" expression "]" "=" . expression, FOLLOW [15] -> GOTO 322
	expression/L3 = . expression "=" expression, FOLLOW [97] -> GOTO 322
	expression/L3 = . expression "+=" expression, FOLLOW [97] -> GOTO 322
	expression/L3 = . expression "-=" expression, FOLLOW [97] -> GOTO 322
	expression/L3 = . expression "*=" expression, FOLLOW [97] -> GOTO 322
	expression/L3 = . expression "/=" expression, FOLLOW [97] -> GOTO 322
	expression/L3 = . expression "^=" expression, FOLLOW [97] -> GOTO 322
	expression/L3 = . expression "&=" expression, FOLLOW [97] -> GOTO 322
	expression/L3 = . expression "%=" expression, FOLLOW [97] -> GOTO 322
	expression/L3 = . expression "&&=" expression, FOLLOW [97] -> GOTO 322
	expression/L3 = . expression "||=" expression, FOLLOW [97] -> GOTO 322
	expression/L3 = . expression "&=" expression, FOLLOW [97] -> GOTO 322
	expression/L3 = . expression "|=" expression, FOLLOW [97] -> GOTO 322
	expression/L3 = . expression "<<=" expression, FOLLOW [97] -> GOTO 322
	expression/L3 = . expression ">>=" expression, FOLLOW [97] -> GOTO 322
	expression/L4 = . expression "||" expression, FOLLOW [97] -> GOTO 322
	expression/L5 = . expression "&&" expression, FOLLOW [97] -> GOTO 322
	expression/L6 = . expression "|" expression, FOLLOW [97] -> GOTO 322
	expression/L7 = . expression "^" expression, FOLLOW [97] -> GOTO 322
	expression/L7 = . expression "&" expression, FOLLOW [97] -> GOTO 322
	expression/L8 = . expression "==" expression, FOLLOW [97] -> GOTO 322
	expression/L8 = . expression "!=" expression, FOLLOW [97] -> GOTO 322
	expression/L8 = . expression "<=" expression, FOLLOW [97] -> GOTO 322
	expression/L8 = . expression "<" expression, FOLLOW [97] -> GOTO 322
	expression/L8 = . expression ">=" expression, FOLLOW [97] -> GOTO 322
	expression/L8 = . expression ">" expression, FOLLOW [97] -> GOTO 322
	expression/L9 = . expression "+" expression, FOLLOW [97] -> GOTO 322
	expression/L9 = . expression "-" expression, FOLLOW [97] -> GOTO 322
	expression/L10 = . expression "*" expression, FOLLOW [97] -> GOTO 322
	expression/L10 = . expression "/" expression, FOLLOW [97] -> GOTO 322
	expression/L10 = . expression "%" expression, FOLLOW [97] -> GOTO 322
	expression/L11 = . expression "<<" expression, FOLLOW [97] -> GOTO 322
	expression/L11 = . expression ">>" expression, FOLLOW [97] -> GOTO 322
	expression/L12 = . expression "." IDENT, FOLLOW [97] -> GOTO 322
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [97] -> GOTO 322
	expression/L13 = . expression "(" ")", FOLLOW [97] -> GOTO 322
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [97] -> GOTO 322
	iexpression = . expression indirection IDENT, FOLLOW [97] -> GOTO 322
	expression/L12 = . iexpression, FOLLOW [97] -> GOTO 77
	expression/L2 = . BOOLEAN, FOLLOW [97] -> SHIFT BOOLEAN GOTO 78
	expression/L2 = . IDENT, FOLLOW [97] -> SHIFT IDENT GOTO 79
	expression/L2 = . DQSTRING, FOLLOW [97] -> SHIFT DQSTRING GOTO 80
	expression/L2 = . SQSTRING, FOLLOW [97] -> SHIFT SQSTRING GOTO 81
	expression/L2 = . CARDINAL, FOLLOW [97] -> SHIFT CARDINAL GOTO 82
	expression/L2 = . INTEGER, FOLLOW [97] -> SHIFT INTEGER GOTO 83
	expression/L2 = . FLOAT, FOLLOW [97] -> SHIFT FLOAT GOTO 84
	expression/L2 = . "(" expression ")", FOLLOW [97] -> SHIFT '(' GOTO 85
	expression/L9 = . "&" expression, FOLLOW [97] -> SHIFT '&' GOTO 86
	expression/L1 = . "{" expressionlist "}", FOLLOW [97] -> SHIFT '{' GOTO 103
	expression/L1 = . "{" "}", FOLLOW [97] -> SHIFT '{' GOTO 103
	expression/L9 = . "+" expression, FOLLOW [97] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [97] -> SHIFT '-' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [97] -> SHIFT '*' GOTO 90
	expression/L9 = . "~" expression, FOLLOW [97] -> SHIFT '~' GOTO 91
	expression/L9 = . "!" expression, FOLLOW [97] -> SHIFT '!' GOTO 92
	expression/L1 = . "new" typespec ":" expression, FOLLOW [97] -> SHIFT "new" GOTO 98
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [97] -> SHIFT "cast" GOTO 99
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [97] -> SHIFT "cast" GOTO 99
	expression/L2 = . "null", FOLLOW [97] -> SHIFT "null" GOTO 100
[295]
	paramdecl = typespec IDENT . (75), FOLLOW [184] -> REDUCE paramdecl #2 CALL paramdef
[296]
	callablebody_const = "(" parameterlist ")" . "const" "{" codeblock "}", FOLLOW [247] -> SHIFT "const" GOTO 323
	callablebody = "(" parameterlist ")" . "{" codeblock "}", FOLLOW [247] -> SHIFT '{' GOTO 324
[297]
	typespec/L1 = . typename, FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [13] -> GOTO 8
	paramdecl = . typespec IDENT, FOLLOW [184] -> GOTO 198
	parameters = paramdecl "," . parameters, FOLLOW [10] -> GOTO 325
	parameters = . paramdecl "," parameters, FOLLOW [10] -> GOTO 201
	parameters = . paramdecl, FOLLOW [10] -> GOTO 201
	typename/L1 = . IDENT, FOLLOW [62] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [62] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "any" "class" "^", FOLLOW [13] -> SHIFT "any" GOTO 19
	typespec/L1 = . "any" "const" "class" "^", FOLLOW [13] -> SHIFT "any" GOTO 19
	typespec/L1 = . "any" "struct" "^", FOLLOW [13] -> SHIFT "any" GOTO 19
	typespec/L1 = . "any" "const" "struct" "^", FOLLOW [13] -> SHIFT "any" GOTO 19
[298]
	typespec/L1 = . typename, FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [9] -> GOTO 8
	operatordefinition = linkage "operator" operatordecl . typespec callablebody, FOLLOW [171] -> GOTO 326
	operatordefinition = linkage "operator" operatordecl . typespec callablebody_const, FOLLOW [171] -> GOTO 326
	operatordefinition = linkage "operator" operatordecl . callablebody, FOLLOW [171] -> GOTO 327
	operatordefinition = linkage "operator" operatordecl . callablebody_const, FOLLOW [171] -> GOTO 328
	typename/L1 = . IDENT, FOLLOW [168] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [168] -> SHIFT IDENT GOTO 17
	callablebody = . "(" parameterlist ")" "{" codeblock "}", FOLLOW [171] -> SHIFT '(' GOTO 108
	callablebody_const = . "(" parameterlist ")" "const" "{" codeblock "}", FOLLOW [171] -> SHIFT '(' GOTO 108
	typespec/L1 = . "const" typename, FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "any" "class" "^", FOLLOW [9] -> SHIFT "any" GOTO 19
	typespec/L1 = . "any" "const" "class" "^", FOLLOW [9] -> SHIFT "any" GOTO 19
	typespec/L1 = . "any" "struct" "^", FOLLOW [9] -> SHIFT "any" GOTO 19
	typespec/L1 = . "any" "const" "struct" "^", FOLLOW [9] -> SHIFT "any" GOTO 19
[299]
	constructordefinition = linkage "constructor" callablebody . (43), FOLLOW [171] -> REDUCE constructordefinition #3 CALL constructordef
[300]
	typespec/L1 = . typename, FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [13] -> GOTO 8
	paramdecl = . typespec IDENT, FOLLOW [184] -> GOTO 198
	callablebody = "(" . parameterlist ")" "{" codeblock "}", FOLLOW [171] -> GOTO 329
	parameterlist = . parameters, FOLLOW [10] -> GOTO 200
	parameters = . paramdecl "," parameters, FOLLOW [10] -> GOTO 201
	parameters = . paramdecl, FOLLOW [10] -> GOTO 201
	typename/L1 = . IDENT, FOLLOW [62] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [62] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "any" "class" "^", FOLLOW [13] -> SHIFT "any" GOTO 19
	typespec/L1 = . "any" "const" "class" "^", FOLLOW [13] -> SHIFT "any" GOTO 19
	typespec/L1 = . "any" "struct" "^", FOLLOW [13] -> SHIFT "any" GOTO 19
	typespec/L1 = . "any" "const" "struct" "^", FOLLOW [13] -> SHIFT "any" GOTO 19
	parameterlist = . (74), FOLLOW [10] -> REDUCE parameterlist #0 CALL paramdeflist
[301]
	constructordefinition = "destructor" "{" codeblock . "}", FOLLOW [171] -> SHIFT '}' GOTO 330
[302]
	inheritlist = typepath "," inheritlist . (step:35), FOLLOW [19] -> REDUCE inheritlist #3 CALL inheritdef 1
[303]
	classdefinition = "class" IDENT ":" inheritlist "{" class_definitionlist . "}", FOLLOW [172] -> SHIFT '}' GOTO 331
[304]
	interface_definition = "function" IDENT typespec . "(" extern_paramlist ")" ";", FOLLOW [176] -> SHIFT '(' GOTO 332
	interface_definition = "function" IDENT typespec . "(" extern_paramlist ")" "const" ";", FOLLOW [176] -> SHIFT '(' GOTO 332
[305]
	extern_paramlist = . extern_parameters, FOLLOW [10] -> GOTO 243
	interface_definition = "procedure" IDENT "(" . extern_paramlist ")" ";", FOLLOW [176] -> GOTO 333
	interface_definition = "procedure" IDENT "(" . extern_paramlist ")" "const" ";", FOLLOW [176] -> GOTO 333
	typespec/L1 = . typename, FOLLOW [237] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [237] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [237] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [237] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [237] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [237] -> GOTO 8
	extern_parameters = . typespec "," extern_parameters, FOLLOW [10] -> GOTO 245
	extern_parameters = . typespec IDENT "," extern_parameters, FOLLOW [10] -> GOTO 245
	extern_parameters = . typespec, FOLLOW [10] -> GOTO 245
	extern_parameters = . typespec IDENT, FOLLOW [10] -> GOTO 245
	typename/L1 = . IDENT, FOLLOW [238] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [238] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [237] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [237] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [237] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [237] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [237] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [237] -> SHIFT "const" GOTO 18
	typespec/L1 = . "any" "class" "^", FOLLOW [237] -> SHIFT "any" GOTO 19
	typespec/L1 = . "any" "const" "class" "^", FOLLOW [237] -> SHIFT "any" GOTO 19
	typespec/L1 = . "any" "struct" "^", FOLLOW [237] -> SHIFT "any" GOTO 19
	typespec/L1 = . "any" "const" "struct" "^", FOLLOW [237] -> SHIFT "any" GOTO 19
	extern_paramlist = . (7), FOLLOW [10] -> REDUCE extern_paramlist #0 CALL extern_paramdeflist
[306]
	interface_definition = "operator" operatordecl typespec . "(" extern_paramlist ")" ";", FOLLOW [176] -> SHIFT '(' GOTO 334
	interface_definition = "operator" operatordecl typespec . "(" extern_paramlist ")" "const" ";", FOLLOW [176] -> SHIFT '(' GOTO 334
[307]
	extern_paramlist = . extern_parameters, FOLLOW [10] -> GOTO 243
	interface_definition = "operator" operatordecl "(" . extern_paramlist ")" ";", FOLLOW [176] -> GOTO 335
	interface_definition = "operator" operatordecl "(" . extern_paramlist ")" "const" ";", FOLLOW [176] -> GOTO 335
	typespec/L1 = . typename, FOLLOW [237] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [237] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [237] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [237] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [237] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [237] -> GOTO 8
	extern_parameters = . typespec "," extern_parameters, FOLLOW [10] -> GOTO 245
	extern_parameters = . typespec IDENT "," extern_parameters, FOLLOW [10] -> GOTO 245
	extern_parameters = . typespec, FOLLOW [10] -> GOTO 245
	extern_parameters = . typespec IDENT, FOLLOW [10] -> GOTO 245
	typename/L1 = . IDENT, FOLLOW [238] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [238] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [237] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [237] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [237] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [237] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [237] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [237] -> SHIFT "const" GOTO 18
	typespec/L1 = . "any" "class" "^", FOLLOW [237] -> SHIFT "any" GOTO 19
	typespec/L1 = . "any" "const" "class" "^", FOLLOW [237] -> SHIFT "any" GOTO 19
	typespec/L1 = . "any" "struct" "^", FOLLOW [237] -> SHIFT "any" GOTO 19
	typespec/L1 = . "any" "const" "struct" "^", FOLLOW [237] -> SHIFT "any" GOTO 19
	extern_paramlist = . (7), FOLLOW [10] -> REDUCE extern_paramlist #0 CALL extern_paramdeflist
[308]
	operatordecl = "(" ")" . (64), FOLLOW [185] -> REDUCE operatordecl #2 CALL operatordecl {name="()",symbol="call"}
[309]
	operatordecl = "[" "]" . (65), FOLLOW [185] -> REDUCE operatordecl #2 CALL operatordecl {name="[]",symbol="get"}
[310]
	extern_definition = "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist . ")" ";", FOLLOW [59] -> SHIFT ')' GOTO 336
	extern_definition = "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist . "..." ")" ";", FOLLOW [59] -> SHIFT "..." GOTO 337
[311]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist ")" . ";", FOLLOW [59] -> SHIFT ';' GOTO 338
[312]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist "..." . ")" ";", FOLLOW [59] -> SHIFT ')' GOTO 339
[313]
	extern_parameters = typespec IDENT . "," extern_parameters, FOLLOW [186] -> SHIFT ',' GOTO 340
	extern_parameters = typespec IDENT . (6), FOLLOW [186] -> REDUCE extern_parameters #2 CALL extern_paramdef
[314]
	extern_parameters = typespec "," . extern_parameters, FOLLOW [186] -> GOTO 341
	typespec/L1 = . typename, FOLLOW [189] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [189] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [189] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [189] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [189] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [189] -> GOTO 8
	extern_parameters = . typespec "," extern_parameters, FOLLOW [186] -> GOTO 245
	extern_parameters = . typespec IDENT "," extern_parameters, FOLLOW [186] -> GOTO 245
	extern_parameters = . typespec, FOLLOW [186] -> GOTO 245
	extern_parameters = . typespec IDENT, FOLLOW [186] -> GOTO 245
	typename/L1 = . IDENT, FOLLOW [190] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [190] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [189] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [189] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [189] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [189] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [189] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [189] -> SHIFT "const" GOTO 18
	typespec/L1 = . "any" "class" "^", FOLLOW [189] -> SHIFT "any" GOTO 19
	typespec/L1 = . "any" "const" "class" "^", FOLLOW [189] -> SHIFT "any" GOTO 19
	typespec/L1 = . "any" "struct" "^", FOLLOW [189] -> SHIFT "any" GOTO 19
	typespec/L1 = . "any" "const" "struct" "^", FOLLOW [189] -> SHIFT "any" GOTO 19
[315]
	expression/L13 = expression "(" expressionlist ")" . (134), FOLLOW [239] -> REDUCE expression #4 CALL operator "()"
[316]
	expression/L13 = expression "[" expressionlist "]" . (135), FOLLOW [239] -> REDUCE expression #4 CALL operator "[]"
[317]
	expressionlist = expression "," expressionlist ., FOLLOW [255] -> REDUCE expressionlist #3
[318]
	statement/L1 = "if" "(" expression ")" . "{" codeblock "}", FOLLOW [98] -> SHIFT '{' GOTO 342
	statement/L1 = "if" "(" expression ")" . "{" codeblock "}" "else" "{" codeblock "}", FOLLOW [98] -> SHIFT '{' GOTO 342
[319]
	statement/L1 = "while" "(" expression ")" . "{" codeblock "}", FOLLOW [98] -> SHIFT '{' GOTO 343
[320]
	iexpression = expression . indirection IDENT, FOLLOW [239] -> GOTO 139
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [239] -> SHIFT '(' GOTO 140
	expression/L13 = expression . "(" ")", FOLLOW [239] -> SHIFT '(' GOTO 140
	expression/L7 = expression . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 142
	expression/L7 = expression . "^" expression, FOLLOW [239] -> SHIFT '^' GOTO 143
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 144
	expression/L3 = expression . "=" expression, FOLLOW [239] -> SHIFT '=' GOTO 145
	expression/L9 = expression . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 146
	expression/L9 = expression . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 147
	expression/L10 = expression . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 148
	expression/L10 = expression . "/" expression, FOLLOW [239] -> SHIFT '/' GOTO 149
	expression/L10 = expression . "%" expression, FOLLOW [239] -> SHIFT '%' GOTO 150
	expression/L5 = expression . "&&" expression, FOLLOW [239] -> SHIFT "&&" GOTO 151
	expression/L4 = expression . "||" expression, FOLLOW [239] -> SHIFT "||" GOTO 152
	expression/L6 = expression . "|" expression, FOLLOW [239] -> SHIFT '|' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [239] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [239] -> SHIFT ">>" GOTO 155
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [239] -> SHIFT '[' GOTO 156
	expression/L8 = expression . "==" expression, FOLLOW [239] -> SHIFT "==" GOTO 157
	expression/L8 = expression . "!=" expression, FOLLOW [239] -> SHIFT "!=" GOTO 158
	expression/L8 = expression . ">=" expression, FOLLOW [239] -> SHIFT ">=" GOTO 159
	expression/L8 = expression . "<=" expression, FOLLOW [239] -> SHIFT "<=" GOTO 160
	expression/L8 = expression . ">" expression, FOLLOW [239] -> SHIFT '>' GOTO 161
	expression/L8 = expression . "<" expression, FOLLOW [239] -> SHIFT '<' GOTO 162
	expression/L3 = expression . "+=" expression, FOLLOW [239] -> SHIFT "+=" GOTO 163
	expression/L3 = expression . "-=" expression, FOLLOW [239] -> SHIFT "-=" GOTO 164
	expression/L3 = expression . "*=" expression, FOLLOW [239] -> SHIFT "*=" GOTO 165
	expression/L3 = expression . "/=" expression, FOLLOW [239] -> SHIFT "/=" GOTO 166
	expression/L3 = expression . "^=" expression, FOLLOW [239] -> SHIFT "^=" GOTO 167
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "%=" expression, FOLLOW [239] -> SHIFT "%=" GOTO 169
	expression/L3 = expression . "&&=" expression, FOLLOW [239] -> SHIFT "&&=" GOTO 170
	expression/L3 = expression . "||=" expression, FOLLOW [239] -> SHIFT "||=" GOTO 171
	expression/L3 = expression . "|=" expression, FOLLOW [239] -> SHIFT "|=" GOTO 172
	expression/L3 = expression . "<<=" expression, FOLLOW [239] -> SHIFT "<<=" GOTO 173
	expression/L3 = expression . ">>=" expression, FOLLOW [239] -> SHIFT ">>=" GOTO 174
	expression/L12 = expression . "." IDENT, FOLLOW [239] -> SHIFT '.' GOTO 175
	expression/L1 = "new" typespec ":" expression . (89), FOLLOW [239] -> REDUCE expression #4 CALL allocate
[321]
	expression/L1 = "cast" typespec ":" "{" . expression "}", FOLLOW [239] -> GOTO 344
	expression/L3 = . expression "=" expression, FOLLOW [239] -> GOTO 344
	expression/L3 = . expression "+=" expression, FOLLOW [239] -> GOTO 344
	expression/L3 = . expression "-=" expression, FOLLOW [239] -> GOTO 344
	expression/L3 = . expression "*=" expression, FOLLOW [239] -> GOTO 344
	expression/L3 = . expression "/=" expression, FOLLOW [239] -> GOTO 344
	expression/L3 = . expression "^=" expression, FOLLOW [239] -> GOTO 344
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 344
	expression/L3 = . expression "%=" expression, FOLLOW [239] -> GOTO 344
	expression/L3 = . expression "&&=" expression, FOLLOW [239] -> GOTO 344
	expression/L3 = . expression "||=" expression, FOLLOW [239] -> GOTO 344
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 344
	expression/L3 = . expression "|=" expression, FOLLOW [239] -> GOTO 344
	expression/L3 = . expression "<<=" expression, FOLLOW [239] -> GOTO 344
	expression/L3 = . expression ">>=" expression, FOLLOW [239] -> GOTO 344
	expression/L4 = . expression "||" expression, FOLLOW [239] -> GOTO 344
	expression/L5 = . expression "&&" expression, FOLLOW [239] -> GOTO 344
	expression/L6 = . expression "|" expression, FOLLOW [239] -> GOTO 344
	expression/L7 = . expression "^" expression, FOLLOW [239] -> GOTO 344
	expression/L7 = . expression "&" expression, FOLLOW [239] -> GOTO 344
	expression/L8 = . expression "==" expression, FOLLOW [239] -> GOTO 344
	expression/L8 = . expression "!=" expression, FOLLOW [239] -> GOTO 344
	expression/L8 = . expression "<=" expression, FOLLOW [239] -> GOTO 344
	expression/L8 = . expression "<" expression, FOLLOW [239] -> GOTO 344
	expression/L8 = . expression ">=" expression, FOLLOW [239] -> GOTO 344
	expression/L8 = . expression ">" expression, FOLLOW [239] -> GOTO 344
	expression/L9 = . expression "+" expression, FOLLOW [239] -> GOTO 344
	expression/L9 = . expression "-" expression, FOLLOW [239] -> GOTO 344
	expression/L10 = . expression "*" expression, FOLLOW [239] -> GOTO 344
	expression/L10 = . expression "/" expression, FOLLOW [239] -> GOTO 344
	expression/L10 = . expression "%" expression, FOLLOW [239] -> GOTO 344
	expression/L11 = . expression "<<" expression, FOLLOW [239] -> GOTO 344
	expression/L11 = . expression ">>" expression, FOLLOW [239] -> GOTO 344
	expression/L12 = . expression "." IDENT, FOLLOW [239] -> GOTO 344
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [239] -> GOTO 344
	expression/L13 = . expression "(" ")", FOLLOW [239] -> GOTO 344
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [239] -> GOTO 344
	iexpression = . expression indirection IDENT, FOLLOW [239] -> GOTO 344
	expression/L12 = . iexpression, FOLLOW [239] -> GOTO 77
	expression/L2 = . BOOLEAN, FOLLOW [239] -> SHIFT BOOLEAN GOTO 78
	expression/L2 = . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 79
	expression/L2 = . DQSTRING, FOLLOW [239] -> SHIFT DQSTRING GOTO 80
	expression/L2 = . SQSTRING, FOLLOW [239] -> SHIFT SQSTRING GOTO 81
	expression/L2 = . CARDINAL, FOLLOW [239] -> SHIFT CARDINAL GOTO 82
	expression/L2 = . INTEGER, FOLLOW [239] -> SHIFT INTEGER GOTO 83
	expression/L2 = . FLOAT, FOLLOW [239] -> SHIFT FLOAT GOTO 84
	expression/L2 = . "(" expression ")", FOLLOW [239] -> SHIFT '(' GOTO 85
	expression/L9 = . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 86
	expression/L1 = . "{" expressionlist "}", FOLLOW [239] -> SHIFT '{' GOTO 103
	expression/L1 = . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 103
	expression/L1 = "cast" typespec ":" "{" . "}", FOLLOW [239] -> SHIFT '}' GOTO 345
	expression/L9 = . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 90
	expression/L9 = . "~" expression, FOLLOW [239] -> SHIFT '~' GOTO 91
	expression/L9 = . "!" expression, FOLLOW [239] -> SHIFT '!' GOTO 92
	expression/L1 = . "new" typespec ":" expression, FOLLOW [239] -> SHIFT "new" GOTO 98
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [239] -> SHIFT "cast" GOTO 99
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [239] -> SHIFT "cast" GOTO 99
	expression/L2 = . "null", FOLLOW [239] -> SHIFT "null" GOTO 100
[322]
	iexpression = expression . indirection IDENT, FOLLOW [97] -> GOTO 139
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [97] -> SHIFT '(' GOTO 140
	expression/L13 = expression . "(" ")", FOLLOW [97] -> SHIFT '(' GOTO 140
	expression/L7 = expression . "&" expression, FOLLOW [97] -> SHIFT '&' GOTO 142
	expression/L7 = expression . "^" expression, FOLLOW [97] -> SHIFT '^' GOTO 143
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 144
	expression/L3 = expression . "=" expression, FOLLOW [97] -> SHIFT '=' GOTO 145
	expression/L9 = expression . "+" expression, FOLLOW [97] -> SHIFT '+' GOTO 146
	expression/L9 = expression . "-" expression, FOLLOW [97] -> SHIFT '-' GOTO 147
	expression/L10 = expression . "*" expression, FOLLOW [97] -> SHIFT '*' GOTO 148
	expression/L10 = expression . "/" expression, FOLLOW [97] -> SHIFT '/' GOTO 149
	expression/L10 = expression . "%" expression, FOLLOW [97] -> SHIFT '%' GOTO 150
	expression/L5 = expression . "&&" expression, FOLLOW [97] -> SHIFT "&&" GOTO 151
	expression/L4 = expression . "||" expression, FOLLOW [97] -> SHIFT "||" GOTO 152
	expression/L6 = expression . "|" expression, FOLLOW [97] -> SHIFT '|' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [97] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [97] -> SHIFT ">>" GOTO 155
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [97] -> SHIFT '[' GOTO 156
	expression/L8 = expression . "==" expression, FOLLOW [97] -> SHIFT "==" GOTO 157
	expression/L8 = expression . "!=" expression, FOLLOW [97] -> SHIFT "!=" GOTO 158
	expression/L8 = expression . ">=" expression, FOLLOW [97] -> SHIFT ">=" GOTO 159
	expression/L8 = expression . "<=" expression, FOLLOW [97] -> SHIFT "<=" GOTO 160
	expression/L8 = expression . ">" expression, FOLLOW [97] -> SHIFT '>' GOTO 161
	expression/L8 = expression . "<" expression, FOLLOW [97] -> SHIFT '<' GOTO 162
	expression/L3 = expression . "+=" expression, FOLLOW [97] -> SHIFT "+=" GOTO 163
	expression/L3 = expression . "-=" expression, FOLLOW [97] -> SHIFT "-=" GOTO 164
	expression/L3 = expression . "*=" expression, FOLLOW [97] -> SHIFT "*=" GOTO 165
	expression/L3 = expression . "/=" expression, FOLLOW [97] -> SHIFT "/=" GOTO 166
	expression/L3 = expression . "^=" expression, FOLLOW [97] -> SHIFT "^=" GOTO 167
	expression/L3 = expression . "&=" expression, FOLLOW [97] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "&=" expression, FOLLOW [97] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "%=" expression, FOLLOW [97] -> SHIFT "%=" GOTO 169
	expression/L3 = expression . "&&=" expression, FOLLOW [97] -> SHIFT "&&=" GOTO 170
	expression/L3 = expression . "||=" expression, FOLLOW [97] -> SHIFT "||=" GOTO 171
	expression/L3 = expression . "|=" expression, FOLLOW [97] -> SHIFT "|=" GOTO 172
	expression/L3 = expression . "<<=" expression, FOLLOW [97] -> SHIFT "<<=" GOTO 173
	expression/L3 = expression . ">>=" expression, FOLLOW [97] -> SHIFT ">>=" GOTO 174
	expression/L12 = expression . "." IDENT, FOLLOW [97] -> SHIFT '.' GOTO 175
	variabledefinition = typespec IDENT "[" expression "]" "=" expression . (step:86), FOLLOW [15] -> REDUCE variabledefinition #7 CALL vardef_array_assign
[323]
	callablebody_const = "(" parameterlist ")" "const" . "{" codeblock "}", FOLLOW [247] -> SHIFT '{' GOTO 346
[324]
	statement/L1 = . typedefinition ";", FOLLOW [98] -> GOTO 71
	functiondefinition = . linkage "function" IDENT typespec callablebody, FOLLOW [98] -> GOTO 14
	functiondefinition = . linkage "function" IDENT typespec callablebody_const, FOLLOW [98] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [98] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody_const, FOLLOW [98] -> GOTO 14
	statement/L1 = . functiondefinition, FOLLOW [98] -> GOTO 72
	callablebody = "(" parameterlist ")" "{" . codeblock "}", FOLLOW [247] -> GOTO 347
	codeblock = . statementlist, FOLLOW [18] -> GOTO 74
	statementlist = . statement statementlist, FOLLOW [18] -> GOTO 75
	statement/L1 = . expression ";", FOLLOW [98] -> GOTO 76
	expression/L3 = . expression "=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "+=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "-=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "*=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "/=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "^=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "&=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "%=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "&&=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "||=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "&=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "|=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "<<=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression ">>=" expression, FOLLOW [97] -> GOTO 76
	expression/L4 = . expression "||" expression, FOLLOW [97] -> GOTO 76
	expression/L5 = . expression "&&" expression, FOLLOW [97] -> GOTO 76
	expression/L6 = . expression "|" expression, FOLLOW [97] -> GOTO 76
	expression/L7 = . expression "^" expression, FOLLOW [97] -> GOTO 76
	expression/L7 = . expression "&" expression, FOLLOW [97] -> GOTO 76
	expression/L8 = . expression "==" expression, FOLLOW [97] -> GOTO 76
	expression/L8 = . expression "!=" expression, FOLLOW [97] -> GOTO 76
	expression/L8 = . expression "<=" expression, FOLLOW [97] -> GOTO 76
	expression/L8 = . expression "<" expression, FOLLOW [97] -> GOTO 76
	expression/L8 = . expression ">=" expression, FOLLOW [97] -> GOTO 76
	expression/L8 = . expression ">" expression, FOLLOW [97] -> GOTO 76
	expression/L9 = . expression "+" expression, FOLLOW [97] -> GOTO 76
	expression/L9 = . expression "-" expression, FOLLOW [97] -> GOTO 76
	expression/L10 = . expression "*" expression, FOLLOW [97] -> GOTO 76
	expression/L10 = . expression "/" expression, FOLLOW [97] -> GOTO 76
	expression/L10 = . expression "%" expression, FOLLOW [97] -> GOTO 76
	expression/L11 = . expression "<<" expression, FOLLOW [97] -> GOTO 76
	expression/L11 = . expression ">>" expression, FOLLOW [97] -> GOTO 76
	expression/L12 = . expression "." IDENT, FOLLOW [97] -> GOTO 76
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [97] -> GOTO 76
	expression/L13 = . expression "(" ")", FOLLOW [97] -> GOTO 76
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [97] -> GOTO 76
	iexpression = . expression indirection IDENT, FOLLOW [97] -> GOTO 76
	expression/L12 = . iexpression, FOLLOW [97] -> GOTO 77
	expression/L2 = . BOOLEAN, FOLLOW [97] -> SHIFT BOOLEAN GOTO 78
	expression/L2 = . IDENT, FOLLOW [97] -> SHIFT IDENT GOTO 79
	expression/L2 = . DQSTRING, FOLLOW [97] -> SHIFT DQSTRING GOTO 80
	expression/L2 = . SQSTRING, FOLLOW [97] -> SHIFT SQSTRING GOTO 81
	expression/L2 = . CARDINAL, FOLLOW [97] -> SHIFT CARDINAL GOTO 82
	expression/L2 = . INTEGER, FOLLOW [97] -> SHIFT INTEGER GOTO 83
	expression/L2 = . FLOAT, FOLLOW [97] -> SHIFT FLOAT GOTO 84
	expression/L2 = . "(" expression ")", FOLLOW [97] -> SHIFT '(' GOTO 85
	expression/L9 = . "&" expression, FOLLOW [97] -> SHIFT '&' GOTO 86
	typedefinition = . "typedef" typepath IDENT, FOLLOW [15] -> SHIFT "typedef" GOTO 22
	statement/L1 = . "{" codeblock "}", FOLLOW [98] -> SHIFT '{' GOTO 87
	expression/L1 = . "{" expressionlist "}", FOLLOW [97] -> SHIFT '{' GOTO 87
	expression/L1 = . "{" "}", FOLLOW [97] -> SHIFT '{' GOTO 87
	linkage = . "private", FOLLOW [61] -> SHIFT "private" GOTO 24
	linkage = . "public", FOLLOW [61] -> SHIFT "public" GOTO 25
	expression/L9 = . "+" expression, FOLLOW [97] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [97] -> SHIFT '-' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [97] -> SHIFT '*' GOTO 90
	expression/L9 = . "~" expression, FOLLOW [97] -> SHIFT '~' GOTO 91
	expression/L9 = . "!" expression, FOLLOW [97] -> SHIFT '!' GOTO 92
	statement/L1 = . "var" variabledefinition ";", FOLLOW [98] -> SHIFT "var" GOTO 93
	statement/L1 = . "return" expression ";", FOLLOW [98] -> SHIFT "return" GOTO 94
	statement/L1 = . "delete" expression ";", FOLLOW [98] -> SHIFT "delete" GOTO 95
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}", FOLLOW [98] -> SHIFT "if" GOTO 96
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}", FOLLOW [98] -> SHIFT "if" GOTO 96
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}", FOLLOW [98] -> SHIFT "while" GOTO 97
	expression/L1 = . "new" typespec ":" expression, FOLLOW [97] -> SHIFT "new" GOTO 98
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [97] -> SHIFT "cast" GOTO 99
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [97] -> SHIFT "cast" GOTO 99
	expression/L2 = . "null", FOLLOW [97] -> SHIFT "null" GOTO 100
	statementlist = ., FOLLOW [18] -> REDUCE statementlist #0
	linkage = . (38), FOLLOW [61] -> REDUCE linkage #0 CALL linkage {private=false,linkage="external"}
[325]
	parameters = paramdecl "," parameters ., FOLLOW [10] -> REDUCE parameters #3
[326]
	operatordefinition = linkage "operator" operatordecl typespec . callablebody, FOLLOW [171] -> GOTO 348
	operatordefinition = linkage "operator" operatordecl typespec . callablebody_const, FOLLOW [171] -> GOTO 349
	callablebody = . "(" parameterlist ")" "{" codeblock "}", FOLLOW [171] -> SHIFT '(' GOTO 108
	callablebody_const = . "(" parameterlist ")" "const" "{" codeblock "}", FOLLOW [171] -> SHIFT '(' GOTO 108
[327]
	operatordefinition = linkage "operator" operatordecl callablebody . (47), FOLLOW [171] -> REDUCE operatordefinition #4 CALL operator_procdef {const=false}
[328]
	operatordefinition = linkage "operator" operatordecl callablebody_const . (48), FOLLOW [171] -> REDUCE operatordefinition #4 CALL operator_procdef {const=true}
[329]
	callablebody = "(" parameterlist . ")" "{" codeblock "}", FOLLOW [171] -> SHIFT ')' GOTO 350
[330]
	constructordefinition = "destructor" "{" codeblock "}" . (44), FOLLOW [171] -> REDUCE constructordefinition #4 CALL destructordef
[331]
	classdefinition = "class" IDENT ":" inheritlist "{" class_definitionlist "}" . (step:36), FOLLOW [172] -> REDUCE classdefinition #7 CALL classdef
[332]
	extern_paramlist = . extern_parameters, FOLLOW [10] -> GOTO 243
	interface_definition = "function" IDENT typespec "(" . extern_paramlist ")" ";", FOLLOW [176] -> GOTO 351
	interface_definition = "function" IDENT typespec "(" . extern_paramlist ")" "const" ";", FOLLOW [176] -> GOTO 351
	typespec/L1 = . typename, FOLLOW [237] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [237] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [237] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [237] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [237] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [237] -> GOTO 8
	extern_parameters = . typespec "," extern_parameters, FOLLOW [10] -> GOTO 245
	extern_parameters = . typespec IDENT "," extern_parameters, FOLLOW [10] -> GOTO 245
	extern_parameters = . typespec, FOLLOW [10] -> GOTO 245
	extern_parameters = . typespec IDENT, FOLLOW [10] -> GOTO 245
	typename/L1 = . IDENT, FOLLOW [238] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [238] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [237] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [237] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [237] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [237] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [237] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [237] -> SHIFT "const" GOTO 18
	typespec/L1 = . "any" "class" "^", FOLLOW [237] -> SHIFT "any" GOTO 19
	typespec/L1 = . "any" "const" "class" "^", FOLLOW [237] -> SHIFT "any" GOTO 19
	typespec/L1 = . "any" "struct" "^", FOLLOW [237] -> SHIFT "any" GOTO 19
	typespec/L1 = . "any" "const" "struct" "^", FOLLOW [237] -> SHIFT "any" GOTO 19
	extern_paramlist = . (7), FOLLOW [10] -> REDUCE extern_paramlist #0 CALL extern_paramdeflist
[333]
	interface_definition = "procedure" IDENT "(" extern_paramlist . ")" ";", FOLLOW [176] -> SHIFT ')' GOTO 352
	interface_definition = "procedure" IDENT "(" extern_paramlist . ")" "const" ";", FOLLOW [176] -> SHIFT ')' GOTO 352
[334]
	extern_paramlist = . extern_parameters, FOLLOW [10] -> GOTO 243
	interface_definition = "operator" operatordecl typespec "(" . extern_paramlist ")" ";", FOLLOW [176] -> GOTO 353
	interface_definition = "operator" operatordecl typespec "(" . extern_paramlist ")" "const" ";", FOLLOW [176] -> GOTO 353
	typespec/L1 = . typename, FOLLOW [237] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [237] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [237] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [237] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [237] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [237] -> GOTO 8
	extern_parameters = . typespec "," extern_parameters, FOLLOW [10] -> GOTO 245
	extern_parameters = . typespec IDENT "," extern_parameters, FOLLOW [10] -> GOTO 245
	extern_parameters = . typespec, FOLLOW [10] -> GOTO 245
	extern_parameters = . typespec IDENT, FOLLOW [10] -> GOTO 245
	typename/L1 = . IDENT, FOLLOW [238] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [238] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [237] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [237] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [237] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [237] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [237] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [237] -> SHIFT "const" GOTO 18
	typespec/L1 = . "any" "class" "^", FOLLOW [237] -> SHIFT "any" GOTO 19
	typespec/L1 = . "any" "const" "class" "^", FOLLOW [237] -> SHIFT "any" GOTO 19
	typespec/L1 = . "any" "struct" "^", FOLLOW [237] -> SHIFT "any" GOTO 19
	typespec/L1 = . "any" "const" "struct" "^", FOLLOW [237] -> SHIFT "any" GOTO 19
	extern_paramlist = . (7), FOLLOW [10] -> REDUCE extern_paramlist #0 CALL extern_paramdeflist
[335]
	interface_definition = "operator" operatordecl "(" extern_paramlist . ")" ";", FOLLOW [176] -> SHIFT ')' GOTO 354
	interface_definition = "operator" operatordecl "(" extern_paramlist . ")" "const" ";", FOLLOW [176] -> SHIFT ')' GOTO 354
[336]
	extern_definition = "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist ")" . ";", FOLLOW [59] -> SHIFT ';' GOTO 355
[337]
	extern_definition = "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist "..." . ")" ";", FOLLOW [59] -> SHIFT ')' GOTO 356
[338]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist ")" ";" . (3), FOLLOW [59] -> REDUCE extern_definition #8 CALL extern_procdef
[339]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist "..." ")" . ";", FOLLOW [59] -> SHIFT ';' GOTO 357
[340]
	extern_parameters = typespec IDENT "," . extern_parameters, FOLLOW [186] -> GOTO 358
	typespec/L1 = . typename, FOLLOW [189] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [189] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [189] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [189] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [189] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [189] -> GOTO 8
	extern_parameters = . typespec "," extern_parameters, FOLLOW [186] -> GOTO 245
	extern_parameters = . typespec IDENT "," extern_parameters, FOLLOW [186] -> GOTO 245
	extern_parameters = . typespec, FOLLOW [186] -> GOTO 245
	extern_parameters = . typespec IDENT, FOLLOW [186] -> GOTO 245
	typename/L1 = . IDENT, FOLLOW [190] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [190] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [189] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [189] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [189] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [189] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [189] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [189] -> SHIFT "const" GOTO 18
	typespec/L1 = . "any" "class" "^", FOLLOW [189] -> SHIFT "any" GOTO 19
	typespec/L1 = . "any" "const" "class" "^", FOLLOW [189] -> SHIFT "any" GOTO 19
	typespec/L1 = . "any" "struct" "^", FOLLOW [189] -> SHIFT "any" GOTO 19
	typespec/L1 = . "any" "const" "struct" "^", FOLLOW [189] -> SHIFT "any" GOTO 19
[341]
	extern_parameters = typespec "," extern_parameters . (6), FOLLOW [186] -> REDUCE extern_parameters #3 CALL extern_paramdef
[342]
	statement/L1 = . typedefinition ";", FOLLOW [98] -> GOTO 71
	functiondefinition = . linkage "function" IDENT typespec callablebody, FOLLOW [98] -> GOTO 14
	functiondefinition = . linkage "function" IDENT typespec callablebody_const, FOLLOW [98] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [98] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody_const, FOLLOW [98] -> GOTO 14
	statement/L1 = . functiondefinition, FOLLOW [98] -> GOTO 72
	statement/L1 = "if" "(" expression ")" "{" . codeblock "}", FOLLOW [98] -> GOTO 359
	statement/L1 = "if" "(" expression ")" "{" . codeblock "}" "else" "{" codeblock "}", FOLLOW [98] -> GOTO 359
	codeblock = . statementlist, FOLLOW [18] -> GOTO 74
	statementlist = . statement statementlist, FOLLOW [18] -> GOTO 75
	statement/L1 = . expression ";", FOLLOW [98] -> GOTO 76
	expression/L3 = . expression "=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "+=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "-=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "*=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "/=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "^=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "&=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "%=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "&&=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "||=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "&=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "|=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "<<=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression ">>=" expression, FOLLOW [97] -> GOTO 76
	expression/L4 = . expression "||" expression, FOLLOW [97] -> GOTO 76
	expression/L5 = . expression "&&" expression, FOLLOW [97] -> GOTO 76
	expression/L6 = . expression "|" expression, FOLLOW [97] -> GOTO 76
	expression/L7 = . expression "^" expression, FOLLOW [97] -> GOTO 76
	expression/L7 = . expression "&" expression, FOLLOW [97] -> GOTO 76
	expression/L8 = . expression "==" expression, FOLLOW [97] -> GOTO 76
	expression/L8 = . expression "!=" expression, FOLLOW [97] -> GOTO 76
	expression/L8 = . expression "<=" expression, FOLLOW [97] -> GOTO 76
	expression/L8 = . expression "<" expression, FOLLOW [97] -> GOTO 76
	expression/L8 = . expression ">=" expression, FOLLOW [97] -> GOTO 76
	expression/L8 = . expression ">" expression, FOLLOW [97] -> GOTO 76
	expression/L9 = . expression "+" expression, FOLLOW [97] -> GOTO 76
	expression/L9 = . expression "-" expression, FOLLOW [97] -> GOTO 76
	expression/L10 = . expression "*" expression, FOLLOW [97] -> GOTO 76
	expression/L10 = . expression "/" expression, FOLLOW [97] -> GOTO 76
	expression/L10 = . expression "%" expression, FOLLOW [97] -> GOTO 76
	expression/L11 = . expression "<<" expression, FOLLOW [97] -> GOTO 76
	expression/L11 = . expression ">>" expression, FOLLOW [97] -> GOTO 76
	expression/L12 = . expression "." IDENT, FOLLOW [97] -> GOTO 76
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [97] -> GOTO 76
	expression/L13 = . expression "(" ")", FOLLOW [97] -> GOTO 76
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [97] -> GOTO 76
	iexpression = . expression indirection IDENT, FOLLOW [97] -> GOTO 76
	expression/L12 = . iexpression, FOLLOW [97] -> GOTO 77
	expression/L2 = . BOOLEAN, FOLLOW [97] -> SHIFT BOOLEAN GOTO 78
	expression/L2 = . IDENT, FOLLOW [97] -> SHIFT IDENT GOTO 79
	expression/L2 = . DQSTRING, FOLLOW [97] -> SHIFT DQSTRING GOTO 80
	expression/L2 = . SQSTRING, FOLLOW [97] -> SHIFT SQSTRING GOTO 81
	expression/L2 = . CARDINAL, FOLLOW [97] -> SHIFT CARDINAL GOTO 82
	expression/L2 = . INTEGER, FOLLOW [97] -> SHIFT INTEGER GOTO 83
	expression/L2 = . FLOAT, FOLLOW [97] -> SHIFT FLOAT GOTO 84
	expression/L2 = . "(" expression ")", FOLLOW [97] -> SHIFT '(' GOTO 85
	expression/L9 = . "&" expression, FOLLOW [97] -> SHIFT '&' GOTO 86
	typedefinition = . "typedef" typepath IDENT, FOLLOW [15] -> SHIFT "typedef" GOTO 22
	statement/L1 = . "{" codeblock "}", FOLLOW [98] -> SHIFT '{' GOTO 87
	expression/L1 = . "{" expressionlist "}", FOLLOW [97] -> SHIFT '{' GOTO 87
	expression/L1 = . "{" "}", FOLLOW [97] -> SHIFT '{' GOTO 87
	linkage = . "private", FOLLOW [61] -> SHIFT "private" GOTO 24
	linkage = . "public", FOLLOW [61] -> SHIFT "public" GOTO 25
	expression/L9 = . "+" expression, FOLLOW [97] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [97] -> SHIFT '-' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [97] -> SHIFT '*' GOTO 90
	expression/L9 = . "~" expression, FOLLOW [97] -> SHIFT '~' GOTO 91
	expression/L9 = . "!" expression, FOLLOW [97] -> SHIFT '!' GOTO 92
	statement/L1 = . "var" variabledefinition ";", FOLLOW [98] -> SHIFT "var" GOTO 93
	statement/L1 = . "return" expression ";", FOLLOW [98] -> SHIFT "return" GOTO 94
	statement/L1 = . "delete" expression ";", FOLLOW [98] -> SHIFT "delete" GOTO 95
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}", FOLLOW [98] -> SHIFT "if" GOTO 96
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}", FOLLOW [98] -> SHIFT "if" GOTO 96
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}", FOLLOW [98] -> SHIFT "while" GOTO 97
	expression/L1 = . "new" typespec ":" expression, FOLLOW [97] -> SHIFT "new" GOTO 98
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [97] -> SHIFT "cast" GOTO 99
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [97] -> SHIFT "cast" GOTO 99
	expression/L2 = . "null", FOLLOW [97] -> SHIFT "null" GOTO 100
	statementlist = ., FOLLOW [18] -> REDUCE statementlist #0
	linkage = . (38), FOLLOW [61] -> REDUCE linkage #0 CALL linkage {private=false,linkage="external"}
[343]
	statement/L1 = . typedefinition ";", FOLLOW [98] -> GOTO 71
	functiondefinition = . linkage "function" IDENT typespec callablebody, FOLLOW [98] -> GOTO 14
	functiondefinition = . linkage "function" IDENT typespec callablebody_const, FOLLOW [98] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [98] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody_const, FOLLOW [98] -> GOTO 14
	statement/L1 = . functiondefinition, FOLLOW [98] -> GOTO 72
	statement/L1 = "while" "(" expression ")" "{" . codeblock "}", FOLLOW [98] -> GOTO 360
	codeblock = . statementlist, FOLLOW [18] -> GOTO 74
	statementlist = . statement statementlist, FOLLOW [18] -> GOTO 75
	statement/L1 = . expression ";", FOLLOW [98] -> GOTO 76
	expression/L3 = . expression "=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "+=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "-=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "*=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "/=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "^=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "&=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "%=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "&&=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "||=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "&=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "|=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "<<=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression ">>=" expression, FOLLOW [97] -> GOTO 76
	expression/L4 = . expression "||" expression, FOLLOW [97] -> GOTO 76
	expression/L5 = . expression "&&" expression, FOLLOW [97] -> GOTO 76
	expression/L6 = . expression "|" expression, FOLLOW [97] -> GOTO 76
	expression/L7 = . expression "^" expression, FOLLOW [97] -> GOTO 76
	expression/L7 = . expression "&" expression, FOLLOW [97] -> GOTO 76
	expression/L8 = . expression "==" expression, FOLLOW [97] -> GOTO 76
	expression/L8 = . expression "!=" expression, FOLLOW [97] -> GOTO 76
	expression/L8 = . expression "<=" expression, FOLLOW [97] -> GOTO 76
	expression/L8 = . expression "<" expression, FOLLOW [97] -> GOTO 76
	expression/L8 = . expression ">=" expression, FOLLOW [97] -> GOTO 76
	expression/L8 = . expression ">" expression, FOLLOW [97] -> GOTO 76
	expression/L9 = . expression "+" expression, FOLLOW [97] -> GOTO 76
	expression/L9 = . expression "-" expression, FOLLOW [97] -> GOTO 76
	expression/L10 = . expression "*" expression, FOLLOW [97] -> GOTO 76
	expression/L10 = . expression "/" expression, FOLLOW [97] -> GOTO 76
	expression/L10 = . expression "%" expression, FOLLOW [97] -> GOTO 76
	expression/L11 = . expression "<<" expression, FOLLOW [97] -> GOTO 76
	expression/L11 = . expression ">>" expression, FOLLOW [97] -> GOTO 76
	expression/L12 = . expression "." IDENT, FOLLOW [97] -> GOTO 76
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [97] -> GOTO 76
	expression/L13 = . expression "(" ")", FOLLOW [97] -> GOTO 76
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [97] -> GOTO 76
	iexpression = . expression indirection IDENT, FOLLOW [97] -> GOTO 76
	expression/L12 = . iexpression, FOLLOW [97] -> GOTO 77
	expression/L2 = . BOOLEAN, FOLLOW [97] -> SHIFT BOOLEAN GOTO 78
	expression/L2 = . IDENT, FOLLOW [97] -> SHIFT IDENT GOTO 79
	expression/L2 = . DQSTRING, FOLLOW [97] -> SHIFT DQSTRING GOTO 80
	expression/L2 = . SQSTRING, FOLLOW [97] -> SHIFT SQSTRING GOTO 81
	expression/L2 = . CARDINAL, FOLLOW [97] -> SHIFT CARDINAL GOTO 82
	expression/L2 = . INTEGER, FOLLOW [97] -> SHIFT INTEGER GOTO 83
	expression/L2 = . FLOAT, FOLLOW [97] -> SHIFT FLOAT GOTO 84
	expression/L2 = . "(" expression ")", FOLLOW [97] -> SHIFT '(' GOTO 85
	expression/L9 = . "&" expression, FOLLOW [97] -> SHIFT '&' GOTO 86
	typedefinition = . "typedef" typepath IDENT, FOLLOW [15] -> SHIFT "typedef" GOTO 22
	statement/L1 = . "{" codeblock "}", FOLLOW [98] -> SHIFT '{' GOTO 87
	expression/L1 = . "{" expressionlist "}", FOLLOW [97] -> SHIFT '{' GOTO 87
	expression/L1 = . "{" "}", FOLLOW [97] -> SHIFT '{' GOTO 87
	linkage = . "private", FOLLOW [61] -> SHIFT "private" GOTO 24
	linkage = . "public", FOLLOW [61] -> SHIFT "public" GOTO 25
	expression/L9 = . "+" expression, FOLLOW [97] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [97] -> SHIFT '-' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [97] -> SHIFT '*' GOTO 90
	expression/L9 = . "~" expression, FOLLOW [97] -> SHIFT '~' GOTO 91
	expression/L9 = . "!" expression, FOLLOW [97] -> SHIFT '!' GOTO 92
	statement/L1 = . "var" variabledefinition ";", FOLLOW [98] -> SHIFT "var" GOTO 93
	statement/L1 = . "return" expression ";", FOLLOW [98] -> SHIFT "return" GOTO 94
	statement/L1 = . "delete" expression ";", FOLLOW [98] -> SHIFT "delete" GOTO 95
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}", FOLLOW [98] -> SHIFT "if" GOTO 96
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}", FOLLOW [98] -> SHIFT "if" GOTO 96
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}", FOLLOW [98] -> SHIFT "while" GOTO 97
	expression/L1 = . "new" typespec ":" expression, FOLLOW [97] -> SHIFT "new" GOTO 98
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [97] -> SHIFT "cast" GOTO 99
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [97] -> SHIFT "cast" GOTO 99
	expression/L2 = . "null", FOLLOW [97] -> SHIFT "null" GOTO 100
	statementlist = ., FOLLOW [18] -> REDUCE statementlist #0
	linkage = . (38), FOLLOW [61] -> REDUCE linkage #0 CALL linkage {private=false,linkage="external"}
[344]
	iexpression = expression . indirection IDENT, FOLLOW [239] -> GOTO 139
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [239] -> SHIFT '(' GOTO 140
	expression/L13 = expression . "(" ")", FOLLOW [239] -> SHIFT '(' GOTO 140
	expression/L7 = expression . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 142
	expression/L7 = expression . "^" expression, FOLLOW [239] -> SHIFT '^' GOTO 143
	expression/L1 = "cast" typespec ":" "{" expression . "}", FOLLOW [239] -> SHIFT '}' GOTO 361
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 144
	expression/L3 = expression . "=" expression, FOLLOW [239] -> SHIFT '=' GOTO 145
	expression/L9 = expression . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 146
	expression/L9 = expression . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 147
	expression/L10 = expression . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 148
	expression/L10 = expression . "/" expression, FOLLOW [239] -> SHIFT '/' GOTO 149
	expression/L10 = expression . "%" expression, FOLLOW [239] -> SHIFT '%' GOTO 150
	expression/L5 = expression . "&&" expression, FOLLOW [239] -> SHIFT "&&" GOTO 151
	expression/L4 = expression . "||" expression, FOLLOW [239] -> SHIFT "||" GOTO 152
	expression/L6 = expression . "|" expression, FOLLOW [239] -> SHIFT '|' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [239] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [239] -> SHIFT ">>" GOTO 155
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [239] -> SHIFT '[' GOTO 156
	expression/L8 = expression . "==" expression, FOLLOW [239] -> SHIFT "==" GOTO 157
	expression/L8 = expression . "!=" expression, FOLLOW [239] -> SHIFT "!=" GOTO 158
	expression/L8 = expression . ">=" expression, FOLLOW [239] -> SHIFT ">=" GOTO 159
	expression/L8 = expression . "<=" expression, FOLLOW [239] -> SHIFT "<=" GOTO 160
	expression/L8 = expression . ">" expression, FOLLOW [239] -> SHIFT '>' GOTO 161
	expression/L8 = expression . "<" expression, FOLLOW [239] -> SHIFT '<' GOTO 162
	expression/L3 = expression . "+=" expression, FOLLOW [239] -> SHIFT "+=" GOTO 163
	expression/L3 = expression . "-=" expression, FOLLOW [239] -> SHIFT "-=" GOTO 164
	expression/L3 = expression . "*=" expression, FOLLOW [239] -> SHIFT "*=" GOTO 165
	expression/L3 = expression . "/=" expression, FOLLOW [239] -> SHIFT "/=" GOTO 166
	expression/L3 = expression . "^=" expression, FOLLOW [239] -> SHIFT "^=" GOTO 167
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 168
	expression/L3 = expression . "%=" expression, FOLLOW [239] -> SHIFT "%=" GOTO 169
	expression/L3 = expression . "&&=" expression, FOLLOW [239] -> SHIFT "&&=" GOTO 170
	expression/L3 = expression . "||=" expression, FOLLOW [239] -> SHIFT "||=" GOTO 171
	expression/L3 = expression . "|=" expression, FOLLOW [239] -> SHIFT "|=" GOTO 172
	expression/L3 = expression . "<<=" expression, FOLLOW [239] -> SHIFT "<<=" GOTO 173
	expression/L3 = expression . ">>=" expression, FOLLOW [239] -> SHIFT ">>=" GOTO 174
	expression/L12 = expression . "." IDENT, FOLLOW [239] -> SHIFT '.' GOTO 175
[345]
	expression/L1 = "cast" typespec ":" "{" "}" . (90), FOLLOW [239] -> REDUCE expression #5 CALL typecast
[346]
	statement/L1 = . typedefinition ";", FOLLOW [98] -> GOTO 71
	functiondefinition = . linkage "function" IDENT typespec callablebody, FOLLOW [98] -> GOTO 14
	functiondefinition = . linkage "function" IDENT typespec callablebody_const, FOLLOW [98] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [98] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody_const, FOLLOW [98] -> GOTO 14
	statement/L1 = . functiondefinition, FOLLOW [98] -> GOTO 72
	callablebody_const = "(" parameterlist ")" "const" "{" . codeblock "}", FOLLOW [247] -> GOTO 362
	codeblock = . statementlist, FOLLOW [18] -> GOTO 74
	statementlist = . statement statementlist, FOLLOW [18] -> GOTO 75
	statement/L1 = . expression ";", FOLLOW [98] -> GOTO 76
	expression/L3 = . expression "=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "+=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "-=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "*=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "/=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "^=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "&=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "%=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "&&=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "||=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "&=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "|=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "<<=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression ">>=" expression, FOLLOW [97] -> GOTO 76
	expression/L4 = . expression "||" expression, FOLLOW [97] -> GOTO 76
	expression/L5 = . expression "&&" expression, FOLLOW [97] -> GOTO 76
	expression/L6 = . expression "|" expression, FOLLOW [97] -> GOTO 76
	expression/L7 = . expression "^" expression, FOLLOW [97] -> GOTO 76
	expression/L7 = . expression "&" expression, FOLLOW [97] -> GOTO 76
	expression/L8 = . expression "==" expression, FOLLOW [97] -> GOTO 76
	expression/L8 = . expression "!=" expression, FOLLOW [97] -> GOTO 76
	expression/L8 = . expression "<=" expression, FOLLOW [97] -> GOTO 76
	expression/L8 = . expression "<" expression, FOLLOW [97] -> GOTO 76
	expression/L8 = . expression ">=" expression, FOLLOW [97] -> GOTO 76
	expression/L8 = . expression ">" expression, FOLLOW [97] -> GOTO 76
	expression/L9 = . expression "+" expression, FOLLOW [97] -> GOTO 76
	expression/L9 = . expression "-" expression, FOLLOW [97] -> GOTO 76
	expression/L10 = . expression "*" expression, FOLLOW [97] -> GOTO 76
	expression/L10 = . expression "/" expression, FOLLOW [97] -> GOTO 76
	expression/L10 = . expression "%" expression, FOLLOW [97] -> GOTO 76
	expression/L11 = . expression "<<" expression, FOLLOW [97] -> GOTO 76
	expression/L11 = . expression ">>" expression, FOLLOW [97] -> GOTO 76
	expression/L12 = . expression "." IDENT, FOLLOW [97] -> GOTO 76
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [97] -> GOTO 76
	expression/L13 = . expression "(" ")", FOLLOW [97] -> GOTO 76
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [97] -> GOTO 76
	iexpression = . expression indirection IDENT, FOLLOW [97] -> GOTO 76
	expression/L12 = . iexpression, FOLLOW [97] -> GOTO 77
	expression/L2 = . BOOLEAN, FOLLOW [97] -> SHIFT BOOLEAN GOTO 78
	expression/L2 = . IDENT, FOLLOW [97] -> SHIFT IDENT GOTO 79
	expression/L2 = . DQSTRING, FOLLOW [97] -> SHIFT DQSTRING GOTO 80
	expression/L2 = . SQSTRING, FOLLOW [97] -> SHIFT SQSTRING GOTO 81
	expression/L2 = . CARDINAL, FOLLOW [97] -> SHIFT CARDINAL GOTO 82
	expression/L2 = . INTEGER, FOLLOW [97] -> SHIFT INTEGER GOTO 83
	expression/L2 = . FLOAT, FOLLOW [97] -> SHIFT FLOAT GOTO 84
	expression/L2 = . "(" expression ")", FOLLOW [97] -> SHIFT '(' GOTO 85
	expression/L9 = . "&" expression, FOLLOW [97] -> SHIFT '&' GOTO 86
	typedefinition = . "typedef" typepath IDENT, FOLLOW [15] -> SHIFT "typedef" GOTO 22
	statement/L1 = . "{" codeblock "}", FOLLOW [98] -> SHIFT '{' GOTO 87
	expression/L1 = . "{" expressionlist "}", FOLLOW [97] -> SHIFT '{' GOTO 87
	expression/L1 = . "{" "}", FOLLOW [97] -> SHIFT '{' GOTO 87
	linkage = . "private", FOLLOW [61] -> SHIFT "private" GOTO 24
	linkage = . "public", FOLLOW [61] -> SHIFT "public" GOTO 25
	expression/L9 = . "+" expression, FOLLOW [97] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [97] -> SHIFT '-' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [97] -> SHIFT '*' GOTO 90
	expression/L9 = . "~" expression, FOLLOW [97] -> SHIFT '~' GOTO 91
	expression/L9 = . "!" expression, FOLLOW [97] -> SHIFT '!' GOTO 92
	statement/L1 = . "var" variabledefinition ";", FOLLOW [98] -> SHIFT "var" GOTO 93
	statement/L1 = . "return" expression ";", FOLLOW [98] -> SHIFT "return" GOTO 94
	statement/L1 = . "delete" expression ";", FOLLOW [98] -> SHIFT "delete" GOTO 95
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}", FOLLOW [98] -> SHIFT "if" GOTO 96
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}", FOLLOW [98] -> SHIFT "if" GOTO 96
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}", FOLLOW [98] -> SHIFT "while" GOTO 97
	expression/L1 = . "new" typespec ":" expression, FOLLOW [97] -> SHIFT "new" GOTO 98
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [97] -> SHIFT "cast" GOTO 99
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [97] -> SHIFT "cast" GOTO 99
	expression/L2 = . "null", FOLLOW [97] -> SHIFT "null" GOTO 100
	statementlist = ., FOLLOW [18] -> REDUCE statementlist #0
	linkage = . (38), FOLLOW [61] -> REDUCE linkage #0 CALL linkage {private=false,linkage="external"}
[347]
	callablebody = "(" parameterlist ")" "{" codeblock . "}", FOLLOW [247] -> SHIFT '}' GOTO 363
[348]
	operatordefinition = linkage "operator" operatordecl typespec callablebody . (45), FOLLOW [171] -> REDUCE operatordefinition #5 CALL operator_funcdef {const=false}
[349]
	operatordefinition = linkage "operator" operatordecl typespec callablebody_const . (46), FOLLOW [171] -> REDUCE operatordefinition #5 CALL operator_funcdef {const=true}
[350]
	callablebody = "(" parameterlist ")" . "{" codeblock "}", FOLLOW [171] -> SHIFT '{' GOTO 324
[351]
	interface_definition = "function" IDENT typespec "(" extern_paramlist . ")" ";", FOLLOW [176] -> SHIFT ')' GOTO 364
	interface_definition = "function" IDENT typespec "(" extern_paramlist . ")" "const" ";", FOLLOW [176] -> SHIFT ')' GOTO 364
[352]
	interface_definition = "procedure" IDENT "(" extern_paramlist ")" . ";", FOLLOW [176] -> SHIFT ';' GOTO 365
	interface_definition = "procedure" IDENT "(" extern_paramlist ")" . "const" ";", FOLLOW [176] -> SHIFT "const" GOTO 366
[353]
	interface_definition = "operator" operatordecl typespec "(" extern_paramlist . ")" ";", FOLLOW [176] -> SHIFT ')' GOTO 367
	interface_definition = "operator" operatordecl typespec "(" extern_paramlist . ")" "const" ";", FOLLOW [176] -> SHIFT ')' GOTO 367
[354]
	interface_definition = "operator" operatordecl "(" extern_paramlist ")" . ";", FOLLOW [176] -> SHIFT ';' GOTO 368
	interface_definition = "operator" operatordecl "(" extern_paramlist ")" . "const" ";", FOLLOW [176] -> SHIFT "const" GOTO 369
[355]
	extern_definition = "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist ")" ";" . (2), FOLLOW [59] -> REDUCE extern_definition #9 CALL extern_funcdef
[356]
	extern_definition = "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist "..." ")" . ";", FOLLOW [59] -> SHIFT ';' GOTO 370
[357]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist "..." ")" ";" . (5), FOLLOW [59] -> REDUCE extern_definition #9 CALL extern_procdef_vararg
[358]
	extern_parameters = typespec IDENT "," extern_parameters . (6), FOLLOW [186] -> REDUCE extern_parameters #4 CALL extern_paramdef
[359]
	statement/L1 = "if" "(" expression ")" "{" codeblock . "}", FOLLOW [98] -> SHIFT '}' GOTO 371
	statement/L1 = "if" "(" expression ")" "{" codeblock . "}" "else" "{" codeblock "}", FOLLOW [98] -> SHIFT '}' GOTO 371
[360]
	statement/L1 = "while" "(" expression ")" "{" codeblock . "}", FOLLOW [98] -> SHIFT '}' GOTO 372
[361]
	expression/L1 = "cast" typespec ":" "{" expression "}" . (90), FOLLOW [239] -> REDUCE expression #6 CALL typecast
[362]
	callablebody_const = "(" parameterlist ")" "const" "{" codeblock . "}", FOLLOW [247] -> SHIFT '}' GOTO 373
[363]
	callablebody = "(" parameterlist ")" "{" codeblock "}" . (scope:72), FOLLOW [247] -> REDUCE callablebody #6 CALL callablebody
[364]
	interface_definition = "function" IDENT typespec "(" extern_paramlist ")" . ";", FOLLOW [176] -> SHIFT ';' GOTO 374
	interface_definition = "function" IDENT typespec "(" extern_paramlist ")" . "const" ";", FOLLOW [176] -> SHIFT "const" GOTO 375
[365]
	interface_definition = "procedure" IDENT "(" extern_paramlist ")" ";" . (10), FOLLOW [176] -> REDUCE interface_definition #6 CALL interface_procdef {const=false}
[366]
	interface_definition = "procedure" IDENT "(" extern_paramlist ")" "const" . ";", FOLLOW [176] -> SHIFT ';' GOTO 376
[367]
	interface_definition = "operator" operatordecl typespec "(" extern_paramlist ")" . ";", FOLLOW [176] -> SHIFT ';' GOTO 377
	interface_definition = "operator" operatordecl typespec "(" extern_paramlist ")" . "const" ";", FOLLOW [176] -> SHIFT "const" GOTO 378
[368]
	interface_definition = "operator" operatordecl "(" extern_paramlist ")" ";" . (14), FOLLOW [176] -> REDUCE interface_definition #6 CALL interface_operator_procdef {const=false}
[369]
	interface_definition = "operator" operatordecl "(" extern_paramlist ")" "const" . ";", FOLLOW [176] -> SHIFT ';' GOTO 379
[370]
	extern_definition = "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist "..." ")" ";" . (4), FOLLOW [59] -> REDUCE extern_definition #10 CALL extern_funcdef_vararg
[371]
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" . "else" "{" codeblock "}", FOLLOW [98] -> SHIFT "else" GOTO 380
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" . (scope:81), FOLLOW [98] -> REDUCE statement #7 CALL conditional_if
[372]
	statement/L1 = "while" "(" expression ")" "{" codeblock "}" . (scope:83), FOLLOW [98] -> REDUCE statement #7 CALL conditional_while
[373]
	callablebody_const = "(" parameterlist ")" "const" "{" codeblock "}" . (scope:72), FOLLOW [247] -> REDUCE callablebody_const #7 CALL callablebody
[374]
	interface_definition = "function" IDENT typespec "(" extern_paramlist ")" ";" . (8), FOLLOW [176] -> REDUCE interface_definition #7 CALL interface_funcdef {const=false}
[375]
	interface_definition = "function" IDENT typespec "(" extern_paramlist ")" "const" . ";", FOLLOW [176] -> SHIFT ';' GOTO 381
[376]
	interface_definition = "procedure" IDENT "(" extern_paramlist ")" "const" ";" . (11), FOLLOW [176] -> REDUCE interface_definition #7 CALL interface_procdef {const=true}
[377]
	interface_definition = "operator" operatordecl typespec "(" extern_paramlist ")" ";" . (12), FOLLOW [176] -> REDUCE interface_definition #7 CALL interface_operator_funcdef {const=false}
[378]
	interface_definition = "operator" operatordecl typespec "(" extern_paramlist ")" "const" . ";", FOLLOW [176] -> SHIFT ';' GOTO 382
[379]
	interface_definition = "operator" operatordecl "(" extern_paramlist ")" "const" ";" . (15), FOLLOW [176] -> REDUCE interface_definition #7 CALL interface_operator_procdef {const=true}
[380]
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" "else" . "{" codeblock "}", FOLLOW [98] -> SHIFT '{' GOTO 383
[381]
	interface_definition = "function" IDENT typespec "(" extern_paramlist ")" "const" ";" . (9), FOLLOW [176] -> REDUCE interface_definition #8 CALL interface_funcdef {const=true}
[382]
	interface_definition = "operator" operatordecl typespec "(" extern_paramlist ")" "const" ";" . (13), FOLLOW [176] -> REDUCE interface_definition #8 CALL interface_operator_funcdef {const=true}
[383]
	statement/L1 = . typedefinition ";", FOLLOW [98] -> GOTO 71
	functiondefinition = . linkage "function" IDENT typespec callablebody, FOLLOW [98] -> GOTO 14
	functiondefinition = . linkage "function" IDENT typespec callablebody_const, FOLLOW [98] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [98] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody_const, FOLLOW [98] -> GOTO 14
	statement/L1 = . functiondefinition, FOLLOW [98] -> GOTO 72
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" "else" "{" . codeblock "}", FOLLOW [98] -> GOTO 384
	codeblock = . statementlist, FOLLOW [18] -> GOTO 74
	statementlist = . statement statementlist, FOLLOW [18] -> GOTO 75
	statement/L1 = . expression ";", FOLLOW [98] -> GOTO 76
	expression/L3 = . expression "=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "+=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "-=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "*=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "/=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "^=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "&=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "%=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "&&=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "||=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "&=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "|=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression "<<=" expression, FOLLOW [97] -> GOTO 76
	expression/L3 = . expression ">>=" expression, FOLLOW [97] -> GOTO 76
	expression/L4 = . expression "||" expression, FOLLOW [97] -> GOTO 76
	expression/L5 = . expression "&&" expression, FOLLOW [97] -> GOTO 76
	expression/L6 = . expression "|" expression, FOLLOW [97] -> GOTO 76
	expression/L7 = . expression "^" expression, FOLLOW [97] -> GOTO 76
	expression/L7 = . expression "&" expression, FOLLOW [97] -> GOTO 76
	expression/L8 = . expression "==" expression, FOLLOW [97] -> GOTO 76
	expression/L8 = . expression "!=" expression, FOLLOW [97] -> GOTO 76
	expression/L8 = . expression "<=" expression, FOLLOW [97] -> GOTO 76
	expression/L8 = . expression "<" expression, FOLLOW [97] -> GOTO 76
	expression/L8 = . expression ">=" expression, FOLLOW [97] -> GOTO 76
	expression/L8 = . expression ">" expression, FOLLOW [97] -> GOTO 76
	expression/L9 = . expression "+" expression, FOLLOW [97] -> GOTO 76
	expression/L9 = . expression "-" expression, FOLLOW [97] -> GOTO 76
	expression/L10 = . expression "*" expression, FOLLOW [97] -> GOTO 76
	expression/L10 = . expression "/" expression, FOLLOW [97] -> GOTO 76
	expression/L10 = . expression "%" expression, FOLLOW [97] -> GOTO 76
	expression/L11 = . expression "<<" expression, FOLLOW [97] -> GOTO 76
	expression/L11 = . expression ">>" expression, FOLLOW [97] -> GOTO 76
	expression/L12 = . expression "." IDENT, FOLLOW [97] -> GOTO 76
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [97] -> GOTO 76
	expression/L13 = . expression "(" ")", FOLLOW [97] -> GOTO 76
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [97] -> GOTO 76
	iexpression = . expression indirection IDENT, FOLLOW [97] -> GOTO 76
	expression/L12 = . iexpression, FOLLOW [97] -> GOTO 77
	expression/L2 = . BOOLEAN, FOLLOW [97] -> SHIFT BOOLEAN GOTO 78
	expression/L2 = . IDENT, FOLLOW [97] -> SHIFT IDENT GOTO 79
	expression/L2 = . DQSTRING, FOLLOW [97] -> SHIFT DQSTRING GOTO 80
	expression/L2 = . SQSTRING, FOLLOW [97] -> SHIFT SQSTRING GOTO 81
	expression/L2 = . CARDINAL, FOLLOW [97] -> SHIFT CARDINAL GOTO 82
	expression/L2 = . INTEGER, FOLLOW [97] -> SHIFT INTEGER GOTO 83
	expression/L2 = . FLOAT, FOLLOW [97] -> SHIFT FLOAT GOTO 84
	expression/L2 = . "(" expression ")", FOLLOW [97] -> SHIFT '(' GOTO 85
	expression/L9 = . "&" expression, FOLLOW [97] -> SHIFT '&' GOTO 86
	typedefinition = . "typedef" typepath IDENT, FOLLOW [15] -> SHIFT "typedef" GOTO 22
	statement/L1 = . "{" codeblock "}", FOLLOW [98] -> SHIFT '{' GOTO 87
	expression/L1 = . "{" expressionlist "}", FOLLOW [97] -> SHIFT '{' GOTO 87
	expression/L1 = . "{" "}", FOLLOW [97] -> SHIFT '{' GOTO 87
	linkage = . "private", FOLLOW [61] -> SHIFT "private" GOTO 24
	linkage = . "public", FOLLOW [61] -> SHIFT "public" GOTO 25
	expression/L9 = . "+" expression, FOLLOW [97] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [97] -> SHIFT '-' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [97] -> SHIFT '*' GOTO 90
	expression/L9 = . "~" expression, FOLLOW [97] -> SHIFT '~' GOTO 91
	expression/L9 = . "!" expression, FOLLOW [97] -> SHIFT '!' GOTO 92
	statement/L1 = . "var" variabledefinition ";", FOLLOW [98] -> SHIFT "var" GOTO 93
	statement/L1 = . "return" expression ";", FOLLOW [98] -> SHIFT "return" GOTO 94
	statement/L1 = . "delete" expression ";", FOLLOW [98] -> SHIFT "delete" GOTO 95
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}", FOLLOW [98] -> SHIFT "if" GOTO 96
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}", FOLLOW [98] -> SHIFT "if" GOTO 96
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}", FOLLOW [98] -> SHIFT "while" GOTO 97
	expression/L1 = . "new" typespec ":" expression, FOLLOW [97] -> SHIFT "new" GOTO 98
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [97] -> SHIFT "cast" GOTO 99
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [97] -> SHIFT "cast" GOTO 99
	expression/L2 = . "null", FOLLOW [97] -> SHIFT "null" GOTO 100
	statementlist = ., FOLLOW [18] -> REDUCE statementlist #0
	linkage = . (38), FOLLOW [61] -> REDUCE linkage #0 CALL linkage {private=false,linkage="external"}
[384]
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock . "}", FOLLOW [98] -> SHIFT '}' GOTO 385
[385]
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}" . (scope:82), FOLLOW [98] -> REDUCE statement #11 CALL conditional_if_else

-- Function calls:
(1) program
(2) extern_funcdef
(3) extern_procdef
(4) extern_funcdef_vararg
(5) extern_procdef_vararg
(6) extern_paramdef
(7) extern_paramdeflist
(8) interface_funcdef, {const=false}
(9) interface_funcdef, {const=true}
(10) interface_procdef, {const=false}
(11) interface_procdef, {const=true}
(12) interface_operator_funcdef, {const=false}
(13) interface_operator_funcdef, {const=true}
(14) interface_operator_procdef, {const=false}
(15) interface_operator_procdef, {const=true}
(16) definition, 1
(17) definition, 2
(18) typespec, ""
(19) typespec, "const "
(20) typespec, "&"
(21) typespec, "const&"
(22) typespec, "^"
(23) typespec, "const^"
(24) typespec, "^&"
(25) typespec, "const^&"
(26) typespec, "^^"
(27) typespec, "const^^"
(28) typespec, "^^&"
(29) typespec, "const^^&"
(30) typespec_key, "class^"
(31) typespec_key, "const struct^"
(32) typedef
(33) structdef
(34) interfacedef
(35) inheritdef, 1
(36) classdef
(37) linkage, {private=true,linkage="internal"}
(38) linkage, {private=false,linkage="external"}
(39) funcdef, {const=false}
(40) funcdef, {const=true}
(41) procdef, {const=false}
(42) procdef, {const=true}
(43) constructordef
(44) destructordef
(45) operator_funcdef, {const=false}
(46) operator_funcdef, {const=true}
(47) operator_procdef, {const=false}
(48) operator_procdef, {const=true}
(49) operatordecl, {name="->",symbol="arrow"}
(50) operatordecl, {name="=",symbol="assign"}
(51) operatordecl, {name="+",symbol="plus"}
(52) operatordecl, {name="-",symbol="minus"}
(53) operatordecl, {name="*",symbol="mul"}
(54) operatordecl, {name="/",symbol="div"}
(55) operatordecl, {name="%",symbol="mod"}
(56) operatordecl, {name="&&",symbol="and"}
(57) operatordecl, {name="||",symbol="or"}
(58) operatordecl, {name="&",symbol="bitand"}
(59) operatordecl, {name="|",symbol="bitor"}
(60) operatordecl, {name="<<",symbol="lsh"}
(61) operatordecl, {name=">>",symbol="rsh"}
(62) operatordecl, {name="~",symbol="lneg"}
(63) operatordecl, {name="!",symbol="not"}
(64) operatordecl, {name="()",symbol="call"}
(65) operatordecl, {name="[]",symbol="get"}
(66) operatordecl, {name="==",symbol="eq"}
(67) operatordecl, {name="!=",symbol="ne"}
(68) operatordecl, {name=">=",symbol="ge"}
(69) operatordecl, {name="<=",symbol="le"}
(70) operatordecl, {name=">",symbol="gt"}
(71) operatordecl, {name="<",symbol="lt"}
(72) callablebody
(73) main_procdef
(74) paramdeflist
(75) paramdef
(76) codeblock
(77) definition
(78) free_expression
(79) return_value
(80) delete
(81) conditional_if
(82) conditional_if_else
(83) conditional_while
(84) vardef
(85) vardef_assign
(86) vardef_array_assign
(87) vardef_array
(88) structure
(89) allocate
(90) typecast
(91) variable
(92) constant, "constexpr bool"
(93) constant, "constexpr uint"
(94) constant, "constexpr int"
(95) constant, "constexpr float"
(96) null, "constexpr float"
(97) string_constant, "constexpr float"
(98) char_constant, "constexpr float"
(99) operator, "="
(100) assign_operator, "+"
(101) assign_operator, "-"
(102) assign_operator, "*"
(103) assign_operator, "/"
(104) assign_operator, "^"
(105) assign_operator, "&"
(106) assign_operator, "%"
(107) assign_operator, "&&"
(108) assign_operator, "||"
(109) assign_operator, "|"
(110) assign_operator, "<<"
(111) assign_operator, ">>"
(112) operator, "||"
(113) operator, "&&"
(114) operator, "|"
(115) operator, "^"
(116) operator, "&"
(117) operator, "=="
(118) operator, "!="
(119) operator, "<="
(120) operator, "<"
(121) operator, ">="
(122) operator, ">"
(123) operator, "+"
(124) operator, "-"
(125) operator, "~"
(126) operator, "!"
(127) operator, "*"
(128) operator, "/"
(129) operator, "%"
(130) operator, "<<"
(131) operator, ">>"
(132) member
(133) operator, "->"
(134) operator, "()"
(135) operator, "[]"
(136) rep_operator, "->"
(137) count

-- Action table:
[1]
	$ => Reduce #0 extern_definitionlist
	IDENT => Reduce #0 extern_definitionlist
	"extern" => Shift goto 4
	"function" => Reduce #0 extern_definitionlist
	"procedure" => Reduce #0 extern_definitionlist
	"const" => Reduce #0 extern_definitionlist
	"any" => Reduce #0 extern_definitionlist
	"class" => Reduce #0 extern_definitionlist
	"struct" => Reduce #0 extern_definitionlist
	"typedef" => Reduce #0 extern_definitionlist
	"interface" => Reduce #0 extern_definitionlist
	"private" => Reduce #0 extern_definitionlist
	"public" => Reduce #0 extern_definitionlist
	"main" => Reduce #0 extern_definitionlist
[2]
	$ => Reduce #0 free_definitionlist
	IDENT => Shift goto 17
	"function" => Reduce #0 linkage call linkage {private=false,linkage="external"}
	"procedure" => Reduce #0 linkage call linkage {private=false,linkage="external"}
	"const" => Shift goto 18
	"any" => Shift goto 19
	"class" => Shift goto 20
	"struct" => Shift goto 21
	"typedef" => Shift goto 22
	"interface" => Shift goto 23
	"private" => Shift goto 24
	"public" => Shift goto 25
	"main" => Reduce #0 free_definitionlist
[3]
	$ => Reduce #0 extern_definitionlist
	IDENT => Reduce #0 extern_definitionlist
	"extern" => Shift goto 4
	"function" => Reduce #0 extern_definitionlist
	"procedure" => Reduce #0 extern_definitionlist
	"const" => Reduce #0 extern_definitionlist
	"any" => Reduce #0 extern_definitionlist
	"class" => Reduce #0 extern_definitionlist
	"struct" => Reduce #0 extern_definitionlist
	"typedef" => Reduce #0 extern_definitionlist
	"interface" => Reduce #0 extern_definitionlist
	"private" => Reduce #0 extern_definitionlist
	"public" => Reduce #0 extern_definitionlist
	"main" => Reduce #0 extern_definitionlist
[4]
	DQSTRING => Shift goto 27
[5]
	$ => Reduce #0 main_procedure
	"main" => Shift goto 29
[6]
	$ => Reduce #1 free_definition
	IDENT => Reduce #1 free_definition
	"function" => Reduce #1 free_definition
	"procedure" => Reduce #1 free_definition
	"const" => Reduce #1 free_definition
	"any" => Reduce #1 free_definition
	"class" => Reduce #1 free_definition
	"struct" => Reduce #1 free_definition
	"typedef" => Reduce #1 free_definition
	"interface" => Reduce #1 free_definition
	"private" => Reduce #1 free_definition
	"public" => Reduce #1 free_definition
	"main" => Reduce #1 free_definition
[7]
	$ => Reduce #0 free_definitionlist
	IDENT => Shift goto 17
	"function" => Reduce #0 linkage call linkage {private=false,linkage="external"}
	"procedure" => Reduce #0 linkage call linkage {private=false,linkage="external"}
	"const" => Shift goto 18
	"any" => Shift goto 19
	"class" => Shift goto 20
	"struct" => Shift goto 21
	"typedef" => Shift goto 22
	"interface" => Shift goto 23
	"private" => Shift goto 24
	"public" => Shift goto 25
	"main" => Reduce #0 free_definitionlist
[8]
	IDENT => Reduce #1 typespec call typespec ""
	'(' => Reduce #1 typespec call typespec ""
	')' => Reduce #1 typespec call typespec ""
	"..." => Reduce #1 typespec call typespec ""
	',' => Reduce #1 typespec call typespec ""
	'&' => Shift goto 31
	'^' => Shift goto 32
	':' => Reduce #1 typespec call typespec ""
[9]
	IDENT => Shift goto 33
[10]
	';' => Shift goto 34
[11]
	$ => Reduce #1 struct_definition call definition 1
	IDENT => Reduce #1 struct_definition call definition 1
	"function" => Reduce #1 struct_definition call definition 1
	"procedure" => Reduce #1 struct_definition call definition 1
	"const" => Reduce #1 struct_definition call definition 1
	"any" => Reduce #1 struct_definition call definition 1
	"class" => Reduce #1 struct_definition call definition 1
	"struct" => Reduce #1 struct_definition call definition 1
	"typedef" => Reduce #1 struct_definition call definition 1
	'}' => Reduce #1 struct_definition call definition 1
	"interface" => Reduce #1 struct_definition call definition 1
	"private" => Reduce #1 struct_definition call definition 1
	"public" => Reduce #1 struct_definition call definition 1
	"main" => Reduce #1 struct_definition call definition 1
[12]
	$ => Reduce #1 free_definition call definition 1
	IDENT => Reduce #1 free_definition call definition 1
	"function" => Reduce #1 free_definition call definition 1
	"procedure" => Reduce #1 free_definition call definition 1
	"const" => Reduce #1 free_definition call definition 1
	"any" => Reduce #1 free_definition call definition 1
	"class" => Reduce #1 free_definition call definition 1
	"struct" => Reduce #1 free_definition call definition 1
	"typedef" => Reduce #1 free_definition call definition 1
	"interface" => Reduce #1 free_definition call definition 1
	"private" => Reduce #1 free_definition call definition 1
	"public" => Reduce #1 free_definition call definition 1
	"main" => Reduce #1 free_definition call definition 1
[13]
	$ => Reduce #1 free_definition call definition 1
	IDENT => Reduce #1 free_definition call definition 1
	"function" => Reduce #1 free_definition call definition 1
	"procedure" => Reduce #1 free_definition call definition 1
	"const" => Reduce #1 free_definition call definition 1
	"any" => Reduce #1 free_definition call definition 1
	"class" => Reduce #1 free_definition call definition 1
	"struct" => Reduce #1 free_definition call definition 1
	"typedef" => Reduce #1 free_definition call definition 1
	"interface" => Reduce #1 free_definition call definition 1
	"private" => Reduce #1 free_definition call definition 1
	"public" => Reduce #1 free_definition call definition 1
	"main" => Reduce #1 free_definition call definition 1
[14]
	"function" => Shift goto 35
	"procedure" => Shift goto 36
[15]
	$ => Reduce #1 free_definition call definition 1
	IDENT => Reduce #1 free_definition call definition 1
	"function" => Reduce #1 free_definition call definition 1
	"procedure" => Reduce #1 free_definition call definition 1
	"const" => Reduce #1 free_definition call definition 1
	"any" => Reduce #1 free_definition call definition 1
	"class" => Reduce #1 free_definition call definition 1
	"struct" => Reduce #1 free_definition call definition 1
	"typedef" => Reduce #1 free_definition call definition 1
	"interface" => Reduce #1 free_definition call definition 1
	"private" => Reduce #1 free_definition call definition 1
	"public" => Reduce #1 free_definition call definition 1
	"main" => Reduce #1 free_definition call definition 1
[16]
	';' => Shift goto 37
[17]
	IDENT => Reduce #1 typename
	'(' => Reduce #1 typename
	')' => Reduce #1 typename
	"..." => Reduce #1 typename
	',' => Reduce #1 typename
	"::" => Shift goto 38
	'&' => Reduce #1 typename
	'^' => Reduce #1 typename
	'{' => Reduce #1 typename
	':' => Reduce #1 typename
[18]
	IDENT => Shift goto 17
[19]
	"const" => Shift goto 40
	"class" => Shift goto 41
	"struct" => Shift goto 42
[20]
	IDENT => Shift goto 43
[21]
	IDENT => Shift goto 44
[22]
	IDENT => Shift goto 17
[23]
	IDENT => Shift goto 47
[24]
	"function" => Reduce #1 linkage call linkage {private=true,linkage="internal"}
	"procedure" => Reduce #1 linkage call linkage {private=true,linkage="internal"}
	"operator" => Reduce #1 linkage call linkage {private=true,linkage="internal"}
	"constructor" => Reduce #1 linkage call linkage {private=true,linkage="internal"}
[25]
	"function" => Reduce #1 linkage call linkage {private=false,linkage="external"}
	"procedure" => Reduce #1 linkage call linkage {private=false,linkage="external"}
	"operator" => Reduce #1 linkage call linkage {private=false,linkage="external"}
	"constructor" => Reduce #1 linkage call linkage {private=false,linkage="external"}
[26]
	$ => Reduce #2 extern_definitionlist
	IDENT => Reduce #2 extern_definitionlist
	"function" => Reduce #2 extern_definitionlist
	"procedure" => Reduce #2 extern_definitionlist
	"const" => Reduce #2 extern_definitionlist
	"any" => Reduce #2 extern_definitionlist
	"class" => Reduce #2 extern_definitionlist
	"struct" => Reduce #2 extern_definitionlist
	"typedef" => Reduce #2 extern_definitionlist
	"interface" => Reduce #2 extern_definitionlist
	"private" => Reduce #2 extern_definitionlist
	"public" => Reduce #2 extern_definitionlist
	"main" => Reduce #2 extern_definitionlist
[27]
	"function" => Shift goto 48
	"procedure" => Shift goto 49
[28]
	$ => Accept
[29]
	'{' => Shift goto 50
[30]
	$ => Reduce #2 free_definitionlist
	"main" => Reduce #2 free_definitionlist
[31]
	IDENT => Reduce #2 typespec call typespec "&"
	'(' => Reduce #2 typespec call typespec "&"
	')' => Reduce #2 typespec call typespec "&"
	"..." => Reduce #2 typespec call typespec "&"
	',' => Reduce #2 typespec call typespec "&"
	':' => Reduce #2 typespec call typespec "&"
[32]
	IDENT => Reduce #2 typespec call typespec "^"
	'(' => Reduce #2 typespec call typespec "^"
	')' => Reduce #2 typespec call typespec "^"
	"..." => Reduce #2 typespec call typespec "^"
	',' => Reduce #2 typespec call typespec "^"
	'&' => Shift goto 51
	'^' => Shift goto 52
	':' => Reduce #2 typespec call typespec "^"
[33]
	';' => Reduce #2 variabledefinition call vardef
	'=' => Shift goto 53
	'[' => Shift goto 54
[34]
	$ => Reduce #2 struct_definition call definition 1
	IDENT => Reduce #2 struct_definition call definition 1
	"function" => Reduce #2 struct_definition call definition 1
	"procedure" => Reduce #2 struct_definition call definition 1
	"const" => Reduce #2 struct_definition call definition 1
	"any" => Reduce #2 struct_definition call definition 1
	"class" => Reduce #2 struct_definition call definition 1
	"struct" => Reduce #2 struct_definition call definition 1
	"typedef" => Reduce #2 struct_definition call definition 1
	'}' => Reduce #2 struct_definition call definition 1
	"interface" => Reduce #2 struct_definition call definition 1
	"private" => Reduce #2 struct_definition call definition 1
	"public" => Reduce #2 struct_definition call definition 1
	"main" => Reduce #2 struct_definition call definition 1
[35]
	IDENT => Shift goto 55
[36]
	IDENT => Shift goto 56
[37]
	$ => Reduce #2 struct_definition call definition 1
	IDENT => Reduce #2 struct_definition call definition 1
	"function" => Reduce #2 struct_definition call definition 1
	"procedure" => Reduce #2 struct_definition call definition 1
	"const" => Reduce #2 struct_definition call definition 1
	"any" => Reduce #2 struct_definition call definition 1
	"class" => Reduce #2 struct_definition call definition 1
	"struct" => Reduce #2 struct_definition call definition 1
	"typedef" => Reduce #2 struct_definition call definition 1
	'}' => Reduce #2 struct_definition call definition 1
	"interface" => Reduce #2 struct_definition call definition 1
	"private" => Reduce #2 struct_definition call definition 1
	"public" => Reduce #2 struct_definition call definition 1
	"main" => Reduce #2 struct_definition call definition 1
[38]
	IDENT => Shift goto 17
[39]
	IDENT => Reduce #2 typespec call typespec "const "
	'(' => Reduce #2 typespec call typespec "const "
	')' => Reduce #2 typespec call typespec "const "
	"..." => Reduce #2 typespec call typespec "const "
	',' => Reduce #2 typespec call typespec "const "
	'&' => Shift goto 58
	'^' => Shift goto 59
	':' => Reduce #2 typespec call typespec "const "
[40]
	"class" => Shift goto 60
	"struct" => Shift goto 61
[41]
	'^' => Shift goto 62
[42]
	'^' => Shift goto 63
[43]
	'{' => Shift goto 64
	':' => Shift goto 65
[44]
	'{' => Shift goto 66
[45]
	IDENT => Reduce #1 typepath call typespec ""
	',' => Reduce #1 typepath call typespec ""
	'{' => Reduce #1 typepath call typespec ""
[46]
	IDENT => Shift goto 67
[47]
	'{' => Shift goto 68
[48]
	IDENT => Shift goto 69
[49]
	IDENT => Shift goto 70
[50]
	BOOLEAN => Shift goto 78
	IDENT => Shift goto 79
	DQSTRING => Shift goto 80
	SQSTRING => Shift goto 81
	CARDINAL => Shift goto 82
	INTEGER => Shift goto 83
	FLOAT => Shift goto 84
	"function" => Reduce #0 linkage call linkage {private=false,linkage="external"}
	'(' => Shift goto 85
	"procedure" => Reduce #0 linkage call linkage {private=false,linkage="external"}
	'&' => Shift goto 86
	"typedef" => Shift goto 22
	'{' => Shift goto 87
	'}' => Reduce #0 statementlist
	"private" => Shift goto 24
	"public" => Shift goto 25
	'+' => Shift goto 88
	'-' => Shift goto 89
	'*' => Shift goto 90
	'~' => Shift goto 91
	'!' => Shift goto 92
	"var" => Shift goto 93
	"return" => Shift goto 94
	"delete" => Shift goto 95
	"if" => Shift goto 96
	"while" => Shift goto 97
	"new" => Shift goto 98
	"cast" => Shift goto 99
	"null" => Shift goto 100
[51]
	IDENT => Reduce #3 typespec call typespec "^&"
	'(' => Reduce #3 typespec call typespec "^&"
	')' => Reduce #3 typespec call typespec "^&"
	"..." => Reduce #3 typespec call typespec "^&"
	',' => Reduce #3 typespec call typespec "^&"
	':' => Reduce #3 typespec call typespec "^&"
[52]
	IDENT => Reduce #3 typespec call typespec "^^"
	'(' => Reduce #3 typespec call typespec "^^"
	')' => Reduce #3 typespec call typespec "^^"
	"..." => Reduce #3 typespec call typespec "^^"
	',' => Reduce #3 typespec call typespec "^^"
	'&' => Shift goto 101
	':' => Reduce #3 typespec call typespec "^^"
[53]
	BOOLEAN => Shift goto 78
	IDENT => Shift goto 79
	DQSTRING => Shift goto 80
	SQSTRING => Shift goto 81
	CARDINAL => Shift goto 82
	INTEGER => Shift goto 83
	FLOAT => Shift goto 84
	'(' => Shift goto 85
	'&' => Shift goto 86
	'{' => Shift goto 103
	'+' => Shift goto 88
	'-' => Shift goto 89
	'*' => Shift goto 90
	'~' => Shift goto 91
	'!' => Shift goto 92
	"new" => Shift goto 98
	"cast" => Shift goto 99
	"null" => Shift goto 100
[54]
	BOOLEAN => Shift goto 78
	IDENT => Shift goto 79
	DQSTRING => Shift goto 80
	SQSTRING => Shift goto 81
	CARDINAL => Shift goto 82
	INTEGER => Shift goto 83
	FLOAT => Shift goto 84
	'(' => Shift goto 85
	'&' => Shift goto 86
	'{' => Shift goto 103
	'+' => Shift goto 88
	'-' => Shift goto 89
	'*' => Shift goto 90
	'~' => Shift goto 91
	'!' => Shift goto 92
	"new" => Shift goto 98
	"cast" => Shift goto 99
	"null" => Shift goto 100
[55]
	IDENT => Shift goto 17
	"const" => Shift goto 18
	"any" => Shift goto 19
[56]
	'(' => Shift goto 108
[57]
	IDENT => Reduce #3 typename
	'(' => Reduce #3 typename
	')' => Reduce #3 typename
	"..." => Reduce #3 typename
	',' => Reduce #3 typename
	'&' => Reduce #3 typename
	'^' => Reduce #3 typename
	'{' => Reduce #3 typename
	':' => Reduce #3 typename
[58]
	IDENT => Reduce #3 typespec call typespec "const&"
	'(' => Reduce #3 typespec call typespec "const&"
	')' => Reduce #3 typespec call typespec "const&"
	"..." => Reduce #3 typespec call typespec "const&"
	',' => Reduce #3 typespec call typespec "const&"
	':' => Reduce #3 typespec call typespec "const&"
[59]
	IDENT => Reduce #3 typespec call typespec "const^"
	'(' => Reduce #3 typespec call typespec "const^"
	')' => Reduce #3 typespec call typespec "const^"
	"..." => Reduce #3 typespec call typespec "const^"
	',' => Reduce #3 typespec call typespec "const^"
	'&' => Shift goto 109
	'^' => Shift goto 110
	':' => Reduce #3 typespec call typespec "const^"
[60]
	'^' => Shift goto 111
[61]
	'^' => Shift goto 112
[62]
	IDENT => Reduce #3 typespec call typespec_key "class^"
	'(' => Reduce #3 typespec call typespec_key "class^"
	')' => Reduce #3 typespec call typespec_key "class^"
	"..." => Reduce #3 typespec call typespec_key "class^"
	',' => Reduce #3 typespec call typespec_key "class^"
	':' => Reduce #3 typespec call typespec_key "class^"
[63]
	IDENT => Reduce #3 typespec call typespec_key "class^"
	'(' => Reduce #3 typespec call typespec_key "class^"
	')' => Reduce #3 typespec call typespec_key "class^"
	"..." => Reduce #3 typespec call typespec_key "class^"
	',' => Reduce #3 typespec call typespec_key "class^"
	':' => Reduce #3 typespec call typespec_key "class^"
[64]
	IDENT => Shift goto 17
	"function" => Reduce #0 linkage call linkage {private=false,linkage="external"}
	"procedure" => Reduce #0 linkage call linkage {private=false,linkage="external"}
	"const" => Shift goto 18
	"operator" => Reduce #0 linkage call linkage {private=false,linkage="external"}
	"any" => Shift goto 19
	"class" => Shift goto 20
	"struct" => Shift goto 21
	"typedef" => Shift goto 22
	'}' => Reduce #0 class_definitionlist
	"interface" => Shift goto 23
	"private" => Shift goto 24
	"public" => Shift goto 25
	"constructor" => Reduce #0 linkage call linkage {private=false,linkage="external"}
	"destructor" => Shift goto 124
[65]
	IDENT => Shift goto 17
[66]
	IDENT => Shift goto 17
	"const" => Shift goto 18
	"any" => Shift goto 19
	"struct" => Shift goto 21
	"typedef" => Shift goto 22
	'}' => Reduce #0 struct_definitionlist
[67]
	';' => Reduce #3 typedefinition call typedef
[68]
	"function" => Shift goto 131
	"procedure" => Shift goto 132
	"operator" => Shift goto 133
	'}' => Reduce #0 interface_definitionlist
[69]
	IDENT => Shift goto 17
	"const" => Shift goto 18
	"any" => Shift goto 19
[70]
	'(' => Shift goto 135
[71]
	';' => Shift goto 136
[72]
	$ => Reduce #1 statement call definition
	BOOLEAN => Reduce #1 statement call definition
	IDENT => Reduce #1 statement call definition
	DQSTRING => Reduce #1 statement call definition
	SQSTRING => Reduce #1 statement call definition
	CARDINAL => Reduce #1 statement call definition
	INTEGER => Reduce #1 statement call definition
	FLOAT => Reduce #1 statement call definition
	"function" => Reduce #1 statement call definition
	'(' => Reduce #1 statement call definition
	"procedure" => Reduce #1 statement call definition
	'&' => Reduce #1 statement call definition
	"typedef" => Reduce #1 statement call definition
	'{' => Reduce #1 statement call definition
	'}' => Reduce #1 statement call definition
	"private" => Reduce #1 statement call definition
	"public" => Reduce #1 statement call definition
	'+' => Reduce #1 statement call definition
	'-' => Reduce #1 statement call definition
	'*' => Reduce #1 statement call definition
	'~' => Reduce #1 statement call definition
	'!' => Reduce #1 statement call definition
	"var" => Reduce #1 statement call definition
	"return" => Reduce #1 statement call definition
	"delete" => Reduce #1 statement call definition
	"if" => Reduce #1 statement call definition
	"while" => Reduce #1 statement call definition
	"new" => Reduce #1 statement call definition
	"cast" => Reduce #1 statement call definition
	"null" => Reduce #1 statement call definition
[73]
	'}' => Shift goto 137
[74]
	'}' => Reduce #1 codeblock call codeblock
[75]
	BOOLEAN => Shift goto 78
	IDENT => Shift goto 79
	DQSTRING => Shift goto 80
	SQSTRING => Shift goto 81
	CARDINAL => Shift goto 82
	INTEGER => Shift goto 83
	FLOAT => Shift goto 84
	"function" => Reduce #0 linkage call linkage {private=false,linkage="external"}
	'(' => Shift goto 85
	"procedure" => Reduce #0 linkage call linkage {private=false,linkage="external"}
	'&' => Shift goto 86
	"typedef" => Shift goto 22
	'{' => Shift goto 87
	'}' => Reduce #0 statementlist
	"private" => Shift goto 24
	"public" => Shift goto 25
	'+' => Shift goto 88
	'-' => Shift goto 89
	'*' => Shift goto 90
	'~' => Shift goto 91
	'!' => Shift goto 92
	"var" => Shift goto 93
	"return" => Shift goto 94
	"delete" => Shift goto 95
	"if" => Shift goto 96
	"while" => Shift goto 97
	"new" => Shift goto 98
	"cast" => Shift goto 99
	"null" => Shift goto 100
[76]
	'(' => Shift goto 140
	';' => Shift goto 141
	'&' => Shift goto 142
	'^' => Shift goto 143
	"->" => Shift goto 144
	'=' => Shift goto 145
	'+' => Shift goto 146
	'-' => Shift goto 147
	'*' => Shift goto 148
	'/' => Shift goto 149
	'%' => Shift goto 150
	"&&" => Shift goto 151
	"||" => Shift goto 152
	'|' => Shift goto 153
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'[' => Shift goto 156
	"==" => Shift goto 157
	"!=" => Shift goto 158
	">=" => Shift goto 159
	"<=" => Shift goto 160
	'>' => Shift goto 161
	'<' => Shift goto 162
	"+=" => Shift goto 163
	"-=" => Shift goto 164
	"*=" => Shift goto 165
	"/=" => Shift goto 166
	"^=" => Shift goto 167
	"&=" => Shift goto 168
	"%=" => Shift goto 169
	"&&=" => Shift goto 170
	"||=" => Shift goto 171
	"|=" => Shift goto 172
	"<<=" => Shift goto 173
	">>=" => Shift goto 174
	'.' => Shift goto 175
[77]
	'(' => Reduce #1 expression
	')' => Reduce #1 expression
	';' => Reduce #1 expression
	',' => Reduce #1 expression
	'&' => Reduce #1 expression
	'^' => Reduce #1 expression
	'}' => Reduce #1 expression
	"->" => Reduce #1 expression
	'=' => Reduce #1 expression
	'+' => Reduce #1 expression
	'-' => Reduce #1 expression
	'*' => Reduce #1 expression
	'/' => Reduce #1 expression
	'%' => Reduce #1 expression
	"&&" => Reduce #1 expression
	"||" => Reduce #1 expression
	'|' => Reduce #1 expression
	"<<" => Reduce #1 expression
	">>" => Reduce #1 expression
	'[' => Reduce #1 expression
	']' => Reduce #1 expression
	"==" => Reduce #1 expression
	"!=" => Reduce #1 expression
	">=" => Reduce #1 expression
	"<=" => Reduce #1 expression
	'>' => Reduce #1 expression
	'<' => Reduce #1 expression
	"+=" => Reduce #1 expression
	"-=" => Reduce #1 expression
	"*=" => Reduce #1 expression
	"/=" => Reduce #1 expression
	"^=" => Reduce #1 expression
	"&=" => Reduce #1 expression
	"%=" => Reduce #1 expression
	"&&=" => Reduce #1 expression
	"||=" => Reduce #1 expression
	"|=" => Reduce #1 expression
	"<<=" => Reduce #1 expression
	">>=" => Reduce #1 expression
	'.' => Reduce #1 expression
[78]
	'(' => Reduce #1 expression call constant "constexpr bool"
	')' => Reduce #1 expression call constant "constexpr bool"
	';' => Reduce #1 expression call constant "constexpr bool"
	',' => Reduce #1 expression call constant "constexpr bool"
	'&' => Reduce #1 expression call constant "constexpr bool"
	'^' => Reduce #1 expression call constant "constexpr bool"
	'}' => Reduce #1 expression call constant "constexpr bool"
	"->" => Reduce #1 expression call constant "constexpr bool"
	'=' => Reduce #1 expression call constant "constexpr bool"
	'+' => Reduce #1 expression call constant "constexpr bool"
	'-' => Reduce #1 expression call constant "constexpr bool"
	'*' => Reduce #1 expression call constant "constexpr bool"
	'/' => Reduce #1 expression call constant "constexpr bool"
	'%' => Reduce #1 expression call constant "constexpr bool"
	"&&" => Reduce #1 expression call constant "constexpr bool"
	"||" => Reduce #1 expression call constant "constexpr bool"
	'|' => Reduce #1 expression call constant "constexpr bool"
	"<<" => Reduce #1 expression call constant "constexpr bool"
	">>" => Reduce #1 expression call constant "constexpr bool"
	'[' => Reduce #1 expression call constant "constexpr bool"
	']' => Reduce #1 expression call constant "constexpr bool"
	"==" => Reduce #1 expression call constant "constexpr bool"
	"!=" => Reduce #1 expression call constant "constexpr bool"
	">=" => Reduce #1 expression call constant "constexpr bool"
	"<=" => Reduce #1 expression call constant "constexpr bool"
	'>' => Reduce #1 expression call constant "constexpr bool"
	'<' => Reduce #1 expression call constant "constexpr bool"
	"+=" => Reduce #1 expression call constant "constexpr bool"
	"-=" => Reduce #1 expression call constant "constexpr bool"
	"*=" => Reduce #1 expression call constant "constexpr bool"
	"/=" => Reduce #1 expression call constant "constexpr bool"
	"^=" => Reduce #1 expression call constant "constexpr bool"
	"&=" => Reduce #1 expression call constant "constexpr bool"
	"%=" => Reduce #1 expression call constant "constexpr bool"
	"&&=" => Reduce #1 expression call constant "constexpr bool"
	"||=" => Reduce #1 expression call constant "constexpr bool"
	"|=" => Reduce #1 expression call constant "constexpr bool"
	"<<=" => Reduce #1 expression call constant "constexpr bool"
	">>=" => Reduce #1 expression call constant "constexpr bool"
	'.' => Reduce #1 expression call constant "constexpr bool"
[79]
	'(' => Reduce #1 expression call variable
	')' => Reduce #1 expression call variable
	';' => Reduce #1 expression call variable
	',' => Reduce #1 expression call variable
	'&' => Reduce #1 expression call variable
	'^' => Reduce #1 expression call variable
	'}' => Reduce #1 expression call variable
	"->" => Reduce #1 expression call variable
	'=' => Reduce #1 expression call variable
	'+' => Reduce #1 expression call variable
	'-' => Reduce #1 expression call variable
	'*' => Reduce #1 expression call variable
	'/' => Reduce #1 expression call variable
	'%' => Reduce #1 expression call variable
	"&&" => Reduce #1 expression call variable
	"||" => Reduce #1 expression call variable
	'|' => Reduce #1 expression call variable
	"<<" => Reduce #1 expression call variable
	">>" => Reduce #1 expression call variable
	'[' => Reduce #1 expression call variable
	']' => Reduce #1 expression call variable
	"==" => Reduce #1 expression call variable
	"!=" => Reduce #1 expression call variable
	">=" => Reduce #1 expression call variable
	"<=" => Reduce #1 expression call variable
	'>' => Reduce #1 expression call variable
	'<' => Reduce #1 expression call variable
	"+=" => Reduce #1 expression call variable
	"-=" => Reduce #1 expression call variable
	"*=" => Reduce #1 expression call variable
	"/=" => Reduce #1 expression call variable
	"^=" => Reduce #1 expression call variable
	"&=" => Reduce #1 expression call variable
	"%=" => Reduce #1 expression call variable
	"&&=" => Reduce #1 expression call variable
	"||=" => Reduce #1 expression call variable
	"|=" => Reduce #1 expression call variable
	"<<=" => Reduce #1 expression call variable
	">>=" => Reduce #1 expression call variable
	'.' => Reduce #1 expression call variable
[80]
	'(' => Reduce #1 expression call string_constant "constexpr float"
	')' => Reduce #1 expression call string_constant "constexpr float"
	';' => Reduce #1 expression call string_constant "constexpr float"
	',' => Reduce #1 expression call string_constant "constexpr float"
	'&' => Reduce #1 expression call string_constant "constexpr float"
	'^' => Reduce #1 expression call string_constant "constexpr float"
	'}' => Reduce #1 expression call string_constant "constexpr float"
	"->" => Reduce #1 expression call string_constant "constexpr float"
	'=' => Reduce #1 expression call string_constant "constexpr float"
	'+' => Reduce #1 expression call string_constant "constexpr float"
	'-' => Reduce #1 expression call string_constant "constexpr float"
	'*' => Reduce #1 expression call string_constant "constexpr float"
	'/' => Reduce #1 expression call string_constant "constexpr float"
	'%' => Reduce #1 expression call string_constant "constexpr float"
	"&&" => Reduce #1 expression call string_constant "constexpr float"
	"||" => Reduce #1 expression call string_constant "constexpr float"
	'|' => Reduce #1 expression call string_constant "constexpr float"
	"<<" => Reduce #1 expression call string_constant "constexpr float"
	">>" => Reduce #1 expression call string_constant "constexpr float"
	'[' => Reduce #1 expression call string_constant "constexpr float"
	']' => Reduce #1 expression call string_constant "constexpr float"
	"==" => Reduce #1 expression call string_constant "constexpr float"
	"!=" => Reduce #1 expression call string_constant "constexpr float"
	">=" => Reduce #1 expression call string_constant "constexpr float"
	"<=" => Reduce #1 expression call string_constant "constexpr float"
	'>' => Reduce #1 expression call string_constant "constexpr float"
	'<' => Reduce #1 expression call string_constant "constexpr float"
	"+=" => Reduce #1 expression call string_constant "constexpr float"
	"-=" => Reduce #1 expression call string_constant "constexpr float"
	"*=" => Reduce #1 expression call string_constant "constexpr float"
	"/=" => Reduce #1 expression call string_constant "constexpr float"
	"^=" => Reduce #1 expression call string_constant "constexpr float"
	"&=" => Reduce #1 expression call string_constant "constexpr float"
	"%=" => Reduce #1 expression call string_constant "constexpr float"
	"&&=" => Reduce #1 expression call string_constant "constexpr float"
	"||=" => Reduce #1 expression call string_constant "constexpr float"
	"|=" => Reduce #1 expression call string_constant "constexpr float"
	"<<=" => Reduce #1 expression call string_constant "constexpr float"
	">>=" => Reduce #1 expression call string_constant "constexpr float"
	'.' => Reduce #1 expression call string_constant "constexpr float"
[81]
	'(' => Reduce #1 expression call char_constant "constexpr float"
	')' => Reduce #1 expression call char_constant "constexpr float"
	';' => Reduce #1 expression call char_constant "constexpr float"
	',' => Reduce #1 expression call char_constant "constexpr float"
	'&' => Reduce #1 expression call char_constant "constexpr float"
	'^' => Reduce #1 expression call char_constant "constexpr float"
	'}' => Reduce #1 expression call char_constant "constexpr float"
	"->" => Reduce #1 expression call char_constant "constexpr float"
	'=' => Reduce #1 expression call char_constant "constexpr float"
	'+' => Reduce #1 expression call char_constant "constexpr float"
	'-' => Reduce #1 expression call char_constant "constexpr float"
	'*' => Reduce #1 expression call char_constant "constexpr float"
	'/' => Reduce #1 expression call char_constant "constexpr float"
	'%' => Reduce #1 expression call char_constant "constexpr float"
	"&&" => Reduce #1 expression call char_constant "constexpr float"
	"||" => Reduce #1 expression call char_constant "constexpr float"
	'|' => Reduce #1 expression call char_constant "constexpr float"
	"<<" => Reduce #1 expression call char_constant "constexpr float"
	">>" => Reduce #1 expression call char_constant "constexpr float"
	'[' => Reduce #1 expression call char_constant "constexpr float"
	']' => Reduce #1 expression call char_constant "constexpr float"
	"==" => Reduce #1 expression call char_constant "constexpr float"
	"!=" => Reduce #1 expression call char_constant "constexpr float"
	">=" => Reduce #1 expression call char_constant "constexpr float"
	"<=" => Reduce #1 expression call char_constant "constexpr float"
	'>' => Reduce #1 expression call char_constant "constexpr float"
	'<' => Reduce #1 expression call char_constant "constexpr float"
	"+=" => Reduce #1 expression call char_constant "constexpr float"
	"-=" => Reduce #1 expression call char_constant "constexpr float"
	"*=" => Reduce #1 expression call char_constant "constexpr float"
	"/=" => Reduce #1 expression call char_constant "constexpr float"
	"^=" => Reduce #1 expression call char_constant "constexpr float"
	"&=" => Reduce #1 expression call char_constant "constexpr float"
	"%=" => Reduce #1 expression call char_constant "constexpr float"
	"&&=" => Reduce #1 expression call char_constant "constexpr float"
	"||=" => Reduce #1 expression call char_constant "constexpr float"
	"|=" => Reduce #1 expression call char_constant "constexpr float"
	"<<=" => Reduce #1 expression call char_constant "constexpr float"
	">>=" => Reduce #1 expression call char_constant "constexpr float"
	'.' => Reduce #1 expression call char_constant "constexpr float"
[82]
	'(' => Reduce #1 expression call constant "constexpr uint"
	')' => Reduce #1 expression call constant "constexpr uint"
	';' => Reduce #1 expression call constant "constexpr uint"
	',' => Reduce #1 expression call constant "constexpr uint"
	'&' => Reduce #1 expression call constant "constexpr uint"
	'^' => Reduce #1 expression call constant "constexpr uint"
	'}' => Reduce #1 expression call constant "constexpr uint"
	"->" => Reduce #1 expression call constant "constexpr uint"
	'=' => Reduce #1 expression call constant "constexpr uint"
	'+' => Reduce #1 expression call constant "constexpr uint"
	'-' => Reduce #1 expression call constant "constexpr uint"
	'*' => Reduce #1 expression call constant "constexpr uint"
	'/' => Reduce #1 expression call constant "constexpr uint"
	'%' => Reduce #1 expression call constant "constexpr uint"
	"&&" => Reduce #1 expression call constant "constexpr uint"
	"||" => Reduce #1 expression call constant "constexpr uint"
	'|' => Reduce #1 expression call constant "constexpr uint"
	"<<" => Reduce #1 expression call constant "constexpr uint"
	">>" => Reduce #1 expression call constant "constexpr uint"
	'[' => Reduce #1 expression call constant "constexpr uint"
	']' => Reduce #1 expression call constant "constexpr uint"
	"==" => Reduce #1 expression call constant "constexpr uint"
	"!=" => Reduce #1 expression call constant "constexpr uint"
	">=" => Reduce #1 expression call constant "constexpr uint"
	"<=" => Reduce #1 expression call constant "constexpr uint"
	'>' => Reduce #1 expression call constant "constexpr uint"
	'<' => Reduce #1 expression call constant "constexpr uint"
	"+=" => Reduce #1 expression call constant "constexpr uint"
	"-=" => Reduce #1 expression call constant "constexpr uint"
	"*=" => Reduce #1 expression call constant "constexpr uint"
	"/=" => Reduce #1 expression call constant "constexpr uint"
	"^=" => Reduce #1 expression call constant "constexpr uint"
	"&=" => Reduce #1 expression call constant "constexpr uint"
	"%=" => Reduce #1 expression call constant "constexpr uint"
	"&&=" => Reduce #1 expression call constant "constexpr uint"
	"||=" => Reduce #1 expression call constant "constexpr uint"
	"|=" => Reduce #1 expression call constant "constexpr uint"
	"<<=" => Reduce #1 expression call constant "constexpr uint"
	">>=" => Reduce #1 expression call constant "constexpr uint"
	'.' => Reduce #1 expression call constant "constexpr uint"
[83]
	'(' => Reduce #1 expression call constant "constexpr int"
	')' => Reduce #1 expression call constant "constexpr int"
	';' => Reduce #1 expression call constant "constexpr int"
	',' => Reduce #1 expression call constant "constexpr int"
	'&' => Reduce #1 expression call constant "constexpr int"
	'^' => Reduce #1 expression call constant "constexpr int"
	'}' => Reduce #1 expression call constant "constexpr int"
	"->" => Reduce #1 expression call constant "constexpr int"
	'=' => Reduce #1 expression call constant "constexpr int"
	'+' => Reduce #1 expression call constant "constexpr int"
	'-' => Reduce #1 expression call constant "constexpr int"
	'*' => Reduce #1 expression call constant "constexpr int"
	'/' => Reduce #1 expression call constant "constexpr int"
	'%' => Reduce #1 expression call constant "constexpr int"
	"&&" => Reduce #1 expression call constant "constexpr int"
	"||" => Reduce #1 expression call constant "constexpr int"
	'|' => Reduce #1 expression call constant "constexpr int"
	"<<" => Reduce #1 expression call constant "constexpr int"
	">>" => Reduce #1 expression call constant "constexpr int"
	'[' => Reduce #1 expression call constant "constexpr int"
	']' => Reduce #1 expression call constant "constexpr int"
	"==" => Reduce #1 expression call constant "constexpr int"
	"!=" => Reduce #1 expression call constant "constexpr int"
	">=" => Reduce #1 expression call constant "constexpr int"
	"<=" => Reduce #1 expression call constant "constexpr int"
	'>' => Reduce #1 expression call constant "constexpr int"
	'<' => Reduce #1 expression call constant "constexpr int"
	"+=" => Reduce #1 expression call constant "constexpr int"
	"-=" => Reduce #1 expression call constant "constexpr int"
	"*=" => Reduce #1 expression call constant "constexpr int"
	"/=" => Reduce #1 expression call constant "constexpr int"
	"^=" => Reduce #1 expression call constant "constexpr int"
	"&=" => Reduce #1 expression call constant "constexpr int"
	"%=" => Reduce #1 expression call constant "constexpr int"
	"&&=" => Reduce #1 expression call constant "constexpr int"
	"||=" => Reduce #1 expression call constant "constexpr int"
	"|=" => Reduce #1 expression call constant "constexpr int"
	"<<=" => Reduce #1 expression call constant "constexpr int"
	">>=" => Reduce #1 expression call constant "constexpr int"
	'.' => Reduce #1 expression call constant "constexpr int"
[84]
	'(' => Reduce #1 expression call constant "constexpr float"
	')' => Reduce #1 expression call constant "constexpr float"
	';' => Reduce #1 expression call constant "constexpr float"
	',' => Reduce #1 expression call constant "constexpr float"
	'&' => Reduce #1 expression call constant "constexpr float"
	'^' => Reduce #1 expression call constant "constexpr float"
	'}' => Reduce #1 expression call constant "constexpr float"
	"->" => Reduce #1 expression call constant "constexpr float"
	'=' => Reduce #1 expression call constant "constexpr float"
	'+' => Reduce #1 expression call constant "constexpr float"
	'-' => Reduce #1 expression call constant "constexpr float"
	'*' => Reduce #1 expression call constant "constexpr float"
	'/' => Reduce #1 expression call constant "constexpr float"
	'%' => Reduce #1 expression call constant "constexpr float"
	"&&" => Reduce #1 expression call constant "constexpr float"
	"||" => Reduce #1 expression call constant "constexpr float"
	'|' => Reduce #1 expression call constant "constexpr float"
	"<<" => Reduce #1 expression call constant "constexpr float"
	">>" => Reduce #1 expression call constant "constexpr float"
	'[' => Reduce #1 expression call constant "constexpr float"
	']' => Reduce #1 expression call constant "constexpr float"
	"==" => Reduce #1 expression call constant "constexpr float"
	"!=" => Reduce #1 expression call constant "constexpr float"
	">=" => Reduce #1 expression call constant "constexpr float"
	"<=" => Reduce #1 expression call constant "constexpr float"
	'>' => Reduce #1 expression call constant "constexpr float"
	'<' => Reduce #1 expression call constant "constexpr float"
	"+=" => Reduce #1 expression call constant "constexpr float"
	"-=" => Reduce #1 expression call constant "constexpr float"
	"*=" => Reduce #1 expression call constant "constexpr float"
	"/=" => Reduce #1 expression call constant "constexpr float"
	"^=" => Reduce #1 expression call constant "constexpr float"
	"&=" => Reduce #1 expression call constant "constexpr float"
	"%=" => Reduce #1 expression call constant "constexpr float"
	"&&=" => Reduce #1 expression call constant "constexpr float"
	"||=" => Reduce #1 expression call constant "constexpr float"
	"|=" => Reduce #1 expression call constant "constexpr float"
	"<<=" => Reduce #1 expression call constant "constexpr float"
	">>=" => Reduce #1 expression call constant "constexpr float"
	'.' => Reduce #1 expression call constant "constexpr float"
[85]
	BOOLEAN => Shift goto 78
	IDENT => Shift goto 79
	DQSTRING => Shift goto 80
	SQSTRING => Shift goto 81
	CARDINAL => Shift goto 82
	INTEGER => Shift goto 83
	FLOAT => Shift goto 84
	'(' => Shift goto 85
	'&' => Shift goto 86
	'{' => Shift goto 103
	'+' => Shift goto 88
	'-' => Shift goto 89
	'*' => Shift goto 90
	'~' => Shift goto 91
	'!' => Shift goto 92
	"new" => Shift goto 98
	"cast" => Shift goto 99
	"null" => Shift goto 100
[86]
	BOOLEAN => Shift goto 78
	IDENT => Shift goto 79
	DQSTRING => Shift goto 80
	SQSTRING => Shift goto 81
	CARDINAL => Shift goto 82
	INTEGER => Shift goto 83
	FLOAT => Shift goto 84
	'(' => Shift goto 85
	'&' => Shift goto 86
	'{' => Shift goto 103
	'+' => Shift goto 88
	'-' => Shift goto 89
	'*' => Shift goto 90
	'~' => Shift goto 91
	'!' => Shift goto 92
	"new" => Shift goto 98
	"cast" => Shift goto 99
	"null" => Shift goto 100
[87]
	BOOLEAN => Shift goto 78
	IDENT => Shift goto 79
	DQSTRING => Shift goto 80
	SQSTRING => Shift goto 81
	CARDINAL => Shift goto 82
	INTEGER => Shift goto 83
	FLOAT => Shift goto 84
	"function" => Reduce #0 linkage call linkage {private=false,linkage="external"}
	'(' => Shift goto 85
	"procedure" => Reduce #0 linkage call linkage {private=false,linkage="external"}
	'&' => Shift goto 86
	"typedef" => Shift goto 22
	'{' => Shift goto 87
	'}' => Shift goto 181
	"private" => Shift goto 24
	"public" => Shift goto 25
	'+' => Shift goto 88
	'-' => Shift goto 89
	'*' => Shift goto 90
	'~' => Shift goto 91
	'!' => Shift goto 92
	"var" => Shift goto 93
	"return" => Shift goto 94
	"delete" => Shift goto 95
	"if" => Shift goto 96
	"while" => Shift goto 97
	"new" => Shift goto 98
	"cast" => Shift goto 99
	"null" => Shift goto 100
[88]
	BOOLEAN => Shift goto 78
	IDENT => Shift goto 79
	DQSTRING => Shift goto 80
	SQSTRING => Shift goto 81
	CARDINAL => Shift goto 82
	INTEGER => Shift goto 83
	FLOAT => Shift goto 84
	'(' => Shift goto 85
	'&' => Shift goto 86
	'{' => Shift goto 103
	'+' => Shift goto 88
	'-' => Shift goto 89
	'*' => Shift goto 90
	'~' => Shift goto 91
	'!' => Shift goto 92
	"new" => Shift goto 98
	"cast" => Shift goto 99
	"null" => Shift goto 100
[89]
	BOOLEAN => Shift goto 78
	IDENT => Shift goto 79
	DQSTRING => Shift goto 80
	SQSTRING => Shift goto 81
	CARDINAL => Shift goto 82
	INTEGER => Shift goto 83
	FLOAT => Shift goto 84
	'(' => Shift goto 85
	'&' => Shift goto 86
	'{' => Shift goto 103
	'+' => Shift goto 88
	'-' => Shift goto 89
	'*' => Shift goto 90
	'~' => Shift goto 91
	'!' => Shift goto 92
	"new" => Shift goto 98
	"cast" => Shift goto 99
	"null" => Shift goto 100
[90]
	BOOLEAN => Shift goto 78
	IDENT => Shift goto 79
	DQSTRING => Shift goto 80
	SQSTRING => Shift goto 81
	CARDINAL => Shift goto 82
	INTEGER => Shift goto 83
	FLOAT => Shift goto 84
	'(' => Shift goto 85
	'&' => Shift goto 86
	'{' => Shift goto 103
	'+' => Shift goto 88
	'-' => Shift goto 89
	'*' => Shift goto 90
	'~' => Shift goto 91
	'!' => Shift goto 92
	"new" => Shift goto 98
	"cast" => Shift goto 99
	"null" => Shift goto 100
[91]
	BOOLEAN => Shift goto 78
	IDENT => Shift goto 79
	DQSTRING => Shift goto 80
	SQSTRING => Shift goto 81
	CARDINAL => Shift goto 82
	INTEGER => Shift goto 83
	FLOAT => Shift goto 84
	'(' => Shift goto 85
	'&' => Shift goto 86
	'{' => Shift goto 103
	'+' => Shift goto 88
	'-' => Shift goto 89
	'*' => Shift goto 90
	'~' => Shift goto 91
	'!' => Shift goto 92
	"new" => Shift goto 98
	"cast" => Shift goto 99
	"null" => Shift goto 100
[92]
	BOOLEAN => Shift goto 78
	IDENT => Shift goto 79
	DQSTRING => Shift goto 80
	SQSTRING => Shift goto 81
	CARDINAL => Shift goto 82
	INTEGER => Shift goto 83
	FLOAT => Shift goto 84
	'(' => Shift goto 85
	'&' => Shift goto 86
	'{' => Shift goto 103
	'+' => Shift goto 88
	'-' => Shift goto 89
	'*' => Shift goto 90
	'~' => Shift goto 91
	'!' => Shift goto 92
	"new" => Shift goto 98
	"cast" => Shift goto 99
	"null" => Shift goto 100
[93]
	IDENT => Shift goto 17
	"const" => Shift goto 18
	"any" => Shift goto 19
[94]
	BOOLEAN => Shift goto 78
	IDENT => Shift goto 79
	DQSTRING => Shift goto 80
	SQSTRING => Shift goto 81
	CARDINAL => Shift goto 82
	INTEGER => Shift goto 83
	FLOAT => Shift goto 84
	'(' => Shift goto 85
	'&' => Shift goto 86
	'{' => Shift goto 103
	'+' => Shift goto 88
	'-' => Shift goto 89
	'*' => Shift goto 90
	'~' => Shift goto 91
	'!' => Shift goto 92
	"new" => Shift goto 98
	"cast" => Shift goto 99
	"null" => Shift goto 100
[95]
	BOOLEAN => Shift goto 78
	IDENT => Shift goto 79
	DQSTRING => Shift goto 80
	SQSTRING => Shift goto 81
	CARDINAL => Shift goto 82
	INTEGER => Shift goto 83
	FLOAT => Shift goto 84
	'(' => Shift goto 85
	'&' => Shift goto 86
	'{' => Shift goto 103
	'+' => Shift goto 88
	'-' => Shift goto 89
	'*' => Shift goto 90
	'~' => Shift goto 91
	'!' => Shift goto 92
	"new" => Shift goto 98
	"cast" => Shift goto 99
	"null" => Shift goto 100
[96]
	'(' => Shift goto 190
[97]
	'(' => Shift goto 191
[98]
	IDENT => Shift goto 17
	"const" => Shift goto 18
	"any" => Shift goto 19
[99]
	IDENT => Shift goto 17
	"const" => Shift goto 18
	"any" => Shift goto 19
[100]
	'(' => Reduce #1 expression call null "constexpr float"
	')' => Reduce #1 expression call null "constexpr float"
	';' => Reduce #1 expression call null "constexpr float"
	',' => Reduce #1 expression call null "constexpr float"
	'&' => Reduce #1 expression call null "constexpr float"
	'^' => Reduce #1 expression call null "constexpr float"
	'}' => Reduce #1 expression call null "constexpr float"
	"->" => Reduce #1 expression call null "constexpr float"
	'=' => Reduce #1 expression call null "constexpr float"
	'+' => Reduce #1 expression call null "constexpr float"
	'-' => Reduce #1 expression call null "constexpr float"
	'*' => Reduce #1 expression call null "constexpr float"
	'/' => Reduce #1 expression call null "constexpr float"
	'%' => Reduce #1 expression call null "constexpr float"
	"&&" => Reduce #1 expression call null "constexpr float"
	"||" => Reduce #1 expression call null "constexpr float"
	'|' => Reduce #1 expression call null "constexpr float"
	"<<" => Reduce #1 expression call null "constexpr float"
	">>" => Reduce #1 expression call null "constexpr float"
	'[' => Reduce #1 expression call null "constexpr float"
	']' => Reduce #1 expression call null "constexpr float"
	"==" => Reduce #1 expression call null "constexpr float"
	"!=" => Reduce #1 expression call null "constexpr float"
	">=" => Reduce #1 expression call null "constexpr float"
	"<=" => Reduce #1 expression call null "constexpr float"
	'>' => Reduce #1 expression call null "constexpr float"
	'<' => Reduce #1 expression call null "constexpr float"
	"+=" => Reduce #1 expression call null "constexpr float"
	"-=" => Reduce #1 expression call null "constexpr float"
	"*=" => Reduce #1 expression call null "constexpr float"
	"/=" => Reduce #1 expression call null "constexpr float"
	"^=" => Reduce #1 expression call null "constexpr float"
	"&=" => Reduce #1 expression call null "constexpr float"
	"%=" => Reduce #1 expression call null "constexpr float"
	"&&=" => Reduce #1 expression call null "constexpr float"
	"||=" => Reduce #1 expression call null "constexpr float"
	"|=" => Reduce #1 expression call null "constexpr float"
	"<<=" => Reduce #1 expression call null "constexpr float"
	">>=" => Reduce #1 expression call null "constexpr float"
	'.' => Reduce #1 expression call null "constexpr float"
[101]
	IDENT => Reduce #4 typespec call typespec "^^&"
	'(' => Reduce #4 typespec call typespec "^^&"
	')' => Reduce #4 typespec call typespec "^^&"
	"..." => Reduce #4 typespec call typespec "^^&"
	',' => Reduce #4 typespec call typespec "^^&"
	':' => Reduce #4 typespec call typespec "^^&"
[102]
	'(' => Shift goto 140
	';' => Reduce #4 variabledefinition call vardef_assign
	'&' => Shift goto 142
	'^' => Shift goto 143
	"->" => Shift goto 144
	'=' => Shift goto 145
	'+' => Shift goto 146
	'-' => Shift goto 147
	'*' => Shift goto 148
	'/' => Shift goto 149
	'%' => Shift goto 150
	"&&" => Shift goto 151
	"||" => Shift goto 152
	'|' => Shift goto 153
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'[' => Shift goto 156
	"==" => Shift goto 157
	"!=" => Shift goto 158
	">=" => Shift goto 159
	"<=" => Shift goto 160
	'>' => Shift goto 161
	'<' => Shift goto 162
	"+=" => Shift goto 163
	"-=" => Shift goto 164
	"*=" => Shift goto 165
	"/=" => Shift goto 166
	"^=" => Shift goto 167
	"&=" => Shift goto 168
	"%=" => Shift goto 169
	"&&=" => Shift goto 170
	"||=" => Shift goto 171
	"|=" => Shift goto 172
	"<<=" => Shift goto 173
	">>=" => Shift goto 174
	'.' => Shift goto 175
[103]
	BOOLEAN => Shift goto 78
	IDENT => Shift goto 79
	DQSTRING => Shift goto 80
	SQSTRING => Shift goto 81
	CARDINAL => Shift goto 82
	INTEGER => Shift goto 83
	FLOAT => Shift goto 84
	'(' => Shift goto 85
	'&' => Shift goto 86
	'{' => Shift goto 103
	'}' => Shift goto 181
	'+' => Shift goto 88
	'-' => Shift goto 89
	'*' => Shift goto 90
	'~' => Shift goto 91
	'!' => Shift goto 92
	"new" => Shift goto 98
	"cast" => Shift goto 99
	"null" => Shift goto 100
[104]
	'(' => Shift goto 140
	'&' => Shift goto 142
	'^' => Shift goto 143
	"->" => Shift goto 144
	'=' => Shift goto 145
	'+' => Shift goto 146
	'-' => Shift goto 147
	'*' => Shift goto 148
	'/' => Shift goto 149
	'%' => Shift goto 150
	"&&" => Shift goto 151
	"||" => Shift goto 152
	'|' => Shift goto 153
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'[' => Shift goto 156
	']' => Shift goto 195
	"==" => Shift goto 157
	"!=" => Shift goto 158
	">=" => Shift goto 159
	"<=" => Shift goto 160
	'>' => Shift goto 161
	'<' => Shift goto 162
	"+=" => Shift goto 163
	"-=" => Shift goto 164
	"*=" => Shift goto 165
	"/=" => Shift goto 166
	"^=" => Shift goto 167
	"&=" => Shift goto 168
	"%=" => Shift goto 169
	"&&=" => Shift goto 170
	"||=" => Shift goto 171
	"|=" => Shift goto 172
	"<<=" => Shift goto 173
	">>=" => Shift goto 174
	'.' => Shift goto 175
[105]
	'(' => Shift goto 108
[106]
	$ => Reduce #4 functiondefinition call procdef {const=false}
	BOOLEAN => Reduce #4 functiondefinition call procdef {const=false}
	IDENT => Reduce #4 functiondefinition call procdef {const=false}
	DQSTRING => Reduce #4 functiondefinition call procdef {const=false}
	SQSTRING => Reduce #4 functiondefinition call procdef {const=false}
	CARDINAL => Reduce #4 functiondefinition call procdef {const=false}
	INTEGER => Reduce #4 functiondefinition call procdef {const=false}
	FLOAT => Reduce #4 functiondefinition call procdef {const=false}
	"function" => Reduce #4 functiondefinition call procdef {const=false}
	'(' => Reduce #4 functiondefinition call procdef {const=false}
	"procedure" => Reduce #4 functiondefinition call procdef {const=false}
	"const" => Reduce #4 functiondefinition call procdef {const=false}
	"operator" => Reduce #4 functiondefinition call procdef {const=false}
	'&' => Reduce #4 functiondefinition call procdef {const=false}
	"any" => Reduce #4 functiondefinition call procdef {const=false}
	"class" => Reduce #4 functiondefinition call procdef {const=false}
	"struct" => Reduce #4 functiondefinition call procdef {const=false}
	"typedef" => Reduce #4 functiondefinition call procdef {const=false}
	'{' => Reduce #4 functiondefinition call procdef {const=false}
	'}' => Reduce #4 functiondefinition call procdef {const=false}
	"interface" => Reduce #4 functiondefinition call procdef {const=false}
	"private" => Reduce #4 functiondefinition call procdef {const=false}
	"public" => Reduce #4 functiondefinition call procdef {const=false}
	"constructor" => Reduce #4 functiondefinition call procdef {const=false}
	"destructor" => Reduce #4 functiondefinition call procdef {const=false}
	'+' => Reduce #4 functiondefinition call procdef {const=false}
	'-' => Reduce #4 functiondefinition call procdef {const=false}
	'*' => Reduce #4 functiondefinition call procdef {const=false}
	'~' => Reduce #4 functiondefinition call procdef {const=false}
	'!' => Reduce #4 functiondefinition call procdef {const=false}
	"main" => Reduce #4 functiondefinition call procdef {const=false}
	"var" => Reduce #4 functiondefinition call procdef {const=false}
	"return" => Reduce #4 functiondefinition call procdef {const=false}
	"delete" => Reduce #4 functiondefinition call procdef {const=false}
	"if" => Reduce #4 functiondefinition call procdef {const=false}
	"while" => Reduce #4 functiondefinition call procdef {const=false}
	"new" => Reduce #4 functiondefinition call procdef {const=false}
	"cast" => Reduce #4 functiondefinition call procdef {const=false}
	"null" => Reduce #4 functiondefinition call procdef {const=false}
[107]
	$ => Reduce #4 functiondefinition call procdef {const=true}
	BOOLEAN => Reduce #4 functiondefinition call procdef {const=true}
	IDENT => Reduce #4 functiondefinition call procdef {const=true}
	DQSTRING => Reduce #4 functiondefinition call procdef {const=true}
	SQSTRING => Reduce #4 functiondefinition call procdef {const=true}
	CARDINAL => Reduce #4 functiondefinition call procdef {const=true}
	INTEGER => Reduce #4 functiondefinition call procdef {const=true}
	FLOAT => Reduce #4 functiondefinition call procdef {const=true}
	"function" => Reduce #4 functiondefinition call procdef {const=true}
	'(' => Reduce #4 functiondefinition call procdef {const=true}
	"procedure" => Reduce #4 functiondefinition call procdef {const=true}
	"const" => Reduce #4 functiondefinition call procdef {const=true}
	"operator" => Reduce #4 functiondefinition call procdef {const=true}
	'&' => Reduce #4 functiondefinition call procdef {const=true}
	"any" => Reduce #4 functiondefinition call procdef {const=true}
	"class" => Reduce #4 functiondefinition call procdef {const=true}
	"struct" => Reduce #4 functiondefinition call procdef {const=true}
	"typedef" => Reduce #4 functiondefinition call procdef {const=true}
	'{' => Reduce #4 functiondefinition call procdef {const=true}
	'}' => Reduce #4 functiondefinition call procdef {const=true}
	"interface" => Reduce #4 functiondefinition call procdef {const=true}
	"private" => Reduce #4 functiondefinition call procdef {const=true}
	"public" => Reduce #4 functiondefinition call procdef {const=true}
	"constructor" => Reduce #4 functiondefinition call procdef {const=true}
	"destructor" => Reduce #4 functiondefinition call procdef {const=true}
	'+' => Reduce #4 functiondefinition call procdef {const=true}
	'-' => Reduce #4 functiondefinition call procdef {const=true}
	'*' => Reduce #4 functiondefinition call procdef {const=true}
	'~' => Reduce #4 functiondefinition call procdef {const=true}
	'!' => Reduce #4 functiondefinition call procdef {const=true}
	"main" => Reduce #4 functiondefinition call procdef {const=true}
	"var" => Reduce #4 functiondefinition call procdef {const=true}
	"return" => Reduce #4 functiondefinition call procdef {const=true}
	"delete" => Reduce #4 functiondefinition call procdef {const=true}
	"if" => Reduce #4 functiondefinition call procdef {const=true}
	"while" => Reduce #4 functiondefinition call procdef {const=true}
	"new" => Reduce #4 functiondefinition call procdef {const=true}
	"cast" => Reduce #4 functiondefinition call procdef {const=true}
	"null" => Reduce #4 functiondefinition call procdef {const=true}
[108]
	IDENT => Shift goto 17
	')' => Reduce #0 parameterlist call paramdeflist
	"const" => Shift goto 18
	"any" => Shift goto 19
[109]
	IDENT => Reduce #4 typespec call typespec "const^&"
	'(' => Reduce #4 typespec call typespec "const^&"
	')' => Reduce #4 typespec call typespec "const^&"
	"..." => Reduce #4 typespec call typespec "const^&"
	',' => Reduce #4 typespec call typespec "const^&"
	':' => Reduce #4 typespec call typespec "const^&"
[110]
	IDENT => Reduce #4 typespec call typespec "const^^"
	'(' => Reduce #4 typespec call typespec "const^^"
	')' => Reduce #4 typespec call typespec "const^^"
	"..." => Reduce #4 typespec call typespec "const^^"
	',' => Reduce #4 typespec call typespec "const^^"
	'&' => Shift goto 202
	':' => Reduce #4 typespec call typespec "const^^"
[111]
	IDENT => Reduce #4 typespec call typespec_key "const struct^"
	'(' => Reduce #4 typespec call typespec_key "const struct^"
	')' => Reduce #4 typespec call typespec_key "const struct^"
	"..." => Reduce #4 typespec call typespec_key "const struct^"
	',' => Reduce #4 typespec call typespec_key "const struct^"
	':' => Reduce #4 typespec call typespec_key "const struct^"
[112]
	IDENT => Reduce #4 typespec call typespec_key "const struct^"
	'(' => Reduce #4 typespec call typespec_key "const struct^"
	')' => Reduce #4 typespec call typespec_key "const struct^"
	"..." => Reduce #4 typespec call typespec_key "const struct^"
	',' => Reduce #4 typespec call typespec_key "const struct^"
	':' => Reduce #4 typespec call typespec_key "const struct^"
[113]
	'}' => Shift goto 203
[114]
	IDENT => Shift goto 17
	"function" => Reduce #0 linkage call linkage {private=false,linkage="external"}
	"procedure" => Reduce #0 linkage call linkage {private=false,linkage="external"}
	"const" => Shift goto 18
	"operator" => Reduce #0 linkage call linkage {private=false,linkage="external"}
	"any" => Shift goto 19
	"class" => Shift goto 20
	"struct" => Shift goto 21
	"typedef" => Shift goto 22
	'}' => Reduce #0 class_definitionlist
	"interface" => Shift goto 23
	"private" => Shift goto 24
	"public" => Shift goto 25
	"constructor" => Reduce #0 linkage call linkage {private=false,linkage="external"}
	"destructor" => Shift goto 124
[115]
	';' => Shift goto 205
[116]
	$ => Reduce #1 class_definition call definition 1
	IDENT => Reduce #1 class_definition call definition 1
	"function" => Reduce #1 class_definition call definition 1
	"procedure" => Reduce #1 class_definition call definition 1
	"const" => Reduce #1 class_definition call definition 1
	"operator" => Reduce #1 class_definition call definition 1
	"any" => Reduce #1 class_definition call definition 1
	"class" => Reduce #1 class_definition call definition 1
	"struct" => Reduce #1 class_definition call definition 1
	"typedef" => Reduce #1 class_definition call definition 1
	'}' => Reduce #1 class_definition call definition 1
	"interface" => Reduce #1 class_definition call definition 1
	"private" => Reduce #1 class_definition call definition 1
	"public" => Reduce #1 class_definition call definition 1
	"constructor" => Reduce #1 class_definition call definition 1
	"destructor" => Reduce #1 class_definition call definition 1
[117]
	$ => Reduce #1 class_definition call definition 1
	IDENT => Reduce #1 class_definition call definition 1
	"function" => Reduce #1 class_definition call definition 1
	"procedure" => Reduce #1 class_definition call definition 1
	"const" => Reduce #1 class_definition call definition 1
	"operator" => Reduce #1 class_definition call definition 1
	"any" => Reduce #1 class_definition call definition 1
	"class" => Reduce #1 class_definition call definition 1
	"struct" => Reduce #1 class_definition call definition 1
	"typedef" => Reduce #1 class_definition call definition 1
	'}' => Reduce #1 class_definition call definition 1
	"interface" => Reduce #1 class_definition call definition 1
	"private" => Reduce #1 class_definition call definition 1
	"public" => Reduce #1 class_definition call definition 1
	"constructor" => Reduce #1 class_definition call definition 1
	"destructor" => Reduce #1 class_definition call definition 1
[118]
	$ => Reduce #1 class_definition call definition 1
	IDENT => Reduce #1 class_definition call definition 1
	"function" => Reduce #1 class_definition call definition 1
	"procedure" => Reduce #1 class_definition call definition 1
	"const" => Reduce #1 class_definition call definition 1
	"operator" => Reduce #1 class_definition call definition 1
	"any" => Reduce #1 class_definition call definition 1
	"class" => Reduce #1 class_definition call definition 1
	"struct" => Reduce #1 class_definition call definition 1
	"typedef" => Reduce #1 class_definition call definition 1
	'}' => Reduce #1 class_definition call definition 1
	"interface" => Reduce #1 class_definition call definition 1
	"private" => Reduce #1 class_definition call definition 1
	"public" => Reduce #1 class_definition call definition 1
	"constructor" => Reduce #1 class_definition call definition 1
	"destructor" => Reduce #1 class_definition call definition 1
[119]
	"function" => Shift goto 35
	"procedure" => Shift goto 36
	"operator" => Shift goto 206
	"constructor" => Shift goto 207
[120]
	$ => Reduce #1 class_definition call definition 2
	IDENT => Reduce #1 class_definition call definition 2
	"function" => Reduce #1 class_definition call definition 2
	"procedure" => Reduce #1 class_definition call definition 2
	"const" => Reduce #1 class_definition call definition 2
	"operator" => Reduce #1 class_definition call definition 2
	"any" => Reduce #1 class_definition call definition 2
	"class" => Reduce #1 class_definition call definition 2
	"struct" => Reduce #1 class_definition call definition 2
	"typedef" => Reduce #1 class_definition call definition 2
	'}' => Reduce #1 class_definition call definition 2
	"interface" => Reduce #1 class_definition call definition 2
	"private" => Reduce #1 class_definition call definition 2
	"public" => Reduce #1 class_definition call definition 2
	"constructor" => Reduce #1 class_definition call definition 2
	"destructor" => Reduce #1 class_definition call definition 2
[121]
	$ => Reduce #1 class_definition call definition 2
	IDENT => Reduce #1 class_definition call definition 2
	"function" => Reduce #1 class_definition call definition 2
	"procedure" => Reduce #1 class_definition call definition 2
	"const" => Reduce #1 class_definition call definition 2
	"operator" => Reduce #1 class_definition call definition 2
	"any" => Reduce #1 class_definition call definition 2
	"class" => Reduce #1 class_definition call definition 2
	"struct" => Reduce #1 class_definition call definition 2
	"typedef" => Reduce #1 class_definition call definition 2
	'}' => Reduce #1 class_definition call definition 2
	"interface" => Reduce #1 class_definition call definition 2
	"private" => Reduce #1 class_definition call definition 2
	"public" => Reduce #1 class_definition call definition 2
	"constructor" => Reduce #1 class_definition call definition 2
	"destructor" => Reduce #1 class_definition call definition 2
[122]
	$ => Reduce #1 class_definition call definition 2
	IDENT => Reduce #1 class_definition call definition 2
	"function" => Reduce #1 class_definition call definition 2
	"procedure" => Reduce #1 class_definition call definition 2
	"const" => Reduce #1 class_definition call definition 2
	"operator" => Reduce #1 class_definition call definition 2
	"any" => Reduce #1 class_definition call definition 2
	"class" => Reduce #1 class_definition call definition 2
	"struct" => Reduce #1 class_definition call definition 2
	"typedef" => Reduce #1 class_definition call definition 2
	'}' => Reduce #1 class_definition call definition 2
	"interface" => Reduce #1 class_definition call definition 2
	"private" => Reduce #1 class_definition call definition 2
	"public" => Reduce #1 class_definition call definition 2
	"constructor" => Reduce #1 class_definition call definition 2
	"destructor" => Reduce #1 class_definition call definition 2
[123]
	';' => Shift goto 208
[124]
	'{' => Shift goto 209
[125]
	',' => Shift goto 210
	'{' => Reduce #1 inheritlist call inheritdef 1
[126]
	'{' => Shift goto 211
[127]
	'}' => Shift goto 212
[128]
	IDENT => Shift goto 17
	"const" => Shift goto 18
	"any" => Shift goto 19
	"struct" => Shift goto 21
	"typedef" => Shift goto 22
	'}' => Reduce #0 struct_definitionlist
[129]
	'}' => Shift goto 214
[130]
	"function" => Shift goto 131
	"procedure" => Shift goto 132
	"operator" => Shift goto 133
	'}' => Reduce #0 interface_definitionlist
[131]
	IDENT => Shift goto 216
[132]
	IDENT => Shift goto 217
[133]
	'(' => Shift goto 219
	'&' => Shift goto 220
	"->" => Shift goto 221
	'=' => Shift goto 222
	'+' => Shift goto 223
	'-' => Shift goto 224
	'*' => Shift goto 225
	'/' => Shift goto 226
	'%' => Shift goto 227
	"&&" => Shift goto 228
	"||" => Shift goto 229
	'|' => Shift goto 230
	"<<" => Shift goto 231
	">>" => Shift goto 232
	'~' => Shift goto 233
	'!' => Shift goto 234
	'[' => Shift goto 235
	"==" => Shift goto 236
	"!=" => Shift goto 237
	">=" => Shift goto 238
	"<=" => Shift goto 239
	'>' => Shift goto 240
	'<' => Shift goto 241
[134]
	'(' => Shift goto 242
[135]
	IDENT => Shift goto 17
	')' => Reduce #0 extern_paramlist call extern_paramdeflist
	"..." => Reduce #0 extern_paramlist call extern_paramdeflist
	"const" => Shift goto 18
	"any" => Shift goto 19
[136]
	$ => Reduce #2 statement call definition
	BOOLEAN => Reduce #2 statement call definition
	IDENT => Reduce #2 statement call definition
	DQSTRING => Reduce #2 statement call definition
	SQSTRING => Reduce #2 statement call definition
	CARDINAL => Reduce #2 statement call definition
	INTEGER => Reduce #2 statement call definition
	FLOAT => Reduce #2 statement call definition
	"function" => Reduce #2 statement call definition
	'(' => Reduce #2 statement call definition
	"procedure" => Reduce #2 statement call definition
	'&' => Reduce #2 statement call definition
	"typedef" => Reduce #2 statement call definition
	'{' => Reduce #2 statement call definition
	'}' => Reduce #2 statement call definition
	"private" => Reduce #2 statement call definition
	"public" => Reduce #2 statement call definition
	'+' => Reduce #2 statement call definition
	'-' => Reduce #2 statement call definition
	'*' => Reduce #2 statement call definition
	'~' => Reduce #2 statement call definition
	'!' => Reduce #2 statement call definition
	"var" => Reduce #2 statement call definition
	"return" => Reduce #2 statement call definition
	"delete" => Reduce #2 statement call definition
	"if" => Reduce #2 statement call definition
	"while" => Reduce #2 statement call definition
	"new" => Reduce #2 statement call definition
	"cast" => Reduce #2 statement call definition
	"null" => Reduce #2 statement call definition
[137]
	$ => Reduce #4 main_procedure call main_procdef
[138]
	'}' => Reduce #2 statementlist
[139]
	IDENT => Shift goto 246
[140]
	BOOLEAN => Shift goto 78
	IDENT => Shift goto 79
	DQSTRING => Shift goto 80
	SQSTRING => Shift goto 81
	CARDINAL => Shift goto 82
	INTEGER => Shift goto 83
	FLOAT => Shift goto 84
	'(' => Shift goto 85
	')' => Shift goto 248
	'&' => Shift goto 86
	'{' => Shift goto 103
	'+' => Shift goto 88
	'-' => Shift goto 89
	'*' => Shift goto 90
	'~' => Shift goto 91
	'!' => Shift goto 92
	"new" => Shift goto 98
	"cast" => Shift goto 99
	"null" => Shift goto 100
[141]
	$ => Reduce #2 statement call free_expression
	BOOLEAN => Reduce #2 statement call free_expression
	IDENT => Reduce #2 statement call free_expression
	DQSTRING => Reduce #2 statement call free_expression
	SQSTRING => Reduce #2 statement call free_expression
	CARDINAL => Reduce #2 statement call free_expression
	INTEGER => Reduce #2 statement call free_expression
	FLOAT => Reduce #2 statement call free_expression
	"function" => Reduce #2 statement call free_expression
	'(' => Reduce #2 statement call free_expression
	"procedure" => Reduce #2 statement call free_expression
	'&' => Reduce #2 statement call free_expression
	"typedef" => Reduce #2 statement call free_expression
	'{' => Reduce #2 statement call free_expression
	'}' => Reduce #2 statement call free_expression
	"private" => Reduce #2 statement call free_expression
	"public" => Reduce #2 statement call free_expression
	'+' => Reduce #2 statement call free_expression
	'-' => Reduce #2 statement call free_expression
	'*' => Reduce #2 statement call free_expression
	'~' => Reduce #2 statement call free_expression
	'!' => Reduce #2 statement call free_expression
	"var" => Reduce #2 statement call free_expression
	"return" => Reduce #2 statement call free_expression
	"delete" => Reduce #2 statement call free_expression
	"if" => Reduce #2 statement call free_expression
	"while" => Reduce #2 statement call free_expression
	"new" => Reduce #2 statement call free_expression
	"cast" => Reduce #2 statement call free_expression
	"null" => Reduce #2 statement call free_expression
[142]
	BOOLEAN => Shift goto 78
	IDENT => Shift goto 79
	DQSTRING => Shift goto 80
	SQSTRING => Shift goto 81
	CARDINAL => Shift goto 82
	INTEGER => Shift goto 83
	FLOAT => Shift goto 84
	'(' => Shift goto 85
	'&' => Shift goto 86
	'{' => Shift goto 103
	'+' => Shift goto 88
	'-' => Shift goto 89
	'*' => Shift goto 90
	'~' => Shift goto 91
	'!' => Shift goto 92
	"new" => Shift goto 98
	"cast" => Shift goto 99
	"null" => Shift goto 100
[143]
	BOOLEAN => Shift goto 78
	IDENT => Shift goto 79
	DQSTRING => Shift goto 80
	SQSTRING => Shift goto 81
	CARDINAL => Shift goto 82
	INTEGER => Shift goto 83
	FLOAT => Shift goto 84
	'(' => Shift goto 85
	'&' => Shift goto 86
	'{' => Shift goto 103
	'+' => Shift goto 88
	'-' => Shift goto 89
	'*' => Shift goto 90
	'~' => Shift goto 91
	'!' => Shift goto 92
	"new" => Shift goto 98
	"cast" => Shift goto 99
	"null" => Shift goto 100
[144]
	IDENT => Reduce #1 indirection call count
	"->" => Shift goto 144
[145]
	BOOLEAN => Shift goto 78
	IDENT => Shift goto 79
	DQSTRING => Shift goto 80
	SQSTRING => Shift goto 81
	CARDINAL => Shift goto 82
	INTEGER => Shift goto 83
	FLOAT => Shift goto 84
	'(' => Shift goto 85
	'&' => Shift goto 86
	'{' => Shift goto 103
	'+' => Shift goto 88
	'-' => Shift goto 89
	'*' => Shift goto 90
	'~' => Shift goto 91
	'!' => Shift goto 92
	"new" => Shift goto 98
	"cast" => Shift goto 99
	"null" => Shift goto 100
[146]
	BOOLEAN => Shift goto 78
	IDENT => Shift goto 79
	DQSTRING => Shift goto 80
	SQSTRING => Shift goto 81
	CARDINAL => Shift goto 82
	INTEGER => Shift goto 83
	FLOAT => Shift goto 84
	'(' => Shift goto 85
	'&' => Shift goto 86
	'{' => Shift goto 103
	'+' => Shift goto 88
	'-' => Shift goto 89
	'*' => Shift goto 90
	'~' => Shift goto 91
	'!' => Shift goto 92
	"new" => Shift goto 98
	"cast" => Shift goto 99
	"null" => Shift goto 100
[147]
	BOOLEAN => Shift goto 78
	IDENT => Shift goto 79
	DQSTRING => Shift goto 80
	SQSTRING => Shift goto 81
	CARDINAL => Shift goto 82
	INTEGER => Shift goto 83
	FLOAT => Shift goto 84
	'(' => Shift goto 85
	'&' => Shift goto 86
	'{' => Shift goto 103
	'+' => Shift goto 88
	'-' => Shift goto 89
	'*' => Shift goto 90
	'~' => Shift goto 91
	'!' => Shift goto 92
	"new" => Shift goto 98
	"cast" => Shift goto 99
	"null" => Shift goto 100
[148]
	BOOLEAN => Shift goto 78
	IDENT => Shift goto 79
	DQSTRING => Shift goto 80
	SQSTRING => Shift goto 81
	CARDINAL => Shift goto 82
	INTEGER => Shift goto 83
	FLOAT => Shift goto 84
	'(' => Shift goto 85
	'&' => Shift goto 86
	'{' => Shift goto 103
	'+' => Shift goto 88
	'-' => Shift goto 89
	'*' => Shift goto 90
	'~' => Shift goto 91
	'!' => Shift goto 92
	"new" => Shift goto 98
	"cast" => Shift goto 99
	"null" => Shift goto 100
[149]
	BOOLEAN => Shift goto 78
	IDENT => Shift goto 79
	DQSTRING => Shift goto 80
	SQSTRING => Shift goto 81
	CARDINAL => Shift goto 82
	INTEGER => Shift goto 83
	FLOAT => Shift goto 84
	'(' => Shift goto 85
	'&' => Shift goto 86
	'{' => Shift goto 103
	'+' => Shift goto 88
	'-' => Shift goto 89
	'*' => Shift goto 90
	'~' => Shift goto 91
	'!' => Shift goto 92
	"new" => Shift goto 98
	"cast" => Shift goto 99
	"null" => Shift goto 100
[150]
	BOOLEAN => Shift goto 78
	IDENT => Shift goto 79
	DQSTRING => Shift goto 80
	SQSTRING => Shift goto 81
	CARDINAL => Shift goto 82
	INTEGER => Shift goto 83
	FLOAT => Shift goto 84
	'(' => Shift goto 85
	'&' => Shift goto 86
	'{' => Shift goto 103
	'+' => Shift goto 88
	'-' => Shift goto 89
	'*' => Shift goto 90
	'~' => Shift goto 91
	'!' => Shift goto 92
	"new" => Shift goto 98
	"cast" => Shift goto 99
	"null" => Shift goto 100
[151]
	BOOLEAN => Shift goto 78
	IDENT => Shift goto 79
	DQSTRING => Shift goto 80
	SQSTRING => Shift goto 81
	CARDINAL => Shift goto 82
	INTEGER => Shift goto 83
	FLOAT => Shift goto 84
	'(' => Shift goto 85
	'&' => Shift goto 86
	'{' => Shift goto 103
	'+' => Shift goto 88
	'-' => Shift goto 89
	'*' => Shift goto 90
	'~' => Shift goto 91
	'!' => Shift goto 92
	"new" => Shift goto 98
	"cast" => Shift goto 99
	"null" => Shift goto 100
[152]
	BOOLEAN => Shift goto 78
	IDENT => Shift goto 79
	DQSTRING => Shift goto 80
	SQSTRING => Shift goto 81
	CARDINAL => Shift goto 82
	INTEGER => Shift goto 83
	FLOAT => Shift goto 84
	'(' => Shift goto 85
	'&' => Shift goto 86
	'{' => Shift goto 103
	'+' => Shift goto 88
	'-' => Shift goto 89
	'*' => Shift goto 90
	'~' => Shift goto 91
	'!' => Shift goto 92
	"new" => Shift goto 98
	"cast" => Shift goto 99
	"null" => Shift goto 100
[153]
	BOOLEAN => Shift goto 78
	IDENT => Shift goto 79
	DQSTRING => Shift goto 80
	SQSTRING => Shift goto 81
	CARDINAL => Shift goto 82
	INTEGER => Shift goto 83
	FLOAT => Shift goto 84
	'(' => Shift goto 85
	'&' => Shift goto 86
	'{' => Shift goto 103
	'+' => Shift goto 88
	'-' => Shift goto 89
	'*' => Shift goto 90
	'~' => Shift goto 91
	'!' => Shift goto 92
	"new" => Shift goto 98
	"cast" => Shift goto 99
	"null" => Shift goto 100
[154]
	BOOLEAN => Shift goto 78
	IDENT => Shift goto 79
	DQSTRING => Shift goto 80
	SQSTRING => Shift goto 81
	CARDINAL => Shift goto 82
	INTEGER => Shift goto 83
	FLOAT => Shift goto 84
	'(' => Shift goto 85
	'&' => Shift goto 86
	'{' => Shift goto 103
	'+' => Shift goto 88
	'-' => Shift goto 89
	'*' => Shift goto 90
	'~' => Shift goto 91
	'!' => Shift goto 92
	"new" => Shift goto 98
	"cast" => Shift goto 99
	"null" => Shift goto 100
[155]
	BOOLEAN => Shift goto 78
	IDENT => Shift goto 79
	DQSTRING => Shift goto 80
	SQSTRING => Shift goto 81
	CARDINAL => Shift goto 82
	INTEGER => Shift goto 83
	FLOAT => Shift goto 84
	'(' => Shift goto 85
	'&' => Shift goto 86
	'{' => Shift goto 103
	'+' => Shift goto 88
	'-' => Shift goto 89
	'*' => Shift goto 90
	'~' => Shift goto 91
	'!' => Shift goto 92
	"new" => Shift goto 98
	"cast" => Shift goto 99
	"null" => Shift goto 100
[156]
	BOOLEAN => Shift goto 78
	IDENT => Shift goto 79
	DQSTRING => Shift goto 80
	SQSTRING => Shift goto 81
	CARDINAL => Shift goto 82
	INTEGER => Shift goto 83
	FLOAT => Shift goto 84
	'(' => Shift goto 85
	'&' => Shift goto 86
	'{' => Shift goto 103
	'+' => Shift goto 88
	'-' => Shift goto 89
	'*' => Shift goto 90
	'~' => Shift goto 91
	'!' => Shift goto 92
	"new" => Shift goto 98
	"cast" => Shift goto 99
	"null" => Shift goto 100
[157]
	BOOLEAN => Shift goto 78
	IDENT => Shift goto 79
	DQSTRING => Shift goto 80
	SQSTRING => Shift goto 81
	CARDINAL => Shift goto 82
	INTEGER => Shift goto 83
	FLOAT => Shift goto 84
	'(' => Shift goto 85
	'&' => Shift goto 86
	'{' => Shift goto 103
	'+' => Shift goto 88
	'-' => Shift goto 89
	'*' => Shift goto 90
	'~' => Shift goto 91
	'!' => Shift goto 92
	"new" => Shift goto 98
	"cast" => Shift goto 99
	"null" => Shift goto 100
[158]
	BOOLEAN => Shift goto 78
	IDENT => Shift goto 79
	DQSTRING => Shift goto 80
	SQSTRING => Shift goto 81
	CARDINAL => Shift goto 82
	INTEGER => Shift goto 83
	FLOAT => Shift goto 84
	'(' => Shift goto 85
	'&' => Shift goto 86
	'{' => Shift goto 103
	'+' => Shift goto 88
	'-' => Shift goto 89
	'*' => Shift goto 90
	'~' => Shift goto 91
	'!' => Shift goto 92
	"new" => Shift goto 98
	"cast" => Shift goto 99
	"null" => Shift goto 100
[159]
	BOOLEAN => Shift goto 78
	IDENT => Shift goto 79
	DQSTRING => Shift goto 80
	SQSTRING => Shift goto 81
	CARDINAL => Shift goto 82
	INTEGER => Shift goto 83
	FLOAT => Shift goto 84
	'(' => Shift goto 85
	'&' => Shift goto 86
	'{' => Shift goto 103
	'+' => Shift goto 88
	'-' => Shift goto 89
	'*' => Shift goto 90
	'~' => Shift goto 91
	'!' => Shift goto 92
	"new" => Shift goto 98
	"cast" => Shift goto 99
	"null" => Shift goto 100
[160]
	BOOLEAN => Shift goto 78
	IDENT => Shift goto 79
	DQSTRING => Shift goto 80
	SQSTRING => Shift goto 81
	CARDINAL => Shift goto 82
	INTEGER => Shift goto 83
	FLOAT => Shift goto 84
	'(' => Shift goto 85
	'&' => Shift goto 86
	'{' => Shift goto 103
	'+' => Shift goto 88
	'-' => Shift goto 89
	'*' => Shift goto 90
	'~' => Shift goto 91
	'!' => Shift goto 92
	"new" => Shift goto 98
	"cast" => Shift goto 99
	"null" => Shift goto 100
[161]
	BOOLEAN => Shift goto 78
	IDENT => Shift goto 79
	DQSTRING => Shift goto 80
	SQSTRING => Shift goto 81
	CARDINAL => Shift goto 82
	INTEGER => Shift goto 83
	FLOAT => Shift goto 84
	'(' => Shift goto 85
	'&' => Shift goto 86
	'{' => Shift goto 103
	'+' => Shift goto 88
	'-' => Shift goto 89
	'*' => Shift goto 90
	'~' => Shift goto 91
	'!' => Shift goto 92
	"new" => Shift goto 98
	"cast" => Shift goto 99
	"null" => Shift goto 100
[162]
	BOOLEAN => Shift goto 78
	IDENT => Shift goto 79
	DQSTRING => Shift goto 80
	SQSTRING => Shift goto 81
	CARDINAL => Shift goto 82
	INTEGER => Shift goto 83
	FLOAT => Shift goto 84
	'(' => Shift goto 85
	'&' => Shift goto 86
	'{' => Shift goto 103
	'+' => Shift goto 88
	'-' => Shift goto 89
	'*' => Shift goto 90
	'~' => Shift goto 91
	'!' => Shift goto 92
	"new" => Shift goto 98
	"cast" => Shift goto 99
	"null" => Shift goto 100
[163]
	BOOLEAN => Shift goto 78
	IDENT => Shift goto 79
	DQSTRING => Shift goto 80
	SQSTRING => Shift goto 81
	CARDINAL => Shift goto 82
	INTEGER => Shift goto 83
	FLOAT => Shift goto 84
	'(' => Shift goto 85
	'&' => Shift goto 86
	'{' => Shift goto 103
	'+' => Shift goto 88
	'-' => Shift goto 89
	'*' => Shift goto 90
	'~' => Shift goto 91
	'!' => Shift goto 92
	"new" => Shift goto 98
	"cast" => Shift goto 99
	"null" => Shift goto 100
[164]
	BOOLEAN => Shift goto 78
	IDENT => Shift goto 79
	DQSTRING => Shift goto 80
	SQSTRING => Shift goto 81
	CARDINAL => Shift goto 82
	INTEGER => Shift goto 83
	FLOAT => Shift goto 84
	'(' => Shift goto 85
	'&' => Shift goto 86
	'{' => Shift goto 103
	'+' => Shift goto 88
	'-' => Shift goto 89
	'*' => Shift goto 90
	'~' => Shift goto 91
	'!' => Shift goto 92
	"new" => Shift goto 98
	"cast" => Shift goto 99
	"null" => Shift goto 100
[165]
	BOOLEAN => Shift goto 78
	IDENT => Shift goto 79
	DQSTRING => Shift goto 80
	SQSTRING => Shift goto 81
	CARDINAL => Shift goto 82
	INTEGER => Shift goto 83
	FLOAT => Shift goto 84
	'(' => Shift goto 85
	'&' => Shift goto 86
	'{' => Shift goto 103
	'+' => Shift goto 88
	'-' => Shift goto 89
	'*' => Shift goto 90
	'~' => Shift goto 91
	'!' => Shift goto 92
	"new" => Shift goto 98
	"cast" => Shift goto 99
	"null" => Shift goto 100
[166]
	BOOLEAN => Shift goto 78
	IDENT => Shift goto 79
	DQSTRING => Shift goto 80
	SQSTRING => Shift goto 81
	CARDINAL => Shift goto 82
	INTEGER => Shift goto 83
	FLOAT => Shift goto 84
	'(' => Shift goto 85
	'&' => Shift goto 86
	'{' => Shift goto 103
	'+' => Shift goto 88
	'-' => Shift goto 89
	'*' => Shift goto 90
	'~' => Shift goto 91
	'!' => Shift goto 92
	"new" => Shift goto 98
	"cast" => Shift goto 99
	"null" => Shift goto 100
[167]
	BOOLEAN => Shift goto 78
	IDENT => Shift goto 79
	DQSTRING => Shift goto 80
	SQSTRING => Shift goto 81
	CARDINAL => Shift goto 82
	INTEGER => Shift goto 83
	FLOAT => Shift goto 84
	'(' => Shift goto 85
	'&' => Shift goto 86
	'{' => Shift goto 103
	'+' => Shift goto 88
	'-' => Shift goto 89
	'*' => Shift goto 90
	'~' => Shift goto 91
	'!' => Shift goto 92
	"new" => Shift goto 98
	"cast" => Shift goto 99
	"null" => Shift goto 100
[168]
	BOOLEAN => Shift goto 78
	IDENT => Shift goto 79
	DQSTRING => Shift goto 80
	SQSTRING => Shift goto 81
	CARDINAL => Shift goto 82
	INTEGER => Shift goto 83
	FLOAT => Shift goto 84
	'(' => Shift goto 85
	'&' => Shift goto 86
	'{' => Shift goto 103
	'+' => Shift goto 88
	'-' => Shift goto 89
	'*' => Shift goto 90
	'~' => Shift goto 91
	'!' => Shift goto 92
	"new" => Shift goto 98
	"cast" => Shift goto 99
	"null" => Shift goto 100
[169]
	BOOLEAN => Shift goto 78
	IDENT => Shift goto 79
	DQSTRING => Shift goto 80
	SQSTRING => Shift goto 81
	CARDINAL => Shift goto 82
	INTEGER => Shift goto 83
	FLOAT => Shift goto 84
	'(' => Shift goto 85
	'&' => Shift goto 86
	'{' => Shift goto 103
	'+' => Shift goto 88
	'-' => Shift goto 89
	'*' => Shift goto 90
	'~' => Shift goto 91
	'!' => Shift goto 92
	"new" => Shift goto 98
	"cast" => Shift goto 99
	"null" => Shift goto 100
[170]
	BOOLEAN => Shift goto 78
	IDENT => Shift goto 79
	DQSTRING => Shift goto 80
	SQSTRING => Shift goto 81
	CARDINAL => Shift goto 82
	INTEGER => Shift goto 83
	FLOAT => Shift goto 84
	'(' => Shift goto 85
	'&' => Shift goto 86
	'{' => Shift goto 103
	'+' => Shift goto 88
	'-' => Shift goto 89
	'*' => Shift goto 90
	'~' => Shift goto 91
	'!' => Shift goto 92
	"new" => Shift goto 98
	"cast" => Shift goto 99
	"null" => Shift goto 100
[171]
	BOOLEAN => Shift goto 78
	IDENT => Shift goto 79
	DQSTRING => Shift goto 80
	SQSTRING => Shift goto 81
	CARDINAL => Shift goto 82
	INTEGER => Shift goto 83
	FLOAT => Shift goto 84
	'(' => Shift goto 85
	'&' => Shift goto 86
	'{' => Shift goto 103
	'+' => Shift goto 88
	'-' => Shift goto 89
	'*' => Shift goto 90
	'~' => Shift goto 91
	'!' => Shift goto 92
	"new" => Shift goto 98
	"cast" => Shift goto 99
	"null" => Shift goto 100
[172]
	BOOLEAN => Shift goto 78
	IDENT => Shift goto 79
	DQSTRING => Shift goto 80
	SQSTRING => Shift goto 81
	CARDINAL => Shift goto 82
	INTEGER => Shift goto 83
	FLOAT => Shift goto 84
	'(' => Shift goto 85
	'&' => Shift goto 86
	'{' => Shift goto 103
	'+' => Shift goto 88
	'-' => Shift goto 89
	'*' => Shift goto 90
	'~' => Shift goto 91
	'!' => Shift goto 92
	"new" => Shift goto 98
	"cast" => Shift goto 99
	"null" => Shift goto 100
[173]
	BOOLEAN => Shift goto 78
	IDENT => Shift goto 79
	DQSTRING => Shift goto 80
	SQSTRING => Shift goto 81
	CARDINAL => Shift goto 82
	INTEGER => Shift goto 83
	FLOAT => Shift goto 84
	'(' => Shift goto 85
	'&' => Shift goto 86
	'{' => Shift goto 103
	'+' => Shift goto 88
	'-' => Shift goto 89
	'*' => Shift goto 90
	'~' => Shift goto 91
	'!' => Shift goto 92
	"new" => Shift goto 98
	"cast" => Shift goto 99
	"null" => Shift goto 100
[174]
	BOOLEAN => Shift goto 78
	IDENT => Shift goto 79
	DQSTRING => Shift goto 80
	SQSTRING => Shift goto 81
	CARDINAL => Shift goto 82
	INTEGER => Shift goto 83
	FLOAT => Shift goto 84
	'(' => Shift goto 85
	'&' => Shift goto 86
	'{' => Shift goto 103
	'+' => Shift goto 88
	'-' => Shift goto 89
	'*' => Shift goto 90
	'~' => Shift goto 91
	'!' => Shift goto 92
	"new" => Shift goto 98
	"cast" => Shift goto 99
	"null" => Shift goto 100
[175]
	IDENT => Shift goto 282
[176]
	'(' => Shift goto 140
	')' => Shift goto 283
	'&' => Shift goto 142
	'^' => Shift goto 143
	"->" => Shift goto 144
	'=' => Shift goto 145
	'+' => Shift goto 146
	'-' => Shift goto 147
	'*' => Shift goto 148
	'/' => Shift goto 149
	'%' => Shift goto 150
	"&&" => Shift goto 151
	"||" => Shift goto 152
	'|' => Shift goto 153
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'[' => Shift goto 156
	"==" => Shift goto 157
	"!=" => Shift goto 158
	">=" => Shift goto 159
	"<=" => Shift goto 160
	'>' => Shift goto 161
	'<' => Shift goto 162
	"+=" => Shift goto 163
	"-=" => Shift goto 164
	"*=" => Shift goto 165
	"/=" => Shift goto 166
	"^=" => Shift goto 167
	"&=" => Shift goto 168
	"%=" => Shift goto 169
	"&&=" => Shift goto 170
	"||=" => Shift goto 171
	"|=" => Shift goto 172
	"<<=" => Shift goto 173
	">>=" => Shift goto 174
	'.' => Shift goto 175
[177]
	'(' => Shift goto 140
	')' => Reduce #2 expression call operator "&"
	';' => Reduce #2 expression call operator "&"
	',' => Reduce #2 expression call operator "&"
	'&' => Reduce #2 expression call operator "&"
	'^' => Reduce #2 expression call operator "&"
	'}' => Reduce #2 expression call operator "&"
	"->" => Reduce #2 expression call operator "&"
	'=' => Reduce #2 expression call operator "&"
	'+' => Reduce #2 expression call operator "&"
	'-' => Reduce #2 expression call operator "&"
	'*' => Shift goto 148
	'/' => Shift goto 149
	'%' => Shift goto 150
	"&&" => Reduce #2 expression call operator "&"
	"||" => Reduce #2 expression call operator "&"
	'|' => Reduce #2 expression call operator "&"
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'[' => Shift goto 156
	']' => Reduce #2 expression call operator "&"
	"==" => Reduce #2 expression call operator "&"
	"!=" => Reduce #2 expression call operator "&"
	">=" => Reduce #2 expression call operator "&"
	"<=" => Reduce #2 expression call operator "&"
	'>' => Reduce #2 expression call operator "&"
	'<' => Reduce #2 expression call operator "&"
	"+=" => Reduce #2 expression call operator "&"
	"-=" => Reduce #2 expression call operator "&"
	"*=" => Reduce #2 expression call operator "&"
	"/=" => Reduce #2 expression call operator "&"
	"^=" => Reduce #2 expression call operator "&"
	"&=" => Reduce #2 expression call operator "&"
	"%=" => Reduce #2 expression call operator "&"
	"&&=" => Reduce #2 expression call operator "&"
	"||=" => Reduce #2 expression call operator "&"
	"|=" => Reduce #2 expression call operator "&"
	"<<=" => Reduce #2 expression call operator "&"
	">>=" => Reduce #2 expression call operator "&"
	'.' => Shift goto 175
[178]
	'}' => Shift goto 284
[179]
	'(' => Shift goto 140
	';' => Shift goto 141
	',' => Shift goto 285
	'&' => Shift goto 142
	'^' => Shift goto 143
	'}' => Reduce #1 expressionlist
	"->" => Shift goto 144
	'=' => Shift goto 145
	'+' => Shift goto 146
	'-' => Shift goto 147
	'*' => Shift goto 148
	'/' => Shift goto 149
	'%' => Shift goto 150
	"&&" => Shift goto 151
	"||" => Shift goto 152
	'|' => Shift goto 153
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'[' => Shift goto 156
	"==" => Shift goto 157
	"!=" => Shift goto 158
	">=" => Shift goto 159
	"<=" => Shift goto 160
	'>' => Shift goto 161
	'<' => Shift goto 162
	"+=" => Shift goto 163
	"-=" => Shift goto 164
	"*=" => Shift goto 165
	"/=" => Shift goto 166
	"^=" => Shift goto 167
	"&=" => Shift goto 168
	"%=" => Shift goto 169
	"&&=" => Shift goto 170
	"||=" => Shift goto 171
	"|=" => Shift goto 172
	"<<=" => Shift goto 173
	">>=" => Shift goto 174
	'.' => Shift goto 175
[180]
	'}' => Shift goto 286
[181]
	'(' => Reduce #2 expression call structure
	')' => Reduce #2 expression call structure
	';' => Reduce #2 expression call structure
	',' => Reduce #2 expression call structure
	'&' => Reduce #2 expression call structure
	'^' => Reduce #2 expression call structure
	'}' => Reduce #2 expression call structure
	"->" => Reduce #2 expression call structure
	'=' => Reduce #2 expression call structure
	'+' => Reduce #2 expression call structure
	'-' => Reduce #2 expression call structure
	'*' => Reduce #2 expression call structure
	'/' => Reduce #2 expression call structure
	'%' => Reduce #2 expression call structure
	"&&" => Reduce #2 expression call structure
	"||" => Reduce #2 expression call structure
	'|' => Reduce #2 expression call structure
	"<<" => Reduce #2 expression call structure
	">>" => Reduce #2 expression call structure
	'[' => Reduce #2 expression call structure
	']' => Reduce #2 expression call structure
	"==" => Reduce #2 expression call structure
	"!=" => Reduce #2 expression call structure
	">=" => Reduce #2 expression call structure
	"<=" => Reduce #2 expression call structure
	'>' => Reduce #2 expression call structure
	'<' => Reduce #2 expression call structure
	"+=" => Reduce #2 expression call structure
	"-=" => Reduce #2 expression call structure
	"*=" => Reduce #2 expression call structure
	"/=" => Reduce #2 expression call structure
	"^=" => Reduce #2 expression call structure
	"&=" => Reduce #2 expression call structure
	"%=" => Reduce #2 expression call structure
	"&&=" => Reduce #2 expression call structure
	"||=" => Reduce #2 expression call structure
	"|=" => Reduce #2 expression call structure
	"<<=" => Reduce #2 expression call structure
	">>=" => Reduce #2 expression call structure
	'.' => Reduce #2 expression call structure
[182]
	'(' => Shift goto 140
	')' => Reduce #2 expression call operator "+"
	';' => Reduce #2 expression call operator "+"
	',' => Reduce #2 expression call operator "+"
	'&' => Reduce #2 expression call operator "+"
	'^' => Reduce #2 expression call operator "+"
	'}' => Reduce #2 expression call operator "+"
	"->" => Reduce #2 expression call operator "+"
	'=' => Reduce #2 expression call operator "+"
	'+' => Reduce #2 expression call operator "+"
	'-' => Reduce #2 expression call operator "+"
	'*' => Shift goto 148
	'/' => Shift goto 149
	'%' => Shift goto 150
	"&&" => Reduce #2 expression call operator "+"
	"||" => Reduce #2 expression call operator "+"
	'|' => Reduce #2 expression call operator "+"
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'[' => Shift goto 156
	']' => Reduce #2 expression call operator "+"
	"==" => Reduce #2 expression call operator "+"
	"!=" => Reduce #2 expression call operator "+"
	">=" => Reduce #2 expression call operator "+"
	"<=" => Reduce #2 expression call operator "+"
	'>' => Reduce #2 expression call operator "+"
	'<' => Reduce #2 expression call operator "+"
	"+=" => Reduce #2 expression call operator "+"
	"-=" => Reduce #2 expression call operator "+"
	"*=" => Reduce #2 expression call operator "+"
	"/=" => Reduce #2 expression call operator "+"
	"^=" => Reduce #2 expression call operator "+"
	"&=" => Reduce #2 expression call operator "+"
	"%=" => Reduce #2 expression call operator "+"
	"&&=" => Reduce #2 expression call operator "+"
	"||=" => Reduce #2 expression call operator "+"
	"|=" => Reduce #2 expression call operator "+"
	"<<=" => Reduce #2 expression call operator "+"
	">>=" => Reduce #2 expression call operator "+"
	'.' => Shift goto 175
[183]
	'(' => Shift goto 140
	')' => Reduce #2 expression call operator "-"
	';' => Reduce #2 expression call operator "-"
	',' => Reduce #2 expression call operator "-"
	'&' => Reduce #2 expression call operator "-"
	'^' => Reduce #2 expression call operator "-"
	'}' => Reduce #2 expression call operator "-"
	"->" => Reduce #2 expression call operator "-"
	'=' => Reduce #2 expression call operator "-"
	'+' => Reduce #2 expression call operator "-"
	'-' => Reduce #2 expression call operator "-"
	'*' => Shift goto 148
	'/' => Shift goto 149
	'%' => Shift goto 150
	"&&" => Reduce #2 expression call operator "-"
	"||" => Reduce #2 expression call operator "-"
	'|' => Reduce #2 expression call operator "-"
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'[' => Shift goto 156
	']' => Reduce #2 expression call operator "-"
	"==" => Reduce #2 expression call operator "-"
	"!=" => Reduce #2 expression call operator "-"
	">=" => Reduce #2 expression call operator "-"
	"<=" => Reduce #2 expression call operator "-"
	'>' => Reduce #2 expression call operator "-"
	'<' => Reduce #2 expression call operator "-"
	"+=" => Reduce #2 expression call operator "-"
	"-=" => Reduce #2 expression call operator "-"
	"*=" => Reduce #2 expression call operator "-"
	"/=" => Reduce #2 expression call operator "-"
	"^=" => Reduce #2 expression call operator "-"
	"&=" => Reduce #2 expression call operator "-"
	"%=" => Reduce #2 expression call operator "-"
	"&&=" => Reduce #2 expression call operator "-"
	"||=" => Reduce #2 expression call operator "-"
	"|=" => Reduce #2 expression call operator "-"
	"<<=" => Reduce #2 expression call operator "-"
	">>=" => Reduce #2 expression call operator "-"
	'.' => Shift goto 175
[184]
	'(' => Shift goto 140
	')' => Reduce #2 expression call operator "->"
	';' => Reduce #2 expression call operator "->"
	',' => Reduce #2 expression call operator "->"
	'&' => Reduce #2 expression call operator "->"
	'^' => Reduce #2 expression call operator "->"
	'}' => Reduce #2 expression call operator "->"
	"->" => Reduce #2 expression call operator "->"
	'=' => Reduce #2 expression call operator "->"
	'+' => Reduce #2 expression call operator "->"
	'-' => Reduce #2 expression call operator "->"
	'*' => Reduce #2 expression call operator "->"
	'/' => Reduce #2 expression call operator "->"
	'%' => Reduce #2 expression call operator "->"
	"&&" => Reduce #2 expression call operator "->"
	"||" => Reduce #2 expression call operator "->"
	'|' => Reduce #2 expression call operator "->"
	"<<" => Reduce #2 expression call operator "->"
	">>" => Reduce #2 expression call operator "->"
	'[' => Shift goto 156
	']' => Reduce #2 expression call operator "->"
	"==" => Reduce #2 expression call operator "->"
	"!=" => Reduce #2 expression call operator "->"
	">=" => Reduce #2 expression call operator "->"
	"<=" => Reduce #2 expression call operator "->"
	'>' => Reduce #2 expression call operator "->"
	'<' => Reduce #2 expression call operator "->"
	"+=" => Reduce #2 expression call operator "->"
	"-=" => Reduce #2 expression call operator "->"
	"*=" => Reduce #2 expression call operator "->"
	"/=" => Reduce #2 expression call operator "->"
	"^=" => Reduce #2 expression call operator "->"
	"&=" => Reduce #2 expression call operator "->"
	"%=" => Reduce #2 expression call operator "->"
	"&&=" => Reduce #2 expression call operator "->"
	"||=" => Reduce #2 expression call operator "->"
	"|=" => Reduce #2 expression call operator "->"
	"<<=" => Reduce #2 expression call operator "->"
	">>=" => Reduce #2 expression call operator "->"
	'.' => Reduce #2 expression call operator "->"
[185]
	'(' => Shift goto 140
	')' => Reduce #2 expression call operator "~"
	';' => Reduce #2 expression call operator "~"
	',' => Reduce #2 expression call operator "~"
	'&' => Reduce #2 expression call operator "~"
	'^' => Reduce #2 expression call operator "~"
	'}' => Reduce #2 expression call operator "~"
	"->" => Reduce #2 expression call operator "~"
	'=' => Reduce #2 expression call operator "~"
	'+' => Reduce #2 expression call operator "~"
	'-' => Reduce #2 expression call operator "~"
	'*' => Shift goto 148
	'/' => Shift goto 149
	'%' => Shift goto 150
	"&&" => Reduce #2 expression call operator "~"
	"||" => Reduce #2 expression call operator "~"
	'|' => Reduce #2 expression call operator "~"
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'[' => Shift goto 156
	']' => Reduce #2 expression call operator "~"
	"==" => Reduce #2 expression call operator "~"
	"!=" => Reduce #2 expression call operator "~"
	">=" => Reduce #2 expression call operator "~"
	"<=" => Reduce #2 expression call operator "~"
	'>' => Reduce #2 expression call operator "~"
	'<' => Reduce #2 expression call operator "~"
	"+=" => Reduce #2 expression call operator "~"
	"-=" => Reduce #2 expression call operator "~"
	"*=" => Reduce #2 expression call operator "~"
	"/=" => Reduce #2 expression call operator "~"
	"^=" => Reduce #2 expression call operator "~"
	"&=" => Reduce #2 expression call operator "~"
	"%=" => Reduce #2 expression call operator "~"
	"&&=" => Reduce #2 expression call operator "~"
	"||=" => Reduce #2 expression call operator "~"
	"|=" => Reduce #2 expression call operator "~"
	"<<=" => Reduce #2 expression call operator "~"
	">>=" => Reduce #2 expression call operator "~"
	'.' => Shift goto 175
[186]
	'(' => Shift goto 140
	')' => Reduce #2 expression call operator "!"
	';' => Reduce #2 expression call operator "!"
	',' => Reduce #2 expression call operator "!"
	'&' => Reduce #2 expression call operator "!"
	'^' => Reduce #2 expression call operator "!"
	'}' => Reduce #2 expression call operator "!"
	"->" => Reduce #2 expression call operator "!"
	'=' => Reduce #2 expression call operator "!"
	'+' => Reduce #2 expression call operator "!"
	'-' => Reduce #2 expression call operator "!"
	'*' => Shift goto 148
	'/' => Shift goto 149
	'%' => Shift goto 150
	"&&" => Reduce #2 expression call operator "!"
	"||" => Reduce #2 expression call operator "!"
	'|' => Reduce #2 expression call operator "!"
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'[' => Shift goto 156
	']' => Reduce #2 expression call operator "!"
	"==" => Reduce #2 expression call operator "!"
	"!=" => Reduce #2 expression call operator "!"
	">=" => Reduce #2 expression call operator "!"
	"<=" => Reduce #2 expression call operator "!"
	'>' => Reduce #2 expression call operator "!"
	'<' => Reduce #2 expression call operator "!"
	"+=" => Reduce #2 expression call operator "!"
	"-=" => Reduce #2 expression call operator "!"
	"*=" => Reduce #2 expression call operator "!"
	"/=" => Reduce #2 expression call operator "!"
	"^=" => Reduce #2 expression call operator "!"
	"&=" => Reduce #2 expression call operator "!"
	"%=" => Reduce #2 expression call operator "!"
	"&&=" => Reduce #2 expression call operator "!"
	"||=" => Reduce #2 expression call operator "!"
	"|=" => Reduce #2 expression call operator "!"
	"<<=" => Reduce #2 expression call operator "!"
	">>=" => Reduce #2 expression call operator "!"
	'.' => Shift goto 175
[187]
	';' => Shift goto 287
[188]
	'(' => Shift goto 140
	';' => Shift goto 288
	'&' => Shift goto 142
	'^' => Shift goto 143
	"->" => Shift goto 144
	'=' => Shift goto 145
	'+' => Shift goto 146
	'-' => Shift goto 147
	'*' => Shift goto 148
	'/' => Shift goto 149
	'%' => Shift goto 150
	"&&" => Shift goto 151
	"||" => Shift goto 152
	'|' => Shift goto 153
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'[' => Shift goto 156
	"==" => Shift goto 157
	"!=" => Shift goto 158
	">=" => Shift goto 159
	"<=" => Shift goto 160
	'>' => Shift goto 161
	'<' => Shift goto 162
	"+=" => Shift goto 163
	"-=" => Shift goto 164
	"*=" => Shift goto 165
	"/=" => Shift goto 166
	"^=" => Shift goto 167
	"&=" => Shift goto 168
	"%=" => Shift goto 169
	"&&=" => Shift goto 170
	"||=" => Shift goto 171
	"|=" => Shift goto 172
	"<<=" => Shift goto 173
	">>=" => Shift goto 174
	'.' => Shift goto 175
[189]
	'(' => Shift goto 140
	';' => Shift goto 289
	'&' => Shift goto 142
	'^' => Shift goto 143
	"->" => Shift goto 144
	'=' => Shift goto 145
	'+' => Shift goto 146
	'-' => Shift goto 147
	'*' => Shift goto 148
	'/' => Shift goto 149
	'%' => Shift goto 150
	"&&" => Shift goto 151
	"||" => Shift goto 152
	'|' => Shift goto 153
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'[' => Shift goto 156
	"==" => Shift goto 157
	"!=" => Shift goto 158
	">=" => Shift goto 159
	"<=" => Shift goto 160
	'>' => Shift goto 161
	'<' => Shift goto 162
	"+=" => Shift goto 163
	"-=" => Shift goto 164
	"*=" => Shift goto 165
	"/=" => Shift goto 166
	"^=" => Shift goto 167
	"&=" => Shift goto 168
	"%=" => Shift goto 169
	"&&=" => Shift goto 170
	"||=" => Shift goto 171
	"|=" => Shift goto 172
	"<<=" => Shift goto 173
	">>=" => Shift goto 174
	'.' => Shift goto 175
[190]
	BOOLEAN => Shift goto 78
	IDENT => Shift goto 79
	DQSTRING => Shift goto 80
	SQSTRING => Shift goto 81
	CARDINAL => Shift goto 82
	INTEGER => Shift goto 83
	FLOAT => Shift goto 84
	'(' => Shift goto 85
	'&' => Shift goto 86
	'{' => Shift goto 103
	'+' => Shift goto 88
	'-' => Shift goto 89
	'*' => Shift goto 90
	'~' => Shift goto 91
	'!' => Shift goto 92
	"new" => Shift goto 98
	"cast" => Shift goto 99
	"null" => Shift goto 100
[191]
	BOOLEAN => Shift goto 78
	IDENT => Shift goto 79
	DQSTRING => Shift goto 80
	SQSTRING => Shift goto 81
	CARDINAL => Shift goto 82
	INTEGER => Shift goto 83
	FLOAT => Shift goto 84
	'(' => Shift goto 85
	'&' => Shift goto 86
	'{' => Shift goto 103
	'+' => Shift goto 88
	'-' => Shift goto 89
	'*' => Shift goto 90
	'~' => Shift goto 91
	'!' => Shift goto 92
	"new" => Shift goto 98
	"cast" => Shift goto 99
	"null" => Shift goto 100
[192]
	':' => Shift goto 292
[193]
	':' => Shift goto 293
[194]
	'(' => Shift goto 140
	')' => Reduce #1 expressionlist
	',' => Shift goto 285
	'&' => Shift goto 142
	'^' => Shift goto 143
	'}' => Reduce #1 expressionlist
	"->" => Shift goto 144
	'=' => Shift goto 145
	'+' => Shift goto 146
	'-' => Shift goto 147
	'*' => Shift goto 148
	'/' => Shift goto 149
	'%' => Shift goto 150
	"&&" => Shift goto 151
	"||" => Shift goto 152
	'|' => Shift goto 153
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'[' => Shift goto 156
	']' => Reduce #1 expressionlist
	"==" => Shift goto 157
	"!=" => Shift goto 158
	">=" => Shift goto 159
	"<=" => Shift goto 160
	'>' => Shift goto 161
	'<' => Shift goto 162
	"+=" => Shift goto 163
	"-=" => Shift goto 164
	"*=" => Shift goto 165
	"/=" => Shift goto 166
	"^=" => Shift goto 167
	"&=" => Shift goto 168
	"%=" => Shift goto 169
	"&&=" => Shift goto 170
	"||=" => Shift goto 171
	"|=" => Shift goto 172
	"<<=" => Shift goto 173
	">>=" => Shift goto 174
	'.' => Shift goto 175
[195]
	';' => Reduce #5 variabledefinition call vardef_array
	'=' => Shift goto 294
[196]
	$ => Reduce #5 functiondefinition call funcdef {const=false}
	BOOLEAN => Reduce #5 functiondefinition call funcdef {const=false}
	IDENT => Reduce #5 functiondefinition call funcdef {const=false}
	DQSTRING => Reduce #5 functiondefinition call funcdef {const=false}
	SQSTRING => Reduce #5 functiondefinition call funcdef {const=false}
	CARDINAL => Reduce #5 functiondefinition call funcdef {const=false}
	INTEGER => Reduce #5 functiondefinition call funcdef {const=false}
	FLOAT => Reduce #5 functiondefinition call funcdef {const=false}
	"function" => Reduce #5 functiondefinition call funcdef {const=false}
	'(' => Reduce #5 functiondefinition call funcdef {const=false}
	"procedure" => Reduce #5 functiondefinition call funcdef {const=false}
	"const" => Reduce #5 functiondefinition call funcdef {const=false}
	"operator" => Reduce #5 functiondefinition call funcdef {const=false}
	'&' => Reduce #5 functiondefinition call funcdef {const=false}
	"any" => Reduce #5 functiondefinition call funcdef {const=false}
	"class" => Reduce #5 functiondefinition call funcdef {const=false}
	"struct" => Reduce #5 functiondefinition call funcdef {const=false}
	"typedef" => Reduce #5 functiondefinition call funcdef {const=false}
	'{' => Reduce #5 functiondefinition call funcdef {const=false}
	'}' => Reduce #5 functiondefinition call funcdef {const=false}
	"interface" => Reduce #5 functiondefinition call funcdef {const=false}
	"private" => Reduce #5 functiondefinition call funcdef {const=false}
	"public" => Reduce #5 functiondefinition call funcdef {const=false}
	"constructor" => Reduce #5 functiondefinition call funcdef {const=false}
	"destructor" => Reduce #5 functiondefinition call funcdef {const=false}
	'+' => Reduce #5 functiondefinition call funcdef {const=false}
	'-' => Reduce #5 functiondefinition call funcdef {const=false}
	'*' => Reduce #5 functiondefinition call funcdef {const=false}
	'~' => Reduce #5 functiondefinition call funcdef {const=false}
	'!' => Reduce #5 functiondefinition call funcdef {const=false}
	"main" => Reduce #5 functiondefinition call funcdef {const=false}
	"var" => Reduce #5 functiondefinition call funcdef {const=false}
	"return" => Reduce #5 functiondefinition call funcdef {const=false}
	"delete" => Reduce #5 functiondefinition call funcdef {const=false}
	"if" => Reduce #5 functiondefinition call funcdef {const=false}
	"while" => Reduce #5 functiondefinition call funcdef {const=false}
	"new" => Reduce #5 functiondefinition call funcdef {const=false}
	"cast" => Reduce #5 functiondefinition call funcdef {const=false}
	"null" => Reduce #5 functiondefinition call funcdef {const=false}
[197]
	$ => Reduce #5 functiondefinition call funcdef {const=true}
	BOOLEAN => Reduce #5 functiondefinition call funcdef {const=true}
	IDENT => Reduce #5 functiondefinition call funcdef {const=true}
	DQSTRING => Reduce #5 functiondefinition call funcdef {const=true}
	SQSTRING => Reduce #5 functiondefinition call funcdef {const=true}
	CARDINAL => Reduce #5 functiondefinition call funcdef {const=true}
	INTEGER => Reduce #5 functiondefinition call funcdef {const=true}
	FLOAT => Reduce #5 functiondefinition call funcdef {const=true}
	"function" => Reduce #5 functiondefinition call funcdef {const=true}
	'(' => Reduce #5 functiondefinition call funcdef {const=true}
	"procedure" => Reduce #5 functiondefinition call funcdef {const=true}
	"const" => Reduce #5 functiondefinition call funcdef {const=true}
	"operator" => Reduce #5 functiondefinition call funcdef {const=true}
	'&' => Reduce #5 functiondefinition call funcdef {const=true}
	"any" => Reduce #5 functiondefinition call funcdef {const=true}
	"class" => Reduce #5 functiondefinition call funcdef {const=true}
	"struct" => Reduce #5 functiondefinition call funcdef {const=true}
	"typedef" => Reduce #5 functiondefinition call funcdef {const=true}
	'{' => Reduce #5 functiondefinition call funcdef {const=true}
	'}' => Reduce #5 functiondefinition call funcdef {const=true}
	"interface" => Reduce #5 functiondefinition call funcdef {const=true}
	"private" => Reduce #5 functiondefinition call funcdef {const=true}
	"public" => Reduce #5 functiondefinition call funcdef {const=true}
	"constructor" => Reduce #5 functiondefinition call funcdef {const=true}
	"destructor" => Reduce #5 functiondefinition call funcdef {const=true}
	'+' => Reduce #5 functiondefinition call funcdef {const=true}
	'-' => Reduce #5 functiondefinition call funcdef {const=true}
	'*' => Reduce #5 functiondefinition call funcdef {const=true}
	'~' => Reduce #5 functiondefinition call funcdef {const=true}
	'!' => Reduce #5 functiondefinition call funcdef {const=true}
	"main" => Reduce #5 functiondefinition call funcdef {const=true}
	"var" => Reduce #5 functiondefinition call funcdef {const=true}
	"return" => Reduce #5 functiondefinition call funcdef {const=true}
	"delete" => Reduce #5 functiondefinition call funcdef {const=true}
	"if" => Reduce #5 functiondefinition call funcdef {const=true}
	"while" => Reduce #5 functiondefinition call funcdef {const=true}
	"new" => Reduce #5 functiondefinition call funcdef {const=true}
	"cast" => Reduce #5 functiondefinition call funcdef {const=true}
	"null" => Reduce #5 functiondefinition call funcdef {const=true}
[198]
	IDENT => Shift goto 295
[199]
	')' => Shift goto 296
[200]
	')' => Reduce #1 parameterlist call paramdeflist
[201]
	')' => Reduce #1 parameters
	',' => Shift goto 297
[202]
	IDENT => Reduce #5 typespec call typespec "const^^&"
	'(' => Reduce #5 typespec call typespec "const^^&"
	')' => Reduce #5 typespec call typespec "const^^&"
	"..." => Reduce #5 typespec call typespec "const^^&"
	',' => Reduce #5 typespec call typespec "const^^&"
	':' => Reduce #5 typespec call typespec "const^^&"
[203]
	$ => Reduce #5 classdefinition call classdef
	IDENT => Reduce #5 classdefinition call classdef
	"function" => Reduce #5 classdefinition call classdef
	"procedure" => Reduce #5 classdefinition call classdef
	"const" => Reduce #5 classdefinition call classdef
	"operator" => Reduce #5 classdefinition call classdef
	"any" => Reduce #5 classdefinition call classdef
	"class" => Reduce #5 classdefinition call classdef
	"struct" => Reduce #5 classdefinition call classdef
	"typedef" => Reduce #5 classdefinition call classdef
	'}' => Reduce #5 classdefinition call classdef
	"interface" => Reduce #5 classdefinition call classdef
	"private" => Reduce #5 classdefinition call classdef
	"public" => Reduce #5 classdefinition call classdef
	"constructor" => Reduce #5 classdefinition call classdef
	"destructor" => Reduce #5 classdefinition call classdef
	"main" => Reduce #5 classdefinition call classdef
[204]
	'}' => Reduce #2 class_definitionlist
[205]
	$ => Reduce #2 class_definition call definition 1
	IDENT => Reduce #2 class_definition call definition 1
	"function" => Reduce #2 class_definition call definition 1
	"procedure" => Reduce #2 class_definition call definition 1
	"const" => Reduce #2 class_definition call definition 1
	"operator" => Reduce #2 class_definition call definition 1
	"any" => Reduce #2 class_definition call definition 1
	"class" => Reduce #2 class_definition call definition 1
	"struct" => Reduce #2 class_definition call definition 1
	"typedef" => Reduce #2 class_definition call definition 1
	'}' => Reduce #2 class_definition call definition 1
	"interface" => Reduce #2 class_definition call definition 1
	"private" => Reduce #2 class_definition call definition 1
	"public" => Reduce #2 class_definition call definition 1
	"constructor" => Reduce #2 class_definition call definition 1
	"destructor" => Reduce #2 class_definition call definition 1
[206]
	'(' => Shift goto 219
	'&' => Shift goto 220
	"->" => Shift goto 221
	'=' => Shift goto 222
	'+' => Shift goto 223
	'-' => Shift goto 224
	'*' => Shift goto 225
	'/' => Shift goto 226
	'%' => Shift goto 227
	"&&" => Shift goto 228
	"||" => Shift goto 229
	'|' => Shift goto 230
	"<<" => Shift goto 231
	">>" => Shift goto 232
	'~' => Shift goto 233
	'!' => Shift goto 234
	'[' => Shift goto 235
	"==" => Shift goto 236
	"!=" => Shift goto 237
	">=" => Shift goto 238
	"<=" => Shift goto 239
	'>' => Shift goto 240
	'<' => Shift goto 241
[207]
	'(' => Shift goto 300
[208]
	$ => Reduce #2 class_definition call definition 1
	IDENT => Reduce #2 class_definition call definition 1
	"function" => Reduce #2 class_definition call definition 1
	"procedure" => Reduce #2 class_definition call definition 1
	"const" => Reduce #2 class_definition call definition 1
	"operator" => Reduce #2 class_definition call definition 1
	"any" => Reduce #2 class_definition call definition 1
	"class" => Reduce #2 class_definition call definition 1
	"struct" => Reduce #2 class_definition call definition 1
	"typedef" => Reduce #2 class_definition call definition 1
	'}' => Reduce #2 class_definition call definition 1
	"interface" => Reduce #2 class_definition call definition 1
	"private" => Reduce #2 class_definition call definition 1
	"public" => Reduce #2 class_definition call definition 1
	"constructor" => Reduce #2 class_definition call definition 1
	"destructor" => Reduce #2 class_definition call definition 1
[209]
	BOOLEAN => Shift goto 78
	IDENT => Shift goto 79
	DQSTRING => Shift goto 80
	SQSTRING => Shift goto 81
	CARDINAL => Shift goto 82
	INTEGER => Shift goto 83
	FLOAT => Shift goto 84
	"function" => Reduce #0 linkage call linkage {private=false,linkage="external"}
	'(' => Shift goto 85
	"procedure" => Reduce #0 linkage call linkage {private=false,linkage="external"}
	'&' => Shift goto 86
	"typedef" => Shift goto 22
	'{' => Shift goto 87
	'}' => Reduce #0 statementlist
	"private" => Shift goto 24
	"public" => Shift goto 25
	'+' => Shift goto 88
	'-' => Shift goto 89
	'*' => Shift goto 90
	'~' => Shift goto 91
	'!' => Shift goto 92
	"var" => Shift goto 93
	"return" => Shift goto 94
	"delete" => Shift goto 95
	"if" => Shift goto 96
	"while" => Shift goto 97
	"new" => Shift goto 98
	"cast" => Shift goto 99
	"null" => Shift goto 100
[210]
	IDENT => Shift goto 17
[211]
	IDENT => Shift goto 17
	"function" => Reduce #0 linkage call linkage {private=false,linkage="external"}
	"procedure" => Reduce #0 linkage call linkage {private=false,linkage="external"}
	"const" => Shift goto 18
	"operator" => Reduce #0 linkage call linkage {private=false,linkage="external"}
	"any" => Shift goto 19
	"class" => Shift goto 20
	"struct" => Shift goto 21
	"typedef" => Shift goto 22
	'}' => Reduce #0 class_definitionlist
	"interface" => Shift goto 23
	"private" => Shift goto 24
	"public" => Shift goto 25
	"constructor" => Reduce #0 linkage call linkage {private=false,linkage="external"}
	"destructor" => Shift goto 124
[212]
	$ => Reduce #5 structdefinition call structdef
	IDENT => Reduce #5 structdefinition call structdef
	"function" => Reduce #5 structdefinition call structdef
	"procedure" => Reduce #5 structdefinition call structdef
	"const" => Reduce #5 structdefinition call structdef
	"operator" => Reduce #5 structdefinition call structdef
	"any" => Reduce #5 structdefinition call structdef
	"class" => Reduce #5 structdefinition call structdef
	"struct" => Reduce #5 structdefinition call structdef
	"typedef" => Reduce #5 structdefinition call structdef
	'}' => Reduce #5 structdefinition call structdef
	"interface" => Reduce #5 structdefinition call structdef
	"private" => Reduce #5 structdefinition call structdef
	"public" => Reduce #5 structdefinition call structdef
	"constructor" => Reduce #5 structdefinition call structdef
	"destructor" => Reduce #5 structdefinition call structdef
	"main" => Reduce #5 structdefinition call structdef
[213]
	'}' => Reduce #2 struct_definitionlist
[214]
	$ => Reduce #5 interfacedefinition call interfacedef
	IDENT => Reduce #5 interfacedefinition call interfacedef
	"function" => Reduce #5 interfacedefinition call interfacedef
	"procedure" => Reduce #5 interfacedefinition call interfacedef
	"const" => Reduce #5 interfacedefinition call interfacedef
	"operator" => Reduce #5 interfacedefinition call interfacedef
	"any" => Reduce #5 interfacedefinition call interfacedef
	"class" => Reduce #5 interfacedefinition call interfacedef
	"struct" => Reduce #5 interfacedefinition call interfacedef
	"typedef" => Reduce #5 interfacedefinition call interfacedef
	'}' => Reduce #5 interfacedefinition call interfacedef
	"interface" => Reduce #5 interfacedefinition call interfacedef
	"private" => Reduce #5 interfacedefinition call interfacedef
	"public" => Reduce #5 interfacedefinition call interfacedef
	"constructor" => Reduce #5 interfacedefinition call interfacedef
	"destructor" => Reduce #5 interfacedefinition call interfacedef
	"main" => Reduce #5 interfacedefinition call interfacedef
[215]
	'}' => Reduce #2 interface_definitionlist
[216]
	IDENT => Shift goto 17
	"const" => Shift goto 18
	"any" => Shift goto 19
[217]
	'(' => Shift goto 305
[218]
	IDENT => Shift goto 17
	'(' => Shift goto 307
	"const" => Shift goto 18
	"any" => Shift goto 19
[219]
	')' => Shift goto 308
[220]
	IDENT => Reduce #1 operatordecl call operatordecl {name="&",symbol="bitand"}
	'(' => Reduce #1 operatordecl call operatordecl {name="&",symbol="bitand"}
	"const" => Reduce #1 operatordecl call operatordecl {name="&",symbol="bitand"}
	"any" => Reduce #1 operatordecl call operatordecl {name="&",symbol="bitand"}
[221]
	IDENT => Reduce #1 operatordecl call operatordecl {name="->",symbol="arrow"}
	'(' => Reduce #1 operatordecl call operatordecl {name="->",symbol="arrow"}
	"const" => Reduce #1 operatordecl call operatordecl {name="->",symbol="arrow"}
	"any" => Reduce #1 operatordecl call operatordecl {name="->",symbol="arrow"}
[222]
	IDENT => Reduce #1 operatordecl call operatordecl {name="=",symbol="assign"}
	'(' => Reduce #1 operatordecl call operatordecl {name="=",symbol="assign"}
	"const" => Reduce #1 operatordecl call operatordecl {name="=",symbol="assign"}
	"any" => Reduce #1 operatordecl call operatordecl {name="=",symbol="assign"}
[223]
	IDENT => Reduce #1 operatordecl call operatordecl {name="+",symbol="plus"}
	'(' => Reduce #1 operatordecl call operatordecl {name="+",symbol="plus"}
	"const" => Reduce #1 operatordecl call operatordecl {name="+",symbol="plus"}
	"any" => Reduce #1 operatordecl call operatordecl {name="+",symbol="plus"}
[224]
	IDENT => Reduce #1 operatordecl call operatordecl {name="-",symbol="minus"}
	'(' => Reduce #1 operatordecl call operatordecl {name="-",symbol="minus"}
	"const" => Reduce #1 operatordecl call operatordecl {name="-",symbol="minus"}
	"any" => Reduce #1 operatordecl call operatordecl {name="-",symbol="minus"}
[225]
	IDENT => Reduce #1 operatordecl call operatordecl {name="*",symbol="mul"}
	'(' => Reduce #1 operatordecl call operatordecl {name="*",symbol="mul"}
	"const" => Reduce #1 operatordecl call operatordecl {name="*",symbol="mul"}
	"any" => Reduce #1 operatordecl call operatordecl {name="*",symbol="mul"}
[226]
	IDENT => Reduce #1 operatordecl call operatordecl {name="/",symbol="div"}
	'(' => Reduce #1 operatordecl call operatordecl {name="/",symbol="div"}
	"const" => Reduce #1 operatordecl call operatordecl {name="/",symbol="div"}
	"any" => Reduce #1 operatordecl call operatordecl {name="/",symbol="div"}
[227]
	IDENT => Reduce #1 operatordecl call operatordecl {name="%",symbol="mod"}
	'(' => Reduce #1 operatordecl call operatordecl {name="%",symbol="mod"}
	"const" => Reduce #1 operatordecl call operatordecl {name="%",symbol="mod"}
	"any" => Reduce #1 operatordecl call operatordecl {name="%",symbol="mod"}
[228]
	IDENT => Reduce #1 operatordecl call operatordecl {name="&&",symbol="and"}
	'(' => Reduce #1 operatordecl call operatordecl {name="&&",symbol="and"}
	"const" => Reduce #1 operatordecl call operatordecl {name="&&",symbol="and"}
	"any" => Reduce #1 operatordecl call operatordecl {name="&&",symbol="and"}
[229]
	IDENT => Reduce #1 operatordecl call operatordecl {name="||",symbol="or"}
	'(' => Reduce #1 operatordecl call operatordecl {name="||",symbol="or"}
	"const" => Reduce #1 operatordecl call operatordecl {name="||",symbol="or"}
	"any" => Reduce #1 operatordecl call operatordecl {name="||",symbol="or"}
[230]
	IDENT => Reduce #1 operatordecl call operatordecl {name="|",symbol="bitor"}
	'(' => Reduce #1 operatordecl call operatordecl {name="|",symbol="bitor"}
	"const" => Reduce #1 operatordecl call operatordecl {name="|",symbol="bitor"}
	"any" => Reduce #1 operatordecl call operatordecl {name="|",symbol="bitor"}
[231]
	IDENT => Reduce #1 operatordecl call operatordecl {name="<<",symbol="lsh"}
	'(' => Reduce #1 operatordecl call operatordecl {name="<<",symbol="lsh"}
	"const" => Reduce #1 operatordecl call operatordecl {name="<<",symbol="lsh"}
	"any" => Reduce #1 operatordecl call operatordecl {name="<<",symbol="lsh"}
[232]
	IDENT => Reduce #1 operatordecl call operatordecl {name=">>",symbol="rsh"}
	'(' => Reduce #1 operatordecl call operatordecl {name=">>",symbol="rsh"}
	"const" => Reduce #1 operatordecl call operatordecl {name=">>",symbol="rsh"}
	"any" => Reduce #1 operatordecl call operatordecl {name=">>",symbol="rsh"}
[233]
	IDENT => Reduce #1 operatordecl call operatordecl {name="~",symbol="lneg"}
	'(' => Reduce #1 operatordecl call operatordecl {name="~",symbol="lneg"}
	"const" => Reduce #1 operatordecl call operatordecl {name="~",symbol="lneg"}
	"any" => Reduce #1 operatordecl call operatordecl {name="~",symbol="lneg"}
[234]
	IDENT => Reduce #1 operatordecl call operatordecl {name="!",symbol="not"}
	'(' => Reduce #1 operatordecl call operatordecl {name="!",symbol="not"}
	"const" => Reduce #1 operatordecl call operatordecl {name="!",symbol="not"}
	"any" => Reduce #1 operatordecl call operatordecl {name="!",symbol="not"}
[235]
	']' => Shift goto 309
[236]
	IDENT => Reduce #1 operatordecl call operatordecl {name="==",symbol="eq"}
	'(' => Reduce #1 operatordecl call operatordecl {name="==",symbol="eq"}
	"const" => Reduce #1 operatordecl call operatordecl {name="==",symbol="eq"}
	"any" => Reduce #1 operatordecl call operatordecl {name="==",symbol="eq"}
[237]
	IDENT => Reduce #1 operatordecl call operatordecl {name="!=",symbol="ne"}
	'(' => Reduce #1 operatordecl call operatordecl {name="!=",symbol="ne"}
	"const" => Reduce #1 operatordecl call operatordecl {name="!=",symbol="ne"}
	"any" => Reduce #1 operatordecl call operatordecl {name="!=",symbol="ne"}
[238]
	IDENT => Reduce #1 operatordecl call operatordecl {name=">=",symbol="ge"}
	'(' => Reduce #1 operatordecl call operatordecl {name=">=",symbol="ge"}
	"const" => Reduce #1 operatordecl call operatordecl {name=">=",symbol="ge"}
	"any" => Reduce #1 operatordecl call operatordecl {name=">=",symbol="ge"}
[239]
	IDENT => Reduce #1 operatordecl call operatordecl {name="<=",symbol="le"}
	'(' => Reduce #1 operatordecl call operatordecl {name="<=",symbol="le"}
	"const" => Reduce #1 operatordecl call operatordecl {name="<=",symbol="le"}
	"any" => Reduce #1 operatordecl call operatordecl {name="<=",symbol="le"}
[240]
	IDENT => Reduce #1 operatordecl call operatordecl {name=">",symbol="gt"}
	'(' => Reduce #1 operatordecl call operatordecl {name=">",symbol="gt"}
	"const" => Reduce #1 operatordecl call operatordecl {name=">",symbol="gt"}
	"any" => Reduce #1 operatordecl call operatordecl {name=">",symbol="gt"}
[241]
	IDENT => Reduce #1 operatordecl call operatordecl {name="<",symbol="lt"}
	'(' => Reduce #1 operatordecl call operatordecl {name="<",symbol="lt"}
	"const" => Reduce #1 operatordecl call operatordecl {name="<",symbol="lt"}
	"any" => Reduce #1 operatordecl call operatordecl {name="<",symbol="lt"}
[242]
	IDENT => Shift goto 17
	')' => Reduce #0 extern_paramlist call extern_paramdeflist
	"..." => Reduce #0 extern_paramlist call extern_paramdeflist
	"const" => Shift goto 18
	"any" => Shift goto 19
[243]
	')' => Reduce #1 extern_paramlist call extern_paramdeflist
	"..." => Reduce #1 extern_paramlist call extern_paramdeflist
[244]
	')' => Shift goto 311
	"..." => Shift goto 312
[245]
	IDENT => Shift goto 313
	')' => Reduce #1 extern_parameters call extern_paramdef
	"..." => Reduce #1 extern_parameters call extern_paramdef
	',' => Shift goto 314
[246]
	'(' => Reduce #3 iexpression call rep_operator "->"
	')' => Reduce #3 iexpression call rep_operator "->"
	';' => Reduce #3 iexpression call rep_operator "->"
	',' => Reduce #3 iexpression call rep_operator "->"
	'&' => Reduce #3 iexpression call rep_operator "->"
	'^' => Reduce #3 iexpression call rep_operator "->"
	'}' => Reduce #3 iexpression call rep_operator "->"
	"->" => Reduce #3 iexpression call rep_operator "->"
	'=' => Reduce #3 iexpression call rep_operator "->"
	'+' => Reduce #3 iexpression call rep_operator "->"
	'-' => Reduce #3 iexpression call rep_operator "->"
	'*' => Reduce #3 iexpression call rep_operator "->"
	'/' => Reduce #3 iexpression call rep_operator "->"
	'%' => Reduce #3 iexpression call rep_operator "->"
	"&&" => Reduce #3 iexpression call rep_operator "->"
	"||" => Reduce #3 iexpression call rep_operator "->"
	'|' => Reduce #3 iexpression call rep_operator "->"
	"<<" => Reduce #3 iexpression call rep_operator "->"
	">>" => Reduce #3 iexpression call rep_operator "->"
	'[' => Reduce #3 iexpression call rep_operator "->"
	']' => Reduce #3 iexpression call rep_operator "->"
	"==" => Reduce #3 iexpression call rep_operator "->"
	"!=" => Reduce #3 iexpression call rep_operator "->"
	">=" => Reduce #3 iexpression call rep_operator "->"
	"<=" => Reduce #3 iexpression call rep_operator "->"
	'>' => Reduce #3 iexpression call rep_operator "->"
	'<' => Reduce #3 iexpression call rep_operator "->"
	"+=" => Reduce #3 iexpression call rep_operator "->"
	"-=" => Reduce #3 iexpression call rep_operator "->"
	"*=" => Reduce #3 iexpression call rep_operator "->"
	"/=" => Reduce #3 iexpression call rep_operator "->"
	"^=" => Reduce #3 iexpression call rep_operator "->"
	"&=" => Reduce #3 iexpression call rep_operator "->"
	"%=" => Reduce #3 iexpression call rep_operator "->"
	"&&=" => Reduce #3 iexpression call rep_operator "->"
	"||=" => Reduce #3 iexpression call rep_operator "->"
	"|=" => Reduce #3 iexpression call rep_operator "->"
	"<<=" => Reduce #3 iexpression call rep_operator "->"
	">>=" => Reduce #3 iexpression call rep_operator "->"
	'.' => Reduce #3 iexpression call rep_operator "->"
[247]
	')' => Shift goto 315
[248]
	'(' => Reduce #3 expression call operator "()"
	')' => Reduce #3 expression call operator "()"
	';' => Reduce #3 expression call operator "()"
	',' => Reduce #3 expression call operator "()"
	'&' => Reduce #3 expression call operator "()"
	'^' => Reduce #3 expression call operator "()"
	'}' => Reduce #3 expression call operator "()"
	"->" => Reduce #3 expression call operator "()"
	'=' => Reduce #3 expression call operator "()"
	'+' => Reduce #3 expression call operator "()"
	'-' => Reduce #3 expression call operator "()"
	'*' => Reduce #3 expression call operator "()"
	'/' => Reduce #3 expression call operator "()"
	'%' => Reduce #3 expression call operator "()"
	"&&" => Reduce #3 expression call operator "()"
	"||" => Reduce #3 expression call operator "()"
	'|' => Reduce #3 expression call operator "()"
	"<<" => Reduce #3 expression call operator "()"
	">>" => Reduce #3 expression call operator "()"
	'[' => Reduce #3 expression call operator "()"
	']' => Reduce #3 expression call operator "()"
	"==" => Reduce #3 expression call operator "()"
	"!=" => Reduce #3 expression call operator "()"
	">=" => Reduce #3 expression call operator "()"
	"<=" => Reduce #3 expression call operator "()"
	'>' => Reduce #3 expression call operator "()"
	'<' => Reduce #3 expression call operator "()"
	"+=" => Reduce #3 expression call operator "()"
	"-=" => Reduce #3 expression call operator "()"
	"*=" => Reduce #3 expression call operator "()"
	"/=" => Reduce #3 expression call operator "()"
	"^=" => Reduce #3 expression call operator "()"
	"&=" => Reduce #3 expression call operator "()"
	"%=" => Reduce #3 expression call operator "()"
	"&&=" => Reduce #3 expression call operator "()"
	"||=" => Reduce #3 expression call operator "()"
	"|=" => Reduce #3 expression call operator "()"
	"<<=" => Reduce #3 expression call operator "()"
	">>=" => Reduce #3 expression call operator "()"
	'.' => Reduce #3 expression call operator "()"
[249]
	'(' => Shift goto 140
	')' => Reduce #3 expression call operator "&"
	';' => Reduce #3 expression call operator "&"
	',' => Reduce #3 expression call operator "&"
	'&' => Reduce #3 expression call operator "&"
	'^' => Reduce #3 expression call operator "&"
	'}' => Reduce #3 expression call operator "&"
	"->" => Reduce #3 expression call operator "&"
	'=' => Reduce #3 expression call operator "&"
	'+' => Shift goto 146
	'-' => Shift goto 147
	'*' => Shift goto 148
	'/' => Shift goto 149
	'%' => Shift goto 150
	"&&" => Reduce #3 expression call operator "&"
	"||" => Reduce #3 expression call operator "&"
	'|' => Reduce #3 expression call operator "&"
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'[' => Shift goto 156
	']' => Reduce #3 expression call operator "&"
	"==" => Shift goto 157
	"!=" => Shift goto 158
	">=" => Shift goto 159
	"<=" => Shift goto 160
	'>' => Shift goto 161
	'<' => Shift goto 162
	"+=" => Reduce #3 expression call operator "&"
	"-=" => Reduce #3 expression call operator "&"
	"*=" => Reduce #3 expression call operator "&"
	"/=" => Reduce #3 expression call operator "&"
	"^=" => Reduce #3 expression call operator "&"
	"&=" => Reduce #3 expression call operator "&"
	"%=" => Reduce #3 expression call operator "&"
	"&&=" => Reduce #3 expression call operator "&"
	"||=" => Reduce #3 expression call operator "&"
	"|=" => Reduce #3 expression call operator "&"
	"<<=" => Reduce #3 expression call operator "&"
	">>=" => Reduce #3 expression call operator "&"
	'.' => Shift goto 175
[250]
	'(' => Shift goto 140
	')' => Reduce #3 expression call operator "^"
	';' => Reduce #3 expression call operator "^"
	',' => Reduce #3 expression call operator "^"
	'&' => Reduce #3 expression call operator "^"
	'^' => Reduce #3 expression call operator "^"
	'}' => Reduce #3 expression call operator "^"
	"->" => Reduce #3 expression call operator "^"
	'=' => Reduce #3 expression call operator "^"
	'+' => Shift goto 146
	'-' => Shift goto 147
	'*' => Shift goto 148
	'/' => Shift goto 149
	'%' => Shift goto 150
	"&&" => Reduce #3 expression call operator "^"
	"||" => Reduce #3 expression call operator "^"
	'|' => Reduce #3 expression call operator "^"
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'[' => Shift goto 156
	']' => Reduce #3 expression call operator "^"
	"==" => Shift goto 157
	"!=" => Shift goto 158
	">=" => Shift goto 159
	"<=" => Shift goto 160
	'>' => Shift goto 161
	'<' => Shift goto 162
	"+=" => Reduce #3 expression call operator "^"
	"-=" => Reduce #3 expression call operator "^"
	"*=" => Reduce #3 expression call operator "^"
	"/=" => Reduce #3 expression call operator "^"
	"^=" => Reduce #3 expression call operator "^"
	"&=" => Reduce #3 expression call operator "^"
	"%=" => Reduce #3 expression call operator "^"
	"&&=" => Reduce #3 expression call operator "^"
	"||=" => Reduce #3 expression call operator "^"
	"|=" => Reduce #3 expression call operator "^"
	"<<=" => Reduce #3 expression call operator "^"
	">>=" => Reduce #3 expression call operator "^"
	'.' => Shift goto 175
[251]
	IDENT => Reduce #2 indirection call count
[252]
	'(' => Shift goto 140
	')' => Reduce #3 expression call operator "="
	';' => Reduce #3 expression call operator "="
	',' => Reduce #3 expression call operator "="
	'&' => Shift goto 142
	'^' => Shift goto 143
	'}' => Reduce #3 expression call operator "="
	"->" => Reduce #3 expression call operator "="
	'=' => Reduce #3 expression call operator "="
	'+' => Shift goto 146
	'-' => Shift goto 147
	'*' => Shift goto 148
	'/' => Shift goto 149
	'%' => Shift goto 150
	"&&" => Shift goto 151
	"||" => Shift goto 152
	'|' => Shift goto 153
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'[' => Shift goto 156
	']' => Reduce #3 expression call operator "="
	"==" => Shift goto 157
	"!=" => Shift goto 158
	">=" => Shift goto 159
	"<=" => Shift goto 160
	'>' => Shift goto 161
	'<' => Shift goto 162
	"+=" => Reduce #3 expression call operator "="
	"-=" => Reduce #3 expression call operator "="
	"*=" => Reduce #3 expression call operator "="
	"/=" => Reduce #3 expression call operator "="
	"^=" => Reduce #3 expression call operator "="
	"&=" => Reduce #3 expression call operator "="
	"%=" => Reduce #3 expression call operator "="
	"&&=" => Reduce #3 expression call operator "="
	"||=" => Reduce #3 expression call operator "="
	"|=" => Reduce #3 expression call operator "="
	"<<=" => Reduce #3 expression call operator "="
	">>=" => Reduce #3 expression call operator "="
	'.' => Shift goto 175
[253]
	'(' => Shift goto 140
	')' => Reduce #3 expression call operator "+"
	';' => Reduce #3 expression call operator "+"
	',' => Reduce #3 expression call operator "+"
	'&' => Reduce #3 expression call operator "+"
	'^' => Reduce #3 expression call operator "+"
	'}' => Reduce #3 expression call operator "+"
	"->" => Reduce #3 expression call operator "+"
	'=' => Reduce #3 expression call operator "+"
	'+' => Reduce #3 expression call operator "+"
	'-' => Reduce #3 expression call operator "+"
	'*' => Shift goto 148
	'/' => Shift goto 149
	'%' => Shift goto 150
	"&&" => Reduce #3 expression call operator "+"
	"||" => Reduce #3 expression call operator "+"
	'|' => Reduce #3 expression call operator "+"
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'[' => Shift goto 156
	']' => Reduce #3 expression call operator "+"
	"==" => Reduce #3 expression call operator "+"
	"!=" => Reduce #3 expression call operator "+"
	">=" => Reduce #3 expression call operator "+"
	"<=" => Reduce #3 expression call operator "+"
	'>' => Reduce #3 expression call operator "+"
	'<' => Reduce #3 expression call operator "+"
	"+=" => Reduce #3 expression call operator "+"
	"-=" => Reduce #3 expression call operator "+"
	"*=" => Reduce #3 expression call operator "+"
	"/=" => Reduce #3 expression call operator "+"
	"^=" => Reduce #3 expression call operator "+"
	"&=" => Reduce #3 expression call operator "+"
	"%=" => Reduce #3 expression call operator "+"
	"&&=" => Reduce #3 expression call operator "+"
	"||=" => Reduce #3 expression call operator "+"
	"|=" => Reduce #3 expression call operator "+"
	"<<=" => Reduce #3 expression call operator "+"
	">>=" => Reduce #3 expression call operator "+"
	'.' => Shift goto 175
[254]
	'(' => Shift goto 140
	')' => Reduce #3 expression call operator "-"
	';' => Reduce #3 expression call operator "-"
	',' => Reduce #3 expression call operator "-"
	'&' => Reduce #3 expression call operator "-"
	'^' => Reduce #3 expression call operator "-"
	'}' => Reduce #3 expression call operator "-"
	"->" => Reduce #3 expression call operator "-"
	'=' => Reduce #3 expression call operator "-"
	'+' => Reduce #3 expression call operator "-"
	'-' => Reduce #3 expression call operator "-"
	'*' => Shift goto 148
	'/' => Shift goto 149
	'%' => Shift goto 150
	"&&" => Reduce #3 expression call operator "-"
	"||" => Reduce #3 expression call operator "-"
	'|' => Reduce #3 expression call operator "-"
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'[' => Shift goto 156
	']' => Reduce #3 expression call operator "-"
	"==" => Reduce #3 expression call operator "-"
	"!=" => Reduce #3 expression call operator "-"
	">=" => Reduce #3 expression call operator "-"
	"<=" => Reduce #3 expression call operator "-"
	'>' => Reduce #3 expression call operator "-"
	'<' => Reduce #3 expression call operator "-"
	"+=" => Reduce #3 expression call operator "-"
	"-=" => Reduce #3 expression call operator "-"
	"*=" => Reduce #3 expression call operator "-"
	"/=" => Reduce #3 expression call operator "-"
	"^=" => Reduce #3 expression call operator "-"
	"&=" => Reduce #3 expression call operator "-"
	"%=" => Reduce #3 expression call operator "-"
	"&&=" => Reduce #3 expression call operator "-"
	"||=" => Reduce #3 expression call operator "-"
	"|=" => Reduce #3 expression call operator "-"
	"<<=" => Reduce #3 expression call operator "-"
	">>=" => Reduce #3 expression call operator "-"
	'.' => Shift goto 175
[255]
	'(' => Shift goto 140
	')' => Reduce #3 expression call operator "*"
	';' => Reduce #3 expression call operator "*"
	',' => Reduce #3 expression call operator "*"
	'&' => Reduce #3 expression call operator "*"
	'^' => Reduce #3 expression call operator "*"
	'}' => Reduce #3 expression call operator "*"
	"->" => Reduce #3 expression call operator "*"
	'=' => Reduce #3 expression call operator "*"
	'+' => Reduce #3 expression call operator "*"
	'-' => Reduce #3 expression call operator "*"
	'*' => Reduce #3 expression call operator "*"
	'/' => Reduce #3 expression call operator "*"
	'%' => Reduce #3 expression call operator "*"
	"&&" => Reduce #3 expression call operator "*"
	"||" => Reduce #3 expression call operator "*"
	'|' => Reduce #3 expression call operator "*"
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'[' => Shift goto 156
	']' => Reduce #3 expression call operator "*"
	"==" => Reduce #3 expression call operator "*"
	"!=" => Reduce #3 expression call operator "*"
	">=" => Reduce #3 expression call operator "*"
	"<=" => Reduce #3 expression call operator "*"
	'>' => Reduce #3 expression call operator "*"
	'<' => Reduce #3 expression call operator "*"
	"+=" => Reduce #3 expression call operator "*"
	"-=" => Reduce #3 expression call operator "*"
	"*=" => Reduce #3 expression call operator "*"
	"/=" => Reduce #3 expression call operator "*"
	"^=" => Reduce #3 expression call operator "*"
	"&=" => Reduce #3 expression call operator "*"
	"%=" => Reduce #3 expression call operator "*"
	"&&=" => Reduce #3 expression call operator "*"
	"||=" => Reduce #3 expression call operator "*"
	"|=" => Reduce #3 expression call operator "*"
	"<<=" => Reduce #3 expression call operator "*"
	">>=" => Reduce #3 expression call operator "*"
	'.' => Shift goto 175
[256]
	'(' => Shift goto 140
	')' => Reduce #3 expression call operator "/"
	';' => Reduce #3 expression call operator "/"
	',' => Reduce #3 expression call operator "/"
	'&' => Reduce #3 expression call operator "/"
	'^' => Reduce #3 expression call operator "/"
	'}' => Reduce #3 expression call operator "/"
	"->" => Reduce #3 expression call operator "/"
	'=' => Reduce #3 expression call operator "/"
	'+' => Reduce #3 expression call operator "/"
	'-' => Reduce #3 expression call operator "/"
	'*' => Reduce #3 expression call operator "/"
	'/' => Reduce #3 expression call operator "/"
	'%' => Reduce #3 expression call operator "/"
	"&&" => Reduce #3 expression call operator "/"
	"||" => Reduce #3 expression call operator "/"
	'|' => Reduce #3 expression call operator "/"
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'[' => Shift goto 156
	']' => Reduce #3 expression call operator "/"
	"==" => Reduce #3 expression call operator "/"
	"!=" => Reduce #3 expression call operator "/"
	">=" => Reduce #3 expression call operator "/"
	"<=" => Reduce #3 expression call operator "/"
	'>' => Reduce #3 expression call operator "/"
	'<' => Reduce #3 expression call operator "/"
	"+=" => Reduce #3 expression call operator "/"
	"-=" => Reduce #3 expression call operator "/"
	"*=" => Reduce #3 expression call operator "/"
	"/=" => Reduce #3 expression call operator "/"
	"^=" => Reduce #3 expression call operator "/"
	"&=" => Reduce #3 expression call operator "/"
	"%=" => Reduce #3 expression call operator "/"
	"&&=" => Reduce #3 expression call operator "/"
	"||=" => Reduce #3 expression call operator "/"
	"|=" => Reduce #3 expression call operator "/"
	"<<=" => Reduce #3 expression call operator "/"
	">>=" => Reduce #3 expression call operator "/"
	'.' => Shift goto 175
[257]
	'(' => Shift goto 140
	')' => Reduce #3 expression call operator "%"
	';' => Reduce #3 expression call operator "%"
	',' => Reduce #3 expression call operator "%"
	'&' => Reduce #3 expression call operator "%"
	'^' => Reduce #3 expression call operator "%"
	'}' => Reduce #3 expression call operator "%"
	"->" => Reduce #3 expression call operator "%"
	'=' => Reduce #3 expression call operator "%"
	'+' => Reduce #3 expression call operator "%"
	'-' => Reduce #3 expression call operator "%"
	'*' => Reduce #3 expression call operator "%"
	'/' => Reduce #3 expression call operator "%"
	'%' => Reduce #3 expression call operator "%"
	"&&" => Reduce #3 expression call operator "%"
	"||" => Reduce #3 expression call operator "%"
	'|' => Reduce #3 expression call operator "%"
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'[' => Shift goto 156
	']' => Reduce #3 expression call operator "%"
	"==" => Reduce #3 expression call operator "%"
	"!=" => Reduce #3 expression call operator "%"
	">=" => Reduce #3 expression call operator "%"
	"<=" => Reduce #3 expression call operator "%"
	'>' => Reduce #3 expression call operator "%"
	'<' => Reduce #3 expression call operator "%"
	"+=" => Reduce #3 expression call operator "%"
	"-=" => Reduce #3 expression call operator "%"
	"*=" => Reduce #3 expression call operator "%"
	"/=" => Reduce #3 expression call operator "%"
	"^=" => Reduce #3 expression call operator "%"
	"&=" => Reduce #3 expression call operator "%"
	"%=" => Reduce #3 expression call operator "%"
	"&&=" => Reduce #3 expression call operator "%"
	"||=" => Reduce #3 expression call operator "%"
	"|=" => Reduce #3 expression call operator "%"
	"<<=" => Reduce #3 expression call operator "%"
	">>=" => Reduce #3 expression call operator "%"
	'.' => Shift goto 175
[258]
	'(' => Shift goto 140
	')' => Reduce #3 expression call operator "&&"
	';' => Reduce #3 expression call operator "&&"
	',' => Reduce #3 expression call operator "&&"
	'&' => Shift goto 142
	'^' => Shift goto 143
	'}' => Reduce #3 expression call operator "&&"
	"->" => Reduce #3 expression call operator "&&"
	'=' => Reduce #3 expression call operator "&&"
	'+' => Shift goto 146
	'-' => Shift goto 147
	'*' => Shift goto 148
	'/' => Shift goto 149
	'%' => Shift goto 150
	"&&" => Reduce #3 expression call operator "&&"
	"||" => Reduce #3 expression call operator "&&"
	'|' => Shift goto 153
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'[' => Shift goto 156
	']' => Reduce #3 expression call operator "&&"
	"==" => Shift goto 157
	"!=" => Shift goto 158
	">=" => Shift goto 159
	"<=" => Shift goto 160
	'>' => Shift goto 161
	'<' => Shift goto 162
	"+=" => Reduce #3 expression call operator "&&"
	"-=" => Reduce #3 expression call operator "&&"
	"*=" => Reduce #3 expression call operator "&&"
	"/=" => Reduce #3 expression call operator "&&"
	"^=" => Reduce #3 expression call operator "&&"
	"&=" => Reduce #3 expression call operator "&&"
	"%=" => Reduce #3 expression call operator "&&"
	"&&=" => Reduce #3 expression call operator "&&"
	"||=" => Reduce #3 expression call operator "&&"
	"|=" => Reduce #3 expression call operator "&&"
	"<<=" => Reduce #3 expression call operator "&&"
	">>=" => Reduce #3 expression call operator "&&"
	'.' => Shift goto 175
[259]
	'(' => Shift goto 140
	')' => Reduce #3 expression call operator "||"
	';' => Reduce #3 expression call operator "||"
	',' => Reduce #3 expression call operator "||"
	'&' => Shift goto 142
	'^' => Shift goto 143
	'}' => Reduce #3 expression call operator "||"
	"->" => Reduce #3 expression call operator "||"
	'=' => Reduce #3 expression call operator "||"
	'+' => Shift goto 146
	'-' => Shift goto 147
	'*' => Shift goto 148
	'/' => Shift goto 149
	'%' => Shift goto 150
	"&&" => Shift goto 151
	"||" => Reduce #3 expression call operator "||"
	'|' => Shift goto 153
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'[' => Shift goto 156
	']' => Reduce #3 expression call operator "||"
	"==" => Shift goto 157
	"!=" => Shift goto 158
	">=" => Shift goto 159
	"<=" => Shift goto 160
	'>' => Shift goto 161
	'<' => Shift goto 162
	"+=" => Reduce #3 expression call operator "||"
	"-=" => Reduce #3 expression call operator "||"
	"*=" => Reduce #3 expression call operator "||"
	"/=" => Reduce #3 expression call operator "||"
	"^=" => Reduce #3 expression call operator "||"
	"&=" => Reduce #3 expression call operator "||"
	"%=" => Reduce #3 expression call operator "||"
	"&&=" => Reduce #3 expression call operator "||"
	"||=" => Reduce #3 expression call operator "||"
	"|=" => Reduce #3 expression call operator "||"
	"<<=" => Reduce #3 expression call operator "||"
	">>=" => Reduce #3 expression call operator "||"
	'.' => Shift goto 175
[260]
	'(' => Shift goto 140
	')' => Reduce #3 expression call operator "|"
	';' => Reduce #3 expression call operator "|"
	',' => Reduce #3 expression call operator "|"
	'&' => Shift goto 142
	'^' => Shift goto 143
	'}' => Reduce #3 expression call operator "|"
	"->" => Reduce #3 expression call operator "|"
	'=' => Reduce #3 expression call operator "|"
	'+' => Shift goto 146
	'-' => Shift goto 147
	'*' => Shift goto 148
	'/' => Shift goto 149
	'%' => Shift goto 150
	"&&" => Reduce #3 expression call operator "|"
	"||" => Reduce #3 expression call operator "|"
	'|' => Reduce #3 expression call operator "|"
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'[' => Shift goto 156
	']' => Reduce #3 expression call operator "|"
	"==" => Shift goto 157
	"!=" => Shift goto 158
	">=" => Shift goto 159
	"<=" => Shift goto 160
	'>' => Shift goto 161
	'<' => Shift goto 162
	"+=" => Reduce #3 expression call operator "|"
	"-=" => Reduce #3 expression call operator "|"
	"*=" => Reduce #3 expression call operator "|"
	"/=" => Reduce #3 expression call operator "|"
	"^=" => Reduce #3 expression call operator "|"
	"&=" => Reduce #3 expression call operator "|"
	"%=" => Reduce #3 expression call operator "|"
	"&&=" => Reduce #3 expression call operator "|"
	"||=" => Reduce #3 expression call operator "|"
	"|=" => Reduce #3 expression call operator "|"
	"<<=" => Reduce #3 expression call operator "|"
	">>=" => Reduce #3 expression call operator "|"
	'.' => Shift goto 175
[261]
	'(' => Shift goto 140
	')' => Reduce #3 expression call operator "<<"
	';' => Reduce #3 expression call operator "<<"
	',' => Reduce #3 expression call operator "<<"
	'&' => Reduce #3 expression call operator "<<"
	'^' => Reduce #3 expression call operator "<<"
	'}' => Reduce #3 expression call operator "<<"
	"->" => Reduce #3 expression call operator "<<"
	'=' => Reduce #3 expression call operator "<<"
	'+' => Reduce #3 expression call operator "<<"
	'-' => Reduce #3 expression call operator "<<"
	'*' => Reduce #3 expression call operator "<<"
	'/' => Reduce #3 expression call operator "<<"
	'%' => Reduce #3 expression call operator "<<"
	"&&" => Reduce #3 expression call operator "<<"
	"||" => Reduce #3 expression call operator "<<"
	'|' => Reduce #3 expression call operator "<<"
	"<<" => Reduce #3 expression call operator "<<"
	">>" => Reduce #3 expression call operator "<<"
	'[' => Shift goto 156
	']' => Reduce #3 expression call operator "<<"
	"==" => Reduce #3 expression call operator "<<"
	"!=" => Reduce #3 expression call operator "<<"
	">=" => Reduce #3 expression call operator "<<"
	"<=" => Reduce #3 expression call operator "<<"
	'>' => Reduce #3 expression call operator "<<"
	'<' => Reduce #3 expression call operator "<<"
	"+=" => Reduce #3 expression call operator "<<"
	"-=" => Reduce #3 expression call operator "<<"
	"*=" => Reduce #3 expression call operator "<<"
	"/=" => Reduce #3 expression call operator "<<"
	"^=" => Reduce #3 expression call operator "<<"
	"&=" => Reduce #3 expression call operator "<<"
	"%=" => Reduce #3 expression call operator "<<"
	"&&=" => Reduce #3 expression call operator "<<"
	"||=" => Reduce #3 expression call operator "<<"
	"|=" => Reduce #3 expression call operator "<<"
	"<<=" => Reduce #3 expression call operator "<<"
	">>=" => Reduce #3 expression call operator "<<"
	'.' => Shift goto 175
[262]
	'(' => Shift goto 140
	')' => Reduce #3 expression call operator ">>"
	';' => Reduce #3 expression call operator ">>"
	',' => Reduce #3 expression call operator ">>"
	'&' => Reduce #3 expression call operator ">>"
	'^' => Reduce #3 expression call operator ">>"
	'}' => Reduce #3 expression call operator ">>"
	"->" => Reduce #3 expression call operator ">>"
	'=' => Reduce #3 expression call operator ">>"
	'+' => Reduce #3 expression call operator ">>"
	'-' => Reduce #3 expression call operator ">>"
	'*' => Reduce #3 expression call operator ">>"
	'/' => Reduce #3 expression call operator ">>"
	'%' => Reduce #3 expression call operator ">>"
	"&&" => Reduce #3 expression call operator ">>"
	"||" => Reduce #3 expression call operator ">>"
	'|' => Reduce #3 expression call operator ">>"
	"<<" => Reduce #3 expression call operator ">>"
	">>" => Reduce #3 expression call operator ">>"
	'[' => Shift goto 156
	']' => Reduce #3 expression call operator ">>"
	"==" => Reduce #3 expression call operator ">>"
	"!=" => Reduce #3 expression call operator ">>"
	">=" => Reduce #3 expression call operator ">>"
	"<=" => Reduce #3 expression call operator ">>"
	'>' => Reduce #3 expression call operator ">>"
	'<' => Reduce #3 expression call operator ">>"
	"+=" => Reduce #3 expression call operator ">>"
	"-=" => Reduce #3 expression call operator ">>"
	"*=" => Reduce #3 expression call operator ">>"
	"/=" => Reduce #3 expression call operator ">>"
	"^=" => Reduce #3 expression call operator ">>"
	"&=" => Reduce #3 expression call operator ">>"
	"%=" => Reduce #3 expression call operator ">>"
	"&&=" => Reduce #3 expression call operator ">>"
	"||=" => Reduce #3 expression call operator ">>"
	"|=" => Reduce #3 expression call operator ">>"
	"<<=" => Reduce #3 expression call operator ">>"
	">>=" => Reduce #3 expression call operator ">>"
	'.' => Shift goto 175
[263]
	']' => Shift goto 316
[264]
	'(' => Shift goto 140
	')' => Reduce #3 expression call operator "=="
	';' => Reduce #3 expression call operator "=="
	',' => Reduce #3 expression call operator "=="
	'&' => Reduce #3 expression call operator "=="
	'^' => Reduce #3 expression call operator "=="
	'}' => Reduce #3 expression call operator "=="
	"->" => Reduce #3 expression call operator "=="
	'=' => Reduce #3 expression call operator "=="
	'+' => Shift goto 146
	'-' => Shift goto 147
	'*' => Shift goto 148
	'/' => Shift goto 149
	'%' => Shift goto 150
	"&&" => Reduce #3 expression call operator "=="
	"||" => Reduce #3 expression call operator "=="
	'|' => Reduce #3 expression call operator "=="
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'[' => Shift goto 156
	']' => Reduce #3 expression call operator "=="
	"==" => Reduce #3 expression call operator "=="
	"!=" => Reduce #3 expression call operator "=="
	">=" => Reduce #3 expression call operator "=="
	"<=" => Reduce #3 expression call operator "=="
	'>' => Reduce #3 expression call operator "=="
	'<' => Reduce #3 expression call operator "=="
	"+=" => Reduce #3 expression call operator "=="
	"-=" => Reduce #3 expression call operator "=="
	"*=" => Reduce #3 expression call operator "=="
	"/=" => Reduce #3 expression call operator "=="
	"^=" => Reduce #3 expression call operator "=="
	"&=" => Reduce #3 expression call operator "=="
	"%=" => Reduce #3 expression call operator "=="
	"&&=" => Reduce #3 expression call operator "=="
	"||=" => Reduce #3 expression call operator "=="
	"|=" => Reduce #3 expression call operator "=="
	"<<=" => Reduce #3 expression call operator "=="
	">>=" => Reduce #3 expression call operator "=="
	'.' => Shift goto 175
[265]
	'(' => Shift goto 140
	')' => Reduce #3 expression call operator "!="
	';' => Reduce #3 expression call operator "!="
	',' => Reduce #3 expression call operator "!="
	'&' => Reduce #3 expression call operator "!="
	'^' => Reduce #3 expression call operator "!="
	'}' => Reduce #3 expression call operator "!="
	"->" => Reduce #3 expression call operator "!="
	'=' => Reduce #3 expression call operator "!="
	'+' => Shift goto 146
	'-' => Shift goto 147
	'*' => Shift goto 148
	'/' => Shift goto 149
	'%' => Shift goto 150
	"&&" => Reduce #3 expression call operator "!="
	"||" => Reduce #3 expression call operator "!="
	'|' => Reduce #3 expression call operator "!="
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'[' => Shift goto 156
	']' => Reduce #3 expression call operator "!="
	"==" => Reduce #3 expression call operator "!="
	"!=" => Reduce #3 expression call operator "!="
	">=" => Reduce #3 expression call operator "!="
	"<=" => Reduce #3 expression call operator "!="
	'>' => Reduce #3 expression call operator "!="
	'<' => Reduce #3 expression call operator "!="
	"+=" => Reduce #3 expression call operator "!="
	"-=" => Reduce #3 expression call operator "!="
	"*=" => Reduce #3 expression call operator "!="
	"/=" => Reduce #3 expression call operator "!="
	"^=" => Reduce #3 expression call operator "!="
	"&=" => Reduce #3 expression call operator "!="
	"%=" => Reduce #3 expression call operator "!="
	"&&=" => Reduce #3 expression call operator "!="
	"||=" => Reduce #3 expression call operator "!="
	"|=" => Reduce #3 expression call operator "!="
	"<<=" => Reduce #3 expression call operator "!="
	">>=" => Reduce #3 expression call operator "!="
	'.' => Shift goto 175
[266]
	'(' => Shift goto 140
	')' => Reduce #3 expression call operator ">="
	';' => Reduce #3 expression call operator ">="
	',' => Reduce #3 expression call operator ">="
	'&' => Reduce #3 expression call operator ">="
	'^' => Reduce #3 expression call operator ">="
	'}' => Reduce #3 expression call operator ">="
	"->" => Reduce #3 expression call operator ">="
	'=' => Reduce #3 expression call operator ">="
	'+' => Shift goto 146
	'-' => Shift goto 147
	'*' => Shift goto 148
	'/' => Shift goto 149
	'%' => Shift goto 150
	"&&" => Reduce #3 expression call operator ">="
	"||" => Reduce #3 expression call operator ">="
	'|' => Reduce #3 expression call operator ">="
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'[' => Shift goto 156
	']' => Reduce #3 expression call operator ">="
	"==" => Reduce #3 expression call operator ">="
	"!=" => Reduce #3 expression call operator ">="
	">=" => Reduce #3 expression call operator ">="
	"<=" => Reduce #3 expression call operator ">="
	'>' => Reduce #3 expression call operator ">="
	'<' => Reduce #3 expression call operator ">="
	"+=" => Reduce #3 expression call operator ">="
	"-=" => Reduce #3 expression call operator ">="
	"*=" => Reduce #3 expression call operator ">="
	"/=" => Reduce #3 expression call operator ">="
	"^=" => Reduce #3 expression call operator ">="
	"&=" => Reduce #3 expression call operator ">="
	"%=" => Reduce #3 expression call operator ">="
	"&&=" => Reduce #3 expression call operator ">="
	"||=" => Reduce #3 expression call operator ">="
	"|=" => Reduce #3 expression call operator ">="
	"<<=" => Reduce #3 expression call operator ">="
	">>=" => Reduce #3 expression call operator ">="
	'.' => Shift goto 175
[267]
	'(' => Shift goto 140
	')' => Reduce #3 expression call operator "<="
	';' => Reduce #3 expression call operator "<="
	',' => Reduce #3 expression call operator "<="
	'&' => Reduce #3 expression call operator "<="
	'^' => Reduce #3 expression call operator "<="
	'}' => Reduce #3 expression call operator "<="
	"->" => Reduce #3 expression call operator "<="
	'=' => Reduce #3 expression call operator "<="
	'+' => Shift goto 146
	'-' => Shift goto 147
	'*' => Shift goto 148
	'/' => Shift goto 149
	'%' => Shift goto 150
	"&&" => Reduce #3 expression call operator "<="
	"||" => Reduce #3 expression call operator "<="
	'|' => Reduce #3 expression call operator "<="
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'[' => Shift goto 156
	']' => Reduce #3 expression call operator "<="
	"==" => Reduce #3 expression call operator "<="
	"!=" => Reduce #3 expression call operator "<="
	">=" => Reduce #3 expression call operator "<="
	"<=" => Reduce #3 expression call operator "<="
	'>' => Reduce #3 expression call operator "<="
	'<' => Reduce #3 expression call operator "<="
	"+=" => Reduce #3 expression call operator "<="
	"-=" => Reduce #3 expression call operator "<="
	"*=" => Reduce #3 expression call operator "<="
	"/=" => Reduce #3 expression call operator "<="
	"^=" => Reduce #3 expression call operator "<="
	"&=" => Reduce #3 expression call operator "<="
	"%=" => Reduce #3 expression call operator "<="
	"&&=" => Reduce #3 expression call operator "<="
	"||=" => Reduce #3 expression call operator "<="
	"|=" => Reduce #3 expression call operator "<="
	"<<=" => Reduce #3 expression call operator "<="
	">>=" => Reduce #3 expression call operator "<="
	'.' => Shift goto 175
[268]
	'(' => Shift goto 140
	')' => Reduce #3 expression call operator ">"
	';' => Reduce #3 expression call operator ">"
	',' => Reduce #3 expression call operator ">"
	'&' => Reduce #3 expression call operator ">"
	'^' => Reduce #3 expression call operator ">"
	'}' => Reduce #3 expression call operator ">"
	"->" => Reduce #3 expression call operator ">"
	'=' => Reduce #3 expression call operator ">"
	'+' => Shift goto 146
	'-' => Shift goto 147
	'*' => Shift goto 148
	'/' => Shift goto 149
	'%' => Shift goto 150
	"&&" => Reduce #3 expression call operator ">"
	"||" => Reduce #3 expression call operator ">"
	'|' => Reduce #3 expression call operator ">"
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'[' => Shift goto 156
	']' => Reduce #3 expression call operator ">"
	"==" => Reduce #3 expression call operator ">"
	"!=" => Reduce #3 expression call operator ">"
	">=" => Reduce #3 expression call operator ">"
	"<=" => Reduce #3 expression call operator ">"
	'>' => Reduce #3 expression call operator ">"
	'<' => Reduce #3 expression call operator ">"
	"+=" => Reduce #3 expression call operator ">"
	"-=" => Reduce #3 expression call operator ">"
	"*=" => Reduce #3 expression call operator ">"
	"/=" => Reduce #3 expression call operator ">"
	"^=" => Reduce #3 expression call operator ">"
	"&=" => Reduce #3 expression call operator ">"
	"%=" => Reduce #3 expression call operator ">"
	"&&=" => Reduce #3 expression call operator ">"
	"||=" => Reduce #3 expression call operator ">"
	"|=" => Reduce #3 expression call operator ">"
	"<<=" => Reduce #3 expression call operator ">"
	">>=" => Reduce #3 expression call operator ">"
	'.' => Shift goto 175
[269]
	'(' => Shift goto 140
	')' => Reduce #3 expression call operator "<"
	';' => Reduce #3 expression call operator "<"
	',' => Reduce #3 expression call operator "<"
	'&' => Reduce #3 expression call operator "<"
	'^' => Reduce #3 expression call operator "<"
	'}' => Reduce #3 expression call operator "<"
	"->" => Reduce #3 expression call operator "<"
	'=' => Reduce #3 expression call operator "<"
	'+' => Shift goto 146
	'-' => Shift goto 147
	'*' => Shift goto 148
	'/' => Shift goto 149
	'%' => Shift goto 150
	"&&" => Reduce #3 expression call operator "<"
	"||" => Reduce #3 expression call operator "<"
	'|' => Reduce #3 expression call operator "<"
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'[' => Shift goto 156
	']' => Reduce #3 expression call operator "<"
	"==" => Reduce #3 expression call operator "<"
	"!=" => Reduce #3 expression call operator "<"
	">=" => Reduce #3 expression call operator "<"
	"<=" => Reduce #3 expression call operator "<"
	'>' => Reduce #3 expression call operator "<"
	'<' => Reduce #3 expression call operator "<"
	"+=" => Reduce #3 expression call operator "<"
	"-=" => Reduce #3 expression call operator "<"
	"*=" => Reduce #3 expression call operator "<"
	"/=" => Reduce #3 expression call operator "<"
	"^=" => Reduce #3 expression call operator "<"
	"&=" => Reduce #3 expression call operator "<"
	"%=" => Reduce #3 expression call operator "<"
	"&&=" => Reduce #3 expression call operator "<"
	"||=" => Reduce #3 expression call operator "<"
	"|=" => Reduce #3 expression call operator "<"
	"<<=" => Reduce #3 expression call operator "<"
	">>=" => Reduce #3 expression call operator "<"
	'.' => Shift goto 175
[270]
	'(' => Shift goto 140
	')' => Reduce #3 expression call assign_operator "+"
	';' => Reduce #3 expression call assign_operator "+"
	',' => Reduce #3 expression call assign_operator "+"
	'&' => Shift goto 142
	'^' => Shift goto 143
	'}' => Reduce #3 expression call assign_operator "+"
	"->" => Reduce #3 expression call assign_operator "+"
	'=' => Reduce #3 expression call assign_operator "+"
	'+' => Shift goto 146
	'-' => Shift goto 147
	'*' => Shift goto 148
	'/' => Shift goto 149
	'%' => Shift goto 150
	"&&" => Shift goto 151
	"||" => Shift goto 152
	'|' => Shift goto 153
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'[' => Shift goto 156
	']' => Reduce #3 expression call assign_operator "+"
	"==" => Shift goto 157
	"!=" => Shift goto 158
	">=" => Shift goto 159
	"<=" => Shift goto 160
	'>' => Shift goto 161
	'<' => Shift goto 162
	"+=" => Reduce #3 expression call assign_operator "+"
	"-=" => Reduce #3 expression call assign_operator "+"
	"*=" => Reduce #3 expression call assign_operator "+"
	"/=" => Reduce #3 expression call assign_operator "+"
	"^=" => Reduce #3 expression call assign_operator "+"
	"&=" => Reduce #3 expression call assign_operator "+"
	"%=" => Reduce #3 expression call assign_operator "+"
	"&&=" => Reduce #3 expression call assign_operator "+"
	"||=" => Reduce #3 expression call assign_operator "+"
	"|=" => Reduce #3 expression call assign_operator "+"
	"<<=" => Reduce #3 expression call assign_operator "+"
	">>=" => Reduce #3 expression call assign_operator "+"
	'.' => Shift goto 175
[271]
	'(' => Shift goto 140
	')' => Reduce #3 expression call assign_operator "-"
	';' => Reduce #3 expression call assign_operator "-"
	',' => Reduce #3 expression call assign_operator "-"
	'&' => Shift goto 142
	'^' => Shift goto 143
	'}' => Reduce #3 expression call assign_operator "-"
	"->" => Reduce #3 expression call assign_operator "-"
	'=' => Reduce #3 expression call assign_operator "-"
	'+' => Shift goto 146
	'-' => Shift goto 147
	'*' => Shift goto 148
	'/' => Shift goto 149
	'%' => Shift goto 150
	"&&" => Shift goto 151
	"||" => Shift goto 152
	'|' => Shift goto 153
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'[' => Shift goto 156
	']' => Reduce #3 expression call assign_operator "-"
	"==" => Shift goto 157
	"!=" => Shift goto 158
	">=" => Shift goto 159
	"<=" => Shift goto 160
	'>' => Shift goto 161
	'<' => Shift goto 162
	"+=" => Reduce #3 expression call assign_operator "-"
	"-=" => Reduce #3 expression call assign_operator "-"
	"*=" => Reduce #3 expression call assign_operator "-"
	"/=" => Reduce #3 expression call assign_operator "-"
	"^=" => Reduce #3 expression call assign_operator "-"
	"&=" => Reduce #3 expression call assign_operator "-"
	"%=" => Reduce #3 expression call assign_operator "-"
	"&&=" => Reduce #3 expression call assign_operator "-"
	"||=" => Reduce #3 expression call assign_operator "-"
	"|=" => Reduce #3 expression call assign_operator "-"
	"<<=" => Reduce #3 expression call assign_operator "-"
	">>=" => Reduce #3 expression call assign_operator "-"
	'.' => Shift goto 175
[272]
	'(' => Shift goto 140
	')' => Reduce #3 expression call assign_operator "*"
	';' => Reduce #3 expression call assign_operator "*"
	',' => Reduce #3 expression call assign_operator "*"
	'&' => Shift goto 142
	'^' => Shift goto 143
	'}' => Reduce #3 expression call assign_operator "*"
	"->" => Reduce #3 expression call assign_operator "*"
	'=' => Reduce #3 expression call assign_operator "*"
	'+' => Shift goto 146
	'-' => Shift goto 147
	'*' => Shift goto 148
	'/' => Shift goto 149
	'%' => Shift goto 150
	"&&" => Shift goto 151
	"||" => Shift goto 152
	'|' => Shift goto 153
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'[' => Shift goto 156
	']' => Reduce #3 expression call assign_operator "*"
	"==" => Shift goto 157
	"!=" => Shift goto 158
	">=" => Shift goto 159
	"<=" => Shift goto 160
	'>' => Shift goto 161
	'<' => Shift goto 162
	"+=" => Reduce #3 expression call assign_operator "*"
	"-=" => Reduce #3 expression call assign_operator "*"
	"*=" => Reduce #3 expression call assign_operator "*"
	"/=" => Reduce #3 expression call assign_operator "*"
	"^=" => Reduce #3 expression call assign_operator "*"
	"&=" => Reduce #3 expression call assign_operator "*"
	"%=" => Reduce #3 expression call assign_operator "*"
	"&&=" => Reduce #3 expression call assign_operator "*"
	"||=" => Reduce #3 expression call assign_operator "*"
	"|=" => Reduce #3 expression call assign_operator "*"
	"<<=" => Reduce #3 expression call assign_operator "*"
	">>=" => Reduce #3 expression call assign_operator "*"
	'.' => Shift goto 175
[273]
	'(' => Shift goto 140
	')' => Reduce #3 expression call assign_operator "/"
	';' => Reduce #3 expression call assign_operator "/"
	',' => Reduce #3 expression call assign_operator "/"
	'&' => Shift goto 142
	'^' => Shift goto 143
	'}' => Reduce #3 expression call assign_operator "/"
	"->" => Reduce #3 expression call assign_operator "/"
	'=' => Reduce #3 expression call assign_operator "/"
	'+' => Shift goto 146
	'-' => Shift goto 147
	'*' => Shift goto 148
	'/' => Shift goto 149
	'%' => Shift goto 150
	"&&" => Shift goto 151
	"||" => Shift goto 152
	'|' => Shift goto 153
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'[' => Shift goto 156
	']' => Reduce #3 expression call assign_operator "/"
	"==" => Shift goto 157
	"!=" => Shift goto 158
	">=" => Shift goto 159
	"<=" => Shift goto 160
	'>' => Shift goto 161
	'<' => Shift goto 162
	"+=" => Reduce #3 expression call assign_operator "/"
	"-=" => Reduce #3 expression call assign_operator "/"
	"*=" => Reduce #3 expression call assign_operator "/"
	"/=" => Reduce #3 expression call assign_operator "/"
	"^=" => Reduce #3 expression call assign_operator "/"
	"&=" => Reduce #3 expression call assign_operator "/"
	"%=" => Reduce #3 expression call assign_operator "/"
	"&&=" => Reduce #3 expression call assign_operator "/"
	"||=" => Reduce #3 expression call assign_operator "/"
	"|=" => Reduce #3 expression call assign_operator "/"
	"<<=" => Reduce #3 expression call assign_operator "/"
	">>=" => Reduce #3 expression call assign_operator "/"
	'.' => Shift goto 175
[274]
	'(' => Shift goto 140
	')' => Reduce #3 expression call assign_operator "^"
	';' => Reduce #3 expression call assign_operator "^"
	',' => Reduce #3 expression call assign_operator "^"
	'&' => Shift goto 142
	'^' => Shift goto 143
	'}' => Reduce #3 expression call assign_operator "^"
	"->" => Reduce #3 expression call assign_operator "^"
	'=' => Reduce #3 expression call assign_operator "^"
	'+' => Shift goto 146
	'-' => Shift goto 147
	'*' => Shift goto 148
	'/' => Shift goto 149
	'%' => Shift goto 150
	"&&" => Shift goto 151
	"||" => Shift goto 152
	'|' => Shift goto 153
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'[' => Shift goto 156
	']' => Reduce #3 expression call assign_operator "^"
	"==" => Shift goto 157
	"!=" => Shift goto 158
	">=" => Shift goto 159
	"<=" => Shift goto 160
	'>' => Shift goto 161
	'<' => Shift goto 162
	"+=" => Reduce #3 expression call assign_operator "^"
	"-=" => Reduce #3 expression call assign_operator "^"
	"*=" => Reduce #3 expression call assign_operator "^"
	"/=" => Reduce #3 expression call assign_operator "^"
	"^=" => Reduce #3 expression call assign_operator "^"
	"&=" => Reduce #3 expression call assign_operator "^"
	"%=" => Reduce #3 expression call assign_operator "^"
	"&&=" => Reduce #3 expression call assign_operator "^"
	"||=" => Reduce #3 expression call assign_operator "^"
	"|=" => Reduce #3 expression call assign_operator "^"
	"<<=" => Reduce #3 expression call assign_operator "^"
	">>=" => Reduce #3 expression call assign_operator "^"
	'.' => Shift goto 175
[275]
	'(' => Shift goto 140
	')' => Reduce #3 expression call assign_operator "&"
	';' => Reduce #3 expression call assign_operator "&"
	',' => Reduce #3 expression call assign_operator "&"
	'&' => Shift goto 142
	'^' => Shift goto 143
	'}' => Reduce #3 expression call assign_operator "&"
	"->" => Reduce #3 expression call assign_operator "&"
	'=' => Reduce #3 expression call assign_operator "&"
	'+' => Shift goto 146
	'-' => Shift goto 147
	'*' => Shift goto 148
	'/' => Shift goto 149
	'%' => Shift goto 150
	"&&" => Shift goto 151
	"||" => Shift goto 152
	'|' => Shift goto 153
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'[' => Shift goto 156
	']' => Reduce #3 expression call assign_operator "&"
	"==" => Shift goto 157
	"!=" => Shift goto 158
	">=" => Shift goto 159
	"<=" => Shift goto 160
	'>' => Shift goto 161
	'<' => Shift goto 162
	"+=" => Reduce #3 expression call assign_operator "&"
	"-=" => Reduce #3 expression call assign_operator "&"
	"*=" => Reduce #3 expression call assign_operator "&"
	"/=" => Reduce #3 expression call assign_operator "&"
	"^=" => Reduce #3 expression call assign_operator "&"
	"&=" => Reduce #3 expression call assign_operator "&"
	"%=" => Reduce #3 expression call assign_operator "&"
	"&&=" => Reduce #3 expression call assign_operator "&"
	"||=" => Reduce #3 expression call assign_operator "&"
	"|=" => Reduce #3 expression call assign_operator "&"
	"<<=" => Reduce #3 expression call assign_operator "&"
	">>=" => Reduce #3 expression call assign_operator "&"
	'.' => Shift goto 175
[276]
	'(' => Shift goto 140
	')' => Reduce #3 expression call assign_operator "%"
	';' => Reduce #3 expression call assign_operator "%"
	',' => Reduce #3 expression call assign_operator "%"
	'&' => Shift goto 142
	'^' => Shift goto 143
	'}' => Reduce #3 expression call assign_operator "%"
	"->" => Reduce #3 expression call assign_operator "%"
	'=' => Reduce #3 expression call assign_operator "%"
	'+' => Shift goto 146
	'-' => Shift goto 147
	'*' => Shift goto 148
	'/' => Shift goto 149
	'%' => Shift goto 150
	"&&" => Shift goto 151
	"||" => Shift goto 152
	'|' => Shift goto 153
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'[' => Shift goto 156
	']' => Reduce #3 expression call assign_operator "%"
	"==" => Shift goto 157
	"!=" => Shift goto 158
	">=" => Shift goto 159
	"<=" => Shift goto 160
	'>' => Shift goto 161
	'<' => Shift goto 162
	"+=" => Reduce #3 expression call assign_operator "%"
	"-=" => Reduce #3 expression call assign_operator "%"
	"*=" => Reduce #3 expression call assign_operator "%"
	"/=" => Reduce #3 expression call assign_operator "%"
	"^=" => Reduce #3 expression call assign_operator "%"
	"&=" => Reduce #3 expression call assign_operator "%"
	"%=" => Reduce #3 expression call assign_operator "%"
	"&&=" => Reduce #3 expression call assign_operator "%"
	"||=" => Reduce #3 expression call assign_operator "%"
	"|=" => Reduce #3 expression call assign_operator "%"
	"<<=" => Reduce #3 expression call assign_operator "%"
	">>=" => Reduce #3 expression call assign_operator "%"
	'.' => Shift goto 175
[277]
	'(' => Shift goto 140
	')' => Reduce #3 expression call assign_operator "&&"
	';' => Reduce #3 expression call assign_operator "&&"
	',' => Reduce #3 expression call assign_operator "&&"
	'&' => Shift goto 142
	'^' => Shift goto 143
	'}' => Reduce #3 expression call assign_operator "&&"
	"->" => Reduce #3 expression call assign_operator "&&"
	'=' => Reduce #3 expression call assign_operator "&&"
	'+' => Shift goto 146
	'-' => Shift goto 147
	'*' => Shift goto 148
	'/' => Shift goto 149
	'%' => Shift goto 150
	"&&" => Shift goto 151
	"||" => Shift goto 152
	'|' => Shift goto 153
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'[' => Shift goto 156
	']' => Reduce #3 expression call assign_operator "&&"
	"==" => Shift goto 157
	"!=" => Shift goto 158
	">=" => Shift goto 159
	"<=" => Shift goto 160
	'>' => Shift goto 161
	'<' => Shift goto 162
	"+=" => Reduce #3 expression call assign_operator "&&"
	"-=" => Reduce #3 expression call assign_operator "&&"
	"*=" => Reduce #3 expression call assign_operator "&&"
	"/=" => Reduce #3 expression call assign_operator "&&"
	"^=" => Reduce #3 expression call assign_operator "&&"
	"&=" => Reduce #3 expression call assign_operator "&&"
	"%=" => Reduce #3 expression call assign_operator "&&"
	"&&=" => Reduce #3 expression call assign_operator "&&"
	"||=" => Reduce #3 expression call assign_operator "&&"
	"|=" => Reduce #3 expression call assign_operator "&&"
	"<<=" => Reduce #3 expression call assign_operator "&&"
	">>=" => Reduce #3 expression call assign_operator "&&"
	'.' => Shift goto 175
[278]
	'(' => Shift goto 140
	')' => Reduce #3 expression call assign_operator "||"
	';' => Reduce #3 expression call assign_operator "||"
	',' => Reduce #3 expression call assign_operator "||"
	'&' => Shift goto 142
	'^' => Shift goto 143
	'}' => Reduce #3 expression call assign_operator "||"
	"->" => Reduce #3 expression call assign_operator "||"
	'=' => Reduce #3 expression call assign_operator "||"
	'+' => Shift goto 146
	'-' => Shift goto 147
	'*' => Shift goto 148
	'/' => Shift goto 149
	'%' => Shift goto 150
	"&&" => Shift goto 151
	"||" => Shift goto 152
	'|' => Shift goto 153
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'[' => Shift goto 156
	']' => Reduce #3 expression call assign_operator "||"
	"==" => Shift goto 157
	"!=" => Shift goto 158
	">=" => Shift goto 159
	"<=" => Shift goto 160
	'>' => Shift goto 161
	'<' => Shift goto 162
	"+=" => Reduce #3 expression call assign_operator "||"
	"-=" => Reduce #3 expression call assign_operator "||"
	"*=" => Reduce #3 expression call assign_operator "||"
	"/=" => Reduce #3 expression call assign_operator "||"
	"^=" => Reduce #3 expression call assign_operator "||"
	"&=" => Reduce #3 expression call assign_operator "||"
	"%=" => Reduce #3 expression call assign_operator "||"
	"&&=" => Reduce #3 expression call assign_operator "||"
	"||=" => Reduce #3 expression call assign_operator "||"
	"|=" => Reduce #3 expression call assign_operator "||"
	"<<=" => Reduce #3 expression call assign_operator "||"
	">>=" => Reduce #3 expression call assign_operator "||"
	'.' => Shift goto 175
[279]
	'(' => Shift goto 140
	')' => Reduce #3 expression call assign_operator "|"
	';' => Reduce #3 expression call assign_operator "|"
	',' => Reduce #3 expression call assign_operator "|"
	'&' => Shift goto 142
	'^' => Shift goto 143
	'}' => Reduce #3 expression call assign_operator "|"
	"->" => Reduce #3 expression call assign_operator "|"
	'=' => Reduce #3 expression call assign_operator "|"
	'+' => Shift goto 146
	'-' => Shift goto 147
	'*' => Shift goto 148
	'/' => Shift goto 149
	'%' => Shift goto 150
	"&&" => Shift goto 151
	"||" => Shift goto 152
	'|' => Shift goto 153
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'[' => Shift goto 156
	']' => Reduce #3 expression call assign_operator "|"
	"==" => Shift goto 157
	"!=" => Shift goto 158
	">=" => Shift goto 159
	"<=" => Shift goto 160
	'>' => Shift goto 161
	'<' => Shift goto 162
	"+=" => Reduce #3 expression call assign_operator "|"
	"-=" => Reduce #3 expression call assign_operator "|"
	"*=" => Reduce #3 expression call assign_operator "|"
	"/=" => Reduce #3 expression call assign_operator "|"
	"^=" => Reduce #3 expression call assign_operator "|"
	"&=" => Reduce #3 expression call assign_operator "|"
	"%=" => Reduce #3 expression call assign_operator "|"
	"&&=" => Reduce #3 expression call assign_operator "|"
	"||=" => Reduce #3 expression call assign_operator "|"
	"|=" => Reduce #3 expression call assign_operator "|"
	"<<=" => Reduce #3 expression call assign_operator "|"
	">>=" => Reduce #3 expression call assign_operator "|"
	'.' => Shift goto 175
[280]
	'(' => Shift goto 140
	')' => Reduce #3 expression call assign_operator "<<"
	';' => Reduce #3 expression call assign_operator "<<"
	',' => Reduce #3 expression call assign_operator "<<"
	'&' => Shift goto 142
	'^' => Shift goto 143
	'}' => Reduce #3 expression call assign_operator "<<"
	"->" => Reduce #3 expression call assign_operator "<<"
	'=' => Reduce #3 expression call assign_operator "<<"
	'+' => Shift goto 146
	'-' => Shift goto 147
	'*' => Shift goto 148
	'/' => Shift goto 149
	'%' => Shift goto 150
	"&&" => Shift goto 151
	"||" => Shift goto 152
	'|' => Shift goto 153
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'[' => Shift goto 156
	']' => Reduce #3 expression call assign_operator "<<"
	"==" => Shift goto 157
	"!=" => Shift goto 158
	">=" => Shift goto 159
	"<=" => Shift goto 160
	'>' => Shift goto 161
	'<' => Shift goto 162
	"+=" => Reduce #3 expression call assign_operator "<<"
	"-=" => Reduce #3 expression call assign_operator "<<"
	"*=" => Reduce #3 expression call assign_operator "<<"
	"/=" => Reduce #3 expression call assign_operator "<<"
	"^=" => Reduce #3 expression call assign_operator "<<"
	"&=" => Reduce #3 expression call assign_operator "<<"
	"%=" => Reduce #3 expression call assign_operator "<<"
	"&&=" => Reduce #3 expression call assign_operator "<<"
	"||=" => Reduce #3 expression call assign_operator "<<"
	"|=" => Reduce #3 expression call assign_operator "<<"
	"<<=" => Reduce #3 expression call assign_operator "<<"
	">>=" => Reduce #3 expression call assign_operator "<<"
	'.' => Shift goto 175
[281]
	'(' => Shift goto 140
	')' => Reduce #3 expression call assign_operator ">>"
	';' => Reduce #3 expression call assign_operator ">>"
	',' => Reduce #3 expression call assign_operator ">>"
	'&' => Shift goto 142
	'^' => Shift goto 143
	'}' => Reduce #3 expression call assign_operator ">>"
	"->" => Reduce #3 expression call assign_operator ">>"
	'=' => Reduce #3 expression call assign_operator ">>"
	'+' => Shift goto 146
	'-' => Shift goto 147
	'*' => Shift goto 148
	'/' => Shift goto 149
	'%' => Shift goto 150
	"&&" => Shift goto 151
	"||" => Shift goto 152
	'|' => Shift goto 153
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'[' => Shift goto 156
	']' => Reduce #3 expression call assign_operator ">>"
	"==" => Shift goto 157
	"!=" => Shift goto 158
	">=" => Shift goto 159
	"<=" => Shift goto 160
	'>' => Shift goto 161
	'<' => Shift goto 162
	"+=" => Reduce #3 expression call assign_operator ">>"
	"-=" => Reduce #3 expression call assign_operator ">>"
	"*=" => Reduce #3 expression call assign_operator ">>"
	"/=" => Reduce #3 expression call assign_operator ">>"
	"^=" => Reduce #3 expression call assign_operator ">>"
	"&=" => Reduce #3 expression call assign_operator ">>"
	"%=" => Reduce #3 expression call assign_operator ">>"
	"&&=" => Reduce #3 expression call assign_operator ">>"
	"||=" => Reduce #3 expression call assign_operator ">>"
	"|=" => Reduce #3 expression call assign_operator ">>"
	"<<=" => Reduce #3 expression call assign_operator ">>"
	">>=" => Reduce #3 expression call assign_operator ">>"
	'.' => Shift goto 175
[282]
	'(' => Reduce #3 expression call member
	')' => Reduce #3 expression call member
	';' => Reduce #3 expression call member
	',' => Reduce #3 expression call member
	'&' => Reduce #3 expression call member
	'^' => Reduce #3 expression call member
	'}' => Reduce #3 expression call member
	"->" => Reduce #3 expression call member
	'=' => Reduce #3 expression call member
	'+' => Reduce #3 expression call member
	'-' => Reduce #3 expression call member
	'*' => Reduce #3 expression call member
	'/' => Reduce #3 expression call member
	'%' => Reduce #3 expression call member
	"&&" => Reduce #3 expression call member
	"||" => Reduce #3 expression call member
	'|' => Reduce #3 expression call member
	"<<" => Reduce #3 expression call member
	">>" => Reduce #3 expression call member
	'[' => Reduce #3 expression call member
	']' => Reduce #3 expression call member
	"==" => Reduce #3 expression call member
	"!=" => Reduce #3 expression call member
	">=" => Reduce #3 expression call member
	"<=" => Reduce #3 expression call member
	'>' => Reduce #3 expression call member
	'<' => Reduce #3 expression call member
	"+=" => Reduce #3 expression call member
	"-=" => Reduce #3 expression call member
	"*=" => Reduce #3 expression call member
	"/=" => Reduce #3 expression call member
	"^=" => Reduce #3 expression call member
	"&=" => Reduce #3 expression call member
	"%=" => Reduce #3 expression call member
	"&&=" => Reduce #3 expression call member
	"||=" => Reduce #3 expression call member
	"|=" => Reduce #3 expression call member
	"<<=" => Reduce #3 expression call member
	">>=" => Reduce #3 expression call member
	'.' => Reduce #3 expression call member
[283]
	'(' => Reduce #3 expression
	')' => Reduce #3 expression
	';' => Reduce #3 expression
	',' => Reduce #3 expression
	'&' => Reduce #3 expression
	'^' => Reduce #3 expression
	'}' => Reduce #3 expression
	"->" => Reduce #3 expression
	'=' => Reduce #3 expression
	'+' => Reduce #3 expression
	'-' => Reduce #3 expression
	'*' => Reduce #3 expression
	'/' => Reduce #3 expression
	'%' => Reduce #3 expression
	"&&" => Reduce #3 expression
	"||" => Reduce #3 expression
	'|' => Reduce #3 expression
	"<<" => Reduce #3 expression
	">>" => Reduce #3 expression
	'[' => Reduce #3 expression
	']' => Reduce #3 expression
	"==" => Reduce #3 expression
	"!=" => Reduce #3 expression
	">=" => Reduce #3 expression
	"<=" => Reduce #3 expression
	'>' => Reduce #3 expression
	'<' => Reduce #3 expression
	"+=" => Reduce #3 expression
	"-=" => Reduce #3 expression
	"*=" => Reduce #3 expression
	"/=" => Reduce #3 expression
	"^=" => Reduce #3 expression
	"&=" => Reduce #3 expression
	"%=" => Reduce #3 expression
	"&&=" => Reduce #3 expression
	"||=" => Reduce #3 expression
	"|=" => Reduce #3 expression
	"<<=" => Reduce #3 expression
	">>=" => Reduce #3 expression
	'.' => Reduce #3 expression
[284]
	$ => Reduce #3 statement
	BOOLEAN => Reduce #3 statement
	IDENT => Reduce #3 statement
	DQSTRING => Reduce #3 statement
	SQSTRING => Reduce #3 statement
	CARDINAL => Reduce #3 statement
	INTEGER => Reduce #3 statement
	FLOAT => Reduce #3 statement
	"function" => Reduce #3 statement
	'(' => Reduce #3 statement
	"procedure" => Reduce #3 statement
	'&' => Reduce #3 statement
	"typedef" => Reduce #3 statement
	'{' => Reduce #3 statement
	'}' => Reduce #3 statement
	"private" => Reduce #3 statement
	"public" => Reduce #3 statement
	'+' => Reduce #3 statement
	'-' => Reduce #3 statement
	'*' => Reduce #3 statement
	'~' => Reduce #3 statement
	'!' => Reduce #3 statement
	"var" => Reduce #3 statement
	"return" => Reduce #3 statement
	"delete" => Reduce #3 statement
	"if" => Reduce #3 statement
	"while" => Reduce #3 statement
	"new" => Reduce #3 statement
	"cast" => Reduce #3 statement
	"null" => Reduce #3 statement
[285]
	BOOLEAN => Shift goto 78
	IDENT => Shift goto 79
	DQSTRING => Shift goto 80
	SQSTRING => Shift goto 81
	CARDINAL => Shift goto 82
	INTEGER => Shift goto 83
	FLOAT => Shift goto 84
	'(' => Shift goto 85
	'&' => Shift goto 86
	'{' => Shift goto 103
	'+' => Shift goto 88
	'-' => Shift goto 89
	'*' => Shift goto 90
	'~' => Shift goto 91
	'!' => Shift goto 92
	"new" => Shift goto 98
	"cast" => Shift goto 99
	"null" => Shift goto 100
[286]
	'(' => Reduce #3 expression call structure
	')' => Reduce #3 expression call structure
	';' => Reduce #3 expression call structure
	',' => Reduce #3 expression call structure
	'&' => Reduce #3 expression call structure
	'^' => Reduce #3 expression call structure
	'}' => Reduce #3 expression call structure
	"->" => Reduce #3 expression call structure
	'=' => Reduce #3 expression call structure
	'+' => Reduce #3 expression call structure
	'-' => Reduce #3 expression call structure
	'*' => Reduce #3 expression call structure
	'/' => Reduce #3 expression call structure
	'%' => Reduce #3 expression call structure
	"&&" => Reduce #3 expression call structure
	"||" => Reduce #3 expression call structure
	'|' => Reduce #3 expression call structure
	"<<" => Reduce #3 expression call structure
	">>" => Reduce #3 expression call structure
	'[' => Reduce #3 expression call structure
	']' => Reduce #3 expression call structure
	"==" => Reduce #3 expression call structure
	"!=" => Reduce #3 expression call structure
	">=" => Reduce #3 expression call structure
	"<=" => Reduce #3 expression call structure
	'>' => Reduce #3 expression call structure
	'<' => Reduce #3 expression call structure
	"+=" => Reduce #3 expression call structure
	"-=" => Reduce #3 expression call structure
	"*=" => Reduce #3 expression call structure
	"/=" => Reduce #3 expression call structure
	"^=" => Reduce #3 expression call structure
	"&=" => Reduce #3 expression call structure
	"%=" => Reduce #3 expression call structure
	"&&=" => Reduce #3 expression call structure
	"||=" => Reduce #3 expression call structure
	"|=" => Reduce #3 expression call structure
	"<<=" => Reduce #3 expression call structure
	">>=" => Reduce #3 expression call structure
	'.' => Reduce #3 expression call structure
[287]
	$ => Reduce #3 statement call definition
	BOOLEAN => Reduce #3 statement call definition
	IDENT => Reduce #3 statement call definition
	DQSTRING => Reduce #3 statement call definition
	SQSTRING => Reduce #3 statement call definition
	CARDINAL => Reduce #3 statement call definition
	INTEGER => Reduce #3 statement call definition
	FLOAT => Reduce #3 statement call definition
	"function" => Reduce #3 statement call definition
	'(' => Reduce #3 statement call definition
	"procedure" => Reduce #3 statement call definition
	'&' => Reduce #3 statement call definition
	"typedef" => Reduce #3 statement call definition
	'{' => Reduce #3 statement call definition
	'}' => Reduce #3 statement call definition
	"private" => Reduce #3 statement call definition
	"public" => Reduce #3 statement call definition
	'+' => Reduce #3 statement call definition
	'-' => Reduce #3 statement call definition
	'*' => Reduce #3 statement call definition
	'~' => Reduce #3 statement call definition
	'!' => Reduce #3 statement call definition
	"var" => Reduce #3 statement call definition
	"return" => Reduce #3 statement call definition
	"delete" => Reduce #3 statement call definition
	"if" => Reduce #3 statement call definition
	"while" => Reduce #3 statement call definition
	"new" => Reduce #3 statement call definition
	"cast" => Reduce #3 statement call definition
	"null" => Reduce #3 statement call definition
[288]
	$ => Reduce #3 statement call return_value
	BOOLEAN => Reduce #3 statement call return_value
	IDENT => Reduce #3 statement call return_value
	DQSTRING => Reduce #3 statement call return_value
	SQSTRING => Reduce #3 statement call return_value
	CARDINAL => Reduce #3 statement call return_value
	INTEGER => Reduce #3 statement call return_value
	FLOAT => Reduce #3 statement call return_value
	"function" => Reduce #3 statement call return_value
	'(' => Reduce #3 statement call return_value
	"procedure" => Reduce #3 statement call return_value
	'&' => Reduce #3 statement call return_value
	"typedef" => Reduce #3 statement call return_value
	'{' => Reduce #3 statement call return_value
	'}' => Reduce #3 statement call return_value
	"private" => Reduce #3 statement call return_value
	"public" => Reduce #3 statement call return_value
	'+' => Reduce #3 statement call return_value
	'-' => Reduce #3 statement call return_value
	'*' => Reduce #3 statement call return_value
	'~' => Reduce #3 statement call return_value
	'!' => Reduce #3 statement call return_value
	"var" => Reduce #3 statement call return_value
	"return" => Reduce #3 statement call return_value
	"delete" => Reduce #3 statement call return_value
	"if" => Reduce #3 statement call return_value
	"while" => Reduce #3 statement call return_value
	"new" => Reduce #3 statement call return_value
	"cast" => Reduce #3 statement call return_value
	"null" => Reduce #3 statement call return_value
[289]
	$ => Reduce #3 statement call delete
	BOOLEAN => Reduce #3 statement call delete
	IDENT => Reduce #3 statement call delete
	DQSTRING => Reduce #3 statement call delete
	SQSTRING => Reduce #3 statement call delete
	CARDINAL => Reduce #3 statement call delete
	INTEGER => Reduce #3 statement call delete
	FLOAT => Reduce #3 statement call delete
	"function" => Reduce #3 statement call delete
	'(' => Reduce #3 statement call delete
	"procedure" => Reduce #3 statement call delete
	'&' => Reduce #3 statement call delete
	"typedef" => Reduce #3 statement call delete
	'{' => Reduce #3 statement call delete
	'}' => Reduce #3 statement call delete
	"private" => Reduce #3 statement call delete
	"public" => Reduce #3 statement call delete
	'+' => Reduce #3 statement call delete
	'-' => Reduce #3 statement call delete
	'*' => Reduce #3 statement call delete
	'~' => Reduce #3 statement call delete
	'!' => Reduce #3 statement call delete
	"var" => Reduce #3 statement call delete
	"return" => Reduce #3 statement call delete
	"delete" => Reduce #3 statement call delete
	"if" => Reduce #3 statement call delete
	"while" => Reduce #3 statement call delete
	"new" => Reduce #3 statement call delete
	"cast" => Reduce #3 statement call delete
	"null" => Reduce #3 statement call delete
[290]
	'(' => Shift goto 140
	')' => Shift goto 318
	'&' => Shift goto 142
	'^' => Shift goto 143
	"->" => Shift goto 144
	'=' => Shift goto 145
	'+' => Shift goto 146
	'-' => Shift goto 147
	'*' => Shift goto 148
	'/' => Shift goto 149
	'%' => Shift goto 150
	"&&" => Shift goto 151
	"||" => Shift goto 152
	'|' => Shift goto 153
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'[' => Shift goto 156
	"==" => Shift goto 157
	"!=" => Shift goto 158
	">=" => Shift goto 159
	"<=" => Shift goto 160
	'>' => Shift goto 161
	'<' => Shift goto 162
	"+=" => Shift goto 163
	"-=" => Shift goto 164
	"*=" => Shift goto 165
	"/=" => Shift goto 166
	"^=" => Shift goto 167
	"&=" => Shift goto 168
	"%=" => Shift goto 169
	"&&=" => Shift goto 170
	"||=" => Shift goto 171
	"|=" => Shift goto 172
	"<<=" => Shift goto 173
	">>=" => Shift goto 174
	'.' => Shift goto 175
[291]
	'(' => Shift goto 140
	')' => Shift goto 319
	'&' => Shift goto 142
	'^' => Shift goto 143
	"->" => Shift goto 144
	'=' => Shift goto 145
	'+' => Shift goto 146
	'-' => Shift goto 147
	'*' => Shift goto 148
	'/' => Shift goto 149
	'%' => Shift goto 150
	"&&" => Shift goto 151
	"||" => Shift goto 152
	'|' => Shift goto 153
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'[' => Shift goto 156
	"==" => Shift goto 157
	"!=" => Shift goto 158
	">=" => Shift goto 159
	"<=" => Shift goto 160
	'>' => Shift goto 161
	'<' => Shift goto 162
	"+=" => Shift goto 163
	"-=" => Shift goto 164
	"*=" => Shift goto 165
	"/=" => Shift goto 166
	"^=" => Shift goto 167
	"&=" => Shift goto 168
	"%=" => Shift goto 169
	"&&=" => Shift goto 170
	"||=" => Shift goto 171
	"|=" => Shift goto 172
	"<<=" => Shift goto 173
	">>=" => Shift goto 174
	'.' => Shift goto 175
[292]
	BOOLEAN => Shift goto 78
	IDENT => Shift goto 79
	DQSTRING => Shift goto 80
	SQSTRING => Shift goto 81
	CARDINAL => Shift goto 82
	INTEGER => Shift goto 83
	FLOAT => Shift goto 84
	'(' => Shift goto 85
	'&' => Shift goto 86
	'{' => Shift goto 103
	'+' => Shift goto 88
	'-' => Shift goto 89
	'*' => Shift goto 90
	'~' => Shift goto 91
	'!' => Shift goto 92
	"new" => Shift goto 98
	"cast" => Shift goto 99
	"null" => Shift goto 100
[293]
	'{' => Shift goto 321
[294]
	BOOLEAN => Shift goto 78
	IDENT => Shift goto 79
	DQSTRING => Shift goto 80
	SQSTRING => Shift goto 81
	CARDINAL => Shift goto 82
	INTEGER => Shift goto 83
	FLOAT => Shift goto 84
	'(' => Shift goto 85
	'&' => Shift goto 86
	'{' => Shift goto 103
	'+' => Shift goto 88
	'-' => Shift goto 89
	'*' => Shift goto 90
	'~' => Shift goto 91
	'!' => Shift goto 92
	"new" => Shift goto 98
	"cast" => Shift goto 99
	"null" => Shift goto 100
[295]
	')' => Reduce #2 paramdecl call paramdef
	',' => Reduce #2 paramdecl call paramdef
[296]
	"const" => Shift goto 323
	'{' => Shift goto 324
[297]
	IDENT => Shift goto 17
	"const" => Shift goto 18
	"any" => Shift goto 19
[298]
	IDENT => Shift goto 17
	'(' => Shift goto 108
	"const" => Shift goto 18
	"any" => Shift goto 19
[299]
	$ => Reduce #3 constructordefinition call constructordef
	IDENT => Reduce #3 constructordefinition call constructordef
	"function" => Reduce #3 constructordefinition call constructordef
	"procedure" => Reduce #3 constructordefinition call constructordef
	"const" => Reduce #3 constructordefinition call constructordef
	"operator" => Reduce #3 constructordefinition call constructordef
	"any" => Reduce #3 constructordefinition call constructordef
	"class" => Reduce #3 constructordefinition call constructordef
	"struct" => Reduce #3 constructordefinition call constructordef
	"typedef" => Reduce #3 constructordefinition call constructordef
	'}' => Reduce #3 constructordefinition call constructordef
	"interface" => Reduce #3 constructordefinition call constructordef
	"private" => Reduce #3 constructordefinition call constructordef
	"public" => Reduce #3 constructordefinition call constructordef
	"constructor" => Reduce #3 constructordefinition call constructordef
	"destructor" => Reduce #3 constructordefinition call constructordef
[300]
	IDENT => Shift goto 17
	')' => Reduce #0 parameterlist call paramdeflist
	"const" => Shift goto 18
	"any" => Shift goto 19
[301]
	'}' => Shift goto 330
[302]
	'{' => Reduce #3 inheritlist call inheritdef 1
[303]
	'}' => Shift goto 331
[304]
	'(' => Shift goto 332
[305]
	IDENT => Shift goto 17
	')' => Reduce #0 extern_paramlist call extern_paramdeflist
	"const" => Shift goto 18
	"any" => Shift goto 19
[306]
	'(' => Shift goto 334
[307]
	IDENT => Shift goto 17
	')' => Reduce #0 extern_paramlist call extern_paramdeflist
	"const" => Shift goto 18
	"any" => Shift goto 19
[308]
	IDENT => Reduce #2 operatordecl call operatordecl {name="()",symbol="call"}
	'(' => Reduce #2 operatordecl call operatordecl {name="()",symbol="call"}
	"const" => Reduce #2 operatordecl call operatordecl {name="()",symbol="call"}
	"any" => Reduce #2 operatordecl call operatordecl {name="()",symbol="call"}
[309]
	IDENT => Reduce #2 operatordecl call operatordecl {name="[]",symbol="get"}
	'(' => Reduce #2 operatordecl call operatordecl {name="[]",symbol="get"}
	"const" => Reduce #2 operatordecl call operatordecl {name="[]",symbol="get"}
	"any" => Reduce #2 operatordecl call operatordecl {name="[]",symbol="get"}
[310]
	')' => Shift goto 336
	"..." => Shift goto 337
[311]
	';' => Shift goto 338
[312]
	')' => Shift goto 339
[313]
	')' => Reduce #2 extern_parameters call extern_paramdef
	"..." => Reduce #2 extern_parameters call extern_paramdef
	',' => Shift goto 340
[314]
	IDENT => Shift goto 17
	"const" => Shift goto 18
	"any" => Shift goto 19
[315]
	'(' => Reduce #4 expression call operator "()"
	')' => Reduce #4 expression call operator "()"
	';' => Reduce #4 expression call operator "()"
	',' => Reduce #4 expression call operator "()"
	'&' => Reduce #4 expression call operator "()"
	'^' => Reduce #4 expression call operator "()"
	'}' => Reduce #4 expression call operator "()"
	"->" => Reduce #4 expression call operator "()"
	'=' => Reduce #4 expression call operator "()"
	'+' => Reduce #4 expression call operator "()"
	'-' => Reduce #4 expression call operator "()"
	'*' => Reduce #4 expression call operator "()"
	'/' => Reduce #4 expression call operator "()"
	'%' => Reduce #4 expression call operator "()"
	"&&" => Reduce #4 expression call operator "()"
	"||" => Reduce #4 expression call operator "()"
	'|' => Reduce #4 expression call operator "()"
	"<<" => Reduce #4 expression call operator "()"
	">>" => Reduce #4 expression call operator "()"
	'[' => Reduce #4 expression call operator "()"
	']' => Reduce #4 expression call operator "()"
	"==" => Reduce #4 expression call operator "()"
	"!=" => Reduce #4 expression call operator "()"
	">=" => Reduce #4 expression call operator "()"
	"<=" => Reduce #4 expression call operator "()"
	'>' => Reduce #4 expression call operator "()"
	'<' => Reduce #4 expression call operator "()"
	"+=" => Reduce #4 expression call operator "()"
	"-=" => Reduce #4 expression call operator "()"
	"*=" => Reduce #4 expression call operator "()"
	"/=" => Reduce #4 expression call operator "()"
	"^=" => Reduce #4 expression call operator "()"
	"&=" => Reduce #4 expression call operator "()"
	"%=" => Reduce #4 expression call operator "()"
	"&&=" => Reduce #4 expression call operator "()"
	"||=" => Reduce #4 expression call operator "()"
	"|=" => Reduce #4 expression call operator "()"
	"<<=" => Reduce #4 expression call operator "()"
	">>=" => Reduce #4 expression call operator "()"
	'.' => Reduce #4 expression call operator "()"
[316]
	'(' => Reduce #4 expression call operator "[]"
	')' => Reduce #4 expression call operator "[]"
	';' => Reduce #4 expression call operator "[]"
	',' => Reduce #4 expression call operator "[]"
	'&' => Reduce #4 expression call operator "[]"
	'^' => Reduce #4 expression call operator "[]"
	'}' => Reduce #4 expression call operator "[]"
	"->" => Reduce #4 expression call operator "[]"
	'=' => Reduce #4 expression call operator "[]"
	'+' => Reduce #4 expression call operator "[]"
	'-' => Reduce #4 expression call operator "[]"
	'*' => Reduce #4 expression call operator "[]"
	'/' => Reduce #4 expression call operator "[]"
	'%' => Reduce #4 expression call operator "[]"
	"&&" => Reduce #4 expression call operator "[]"
	"||" => Reduce #4 expression call operator "[]"
	'|' => Reduce #4 expression call operator "[]"
	"<<" => Reduce #4 expression call operator "[]"
	">>" => Reduce #4 expression call operator "[]"
	'[' => Reduce #4 expression call operator "[]"
	']' => Reduce #4 expression call operator "[]"
	"==" => Reduce #4 expression call operator "[]"
	"!=" => Reduce #4 expression call operator "[]"
	">=" => Reduce #4 expression call operator "[]"
	"<=" => Reduce #4 expression call operator "[]"
	'>' => Reduce #4 expression call operator "[]"
	'<' => Reduce #4 expression call operator "[]"
	"+=" => Reduce #4 expression call operator "[]"
	"-=" => Reduce #4 expression call operator "[]"
	"*=" => Reduce #4 expression call operator "[]"
	"/=" => Reduce #4 expression call operator "[]"
	"^=" => Reduce #4 expression call operator "[]"
	"&=" => Reduce #4 expression call operator "[]"
	"%=" => Reduce #4 expression call operator "[]"
	"&&=" => Reduce #4 expression call operator "[]"
	"||=" => Reduce #4 expression call operator "[]"
	"|=" => Reduce #4 expression call operator "[]"
	"<<=" => Reduce #4 expression call operator "[]"
	">>=" => Reduce #4 expression call operator "[]"
	'.' => Reduce #4 expression call operator "[]"
[317]
	')' => Reduce #3 expressionlist
	'}' => Reduce #3 expressionlist
	']' => Reduce #3 expressionlist
[318]
	'{' => Shift goto 342
[319]
	'{' => Shift goto 343
[320]
	'(' => Shift goto 140
	')' => Reduce #4 expression call allocate
	';' => Reduce #4 expression call allocate
	',' => Reduce #4 expression call allocate
	'&' => Shift goto 142
	'^' => Shift goto 143
	'}' => Reduce #4 expression call allocate
	"->" => Reduce #4 expression call allocate
	'=' => Shift goto 145
	'+' => Shift goto 146
	'-' => Shift goto 147
	'*' => Shift goto 148
	'/' => Shift goto 149
	'%' => Shift goto 150
	"&&" => Shift goto 151
	"||" => Shift goto 152
	'|' => Shift goto 153
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'[' => Shift goto 156
	']' => Reduce #4 expression call allocate
	"==" => Shift goto 157
	"!=" => Shift goto 158
	">=" => Shift goto 159
	"<=" => Shift goto 160
	'>' => Shift goto 161
	'<' => Shift goto 162
	"+=" => Shift goto 163
	"-=" => Shift goto 164
	"*=" => Shift goto 165
	"/=" => Shift goto 166
	"^=" => Shift goto 167
	"&=" => Shift goto 168
	"%=" => Shift goto 169
	"&&=" => Shift goto 170
	"||=" => Shift goto 171
	"|=" => Shift goto 172
	"<<=" => Shift goto 173
	">>=" => Shift goto 174
	'.' => Shift goto 175
[321]
	BOOLEAN => Shift goto 78
	IDENT => Shift goto 79
	DQSTRING => Shift goto 80
	SQSTRING => Shift goto 81
	CARDINAL => Shift goto 82
	INTEGER => Shift goto 83
	FLOAT => Shift goto 84
	'(' => Shift goto 85
	'&' => Shift goto 86
	'{' => Shift goto 103
	'}' => Shift goto 345
	'+' => Shift goto 88
	'-' => Shift goto 89
	'*' => Shift goto 90
	'~' => Shift goto 91
	'!' => Shift goto 92
	"new" => Shift goto 98
	"cast" => Shift goto 99
	"null" => Shift goto 100
[322]
	'(' => Shift goto 140
	';' => Reduce #7 variabledefinition call vardef_array_assign
	'&' => Shift goto 142
	'^' => Shift goto 143
	"->" => Shift goto 144
	'=' => Shift goto 145
	'+' => Shift goto 146
	'-' => Shift goto 147
	'*' => Shift goto 148
	'/' => Shift goto 149
	'%' => Shift goto 150
	"&&" => Shift goto 151
	"||" => Shift goto 152
	'|' => Shift goto 153
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'[' => Shift goto 156
	"==" => Shift goto 157
	"!=" => Shift goto 158
	">=" => Shift goto 159
	"<=" => Shift goto 160
	'>' => Shift goto 161
	'<' => Shift goto 162
	"+=" => Shift goto 163
	"-=" => Shift goto 164
	"*=" => Shift goto 165
	"/=" => Shift goto 166
	"^=" => Shift goto 167
	"&=" => Shift goto 168
	"%=" => Shift goto 169
	"&&=" => Shift goto 170
	"||=" => Shift goto 171
	"|=" => Shift goto 172
	"<<=" => Shift goto 173
	">>=" => Shift goto 174
	'.' => Shift goto 175
[323]
	'{' => Shift goto 346
[324]
	BOOLEAN => Shift goto 78
	IDENT => Shift goto 79
	DQSTRING => Shift goto 80
	SQSTRING => Shift goto 81
	CARDINAL => Shift goto 82
	INTEGER => Shift goto 83
	FLOAT => Shift goto 84
	"function" => Reduce #0 linkage call linkage {private=false,linkage="external"}
	'(' => Shift goto 85
	"procedure" => Reduce #0 linkage call linkage {private=false,linkage="external"}
	'&' => Shift goto 86
	"typedef" => Shift goto 22
	'{' => Shift goto 87
	'}' => Reduce #0 statementlist
	"private" => Shift goto 24
	"public" => Shift goto 25
	'+' => Shift goto 88
	'-' => Shift goto 89
	'*' => Shift goto 90
	'~' => Shift goto 91
	'!' => Shift goto 92
	"var" => Shift goto 93
	"return" => Shift goto 94
	"delete" => Shift goto 95
	"if" => Shift goto 96
	"while" => Shift goto 97
	"new" => Shift goto 98
	"cast" => Shift goto 99
	"null" => Shift goto 100
[325]
	')' => Reduce #3 parameters
[326]
	'(' => Shift goto 108
[327]
	$ => Reduce #4 operatordefinition call operator_procdef {const=false}
	IDENT => Reduce #4 operatordefinition call operator_procdef {const=false}
	"function" => Reduce #4 operatordefinition call operator_procdef {const=false}
	"procedure" => Reduce #4 operatordefinition call operator_procdef {const=false}
	"const" => Reduce #4 operatordefinition call operator_procdef {const=false}
	"operator" => Reduce #4 operatordefinition call operator_procdef {const=false}
	"any" => Reduce #4 operatordefinition call operator_procdef {const=false}
	"class" => Reduce #4 operatordefinition call operator_procdef {const=false}
	"struct" => Reduce #4 operatordefinition call operator_procdef {const=false}
	"typedef" => Reduce #4 operatordefinition call operator_procdef {const=false}
	'}' => Reduce #4 operatordefinition call operator_procdef {const=false}
	"interface" => Reduce #4 operatordefinition call operator_procdef {const=false}
	"private" => Reduce #4 operatordefinition call operator_procdef {const=false}
	"public" => Reduce #4 operatordefinition call operator_procdef {const=false}
	"constructor" => Reduce #4 operatordefinition call operator_procdef {const=false}
	"destructor" => Reduce #4 operatordefinition call operator_procdef {const=false}
[328]
	$ => Reduce #4 operatordefinition call operator_procdef {const=true}
	IDENT => Reduce #4 operatordefinition call operator_procdef {const=true}
	"function" => Reduce #4 operatordefinition call operator_procdef {const=true}
	"procedure" => Reduce #4 operatordefinition call operator_procdef {const=true}
	"const" => Reduce #4 operatordefinition call operator_procdef {const=true}
	"operator" => Reduce #4 operatordefinition call operator_procdef {const=true}
	"any" => Reduce #4 operatordefinition call operator_procdef {const=true}
	"class" => Reduce #4 operatordefinition call operator_procdef {const=true}
	"struct" => Reduce #4 operatordefinition call operator_procdef {const=true}
	"typedef" => Reduce #4 operatordefinition call operator_procdef {const=true}
	'}' => Reduce #4 operatordefinition call operator_procdef {const=true}
	"interface" => Reduce #4 operatordefinition call operator_procdef {const=true}
	"private" => Reduce #4 operatordefinition call operator_procdef {const=true}
	"public" => Reduce #4 operatordefinition call operator_procdef {const=true}
	"constructor" => Reduce #4 operatordefinition call operator_procdef {const=true}
	"destructor" => Reduce #4 operatordefinition call operator_procdef {const=true}
[329]
	')' => Shift goto 350
[330]
	$ => Reduce #4 constructordefinition call destructordef
	IDENT => Reduce #4 constructordefinition call destructordef
	"function" => Reduce #4 constructordefinition call destructordef
	"procedure" => Reduce #4 constructordefinition call destructordef
	"const" => Reduce #4 constructordefinition call destructordef
	"operator" => Reduce #4 constructordefinition call destructordef
	"any" => Reduce #4 constructordefinition call destructordef
	"class" => Reduce #4 constructordefinition call destructordef
	"struct" => Reduce #4 constructordefinition call destructordef
	"typedef" => Reduce #4 constructordefinition call destructordef
	'}' => Reduce #4 constructordefinition call destructordef
	"interface" => Reduce #4 constructordefinition call destructordef
	"private" => Reduce #4 constructordefinition call destructordef
	"public" => Reduce #4 constructordefinition call destructordef
	"constructor" => Reduce #4 constructordefinition call destructordef
	"destructor" => Reduce #4 constructordefinition call destructordef
[331]
	$ => Reduce #7 classdefinition call classdef
	IDENT => Reduce #7 classdefinition call classdef
	"function" => Reduce #7 classdefinition call classdef
	"procedure" => Reduce #7 classdefinition call classdef
	"const" => Reduce #7 classdefinition call classdef
	"operator" => Reduce #7 classdefinition call classdef
	"any" => Reduce #7 classdefinition call classdef
	"class" => Reduce #7 classdefinition call classdef
	"struct" => Reduce #7 classdefinition call classdef
	"typedef" => Reduce #7 classdefinition call classdef
	'}' => Reduce #7 classdefinition call classdef
	"interface" => Reduce #7 classdefinition call classdef
	"private" => Reduce #7 classdefinition call classdef
	"public" => Reduce #7 classdefinition call classdef
	"constructor" => Reduce #7 classdefinition call classdef
	"destructor" => Reduce #7 classdefinition call classdef
	"main" => Reduce #7 classdefinition call classdef
[332]
	IDENT => Shift goto 17
	')' => Reduce #0 extern_paramlist call extern_paramdeflist
	"const" => Shift goto 18
	"any" => Shift goto 19
[333]
	')' => Shift goto 352
[334]
	IDENT => Shift goto 17
	')' => Reduce #0 extern_paramlist call extern_paramdeflist
	"const" => Shift goto 18
	"any" => Shift goto 19
[335]
	')' => Shift goto 354
[336]
	';' => Shift goto 355
[337]
	')' => Shift goto 356
[338]
	$ => Reduce #8 extern_definition call extern_procdef
	IDENT => Reduce #8 extern_definition call extern_procdef
	"extern" => Reduce #8 extern_definition call extern_procdef
	"function" => Reduce #8 extern_definition call extern_procdef
	"procedure" => Reduce #8 extern_definition call extern_procdef
	"const" => Reduce #8 extern_definition call extern_procdef
	"any" => Reduce #8 extern_definition call extern_procdef
	"class" => Reduce #8 extern_definition call extern_procdef
	"struct" => Reduce #8 extern_definition call extern_procdef
	"typedef" => Reduce #8 extern_definition call extern_procdef
	"interface" => Reduce #8 extern_definition call extern_procdef
	"private" => Reduce #8 extern_definition call extern_procdef
	"public" => Reduce #8 extern_definition call extern_procdef
	"main" => Reduce #8 extern_definition call extern_procdef
[339]
	';' => Shift goto 357
[340]
	IDENT => Shift goto 17
	"const" => Shift goto 18
	"any" => Shift goto 19
[341]
	')' => Reduce #3 extern_parameters call extern_paramdef
	"..." => Reduce #3 extern_parameters call extern_paramdef
[342]
	BOOLEAN => Shift goto 78
	IDENT => Shift goto 79
	DQSTRING => Shift goto 80
	SQSTRING => Shift goto 81
	CARDINAL => Shift goto 82
	INTEGER => Shift goto 83
	FLOAT => Shift goto 84
	"function" => Reduce #0 linkage call linkage {private=false,linkage="external"}
	'(' => Shift goto 85
	"procedure" => Reduce #0 linkage call linkage {private=false,linkage="external"}
	'&' => Shift goto 86
	"typedef" => Shift goto 22
	'{' => Shift goto 87
	'}' => Reduce #0 statementlist
	"private" => Shift goto 24
	"public" => Shift goto 25
	'+' => Shift goto 88
	'-' => Shift goto 89
	'*' => Shift goto 90
	'~' => Shift goto 91
	'!' => Shift goto 92
	"var" => Shift goto 93
	"return" => Shift goto 94
	"delete" => Shift goto 95
	"if" => Shift goto 96
	"while" => Shift goto 97
	"new" => Shift goto 98
	"cast" => Shift goto 99
	"null" => Shift goto 100
[343]
	BOOLEAN => Shift goto 78
	IDENT => Shift goto 79
	DQSTRING => Shift goto 80
	SQSTRING => Shift goto 81
	CARDINAL => Shift goto 82
	INTEGER => Shift goto 83
	FLOAT => Shift goto 84
	"function" => Reduce #0 linkage call linkage {private=false,linkage="external"}
	'(' => Shift goto 85
	"procedure" => Reduce #0 linkage call linkage {private=false,linkage="external"}
	'&' => Shift goto 86
	"typedef" => Shift goto 22
	'{' => Shift goto 87
	'}' => Reduce #0 statementlist
	"private" => Shift goto 24
	"public" => Shift goto 25
	'+' => Shift goto 88
	'-' => Shift goto 89
	'*' => Shift goto 90
	'~' => Shift goto 91
	'!' => Shift goto 92
	"var" => Shift goto 93
	"return" => Shift goto 94
	"delete" => Shift goto 95
	"if" => Shift goto 96
	"while" => Shift goto 97
	"new" => Shift goto 98
	"cast" => Shift goto 99
	"null" => Shift goto 100
[344]
	'(' => Shift goto 140
	'&' => Shift goto 142
	'^' => Shift goto 143
	'}' => Shift goto 361
	"->" => Shift goto 144
	'=' => Shift goto 145
	'+' => Shift goto 146
	'-' => Shift goto 147
	'*' => Shift goto 148
	'/' => Shift goto 149
	'%' => Shift goto 150
	"&&" => Shift goto 151
	"||" => Shift goto 152
	'|' => Shift goto 153
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'[' => Shift goto 156
	"==" => Shift goto 157
	"!=" => Shift goto 158
	">=" => Shift goto 159
	"<=" => Shift goto 160
	'>' => Shift goto 161
	'<' => Shift goto 162
	"+=" => Shift goto 163
	"-=" => Shift goto 164
	"*=" => Shift goto 165
	"/=" => Shift goto 166
	"^=" => Shift goto 167
	"&=" => Shift goto 168
	"%=" => Shift goto 169
	"&&=" => Shift goto 170
	"||=" => Shift goto 171
	"|=" => Shift goto 172
	"<<=" => Shift goto 173
	">>=" => Shift goto 174
	'.' => Shift goto 175
[345]
	'(' => Reduce #5 expression call typecast
	')' => Reduce #5 expression call typecast
	';' => Reduce #5 expression call typecast
	',' => Reduce #5 expression call typecast
	'&' => Reduce #5 expression call typecast
	'^' => Reduce #5 expression call typecast
	'}' => Reduce #5 expression call typecast
	"->" => Reduce #5 expression call typecast
	'=' => Reduce #5 expression call typecast
	'+' => Reduce #5 expression call typecast
	'-' => Reduce #5 expression call typecast
	'*' => Reduce #5 expression call typecast
	'/' => Reduce #5 expression call typecast
	'%' => Reduce #5 expression call typecast
	"&&" => Reduce #5 expression call typecast
	"||" => Reduce #5 expression call typecast
	'|' => Reduce #5 expression call typecast
	"<<" => Reduce #5 expression call typecast
	">>" => Reduce #5 expression call typecast
	'[' => Reduce #5 expression call typecast
	']' => Reduce #5 expression call typecast
	"==" => Reduce #5 expression call typecast
	"!=" => Reduce #5 expression call typecast
	">=" => Reduce #5 expression call typecast
	"<=" => Reduce #5 expression call typecast
	'>' => Reduce #5 expression call typecast
	'<' => Reduce #5 expression call typecast
	"+=" => Reduce #5 expression call typecast
	"-=" => Reduce #5 expression call typecast
	"*=" => Reduce #5 expression call typecast
	"/=" => Reduce #5 expression call typecast
	"^=" => Reduce #5 expression call typecast
	"&=" => Reduce #5 expression call typecast
	"%=" => Reduce #5 expression call typecast
	"&&=" => Reduce #5 expression call typecast
	"||=" => Reduce #5 expression call typecast
	"|=" => Reduce #5 expression call typecast
	"<<=" => Reduce #5 expression call typecast
	">>=" => Reduce #5 expression call typecast
	'.' => Reduce #5 expression call typecast
[346]
	BOOLEAN => Shift goto 78
	IDENT => Shift goto 79
	DQSTRING => Shift goto 80
	SQSTRING => Shift goto 81
	CARDINAL => Shift goto 82
	INTEGER => Shift goto 83
	FLOAT => Shift goto 84
	"function" => Reduce #0 linkage call linkage {private=false,linkage="external"}
	'(' => Shift goto 85
	"procedure" => Reduce #0 linkage call linkage {private=false,linkage="external"}
	'&' => Shift goto 86
	"typedef" => Shift goto 22
	'{' => Shift goto 87
	'}' => Reduce #0 statementlist
	"private" => Shift goto 24
	"public" => Shift goto 25
	'+' => Shift goto 88
	'-' => Shift goto 89
	'*' => Shift goto 90
	'~' => Shift goto 91
	'!' => Shift goto 92
	"var" => Shift goto 93
	"return" => Shift goto 94
	"delete" => Shift goto 95
	"if" => Shift goto 96
	"while" => Shift goto 97
	"new" => Shift goto 98
	"cast" => Shift goto 99
	"null" => Shift goto 100
[347]
	'}' => Shift goto 363
[348]
	$ => Reduce #5 operatordefinition call operator_funcdef {const=false}
	IDENT => Reduce #5 operatordefinition call operator_funcdef {const=false}
	"function" => Reduce #5 operatordefinition call operator_funcdef {const=false}
	"procedure" => Reduce #5 operatordefinition call operator_funcdef {const=false}
	"const" => Reduce #5 operatordefinition call operator_funcdef {const=false}
	"operator" => Reduce #5 operatordefinition call operator_funcdef {const=false}
	"any" => Reduce #5 operatordefinition call operator_funcdef {const=false}
	"class" => Reduce #5 operatordefinition call operator_funcdef {const=false}
	"struct" => Reduce #5 operatordefinition call operator_funcdef {const=false}
	"typedef" => Reduce #5 operatordefinition call operator_funcdef {const=false}
	'}' => Reduce #5 operatordefinition call operator_funcdef {const=false}
	"interface" => Reduce #5 operatordefinition call operator_funcdef {const=false}
	"private" => Reduce #5 operatordefinition call operator_funcdef {const=false}
	"public" => Reduce #5 operatordefinition call operator_funcdef {const=false}
	"constructor" => Reduce #5 operatordefinition call operator_funcdef {const=false}
	"destructor" => Reduce #5 operatordefinition call operator_funcdef {const=false}
[349]
	$ => Reduce #5 operatordefinition call operator_funcdef {const=true}
	IDENT => Reduce #5 operatordefinition call operator_funcdef {const=true}
	"function" => Reduce #5 operatordefinition call operator_funcdef {const=true}
	"procedure" => Reduce #5 operatordefinition call operator_funcdef {const=true}
	"const" => Reduce #5 operatordefinition call operator_funcdef {const=true}
	"operator" => Reduce #5 operatordefinition call operator_funcdef {const=true}
	"any" => Reduce #5 operatordefinition call operator_funcdef {const=true}
	"class" => Reduce #5 operatordefinition call operator_funcdef {const=true}
	"struct" => Reduce #5 operatordefinition call operator_funcdef {const=true}
	"typedef" => Reduce #5 operatordefinition call operator_funcdef {const=true}
	'}' => Reduce #5 operatordefinition call operator_funcdef {const=true}
	"interface" => Reduce #5 operatordefinition call operator_funcdef {const=true}
	"private" => Reduce #5 operatordefinition call operator_funcdef {const=true}
	"public" => Reduce #5 operatordefinition call operator_funcdef {const=true}
	"constructor" => Reduce #5 operatordefinition call operator_funcdef {const=true}
	"destructor" => Reduce #5 operatordefinition call operator_funcdef {const=true}
[350]
	'{' => Shift goto 324
[351]
	')' => Shift goto 364
[352]
	';' => Shift goto 365
	"const" => Shift goto 366
[353]
	')' => Shift goto 367
[354]
	';' => Shift goto 368
	"const" => Shift goto 369
[355]
	$ => Reduce #9 extern_definition call extern_funcdef
	IDENT => Reduce #9 extern_definition call extern_funcdef
	"extern" => Reduce #9 extern_definition call extern_funcdef
	"function" => Reduce #9 extern_definition call extern_funcdef
	"procedure" => Reduce #9 extern_definition call extern_funcdef
	"const" => Reduce #9 extern_definition call extern_funcdef
	"any" => Reduce #9 extern_definition call extern_funcdef
	"class" => Reduce #9 extern_definition call extern_funcdef
	"struct" => Reduce #9 extern_definition call extern_funcdef
	"typedef" => Reduce #9 extern_definition call extern_funcdef
	"interface" => Reduce #9 extern_definition call extern_funcdef
	"private" => Reduce #9 extern_definition call extern_funcdef
	"public" => Reduce #9 extern_definition call extern_funcdef
	"main" => Reduce #9 extern_definition call extern_funcdef
[356]
	';' => Shift goto 370
[357]
	$ => Reduce #9 extern_definition call extern_procdef_vararg
	IDENT => Reduce #9 extern_definition call extern_procdef_vararg
	"extern" => Reduce #9 extern_definition call extern_procdef_vararg
	"function" => Reduce #9 extern_definition call extern_procdef_vararg
	"procedure" => Reduce #9 extern_definition call extern_procdef_vararg
	"const" => Reduce #9 extern_definition call extern_procdef_vararg
	"any" => Reduce #9 extern_definition call extern_procdef_vararg
	"class" => Reduce #9 extern_definition call extern_procdef_vararg
	"struct" => Reduce #9 extern_definition call extern_procdef_vararg
	"typedef" => Reduce #9 extern_definition call extern_procdef_vararg
	"interface" => Reduce #9 extern_definition call extern_procdef_vararg
	"private" => Reduce #9 extern_definition call extern_procdef_vararg
	"public" => Reduce #9 extern_definition call extern_procdef_vararg
	"main" => Reduce #9 extern_definition call extern_procdef_vararg
[358]
	')' => Reduce #4 extern_parameters call extern_paramdef
	"..." => Reduce #4 extern_parameters call extern_paramdef
[359]
	'}' => Shift goto 371
[360]
	'}' => Shift goto 372
[361]
	'(' => Reduce #6 expression call typecast
	')' => Reduce #6 expression call typecast
	';' => Reduce #6 expression call typecast
	',' => Reduce #6 expression call typecast
	'&' => Reduce #6 expression call typecast
	'^' => Reduce #6 expression call typecast
	'}' => Reduce #6 expression call typecast
	"->" => Reduce #6 expression call typecast
	'=' => Reduce #6 expression call typecast
	'+' => Reduce #6 expression call typecast
	'-' => Reduce #6 expression call typecast
	'*' => Reduce #6 expression call typecast
	'/' => Reduce #6 expression call typecast
	'%' => Reduce #6 expression call typecast
	"&&" => Reduce #6 expression call typecast
	"||" => Reduce #6 expression call typecast
	'|' => Reduce #6 expression call typecast
	"<<" => Reduce #6 expression call typecast
	">>" => Reduce #6 expression call typecast
	'[' => Reduce #6 expression call typecast
	']' => Reduce #6 expression call typecast
	"==" => Reduce #6 expression call typecast
	"!=" => Reduce #6 expression call typecast
	">=" => Reduce #6 expression call typecast
	"<=" => Reduce #6 expression call typecast
	'>' => Reduce #6 expression call typecast
	'<' => Reduce #6 expression call typecast
	"+=" => Reduce #6 expression call typecast
	"-=" => Reduce #6 expression call typecast
	"*=" => Reduce #6 expression call typecast
	"/=" => Reduce #6 expression call typecast
	"^=" => Reduce #6 expression call typecast
	"&=" => Reduce #6 expression call typecast
	"%=" => Reduce #6 expression call typecast
	"&&=" => Reduce #6 expression call typecast
	"||=" => Reduce #6 expression call typecast
	"|=" => Reduce #6 expression call typecast
	"<<=" => Reduce #6 expression call typecast
	">>=" => Reduce #6 expression call typecast
	'.' => Reduce #6 expression call typecast
[362]
	'}' => Shift goto 373
[363]
	$ => Reduce #6 callablebody call callablebody
	BOOLEAN => Reduce #6 callablebody call callablebody
	IDENT => Reduce #6 callablebody call callablebody
	DQSTRING => Reduce #6 callablebody call callablebody
	SQSTRING => Reduce #6 callablebody call callablebody
	CARDINAL => Reduce #6 callablebody call callablebody
	INTEGER => Reduce #6 callablebody call callablebody
	FLOAT => Reduce #6 callablebody call callablebody
	"function" => Reduce #6 callablebody call callablebody
	'(' => Reduce #6 callablebody call callablebody
	"procedure" => Reduce #6 callablebody call callablebody
	"const" => Reduce #6 callablebody call callablebody
	"operator" => Reduce #6 callablebody call callablebody
	'&' => Reduce #6 callablebody call callablebody
	"any" => Reduce #6 callablebody call callablebody
	"class" => Reduce #6 callablebody call callablebody
	"struct" => Reduce #6 callablebody call callablebody
	"typedef" => Reduce #6 callablebody call callablebody
	'{' => Reduce #6 callablebody call callablebody
	'}' => Reduce #6 callablebody call callablebody
	"interface" => Reduce #6 callablebody call callablebody
	"private" => Reduce #6 callablebody call callablebody
	"public" => Reduce #6 callablebody call callablebody
	"constructor" => Reduce #6 callablebody call callablebody
	"destructor" => Reduce #6 callablebody call callablebody
	'+' => Reduce #6 callablebody call callablebody
	'-' => Reduce #6 callablebody call callablebody
	'*' => Reduce #6 callablebody call callablebody
	'~' => Reduce #6 callablebody call callablebody
	'!' => Reduce #6 callablebody call callablebody
	"main" => Reduce #6 callablebody call callablebody
	"var" => Reduce #6 callablebody call callablebody
	"return" => Reduce #6 callablebody call callablebody
	"delete" => Reduce #6 callablebody call callablebody
	"if" => Reduce #6 callablebody call callablebody
	"while" => Reduce #6 callablebody call callablebody
	"new" => Reduce #6 callablebody call callablebody
	"cast" => Reduce #6 callablebody call callablebody
	"null" => Reduce #6 callablebody call callablebody
[364]
	';' => Shift goto 374
	"const" => Shift goto 375
[365]
	$ => Reduce #6 interface_definition call interface_procdef {const=false}
	"function" => Reduce #6 interface_definition call interface_procdef {const=false}
	"procedure" => Reduce #6 interface_definition call interface_procdef {const=false}
	"operator" => Reduce #6 interface_definition call interface_procdef {const=false}
	'}' => Reduce #6 interface_definition call interface_procdef {const=false}
[366]
	';' => Shift goto 376
[367]
	';' => Shift goto 377
	"const" => Shift goto 378
[368]
	$ => Reduce #6 interface_definition call interface_operator_procdef {const=false}
	"function" => Reduce #6 interface_definition call interface_operator_procdef {const=false}
	"procedure" => Reduce #6 interface_definition call interface_operator_procdef {const=false}
	"operator" => Reduce #6 interface_definition call interface_operator_procdef {const=false}
	'}' => Reduce #6 interface_definition call interface_operator_procdef {const=false}
[369]
	';' => Shift goto 379
[370]
	$ => Reduce #10 extern_definition call extern_funcdef_vararg
	IDENT => Reduce #10 extern_definition call extern_funcdef_vararg
	"extern" => Reduce #10 extern_definition call extern_funcdef_vararg
	"function" => Reduce #10 extern_definition call extern_funcdef_vararg
	"procedure" => Reduce #10 extern_definition call extern_funcdef_vararg
	"const" => Reduce #10 extern_definition call extern_funcdef_vararg
	"any" => Reduce #10 extern_definition call extern_funcdef_vararg
	"class" => Reduce #10 extern_definition call extern_funcdef_vararg
	"struct" => Reduce #10 extern_definition call extern_funcdef_vararg
	"typedef" => Reduce #10 extern_definition call extern_funcdef_vararg
	"interface" => Reduce #10 extern_definition call extern_funcdef_vararg
	"private" => Reduce #10 extern_definition call extern_funcdef_vararg
	"public" => Reduce #10 extern_definition call extern_funcdef_vararg
	"main" => Reduce #10 extern_definition call extern_funcdef_vararg
[371]
	$ => Reduce #7 statement call conditional_if
	BOOLEAN => Reduce #7 statement call conditional_if
	IDENT => Reduce #7 statement call conditional_if
	DQSTRING => Reduce #7 statement call conditional_if
	SQSTRING => Reduce #7 statement call conditional_if
	CARDINAL => Reduce #7 statement call conditional_if
	INTEGER => Reduce #7 statement call conditional_if
	FLOAT => Reduce #7 statement call conditional_if
	"function" => Reduce #7 statement call conditional_if
	'(' => Reduce #7 statement call conditional_if
	"procedure" => Reduce #7 statement call conditional_if
	'&' => Reduce #7 statement call conditional_if
	"typedef" => Reduce #7 statement call conditional_if
	'{' => Reduce #7 statement call conditional_if
	'}' => Reduce #7 statement call conditional_if
	"private" => Reduce #7 statement call conditional_if
	"public" => Reduce #7 statement call conditional_if
	'+' => Reduce #7 statement call conditional_if
	'-' => Reduce #7 statement call conditional_if
	'*' => Reduce #7 statement call conditional_if
	'~' => Reduce #7 statement call conditional_if
	'!' => Reduce #7 statement call conditional_if
	"var" => Reduce #7 statement call conditional_if
	"return" => Reduce #7 statement call conditional_if
	"delete" => Reduce #7 statement call conditional_if
	"if" => Reduce #7 statement call conditional_if
	"else" => Shift goto 380
	"while" => Reduce #7 statement call conditional_if
	"new" => Reduce #7 statement call conditional_if
	"cast" => Reduce #7 statement call conditional_if
	"null" => Reduce #7 statement call conditional_if
[372]
	$ => Reduce #7 statement call conditional_while
	BOOLEAN => Reduce #7 statement call conditional_while
	IDENT => Reduce #7 statement call conditional_while
	DQSTRING => Reduce #7 statement call conditional_while
	SQSTRING => Reduce #7 statement call conditional_while
	CARDINAL => Reduce #7 statement call conditional_while
	INTEGER => Reduce #7 statement call conditional_while
	FLOAT => Reduce #7 statement call conditional_while
	"function" => Reduce #7 statement call conditional_while
	'(' => Reduce #7 statement call conditional_while
	"procedure" => Reduce #7 statement call conditional_while
	'&' => Reduce #7 statement call conditional_while
	"typedef" => Reduce #7 statement call conditional_while
	'{' => Reduce #7 statement call conditional_while
	'}' => Reduce #7 statement call conditional_while
	"private" => Reduce #7 statement call conditional_while
	"public" => Reduce #7 statement call conditional_while
	'+' => Reduce #7 statement call conditional_while
	'-' => Reduce #7 statement call conditional_while
	'*' => Reduce #7 statement call conditional_while
	'~' => Reduce #7 statement call conditional_while
	'!' => Reduce #7 statement call conditional_while
	"var" => Reduce #7 statement call conditional_while
	"return" => Reduce #7 statement call conditional_while
	"delete" => Reduce #7 statement call conditional_while
	"if" => Reduce #7 statement call conditional_while
	"while" => Reduce #7 statement call conditional_while
	"new" => Reduce #7 statement call conditional_while
	"cast" => Reduce #7 statement call conditional_while
	"null" => Reduce #7 statement call conditional_while
[373]
	$ => Reduce #7 callablebody_const call callablebody
	BOOLEAN => Reduce #7 callablebody_const call callablebody
	IDENT => Reduce #7 callablebody_const call callablebody
	DQSTRING => Reduce #7 callablebody_const call callablebody
	SQSTRING => Reduce #7 callablebody_const call callablebody
	CARDINAL => Reduce #7 callablebody_const call callablebody
	INTEGER => Reduce #7 callablebody_const call callablebody
	FLOAT => Reduce #7 callablebody_const call callablebody
	"function" => Reduce #7 callablebody_const call callablebody
	'(' => Reduce #7 callablebody_const call callablebody
	"procedure" => Reduce #7 callablebody_const call callablebody
	"const" => Reduce #7 callablebody_const call callablebody
	"operator" => Reduce #7 callablebody_const call callablebody
	'&' => Reduce #7 callablebody_const call callablebody
	"any" => Reduce #7 callablebody_const call callablebody
	"class" => Reduce #7 callablebody_const call callablebody
	"struct" => Reduce #7 callablebody_const call callablebody
	"typedef" => Reduce #7 callablebody_const call callablebody
	'{' => Reduce #7 callablebody_const call callablebody
	'}' => Reduce #7 callablebody_const call callablebody
	"interface" => Reduce #7 callablebody_const call callablebody
	"private" => Reduce #7 callablebody_const call callablebody
	"public" => Reduce #7 callablebody_const call callablebody
	"constructor" => Reduce #7 callablebody_const call callablebody
	"destructor" => Reduce #7 callablebody_const call callablebody
	'+' => Reduce #7 callablebody_const call callablebody
	'-' => Reduce #7 callablebody_const call callablebody
	'*' => Reduce #7 callablebody_const call callablebody
	'~' => Reduce #7 callablebody_const call callablebody
	'!' => Reduce #7 callablebody_const call callablebody
	"main" => Reduce #7 callablebody_const call callablebody
	"var" => Reduce #7 callablebody_const call callablebody
	"return" => Reduce #7 callablebody_const call callablebody
	"delete" => Reduce #7 callablebody_const call callablebody
	"if" => Reduce #7 callablebody_const call callablebody
	"while" => Reduce #7 callablebody_const call callablebody
	"new" => Reduce #7 callablebody_const call callablebody
	"cast" => Reduce #7 callablebody_const call callablebody
	"null" => Reduce #7 callablebody_const call callablebody
[374]
	$ => Reduce #7 interface_definition call interface_funcdef {const=false}
	"function" => Reduce #7 interface_definition call interface_funcdef {const=false}
	"procedure" => Reduce #7 interface_definition call interface_funcdef {const=false}
	"operator" => Reduce #7 interface_definition call interface_funcdef {const=false}
	'}' => Reduce #7 interface_definition call interface_funcdef {const=false}
[375]
	';' => Shift goto 381
[376]
	$ => Reduce #7 interface_definition call interface_procdef {const=true}
	"function" => Reduce #7 interface_definition call interface_procdef {const=true}
	"procedure" => Reduce #7 interface_definition call interface_procdef {const=true}
	"operator" => Reduce #7 interface_definition call interface_procdef {const=true}
	'}' => Reduce #7 interface_definition call interface_procdef {const=true}
[377]
	$ => Reduce #7 interface_definition call interface_operator_funcdef {const=false}
	"function" => Reduce #7 interface_definition call interface_operator_funcdef {const=false}
	"procedure" => Reduce #7 interface_definition call interface_operator_funcdef {const=false}
	"operator" => Reduce #7 interface_definition call interface_operator_funcdef {const=false}
	'}' => Reduce #7 interface_definition call interface_operator_funcdef {const=false}
[378]
	';' => Shift goto 382
[379]
	$ => Reduce #7 interface_definition call interface_operator_procdef {const=true}
	"function" => Reduce #7 interface_definition call interface_operator_procdef {const=true}
	"procedure" => Reduce #7 interface_definition call interface_operator_procdef {const=true}
	"operator" => Reduce #7 interface_definition call interface_operator_procdef {const=true}
	'}' => Reduce #7 interface_definition call interface_operator_procdef {const=true}
[380]
	'{' => Shift goto 383
[381]
	$ => Reduce #8 interface_definition call interface_funcdef {const=true}
	"function" => Reduce #8 interface_definition call interface_funcdef {const=true}
	"procedure" => Reduce #8 interface_definition call interface_funcdef {const=true}
	"operator" => Reduce #8 interface_definition call interface_funcdef {const=true}
	'}' => Reduce #8 interface_definition call interface_funcdef {const=true}
[382]
	$ => Reduce #8 interface_definition call interface_operator_funcdef {const=true}
	"function" => Reduce #8 interface_definition call interface_operator_funcdef {const=true}
	"procedure" => Reduce #8 interface_definition call interface_operator_funcdef {const=true}
	"operator" => Reduce #8 interface_definition call interface_operator_funcdef {const=true}
	'}' => Reduce #8 interface_definition call interface_operator_funcdef {const=true}
[383]
	BOOLEAN => Shift goto 78
	IDENT => Shift goto 79
	DQSTRING => Shift goto 80
	SQSTRING => Shift goto 81
	CARDINAL => Shift goto 82
	INTEGER => Shift goto 83
	FLOAT => Shift goto 84
	"function" => Reduce #0 linkage call linkage {private=false,linkage="external"}
	'(' => Shift goto 85
	"procedure" => Reduce #0 linkage call linkage {private=false,linkage="external"}
	'&' => Shift goto 86
	"typedef" => Shift goto 22
	'{' => Shift goto 87
	'}' => Reduce #0 statementlist
	"private" => Shift goto 24
	"public" => Shift goto 25
	'+' => Shift goto 88
	'-' => Shift goto 89
	'*' => Shift goto 90
	'~' => Shift goto 91
	'!' => Shift goto 92
	"var" => Shift goto 93
	"return" => Shift goto 94
	"delete" => Shift goto 95
	"if" => Shift goto 96
	"while" => Shift goto 97
	"new" => Shift goto 98
	"cast" => Shift goto 99
	"null" => Shift goto 100
[384]
	'}' => Shift goto 385
[385]
	$ => Reduce #11 statement call conditional_if_else
	BOOLEAN => Reduce #11 statement call conditional_if_else
	IDENT => Reduce #11 statement call conditional_if_else
	DQSTRING => Reduce #11 statement call conditional_if_else
	SQSTRING => Reduce #11 statement call conditional_if_else
	CARDINAL => Reduce #11 statement call conditional_if_else
	INTEGER => Reduce #11 statement call conditional_if_else
	FLOAT => Reduce #11 statement call conditional_if_else
	"function" => Reduce #11 statement call conditional_if_else
	'(' => Reduce #11 statement call conditional_if_else
	"procedure" => Reduce #11 statement call conditional_if_else
	'&' => Reduce #11 statement call conditional_if_else
	"typedef" => Reduce #11 statement call conditional_if_else
	'{' => Reduce #11 statement call conditional_if_else
	'}' => Reduce #11 statement call conditional_if_else
	"private" => Reduce #11 statement call conditional_if_else
	"public" => Reduce #11 statement call conditional_if_else
	'+' => Reduce #11 statement call conditional_if_else
	'-' => Reduce #11 statement call conditional_if_else
	'*' => Reduce #11 statement call conditional_if_else
	'~' => Reduce #11 statement call conditional_if_else
	'!' => Reduce #11 statement call conditional_if_else
	"var" => Reduce #11 statement call conditional_if_else
	"return" => Reduce #11 statement call conditional_if_else
	"delete" => Reduce #11 statement call conditional_if_else
	"if" => Reduce #11 statement call conditional_if_else
	"while" => Reduce #11 statement call conditional_if_else
	"new" => Reduce #11 statement call conditional_if_else
	"cast" => Reduce #11 statement call conditional_if_else
	"null" => Reduce #11 statement call conditional_if_else

-- Goto table:
[1]
	extern_definitionlist => 2
	extern_definition => 3
[2]
	free_definitionlist => 5
	struct_definition => 6
	free_definition => 7
	typename => 8
	typespec => 9
	typedefinition => 10
	structdefinition => 11
	interfacedefinition => 12
	classdefinition => 13
	linkage => 14
	functiondefinition => 15
	variabledefinition => 16
[3]
	extern_definitionlist => 26
	extern_definition => 3
[5]
	main_procedure => 28
[7]
	free_definitionlist => 30
	struct_definition => 6
	free_definition => 7
	typename => 8
	typespec => 9
	typedefinition => 10
	structdefinition => 11
	interfacedefinition => 12
	classdefinition => 13
	linkage => 14
	functiondefinition => 15
	variabledefinition => 16
[18]
	typename => 39
[22]
	typename => 45
	typepath => 46
[38]
	typename => 57
[50]
	typedefinition => 71
	linkage => 14
	functiondefinition => 72
	codeblock => 73
	statementlist => 74
	statement => 75
	expression => 76
	iexpression => 77
[53]
	expression => 102
	iexpression => 77
[54]
	expression => 104
	iexpression => 77
[55]
	typename => 8
	typespec => 105
[56]
	callablebody => 106
	callablebody_const => 107
[64]
	class_definitionlist => 113
	class_definition => 114
	typename => 8
	typespec => 9
	typedefinition => 115
	structdefinition => 116
	interfacedefinition => 117
	classdefinition => 118
	linkage => 119
	functiondefinition => 120
	constructordefinition => 121
	operatordefinition => 122
	variabledefinition => 123
[65]
	typename => 45
	typepath => 125
	inheritlist => 126
[66]
	struct_definitionlist => 127
	struct_definition => 128
	typename => 8
	typespec => 9
	typedefinition => 10
	structdefinition => 11
	variabledefinition => 16
[68]
	interface_definitionlist => 129
	interface_definition => 130
[69]
	typename => 8
	typespec => 134
[75]
	typedefinition => 71
	linkage => 14
	functiondefinition => 72
	statementlist => 138
	statement => 75
	expression => 76
	iexpression => 77
[76]
	indirection => 139
[85]
	expression => 176
	iexpression => 77
[86]
	expression => 177
	iexpression => 77
[87]
	typedefinition => 71
	linkage => 14
	functiondefinition => 72
	codeblock => 178
	statementlist => 74
	statement => 75
	expression => 179
	iexpression => 77
	expressionlist => 180
[88]
	expression => 182
	iexpression => 77
[89]
	expression => 183
	iexpression => 77
[90]
	expression => 184
	iexpression => 77
[91]
	expression => 185
	iexpression => 77
[92]
	expression => 186
	iexpression => 77
[93]
	typename => 8
	typespec => 9
	variabledefinition => 187
[94]
	expression => 188
	iexpression => 77
[95]
	expression => 189
	iexpression => 77
[98]
	typename => 8
	typespec => 192
[99]
	typename => 8
	typespec => 193
[102]
	indirection => 139
[103]
	expression => 194
	iexpression => 77
	expressionlist => 180
[104]
	indirection => 139
[105]
	callablebody => 196
	callablebody_const => 197
[108]
	typename => 8
	typespec => 198
	parameterlist => 199
	parameters => 200
	paramdecl => 201
[114]
	class_definitionlist => 204
	class_definition => 114
	typename => 8
	typespec => 9
	typedefinition => 115
	structdefinition => 116
	interfacedefinition => 117
	classdefinition => 118
	linkage => 119
	functiondefinition => 120
	constructordefinition => 121
	operatordefinition => 122
	variabledefinition => 123
[128]
	struct_definitionlist => 213
	struct_definition => 128
	typename => 8
	typespec => 9
	typedefinition => 10
	structdefinition => 11
	variabledefinition => 16
[130]
	interface_definitionlist => 215
	interface_definition => 130
[133]
	operatordecl => 218
[135]
	extern_parameters => 243
	extern_paramlist => 244
	typename => 8
	typespec => 245
[140]
	expression => 194
	iexpression => 77
	expressionlist => 247
[142]
	expression => 249
	iexpression => 77
[143]
	expression => 250
	iexpression => 77
[144]
	indirection => 251
[145]
	expression => 252
	iexpression => 77
[146]
	expression => 253
	iexpression => 77
[147]
	expression => 254
	iexpression => 77
[148]
	expression => 255
	iexpression => 77
[149]
	expression => 256
	iexpression => 77
[150]
	expression => 257
	iexpression => 77
[151]
	expression => 258
	iexpression => 77
[152]
	expression => 259
	iexpression => 77
[153]
	expression => 260
	iexpression => 77
[154]
	expression => 261
	iexpression => 77
[155]
	expression => 262
	iexpression => 77
[156]
	expression => 194
	iexpression => 77
	expressionlist => 263
[157]
	expression => 264
	iexpression => 77
[158]
	expression => 265
	iexpression => 77
[159]
	expression => 266
	iexpression => 77
[160]
	expression => 267
	iexpression => 77
[161]
	expression => 268
	iexpression => 77
[162]
	expression => 269
	iexpression => 77
[163]
	expression => 270
	iexpression => 77
[164]
	expression => 271
	iexpression => 77
[165]
	expression => 272
	iexpression => 77
[166]
	expression => 273
	iexpression => 77
[167]
	expression => 274
	iexpression => 77
[168]
	expression => 275
	iexpression => 77
[169]
	expression => 276
	iexpression => 77
[170]
	expression => 277
	iexpression => 77
[171]
	expression => 278
	iexpression => 77
[172]
	expression => 279
	iexpression => 77
[173]
	expression => 280
	iexpression => 77
[174]
	expression => 281
	iexpression => 77
[176]
	indirection => 139
[177]
	indirection => 139
[179]
	indirection => 139
[182]
	indirection => 139
[183]
	indirection => 139
[184]
	indirection => 139
[185]
	indirection => 139
[186]
	indirection => 139
[188]
	indirection => 139
[189]
	indirection => 139
[190]
	expression => 290
	iexpression => 77
[191]
	expression => 291
	iexpression => 77
[194]
	indirection => 139
[206]
	operatordecl => 298
[207]
	callablebody => 299
[209]
	typedefinition => 71
	linkage => 14
	functiondefinition => 72
	codeblock => 301
	statementlist => 74
	statement => 75
	expression => 76
	iexpression => 77
[210]
	typename => 45
	typepath => 125
	inheritlist => 302
[211]
	class_definitionlist => 303
	class_definition => 114
	typename => 8
	typespec => 9
	typedefinition => 115
	structdefinition => 116
	interfacedefinition => 117
	classdefinition => 118
	linkage => 119
	functiondefinition => 120
	constructordefinition => 121
	operatordefinition => 122
	variabledefinition => 123
[216]
	typename => 8
	typespec => 304
[218]
	typename => 8
	typespec => 306
[242]
	extern_parameters => 243
	extern_paramlist => 310
	typename => 8
	typespec => 245
[249]
	indirection => 139
[250]
	indirection => 139
[252]
	indirection => 139
[253]
	indirection => 139
[254]
	indirection => 139
[255]
	indirection => 139
[256]
	indirection => 139
[257]
	indirection => 139
[258]
	indirection => 139
[259]
	indirection => 139
[260]
	indirection => 139
[261]
	indirection => 139
[262]
	indirection => 139
[264]
	indirection => 139
[265]
	indirection => 139
[266]
	indirection => 139
[267]
	indirection => 139
[268]
	indirection => 139
[269]
	indirection => 139
[270]
	indirection => 139
[271]
	indirection => 139
[272]
	indirection => 139
[273]
	indirection => 139
[274]
	indirection => 139
[275]
	indirection => 139
[276]
	indirection => 139
[277]
	indirection => 139
[278]
	indirection => 139
[279]
	indirection => 139
[280]
	indirection => 139
[281]
	indirection => 139
[285]
	expression => 194
	iexpression => 77
	expressionlist => 317
[290]
	indirection => 139
[291]
	indirection => 139
[292]
	expression => 320
	iexpression => 77
[294]
	expression => 322
	iexpression => 77
[297]
	typename => 8
	typespec => 198
	parameters => 325
	paramdecl => 201
[298]
	typename => 8
	typespec => 326
	callablebody => 327
	callablebody_const => 328
[300]
	typename => 8
	typespec => 198
	parameterlist => 329
	parameters => 200
	paramdecl => 201
[305]
	extern_parameters => 243
	extern_paramlist => 333
	typename => 8
	typespec => 245
[307]
	extern_parameters => 243
	extern_paramlist => 335
	typename => 8
	typespec => 245
[314]
	extern_parameters => 341
	typename => 8
	typespec => 245
[320]
	indirection => 139
[321]
	expression => 344
	iexpression => 77
[322]
	indirection => 139
[324]
	typedefinition => 71
	linkage => 14
	functiondefinition => 72
	codeblock => 347
	statementlist => 74
	statement => 75
	expression => 76
	iexpression => 77
[326]
	callablebody => 348
	callablebody_const => 349
[332]
	extern_parameters => 243
	extern_paramlist => 351
	typename => 8
	typespec => 245
[334]
	extern_parameters => 243
	extern_paramlist => 353
	typename => 8
	typespec => 245
[340]
	extern_parameters => 358
	typename => 8
	typespec => 245
[342]
	typedefinition => 71
	linkage => 14
	functiondefinition => 72
	codeblock => 359
	statementlist => 74
	statement => 75
	expression => 76
	iexpression => 77
[343]
	typedefinition => 71
	linkage => 14
	functiondefinition => 72
	codeblock => 360
	statementlist => 74
	statement => 75
	expression => 76
	iexpression => 77
[344]
	indirection => 139
[346]
	typedefinition => 71
	linkage => 14
	functiondefinition => 72
	codeblock => 362
	statementlist => 74
	statement => 75
	expression => 76
	iexpression => 77
[383]
	typedefinition => 71
	linkage => 14
	functiondefinition => 72
	codeblock => 384
	statementlist => 74
	statement => 75
	expression => 76
	iexpression => 77

