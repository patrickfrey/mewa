== Language 'test', type system 'language1/typesystem' ==
-- Lexems:
TOKEN BOOLEAN ((true)|(false)) 0 [tf]  ~ 1
TOKEN IDENT [a-zA-Z_]+[a-zA-Z_0-9]* 0 [abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_]  ~ 2
TOKEN DQSTRING ["]((([^\\"\n]+)|([\\][^"\n]))*)["] 1 ["]  ~ 3
TOKEN SQSTRING [']((([^\\'\n]+)|([\\][^'\n]))*)['] 1 [']  ~ 4
TOKEN CARDINAL [0123456789]+ 0 [0123456789]  ~ 5
TOKEN INTEGER [-][0123456789]+ 0 [-]  ~ 6
TOKEN FLOAT [-]{0,1}[0123456789]+[.][0123456789]+ 0 [-]  ~ 7
TOKEN FLOAT [-]{0,1}[0123456789]+[.][0123456789]+[Ee][+-]{0,1}[0123456789]+ 0 [-]  ~ 7
KEYWORD extern [e] ~ 8
KEYWORD function [f] ~ 9
KEYWORD ( [(] ~ 10
KEYWORD ) [)] ~ 11
KEYWORD ; [;] ~ 12
KEYWORD procedure [p] ~ 13
KEYWORD ... [.] ~ 14
KEYWORD , [,] ~ 15
KEYWORD const [c] ~ 16
KEYWORD :: [:] ~ 17
KEYWORD & [&] ~ 18
KEYWORD ^ [^] ~ 19
KEYWORD typedef [t] ~ 20
KEYWORD struct [s] ~ 21
KEYWORD { [{] ~ 22
KEYWORD } [}] ~ 23
KEYWORD interface [i] ~ 24
KEYWORD class [c] ~ 25
KEYWORD : [:] ~ 26
KEYWORD private [p] ~ 27
KEYWORD public [p] ~ 28
KEYWORD constructor [c] ~ 29
KEYWORD destructor [d] ~ 30
KEYWORD operator [o] ~ 31
KEYWORD -> [-] ~ 32
KEYWORD = [=] ~ 33
KEYWORD + [+] ~ 34
KEYWORD - [-] ~ 35
KEYWORD * [*] ~ 36
KEYWORD / [/] ~ 37
KEYWORD % [%] ~ 38
KEYWORD && [&] ~ 39
KEYWORD || [|] ~ 40
KEYWORD | [|] ~ 41
KEYWORD << [<] ~ 42
KEYWORD >> [>] ~ 43
KEYWORD ~ [~] ~ 44
KEYWORD ! [!] ~ 45
KEYWORD [ [[] ~ 46
KEYWORD ] []] ~ 47
KEYWORD == [=] ~ 48
KEYWORD != [!] ~ 49
KEYWORD >= [>] ~ 50
KEYWORD <= [<] ~ 51
KEYWORD > [>] ~ 52
KEYWORD < [<] ~ 53
KEYWORD main [m] ~ 54
KEYWORD var [v] ~ 55
KEYWORD return [r] ~ 56
KEYWORD delete [d] ~ 57
KEYWORD if [i] ~ 58
KEYWORD else [e] ~ 59
KEYWORD while [w] ~ 60
KEYWORD new [n] ~ 61
KEYWORD null [n] ~ 62
KEYWORD += [+] ~ 63
KEYWORD -= [-] ~ 64
KEYWORD *= [*] ~ 65
KEYWORD /= [/] ~ 66
KEYWORD ^= [^] ~ 67
KEYWORD &= [&] ~ 68
KEYWORD %= [%] ~ 69
KEYWORD &&= [&] ~ 70
KEYWORD ||= [|] ~ 71
KEYWORD |= [|] ~ 72
KEYWORD <<= [<] ~ 73
KEYWORD >>= [>] ~ 74
KEYWORD . [.] ~ 75
COMMENT /* */ [/]
COMMENT // [/]

-- Nonterminals:
(1) program
(2) extern_definitionlist
(3) free_definitionlist
(4) struct_definitionlist
(5) class_definitionlist
(6) interface_definitionlist
(7) extern_definition
(8) extern_parameters
(9) extern_paramlist
(10) interface_definition
(11) struct_definition
(12) class_definition
(13) free_definition
(14) typename
(15) typespec
(16) typepath
(17) typedefinition
(18) structdefinition
(19) interfacedefinition
(20) inheritlist
(21) classdefinition
(22) linkage
(23) functiondefinition
(24) constructordefinition
(25) operatordefinition
(26) callablebody
(27) main_procedure
(28) parameterlist
(29) parameters
(30) paramdecl
(31) codeblock
(32) statementlist
(33) statement
(34) variabledefinition
(35) expression
(36) iexpression
(37) indirection
(38) expressionlist

-- Productions:
program = extern_definitionlist free_definitionlist main_procedure (1)
extern_definitionlist = extern_definition extern_definitionlist
extern_definitionlist = 
free_definitionlist = free_definition free_definitionlist
free_definitionlist = 
struct_definitionlist = struct_definition struct_definitionlist
struct_definitionlist = 
class_definitionlist = class_definition class_definitionlist
class_definitionlist = 
interface_definitionlist = interface_definition interface_definitionlist
interface_definitionlist = 
extern_definition = "extern" DQSTRING "function" typespec IDENT "(" extern_paramlist ")" ";" (2)
extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist ")" ";" (3)
extern_definition = "extern" DQSTRING "function" typespec IDENT "(" extern_paramlist "..." ")" ";" (4)
extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist "..." ")" ";" (5)
extern_parameters = typespec "," extern_parameters
extern_parameters = typespec
extern_paramlist = extern_parameters (6)
extern_paramlist =  (6)
interface_definition = "function" typespec IDENT "(" parameterlist ")" ";" (7)
interface_definition = "function" typespec IDENT "(" parameterlist ")" "const" ";" (8)
interface_definition = "procedure" IDENT "(" parameterlist ")" ";" (9)
interface_definition = "procedure" IDENT "(" parameterlist ")" "const" ";" (10)
struct_definition = typedefinition ";" (11)
struct_definition = variabledefinition ";" (11)
struct_definition = structdefinition (11)
class_definition = typedefinition ";" (11)
class_definition = variabledefinition ";" (11)
class_definition = structdefinition (11)
class_definition = classdefinition (11)
class_definition = interfacedefinition (11)
class_definition = constructordefinition (12)
class_definition = functiondefinition (12)
class_definition = operatordefinition (12)
free_definition = struct_definition
free_definition = functiondefinition (11)
free_definition = classdefinition (11)
free_definition = interfacedefinition (11)
typename/L1 = IDENT
typename/L1 = IDENT "::" typename
typespec/L1 = typename (13)
typespec/L1 = "const" typename (14)
typespec/L1 = typename "&" (15)
typespec/L1 = "const" typename "&" (16)
typespec/L1 = typename "^" (17)
typespec/L1 = "const" typename "^" (18)
typespec/L1 = typename "^" "&" (19)
typespec/L1 = "const" typename "^" "&" (20)
typespec/L1 = typename "^" "^" (21)
typespec/L1 = "const" typename "^" "^" (22)
typespec/L1 = typename "^" "^" "&" (23)
typespec/L1 = "const" typename "^" "^" "&" (24)
typepath/L1 = typename (13)
typedefinition = "typedef" typepath IDENT (step:25)
structdefinition = "struct" IDENT "{" struct_definitionlist "}" (step:26)
interfacedefinition = "interface" IDENT "{" interface_definitionlist "}" (step:27)
inheritlist = typepath "," inheritlist (step:28)
inheritlist = typepath (step:28)
classdefinition = "class" IDENT "{" class_definitionlist "}" (step:29)
classdefinition = "class" IDENT ":" inheritlist "{" class_definitionlist "}" (step:29)
linkage = "private" (30)
linkage = "public" (31)
linkage =  (30)
functiondefinition = linkage "function" typespec IDENT callablebody (32)
functiondefinition = linkage "procedure" IDENT callablebody (33)
constructordefinition = linkage "constructor" callablebody (34)
constructordefinition = "destructor" "{" codeblock "}" (35)
operatordefinition = linkage "operator" "->" typespec callablebody (36)
operatordefinition = linkage "operator" "=" typespec callablebody (37)
operatordefinition = linkage "operator" "+" typespec callablebody (38)
operatordefinition = linkage "operator" "-" typespec callablebody (39)
operatordefinition = linkage "operator" "*" typespec callablebody (40)
operatordefinition = linkage "operator" "/" typespec callablebody (41)
operatordefinition = linkage "operator" "%" typespec callablebody (42)
operatordefinition = linkage "operator" "&&" typespec callablebody (43)
operatordefinition = linkage "operator" "||" typespec callablebody (44)
operatordefinition = linkage "operator" "&" typespec callablebody (45)
operatordefinition = linkage "operator" "|" typespec callablebody (46)
operatordefinition = linkage "operator" "<<" typespec callablebody (47)
operatordefinition = linkage "operator" ">>" typespec callablebody (48)
operatordefinition = linkage "operator" "~" typespec callablebody (49)
operatordefinition = linkage "operator" "!" typespec callablebody (50)
operatordefinition = linkage "operator" "(" ")" typespec callablebody (51)
operatordefinition = linkage "operator" "[" "]" typespec callablebody (52)
operatordefinition = linkage "operator" "==" typespec callablebody (53)
operatordefinition = linkage "operator" "!=" typespec callablebody (54)
operatordefinition = linkage "operator" ">=" typespec callablebody (55)
operatordefinition = linkage "operator" "<=" typespec callablebody (56)
operatordefinition = linkage "operator" ">" typespec callablebody (57)
operatordefinition = linkage "operator" "<" typespec callablebody (58)
callablebody = "(" parameterlist ")" "{" codeblock "}" (scope:59)
callablebody = "(" parameterlist ")" "const" "{" codeblock "}" (scope:60)
main_procedure = "main" "{" codeblock "}" (scope:61)
main_procedure = 
parameterlist = parameters (62)
parameterlist =  (62)
parameters = paramdecl "," parameters
parameters = paramdecl
paramdecl = typespec IDENT (63)
codeblock = statementlist (64)
statementlist = statement statementlist (step)
statementlist = 
statement/L1 = functiondefinition (65)
statement/L1 = typedefinition ";" (65)
statement/L1 = "var" variabledefinition ";" (65)
statement/L1 = expression ";" (66)
statement/L1 = "return" expression ";" (step:67)
statement/L1 = "delete" expression ";" (68)
statement/L1 = "if" "(" expression ")" "{" codeblock "}" (scope:69)
statement/L1 = "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}" (scope:70)
statement/L1 = "while" "(" expression ")" "{" codeblock "}" (scope:71)
statement/L1 = "{" codeblock "}" (scope)
variabledefinition = typespec IDENT (step:72)
variabledefinition = typespec IDENT "=" expression (step:73)
variabledefinition = typespec IDENT "[" expression "]" "=" expression (step:74)
variabledefinition = typespec IDENT "[" expression "]" (step:75)
expression/L1 = "{" expressionlist "}" (76)
expression/L1 = "{" "}" (76)
expression/L1 = "new" typespec ":" expression (77)
expression/L2 = IDENT (78)
expression/L2 = BOOLEAN (79)
expression/L2 = CARDINAL (80)
expression/L2 = INTEGER (81)
expression/L2 = FLOAT (82)
expression/L2 = "null" (83)
expression/L2 = DQSTRING (84)
expression/L2 = SQSTRING (85)
expression/L2 = "(" expression ")"
expression/L3 = expression "=" expression (86)
expression/L3 = expression "+=" expression (87)
expression/L3 = expression "-=" expression (88)
expression/L3 = expression "*=" expression (89)
expression/L3 = expression "/=" expression (90)
expression/L3 = expression "^=" expression (91)
expression/L3 = expression "&=" expression (92)
expression/L3 = expression "%=" expression (93)
expression/L3 = expression "&&=" expression (94)
expression/L3 = expression "||=" expression (95)
expression/L3 = expression "&=" expression (92)
expression/L3 = expression "|=" expression (96)
expression/L3 = expression "<<=" expression (97)
expression/L3 = expression ">>=" expression (98)
expression/L4 = expression "||" expression (99)
expression/L5 = expression "&&" expression (100)
expression/L6 = expression "|" expression (101)
expression/L7 = expression "^" expression (102)
expression/L7 = expression "&" expression (103)
expression/L8 = expression "==" expression (104)
expression/L8 = expression "!=" expression (105)
expression/L8 = expression "<=" expression (106)
expression/L8 = expression "<" expression (107)
expression/L8 = expression ">=" expression (108)
expression/L8 = expression ">" expression (109)
expression/L9 = expression "+" expression (110)
expression/L9 = expression "-" expression (111)
expression/L9 = "&" expression (103)
expression/L9 = "-" expression (111)
expression/L9 = "+" expression (110)
expression/L9 = "~" expression (112)
expression/L9 = "!" expression (113)
expression/L10 = expression "*" expression (114)
expression/L10 = expression "/" expression (115)
expression/L10 = expression "%" expression (116)
expression/L11 = expression "<<" expression (117)
expression/L11 = expression ">>" expression (118)
expression/L12 = iexpression
expression/L12 = expression "." IDENT (119)
expression/L12 = "*" expression (120)
expression/L13 = expression "(" expressionlist ")" (121)
expression/L13 = expression "(" ")" (121)
expression/L13 = expression "[" expressionlist "]" (122)
iexpression = expression indirection IDENT (123)
indirection = "->" indirection (124)
indirection = "->" (124)
expressionlist = expression "," expressionlist
expressionlist = expression

-- LR(0) states:
[1]
	program = . extern_definitionlist free_definitionlist main_procedure
	extern_definitionlist = . extern_definition extern_definitionlist
	extern_definitionlist = .
	extern_definition = . "extern" DQSTRING "function" typespec IDENT "(" extern_paramlist ")" ";"
	extern_definition = . "extern" DQSTRING "procedure" IDENT "(" extern_paramlist ")" ";"
	extern_definition = . "extern" DQSTRING "function" typespec IDENT "(" extern_paramlist "..." ")" ";"
	extern_definition = . "extern" DQSTRING "procedure" IDENT "(" extern_paramlist "..." ")" ";"
[2]
	program = extern_definitionlist . free_definitionlist main_procedure
	free_definitionlist = . free_definition free_definitionlist
	free_definitionlist = .
	struct_definition = . typedefinition ";"
	struct_definition = . variabledefinition ";"
	struct_definition = . structdefinition
	free_definition = . struct_definition
	free_definition = . functiondefinition
	free_definition = . classdefinition
	free_definition = . interfacedefinition
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	typedefinition = . "typedef" typepath IDENT
	structdefinition = . "struct" IDENT "{" struct_definitionlist "}"
	interfacedefinition = . "interface" IDENT "{" interface_definitionlist "}"
	classdefinition = . "class" IDENT "{" class_definitionlist "}"
	classdefinition = . "class" IDENT ":" inheritlist "{" class_definitionlist "}"
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" typespec IDENT callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody
	variabledefinition = . typespec IDENT
	variabledefinition = . typespec IDENT "=" expression
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression
	variabledefinition = . typespec IDENT "[" expression "]"
[3]
	extern_definitionlist = . extern_definition extern_definitionlist
	extern_definitionlist = extern_definition . extern_definitionlist
	extern_definitionlist = .
	extern_definition = . "extern" DQSTRING "function" typespec IDENT "(" extern_paramlist ")" ";"
	extern_definition = . "extern" DQSTRING "procedure" IDENT "(" extern_paramlist ")" ";"
	extern_definition = . "extern" DQSTRING "function" typespec IDENT "(" extern_paramlist "..." ")" ";"
	extern_definition = . "extern" DQSTRING "procedure" IDENT "(" extern_paramlist "..." ")" ";"
[4]
	extern_definition = "extern" . DQSTRING "function" typespec IDENT "(" extern_paramlist ")" ";"
	extern_definition = "extern" . DQSTRING "procedure" IDENT "(" extern_paramlist ")" ";"
	extern_definition = "extern" . DQSTRING "function" typespec IDENT "(" extern_paramlist "..." ")" ";"
	extern_definition = "extern" . DQSTRING "procedure" IDENT "(" extern_paramlist "..." ")" ";"
[5]
	program = extern_definitionlist free_definitionlist . main_procedure
	main_procedure = . "main" "{" codeblock "}"
	main_procedure = .
[6]
	free_definition = struct_definition .
[7]
	free_definitionlist = . free_definition free_definitionlist
	free_definitionlist = free_definition . free_definitionlist
	free_definitionlist = .
	struct_definition = . typedefinition ";"
	struct_definition = . variabledefinition ";"
	struct_definition = . structdefinition
	free_definition = . struct_definition
	free_definition = . functiondefinition
	free_definition = . classdefinition
	free_definition = . interfacedefinition
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	typedefinition = . "typedef" typepath IDENT
	structdefinition = . "struct" IDENT "{" struct_definitionlist "}"
	interfacedefinition = . "interface" IDENT "{" interface_definitionlist "}"
	classdefinition = . "class" IDENT "{" class_definitionlist "}"
	classdefinition = . "class" IDENT ":" inheritlist "{" class_definitionlist "}"
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" typespec IDENT callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody
	variabledefinition = . typespec IDENT
	variabledefinition = . typespec IDENT "=" expression
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression
	variabledefinition = . typespec IDENT "[" expression "]"
[8]
	typespec/L1 = typename .
	typespec/L1 = typename . "&"
	typespec/L1 = typename . "^"
	typespec/L1 = typename . "^" "&"
	typespec/L1 = typename . "^" "^"
	typespec/L1 = typename . "^" "^" "&"
[9]
	variabledefinition = typespec . IDENT
	variabledefinition = typespec . IDENT "=" expression
	variabledefinition = typespec . IDENT "[" expression "]" "=" expression
	variabledefinition = typespec . IDENT "[" expression "]"
[10]
	struct_definition = typedefinition . ";"
[11]
	struct_definition = structdefinition .
[12]
	free_definition = interfacedefinition .
[13]
	free_definition = classdefinition .
[14]
	functiondefinition = linkage . "function" typespec IDENT callablebody
	functiondefinition = linkage . "procedure" IDENT callablebody
[15]
	free_definition = functiondefinition .
[16]
	struct_definition = variabledefinition . ";"
[17]
	typename/L1 = IDENT .
	typename/L1 = IDENT . "::" typename
[18]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = "const" . typename
	typespec/L1 = "const" . typename "&"
	typespec/L1 = "const" . typename "^"
	typespec/L1 = "const" . typename "^" "&"
	typespec/L1 = "const" . typename "^" "^"
	typespec/L1 = "const" . typename "^" "^" "&"
[19]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typepath/L1 = . typename
	typedefinition = "typedef" . typepath IDENT
[20]
	structdefinition = "struct" . IDENT "{" struct_definitionlist "}"
[21]
	interfacedefinition = "interface" . IDENT "{" interface_definitionlist "}"
[22]
	classdefinition = "class" . IDENT "{" class_definitionlist "}"
	classdefinition = "class" . IDENT ":" inheritlist "{" class_definitionlist "}"
[23]
	linkage = "private" .
[24]
	linkage = "public" .
[25]
	extern_definitionlist = extern_definition extern_definitionlist .
[26]
	extern_definition = "extern" DQSTRING . "function" typespec IDENT "(" extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING . "procedure" IDENT "(" extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING . "function" typespec IDENT "(" extern_paramlist "..." ")" ";"
	extern_definition = "extern" DQSTRING . "procedure" IDENT "(" extern_paramlist "..." ")" ";"
[27]
	program = extern_definitionlist free_definitionlist main_procedure .
[28]
	main_procedure = "main" . "{" codeblock "}"
[29]
	free_definitionlist = free_definition free_definitionlist .
[30]
	typespec/L1 = typename "&" .
[31]
	typespec/L1 = typename "^" .
	typespec/L1 = typename "^" . "&"
	typespec/L1 = typename "^" . "^"
	typespec/L1 = typename "^" . "^" "&"
[32]
	variabledefinition = typespec IDENT .
	variabledefinition = typespec IDENT . "=" expression
	variabledefinition = typespec IDENT . "[" expression "]" "=" expression
	variabledefinition = typespec IDENT . "[" expression "]"
[33]
	struct_definition = typedefinition ";" .
[34]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	functiondefinition = linkage "function" . typespec IDENT callablebody
[35]
	functiondefinition = linkage "procedure" . IDENT callablebody
[36]
	struct_definition = variabledefinition ";" .
[37]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typename/L1 = IDENT "::" . typename
[38]
	typespec/L1 = "const" typename .
	typespec/L1 = "const" typename . "&"
	typespec/L1 = "const" typename . "^"
	typespec/L1 = "const" typename . "^" "&"
	typespec/L1 = "const" typename . "^" "^"
	typespec/L1 = "const" typename . "^" "^" "&"
[39]
	typepath/L1 = typename .
[40]
	typedefinition = "typedef" typepath . IDENT
[41]
	structdefinition = "struct" IDENT . "{" struct_definitionlist "}"
[42]
	interfacedefinition = "interface" IDENT . "{" interface_definitionlist "}"
[43]
	classdefinition = "class" IDENT . "{" class_definitionlist "}"
	classdefinition = "class" IDENT . ":" inheritlist "{" class_definitionlist "}"
[44]
	extern_definition = "extern" DQSTRING "function" . typespec IDENT "(" extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING "function" . typespec IDENT "(" extern_paramlist "..." ")" ";"
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
[45]
	extern_definition = "extern" DQSTRING "procedure" . IDENT "(" extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING "procedure" . IDENT "(" extern_paramlist "..." ")" ";"
[46]
	typedefinition = . "typedef" typepath IDENT
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" typespec IDENT callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody
	main_procedure = "main" "{" . codeblock "}"
	codeblock = . statementlist
	statementlist = . statement statementlist
	statementlist = .
	statement/L1 = . functiondefinition
	statement/L1 = . typedefinition ";"
	statement/L1 = . "var" variabledefinition ";"
	statement/L1 = . expression ";"
	statement/L1 = . "return" expression ";"
	statement/L1 = . "delete" expression ";"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}"
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "{" codeblock "}"
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[47]
	typespec/L1 = typename "^" "&" .
[48]
	typespec/L1 = typename "^" "^" .
	typespec/L1 = typename "^" "^" . "&"
[49]
	variabledefinition = typespec IDENT "=" . expression
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[50]
	variabledefinition = typespec IDENT "[" . expression "]" "=" expression
	variabledefinition = typespec IDENT "[" . expression "]"
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[51]
	functiondefinition = linkage "function" typespec . IDENT callablebody
[52]
	functiondefinition = linkage "procedure" IDENT . callablebody
	callablebody = . "(" parameterlist ")" "{" codeblock "}"
	callablebody = . "(" parameterlist ")" "const" "{" codeblock "}"
[53]
	typename/L1 = IDENT "::" typename .
[54]
	typespec/L1 = "const" typename "&" .
[55]
	typespec/L1 = "const" typename "^" .
	typespec/L1 = "const" typename "^" . "&"
	typespec/L1 = "const" typename "^" . "^"
	typespec/L1 = "const" typename "^" . "^" "&"
[56]
	typedefinition = "typedef" typepath IDENT .
[57]
	struct_definitionlist = . struct_definition struct_definitionlist
	struct_definitionlist = .
	struct_definition = . typedefinition ";"
	struct_definition = . variabledefinition ";"
	struct_definition = . structdefinition
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	typedefinition = . "typedef" typepath IDENT
	structdefinition = . "struct" IDENT "{" struct_definitionlist "}"
	structdefinition = "struct" IDENT "{" . struct_definitionlist "}"
	variabledefinition = . typespec IDENT
	variabledefinition = . typespec IDENT "=" expression
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression
	variabledefinition = . typespec IDENT "[" expression "]"
[58]
	interface_definitionlist = . interface_definition interface_definitionlist
	interface_definitionlist = .
	interface_definition = . "function" typespec IDENT "(" parameterlist ")" ";"
	interface_definition = . "function" typespec IDENT "(" parameterlist ")" "const" ";"
	interface_definition = . "procedure" IDENT "(" parameterlist ")" ";"
	interface_definition = . "procedure" IDENT "(" parameterlist ")" "const" ";"
	interfacedefinition = "interface" IDENT "{" . interface_definitionlist "}"
[59]
	class_definitionlist = . class_definition class_definitionlist
	class_definitionlist = .
	class_definition = . typedefinition ";"
	class_definition = . variabledefinition ";"
	class_definition = . structdefinition
	class_definition = . classdefinition
	class_definition = . interfacedefinition
	class_definition = . constructordefinition
	class_definition = . functiondefinition
	class_definition = . operatordefinition
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	typedefinition = . "typedef" typepath IDENT
	structdefinition = . "struct" IDENT "{" struct_definitionlist "}"
	interfacedefinition = . "interface" IDENT "{" interface_definitionlist "}"
	classdefinition = . "class" IDENT "{" class_definitionlist "}"
	classdefinition = "class" IDENT "{" . class_definitionlist "}"
	classdefinition = . "class" IDENT ":" inheritlist "{" class_definitionlist "}"
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" typespec IDENT callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody
	constructordefinition = . linkage "constructor" callablebody
	constructordefinition = . "destructor" "{" codeblock "}"
	operatordefinition = . linkage "operator" "->" typespec callablebody
	operatordefinition = . linkage "operator" "=" typespec callablebody
	operatordefinition = . linkage "operator" "+" typespec callablebody
	operatordefinition = . linkage "operator" "-" typespec callablebody
	operatordefinition = . linkage "operator" "*" typespec callablebody
	operatordefinition = . linkage "operator" "/" typespec callablebody
	operatordefinition = . linkage "operator" "%" typespec callablebody
	operatordefinition = . linkage "operator" "&&" typespec callablebody
	operatordefinition = . linkage "operator" "||" typespec callablebody
	operatordefinition = . linkage "operator" "&" typespec callablebody
	operatordefinition = . linkage "operator" "|" typespec callablebody
	operatordefinition = . linkage "operator" "<<" typespec callablebody
	operatordefinition = . linkage "operator" ">>" typespec callablebody
	operatordefinition = . linkage "operator" "~" typespec callablebody
	operatordefinition = . linkage "operator" "!" typespec callablebody
	operatordefinition = . linkage "operator" "(" ")" typespec callablebody
	operatordefinition = . linkage "operator" "[" "]" typespec callablebody
	operatordefinition = . linkage "operator" "==" typespec callablebody
	operatordefinition = . linkage "operator" "!=" typespec callablebody
	operatordefinition = . linkage "operator" ">=" typespec callablebody
	operatordefinition = . linkage "operator" "<=" typespec callablebody
	operatordefinition = . linkage "operator" ">" typespec callablebody
	operatordefinition = . linkage "operator" "<" typespec callablebody
	variabledefinition = . typespec IDENT
	variabledefinition = . typespec IDENT "=" expression
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression
	variabledefinition = . typespec IDENT "[" expression "]"
[60]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typepath/L1 = . typename
	inheritlist = . typepath "," inheritlist
	inheritlist = . typepath
	classdefinition = "class" IDENT ":" . inheritlist "{" class_definitionlist "}"
[61]
	extern_definition = "extern" DQSTRING "function" typespec . IDENT "(" extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING "function" typespec . IDENT "(" extern_paramlist "..." ")" ";"
[62]
	extern_definition = "extern" DQSTRING "procedure" IDENT . "(" extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING "procedure" IDENT . "(" extern_paramlist "..." ")" ";"
[63]
	statement/L1 = typedefinition . ";"
[64]
	statement/L1 = functiondefinition .
[65]
	main_procedure = "main" "{" codeblock . "}"
[66]
	codeblock = statementlist .
[67]
	typedefinition = . "typedef" typepath IDENT
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" typespec IDENT callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody
	statementlist = . statement statementlist
	statementlist = statement . statementlist
	statementlist = .
	statement/L1 = . functiondefinition
	statement/L1 = . typedefinition ";"
	statement/L1 = . "var" variabledefinition ";"
	statement/L1 = . expression ";"
	statement/L1 = . "return" expression ";"
	statement/L1 = . "delete" expression ";"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}"
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "{" codeblock "}"
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[68]
	statement/L1 = expression . ";"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[69]
	expression/L12 = iexpression .
[70]
	expression/L2 = BOOLEAN .
[71]
	expression/L2 = IDENT .
[72]
	expression/L2 = DQSTRING .
[73]
	expression/L2 = SQSTRING .
[74]
	expression/L2 = CARDINAL .
[75]
	expression/L2 = INTEGER .
[76]
	expression/L2 = FLOAT .
[77]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L2 = "(" . expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[78]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = "&" . expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[79]
	typedefinition = . "typedef" typepath IDENT
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" typespec IDENT callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody
	codeblock = . statementlist
	statementlist = . statement statementlist
	statementlist = .
	statement/L1 = . functiondefinition
	statement/L1 = . typedefinition ";"
	statement/L1 = . "var" variabledefinition ";"
	statement/L1 = . expression ";"
	statement/L1 = . "return" expression ";"
	statement/L1 = . "delete" expression ";"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}"
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "{" codeblock "}"
	statement/L1 = "{" . codeblock "}"
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = "{" . expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = "{" . "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
	expressionlist = . expression "," expressionlist
	expressionlist = . expression
[80]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = "+" . expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[81]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = "-" . expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[82]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L12 = "*" . expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[83]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = "~" . expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[84]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L9 = "!" . expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[85]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	statement/L1 = "var" . variabledefinition ";"
	variabledefinition = . typespec IDENT
	variabledefinition = . typespec IDENT "=" expression
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression
	variabledefinition = . typespec IDENT "[" expression "]"
[86]
	statement/L1 = "return" . expression ";"
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[87]
	statement/L1 = "delete" . expression ";"
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[88]
	statement/L1 = "if" . "(" expression ")" "{" codeblock "}"
	statement/L1 = "if" . "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}"
[89]
	statement/L1 = "while" . "(" expression ")" "{" codeblock "}"
[90]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	expression/L1 = "new" . typespec ":" expression
[91]
	expression/L2 = "null" .
[92]
	typespec/L1 = typename "^" "^" "&" .
[93]
	variabledefinition = typespec IDENT "=" expression .
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[94]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = "{" . expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = "{" . "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
	expressionlist = . expression "," expressionlist
	expressionlist = . expression
[95]
	variabledefinition = typespec IDENT "[" expression . "]" "=" expression
	variabledefinition = typespec IDENT "[" expression . "]"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[96]
	functiondefinition = linkage "function" typespec IDENT . callablebody
	callablebody = . "(" parameterlist ")" "{" codeblock "}"
	callablebody = . "(" parameterlist ")" "const" "{" codeblock "}"
[97]
	functiondefinition = linkage "procedure" IDENT callablebody .
[98]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	callablebody = "(" . parameterlist ")" "{" codeblock "}"
	callablebody = "(" . parameterlist ")" "const" "{" codeblock "}"
	parameterlist = . parameters
	parameterlist = .
	parameters = . paramdecl "," parameters
	parameters = . paramdecl
	paramdecl = . typespec IDENT
[99]
	typespec/L1 = "const" typename "^" "&" .
[100]
	typespec/L1 = "const" typename "^" "^" .
	typespec/L1 = "const" typename "^" "^" . "&"
[101]
	structdefinition = "struct" IDENT "{" struct_definitionlist . "}"
[102]
	struct_definitionlist = . struct_definition struct_definitionlist
	struct_definitionlist = struct_definition . struct_definitionlist
	struct_definitionlist = .
	struct_definition = . typedefinition ";"
	struct_definition = . variabledefinition ";"
	struct_definition = . structdefinition
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	typedefinition = . "typedef" typepath IDENT
	structdefinition = . "struct" IDENT "{" struct_definitionlist "}"
	variabledefinition = . typespec IDENT
	variabledefinition = . typespec IDENT "=" expression
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression
	variabledefinition = . typespec IDENT "[" expression "]"
[103]
	interfacedefinition = "interface" IDENT "{" interface_definitionlist . "}"
[104]
	interface_definitionlist = . interface_definition interface_definitionlist
	interface_definitionlist = interface_definition . interface_definitionlist
	interface_definitionlist = .
	interface_definition = . "function" typespec IDENT "(" parameterlist ")" ";"
	interface_definition = . "function" typespec IDENT "(" parameterlist ")" "const" ";"
	interface_definition = . "procedure" IDENT "(" parameterlist ")" ";"
	interface_definition = . "procedure" IDENT "(" parameterlist ")" "const" ";"
[105]
	interface_definition = "function" . typespec IDENT "(" parameterlist ")" ";"
	interface_definition = "function" . typespec IDENT "(" parameterlist ")" "const" ";"
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
[106]
	interface_definition = "procedure" . IDENT "(" parameterlist ")" ";"
	interface_definition = "procedure" . IDENT "(" parameterlist ")" "const" ";"
[107]
	classdefinition = "class" IDENT "{" class_definitionlist . "}"
[108]
	class_definitionlist = . class_definition class_definitionlist
	class_definitionlist = class_definition . class_definitionlist
	class_definitionlist = .
	class_definition = . typedefinition ";"
	class_definition = . variabledefinition ";"
	class_definition = . structdefinition
	class_definition = . classdefinition
	class_definition = . interfacedefinition
	class_definition = . constructordefinition
	class_definition = . functiondefinition
	class_definition = . operatordefinition
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	typedefinition = . "typedef" typepath IDENT
	structdefinition = . "struct" IDENT "{" struct_definitionlist "}"
	interfacedefinition = . "interface" IDENT "{" interface_definitionlist "}"
	classdefinition = . "class" IDENT "{" class_definitionlist "}"
	classdefinition = . "class" IDENT ":" inheritlist "{" class_definitionlist "}"
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" typespec IDENT callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody
	constructordefinition = . linkage "constructor" callablebody
	constructordefinition = . "destructor" "{" codeblock "}"
	operatordefinition = . linkage "operator" "->" typespec callablebody
	operatordefinition = . linkage "operator" "=" typespec callablebody
	operatordefinition = . linkage "operator" "+" typespec callablebody
	operatordefinition = . linkage "operator" "-" typespec callablebody
	operatordefinition = . linkage "operator" "*" typespec callablebody
	operatordefinition = . linkage "operator" "/" typespec callablebody
	operatordefinition = . linkage "operator" "%" typespec callablebody
	operatordefinition = . linkage "operator" "&&" typespec callablebody
	operatordefinition = . linkage "operator" "||" typespec callablebody
	operatordefinition = . linkage "operator" "&" typespec callablebody
	operatordefinition = . linkage "operator" "|" typespec callablebody
	operatordefinition = . linkage "operator" "<<" typespec callablebody
	operatordefinition = . linkage "operator" ">>" typespec callablebody
	operatordefinition = . linkage "operator" "~" typespec callablebody
	operatordefinition = . linkage "operator" "!" typespec callablebody
	operatordefinition = . linkage "operator" "(" ")" typespec callablebody
	operatordefinition = . linkage "operator" "[" "]" typespec callablebody
	operatordefinition = . linkage "operator" "==" typespec callablebody
	operatordefinition = . linkage "operator" "!=" typespec callablebody
	operatordefinition = . linkage "operator" ">=" typespec callablebody
	operatordefinition = . linkage "operator" "<=" typespec callablebody
	operatordefinition = . linkage "operator" ">" typespec callablebody
	operatordefinition = . linkage "operator" "<" typespec callablebody
	variabledefinition = . typespec IDENT
	variabledefinition = . typespec IDENT "=" expression
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression
	variabledefinition = . typespec IDENT "[" expression "]"
[109]
	class_definition = typedefinition . ";"
[110]
	class_definition = structdefinition .
[111]
	class_definition = interfacedefinition .
[112]
	class_definition = classdefinition .
[113]
	functiondefinition = linkage . "function" typespec IDENT callablebody
	functiondefinition = linkage . "procedure" IDENT callablebody
	constructordefinition = linkage . "constructor" callablebody
	operatordefinition = linkage . "operator" "->" typespec callablebody
	operatordefinition = linkage . "operator" "=" typespec callablebody
	operatordefinition = linkage . "operator" "+" typespec callablebody
	operatordefinition = linkage . "operator" "-" typespec callablebody
	operatordefinition = linkage . "operator" "*" typespec callablebody
	operatordefinition = linkage . "operator" "/" typespec callablebody
	operatordefinition = linkage . "operator" "%" typespec callablebody
	operatordefinition = linkage . "operator" "&&" typespec callablebody
	operatordefinition = linkage . "operator" "||" typespec callablebody
	operatordefinition = linkage . "operator" "&" typespec callablebody
	operatordefinition = linkage . "operator" "|" typespec callablebody
	operatordefinition = linkage . "operator" "<<" typespec callablebody
	operatordefinition = linkage . "operator" ">>" typespec callablebody
	operatordefinition = linkage . "operator" "~" typespec callablebody
	operatordefinition = linkage . "operator" "!" typespec callablebody
	operatordefinition = linkage . "operator" "(" ")" typespec callablebody
	operatordefinition = linkage . "operator" "[" "]" typespec callablebody
	operatordefinition = linkage . "operator" "==" typespec callablebody
	operatordefinition = linkage . "operator" "!=" typespec callablebody
	operatordefinition = linkage . "operator" ">=" typespec callablebody
	operatordefinition = linkage . "operator" "<=" typespec callablebody
	operatordefinition = linkage . "operator" ">" typespec callablebody
	operatordefinition = linkage . "operator" "<" typespec callablebody
[114]
	class_definition = functiondefinition .
[115]
	class_definition = constructordefinition .
[116]
	class_definition = operatordefinition .
[117]
	class_definition = variabledefinition . ";"
[118]
	constructordefinition = "destructor" . "{" codeblock "}"
[119]
	inheritlist = typepath . "," inheritlist
	inheritlist = typepath .
[120]
	classdefinition = "class" IDENT ":" inheritlist . "{" class_definitionlist "}"
[121]
	extern_definition = "extern" DQSTRING "function" typespec IDENT . "(" extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING "function" typespec IDENT . "(" extern_paramlist "..." ")" ";"
[122]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" . extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" . extern_paramlist "..." ")" ";"
	extern_parameters = . typespec "," extern_parameters
	extern_parameters = . typespec
	extern_paramlist = . extern_parameters
	extern_paramlist = .
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
[123]
	statement/L1 = typedefinition ";" .
[124]
	main_procedure = "main" "{" codeblock "}" .
[125]
	statementlist = statement statementlist .
[126]
	iexpression = expression indirection . IDENT
[127]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = expression "(" . expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = expression "(" . ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
	expressionlist = . expression "," expressionlist
	expressionlist = . expression
[128]
	statement/L1 = expression ";" .
[129]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L7 = expression "&" . expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[130]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = expression "^" . expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[131]
	indirection = . "->" indirection
	indirection = "->" . indirection
	indirection = . "->"
	indirection = "->" .
[132]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = expression "=" . expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[133]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = expression "+" . expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[134]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = expression "-" . expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[135]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = expression "*" . expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[136]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = expression "/" . expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[137]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L10 = expression "%" . expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[138]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L5 = expression "&&" . expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[139]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L4 = expression "||" . expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[140]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L6 = expression "|" . expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[141]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = expression "<<" . expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[142]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L11 = expression ">>" . expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[143]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	expression/L13 = expression "[" . expressionlist "]"
	iexpression = . expression indirection IDENT
	expressionlist = . expression "," expressionlist
	expressionlist = . expression
[144]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = expression "==" . expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[145]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = expression "!=" . expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[146]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = expression ">=" . expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[147]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = expression "<=" . expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[148]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L8 = expression ">" . expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[149]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = expression "<" . expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[150]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = expression "+=" . expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[151]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = expression "-=" . expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[152]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = expression "*=" . expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[153]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = expression "/=" . expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[154]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = expression "^=" . expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[155]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = expression "&=" . expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = expression "&=" . expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[156]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = expression "%=" . expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[157]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = expression "&&=" . expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[158]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = expression "||=" . expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[159]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = expression "|=" . expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[160]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = expression "<<=" . expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[161]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L3 = expression ">>=" . expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[162]
	expression/L12 = expression "." . IDENT
[163]
	expression/L2 = "(" expression . ")"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[164]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L9 = "&" expression .
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[165]
	statement/L1 = "{" codeblock . "}"
[166]
	statement/L1 = expression . ";"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
	expressionlist = expression . "," expressionlist
	expressionlist = expression .
[167]
	expression/L1 = "{" expressionlist . "}"
[168]
	expression/L1 = "{" "}" .
[169]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L9 = "+" expression .
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[170]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L9 = "-" expression .
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[171]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L12 = "*" expression .
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[172]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L9 = "~" expression .
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[173]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L9 = "!" expression .
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[174]
	statement/L1 = "var" variabledefinition . ";"
[175]
	statement/L1 = "return" expression . ";"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[176]
	statement/L1 = "delete" expression . ";"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[177]
	statement/L1 = "if" "(" . expression ")" "{" codeblock "}"
	statement/L1 = "if" "(" . expression ")" "{" codeblock "}" "else" "{" codeblock "}"
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[178]
	statement/L1 = "while" "(" . expression ")" "{" codeblock "}"
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[179]
	expression/L1 = "new" typespec . ":" expression
[180]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
	expressionlist = expression . "," expressionlist
	expressionlist = expression .
[181]
	variabledefinition = typespec IDENT "[" expression "]" . "=" expression
	variabledefinition = typespec IDENT "[" expression "]" .
[182]
	functiondefinition = linkage "function" typespec IDENT callablebody .
[183]
	paramdecl = typespec . IDENT
[184]
	callablebody = "(" parameterlist . ")" "{" codeblock "}"
	callablebody = "(" parameterlist . ")" "const" "{" codeblock "}"
[185]
	parameterlist = parameters .
[186]
	parameters = paramdecl . "," parameters
	parameters = paramdecl .
[187]
	typespec/L1 = "const" typename "^" "^" "&" .
[188]
	structdefinition = "struct" IDENT "{" struct_definitionlist "}" .
[189]
	struct_definitionlist = struct_definition struct_definitionlist .
[190]
	interfacedefinition = "interface" IDENT "{" interface_definitionlist "}" .
[191]
	interface_definitionlist = interface_definition interface_definitionlist .
[192]
	interface_definition = "function" typespec . IDENT "(" parameterlist ")" ";"
	interface_definition = "function" typespec . IDENT "(" parameterlist ")" "const" ";"
[193]
	interface_definition = "procedure" IDENT . "(" parameterlist ")" ";"
	interface_definition = "procedure" IDENT . "(" parameterlist ")" "const" ";"
[194]
	classdefinition = "class" IDENT "{" class_definitionlist "}" .
[195]
	class_definitionlist = class_definition class_definitionlist .
[196]
	class_definition = typedefinition ";" .
[197]
	constructordefinition = linkage "constructor" . callablebody
	callablebody = . "(" parameterlist ")" "{" codeblock "}"
	callablebody = . "(" parameterlist ")" "const" "{" codeblock "}"
[198]
	operatordefinition = linkage "operator" . "->" typespec callablebody
	operatordefinition = linkage "operator" . "=" typespec callablebody
	operatordefinition = linkage "operator" . "+" typespec callablebody
	operatordefinition = linkage "operator" . "-" typespec callablebody
	operatordefinition = linkage "operator" . "*" typespec callablebody
	operatordefinition = linkage "operator" . "/" typespec callablebody
	operatordefinition = linkage "operator" . "%" typespec callablebody
	operatordefinition = linkage "operator" . "&&" typespec callablebody
	operatordefinition = linkage "operator" . "||" typespec callablebody
	operatordefinition = linkage "operator" . "&" typespec callablebody
	operatordefinition = linkage "operator" . "|" typespec callablebody
	operatordefinition = linkage "operator" . "<<" typespec callablebody
	operatordefinition = linkage "operator" . ">>" typespec callablebody
	operatordefinition = linkage "operator" . "~" typespec callablebody
	operatordefinition = linkage "operator" . "!" typespec callablebody
	operatordefinition = linkage "operator" . "(" ")" typespec callablebody
	operatordefinition = linkage "operator" . "[" "]" typespec callablebody
	operatordefinition = linkage "operator" . "==" typespec callablebody
	operatordefinition = linkage "operator" . "!=" typespec callablebody
	operatordefinition = linkage "operator" . ">=" typespec callablebody
	operatordefinition = linkage "operator" . "<=" typespec callablebody
	operatordefinition = linkage "operator" . ">" typespec callablebody
	operatordefinition = linkage "operator" . "<" typespec callablebody
[199]
	class_definition = variabledefinition ";" .
[200]
	typedefinition = . "typedef" typepath IDENT
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" typespec IDENT callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody
	constructordefinition = "destructor" "{" . codeblock "}"
	codeblock = . statementlist
	statementlist = . statement statementlist
	statementlist = .
	statement/L1 = . functiondefinition
	statement/L1 = . typedefinition ";"
	statement/L1 = . "var" variabledefinition ";"
	statement/L1 = . expression ";"
	statement/L1 = . "return" expression ";"
	statement/L1 = . "delete" expression ";"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}"
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "{" codeblock "}"
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[201]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typepath/L1 = . typename
	inheritlist = . typepath "," inheritlist
	inheritlist = typepath "," . inheritlist
	inheritlist = . typepath
[202]
	class_definitionlist = . class_definition class_definitionlist
	class_definitionlist = .
	class_definition = . typedefinition ";"
	class_definition = . variabledefinition ";"
	class_definition = . structdefinition
	class_definition = . classdefinition
	class_definition = . interfacedefinition
	class_definition = . constructordefinition
	class_definition = . functiondefinition
	class_definition = . operatordefinition
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	typedefinition = . "typedef" typepath IDENT
	structdefinition = . "struct" IDENT "{" struct_definitionlist "}"
	interfacedefinition = . "interface" IDENT "{" interface_definitionlist "}"
	classdefinition = . "class" IDENT "{" class_definitionlist "}"
	classdefinition = . "class" IDENT ":" inheritlist "{" class_definitionlist "}"
	classdefinition = "class" IDENT ":" inheritlist "{" . class_definitionlist "}"
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" typespec IDENT callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody
	constructordefinition = . linkage "constructor" callablebody
	constructordefinition = . "destructor" "{" codeblock "}"
	operatordefinition = . linkage "operator" "->" typespec callablebody
	operatordefinition = . linkage "operator" "=" typespec callablebody
	operatordefinition = . linkage "operator" "+" typespec callablebody
	operatordefinition = . linkage "operator" "-" typespec callablebody
	operatordefinition = . linkage "operator" "*" typespec callablebody
	operatordefinition = . linkage "operator" "/" typespec callablebody
	operatordefinition = . linkage "operator" "%" typespec callablebody
	operatordefinition = . linkage "operator" "&&" typespec callablebody
	operatordefinition = . linkage "operator" "||" typespec callablebody
	operatordefinition = . linkage "operator" "&" typespec callablebody
	operatordefinition = . linkage "operator" "|" typespec callablebody
	operatordefinition = . linkage "operator" "<<" typespec callablebody
	operatordefinition = . linkage "operator" ">>" typespec callablebody
	operatordefinition = . linkage "operator" "~" typespec callablebody
	operatordefinition = . linkage "operator" "!" typespec callablebody
	operatordefinition = . linkage "operator" "(" ")" typespec callablebody
	operatordefinition = . linkage "operator" "[" "]" typespec callablebody
	operatordefinition = . linkage "operator" "==" typespec callablebody
	operatordefinition = . linkage "operator" "!=" typespec callablebody
	operatordefinition = . linkage "operator" ">=" typespec callablebody
	operatordefinition = . linkage "operator" "<=" typespec callablebody
	operatordefinition = . linkage "operator" ">" typespec callablebody
	operatordefinition = . linkage "operator" "<" typespec callablebody
	variabledefinition = . typespec IDENT
	variabledefinition = . typespec IDENT "=" expression
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression
	variabledefinition = . typespec IDENT "[" expression "]"
[203]
	extern_definition = "extern" DQSTRING "function" typespec IDENT "(" . extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING "function" typespec IDENT "(" . extern_paramlist "..." ")" ";"
	extern_parameters = . typespec "," extern_parameters
	extern_parameters = . typespec
	extern_paramlist = . extern_parameters
	extern_paramlist = .
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
[204]
	extern_paramlist = extern_parameters .
[205]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist . ")" ";"
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist . "..." ")" ";"
[206]
	extern_parameters = typespec . "," extern_parameters
	extern_parameters = typespec .
[207]
	iexpression = expression indirection IDENT .
[208]
	expression/L13 = expression "(" expressionlist . ")"
[209]
	expression/L13 = expression "(" ")" .
[210]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L7 = expression "&" expression .
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[211]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression "^" expression .
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[212]
	indirection = "->" indirection .
[213]
	expression/L3 = expression . "=" expression
	expression/L3 = expression "=" expression .
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[214]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression "+" expression .
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[215]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L9 = expression "-" expression .
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[216]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression "*" expression .
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[217]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression "/" expression .
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[218]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L10 = expression "%" expression .
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[219]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L5 = expression "&&" expression .
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[220]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L4 = expression "||" expression .
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[221]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L6 = expression "|" expression .
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[222]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression "<<" expression .
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[223]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L11 = expression ">>" expression .
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[224]
	expression/L13 = expression "[" expressionlist . "]"
[225]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression "==" expression .
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[226]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression "!=" expression .
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[227]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression ">=" expression .
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[228]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression "<=" expression .
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[229]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L8 = expression ">" expression .
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[230]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression "<" expression .
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[231]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression "+=" expression .
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[232]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression "-=" expression .
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[233]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression "*=" expression .
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[234]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression "/=" expression .
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[235]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression "^=" expression .
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[236]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression "&=" expression .
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression "&=" expression .
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[237]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression "%=" expression .
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[238]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression "&&=" expression .
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[239]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression "||=" expression .
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[240]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression "|=" expression .
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[241]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression "<<=" expression .
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[242]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L3 = expression ">>=" expression .
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[243]
	expression/L12 = expression "." IDENT .
[244]
	expression/L2 = "(" expression ")" .
[245]
	statement/L1 = "{" codeblock "}" .
[246]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
	expressionlist = . expression "," expressionlist
	expressionlist = expression "," . expressionlist
	expressionlist = . expression
[247]
	expression/L1 = "{" expressionlist "}" .
[248]
	statement/L1 = "var" variabledefinition ";" .
[249]
	statement/L1 = "return" expression ";" .
[250]
	statement/L1 = "delete" expression ";" .
[251]
	statement/L1 = "if" "(" expression . ")" "{" codeblock "}"
	statement/L1 = "if" "(" expression . ")" "{" codeblock "}" "else" "{" codeblock "}"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[252]
	statement/L1 = "while" "(" expression . ")" "{" codeblock "}"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[253]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = "new" typespec ":" . expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[254]
	variabledefinition = typespec IDENT "[" expression "]" "=" . expression
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[255]
	paramdecl = typespec IDENT .
[256]
	callablebody = "(" parameterlist ")" . "{" codeblock "}"
	callablebody = "(" parameterlist ")" . "const" "{" codeblock "}"
[257]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	parameters = . paramdecl "," parameters
	parameters = paramdecl "," . parameters
	parameters = . paramdecl
	paramdecl = . typespec IDENT
[258]
	interface_definition = "function" typespec IDENT . "(" parameterlist ")" ";"
	interface_definition = "function" typespec IDENT . "(" parameterlist ")" "const" ";"
[259]
	interface_definition = "procedure" IDENT "(" . parameterlist ")" ";"
	interface_definition = "procedure" IDENT "(" . parameterlist ")" "const" ";"
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	parameterlist = . parameters
	parameterlist = .
	parameters = . paramdecl "," parameters
	parameters = . paramdecl
	paramdecl = . typespec IDENT
[260]
	constructordefinition = linkage "constructor" callablebody .
[261]
	operatordefinition = linkage "operator" "(" . ")" typespec callablebody
[262]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	operatordefinition = linkage "operator" "&" . typespec callablebody
[263]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	operatordefinition = linkage "operator" "->" . typespec callablebody
[264]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	operatordefinition = linkage "operator" "=" . typespec callablebody
[265]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	operatordefinition = linkage "operator" "+" . typespec callablebody
[266]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	operatordefinition = linkage "operator" "-" . typespec callablebody
[267]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	operatordefinition = linkage "operator" "*" . typespec callablebody
[268]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	operatordefinition = linkage "operator" "/" . typespec callablebody
[269]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	operatordefinition = linkage "operator" "%" . typespec callablebody
[270]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	operatordefinition = linkage "operator" "&&" . typespec callablebody
[271]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	operatordefinition = linkage "operator" "||" . typespec callablebody
[272]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	operatordefinition = linkage "operator" "|" . typespec callablebody
[273]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	operatordefinition = linkage "operator" "<<" . typespec callablebody
[274]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	operatordefinition = linkage "operator" ">>" . typespec callablebody
[275]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	operatordefinition = linkage "operator" "~" . typespec callablebody
[276]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	operatordefinition = linkage "operator" "!" . typespec callablebody
[277]
	operatordefinition = linkage "operator" "[" . "]" typespec callablebody
[278]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	operatordefinition = linkage "operator" "==" . typespec callablebody
[279]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	operatordefinition = linkage "operator" "!=" . typespec callablebody
[280]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	operatordefinition = linkage "operator" ">=" . typespec callablebody
[281]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	operatordefinition = linkage "operator" "<=" . typespec callablebody
[282]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	operatordefinition = linkage "operator" ">" . typespec callablebody
[283]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	operatordefinition = linkage "operator" "<" . typespec callablebody
[284]
	constructordefinition = "destructor" "{" codeblock . "}"
[285]
	inheritlist = typepath "," inheritlist .
[286]
	classdefinition = "class" IDENT ":" inheritlist "{" class_definitionlist . "}"
[287]
	extern_definition = "extern" DQSTRING "function" typespec IDENT "(" extern_paramlist . ")" ";"
	extern_definition = "extern" DQSTRING "function" typespec IDENT "(" extern_paramlist . "..." ")" ";"
[288]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist ")" . ";"
[289]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist "..." . ")" ";"
[290]
	extern_parameters = . typespec "," extern_parameters
	extern_parameters = typespec "," . extern_parameters
	extern_parameters = . typespec
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
[291]
	expression/L13 = expression "(" expressionlist ")" .
[292]
	expression/L13 = expression "[" expressionlist "]" .
[293]
	expressionlist = expression "," expressionlist .
[294]
	statement/L1 = "if" "(" expression ")" . "{" codeblock "}"
	statement/L1 = "if" "(" expression ")" . "{" codeblock "}" "else" "{" codeblock "}"
[295]
	statement/L1 = "while" "(" expression ")" . "{" codeblock "}"
[296]
	expression/L1 = "new" typespec ":" expression .
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[297]
	variabledefinition = typespec IDENT "[" expression "]" "=" expression .
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[298]
	callablebody = "(" parameterlist ")" "const" . "{" codeblock "}"
[299]
	typedefinition = . "typedef" typepath IDENT
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" typespec IDENT callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody
	callablebody = "(" parameterlist ")" "{" . codeblock "}"
	codeblock = . statementlist
	statementlist = . statement statementlist
	statementlist = .
	statement/L1 = . functiondefinition
	statement/L1 = . typedefinition ";"
	statement/L1 = . "var" variabledefinition ";"
	statement/L1 = . expression ";"
	statement/L1 = . "return" expression ";"
	statement/L1 = . "delete" expression ";"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}"
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "{" codeblock "}"
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[300]
	parameters = paramdecl "," parameters .
[301]
	interface_definition = "function" typespec IDENT "(" . parameterlist ")" ";"
	interface_definition = "function" typespec IDENT "(" . parameterlist ")" "const" ";"
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	parameterlist = . parameters
	parameterlist = .
	parameters = . paramdecl "," parameters
	parameters = . paramdecl
	paramdecl = . typespec IDENT
[302]
	interface_definition = "procedure" IDENT "(" parameterlist . ")" ";"
	interface_definition = "procedure" IDENT "(" parameterlist . ")" "const" ";"
[303]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	operatordefinition = linkage "operator" "(" ")" . typespec callablebody
[304]
	operatordefinition = linkage "operator" "&" typespec . callablebody
	callablebody = . "(" parameterlist ")" "{" codeblock "}"
	callablebody = . "(" parameterlist ")" "const" "{" codeblock "}"
[305]
	operatordefinition = linkage "operator" "->" typespec . callablebody
	callablebody = . "(" parameterlist ")" "{" codeblock "}"
	callablebody = . "(" parameterlist ")" "const" "{" codeblock "}"
[306]
	operatordefinition = linkage "operator" "=" typespec . callablebody
	callablebody = . "(" parameterlist ")" "{" codeblock "}"
	callablebody = . "(" parameterlist ")" "const" "{" codeblock "}"
[307]
	operatordefinition = linkage "operator" "+" typespec . callablebody
	callablebody = . "(" parameterlist ")" "{" codeblock "}"
	callablebody = . "(" parameterlist ")" "const" "{" codeblock "}"
[308]
	operatordefinition = linkage "operator" "-" typespec . callablebody
	callablebody = . "(" parameterlist ")" "{" codeblock "}"
	callablebody = . "(" parameterlist ")" "const" "{" codeblock "}"
[309]
	operatordefinition = linkage "operator" "*" typespec . callablebody
	callablebody = . "(" parameterlist ")" "{" codeblock "}"
	callablebody = . "(" parameterlist ")" "const" "{" codeblock "}"
[310]
	operatordefinition = linkage "operator" "/" typespec . callablebody
	callablebody = . "(" parameterlist ")" "{" codeblock "}"
	callablebody = . "(" parameterlist ")" "const" "{" codeblock "}"
[311]
	operatordefinition = linkage "operator" "%" typespec . callablebody
	callablebody = . "(" parameterlist ")" "{" codeblock "}"
	callablebody = . "(" parameterlist ")" "const" "{" codeblock "}"
[312]
	operatordefinition = linkage "operator" "&&" typespec . callablebody
	callablebody = . "(" parameterlist ")" "{" codeblock "}"
	callablebody = . "(" parameterlist ")" "const" "{" codeblock "}"
[313]
	operatordefinition = linkage "operator" "||" typespec . callablebody
	callablebody = . "(" parameterlist ")" "{" codeblock "}"
	callablebody = . "(" parameterlist ")" "const" "{" codeblock "}"
[314]
	operatordefinition = linkage "operator" "|" typespec . callablebody
	callablebody = . "(" parameterlist ")" "{" codeblock "}"
	callablebody = . "(" parameterlist ")" "const" "{" codeblock "}"
[315]
	operatordefinition = linkage "operator" "<<" typespec . callablebody
	callablebody = . "(" parameterlist ")" "{" codeblock "}"
	callablebody = . "(" parameterlist ")" "const" "{" codeblock "}"
[316]
	operatordefinition = linkage "operator" ">>" typespec . callablebody
	callablebody = . "(" parameterlist ")" "{" codeblock "}"
	callablebody = . "(" parameterlist ")" "const" "{" codeblock "}"
[317]
	operatordefinition = linkage "operator" "~" typespec . callablebody
	callablebody = . "(" parameterlist ")" "{" codeblock "}"
	callablebody = . "(" parameterlist ")" "const" "{" codeblock "}"
[318]
	operatordefinition = linkage "operator" "!" typespec . callablebody
	callablebody = . "(" parameterlist ")" "{" codeblock "}"
	callablebody = . "(" parameterlist ")" "const" "{" codeblock "}"
[319]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	operatordefinition = linkage "operator" "[" "]" . typespec callablebody
[320]
	operatordefinition = linkage "operator" "==" typespec . callablebody
	callablebody = . "(" parameterlist ")" "{" codeblock "}"
	callablebody = . "(" parameterlist ")" "const" "{" codeblock "}"
[321]
	operatordefinition = linkage "operator" "!=" typespec . callablebody
	callablebody = . "(" parameterlist ")" "{" codeblock "}"
	callablebody = . "(" parameterlist ")" "const" "{" codeblock "}"
[322]
	operatordefinition = linkage "operator" ">=" typespec . callablebody
	callablebody = . "(" parameterlist ")" "{" codeblock "}"
	callablebody = . "(" parameterlist ")" "const" "{" codeblock "}"
[323]
	operatordefinition = linkage "operator" "<=" typespec . callablebody
	callablebody = . "(" parameterlist ")" "{" codeblock "}"
	callablebody = . "(" parameterlist ")" "const" "{" codeblock "}"
[324]
	operatordefinition = linkage "operator" ">" typespec . callablebody
	callablebody = . "(" parameterlist ")" "{" codeblock "}"
	callablebody = . "(" parameterlist ")" "const" "{" codeblock "}"
[325]
	operatordefinition = linkage "operator" "<" typespec . callablebody
	callablebody = . "(" parameterlist ")" "{" codeblock "}"
	callablebody = . "(" parameterlist ")" "const" "{" codeblock "}"
[326]
	constructordefinition = "destructor" "{" codeblock "}" .
[327]
	classdefinition = "class" IDENT ":" inheritlist "{" class_definitionlist "}" .
[328]
	extern_definition = "extern" DQSTRING "function" typespec IDENT "(" extern_paramlist ")" . ";"
[329]
	extern_definition = "extern" DQSTRING "function" typespec IDENT "(" extern_paramlist "..." . ")" ";"
[330]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist ")" ";" .
[331]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist "..." ")" . ";"
[332]
	extern_parameters = typespec "," extern_parameters .
[333]
	typedefinition = . "typedef" typepath IDENT
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" typespec IDENT callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody
	codeblock = . statementlist
	statementlist = . statement statementlist
	statementlist = .
	statement/L1 = . functiondefinition
	statement/L1 = . typedefinition ";"
	statement/L1 = . "var" variabledefinition ";"
	statement/L1 = . expression ";"
	statement/L1 = . "return" expression ";"
	statement/L1 = . "delete" expression ";"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}"
	statement/L1 = "if" "(" expression ")" "{" . codeblock "}"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}"
	statement/L1 = "if" "(" expression ")" "{" . codeblock "}" "else" "{" codeblock "}"
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "{" codeblock "}"
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[334]
	typedefinition = . "typedef" typepath IDENT
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" typespec IDENT callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody
	codeblock = . statementlist
	statementlist = . statement statementlist
	statementlist = .
	statement/L1 = . functiondefinition
	statement/L1 = . typedefinition ";"
	statement/L1 = . "var" variabledefinition ";"
	statement/L1 = . expression ";"
	statement/L1 = . "return" expression ";"
	statement/L1 = . "delete" expression ";"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}"
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}"
	statement/L1 = "while" "(" expression ")" "{" . codeblock "}"
	statement/L1 = . "{" codeblock "}"
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[335]
	typedefinition = . "typedef" typepath IDENT
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" typespec IDENT callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody
	callablebody = "(" parameterlist ")" "const" "{" . codeblock "}"
	codeblock = . statementlist
	statementlist = . statement statementlist
	statementlist = .
	statement/L1 = . functiondefinition
	statement/L1 = . typedefinition ";"
	statement/L1 = . "var" variabledefinition ";"
	statement/L1 = . expression ";"
	statement/L1 = . "return" expression ";"
	statement/L1 = . "delete" expression ";"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}"
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "{" codeblock "}"
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[336]
	callablebody = "(" parameterlist ")" "{" codeblock . "}"
[337]
	interface_definition = "function" typespec IDENT "(" parameterlist . ")" ";"
	interface_definition = "function" typespec IDENT "(" parameterlist . ")" "const" ";"
[338]
	interface_definition = "procedure" IDENT "(" parameterlist ")" . ";"
	interface_definition = "procedure" IDENT "(" parameterlist ")" . "const" ";"
[339]
	operatordefinition = linkage "operator" "(" ")" typespec . callablebody
	callablebody = . "(" parameterlist ")" "{" codeblock "}"
	callablebody = . "(" parameterlist ")" "const" "{" codeblock "}"
[340]
	operatordefinition = linkage "operator" "&" typespec callablebody .
[341]
	operatordefinition = linkage "operator" "->" typespec callablebody .
[342]
	operatordefinition = linkage "operator" "=" typespec callablebody .
[343]
	operatordefinition = linkage "operator" "+" typespec callablebody .
[344]
	operatordefinition = linkage "operator" "-" typespec callablebody .
[345]
	operatordefinition = linkage "operator" "*" typespec callablebody .
[346]
	operatordefinition = linkage "operator" "/" typespec callablebody .
[347]
	operatordefinition = linkage "operator" "%" typespec callablebody .
[348]
	operatordefinition = linkage "operator" "&&" typespec callablebody .
[349]
	operatordefinition = linkage "operator" "||" typespec callablebody .
[350]
	operatordefinition = linkage "operator" "|" typespec callablebody .
[351]
	operatordefinition = linkage "operator" "<<" typespec callablebody .
[352]
	operatordefinition = linkage "operator" ">>" typespec callablebody .
[353]
	operatordefinition = linkage "operator" "~" typespec callablebody .
[354]
	operatordefinition = linkage "operator" "!" typespec callablebody .
[355]
	operatordefinition = linkage "operator" "[" "]" typespec . callablebody
	callablebody = . "(" parameterlist ")" "{" codeblock "}"
	callablebody = . "(" parameterlist ")" "const" "{" codeblock "}"
[356]
	operatordefinition = linkage "operator" "==" typespec callablebody .
[357]
	operatordefinition = linkage "operator" "!=" typespec callablebody .
[358]
	operatordefinition = linkage "operator" ">=" typespec callablebody .
[359]
	operatordefinition = linkage "operator" "<=" typespec callablebody .
[360]
	operatordefinition = linkage "operator" ">" typespec callablebody .
[361]
	operatordefinition = linkage "operator" "<" typespec callablebody .
[362]
	extern_definition = "extern" DQSTRING "function" typespec IDENT "(" extern_paramlist ")" ";" .
[363]
	extern_definition = "extern" DQSTRING "function" typespec IDENT "(" extern_paramlist "..." ")" . ";"
[364]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist "..." ")" ";" .
[365]
	statement/L1 = "if" "(" expression ")" "{" codeblock . "}"
	statement/L1 = "if" "(" expression ")" "{" codeblock . "}" "else" "{" codeblock "}"
[366]
	statement/L1 = "while" "(" expression ")" "{" codeblock . "}"
[367]
	callablebody = "(" parameterlist ")" "const" "{" codeblock . "}"
[368]
	callablebody = "(" parameterlist ")" "{" codeblock "}" .
[369]
	interface_definition = "function" typespec IDENT "(" parameterlist ")" . ";"
	interface_definition = "function" typespec IDENT "(" parameterlist ")" . "const" ";"
[370]
	interface_definition = "procedure" IDENT "(" parameterlist ")" ";" .
[371]
	interface_definition = "procedure" IDENT "(" parameterlist ")" "const" . ";"
[372]
	operatordefinition = linkage "operator" "(" ")" typespec callablebody .
[373]
	operatordefinition = linkage "operator" "[" "]" typespec callablebody .
[374]
	extern_definition = "extern" DQSTRING "function" typespec IDENT "(" extern_paramlist "..." ")" ";" .
[375]
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" .
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" . "else" "{" codeblock "}"
[376]
	statement/L1 = "while" "(" expression ")" "{" codeblock "}" .
[377]
	callablebody = "(" parameterlist ")" "const" "{" codeblock "}" .
[378]
	interface_definition = "function" typespec IDENT "(" parameterlist ")" ";" .
[379]
	interface_definition = "function" typespec IDENT "(" parameterlist ")" "const" . ";"
[380]
	interface_definition = "procedure" IDENT "(" parameterlist ")" "const" ";" .
[381]
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" "else" . "{" codeblock "}"
[382]
	interface_definition = "function" typespec IDENT "(" parameterlist ")" "const" ";" .
[383]
	typedefinition = . "typedef" typepath IDENT
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" typespec IDENT callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody
	codeblock = . statementlist
	statementlist = . statement statementlist
	statementlist = .
	statement/L1 = . functiondefinition
	statement/L1 = . typedefinition ";"
	statement/L1 = . "var" variabledefinition ";"
	statement/L1 = . expression ";"
	statement/L1 = . "return" expression ";"
	statement/L1 = . "delete" expression ";"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}"
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" "else" "{" . codeblock "}"
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "{" codeblock "}"
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[384]
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock . "}"
[385]
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}" .

-- LR(0) state cores (for calculation of SHIFT follow state):
[2]
	program = extern_definitionlist . free_definitionlist main_procedure
[3]
	extern_definitionlist = extern_definition . extern_definitionlist
[4]
	extern_definition = "extern" . DQSTRING "function" typespec IDENT "(" extern_paramlist ")" ";"
	extern_definition = "extern" . DQSTRING "procedure" IDENT "(" extern_paramlist ")" ";"
	extern_definition = "extern" . DQSTRING "function" typespec IDENT "(" extern_paramlist "..." ")" ";"
	extern_definition = "extern" . DQSTRING "procedure" IDENT "(" extern_paramlist "..." ")" ";"
[5]
	program = extern_definitionlist free_definitionlist . main_procedure
[6]
	free_definition = struct_definition .
[7]
	free_definitionlist = free_definition . free_definitionlist
[8]
	typespec/L1 = typename .
	typespec/L1 = typename . "&"
	typespec/L1 = typename . "^"
	typespec/L1 = typename . "^" "&"
	typespec/L1 = typename . "^" "^"
	typespec/L1 = typename . "^" "^" "&"
[9]
	variabledefinition = typespec . IDENT
	variabledefinition = typespec . IDENT "=" expression
	variabledefinition = typespec . IDENT "[" expression "]" "=" expression
	variabledefinition = typespec . IDENT "[" expression "]"
[10]
	struct_definition = typedefinition . ";"
[11]
	struct_definition = structdefinition .
[12]
	free_definition = interfacedefinition .
[13]
	free_definition = classdefinition .
[14]
	functiondefinition = linkage . "function" typespec IDENT callablebody
	functiondefinition = linkage . "procedure" IDENT callablebody
[15]
	free_definition = functiondefinition .
[16]
	struct_definition = variabledefinition . ";"
[17]
	typename/L1 = IDENT .
	typename/L1 = IDENT . "::" typename
[18]
	typespec/L1 = "const" . typename
	typespec/L1 = "const" . typename "&"
	typespec/L1 = "const" . typename "^"
	typespec/L1 = "const" . typename "^" "&"
	typespec/L1 = "const" . typename "^" "^"
	typespec/L1 = "const" . typename "^" "^" "&"
[19]
	typedefinition = "typedef" . typepath IDENT
[20]
	structdefinition = "struct" . IDENT "{" struct_definitionlist "}"
[21]
	interfacedefinition = "interface" . IDENT "{" interface_definitionlist "}"
[22]
	classdefinition = "class" . IDENT "{" class_definitionlist "}"
	classdefinition = "class" . IDENT ":" inheritlist "{" class_definitionlist "}"
[23]
	linkage = "private" .
[24]
	linkage = "public" .
[25]
	extern_definitionlist = extern_definition extern_definitionlist .
[26]
	extern_definition = "extern" DQSTRING . "function" typespec IDENT "(" extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING . "procedure" IDENT "(" extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING . "function" typespec IDENT "(" extern_paramlist "..." ")" ";"
	extern_definition = "extern" DQSTRING . "procedure" IDENT "(" extern_paramlist "..." ")" ";"
[27]
	program = extern_definitionlist free_definitionlist main_procedure .
[28]
	main_procedure = "main" . "{" codeblock "}"
[29]
	free_definitionlist = free_definition free_definitionlist .
[30]
	typespec/L1 = typename "&" .
[31]
	typespec/L1 = typename "^" .
	typespec/L1 = typename "^" . "&"
	typespec/L1 = typename "^" . "^"
	typespec/L1 = typename "^" . "^" "&"
[32]
	variabledefinition = typespec IDENT .
	variabledefinition = typespec IDENT . "=" expression
	variabledefinition = typespec IDENT . "[" expression "]" "=" expression
	variabledefinition = typespec IDENT . "[" expression "]"
[33]
	struct_definition = typedefinition ";" .
[34]
	functiondefinition = linkage "function" . typespec IDENT callablebody
[35]
	functiondefinition = linkage "procedure" . IDENT callablebody
[36]
	struct_definition = variabledefinition ";" .
[37]
	typename/L1 = IDENT "::" . typename
[38]
	typespec/L1 = "const" typename .
	typespec/L1 = "const" typename . "&"
	typespec/L1 = "const" typename . "^"
	typespec/L1 = "const" typename . "^" "&"
	typespec/L1 = "const" typename . "^" "^"
	typespec/L1 = "const" typename . "^" "^" "&"
[39]
	typepath/L1 = typename .
[40]
	typedefinition = "typedef" typepath . IDENT
[41]
	structdefinition = "struct" IDENT . "{" struct_definitionlist "}"
[42]
	interfacedefinition = "interface" IDENT . "{" interface_definitionlist "}"
[43]
	classdefinition = "class" IDENT . "{" class_definitionlist "}"
	classdefinition = "class" IDENT . ":" inheritlist "{" class_definitionlist "}"
[44]
	extern_definition = "extern" DQSTRING "function" . typespec IDENT "(" extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING "function" . typespec IDENT "(" extern_paramlist "..." ")" ";"
[45]
	extern_definition = "extern" DQSTRING "procedure" . IDENT "(" extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING "procedure" . IDENT "(" extern_paramlist "..." ")" ";"
[46]
	main_procedure = "main" "{" . codeblock "}"
[47]
	typespec/L1 = typename "^" "&" .
[48]
	typespec/L1 = typename "^" "^" .
	typespec/L1 = typename "^" "^" . "&"
[49]
	variabledefinition = typespec IDENT "=" . expression
[50]
	variabledefinition = typespec IDENT "[" . expression "]" "=" expression
	variabledefinition = typespec IDENT "[" . expression "]"
[51]
	functiondefinition = linkage "function" typespec . IDENT callablebody
[52]
	functiondefinition = linkage "procedure" IDENT . callablebody
[53]
	typename/L1 = IDENT "::" typename .
[54]
	typespec/L1 = "const" typename "&" .
[55]
	typespec/L1 = "const" typename "^" .
	typespec/L1 = "const" typename "^" . "&"
	typespec/L1 = "const" typename "^" . "^"
	typespec/L1 = "const" typename "^" . "^" "&"
[56]
	typedefinition = "typedef" typepath IDENT .
[57]
	structdefinition = "struct" IDENT "{" . struct_definitionlist "}"
[58]
	interfacedefinition = "interface" IDENT "{" . interface_definitionlist "}"
[59]
	classdefinition = "class" IDENT "{" . class_definitionlist "}"
[60]
	classdefinition = "class" IDENT ":" . inheritlist "{" class_definitionlist "}"
[61]
	extern_definition = "extern" DQSTRING "function" typespec . IDENT "(" extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING "function" typespec . IDENT "(" extern_paramlist "..." ")" ";"
[62]
	extern_definition = "extern" DQSTRING "procedure" IDENT . "(" extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING "procedure" IDENT . "(" extern_paramlist "..." ")" ";"
[63]
	statement/L1 = typedefinition . ";"
[64]
	statement/L1 = functiondefinition .
[65]
	main_procedure = "main" "{" codeblock . "}"
[66]
	codeblock = statementlist .
[67]
	statementlist = statement . statementlist
[68]
	statement/L1 = expression . ";"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[69]
	expression/L12 = iexpression .
[70]
	expression/L2 = BOOLEAN .
[71]
	expression/L2 = IDENT .
[72]
	expression/L2 = DQSTRING .
[73]
	expression/L2 = SQSTRING .
[74]
	expression/L2 = CARDINAL .
[75]
	expression/L2 = INTEGER .
[76]
	expression/L2 = FLOAT .
[77]
	expression/L2 = "(" . expression ")"
[78]
	expression/L9 = "&" . expression
[79]
	statement/L1 = "{" . codeblock "}"
	expression/L1 = "{" . expressionlist "}"
	expression/L1 = "{" . "}"
[80]
	expression/L9 = "+" . expression
[81]
	expression/L9 = "-" . expression
[82]
	expression/L12 = "*" . expression
[83]
	expression/L9 = "~" . expression
[84]
	expression/L9 = "!" . expression
[85]
	statement/L1 = "var" . variabledefinition ";"
[86]
	statement/L1 = "return" . expression ";"
[87]
	statement/L1 = "delete" . expression ";"
[88]
	statement/L1 = "if" . "(" expression ")" "{" codeblock "}"
	statement/L1 = "if" . "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}"
[89]
	statement/L1 = "while" . "(" expression ")" "{" codeblock "}"
[90]
	expression/L1 = "new" . typespec ":" expression
[91]
	expression/L2 = "null" .
[92]
	typespec/L1 = typename "^" "^" "&" .
[93]
	variabledefinition = typespec IDENT "=" expression .
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[94]
	expression/L1 = "{" . expressionlist "}"
	expression/L1 = "{" . "}"
[95]
	variabledefinition = typespec IDENT "[" expression . "]" "=" expression
	variabledefinition = typespec IDENT "[" expression . "]"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[96]
	functiondefinition = linkage "function" typespec IDENT . callablebody
[97]
	functiondefinition = linkage "procedure" IDENT callablebody .
[98]
	callablebody = "(" . parameterlist ")" "{" codeblock "}"
	callablebody = "(" . parameterlist ")" "const" "{" codeblock "}"
[99]
	typespec/L1 = "const" typename "^" "&" .
[100]
	typespec/L1 = "const" typename "^" "^" .
	typespec/L1 = "const" typename "^" "^" . "&"
[101]
	structdefinition = "struct" IDENT "{" struct_definitionlist . "}"
[102]
	struct_definitionlist = struct_definition . struct_definitionlist
[103]
	interfacedefinition = "interface" IDENT "{" interface_definitionlist . "}"
[104]
	interface_definitionlist = interface_definition . interface_definitionlist
[105]
	interface_definition = "function" . typespec IDENT "(" parameterlist ")" ";"
	interface_definition = "function" . typespec IDENT "(" parameterlist ")" "const" ";"
[106]
	interface_definition = "procedure" . IDENT "(" parameterlist ")" ";"
	interface_definition = "procedure" . IDENT "(" parameterlist ")" "const" ";"
[107]
	classdefinition = "class" IDENT "{" class_definitionlist . "}"
[108]
	class_definitionlist = class_definition . class_definitionlist
[109]
	class_definition = typedefinition . ";"
[110]
	class_definition = structdefinition .
[111]
	class_definition = interfacedefinition .
[112]
	class_definition = classdefinition .
[113]
	functiondefinition = linkage . "function" typespec IDENT callablebody
	functiondefinition = linkage . "procedure" IDENT callablebody
	constructordefinition = linkage . "constructor" callablebody
	operatordefinition = linkage . "operator" "->" typespec callablebody
	operatordefinition = linkage . "operator" "=" typespec callablebody
	operatordefinition = linkage . "operator" "+" typespec callablebody
	operatordefinition = linkage . "operator" "-" typespec callablebody
	operatordefinition = linkage . "operator" "*" typespec callablebody
	operatordefinition = linkage . "operator" "/" typespec callablebody
	operatordefinition = linkage . "operator" "%" typespec callablebody
	operatordefinition = linkage . "operator" "&&" typespec callablebody
	operatordefinition = linkage . "operator" "||" typespec callablebody
	operatordefinition = linkage . "operator" "&" typespec callablebody
	operatordefinition = linkage . "operator" "|" typespec callablebody
	operatordefinition = linkage . "operator" "<<" typespec callablebody
	operatordefinition = linkage . "operator" ">>" typespec callablebody
	operatordefinition = linkage . "operator" "~" typespec callablebody
	operatordefinition = linkage . "operator" "!" typespec callablebody
	operatordefinition = linkage . "operator" "(" ")" typespec callablebody
	operatordefinition = linkage . "operator" "[" "]" typespec callablebody
	operatordefinition = linkage . "operator" "==" typespec callablebody
	operatordefinition = linkage . "operator" "!=" typespec callablebody
	operatordefinition = linkage . "operator" ">=" typespec callablebody
	operatordefinition = linkage . "operator" "<=" typespec callablebody
	operatordefinition = linkage . "operator" ">" typespec callablebody
	operatordefinition = linkage . "operator" "<" typespec callablebody
[114]
	class_definition = functiondefinition .
[115]
	class_definition = constructordefinition .
[116]
	class_definition = operatordefinition .
[117]
	class_definition = variabledefinition . ";"
[118]
	constructordefinition = "destructor" . "{" codeblock "}"
[119]
	inheritlist = typepath . "," inheritlist
	inheritlist = typepath .
[120]
	classdefinition = "class" IDENT ":" inheritlist . "{" class_definitionlist "}"
[121]
	extern_definition = "extern" DQSTRING "function" typespec IDENT . "(" extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING "function" typespec IDENT . "(" extern_paramlist "..." ")" ";"
[122]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" . extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" . extern_paramlist "..." ")" ";"
[123]
	statement/L1 = typedefinition ";" .
[124]
	main_procedure = "main" "{" codeblock "}" .
[125]
	statementlist = statement statementlist .
[126]
	iexpression = expression indirection . IDENT
[127]
	expression/L13 = expression "(" . expressionlist ")"
	expression/L13 = expression "(" . ")"
[128]
	statement/L1 = expression ";" .
[129]
	expression/L7 = expression "&" . expression
[130]
	expression/L7 = expression "^" . expression
[131]
	indirection = "->" . indirection
	indirection = "->" .
[132]
	expression/L3 = expression "=" . expression
[133]
	expression/L9 = expression "+" . expression
[134]
	expression/L9 = expression "-" . expression
[135]
	expression/L10 = expression "*" . expression
[136]
	expression/L10 = expression "/" . expression
[137]
	expression/L10 = expression "%" . expression
[138]
	expression/L5 = expression "&&" . expression
[139]
	expression/L4 = expression "||" . expression
[140]
	expression/L6 = expression "|" . expression
[141]
	expression/L11 = expression "<<" . expression
[142]
	expression/L11 = expression ">>" . expression
[143]
	expression/L13 = expression "[" . expressionlist "]"
[144]
	expression/L8 = expression "==" . expression
[145]
	expression/L8 = expression "!=" . expression
[146]
	expression/L8 = expression ">=" . expression
[147]
	expression/L8 = expression "<=" . expression
[148]
	expression/L8 = expression ">" . expression
[149]
	expression/L8 = expression "<" . expression
[150]
	expression/L3 = expression "+=" . expression
[151]
	expression/L3 = expression "-=" . expression
[152]
	expression/L3 = expression "*=" . expression
[153]
	expression/L3 = expression "/=" . expression
[154]
	expression/L3 = expression "^=" . expression
[155]
	expression/L3 = expression "&=" . expression
	expression/L3 = expression "&=" . expression
[156]
	expression/L3 = expression "%=" . expression
[157]
	expression/L3 = expression "&&=" . expression
[158]
	expression/L3 = expression "||=" . expression
[159]
	expression/L3 = expression "|=" . expression
[160]
	expression/L3 = expression "<<=" . expression
[161]
	expression/L3 = expression ">>=" . expression
[162]
	expression/L12 = expression "." . IDENT
[163]
	expression/L2 = "(" expression . ")"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[164]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L9 = "&" expression .
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[165]
	statement/L1 = "{" codeblock . "}"
[166]
	statement/L1 = expression . ";"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	expressionlist = expression . "," expressionlist
	expressionlist = expression .
[167]
	expression/L1 = "{" expressionlist . "}"
[168]
	expression/L1 = "{" "}" .
[169]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L9 = "+" expression .
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[170]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L9 = "-" expression .
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[171]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L12 = "*" expression .
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[172]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L9 = "~" expression .
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[173]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L9 = "!" expression .
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[174]
	statement/L1 = "var" variabledefinition . ";"
[175]
	statement/L1 = "return" expression . ";"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[176]
	statement/L1 = "delete" expression . ";"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[177]
	statement/L1 = "if" "(" . expression ")" "{" codeblock "}"
	statement/L1 = "if" "(" . expression ")" "{" codeblock "}" "else" "{" codeblock "}"
[178]
	statement/L1 = "while" "(" . expression ")" "{" codeblock "}"
[179]
	expression/L1 = "new" typespec . ":" expression
[180]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	expressionlist = expression . "," expressionlist
	expressionlist = expression .
[181]
	variabledefinition = typespec IDENT "[" expression "]" . "=" expression
	variabledefinition = typespec IDENT "[" expression "]" .
[182]
	functiondefinition = linkage "function" typespec IDENT callablebody .
[183]
	paramdecl = typespec . IDENT
[184]
	callablebody = "(" parameterlist . ")" "{" codeblock "}"
	callablebody = "(" parameterlist . ")" "const" "{" codeblock "}"
[185]
	parameterlist = parameters .
[186]
	parameters = paramdecl . "," parameters
	parameters = paramdecl .
[187]
	typespec/L1 = "const" typename "^" "^" "&" .
[188]
	structdefinition = "struct" IDENT "{" struct_definitionlist "}" .
[189]
	struct_definitionlist = struct_definition struct_definitionlist .
[190]
	interfacedefinition = "interface" IDENT "{" interface_definitionlist "}" .
[191]
	interface_definitionlist = interface_definition interface_definitionlist .
[192]
	interface_definition = "function" typespec . IDENT "(" parameterlist ")" ";"
	interface_definition = "function" typespec . IDENT "(" parameterlist ")" "const" ";"
[193]
	interface_definition = "procedure" IDENT . "(" parameterlist ")" ";"
	interface_definition = "procedure" IDENT . "(" parameterlist ")" "const" ";"
[194]
	classdefinition = "class" IDENT "{" class_definitionlist "}" .
[195]
	class_definitionlist = class_definition class_definitionlist .
[196]
	class_definition = typedefinition ";" .
[197]
	constructordefinition = linkage "constructor" . callablebody
[198]
	operatordefinition = linkage "operator" . "->" typespec callablebody
	operatordefinition = linkage "operator" . "=" typespec callablebody
	operatordefinition = linkage "operator" . "+" typespec callablebody
	operatordefinition = linkage "operator" . "-" typespec callablebody
	operatordefinition = linkage "operator" . "*" typespec callablebody
	operatordefinition = linkage "operator" . "/" typespec callablebody
	operatordefinition = linkage "operator" . "%" typespec callablebody
	operatordefinition = linkage "operator" . "&&" typespec callablebody
	operatordefinition = linkage "operator" . "||" typespec callablebody
	operatordefinition = linkage "operator" . "&" typespec callablebody
	operatordefinition = linkage "operator" . "|" typespec callablebody
	operatordefinition = linkage "operator" . "<<" typespec callablebody
	operatordefinition = linkage "operator" . ">>" typespec callablebody
	operatordefinition = linkage "operator" . "~" typespec callablebody
	operatordefinition = linkage "operator" . "!" typespec callablebody
	operatordefinition = linkage "operator" . "(" ")" typespec callablebody
	operatordefinition = linkage "operator" . "[" "]" typespec callablebody
	operatordefinition = linkage "operator" . "==" typespec callablebody
	operatordefinition = linkage "operator" . "!=" typespec callablebody
	operatordefinition = linkage "operator" . ">=" typespec callablebody
	operatordefinition = linkage "operator" . "<=" typespec callablebody
	operatordefinition = linkage "operator" . ">" typespec callablebody
	operatordefinition = linkage "operator" . "<" typespec callablebody
[199]
	class_definition = variabledefinition ";" .
[200]
	constructordefinition = "destructor" "{" . codeblock "}"
[201]
	inheritlist = typepath "," . inheritlist
[202]
	classdefinition = "class" IDENT ":" inheritlist "{" . class_definitionlist "}"
[203]
	extern_definition = "extern" DQSTRING "function" typespec IDENT "(" . extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING "function" typespec IDENT "(" . extern_paramlist "..." ")" ";"
[204]
	extern_paramlist = extern_parameters .
[205]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist . ")" ";"
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist . "..." ")" ";"
[206]
	extern_parameters = typespec . "," extern_parameters
	extern_parameters = typespec .
[207]
	iexpression = expression indirection IDENT .
[208]
	expression/L13 = expression "(" expressionlist . ")"
[209]
	expression/L13 = expression "(" ")" .
[210]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L7 = expression "&" expression .
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[211]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression "^" expression .
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[212]
	indirection = "->" indirection .
[213]
	expression/L3 = expression . "=" expression
	expression/L3 = expression "=" expression .
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[214]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression "+" expression .
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[215]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L9 = expression "-" expression .
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[216]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression "*" expression .
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[217]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression "/" expression .
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[218]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L10 = expression "%" expression .
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[219]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L5 = expression "&&" expression .
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[220]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L4 = expression "||" expression .
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[221]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L6 = expression "|" expression .
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[222]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression "<<" expression .
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[223]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L11 = expression ">>" expression .
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[224]
	expression/L13 = expression "[" expressionlist . "]"
[225]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression "==" expression .
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[226]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression "!=" expression .
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[227]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression ">=" expression .
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[228]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression "<=" expression .
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[229]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L8 = expression ">" expression .
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[230]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression "<" expression .
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[231]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression "+=" expression .
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[232]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression "-=" expression .
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[233]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression "*=" expression .
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[234]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression "/=" expression .
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[235]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression "^=" expression .
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[236]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression "&=" expression .
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression "&=" expression .
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[237]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression "%=" expression .
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[238]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression "&&=" expression .
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[239]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression "||=" expression .
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[240]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression "|=" expression .
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[241]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression "<<=" expression .
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[242]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L3 = expression ">>=" expression .
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[243]
	expression/L12 = expression "." IDENT .
[244]
	expression/L2 = "(" expression ")" .
[245]
	statement/L1 = "{" codeblock "}" .
[246]
	expressionlist = expression "," . expressionlist
[247]
	expression/L1 = "{" expressionlist "}" .
[248]
	statement/L1 = "var" variabledefinition ";" .
[249]
	statement/L1 = "return" expression ";" .
[250]
	statement/L1 = "delete" expression ";" .
[251]
	statement/L1 = "if" "(" expression . ")" "{" codeblock "}"
	statement/L1 = "if" "(" expression . ")" "{" codeblock "}" "else" "{" codeblock "}"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[252]
	statement/L1 = "while" "(" expression . ")" "{" codeblock "}"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[253]
	expression/L1 = "new" typespec ":" . expression
[254]
	variabledefinition = typespec IDENT "[" expression "]" "=" . expression
[255]
	paramdecl = typespec IDENT .
[256]
	callablebody = "(" parameterlist ")" . "{" codeblock "}"
	callablebody = "(" parameterlist ")" . "const" "{" codeblock "}"
[257]
	parameters = paramdecl "," . parameters
[258]
	interface_definition = "function" typespec IDENT . "(" parameterlist ")" ";"
	interface_definition = "function" typespec IDENT . "(" parameterlist ")" "const" ";"
[259]
	interface_definition = "procedure" IDENT "(" . parameterlist ")" ";"
	interface_definition = "procedure" IDENT "(" . parameterlist ")" "const" ";"
[260]
	constructordefinition = linkage "constructor" callablebody .
[261]
	operatordefinition = linkage "operator" "(" . ")" typespec callablebody
[262]
	operatordefinition = linkage "operator" "&" . typespec callablebody
[263]
	operatordefinition = linkage "operator" "->" . typespec callablebody
[264]
	operatordefinition = linkage "operator" "=" . typespec callablebody
[265]
	operatordefinition = linkage "operator" "+" . typespec callablebody
[266]
	operatordefinition = linkage "operator" "-" . typespec callablebody
[267]
	operatordefinition = linkage "operator" "*" . typespec callablebody
[268]
	operatordefinition = linkage "operator" "/" . typespec callablebody
[269]
	operatordefinition = linkage "operator" "%" . typespec callablebody
[270]
	operatordefinition = linkage "operator" "&&" . typespec callablebody
[271]
	operatordefinition = linkage "operator" "||" . typespec callablebody
[272]
	operatordefinition = linkage "operator" "|" . typespec callablebody
[273]
	operatordefinition = linkage "operator" "<<" . typespec callablebody
[274]
	operatordefinition = linkage "operator" ">>" . typespec callablebody
[275]
	operatordefinition = linkage "operator" "~" . typespec callablebody
[276]
	operatordefinition = linkage "operator" "!" . typespec callablebody
[277]
	operatordefinition = linkage "operator" "[" . "]" typespec callablebody
[278]
	operatordefinition = linkage "operator" "==" . typespec callablebody
[279]
	operatordefinition = linkage "operator" "!=" . typespec callablebody
[280]
	operatordefinition = linkage "operator" ">=" . typespec callablebody
[281]
	operatordefinition = linkage "operator" "<=" . typespec callablebody
[282]
	operatordefinition = linkage "operator" ">" . typespec callablebody
[283]
	operatordefinition = linkage "operator" "<" . typespec callablebody
[284]
	constructordefinition = "destructor" "{" codeblock . "}"
[285]
	inheritlist = typepath "," inheritlist .
[286]
	classdefinition = "class" IDENT ":" inheritlist "{" class_definitionlist . "}"
[287]
	extern_definition = "extern" DQSTRING "function" typespec IDENT "(" extern_paramlist . ")" ";"
	extern_definition = "extern" DQSTRING "function" typespec IDENT "(" extern_paramlist . "..." ")" ";"
[288]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist ")" . ";"
[289]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist "..." . ")" ";"
[290]
	extern_parameters = typespec "," . extern_parameters
[291]
	expression/L13 = expression "(" expressionlist ")" .
[292]
	expression/L13 = expression "[" expressionlist "]" .
[293]
	expressionlist = expression "," expressionlist .
[294]
	statement/L1 = "if" "(" expression ")" . "{" codeblock "}"
	statement/L1 = "if" "(" expression ")" . "{" codeblock "}" "else" "{" codeblock "}"
[295]
	statement/L1 = "while" "(" expression ")" . "{" codeblock "}"
[296]
	expression/L1 = "new" typespec ":" expression .
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[297]
	variabledefinition = typespec IDENT "[" expression "]" "=" expression .
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[298]
	callablebody = "(" parameterlist ")" "const" . "{" codeblock "}"
[299]
	callablebody = "(" parameterlist ")" "{" . codeblock "}"
[300]
	parameters = paramdecl "," parameters .
[301]
	interface_definition = "function" typespec IDENT "(" . parameterlist ")" ";"
	interface_definition = "function" typespec IDENT "(" . parameterlist ")" "const" ";"
[302]
	interface_definition = "procedure" IDENT "(" parameterlist . ")" ";"
	interface_definition = "procedure" IDENT "(" parameterlist . ")" "const" ";"
[303]
	operatordefinition = linkage "operator" "(" ")" . typespec callablebody
[304]
	operatordefinition = linkage "operator" "&" typespec . callablebody
[305]
	operatordefinition = linkage "operator" "->" typespec . callablebody
[306]
	operatordefinition = linkage "operator" "=" typespec . callablebody
[307]
	operatordefinition = linkage "operator" "+" typespec . callablebody
[308]
	operatordefinition = linkage "operator" "-" typespec . callablebody
[309]
	operatordefinition = linkage "operator" "*" typespec . callablebody
[310]
	operatordefinition = linkage "operator" "/" typespec . callablebody
[311]
	operatordefinition = linkage "operator" "%" typespec . callablebody
[312]
	operatordefinition = linkage "operator" "&&" typespec . callablebody
[313]
	operatordefinition = linkage "operator" "||" typespec . callablebody
[314]
	operatordefinition = linkage "operator" "|" typespec . callablebody
[315]
	operatordefinition = linkage "operator" "<<" typespec . callablebody
[316]
	operatordefinition = linkage "operator" ">>" typespec . callablebody
[317]
	operatordefinition = linkage "operator" "~" typespec . callablebody
[318]
	operatordefinition = linkage "operator" "!" typespec . callablebody
[319]
	operatordefinition = linkage "operator" "[" "]" . typespec callablebody
[320]
	operatordefinition = linkage "operator" "==" typespec . callablebody
[321]
	operatordefinition = linkage "operator" "!=" typespec . callablebody
[322]
	operatordefinition = linkage "operator" ">=" typespec . callablebody
[323]
	operatordefinition = linkage "operator" "<=" typespec . callablebody
[324]
	operatordefinition = linkage "operator" ">" typespec . callablebody
[325]
	operatordefinition = linkage "operator" "<" typespec . callablebody
[326]
	constructordefinition = "destructor" "{" codeblock "}" .
[327]
	classdefinition = "class" IDENT ":" inheritlist "{" class_definitionlist "}" .
[328]
	extern_definition = "extern" DQSTRING "function" typespec IDENT "(" extern_paramlist ")" . ";"
[329]
	extern_definition = "extern" DQSTRING "function" typespec IDENT "(" extern_paramlist "..." . ")" ";"
[330]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist ")" ";" .
[331]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist "..." ")" . ";"
[332]
	extern_parameters = typespec "," extern_parameters .
[333]
	statement/L1 = "if" "(" expression ")" "{" . codeblock "}"
	statement/L1 = "if" "(" expression ")" "{" . codeblock "}" "else" "{" codeblock "}"
[334]
	statement/L1 = "while" "(" expression ")" "{" . codeblock "}"
[335]
	callablebody = "(" parameterlist ")" "const" "{" . codeblock "}"
[336]
	callablebody = "(" parameterlist ")" "{" codeblock . "}"
[337]
	interface_definition = "function" typespec IDENT "(" parameterlist . ")" ";"
	interface_definition = "function" typespec IDENT "(" parameterlist . ")" "const" ";"
[338]
	interface_definition = "procedure" IDENT "(" parameterlist ")" . ";"
	interface_definition = "procedure" IDENT "(" parameterlist ")" . "const" ";"
[339]
	operatordefinition = linkage "operator" "(" ")" typespec . callablebody
[340]
	operatordefinition = linkage "operator" "&" typespec callablebody .
[341]
	operatordefinition = linkage "operator" "->" typespec callablebody .
[342]
	operatordefinition = linkage "operator" "=" typespec callablebody .
[343]
	operatordefinition = linkage "operator" "+" typespec callablebody .
[344]
	operatordefinition = linkage "operator" "-" typespec callablebody .
[345]
	operatordefinition = linkage "operator" "*" typespec callablebody .
[346]
	operatordefinition = linkage "operator" "/" typespec callablebody .
[347]
	operatordefinition = linkage "operator" "%" typespec callablebody .
[348]
	operatordefinition = linkage "operator" "&&" typespec callablebody .
[349]
	operatordefinition = linkage "operator" "||" typespec callablebody .
[350]
	operatordefinition = linkage "operator" "|" typespec callablebody .
[351]
	operatordefinition = linkage "operator" "<<" typespec callablebody .
[352]
	operatordefinition = linkage "operator" ">>" typespec callablebody .
[353]
	operatordefinition = linkage "operator" "~" typespec callablebody .
[354]
	operatordefinition = linkage "operator" "!" typespec callablebody .
[355]
	operatordefinition = linkage "operator" "[" "]" typespec . callablebody
[356]
	operatordefinition = linkage "operator" "==" typespec callablebody .
[357]
	operatordefinition = linkage "operator" "!=" typespec callablebody .
[358]
	operatordefinition = linkage "operator" ">=" typespec callablebody .
[359]
	operatordefinition = linkage "operator" "<=" typespec callablebody .
[360]
	operatordefinition = linkage "operator" ">" typespec callablebody .
[361]
	operatordefinition = linkage "operator" "<" typespec callablebody .
[362]
	extern_definition = "extern" DQSTRING "function" typespec IDENT "(" extern_paramlist ")" ";" .
[363]
	extern_definition = "extern" DQSTRING "function" typespec IDENT "(" extern_paramlist "..." ")" . ";"
[364]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist "..." ")" ";" .
[365]
	statement/L1 = "if" "(" expression ")" "{" codeblock . "}"
	statement/L1 = "if" "(" expression ")" "{" codeblock . "}" "else" "{" codeblock "}"
[366]
	statement/L1 = "while" "(" expression ")" "{" codeblock . "}"
[367]
	callablebody = "(" parameterlist ")" "const" "{" codeblock . "}"
[368]
	callablebody = "(" parameterlist ")" "{" codeblock "}" .
[369]
	interface_definition = "function" typespec IDENT "(" parameterlist ")" . ";"
	interface_definition = "function" typespec IDENT "(" parameterlist ")" . "const" ";"
[370]
	interface_definition = "procedure" IDENT "(" parameterlist ")" ";" .
[371]
	interface_definition = "procedure" IDENT "(" parameterlist ")" "const" . ";"
[372]
	operatordefinition = linkage "operator" "(" ")" typespec callablebody .
[373]
	operatordefinition = linkage "operator" "[" "]" typespec callablebody .
[374]
	extern_definition = "extern" DQSTRING "function" typespec IDENT "(" extern_paramlist "..." ")" ";" .
[375]
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" .
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" . "else" "{" codeblock "}"
[376]
	statement/L1 = "while" "(" expression ")" "{" codeblock "}" .
[377]
	callablebody = "(" parameterlist ")" "const" "{" codeblock "}" .
[378]
	interface_definition = "function" typespec IDENT "(" parameterlist ")" ";" .
[379]
	interface_definition = "function" typespec IDENT "(" parameterlist ")" "const" . ";"
[380]
	interface_definition = "procedure" IDENT "(" parameterlist ")" "const" ";" .
[381]
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" "else" . "{" codeblock "}"
[382]
	interface_definition = "function" typespec IDENT "(" parameterlist ")" "const" ";" .
[383]
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" "else" "{" . codeblock "}"
[384]
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock . "}"
[385]
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}" .

-- LR(1) used FOLLOW sets labeled:
[0]: {$}
[1]: {$ IDENT "function" "procedure" "const" "typedef" "struct" "interface" "class" "private" "public" "main"}
[2]: {$ "main"}
[9]: {IDENT}
[10]: {')'}
[13]: {';'}
[16]: {'}'}
[17]: {'{'}
[22]: {'('}
[24]: {']'}
[25]: {':'}
[58]: {$ IDENT "extern" "function" "procedure" "const" "typedef" "struct" "interface" "class" "private" "public" "main"}
[60]: {"function" "procedure"}
[61]: {IDENT '&' '^'}
[96]: {'(' ';' '&' '^' "->" '=' '+' '-' '*' '/' '%' "&&" "||" '|' "<<" ">>" '[' "==" "!=" ">=" "<=" '>' '<' "+=" "-=" "*=" "/=" "^=" "&=" "%=" "&&=" "||=" "|=" "<<=" ">>=" '.'}
[97]: {$ BOOLEAN IDENT DQSTRING SQSTRING CARDINAL INTEGER FLOAT "function" '(' "procedure" '&' "typedef" '{' '}' "private" "public" '+' '-' '*' '~' '!' "var" "return" "delete" "if" "while" "new" "null"}
[166]: {'(' '&' '^' "->" '=' '+' '-' '*' '/' '%' "&&" "||" '|' "<<" ">>" '[' ']' "==" "!=" ">=" "<=" '>' '<' "+=" "-=" "*=" "/=" "^=" "&=" "%=" "&&=" "||=" "|=" "<<=" ">>=" '.'}
[167]: {$ IDENT "const" "typedef" "struct" '}'}
[168]: {$ IDENT "function" "procedure" "const" "typedef" "struct" '}' "interface" "class" "private" "public" "main"}
[169]: {$ "function" "procedure" '}'}
[171]: {"function" "procedure" "constructor" "operator"}
[172]: {$ IDENT "function" "procedure" "const" "typedef" "struct" '}' "interface" "class" "private" "public" "constructor" "destructor" "operator"}
[173]: {$ IDENT "function" "procedure" "const" "typedef" "struct" '}' "interface" "class" "private" "public" "constructor" "destructor" "operator" "main"}
[174]: {',' '{'}
[177]: {'(' ';' ',' '&' '^' '}' "->" '=' '+' '-' '*' '/' '%' "&&" "||" '|' "<<" ">>" '[' "==" "!=" ">=" "<=" '>' '<' "+=" "-=" "*=" "/=" "^=" "&=" "%=" "&&=" "||=" "|=" "<<=" ">>=" '.'}
[178]: {'&' '^' ':'}
[182]: {')' ','}
[183]: {')' "..."}
[185]: {')' "..." ','}
[186]: {')' "..." ',' '&' '^'}
[224]: {'(' ')' '&' '^' "->" '=' '+' '-' '*' '/' '%' "&&" "||" '|' "<<" ">>" '[' "==" "!=" ">=" "<=" '>' '<' "+=" "-=" "*=" "/=" "^=" "&=" "%=" "&&=" "||=" "|=" "<<=" ">>=" '.'}
[226]: {'(' ')' ',' '&' '^' '}' "->" '=' '+' '-' '*' '/' '%' "&&" "||" '|' "<<" ">>" '[' ']' "==" "!=" ">=" "<=" '>' '<' "+=" "-=" "*=" "/=" "^=" "&=" "%=" "&&=" "||=" "|=" "<<=" ">>=" '.'}
[233]: {'(' '&' '^'}
[234]: {'(' ')' ';' ',' '&' '^' '}' "->" '=' '+' '-' '*' '/' '%' "&&" "||" '|' "<<" ">>" '[' ']' "==" "!=" ">=" "<=" '>' '<' "+=" "-=" "*=" "/=" "^=" "&=" "%=" "&&=" "||=" "|=" "<<=" ">>=" '.'}
[236]: {$ BOOLEAN IDENT DQSTRING SQSTRING CARDINAL INTEGER FLOAT "function" '(' "procedure" "const" '&' "typedef" "struct" '{' '}' "interface" "class" "private" "public" '+' '-' '*' '~' '!' "main" "var" "return" "delete" "if" "while" "new" "null"}
[238]: {')' '}' ']'}
[244]: {$ BOOLEAN IDENT DQSTRING SQSTRING CARDINAL INTEGER FLOAT "function" '(' "procedure" "const" '&' "typedef" "struct" '{' '}' "interface" "class" "private" "public" "constructor" "destructor" "operator" '+' '-' '*' '~' '!' "main" "var" "return" "delete" "if" "while" "new" "null"}
[248]: {IDENT '(' ')' "..." ',' ':'}
[255]: {IDENT '(' ')' "..." ',' '&' '^' ':'}
[256]: {IDENT ',' '{'}
[260]: {IDENT '(' ')' "..." ',' '&' '^' '{' ':'}

-- LALR(1) states (merged LR(1) elements assigned to LR(0) states):
[1]
	program = . extern_definitionlist free_definitionlist main_procedure, FOLLOW [0] -> GOTO 2
	extern_definitionlist = . extern_definition extern_definitionlist, FOLLOW [1] -> GOTO 3
	extern_definition = . "extern" DQSTRING "function" typespec IDENT "(" extern_paramlist ")" ";", FOLLOW [58] -> SHIFT "extern" GOTO 4
	extern_definition = . "extern" DQSTRING "procedure" IDENT "(" extern_paramlist ")" ";", FOLLOW [58] -> SHIFT "extern" GOTO 4
	extern_definition = . "extern" DQSTRING "function" typespec IDENT "(" extern_paramlist "..." ")" ";", FOLLOW [58] -> SHIFT "extern" GOTO 4
	extern_definition = . "extern" DQSTRING "procedure" IDENT "(" extern_paramlist "..." ")" ";", FOLLOW [58] -> SHIFT "extern" GOTO 4
	extern_definitionlist = ., FOLLOW [1] -> REDUCE extern_definitionlist #0
[2]
	program = extern_definitionlist . free_definitionlist main_procedure, FOLLOW [0] -> GOTO 5
	free_definition = . struct_definition, FOLLOW [1] -> GOTO 6
	free_definitionlist = . free_definition free_definitionlist, FOLLOW [2] -> GOTO 7
	typespec/L1 = . typename, FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [9] -> GOTO 8
	variabledefinition = . typespec IDENT, FOLLOW [13] -> GOTO 9
	variabledefinition = . typespec IDENT "=" expression, FOLLOW [13] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression, FOLLOW [13] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]", FOLLOW [13] -> GOTO 9
	struct_definition = . typedefinition ";", FOLLOW [1] -> GOTO 10
	struct_definition = . structdefinition, FOLLOW [1] -> GOTO 11
	free_definition = . interfacedefinition, FOLLOW [1] -> GOTO 12
	free_definition = . classdefinition, FOLLOW [1] -> GOTO 13
	functiondefinition = . linkage "function" typespec IDENT callablebody, FOLLOW [1] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [1] -> GOTO 14
	free_definition = . functiondefinition, FOLLOW [1] -> GOTO 15
	struct_definition = . variabledefinition ";", FOLLOW [1] -> GOTO 16
	typename/L1 = . IDENT, FOLLOW [61] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [61] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typedefinition = . "typedef" typepath IDENT, FOLLOW [13] -> SHIFT "typedef" GOTO 19
	structdefinition = . "struct" IDENT "{" struct_definitionlist "}", FOLLOW [1] -> SHIFT "struct" GOTO 20
	interfacedefinition = . "interface" IDENT "{" interface_definitionlist "}", FOLLOW [1] -> SHIFT "interface" GOTO 21
	classdefinition = . "class" IDENT "{" class_definitionlist "}", FOLLOW [1] -> SHIFT "class" GOTO 22
	classdefinition = . "class" IDENT ":" inheritlist "{" class_definitionlist "}", FOLLOW [1] -> SHIFT "class" GOTO 22
	linkage = . "private", FOLLOW [60] -> SHIFT "private" GOTO 23
	linkage = . "public", FOLLOW [60] -> SHIFT "public" GOTO 24
	free_definitionlist = ., FOLLOW [2] -> REDUCE free_definitionlist #0
	linkage = . (30), FOLLOW [60] -> REDUCE linkage #0 CALL linkage {linkage="internal",attributes="#0 nounwind"}
[3]
	extern_definitionlist = extern_definition . extern_definitionlist, FOLLOW [1] -> GOTO 25
	extern_definitionlist = . extern_definition extern_definitionlist, FOLLOW [1] -> GOTO 3
	extern_definition = . "extern" DQSTRING "function" typespec IDENT "(" extern_paramlist ")" ";", FOLLOW [58] -> SHIFT "extern" GOTO 4
	extern_definition = . "extern" DQSTRING "procedure" IDENT "(" extern_paramlist ")" ";", FOLLOW [58] -> SHIFT "extern" GOTO 4
	extern_definition = . "extern" DQSTRING "function" typespec IDENT "(" extern_paramlist "..." ")" ";", FOLLOW [58] -> SHIFT "extern" GOTO 4
	extern_definition = . "extern" DQSTRING "procedure" IDENT "(" extern_paramlist "..." ")" ";", FOLLOW [58] -> SHIFT "extern" GOTO 4
	extern_definitionlist = ., FOLLOW [1] -> REDUCE extern_definitionlist #0
[4]
	extern_definition = "extern" . DQSTRING "function" typespec IDENT "(" extern_paramlist ")" ";", FOLLOW [58] -> SHIFT DQSTRING GOTO 26
	extern_definition = "extern" . DQSTRING "procedure" IDENT "(" extern_paramlist ")" ";", FOLLOW [58] -> SHIFT DQSTRING GOTO 26
	extern_definition = "extern" . DQSTRING "function" typespec IDENT "(" extern_paramlist "..." ")" ";", FOLLOW [58] -> SHIFT DQSTRING GOTO 26
	extern_definition = "extern" . DQSTRING "procedure" IDENT "(" extern_paramlist "..." ")" ";", FOLLOW [58] -> SHIFT DQSTRING GOTO 26
[5]
	program = extern_definitionlist free_definitionlist . main_procedure, FOLLOW [0] -> GOTO 27
	main_procedure = . "main" "{" codeblock "}", FOLLOW [0] -> SHIFT "main" GOTO 28
	main_procedure = ., FOLLOW [0] -> REDUCE main_procedure #0
[6]
	free_definition = struct_definition ., FOLLOW [1] -> REDUCE free_definition #1
[7]
	free_definitionlist = free_definition . free_definitionlist, FOLLOW [2] -> GOTO 29
	free_definition = . struct_definition, FOLLOW [1] -> GOTO 6
	free_definitionlist = . free_definition free_definitionlist, FOLLOW [2] -> GOTO 7
	typespec/L1 = . typename, FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [9] -> GOTO 8
	variabledefinition = . typespec IDENT, FOLLOW [13] -> GOTO 9
	variabledefinition = . typespec IDENT "=" expression, FOLLOW [13] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression, FOLLOW [13] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]", FOLLOW [13] -> GOTO 9
	struct_definition = . typedefinition ";", FOLLOW [1] -> GOTO 10
	struct_definition = . structdefinition, FOLLOW [1] -> GOTO 11
	free_definition = . interfacedefinition, FOLLOW [1] -> GOTO 12
	free_definition = . classdefinition, FOLLOW [1] -> GOTO 13
	functiondefinition = . linkage "function" typespec IDENT callablebody, FOLLOW [1] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [1] -> GOTO 14
	free_definition = . functiondefinition, FOLLOW [1] -> GOTO 15
	struct_definition = . variabledefinition ";", FOLLOW [1] -> GOTO 16
	typename/L1 = . IDENT, FOLLOW [61] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [61] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typedefinition = . "typedef" typepath IDENT, FOLLOW [13] -> SHIFT "typedef" GOTO 19
	structdefinition = . "struct" IDENT "{" struct_definitionlist "}", FOLLOW [1] -> SHIFT "struct" GOTO 20
	interfacedefinition = . "interface" IDENT "{" interface_definitionlist "}", FOLLOW [1] -> SHIFT "interface" GOTO 21
	classdefinition = . "class" IDENT "{" class_definitionlist "}", FOLLOW [1] -> SHIFT "class" GOTO 22
	classdefinition = . "class" IDENT ":" inheritlist "{" class_definitionlist "}", FOLLOW [1] -> SHIFT "class" GOTO 22
	linkage = . "private", FOLLOW [60] -> SHIFT "private" GOTO 23
	linkage = . "public", FOLLOW [60] -> SHIFT "public" GOTO 24
	free_definitionlist = ., FOLLOW [2] -> REDUCE free_definitionlist #0
	linkage = . (30), FOLLOW [60] -> REDUCE linkage #0 CALL linkage {linkage="internal",attributes="#0 nounwind"}
[8]
	typespec/L1 = typename . "&", FOLLOW [248] -> SHIFT '&' GOTO 30
	typespec/L1 = typename . "^", FOLLOW [248] -> SHIFT '^' GOTO 31
	typespec/L1 = typename . "^" "&", FOLLOW [248] -> SHIFT '^' GOTO 31
	typespec/L1 = typename . "^" "^", FOLLOW [248] -> SHIFT '^' GOTO 31
	typespec/L1 = typename . "^" "^" "&", FOLLOW [248] -> SHIFT '^' GOTO 31
	typespec/L1 = typename . (13), FOLLOW [248] -> REDUCE typespec #1 CALL typespec ""
[9]
	variabledefinition = typespec . IDENT, FOLLOW [13] -> SHIFT IDENT GOTO 32
	variabledefinition = typespec . IDENT "=" expression, FOLLOW [13] -> SHIFT IDENT GOTO 32
	variabledefinition = typespec . IDENT "[" expression "]" "=" expression, FOLLOW [13] -> SHIFT IDENT GOTO 32
	variabledefinition = typespec . IDENT "[" expression "]", FOLLOW [13] -> SHIFT IDENT GOTO 32
[10]
	struct_definition = typedefinition . ";", FOLLOW [168] -> SHIFT ';' GOTO 33
[11]
	struct_definition = structdefinition . (11), FOLLOW [168] -> REDUCE struct_definition #1 CALL definition 1
[12]
	free_definition = interfacedefinition . (11), FOLLOW [1] -> REDUCE free_definition #1 CALL definition 1
[13]
	free_definition = classdefinition . (11), FOLLOW [1] -> REDUCE free_definition #1 CALL definition 1
[14]
	functiondefinition = linkage . "function" typespec IDENT callablebody, FOLLOW [236] -> SHIFT "function" GOTO 34
	functiondefinition = linkage . "procedure" IDENT callablebody, FOLLOW [236] -> SHIFT "procedure" GOTO 35
[15]
	free_definition = functiondefinition . (11), FOLLOW [1] -> REDUCE free_definition #1 CALL definition 1
[16]
	struct_definition = variabledefinition . ";", FOLLOW [168] -> SHIFT ';' GOTO 36
[17]
	typename/L1 = IDENT . "::" typename, FOLLOW [260] -> SHIFT "::" GOTO 37
	typename/L1 = IDENT ., FOLLOW [260] -> REDUCE typename #1
[18]
	typespec/L1 = "const" . typename, FOLLOW [248] -> GOTO 38
	typespec/L1 = "const" . typename "&", FOLLOW [248] -> GOTO 38
	typespec/L1 = "const" . typename "^", FOLLOW [248] -> GOTO 38
	typespec/L1 = "const" . typename "^" "&", FOLLOW [248] -> GOTO 38
	typespec/L1 = "const" . typename "^" "^", FOLLOW [248] -> GOTO 38
	typespec/L1 = "const" . typename "^" "^" "&", FOLLOW [248] -> GOTO 38
	typename/L1 = . IDENT, FOLLOW [255] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [255] -> SHIFT IDENT GOTO 17
[19]
	typepath/L1 = . typename, FOLLOW [9] -> GOTO 39
	typedefinition = "typedef" . typepath IDENT, FOLLOW [13] -> GOTO 40
	typename/L1 = . IDENT, FOLLOW [9] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [9] -> SHIFT IDENT GOTO 17
[20]
	structdefinition = "struct" . IDENT "{" struct_definitionlist "}", FOLLOW [173] -> SHIFT IDENT GOTO 41
[21]
	interfacedefinition = "interface" . IDENT "{" interface_definitionlist "}", FOLLOW [173] -> SHIFT IDENT GOTO 42
[22]
	classdefinition = "class" . IDENT "{" class_definitionlist "}", FOLLOW [173] -> SHIFT IDENT GOTO 43
	classdefinition = "class" . IDENT ":" inheritlist "{" class_definitionlist "}", FOLLOW [173] -> SHIFT IDENT GOTO 43
[23]
	linkage = "private" . (30), FOLLOW [171] -> REDUCE linkage #1 CALL linkage {linkage="internal",attributes="#0 nounwind"}
[24]
	linkage = "public" . (31), FOLLOW [171] -> REDUCE linkage #1 CALL linkage {linkage="external",attributes="#0 noinline nounwind"}
[25]
	extern_definitionlist = extern_definition extern_definitionlist ., FOLLOW [1] -> REDUCE extern_definitionlist #2
[26]
	extern_definition = "extern" DQSTRING . "function" typespec IDENT "(" extern_paramlist ")" ";", FOLLOW [58] -> SHIFT "function" GOTO 44
	extern_definition = "extern" DQSTRING . "function" typespec IDENT "(" extern_paramlist "..." ")" ";", FOLLOW [58] -> SHIFT "function" GOTO 44
	extern_definition = "extern" DQSTRING . "procedure" IDENT "(" extern_paramlist ")" ";", FOLLOW [58] -> SHIFT "procedure" GOTO 45
	extern_definition = "extern" DQSTRING . "procedure" IDENT "(" extern_paramlist "..." ")" ";", FOLLOW [58] -> SHIFT "procedure" GOTO 45
[27]
	program = extern_definitionlist free_definitionlist main_procedure . (1) -> ACCEPT
	program = extern_definitionlist free_definitionlist main_procedure . (1), FOLLOW [0] -> REDUCE program #3 CALL program
[28]
	main_procedure = "main" . "{" codeblock "}", FOLLOW [0] -> SHIFT '{' GOTO 46
[29]
	free_definitionlist = free_definition free_definitionlist ., FOLLOW [2] -> REDUCE free_definitionlist #2
[30]
	typespec/L1 = typename "&" . (15), FOLLOW [248] -> REDUCE typespec #2 CALL typespec "&"
[31]
	typespec/L1 = typename "^" . "&", FOLLOW [248] -> SHIFT '&' GOTO 47
	typespec/L1 = typename "^" . "^", FOLLOW [248] -> SHIFT '^' GOTO 48
	typespec/L1 = typename "^" . "^" "&", FOLLOW [248] -> SHIFT '^' GOTO 48
	typespec/L1 = typename "^" . (17), FOLLOW [248] -> REDUCE typespec #2 CALL typespec "^"
[32]
	variabledefinition = typespec IDENT . "=" expression, FOLLOW [13] -> SHIFT '=' GOTO 49
	variabledefinition = typespec IDENT . "[" expression "]" "=" expression, FOLLOW [13] -> SHIFT '[' GOTO 50
	variabledefinition = typespec IDENT . "[" expression "]", FOLLOW [13] -> SHIFT '[' GOTO 50
	variabledefinition = typespec IDENT . (step:72), FOLLOW [13] -> REDUCE variabledefinition #2 CALL vardef
[33]
	struct_definition = typedefinition ";" . (11), FOLLOW [168] -> REDUCE struct_definition #2 CALL definition 1
[34]
	typespec/L1 = . typename, FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [9] -> GOTO 8
	functiondefinition = linkage "function" . typespec IDENT callablebody, FOLLOW [244] -> GOTO 51
	typename/L1 = . IDENT, FOLLOW [61] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [61] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
[35]
	functiondefinition = linkage "procedure" . IDENT callablebody, FOLLOW [244] -> SHIFT IDENT GOTO 52
[36]
	struct_definition = variabledefinition ";" . (11), FOLLOW [168] -> REDUCE struct_definition #2 CALL definition 1
[37]
	typename/L1 = IDENT "::" . typename, FOLLOW [260] -> GOTO 53
	typename/L1 = . IDENT, FOLLOW [260] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [260] -> SHIFT IDENT GOTO 17
[38]
	typespec/L1 = "const" typename . "&", FOLLOW [248] -> SHIFT '&' GOTO 54
	typespec/L1 = "const" typename . "^", FOLLOW [248] -> SHIFT '^' GOTO 55
	typespec/L1 = "const" typename . "^" "&", FOLLOW [248] -> SHIFT '^' GOTO 55
	typespec/L1 = "const" typename . "^" "^", FOLLOW [248] -> SHIFT '^' GOTO 55
	typespec/L1 = "const" typename . "^" "^" "&", FOLLOW [248] -> SHIFT '^' GOTO 55
	typespec/L1 = "const" typename . (14), FOLLOW [248] -> REDUCE typespec #2 CALL typespec "const "
[39]
	typepath/L1 = typename . (13), FOLLOW [256] -> REDUCE typepath #1 CALL typespec ""
[40]
	typedefinition = "typedef" typepath . IDENT, FOLLOW [13] -> SHIFT IDENT GOTO 56
[41]
	structdefinition = "struct" IDENT . "{" struct_definitionlist "}", FOLLOW [173] -> SHIFT '{' GOTO 57
[42]
	interfacedefinition = "interface" IDENT . "{" interface_definitionlist "}", FOLLOW [173] -> SHIFT '{' GOTO 58
[43]
	classdefinition = "class" IDENT . "{" class_definitionlist "}", FOLLOW [173] -> SHIFT '{' GOTO 59
	classdefinition = "class" IDENT . ":" inheritlist "{" class_definitionlist "}", FOLLOW [173] -> SHIFT ':' GOTO 60
[44]
	typespec/L1 = . typename, FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [9] -> GOTO 8
	extern_definition = "extern" DQSTRING "function" . typespec IDENT "(" extern_paramlist ")" ";", FOLLOW [58] -> GOTO 61
	extern_definition = "extern" DQSTRING "function" . typespec IDENT "(" extern_paramlist "..." ")" ";", FOLLOW [58] -> GOTO 61
	typename/L1 = . IDENT, FOLLOW [61] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [61] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
[45]
	extern_definition = "extern" DQSTRING "procedure" . IDENT "(" extern_paramlist ")" ";", FOLLOW [58] -> SHIFT IDENT GOTO 62
	extern_definition = "extern" DQSTRING "procedure" . IDENT "(" extern_paramlist "..." ")" ";", FOLLOW [58] -> SHIFT IDENT GOTO 62
[46]
	statement/L1 = . typedefinition ";", FOLLOW [97] -> GOTO 63
	functiondefinition = . linkage "function" typespec IDENT callablebody, FOLLOW [97] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [97] -> GOTO 14
	statement/L1 = . functiondefinition, FOLLOW [97] -> GOTO 64
	main_procedure = "main" "{" . codeblock "}", FOLLOW [0] -> GOTO 65
	codeblock = . statementlist, FOLLOW [16] -> GOTO 66
	statementlist = . statement statementlist, FOLLOW [16] -> GOTO 67
	statement/L1 = . expression ";", FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "+=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "-=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "*=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "/=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "^=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "&=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "%=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "&&=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "||=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "&=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "|=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "<<=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression ">>=" expression, FOLLOW [96] -> GOTO 68
	expression/L4 = . expression "||" expression, FOLLOW [96] -> GOTO 68
	expression/L5 = . expression "&&" expression, FOLLOW [96] -> GOTO 68
	expression/L6 = . expression "|" expression, FOLLOW [96] -> GOTO 68
	expression/L7 = . expression "^" expression, FOLLOW [96] -> GOTO 68
	expression/L7 = . expression "&" expression, FOLLOW [96] -> GOTO 68
	expression/L8 = . expression "==" expression, FOLLOW [96] -> GOTO 68
	expression/L8 = . expression "!=" expression, FOLLOW [96] -> GOTO 68
	expression/L8 = . expression "<=" expression, FOLLOW [96] -> GOTO 68
	expression/L8 = . expression "<" expression, FOLLOW [96] -> GOTO 68
	expression/L8 = . expression ">=" expression, FOLLOW [96] -> GOTO 68
	expression/L8 = . expression ">" expression, FOLLOW [96] -> GOTO 68
	expression/L9 = . expression "+" expression, FOLLOW [96] -> GOTO 68
	expression/L9 = . expression "-" expression, FOLLOW [96] -> GOTO 68
	expression/L10 = . expression "*" expression, FOLLOW [96] -> GOTO 68
	expression/L10 = . expression "/" expression, FOLLOW [96] -> GOTO 68
	expression/L10 = . expression "%" expression, FOLLOW [96] -> GOTO 68
	expression/L11 = . expression "<<" expression, FOLLOW [96] -> GOTO 68
	expression/L11 = . expression ">>" expression, FOLLOW [96] -> GOTO 68
	expression/L12 = . expression "." IDENT, FOLLOW [96] -> GOTO 68
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [96] -> GOTO 68
	expression/L13 = . expression "(" ")", FOLLOW [96] -> GOTO 68
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [96] -> GOTO 68
	iexpression = . expression indirection IDENT, FOLLOW [96] -> GOTO 68
	expression/L12 = . iexpression, FOLLOW [96] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [96] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [96] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [96] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [96] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [96] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [96] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [96] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [96] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [96] -> SHIFT '&' GOTO 78
	typedefinition = . "typedef" typepath IDENT, FOLLOW [13] -> SHIFT "typedef" GOTO 19
	statement/L1 = . "{" codeblock "}", FOLLOW [97] -> SHIFT '{' GOTO 79
	expression/L1 = . "{" expressionlist "}", FOLLOW [96] -> SHIFT '{' GOTO 79
	expression/L1 = . "{" "}", FOLLOW [96] -> SHIFT '{' GOTO 79
	linkage = . "private", FOLLOW [60] -> SHIFT "private" GOTO 23
	linkage = . "public", FOLLOW [60] -> SHIFT "public" GOTO 24
	expression/L9 = . "+" expression, FOLLOW [96] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [96] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [96] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [96] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [96] -> SHIFT '!' GOTO 84
	statement/L1 = . "var" variabledefinition ";", FOLLOW [97] -> SHIFT "var" GOTO 85
	statement/L1 = . "return" expression ";", FOLLOW [97] -> SHIFT "return" GOTO 86
	statement/L1 = . "delete" expression ";", FOLLOW [97] -> SHIFT "delete" GOTO 87
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}", FOLLOW [97] -> SHIFT "if" GOTO 88
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}", FOLLOW [97] -> SHIFT "if" GOTO 88
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}", FOLLOW [97] -> SHIFT "while" GOTO 89
	expression/L1 = . "new" typespec ":" expression, FOLLOW [96] -> SHIFT "new" GOTO 90
	expression/L2 = . "null", FOLLOW [96] -> SHIFT "null" GOTO 91
	statementlist = ., FOLLOW [16] -> REDUCE statementlist #0
	linkage = . (30), FOLLOW [60] -> REDUCE linkage #0 CALL linkage {linkage="internal",attributes="#0 nounwind"}
[47]
	typespec/L1 = typename "^" "&" . (19), FOLLOW [248] -> REDUCE typespec #3 CALL typespec "^&"
[48]
	typespec/L1 = typename "^" "^" . "&", FOLLOW [248] -> SHIFT '&' GOTO 92
	typespec/L1 = typename "^" "^" . (21), FOLLOW [248] -> REDUCE typespec #3 CALL typespec "^^"
[49]
	variabledefinition = typespec IDENT "=" . expression, FOLLOW [13] -> GOTO 93
	expression/L3 = . expression "=" expression, FOLLOW [96] -> GOTO 93
	expression/L3 = . expression "+=" expression, FOLLOW [96] -> GOTO 93
	expression/L3 = . expression "-=" expression, FOLLOW [96] -> GOTO 93
	expression/L3 = . expression "*=" expression, FOLLOW [96] -> GOTO 93
	expression/L3 = . expression "/=" expression, FOLLOW [96] -> GOTO 93
	expression/L3 = . expression "^=" expression, FOLLOW [96] -> GOTO 93
	expression/L3 = . expression "&=" expression, FOLLOW [96] -> GOTO 93
	expression/L3 = . expression "%=" expression, FOLLOW [96] -> GOTO 93
	expression/L3 = . expression "&&=" expression, FOLLOW [96] -> GOTO 93
	expression/L3 = . expression "||=" expression, FOLLOW [96] -> GOTO 93
	expression/L3 = . expression "&=" expression, FOLLOW [96] -> GOTO 93
	expression/L3 = . expression "|=" expression, FOLLOW [96] -> GOTO 93
	expression/L3 = . expression "<<=" expression, FOLLOW [96] -> GOTO 93
	expression/L3 = . expression ">>=" expression, FOLLOW [96] -> GOTO 93
	expression/L4 = . expression "||" expression, FOLLOW [96] -> GOTO 93
	expression/L5 = . expression "&&" expression, FOLLOW [96] -> GOTO 93
	expression/L6 = . expression "|" expression, FOLLOW [96] -> GOTO 93
	expression/L7 = . expression "^" expression, FOLLOW [96] -> GOTO 93
	expression/L7 = . expression "&" expression, FOLLOW [96] -> GOTO 93
	expression/L8 = . expression "==" expression, FOLLOW [96] -> GOTO 93
	expression/L8 = . expression "!=" expression, FOLLOW [96] -> GOTO 93
	expression/L8 = . expression "<=" expression, FOLLOW [96] -> GOTO 93
	expression/L8 = . expression "<" expression, FOLLOW [96] -> GOTO 93
	expression/L8 = . expression ">=" expression, FOLLOW [96] -> GOTO 93
	expression/L8 = . expression ">" expression, FOLLOW [96] -> GOTO 93
	expression/L9 = . expression "+" expression, FOLLOW [96] -> GOTO 93
	expression/L9 = . expression "-" expression, FOLLOW [96] -> GOTO 93
	expression/L10 = . expression "*" expression, FOLLOW [96] -> GOTO 93
	expression/L10 = . expression "/" expression, FOLLOW [96] -> GOTO 93
	expression/L10 = . expression "%" expression, FOLLOW [96] -> GOTO 93
	expression/L11 = . expression "<<" expression, FOLLOW [96] -> GOTO 93
	expression/L11 = . expression ">>" expression, FOLLOW [96] -> GOTO 93
	expression/L12 = . expression "." IDENT, FOLLOW [96] -> GOTO 93
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [96] -> GOTO 93
	expression/L13 = . expression "(" ")", FOLLOW [96] -> GOTO 93
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [96] -> GOTO 93
	iexpression = . expression indirection IDENT, FOLLOW [96] -> GOTO 93
	expression/L12 = . iexpression, FOLLOW [96] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [96] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [96] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [96] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [96] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [96] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [96] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [96] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [96] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [96] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [96] -> SHIFT '{' GOTO 94
	expression/L1 = . "{" "}", FOLLOW [96] -> SHIFT '{' GOTO 94
	expression/L9 = . "+" expression, FOLLOW [96] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [96] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [96] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [96] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [96] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [96] -> SHIFT "new" GOTO 90
	expression/L2 = . "null", FOLLOW [96] -> SHIFT "null" GOTO 91
[50]
	variabledefinition = typespec IDENT "[" . expression "]" "=" expression, FOLLOW [13] -> GOTO 95
	variabledefinition = typespec IDENT "[" . expression "]", FOLLOW [13] -> GOTO 95
	expression/L3 = . expression "=" expression, FOLLOW [166] -> GOTO 95
	expression/L3 = . expression "+=" expression, FOLLOW [166] -> GOTO 95
	expression/L3 = . expression "-=" expression, FOLLOW [166] -> GOTO 95
	expression/L3 = . expression "*=" expression, FOLLOW [166] -> GOTO 95
	expression/L3 = . expression "/=" expression, FOLLOW [166] -> GOTO 95
	expression/L3 = . expression "^=" expression, FOLLOW [166] -> GOTO 95
	expression/L3 = . expression "&=" expression, FOLLOW [166] -> GOTO 95
	expression/L3 = . expression "%=" expression, FOLLOW [166] -> GOTO 95
	expression/L3 = . expression "&&=" expression, FOLLOW [166] -> GOTO 95
	expression/L3 = . expression "||=" expression, FOLLOW [166] -> GOTO 95
	expression/L3 = . expression "&=" expression, FOLLOW [166] -> GOTO 95
	expression/L3 = . expression "|=" expression, FOLLOW [166] -> GOTO 95
	expression/L3 = . expression "<<=" expression, FOLLOW [166] -> GOTO 95
	expression/L3 = . expression ">>=" expression, FOLLOW [166] -> GOTO 95
	expression/L4 = . expression "||" expression, FOLLOW [166] -> GOTO 95
	expression/L5 = . expression "&&" expression, FOLLOW [166] -> GOTO 95
	expression/L6 = . expression "|" expression, FOLLOW [166] -> GOTO 95
	expression/L7 = . expression "^" expression, FOLLOW [166] -> GOTO 95
	expression/L7 = . expression "&" expression, FOLLOW [166] -> GOTO 95
	expression/L8 = . expression "==" expression, FOLLOW [166] -> GOTO 95
	expression/L8 = . expression "!=" expression, FOLLOW [166] -> GOTO 95
	expression/L8 = . expression "<=" expression, FOLLOW [166] -> GOTO 95
	expression/L8 = . expression "<" expression, FOLLOW [166] -> GOTO 95
	expression/L8 = . expression ">=" expression, FOLLOW [166] -> GOTO 95
	expression/L8 = . expression ">" expression, FOLLOW [166] -> GOTO 95
	expression/L9 = . expression "+" expression, FOLLOW [166] -> GOTO 95
	expression/L9 = . expression "-" expression, FOLLOW [166] -> GOTO 95
	expression/L10 = . expression "*" expression, FOLLOW [166] -> GOTO 95
	expression/L10 = . expression "/" expression, FOLLOW [166] -> GOTO 95
	expression/L10 = . expression "%" expression, FOLLOW [166] -> GOTO 95
	expression/L11 = . expression "<<" expression, FOLLOW [166] -> GOTO 95
	expression/L11 = . expression ">>" expression, FOLLOW [166] -> GOTO 95
	expression/L12 = . expression "." IDENT, FOLLOW [166] -> GOTO 95
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [166] -> GOTO 95
	expression/L13 = . expression "(" ")", FOLLOW [166] -> GOTO 95
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [166] -> GOTO 95
	iexpression = . expression indirection IDENT, FOLLOW [166] -> GOTO 95
	expression/L12 = . iexpression, FOLLOW [166] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [166] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [166] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [166] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [166] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [166] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [166] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [166] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [166] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [166] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [166] -> SHIFT '{' GOTO 94
	expression/L1 = . "{" "}", FOLLOW [166] -> SHIFT '{' GOTO 94
	expression/L9 = . "+" expression, FOLLOW [166] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [166] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [166] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [166] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [166] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [166] -> SHIFT "new" GOTO 90
	expression/L2 = . "null", FOLLOW [166] -> SHIFT "null" GOTO 91
[51]
	functiondefinition = linkage "function" typespec . IDENT callablebody, FOLLOW [244] -> SHIFT IDENT GOTO 96
[52]
	functiondefinition = linkage "procedure" IDENT . callablebody, FOLLOW [244] -> GOTO 97
	callablebody = . "(" parameterlist ")" "{" codeblock "}", FOLLOW [244] -> SHIFT '(' GOTO 98
	callablebody = . "(" parameterlist ")" "const" "{" codeblock "}", FOLLOW [244] -> SHIFT '(' GOTO 98
[53]
	typename/L1 = IDENT "::" typename ., FOLLOW [260] -> REDUCE typename #3
[54]
	typespec/L1 = "const" typename "&" . (16), FOLLOW [248] -> REDUCE typespec #3 CALL typespec "const&"
[55]
	typespec/L1 = "const" typename "^" . "&", FOLLOW [248] -> SHIFT '&' GOTO 99
	typespec/L1 = "const" typename "^" . "^", FOLLOW [248] -> SHIFT '^' GOTO 100
	typespec/L1 = "const" typename "^" . "^" "&", FOLLOW [248] -> SHIFT '^' GOTO 100
	typespec/L1 = "const" typename "^" . (18), FOLLOW [248] -> REDUCE typespec #3 CALL typespec "const^"
[56]
	typedefinition = "typedef" typepath IDENT . (step:25), FOLLOW [13] -> REDUCE typedefinition #3 CALL typedef
[57]
	structdefinition = "struct" IDENT "{" . struct_definitionlist "}", FOLLOW [173] -> GOTO 101
	struct_definitionlist = . struct_definition struct_definitionlist, FOLLOW [16] -> GOTO 102
	typespec/L1 = . typename, FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [9] -> GOTO 8
	variabledefinition = . typespec IDENT, FOLLOW [13] -> GOTO 9
	variabledefinition = . typespec IDENT "=" expression, FOLLOW [13] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression, FOLLOW [13] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]", FOLLOW [13] -> GOTO 9
	struct_definition = . typedefinition ";", FOLLOW [167] -> GOTO 10
	struct_definition = . structdefinition, FOLLOW [167] -> GOTO 11
	struct_definition = . variabledefinition ";", FOLLOW [167] -> GOTO 16
	typename/L1 = . IDENT, FOLLOW [61] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [61] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typedefinition = . "typedef" typepath IDENT, FOLLOW [13] -> SHIFT "typedef" GOTO 19
	structdefinition = . "struct" IDENT "{" struct_definitionlist "}", FOLLOW [173] -> SHIFT "struct" GOTO 20
	struct_definitionlist = ., FOLLOW [16] -> REDUCE struct_definitionlist #0
[58]
	interfacedefinition = "interface" IDENT "{" . interface_definitionlist "}", FOLLOW [173] -> GOTO 103
	interface_definitionlist = . interface_definition interface_definitionlist, FOLLOW [16] -> GOTO 104
	interface_definition = . "function" typespec IDENT "(" parameterlist ")" ";", FOLLOW [169] -> SHIFT "function" GOTO 105
	interface_definition = . "function" typespec IDENT "(" parameterlist ")" "const" ";", FOLLOW [169] -> SHIFT "function" GOTO 105
	interface_definition = . "procedure" IDENT "(" parameterlist ")" ";", FOLLOW [169] -> SHIFT "procedure" GOTO 106
	interface_definition = . "procedure" IDENT "(" parameterlist ")" "const" ";", FOLLOW [169] -> SHIFT "procedure" GOTO 106
	interface_definitionlist = ., FOLLOW [16] -> REDUCE interface_definitionlist #0
[59]
	classdefinition = "class" IDENT "{" . class_definitionlist "}", FOLLOW [173] -> GOTO 107
	class_definitionlist = . class_definition class_definitionlist, FOLLOW [16] -> GOTO 108
	typespec/L1 = . typename, FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [9] -> GOTO 8
	variabledefinition = . typespec IDENT, FOLLOW [13] -> GOTO 9
	variabledefinition = . typespec IDENT "=" expression, FOLLOW [13] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression, FOLLOW [13] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]", FOLLOW [13] -> GOTO 9
	class_definition = . typedefinition ";", FOLLOW [172] -> GOTO 109
	class_definition = . structdefinition, FOLLOW [172] -> GOTO 110
	class_definition = . interfacedefinition, FOLLOW [172] -> GOTO 111
	class_definition = . classdefinition, FOLLOW [172] -> GOTO 112
	functiondefinition = . linkage "function" typespec IDENT callablebody, FOLLOW [172] -> GOTO 113
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [172] -> GOTO 113
	constructordefinition = . linkage "constructor" callablebody, FOLLOW [172] -> GOTO 113
	operatordefinition = . linkage "operator" "->" typespec callablebody, FOLLOW [172] -> GOTO 113
	operatordefinition = . linkage "operator" "=" typespec callablebody, FOLLOW [172] -> GOTO 113
	operatordefinition = . linkage "operator" "+" typespec callablebody, FOLLOW [172] -> GOTO 113
	operatordefinition = . linkage "operator" "-" typespec callablebody, FOLLOW [172] -> GOTO 113
	operatordefinition = . linkage "operator" "*" typespec callablebody, FOLLOW [172] -> GOTO 113
	operatordefinition = . linkage "operator" "/" typespec callablebody, FOLLOW [172] -> GOTO 113
	operatordefinition = . linkage "operator" "%" typespec callablebody, FOLLOW [172] -> GOTO 113
	operatordefinition = . linkage "operator" "&&" typespec callablebody, FOLLOW [172] -> GOTO 113
	operatordefinition = . linkage "operator" "||" typespec callablebody, FOLLOW [172] -> GOTO 113
	operatordefinition = . linkage "operator" "&" typespec callablebody, FOLLOW [172] -> GOTO 113
	operatordefinition = . linkage "operator" "|" typespec callablebody, FOLLOW [172] -> GOTO 113
	operatordefinition = . linkage "operator" "<<" typespec callablebody, FOLLOW [172] -> GOTO 113
	operatordefinition = . linkage "operator" ">>" typespec callablebody, FOLLOW [172] -> GOTO 113
	operatordefinition = . linkage "operator" "~" typespec callablebody, FOLLOW [172] -> GOTO 113
	operatordefinition = . linkage "operator" "!" typespec callablebody, FOLLOW [172] -> GOTO 113
	operatordefinition = . linkage "operator" "(" ")" typespec callablebody, FOLLOW [172] -> GOTO 113
	operatordefinition = . linkage "operator" "[" "]" typespec callablebody, FOLLOW [172] -> GOTO 113
	operatordefinition = . linkage "operator" "==" typespec callablebody, FOLLOW [172] -> GOTO 113
	operatordefinition = . linkage "operator" "!=" typespec callablebody, FOLLOW [172] -> GOTO 113
	operatordefinition = . linkage "operator" ">=" typespec callablebody, FOLLOW [172] -> GOTO 113
	operatordefinition = . linkage "operator" "<=" typespec callablebody, FOLLOW [172] -> GOTO 113
	operatordefinition = . linkage "operator" ">" typespec callablebody, FOLLOW [172] -> GOTO 113
	operatordefinition = . linkage "operator" "<" typespec callablebody, FOLLOW [172] -> GOTO 113
	class_definition = . functiondefinition, FOLLOW [172] -> GOTO 114
	class_definition = . constructordefinition, FOLLOW [172] -> GOTO 115
	class_definition = . operatordefinition, FOLLOW [172] -> GOTO 116
	class_definition = . variabledefinition ";", FOLLOW [172] -> GOTO 117
	typename/L1 = . IDENT, FOLLOW [61] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [61] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typedefinition = . "typedef" typepath IDENT, FOLLOW [13] -> SHIFT "typedef" GOTO 19
	structdefinition = . "struct" IDENT "{" struct_definitionlist "}", FOLLOW [172] -> SHIFT "struct" GOTO 20
	interfacedefinition = . "interface" IDENT "{" interface_definitionlist "}", FOLLOW [172] -> SHIFT "interface" GOTO 21
	classdefinition = . "class" IDENT "{" class_definitionlist "}", FOLLOW [173] -> SHIFT "class" GOTO 22
	classdefinition = . "class" IDENT ":" inheritlist "{" class_definitionlist "}", FOLLOW [173] -> SHIFT "class" GOTO 22
	linkage = . "private", FOLLOW [171] -> SHIFT "private" GOTO 23
	linkage = . "public", FOLLOW [171] -> SHIFT "public" GOTO 24
	constructordefinition = . "destructor" "{" codeblock "}", FOLLOW [172] -> SHIFT "destructor" GOTO 118
	class_definitionlist = ., FOLLOW [16] -> REDUCE class_definitionlist #0
	linkage = . (30), FOLLOW [171] -> REDUCE linkage #0 CALL linkage {linkage="internal",attributes="#0 nounwind"}
[60]
	typepath/L1 = . typename, FOLLOW [174] -> GOTO 39
	inheritlist = . typepath "," inheritlist, FOLLOW [17] -> GOTO 119
	inheritlist = . typepath, FOLLOW [17] -> GOTO 119
	classdefinition = "class" IDENT ":" . inheritlist "{" class_definitionlist "}", FOLLOW [173] -> GOTO 120
	typename/L1 = . IDENT, FOLLOW [174] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [174] -> SHIFT IDENT GOTO 17
[61]
	extern_definition = "extern" DQSTRING "function" typespec . IDENT "(" extern_paramlist ")" ";", FOLLOW [58] -> SHIFT IDENT GOTO 121
	extern_definition = "extern" DQSTRING "function" typespec . IDENT "(" extern_paramlist "..." ")" ";", FOLLOW [58] -> SHIFT IDENT GOTO 121
[62]
	extern_definition = "extern" DQSTRING "procedure" IDENT . "(" extern_paramlist ")" ";", FOLLOW [58] -> SHIFT '(' GOTO 122
	extern_definition = "extern" DQSTRING "procedure" IDENT . "(" extern_paramlist "..." ")" ";", FOLLOW [58] -> SHIFT '(' GOTO 122
[63]
	statement/L1 = typedefinition . ";", FOLLOW [97] -> SHIFT ';' GOTO 123
[64]
	statement/L1 = functiondefinition . (65), FOLLOW [97] -> REDUCE statement #1 CALL definition
[65]
	main_procedure = "main" "{" codeblock . "}", FOLLOW [0] -> SHIFT '}' GOTO 124
[66]
	codeblock = statementlist . (64), FOLLOW [16] -> REDUCE codeblock #1 CALL codeblock
[67]
	statement/L1 = . typedefinition ";", FOLLOW [97] -> GOTO 63
	functiondefinition = . linkage "function" typespec IDENT callablebody, FOLLOW [97] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [97] -> GOTO 14
	statement/L1 = . functiondefinition, FOLLOW [97] -> GOTO 64
	statementlist = statement . statementlist, FOLLOW [16] -> GOTO 125
	statementlist = . statement statementlist, FOLLOW [16] -> GOTO 67
	statement/L1 = . expression ";", FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "+=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "-=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "*=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "/=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "^=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "&=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "%=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "&&=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "||=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "&=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "|=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "<<=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression ">>=" expression, FOLLOW [96] -> GOTO 68
	expression/L4 = . expression "||" expression, FOLLOW [96] -> GOTO 68
	expression/L5 = . expression "&&" expression, FOLLOW [96] -> GOTO 68
	expression/L6 = . expression "|" expression, FOLLOW [96] -> GOTO 68
	expression/L7 = . expression "^" expression, FOLLOW [96] -> GOTO 68
	expression/L7 = . expression "&" expression, FOLLOW [96] -> GOTO 68
	expression/L8 = . expression "==" expression, FOLLOW [96] -> GOTO 68
	expression/L8 = . expression "!=" expression, FOLLOW [96] -> GOTO 68
	expression/L8 = . expression "<=" expression, FOLLOW [96] -> GOTO 68
	expression/L8 = . expression "<" expression, FOLLOW [96] -> GOTO 68
	expression/L8 = . expression ">=" expression, FOLLOW [96] -> GOTO 68
	expression/L8 = . expression ">" expression, FOLLOW [96] -> GOTO 68
	expression/L9 = . expression "+" expression, FOLLOW [96] -> GOTO 68
	expression/L9 = . expression "-" expression, FOLLOW [96] -> GOTO 68
	expression/L10 = . expression "*" expression, FOLLOW [96] -> GOTO 68
	expression/L10 = . expression "/" expression, FOLLOW [96] -> GOTO 68
	expression/L10 = . expression "%" expression, FOLLOW [96] -> GOTO 68
	expression/L11 = . expression "<<" expression, FOLLOW [96] -> GOTO 68
	expression/L11 = . expression ">>" expression, FOLLOW [96] -> GOTO 68
	expression/L12 = . expression "." IDENT, FOLLOW [96] -> GOTO 68
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [96] -> GOTO 68
	expression/L13 = . expression "(" ")", FOLLOW [96] -> GOTO 68
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [96] -> GOTO 68
	iexpression = . expression indirection IDENT, FOLLOW [96] -> GOTO 68
	expression/L12 = . iexpression, FOLLOW [96] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [96] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [96] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [96] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [96] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [96] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [96] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [96] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [96] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [96] -> SHIFT '&' GOTO 78
	typedefinition = . "typedef" typepath IDENT, FOLLOW [13] -> SHIFT "typedef" GOTO 19
	statement/L1 = . "{" codeblock "}", FOLLOW [97] -> SHIFT '{' GOTO 79
	expression/L1 = . "{" expressionlist "}", FOLLOW [96] -> SHIFT '{' GOTO 79
	expression/L1 = . "{" "}", FOLLOW [96] -> SHIFT '{' GOTO 79
	linkage = . "private", FOLLOW [60] -> SHIFT "private" GOTO 23
	linkage = . "public", FOLLOW [60] -> SHIFT "public" GOTO 24
	expression/L9 = . "+" expression, FOLLOW [96] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [96] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [96] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [96] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [96] -> SHIFT '!' GOTO 84
	statement/L1 = . "var" variabledefinition ";", FOLLOW [97] -> SHIFT "var" GOTO 85
	statement/L1 = . "return" expression ";", FOLLOW [97] -> SHIFT "return" GOTO 86
	statement/L1 = . "delete" expression ";", FOLLOW [97] -> SHIFT "delete" GOTO 87
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}", FOLLOW [97] -> SHIFT "if" GOTO 88
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}", FOLLOW [97] -> SHIFT "if" GOTO 88
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}", FOLLOW [97] -> SHIFT "while" GOTO 89
	expression/L1 = . "new" typespec ":" expression, FOLLOW [96] -> SHIFT "new" GOTO 90
	expression/L2 = . "null", FOLLOW [96] -> SHIFT "null" GOTO 91
	statementlist = ., FOLLOW [16] -> REDUCE statementlist #0
	linkage = . (30), FOLLOW [60] -> REDUCE linkage #0 CALL linkage {linkage="internal",attributes="#0 nounwind"}
[68]
	iexpression = expression . indirection IDENT, FOLLOW [96] -> GOTO 126
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [96] -> SHIFT '(' GOTO 127
	expression/L13 = expression . "(" ")", FOLLOW [96] -> SHIFT '(' GOTO 127
	statement/L1 = expression . ";", FOLLOW [97] -> SHIFT ';' GOTO 128
	expression/L7 = expression . "&" expression, FOLLOW [96] -> SHIFT '&' GOTO 129
	expression/L7 = expression . "^" expression, FOLLOW [96] -> SHIFT '^' GOTO 130
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 131
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 131
	expression/L3 = expression . "=" expression, FOLLOW [96] -> SHIFT '=' GOTO 132
	expression/L9 = expression . "+" expression, FOLLOW [96] -> SHIFT '+' GOTO 133
	expression/L9 = expression . "-" expression, FOLLOW [96] -> SHIFT '-' GOTO 134
	expression/L10 = expression . "*" expression, FOLLOW [96] -> SHIFT '*' GOTO 135
	expression/L10 = expression . "/" expression, FOLLOW [96] -> SHIFT '/' GOTO 136
	expression/L10 = expression . "%" expression, FOLLOW [96] -> SHIFT '%' GOTO 137
	expression/L5 = expression . "&&" expression, FOLLOW [96] -> SHIFT "&&" GOTO 138
	expression/L4 = expression . "||" expression, FOLLOW [96] -> SHIFT "||" GOTO 139
	expression/L6 = expression . "|" expression, FOLLOW [96] -> SHIFT '|' GOTO 140
	expression/L11 = expression . "<<" expression, FOLLOW [96] -> SHIFT "<<" GOTO 141
	expression/L11 = expression . ">>" expression, FOLLOW [96] -> SHIFT ">>" GOTO 142
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [96] -> SHIFT '[' GOTO 143
	expression/L8 = expression . "==" expression, FOLLOW [96] -> SHIFT "==" GOTO 144
	expression/L8 = expression . "!=" expression, FOLLOW [96] -> SHIFT "!=" GOTO 145
	expression/L8 = expression . ">=" expression, FOLLOW [96] -> SHIFT ">=" GOTO 146
	expression/L8 = expression . "<=" expression, FOLLOW [96] -> SHIFT "<=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [96] -> SHIFT '>' GOTO 148
	expression/L8 = expression . "<" expression, FOLLOW [96] -> SHIFT '<' GOTO 149
	expression/L3 = expression . "+=" expression, FOLLOW [96] -> SHIFT "+=" GOTO 150
	expression/L3 = expression . "-=" expression, FOLLOW [96] -> SHIFT "-=" GOTO 151
	expression/L3 = expression . "*=" expression, FOLLOW [96] -> SHIFT "*=" GOTO 152
	expression/L3 = expression . "/=" expression, FOLLOW [96] -> SHIFT "/=" GOTO 153
	expression/L3 = expression . "^=" expression, FOLLOW [96] -> SHIFT "^=" GOTO 154
	expression/L3 = expression . "&=" expression, FOLLOW [96] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "&=" expression, FOLLOW [96] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "%=" expression, FOLLOW [96] -> SHIFT "%=" GOTO 156
	expression/L3 = expression . "&&=" expression, FOLLOW [96] -> SHIFT "&&=" GOTO 157
	expression/L3 = expression . "||=" expression, FOLLOW [96] -> SHIFT "||=" GOTO 158
	expression/L3 = expression . "|=" expression, FOLLOW [96] -> SHIFT "|=" GOTO 159
	expression/L3 = expression . "<<=" expression, FOLLOW [96] -> SHIFT "<<=" GOTO 160
	expression/L3 = expression . ">>=" expression, FOLLOW [96] -> SHIFT ">>=" GOTO 161
	expression/L12 = expression . "." IDENT, FOLLOW [96] -> SHIFT '.' GOTO 162
[69]
	expression/L12 = iexpression ., FOLLOW [234] -> REDUCE expression #1
[70]
	expression/L2 = BOOLEAN . (79), FOLLOW [234] -> REDUCE expression #1 CALL constant "constexpr bool"
[71]
	expression/L2 = IDENT . (78), FOLLOW [234] -> REDUCE expression #1 CALL variable
[72]
	expression/L2 = DQSTRING . (84), FOLLOW [234] -> REDUCE expression #1 CALL string_constant "constexpr float"
[73]
	expression/L2 = SQSTRING . (85), FOLLOW [234] -> REDUCE expression #1 CALL char_constant "constexpr float"
[74]
	expression/L2 = CARDINAL . (80), FOLLOW [234] -> REDUCE expression #1 CALL constant "constexpr uint"
[75]
	expression/L2 = INTEGER . (81), FOLLOW [234] -> REDUCE expression #1 CALL constant "constexpr int"
[76]
	expression/L2 = FLOAT . (82), FOLLOW [234] -> REDUCE expression #1 CALL constant "constexpr float"
[77]
	expression/L2 = "(" . expression ")", FOLLOW [234] -> GOTO 163
	expression/L3 = . expression "=" expression, FOLLOW [234] -> GOTO 163
	expression/L3 = . expression "+=" expression, FOLLOW [234] -> GOTO 163
	expression/L3 = . expression "-=" expression, FOLLOW [234] -> GOTO 163
	expression/L3 = . expression "*=" expression, FOLLOW [234] -> GOTO 163
	expression/L3 = . expression "/=" expression, FOLLOW [234] -> GOTO 163
	expression/L3 = . expression "^=" expression, FOLLOW [234] -> GOTO 163
	expression/L3 = . expression "&=" expression, FOLLOW [234] -> GOTO 163
	expression/L3 = . expression "%=" expression, FOLLOW [234] -> GOTO 163
	expression/L3 = . expression "&&=" expression, FOLLOW [234] -> GOTO 163
	expression/L3 = . expression "||=" expression, FOLLOW [234] -> GOTO 163
	expression/L3 = . expression "&=" expression, FOLLOW [234] -> GOTO 163
	expression/L3 = . expression "|=" expression, FOLLOW [234] -> GOTO 163
	expression/L3 = . expression "<<=" expression, FOLLOW [234] -> GOTO 163
	expression/L3 = . expression ">>=" expression, FOLLOW [234] -> GOTO 163
	expression/L4 = . expression "||" expression, FOLLOW [234] -> GOTO 163
	expression/L5 = . expression "&&" expression, FOLLOW [234] -> GOTO 163
	expression/L6 = . expression "|" expression, FOLLOW [234] -> GOTO 163
	expression/L7 = . expression "^" expression, FOLLOW [234] -> GOTO 163
	expression/L7 = . expression "&" expression, FOLLOW [234] -> GOTO 163
	expression/L8 = . expression "==" expression, FOLLOW [234] -> GOTO 163
	expression/L8 = . expression "!=" expression, FOLLOW [234] -> GOTO 163
	expression/L8 = . expression "<=" expression, FOLLOW [234] -> GOTO 163
	expression/L8 = . expression "<" expression, FOLLOW [234] -> GOTO 163
	expression/L8 = . expression ">=" expression, FOLLOW [234] -> GOTO 163
	expression/L8 = . expression ">" expression, FOLLOW [234] -> GOTO 163
	expression/L9 = . expression "+" expression, FOLLOW [234] -> GOTO 163
	expression/L9 = . expression "-" expression, FOLLOW [234] -> GOTO 163
	expression/L10 = . expression "*" expression, FOLLOW [234] -> GOTO 163
	expression/L10 = . expression "/" expression, FOLLOW [234] -> GOTO 163
	expression/L10 = . expression "%" expression, FOLLOW [234] -> GOTO 163
	expression/L11 = . expression "<<" expression, FOLLOW [234] -> GOTO 163
	expression/L11 = . expression ">>" expression, FOLLOW [234] -> GOTO 163
	expression/L12 = . expression "." IDENT, FOLLOW [234] -> GOTO 163
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [234] -> GOTO 163
	expression/L13 = . expression "(" ")", FOLLOW [234] -> GOTO 163
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [234] -> GOTO 163
	iexpression = . expression indirection IDENT, FOLLOW [234] -> GOTO 163
	expression/L12 = . iexpression, FOLLOW [234] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [234] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [234] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [234] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [234] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [234] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [234] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [234] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [234] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [234] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [234] -> SHIFT '{' GOTO 94
	expression/L1 = . "{" "}", FOLLOW [234] -> SHIFT '{' GOTO 94
	expression/L9 = . "+" expression, FOLLOW [234] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [234] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [234] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [234] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [234] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [234] -> SHIFT "new" GOTO 90
	expression/L2 = . "null", FOLLOW [234] -> SHIFT "null" GOTO 91
[78]
	expression/L3 = . expression "=" expression, FOLLOW [234] -> GOTO 164
	expression/L3 = . expression "+=" expression, FOLLOW [234] -> GOTO 164
	expression/L3 = . expression "-=" expression, FOLLOW [234] -> GOTO 164
	expression/L3 = . expression "*=" expression, FOLLOW [234] -> GOTO 164
	expression/L3 = . expression "/=" expression, FOLLOW [234] -> GOTO 164
	expression/L3 = . expression "^=" expression, FOLLOW [234] -> GOTO 164
	expression/L3 = . expression "&=" expression, FOLLOW [234] -> GOTO 164
	expression/L3 = . expression "%=" expression, FOLLOW [234] -> GOTO 164
	expression/L3 = . expression "&&=" expression, FOLLOW [234] -> GOTO 164
	expression/L3 = . expression "||=" expression, FOLLOW [234] -> GOTO 164
	expression/L3 = . expression "&=" expression, FOLLOW [234] -> GOTO 164
	expression/L3 = . expression "|=" expression, FOLLOW [234] -> GOTO 164
	expression/L3 = . expression "<<=" expression, FOLLOW [234] -> GOTO 164
	expression/L3 = . expression ">>=" expression, FOLLOW [234] -> GOTO 164
	expression/L4 = . expression "||" expression, FOLLOW [234] -> GOTO 164
	expression/L5 = . expression "&&" expression, FOLLOW [234] -> GOTO 164
	expression/L6 = . expression "|" expression, FOLLOW [234] -> GOTO 164
	expression/L7 = . expression "^" expression, FOLLOW [234] -> GOTO 164
	expression/L7 = . expression "&" expression, FOLLOW [234] -> GOTO 164
	expression/L8 = . expression "==" expression, FOLLOW [234] -> GOTO 164
	expression/L8 = . expression "!=" expression, FOLLOW [234] -> GOTO 164
	expression/L8 = . expression "<=" expression, FOLLOW [234] -> GOTO 164
	expression/L8 = . expression "<" expression, FOLLOW [234] -> GOTO 164
	expression/L8 = . expression ">=" expression, FOLLOW [234] -> GOTO 164
	expression/L8 = . expression ">" expression, FOLLOW [234] -> GOTO 164
	expression/L9 = . expression "+" expression, FOLLOW [234] -> GOTO 164
	expression/L9 = . expression "-" expression, FOLLOW [234] -> GOTO 164
	expression/L9 = "&" . expression, FOLLOW [234] -> GOTO 164
	expression/L10 = . expression "*" expression, FOLLOW [234] -> GOTO 164
	expression/L10 = . expression "/" expression, FOLLOW [234] -> GOTO 164
	expression/L10 = . expression "%" expression, FOLLOW [234] -> GOTO 164
	expression/L11 = . expression "<<" expression, FOLLOW [234] -> GOTO 164
	expression/L11 = . expression ">>" expression, FOLLOW [234] -> GOTO 164
	expression/L12 = . expression "." IDENT, FOLLOW [234] -> GOTO 164
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [234] -> GOTO 164
	expression/L13 = . expression "(" ")", FOLLOW [234] -> GOTO 164
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [234] -> GOTO 164
	iexpression = . expression indirection IDENT, FOLLOW [234] -> GOTO 164
	expression/L12 = . iexpression, FOLLOW [234] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [234] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [234] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [234] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [234] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [234] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [234] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [234] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [234] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [234] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [234] -> SHIFT '{' GOTO 94
	expression/L1 = . "{" "}", FOLLOW [234] -> SHIFT '{' GOTO 94
	expression/L9 = . "+" expression, FOLLOW [234] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [234] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [234] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [234] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [234] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [234] -> SHIFT "new" GOTO 90
	expression/L2 = . "null", FOLLOW [234] -> SHIFT "null" GOTO 91
[79]
	statement/L1 = . typedefinition ";", FOLLOW [97] -> GOTO 63
	functiondefinition = . linkage "function" typespec IDENT callablebody, FOLLOW [97] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [97] -> GOTO 14
	statement/L1 = . functiondefinition, FOLLOW [97] -> GOTO 64
	statement/L1 = "{" . codeblock "}", FOLLOW [97] -> GOTO 165
	codeblock = . statementlist, FOLLOW [16] -> GOTO 66
	statementlist = . statement statementlist, FOLLOW [16] -> GOTO 67
	statement/L1 = . expression ";", FOLLOW [97] -> GOTO 166
	expression/L3 = . expression "=" expression, FOLLOW [177] -> GOTO 166
	expression/L3 = . expression "+=" expression, FOLLOW [177] -> GOTO 166
	expression/L3 = . expression "-=" expression, FOLLOW [177] -> GOTO 166
	expression/L3 = . expression "*=" expression, FOLLOW [177] -> GOTO 166
	expression/L3 = . expression "/=" expression, FOLLOW [177] -> GOTO 166
	expression/L3 = . expression "^=" expression, FOLLOW [177] -> GOTO 166
	expression/L3 = . expression "&=" expression, FOLLOW [177] -> GOTO 166
	expression/L3 = . expression "%=" expression, FOLLOW [177] -> GOTO 166
	expression/L3 = . expression "&&=" expression, FOLLOW [177] -> GOTO 166
	expression/L3 = . expression "||=" expression, FOLLOW [177] -> GOTO 166
	expression/L3 = . expression "&=" expression, FOLLOW [177] -> GOTO 166
	expression/L3 = . expression "|=" expression, FOLLOW [177] -> GOTO 166
	expression/L3 = . expression "<<=" expression, FOLLOW [177] -> GOTO 166
	expression/L3 = . expression ">>=" expression, FOLLOW [177] -> GOTO 166
	expression/L4 = . expression "||" expression, FOLLOW [177] -> GOTO 166
	expression/L5 = . expression "&&" expression, FOLLOW [177] -> GOTO 166
	expression/L6 = . expression "|" expression, FOLLOW [177] -> GOTO 166
	expression/L7 = . expression "^" expression, FOLLOW [177] -> GOTO 166
	expression/L7 = . expression "&" expression, FOLLOW [177] -> GOTO 166
	expression/L8 = . expression "==" expression, FOLLOW [177] -> GOTO 166
	expression/L8 = . expression "!=" expression, FOLLOW [177] -> GOTO 166
	expression/L8 = . expression "<=" expression, FOLLOW [177] -> GOTO 166
	expression/L8 = . expression "<" expression, FOLLOW [177] -> GOTO 166
	expression/L8 = . expression ">=" expression, FOLLOW [177] -> GOTO 166
	expression/L8 = . expression ">" expression, FOLLOW [177] -> GOTO 166
	expression/L9 = . expression "+" expression, FOLLOW [177] -> GOTO 166
	expression/L9 = . expression "-" expression, FOLLOW [177] -> GOTO 166
	expression/L10 = . expression "*" expression, FOLLOW [177] -> GOTO 166
	expression/L10 = . expression "/" expression, FOLLOW [177] -> GOTO 166
	expression/L10 = . expression "%" expression, FOLLOW [177] -> GOTO 166
	expression/L11 = . expression "<<" expression, FOLLOW [177] -> GOTO 166
	expression/L11 = . expression ">>" expression, FOLLOW [177] -> GOTO 166
	expression/L12 = . expression "." IDENT, FOLLOW [177] -> GOTO 166
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [177] -> GOTO 166
	expression/L13 = . expression "(" ")", FOLLOW [177] -> GOTO 166
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [177] -> GOTO 166
	iexpression = . expression indirection IDENT, FOLLOW [177] -> GOTO 166
	expressionlist = . expression "," expressionlist, FOLLOW [16] -> GOTO 166
	expressionlist = . expression, FOLLOW [16] -> GOTO 166
	expression/L12 = . iexpression, FOLLOW [177] -> GOTO 69
	expression/L1 = "{" . expressionlist "}", FOLLOW [177] -> GOTO 167
	expression/L2 = . BOOLEAN, FOLLOW [177] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [177] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [177] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [177] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [177] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [177] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [177] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [177] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [177] -> SHIFT '&' GOTO 78
	typedefinition = . "typedef" typepath IDENT, FOLLOW [13] -> SHIFT "typedef" GOTO 19
	statement/L1 = . "{" codeblock "}", FOLLOW [97] -> SHIFT '{' GOTO 79
	expression/L1 = . "{" expressionlist "}", FOLLOW [177] -> SHIFT '{' GOTO 79
	expression/L1 = . "{" "}", FOLLOW [177] -> SHIFT '{' GOTO 79
	expression/L1 = "{" . "}", FOLLOW [177] -> SHIFT '}' GOTO 168
	linkage = . "private", FOLLOW [60] -> SHIFT "private" GOTO 23
	linkage = . "public", FOLLOW [60] -> SHIFT "public" GOTO 24
	expression/L9 = . "+" expression, FOLLOW [177] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [177] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [177] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [177] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [177] -> SHIFT '!' GOTO 84
	statement/L1 = . "var" variabledefinition ";", FOLLOW [97] -> SHIFT "var" GOTO 85
	statement/L1 = . "return" expression ";", FOLLOW [97] -> SHIFT "return" GOTO 86
	statement/L1 = . "delete" expression ";", FOLLOW [97] -> SHIFT "delete" GOTO 87
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}", FOLLOW [97] -> SHIFT "if" GOTO 88
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}", FOLLOW [97] -> SHIFT "if" GOTO 88
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}", FOLLOW [97] -> SHIFT "while" GOTO 89
	expression/L1 = . "new" typespec ":" expression, FOLLOW [177] -> SHIFT "new" GOTO 90
	expression/L2 = . "null", FOLLOW [177] -> SHIFT "null" GOTO 91
	statementlist = ., FOLLOW [16] -> REDUCE statementlist #0
	linkage = . (30), FOLLOW [60] -> REDUCE linkage #0 CALL linkage {linkage="internal",attributes="#0 nounwind"}
[80]
	expression/L3 = . expression "=" expression, FOLLOW [234] -> GOTO 169
	expression/L3 = . expression "+=" expression, FOLLOW [234] -> GOTO 169
	expression/L3 = . expression "-=" expression, FOLLOW [234] -> GOTO 169
	expression/L3 = . expression "*=" expression, FOLLOW [234] -> GOTO 169
	expression/L3 = . expression "/=" expression, FOLLOW [234] -> GOTO 169
	expression/L3 = . expression "^=" expression, FOLLOW [234] -> GOTO 169
	expression/L3 = . expression "&=" expression, FOLLOW [234] -> GOTO 169
	expression/L3 = . expression "%=" expression, FOLLOW [234] -> GOTO 169
	expression/L3 = . expression "&&=" expression, FOLLOW [234] -> GOTO 169
	expression/L3 = . expression "||=" expression, FOLLOW [234] -> GOTO 169
	expression/L3 = . expression "&=" expression, FOLLOW [234] -> GOTO 169
	expression/L3 = . expression "|=" expression, FOLLOW [234] -> GOTO 169
	expression/L3 = . expression "<<=" expression, FOLLOW [234] -> GOTO 169
	expression/L3 = . expression ">>=" expression, FOLLOW [234] -> GOTO 169
	expression/L4 = . expression "||" expression, FOLLOW [234] -> GOTO 169
	expression/L5 = . expression "&&" expression, FOLLOW [234] -> GOTO 169
	expression/L6 = . expression "|" expression, FOLLOW [234] -> GOTO 169
	expression/L7 = . expression "^" expression, FOLLOW [234] -> GOTO 169
	expression/L7 = . expression "&" expression, FOLLOW [234] -> GOTO 169
	expression/L8 = . expression "==" expression, FOLLOW [234] -> GOTO 169
	expression/L8 = . expression "!=" expression, FOLLOW [234] -> GOTO 169
	expression/L8 = . expression "<=" expression, FOLLOW [234] -> GOTO 169
	expression/L8 = . expression "<" expression, FOLLOW [234] -> GOTO 169
	expression/L8 = . expression ">=" expression, FOLLOW [234] -> GOTO 169
	expression/L8 = . expression ">" expression, FOLLOW [234] -> GOTO 169
	expression/L9 = . expression "+" expression, FOLLOW [234] -> GOTO 169
	expression/L9 = . expression "-" expression, FOLLOW [234] -> GOTO 169
	expression/L9 = "+" . expression, FOLLOW [234] -> GOTO 169
	expression/L10 = . expression "*" expression, FOLLOW [234] -> GOTO 169
	expression/L10 = . expression "/" expression, FOLLOW [234] -> GOTO 169
	expression/L10 = . expression "%" expression, FOLLOW [234] -> GOTO 169
	expression/L11 = . expression "<<" expression, FOLLOW [234] -> GOTO 169
	expression/L11 = . expression ">>" expression, FOLLOW [234] -> GOTO 169
	expression/L12 = . expression "." IDENT, FOLLOW [234] -> GOTO 169
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [234] -> GOTO 169
	expression/L13 = . expression "(" ")", FOLLOW [234] -> GOTO 169
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [234] -> GOTO 169
	iexpression = . expression indirection IDENT, FOLLOW [234] -> GOTO 169
	expression/L12 = . iexpression, FOLLOW [234] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [234] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [234] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [234] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [234] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [234] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [234] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [234] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [234] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [234] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [234] -> SHIFT '{' GOTO 94
	expression/L1 = . "{" "}", FOLLOW [234] -> SHIFT '{' GOTO 94
	expression/L9 = . "+" expression, FOLLOW [234] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [234] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [234] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [234] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [234] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [234] -> SHIFT "new" GOTO 90
	expression/L2 = . "null", FOLLOW [234] -> SHIFT "null" GOTO 91
[81]
	expression/L3 = . expression "=" expression, FOLLOW [234] -> GOTO 170
	expression/L3 = . expression "+=" expression, FOLLOW [234] -> GOTO 170
	expression/L3 = . expression "-=" expression, FOLLOW [234] -> GOTO 170
	expression/L3 = . expression "*=" expression, FOLLOW [234] -> GOTO 170
	expression/L3 = . expression "/=" expression, FOLLOW [234] -> GOTO 170
	expression/L3 = . expression "^=" expression, FOLLOW [234] -> GOTO 170
	expression/L3 = . expression "&=" expression, FOLLOW [234] -> GOTO 170
	expression/L3 = . expression "%=" expression, FOLLOW [234] -> GOTO 170
	expression/L3 = . expression "&&=" expression, FOLLOW [234] -> GOTO 170
	expression/L3 = . expression "||=" expression, FOLLOW [234] -> GOTO 170
	expression/L3 = . expression "&=" expression, FOLLOW [234] -> GOTO 170
	expression/L3 = . expression "|=" expression, FOLLOW [234] -> GOTO 170
	expression/L3 = . expression "<<=" expression, FOLLOW [234] -> GOTO 170
	expression/L3 = . expression ">>=" expression, FOLLOW [234] -> GOTO 170
	expression/L4 = . expression "||" expression, FOLLOW [234] -> GOTO 170
	expression/L5 = . expression "&&" expression, FOLLOW [234] -> GOTO 170
	expression/L6 = . expression "|" expression, FOLLOW [234] -> GOTO 170
	expression/L7 = . expression "^" expression, FOLLOW [234] -> GOTO 170
	expression/L7 = . expression "&" expression, FOLLOW [234] -> GOTO 170
	expression/L8 = . expression "==" expression, FOLLOW [234] -> GOTO 170
	expression/L8 = . expression "!=" expression, FOLLOW [234] -> GOTO 170
	expression/L8 = . expression "<=" expression, FOLLOW [234] -> GOTO 170
	expression/L8 = . expression "<" expression, FOLLOW [234] -> GOTO 170
	expression/L8 = . expression ">=" expression, FOLLOW [234] -> GOTO 170
	expression/L8 = . expression ">" expression, FOLLOW [234] -> GOTO 170
	expression/L9 = . expression "+" expression, FOLLOW [234] -> GOTO 170
	expression/L9 = . expression "-" expression, FOLLOW [234] -> GOTO 170
	expression/L9 = "-" . expression, FOLLOW [234] -> GOTO 170
	expression/L10 = . expression "*" expression, FOLLOW [234] -> GOTO 170
	expression/L10 = . expression "/" expression, FOLLOW [234] -> GOTO 170
	expression/L10 = . expression "%" expression, FOLLOW [234] -> GOTO 170
	expression/L11 = . expression "<<" expression, FOLLOW [234] -> GOTO 170
	expression/L11 = . expression ">>" expression, FOLLOW [234] -> GOTO 170
	expression/L12 = . expression "." IDENT, FOLLOW [234] -> GOTO 170
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [234] -> GOTO 170
	expression/L13 = . expression "(" ")", FOLLOW [234] -> GOTO 170
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [234] -> GOTO 170
	iexpression = . expression indirection IDENT, FOLLOW [234] -> GOTO 170
	expression/L12 = . iexpression, FOLLOW [234] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [234] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [234] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [234] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [234] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [234] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [234] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [234] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [234] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [234] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [234] -> SHIFT '{' GOTO 94
	expression/L1 = . "{" "}", FOLLOW [234] -> SHIFT '{' GOTO 94
	expression/L9 = . "+" expression, FOLLOW [234] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [234] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [234] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [234] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [234] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [234] -> SHIFT "new" GOTO 90
	expression/L2 = . "null", FOLLOW [234] -> SHIFT "null" GOTO 91
[82]
	expression/L3 = . expression "=" expression, FOLLOW [234] -> GOTO 171
	expression/L3 = . expression "+=" expression, FOLLOW [234] -> GOTO 171
	expression/L3 = . expression "-=" expression, FOLLOW [234] -> GOTO 171
	expression/L3 = . expression "*=" expression, FOLLOW [234] -> GOTO 171
	expression/L3 = . expression "/=" expression, FOLLOW [234] -> GOTO 171
	expression/L3 = . expression "^=" expression, FOLLOW [234] -> GOTO 171
	expression/L3 = . expression "&=" expression, FOLLOW [234] -> GOTO 171
	expression/L3 = . expression "%=" expression, FOLLOW [234] -> GOTO 171
	expression/L3 = . expression "&&=" expression, FOLLOW [234] -> GOTO 171
	expression/L3 = . expression "||=" expression, FOLLOW [234] -> GOTO 171
	expression/L3 = . expression "&=" expression, FOLLOW [234] -> GOTO 171
	expression/L3 = . expression "|=" expression, FOLLOW [234] -> GOTO 171
	expression/L3 = . expression "<<=" expression, FOLLOW [234] -> GOTO 171
	expression/L3 = . expression ">>=" expression, FOLLOW [234] -> GOTO 171
	expression/L4 = . expression "||" expression, FOLLOW [234] -> GOTO 171
	expression/L5 = . expression "&&" expression, FOLLOW [234] -> GOTO 171
	expression/L6 = . expression "|" expression, FOLLOW [234] -> GOTO 171
	expression/L7 = . expression "^" expression, FOLLOW [234] -> GOTO 171
	expression/L7 = . expression "&" expression, FOLLOW [234] -> GOTO 171
	expression/L8 = . expression "==" expression, FOLLOW [234] -> GOTO 171
	expression/L8 = . expression "!=" expression, FOLLOW [234] -> GOTO 171
	expression/L8 = . expression "<=" expression, FOLLOW [234] -> GOTO 171
	expression/L8 = . expression "<" expression, FOLLOW [234] -> GOTO 171
	expression/L8 = . expression ">=" expression, FOLLOW [234] -> GOTO 171
	expression/L8 = . expression ">" expression, FOLLOW [234] -> GOTO 171
	expression/L9 = . expression "+" expression, FOLLOW [234] -> GOTO 171
	expression/L9 = . expression "-" expression, FOLLOW [234] -> GOTO 171
	expression/L10 = . expression "*" expression, FOLLOW [234] -> GOTO 171
	expression/L10 = . expression "/" expression, FOLLOW [234] -> GOTO 171
	expression/L10 = . expression "%" expression, FOLLOW [234] -> GOTO 171
	expression/L11 = . expression "<<" expression, FOLLOW [234] -> GOTO 171
	expression/L11 = . expression ">>" expression, FOLLOW [234] -> GOTO 171
	expression/L12 = . expression "." IDENT, FOLLOW [234] -> GOTO 171
	expression/L12 = "*" . expression, FOLLOW [234] -> GOTO 171
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [234] -> GOTO 171
	expression/L13 = . expression "(" ")", FOLLOW [234] -> GOTO 171
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [234] -> GOTO 171
	iexpression = . expression indirection IDENT, FOLLOW [234] -> GOTO 171
	expression/L12 = . iexpression, FOLLOW [234] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [234] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [234] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [234] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [234] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [234] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [234] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [234] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [234] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [234] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [234] -> SHIFT '{' GOTO 94
	expression/L1 = . "{" "}", FOLLOW [234] -> SHIFT '{' GOTO 94
	expression/L9 = . "+" expression, FOLLOW [234] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [234] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [234] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [234] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [234] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [234] -> SHIFT "new" GOTO 90
	expression/L2 = . "null", FOLLOW [234] -> SHIFT "null" GOTO 91
[83]
	expression/L3 = . expression "=" expression, FOLLOW [234] -> GOTO 172
	expression/L3 = . expression "+=" expression, FOLLOW [234] -> GOTO 172
	expression/L3 = . expression "-=" expression, FOLLOW [234] -> GOTO 172
	expression/L3 = . expression "*=" expression, FOLLOW [234] -> GOTO 172
	expression/L3 = . expression "/=" expression, FOLLOW [234] -> GOTO 172
	expression/L3 = . expression "^=" expression, FOLLOW [234] -> GOTO 172
	expression/L3 = . expression "&=" expression, FOLLOW [234] -> GOTO 172
	expression/L3 = . expression "%=" expression, FOLLOW [234] -> GOTO 172
	expression/L3 = . expression "&&=" expression, FOLLOW [234] -> GOTO 172
	expression/L3 = . expression "||=" expression, FOLLOW [234] -> GOTO 172
	expression/L3 = . expression "&=" expression, FOLLOW [234] -> GOTO 172
	expression/L3 = . expression "|=" expression, FOLLOW [234] -> GOTO 172
	expression/L3 = . expression "<<=" expression, FOLLOW [234] -> GOTO 172
	expression/L3 = . expression ">>=" expression, FOLLOW [234] -> GOTO 172
	expression/L4 = . expression "||" expression, FOLLOW [234] -> GOTO 172
	expression/L5 = . expression "&&" expression, FOLLOW [234] -> GOTO 172
	expression/L6 = . expression "|" expression, FOLLOW [234] -> GOTO 172
	expression/L7 = . expression "^" expression, FOLLOW [234] -> GOTO 172
	expression/L7 = . expression "&" expression, FOLLOW [234] -> GOTO 172
	expression/L8 = . expression "==" expression, FOLLOW [234] -> GOTO 172
	expression/L8 = . expression "!=" expression, FOLLOW [234] -> GOTO 172
	expression/L8 = . expression "<=" expression, FOLLOW [234] -> GOTO 172
	expression/L8 = . expression "<" expression, FOLLOW [234] -> GOTO 172
	expression/L8 = . expression ">=" expression, FOLLOW [234] -> GOTO 172
	expression/L8 = . expression ">" expression, FOLLOW [234] -> GOTO 172
	expression/L9 = . expression "+" expression, FOLLOW [234] -> GOTO 172
	expression/L9 = . expression "-" expression, FOLLOW [234] -> GOTO 172
	expression/L9 = "~" . expression, FOLLOW [234] -> GOTO 172
	expression/L10 = . expression "*" expression, FOLLOW [234] -> GOTO 172
	expression/L10 = . expression "/" expression, FOLLOW [234] -> GOTO 172
	expression/L10 = . expression "%" expression, FOLLOW [234] -> GOTO 172
	expression/L11 = . expression "<<" expression, FOLLOW [234] -> GOTO 172
	expression/L11 = . expression ">>" expression, FOLLOW [234] -> GOTO 172
	expression/L12 = . expression "." IDENT, FOLLOW [234] -> GOTO 172
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [234] -> GOTO 172
	expression/L13 = . expression "(" ")", FOLLOW [234] -> GOTO 172
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [234] -> GOTO 172
	iexpression = . expression indirection IDENT, FOLLOW [234] -> GOTO 172
	expression/L12 = . iexpression, FOLLOW [234] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [234] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [234] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [234] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [234] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [234] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [234] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [234] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [234] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [234] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [234] -> SHIFT '{' GOTO 94
	expression/L1 = . "{" "}", FOLLOW [234] -> SHIFT '{' GOTO 94
	expression/L9 = . "+" expression, FOLLOW [234] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [234] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [234] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [234] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [234] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [234] -> SHIFT "new" GOTO 90
	expression/L2 = . "null", FOLLOW [234] -> SHIFT "null" GOTO 91
[84]
	expression/L3 = . expression "=" expression, FOLLOW [234] -> GOTO 173
	expression/L3 = . expression "+=" expression, FOLLOW [234] -> GOTO 173
	expression/L3 = . expression "-=" expression, FOLLOW [234] -> GOTO 173
	expression/L3 = . expression "*=" expression, FOLLOW [234] -> GOTO 173
	expression/L3 = . expression "/=" expression, FOLLOW [234] -> GOTO 173
	expression/L3 = . expression "^=" expression, FOLLOW [234] -> GOTO 173
	expression/L3 = . expression "&=" expression, FOLLOW [234] -> GOTO 173
	expression/L3 = . expression "%=" expression, FOLLOW [234] -> GOTO 173
	expression/L3 = . expression "&&=" expression, FOLLOW [234] -> GOTO 173
	expression/L3 = . expression "||=" expression, FOLLOW [234] -> GOTO 173
	expression/L3 = . expression "&=" expression, FOLLOW [234] -> GOTO 173
	expression/L3 = . expression "|=" expression, FOLLOW [234] -> GOTO 173
	expression/L3 = . expression "<<=" expression, FOLLOW [234] -> GOTO 173
	expression/L3 = . expression ">>=" expression, FOLLOW [234] -> GOTO 173
	expression/L4 = . expression "||" expression, FOLLOW [234] -> GOTO 173
	expression/L5 = . expression "&&" expression, FOLLOW [234] -> GOTO 173
	expression/L6 = . expression "|" expression, FOLLOW [234] -> GOTO 173
	expression/L7 = . expression "^" expression, FOLLOW [234] -> GOTO 173
	expression/L7 = . expression "&" expression, FOLLOW [234] -> GOTO 173
	expression/L8 = . expression "==" expression, FOLLOW [234] -> GOTO 173
	expression/L8 = . expression "!=" expression, FOLLOW [234] -> GOTO 173
	expression/L8 = . expression "<=" expression, FOLLOW [234] -> GOTO 173
	expression/L8 = . expression "<" expression, FOLLOW [234] -> GOTO 173
	expression/L8 = . expression ">=" expression, FOLLOW [234] -> GOTO 173
	expression/L8 = . expression ">" expression, FOLLOW [234] -> GOTO 173
	expression/L9 = . expression "+" expression, FOLLOW [234] -> GOTO 173
	expression/L9 = . expression "-" expression, FOLLOW [234] -> GOTO 173
	expression/L9 = "!" . expression, FOLLOW [234] -> GOTO 173
	expression/L10 = . expression "*" expression, FOLLOW [234] -> GOTO 173
	expression/L10 = . expression "/" expression, FOLLOW [234] -> GOTO 173
	expression/L10 = . expression "%" expression, FOLLOW [234] -> GOTO 173
	expression/L11 = . expression "<<" expression, FOLLOW [234] -> GOTO 173
	expression/L11 = . expression ">>" expression, FOLLOW [234] -> GOTO 173
	expression/L12 = . expression "." IDENT, FOLLOW [234] -> GOTO 173
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [234] -> GOTO 173
	expression/L13 = . expression "(" ")", FOLLOW [234] -> GOTO 173
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [234] -> GOTO 173
	iexpression = . expression indirection IDENT, FOLLOW [234] -> GOTO 173
	expression/L12 = . iexpression, FOLLOW [234] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [234] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [234] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [234] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [234] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [234] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [234] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [234] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [234] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [234] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [234] -> SHIFT '{' GOTO 94
	expression/L1 = . "{" "}", FOLLOW [234] -> SHIFT '{' GOTO 94
	expression/L9 = . "+" expression, FOLLOW [234] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [234] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [234] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [234] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [234] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [234] -> SHIFT "new" GOTO 90
	expression/L2 = . "null", FOLLOW [234] -> SHIFT "null" GOTO 91
[85]
	typespec/L1 = . typename, FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [9] -> GOTO 8
	variabledefinition = . typespec IDENT, FOLLOW [13] -> GOTO 9
	variabledefinition = . typespec IDENT "=" expression, FOLLOW [13] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression, FOLLOW [13] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]", FOLLOW [13] -> GOTO 9
	statement/L1 = "var" . variabledefinition ";", FOLLOW [97] -> GOTO 174
	typename/L1 = . IDENT, FOLLOW [61] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [61] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
[86]
	statement/L1 = "return" . expression ";", FOLLOW [97] -> GOTO 175
	expression/L3 = . expression "=" expression, FOLLOW [96] -> GOTO 175
	expression/L3 = . expression "+=" expression, FOLLOW [96] -> GOTO 175
	expression/L3 = . expression "-=" expression, FOLLOW [96] -> GOTO 175
	expression/L3 = . expression "*=" expression, FOLLOW [96] -> GOTO 175
	expression/L3 = . expression "/=" expression, FOLLOW [96] -> GOTO 175
	expression/L3 = . expression "^=" expression, FOLLOW [96] -> GOTO 175
	expression/L3 = . expression "&=" expression, FOLLOW [96] -> GOTO 175
	expression/L3 = . expression "%=" expression, FOLLOW [96] -> GOTO 175
	expression/L3 = . expression "&&=" expression, FOLLOW [96] -> GOTO 175
	expression/L3 = . expression "||=" expression, FOLLOW [96] -> GOTO 175
	expression/L3 = . expression "&=" expression, FOLLOW [96] -> GOTO 175
	expression/L3 = . expression "|=" expression, FOLLOW [96] -> GOTO 175
	expression/L3 = . expression "<<=" expression, FOLLOW [96] -> GOTO 175
	expression/L3 = . expression ">>=" expression, FOLLOW [96] -> GOTO 175
	expression/L4 = . expression "||" expression, FOLLOW [96] -> GOTO 175
	expression/L5 = . expression "&&" expression, FOLLOW [96] -> GOTO 175
	expression/L6 = . expression "|" expression, FOLLOW [96] -> GOTO 175
	expression/L7 = . expression "^" expression, FOLLOW [96] -> GOTO 175
	expression/L7 = . expression "&" expression, FOLLOW [96] -> GOTO 175
	expression/L8 = . expression "==" expression, FOLLOW [96] -> GOTO 175
	expression/L8 = . expression "!=" expression, FOLLOW [96] -> GOTO 175
	expression/L8 = . expression "<=" expression, FOLLOW [96] -> GOTO 175
	expression/L8 = . expression "<" expression, FOLLOW [96] -> GOTO 175
	expression/L8 = . expression ">=" expression, FOLLOW [96] -> GOTO 175
	expression/L8 = . expression ">" expression, FOLLOW [96] -> GOTO 175
	expression/L9 = . expression "+" expression, FOLLOW [96] -> GOTO 175
	expression/L9 = . expression "-" expression, FOLLOW [96] -> GOTO 175
	expression/L10 = . expression "*" expression, FOLLOW [96] -> GOTO 175
	expression/L10 = . expression "/" expression, FOLLOW [96] -> GOTO 175
	expression/L10 = . expression "%" expression, FOLLOW [96] -> GOTO 175
	expression/L11 = . expression "<<" expression, FOLLOW [96] -> GOTO 175
	expression/L11 = . expression ">>" expression, FOLLOW [96] -> GOTO 175
	expression/L12 = . expression "." IDENT, FOLLOW [96] -> GOTO 175
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [96] -> GOTO 175
	expression/L13 = . expression "(" ")", FOLLOW [96] -> GOTO 175
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [96] -> GOTO 175
	iexpression = . expression indirection IDENT, FOLLOW [96] -> GOTO 175
	expression/L12 = . iexpression, FOLLOW [96] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [96] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [96] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [96] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [96] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [96] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [96] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [96] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [96] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [96] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [96] -> SHIFT '{' GOTO 94
	expression/L1 = . "{" "}", FOLLOW [96] -> SHIFT '{' GOTO 94
	expression/L9 = . "+" expression, FOLLOW [96] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [96] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [96] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [96] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [96] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [96] -> SHIFT "new" GOTO 90
	expression/L2 = . "null", FOLLOW [96] -> SHIFT "null" GOTO 91
[87]
	statement/L1 = "delete" . expression ";", FOLLOW [97] -> GOTO 176
	expression/L3 = . expression "=" expression, FOLLOW [96] -> GOTO 176
	expression/L3 = . expression "+=" expression, FOLLOW [96] -> GOTO 176
	expression/L3 = . expression "-=" expression, FOLLOW [96] -> GOTO 176
	expression/L3 = . expression "*=" expression, FOLLOW [96] -> GOTO 176
	expression/L3 = . expression "/=" expression, FOLLOW [96] -> GOTO 176
	expression/L3 = . expression "^=" expression, FOLLOW [96] -> GOTO 176
	expression/L3 = . expression "&=" expression, FOLLOW [96] -> GOTO 176
	expression/L3 = . expression "%=" expression, FOLLOW [96] -> GOTO 176
	expression/L3 = . expression "&&=" expression, FOLLOW [96] -> GOTO 176
	expression/L3 = . expression "||=" expression, FOLLOW [96] -> GOTO 176
	expression/L3 = . expression "&=" expression, FOLLOW [96] -> GOTO 176
	expression/L3 = . expression "|=" expression, FOLLOW [96] -> GOTO 176
	expression/L3 = . expression "<<=" expression, FOLLOW [96] -> GOTO 176
	expression/L3 = . expression ">>=" expression, FOLLOW [96] -> GOTO 176
	expression/L4 = . expression "||" expression, FOLLOW [96] -> GOTO 176
	expression/L5 = . expression "&&" expression, FOLLOW [96] -> GOTO 176
	expression/L6 = . expression "|" expression, FOLLOW [96] -> GOTO 176
	expression/L7 = . expression "^" expression, FOLLOW [96] -> GOTO 176
	expression/L7 = . expression "&" expression, FOLLOW [96] -> GOTO 176
	expression/L8 = . expression "==" expression, FOLLOW [96] -> GOTO 176
	expression/L8 = . expression "!=" expression, FOLLOW [96] -> GOTO 176
	expression/L8 = . expression "<=" expression, FOLLOW [96] -> GOTO 176
	expression/L8 = . expression "<" expression, FOLLOW [96] -> GOTO 176
	expression/L8 = . expression ">=" expression, FOLLOW [96] -> GOTO 176
	expression/L8 = . expression ">" expression, FOLLOW [96] -> GOTO 176
	expression/L9 = . expression "+" expression, FOLLOW [96] -> GOTO 176
	expression/L9 = . expression "-" expression, FOLLOW [96] -> GOTO 176
	expression/L10 = . expression "*" expression, FOLLOW [96] -> GOTO 176
	expression/L10 = . expression "/" expression, FOLLOW [96] -> GOTO 176
	expression/L10 = . expression "%" expression, FOLLOW [96] -> GOTO 176
	expression/L11 = . expression "<<" expression, FOLLOW [96] -> GOTO 176
	expression/L11 = . expression ">>" expression, FOLLOW [96] -> GOTO 176
	expression/L12 = . expression "." IDENT, FOLLOW [96] -> GOTO 176
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [96] -> GOTO 176
	expression/L13 = . expression "(" ")", FOLLOW [96] -> GOTO 176
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [96] -> GOTO 176
	iexpression = . expression indirection IDENT, FOLLOW [96] -> GOTO 176
	expression/L12 = . iexpression, FOLLOW [96] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [96] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [96] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [96] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [96] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [96] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [96] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [96] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [96] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [96] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [96] -> SHIFT '{' GOTO 94
	expression/L1 = . "{" "}", FOLLOW [96] -> SHIFT '{' GOTO 94
	expression/L9 = . "+" expression, FOLLOW [96] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [96] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [96] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [96] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [96] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [96] -> SHIFT "new" GOTO 90
	expression/L2 = . "null", FOLLOW [96] -> SHIFT "null" GOTO 91
[88]
	statement/L1 = "if" . "(" expression ")" "{" codeblock "}", FOLLOW [97] -> SHIFT '(' GOTO 177
	statement/L1 = "if" . "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}", FOLLOW [97] -> SHIFT '(' GOTO 177
[89]
	statement/L1 = "while" . "(" expression ")" "{" codeblock "}", FOLLOW [97] -> SHIFT '(' GOTO 178
[90]
	typespec/L1 = . typename, FOLLOW [25] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [25] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [25] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [25] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [25] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [25] -> GOTO 8
	expression/L1 = "new" . typespec ":" expression, FOLLOW [234] -> GOTO 179
	typename/L1 = . IDENT, FOLLOW [178] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [178] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [25] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [25] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [25] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [25] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [25] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [25] -> SHIFT "const" GOTO 18
[91]
	expression/L2 = "null" . (83), FOLLOW [234] -> REDUCE expression #1 CALL null "constexpr float"
[92]
	typespec/L1 = typename "^" "^" "&" . (23), FOLLOW [248] -> REDUCE typespec #4 CALL typespec "^^&"
[93]
	iexpression = expression . indirection IDENT, FOLLOW [96] -> GOTO 126
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [96] -> SHIFT '(' GOTO 127
	expression/L13 = expression . "(" ")", FOLLOW [96] -> SHIFT '(' GOTO 127
	expression/L7 = expression . "&" expression, FOLLOW [96] -> SHIFT '&' GOTO 129
	expression/L7 = expression . "^" expression, FOLLOW [96] -> SHIFT '^' GOTO 130
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 131
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 131
	expression/L3 = expression . "=" expression, FOLLOW [96] -> SHIFT '=' GOTO 132
	expression/L9 = expression . "+" expression, FOLLOW [96] -> SHIFT '+' GOTO 133
	expression/L9 = expression . "-" expression, FOLLOW [96] -> SHIFT '-' GOTO 134
	expression/L10 = expression . "*" expression, FOLLOW [96] -> SHIFT '*' GOTO 135
	expression/L10 = expression . "/" expression, FOLLOW [96] -> SHIFT '/' GOTO 136
	expression/L10 = expression . "%" expression, FOLLOW [96] -> SHIFT '%' GOTO 137
	expression/L5 = expression . "&&" expression, FOLLOW [96] -> SHIFT "&&" GOTO 138
	expression/L4 = expression . "||" expression, FOLLOW [96] -> SHIFT "||" GOTO 139
	expression/L6 = expression . "|" expression, FOLLOW [96] -> SHIFT '|' GOTO 140
	expression/L11 = expression . "<<" expression, FOLLOW [96] -> SHIFT "<<" GOTO 141
	expression/L11 = expression . ">>" expression, FOLLOW [96] -> SHIFT ">>" GOTO 142
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [96] -> SHIFT '[' GOTO 143
	expression/L8 = expression . "==" expression, FOLLOW [96] -> SHIFT "==" GOTO 144
	expression/L8 = expression . "!=" expression, FOLLOW [96] -> SHIFT "!=" GOTO 145
	expression/L8 = expression . ">=" expression, FOLLOW [96] -> SHIFT ">=" GOTO 146
	expression/L8 = expression . "<=" expression, FOLLOW [96] -> SHIFT "<=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [96] -> SHIFT '>' GOTO 148
	expression/L8 = expression . "<" expression, FOLLOW [96] -> SHIFT '<' GOTO 149
	expression/L3 = expression . "+=" expression, FOLLOW [96] -> SHIFT "+=" GOTO 150
	expression/L3 = expression . "-=" expression, FOLLOW [96] -> SHIFT "-=" GOTO 151
	expression/L3 = expression . "*=" expression, FOLLOW [96] -> SHIFT "*=" GOTO 152
	expression/L3 = expression . "/=" expression, FOLLOW [96] -> SHIFT "/=" GOTO 153
	expression/L3 = expression . "^=" expression, FOLLOW [96] -> SHIFT "^=" GOTO 154
	expression/L3 = expression . "&=" expression, FOLLOW [96] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "&=" expression, FOLLOW [96] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "%=" expression, FOLLOW [96] -> SHIFT "%=" GOTO 156
	expression/L3 = expression . "&&=" expression, FOLLOW [96] -> SHIFT "&&=" GOTO 157
	expression/L3 = expression . "||=" expression, FOLLOW [96] -> SHIFT "||=" GOTO 158
	expression/L3 = expression . "|=" expression, FOLLOW [96] -> SHIFT "|=" GOTO 159
	expression/L3 = expression . "<<=" expression, FOLLOW [96] -> SHIFT "<<=" GOTO 160
	expression/L3 = expression . ">>=" expression, FOLLOW [96] -> SHIFT ">>=" GOTO 161
	expression/L12 = expression . "." IDENT, FOLLOW [96] -> SHIFT '.' GOTO 162
	variabledefinition = typespec IDENT "=" expression . (step:73), FOLLOW [13] -> REDUCE variabledefinition #4 CALL vardef_assign
[94]
	expression/L3 = . expression "=" expression, FOLLOW [234] -> GOTO 180
	expression/L3 = . expression "+=" expression, FOLLOW [234] -> GOTO 180
	expression/L3 = . expression "-=" expression, FOLLOW [234] -> GOTO 180
	expression/L3 = . expression "*=" expression, FOLLOW [234] -> GOTO 180
	expression/L3 = . expression "/=" expression, FOLLOW [234] -> GOTO 180
	expression/L3 = . expression "^=" expression, FOLLOW [234] -> GOTO 180
	expression/L3 = . expression "&=" expression, FOLLOW [234] -> GOTO 180
	expression/L3 = . expression "%=" expression, FOLLOW [234] -> GOTO 180
	expression/L3 = . expression "&&=" expression, FOLLOW [234] -> GOTO 180
	expression/L3 = . expression "||=" expression, FOLLOW [234] -> GOTO 180
	expression/L3 = . expression "&=" expression, FOLLOW [234] -> GOTO 180
	expression/L3 = . expression "|=" expression, FOLLOW [234] -> GOTO 180
	expression/L3 = . expression "<<=" expression, FOLLOW [234] -> GOTO 180
	expression/L3 = . expression ">>=" expression, FOLLOW [234] -> GOTO 180
	expression/L4 = . expression "||" expression, FOLLOW [234] -> GOTO 180
	expression/L5 = . expression "&&" expression, FOLLOW [234] -> GOTO 180
	expression/L6 = . expression "|" expression, FOLLOW [234] -> GOTO 180
	expression/L7 = . expression "^" expression, FOLLOW [234] -> GOTO 180
	expression/L7 = . expression "&" expression, FOLLOW [234] -> GOTO 180
	expression/L8 = . expression "==" expression, FOLLOW [234] -> GOTO 180
	expression/L8 = . expression "!=" expression, FOLLOW [234] -> GOTO 180
	expression/L8 = . expression "<=" expression, FOLLOW [234] -> GOTO 180
	expression/L8 = . expression "<" expression, FOLLOW [234] -> GOTO 180
	expression/L8 = . expression ">=" expression, FOLLOW [234] -> GOTO 180
	expression/L8 = . expression ">" expression, FOLLOW [234] -> GOTO 180
	expression/L9 = . expression "+" expression, FOLLOW [234] -> GOTO 180
	expression/L9 = . expression "-" expression, FOLLOW [234] -> GOTO 180
	expression/L10 = . expression "*" expression, FOLLOW [234] -> GOTO 180
	expression/L10 = . expression "/" expression, FOLLOW [234] -> GOTO 180
	expression/L10 = . expression "%" expression, FOLLOW [234] -> GOTO 180
	expression/L11 = . expression "<<" expression, FOLLOW [234] -> GOTO 180
	expression/L11 = . expression ">>" expression, FOLLOW [234] -> GOTO 180
	expression/L12 = . expression "." IDENT, FOLLOW [234] -> GOTO 180
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [234] -> GOTO 180
	expression/L13 = . expression "(" ")", FOLLOW [234] -> GOTO 180
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [234] -> GOTO 180
	iexpression = . expression indirection IDENT, FOLLOW [234] -> GOTO 180
	expressionlist = . expression "," expressionlist, FOLLOW [16] -> GOTO 180
	expressionlist = . expression, FOLLOW [16] -> GOTO 180
	expression/L12 = . iexpression, FOLLOW [234] -> GOTO 69
	expression/L1 = "{" . expressionlist "}", FOLLOW [234] -> GOTO 167
	expression/L2 = . BOOLEAN, FOLLOW [234] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [234] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [234] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [234] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [234] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [234] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [234] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [234] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [234] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [234] -> SHIFT '{' GOTO 94
	expression/L1 = . "{" "}", FOLLOW [234] -> SHIFT '{' GOTO 94
	expression/L1 = "{" . "}", FOLLOW [234] -> SHIFT '}' GOTO 168
	expression/L9 = . "+" expression, FOLLOW [234] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [234] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [234] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [234] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [234] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [234] -> SHIFT "new" GOTO 90
	expression/L2 = . "null", FOLLOW [234] -> SHIFT "null" GOTO 91
[95]
	iexpression = expression . indirection IDENT, FOLLOW [166] -> GOTO 126
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [166] -> SHIFT '(' GOTO 127
	expression/L13 = expression . "(" ")", FOLLOW [166] -> SHIFT '(' GOTO 127
	expression/L7 = expression . "&" expression, FOLLOW [166] -> SHIFT '&' GOTO 129
	expression/L7 = expression . "^" expression, FOLLOW [166] -> SHIFT '^' GOTO 130
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 131
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 131
	expression/L3 = expression . "=" expression, FOLLOW [166] -> SHIFT '=' GOTO 132
	expression/L9 = expression . "+" expression, FOLLOW [166] -> SHIFT '+' GOTO 133
	expression/L9 = expression . "-" expression, FOLLOW [166] -> SHIFT '-' GOTO 134
	expression/L10 = expression . "*" expression, FOLLOW [166] -> SHIFT '*' GOTO 135
	expression/L10 = expression . "/" expression, FOLLOW [166] -> SHIFT '/' GOTO 136
	expression/L10 = expression . "%" expression, FOLLOW [166] -> SHIFT '%' GOTO 137
	expression/L5 = expression . "&&" expression, FOLLOW [166] -> SHIFT "&&" GOTO 138
	expression/L4 = expression . "||" expression, FOLLOW [166] -> SHIFT "||" GOTO 139
	expression/L6 = expression . "|" expression, FOLLOW [166] -> SHIFT '|' GOTO 140
	expression/L11 = expression . "<<" expression, FOLLOW [166] -> SHIFT "<<" GOTO 141
	expression/L11 = expression . ">>" expression, FOLLOW [166] -> SHIFT ">>" GOTO 142
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [166] -> SHIFT '[' GOTO 143
	variabledefinition = typespec IDENT "[" expression . "]" "=" expression, FOLLOW [13] -> SHIFT ']' GOTO 181
	variabledefinition = typespec IDENT "[" expression . "]", FOLLOW [13] -> SHIFT ']' GOTO 181
	expression/L8 = expression . "==" expression, FOLLOW [166] -> SHIFT "==" GOTO 144
	expression/L8 = expression . "!=" expression, FOLLOW [166] -> SHIFT "!=" GOTO 145
	expression/L8 = expression . ">=" expression, FOLLOW [166] -> SHIFT ">=" GOTO 146
	expression/L8 = expression . "<=" expression, FOLLOW [166] -> SHIFT "<=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [166] -> SHIFT '>' GOTO 148
	expression/L8 = expression . "<" expression, FOLLOW [166] -> SHIFT '<' GOTO 149
	expression/L3 = expression . "+=" expression, FOLLOW [166] -> SHIFT "+=" GOTO 150
	expression/L3 = expression . "-=" expression, FOLLOW [166] -> SHIFT "-=" GOTO 151
	expression/L3 = expression . "*=" expression, FOLLOW [166] -> SHIFT "*=" GOTO 152
	expression/L3 = expression . "/=" expression, FOLLOW [166] -> SHIFT "/=" GOTO 153
	expression/L3 = expression . "^=" expression, FOLLOW [166] -> SHIFT "^=" GOTO 154
	expression/L3 = expression . "&=" expression, FOLLOW [166] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "&=" expression, FOLLOW [166] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "%=" expression, FOLLOW [166] -> SHIFT "%=" GOTO 156
	expression/L3 = expression . "&&=" expression, FOLLOW [166] -> SHIFT "&&=" GOTO 157
	expression/L3 = expression . "||=" expression, FOLLOW [166] -> SHIFT "||=" GOTO 158
	expression/L3 = expression . "|=" expression, FOLLOW [166] -> SHIFT "|=" GOTO 159
	expression/L3 = expression . "<<=" expression, FOLLOW [166] -> SHIFT "<<=" GOTO 160
	expression/L3 = expression . ">>=" expression, FOLLOW [166] -> SHIFT ">>=" GOTO 161
	expression/L12 = expression . "." IDENT, FOLLOW [166] -> SHIFT '.' GOTO 162
[96]
	functiondefinition = linkage "function" typespec IDENT . callablebody, FOLLOW [244] -> GOTO 182
	callablebody = . "(" parameterlist ")" "{" codeblock "}", FOLLOW [244] -> SHIFT '(' GOTO 98
	callablebody = . "(" parameterlist ")" "const" "{" codeblock "}", FOLLOW [244] -> SHIFT '(' GOTO 98
[97]
	functiondefinition = linkage "procedure" IDENT callablebody . (33), FOLLOW [244] -> REDUCE functiondefinition #4 CALL procdef
[98]
	typespec/L1 = . typename, FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [9] -> GOTO 8
	paramdecl = . typespec IDENT, FOLLOW [182] -> GOTO 183
	callablebody = "(" . parameterlist ")" "{" codeblock "}", FOLLOW [244] -> GOTO 184
	callablebody = "(" . parameterlist ")" "const" "{" codeblock "}", FOLLOW [244] -> GOTO 184
	parameterlist = . parameters, FOLLOW [10] -> GOTO 185
	parameters = . paramdecl "," parameters, FOLLOW [10] -> GOTO 186
	parameters = . paramdecl, FOLLOW [10] -> GOTO 186
	typename/L1 = . IDENT, FOLLOW [61] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [61] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	parameterlist = . (62), FOLLOW [10] -> REDUCE parameterlist #0 CALL paramdeflist
[99]
	typespec/L1 = "const" typename "^" "&" . (20), FOLLOW [248] -> REDUCE typespec #4 CALL typespec "const^&"
[100]
	typespec/L1 = "const" typename "^" "^" . "&", FOLLOW [248] -> SHIFT '&' GOTO 187
	typespec/L1 = "const" typename "^" "^" . (22), FOLLOW [248] -> REDUCE typespec #4 CALL typespec "const^^"
[101]
	structdefinition = "struct" IDENT "{" struct_definitionlist . "}", FOLLOW [173] -> SHIFT '}' GOTO 188
[102]
	struct_definitionlist = struct_definition . struct_definitionlist, FOLLOW [16] -> GOTO 189
	struct_definitionlist = . struct_definition struct_definitionlist, FOLLOW [16] -> GOTO 102
	typespec/L1 = . typename, FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [9] -> GOTO 8
	variabledefinition = . typespec IDENT, FOLLOW [13] -> GOTO 9
	variabledefinition = . typespec IDENT "=" expression, FOLLOW [13] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression, FOLLOW [13] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]", FOLLOW [13] -> GOTO 9
	struct_definition = . typedefinition ";", FOLLOW [167] -> GOTO 10
	struct_definition = . structdefinition, FOLLOW [167] -> GOTO 11
	struct_definition = . variabledefinition ";", FOLLOW [167] -> GOTO 16
	typename/L1 = . IDENT, FOLLOW [61] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [61] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typedefinition = . "typedef" typepath IDENT, FOLLOW [13] -> SHIFT "typedef" GOTO 19
	structdefinition = . "struct" IDENT "{" struct_definitionlist "}", FOLLOW [167] -> SHIFT "struct" GOTO 20
	struct_definitionlist = ., FOLLOW [16] -> REDUCE struct_definitionlist #0
[103]
	interfacedefinition = "interface" IDENT "{" interface_definitionlist . "}", FOLLOW [173] -> SHIFT '}' GOTO 190
[104]
	interface_definitionlist = interface_definition . interface_definitionlist, FOLLOW [16] -> GOTO 191
	interface_definitionlist = . interface_definition interface_definitionlist, FOLLOW [16] -> GOTO 104
	interface_definition = . "function" typespec IDENT "(" parameterlist ")" ";", FOLLOW [169] -> SHIFT "function" GOTO 105
	interface_definition = . "function" typespec IDENT "(" parameterlist ")" "const" ";", FOLLOW [169] -> SHIFT "function" GOTO 105
	interface_definition = . "procedure" IDENT "(" parameterlist ")" ";", FOLLOW [169] -> SHIFT "procedure" GOTO 106
	interface_definition = . "procedure" IDENT "(" parameterlist ")" "const" ";", FOLLOW [169] -> SHIFT "procedure" GOTO 106
	interface_definitionlist = ., FOLLOW [16] -> REDUCE interface_definitionlist #0
[105]
	typespec/L1 = . typename, FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [9] -> GOTO 8
	interface_definition = "function" . typespec IDENT "(" parameterlist ")" ";", FOLLOW [169] -> GOTO 192
	interface_definition = "function" . typespec IDENT "(" parameterlist ")" "const" ";", FOLLOW [169] -> GOTO 192
	typename/L1 = . IDENT, FOLLOW [61] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [61] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
[106]
	interface_definition = "procedure" . IDENT "(" parameterlist ")" ";", FOLLOW [169] -> SHIFT IDENT GOTO 193
	interface_definition = "procedure" . IDENT "(" parameterlist ")" "const" ";", FOLLOW [169] -> SHIFT IDENT GOTO 193
[107]
	classdefinition = "class" IDENT "{" class_definitionlist . "}", FOLLOW [173] -> SHIFT '}' GOTO 194
[108]
	class_definitionlist = class_definition . class_definitionlist, FOLLOW [16] -> GOTO 195
	class_definitionlist = . class_definition class_definitionlist, FOLLOW [16] -> GOTO 108
	typespec/L1 = . typename, FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [9] -> GOTO 8
	variabledefinition = . typespec IDENT, FOLLOW [13] -> GOTO 9
	variabledefinition = . typespec IDENT "=" expression, FOLLOW [13] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression, FOLLOW [13] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]", FOLLOW [13] -> GOTO 9
	class_definition = . typedefinition ";", FOLLOW [172] -> GOTO 109
	class_definition = . structdefinition, FOLLOW [172] -> GOTO 110
	class_definition = . interfacedefinition, FOLLOW [172] -> GOTO 111
	class_definition = . classdefinition, FOLLOW [172] -> GOTO 112
	functiondefinition = . linkage "function" typespec IDENT callablebody, FOLLOW [172] -> GOTO 113
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [172] -> GOTO 113
	constructordefinition = . linkage "constructor" callablebody, FOLLOW [172] -> GOTO 113
	operatordefinition = . linkage "operator" "->" typespec callablebody, FOLLOW [172] -> GOTO 113
	operatordefinition = . linkage "operator" "=" typespec callablebody, FOLLOW [172] -> GOTO 113
	operatordefinition = . linkage "operator" "+" typespec callablebody, FOLLOW [172] -> GOTO 113
	operatordefinition = . linkage "operator" "-" typespec callablebody, FOLLOW [172] -> GOTO 113
	operatordefinition = . linkage "operator" "*" typespec callablebody, FOLLOW [172] -> GOTO 113
	operatordefinition = . linkage "operator" "/" typespec callablebody, FOLLOW [172] -> GOTO 113
	operatordefinition = . linkage "operator" "%" typespec callablebody, FOLLOW [172] -> GOTO 113
	operatordefinition = . linkage "operator" "&&" typespec callablebody, FOLLOW [172] -> GOTO 113
	operatordefinition = . linkage "operator" "||" typespec callablebody, FOLLOW [172] -> GOTO 113
	operatordefinition = . linkage "operator" "&" typespec callablebody, FOLLOW [172] -> GOTO 113
	operatordefinition = . linkage "operator" "|" typespec callablebody, FOLLOW [172] -> GOTO 113
	operatordefinition = . linkage "operator" "<<" typespec callablebody, FOLLOW [172] -> GOTO 113
	operatordefinition = . linkage "operator" ">>" typespec callablebody, FOLLOW [172] -> GOTO 113
	operatordefinition = . linkage "operator" "~" typespec callablebody, FOLLOW [172] -> GOTO 113
	operatordefinition = . linkage "operator" "!" typespec callablebody, FOLLOW [172] -> GOTO 113
	operatordefinition = . linkage "operator" "(" ")" typespec callablebody, FOLLOW [172] -> GOTO 113
	operatordefinition = . linkage "operator" "[" "]" typespec callablebody, FOLLOW [172] -> GOTO 113
	operatordefinition = . linkage "operator" "==" typespec callablebody, FOLLOW [172] -> GOTO 113
	operatordefinition = . linkage "operator" "!=" typespec callablebody, FOLLOW [172] -> GOTO 113
	operatordefinition = . linkage "operator" ">=" typespec callablebody, FOLLOW [172] -> GOTO 113
	operatordefinition = . linkage "operator" "<=" typespec callablebody, FOLLOW [172] -> GOTO 113
	operatordefinition = . linkage "operator" ">" typespec callablebody, FOLLOW [172] -> GOTO 113
	operatordefinition = . linkage "operator" "<" typespec callablebody, FOLLOW [172] -> GOTO 113
	class_definition = . functiondefinition, FOLLOW [172] -> GOTO 114
	class_definition = . constructordefinition, FOLLOW [172] -> GOTO 115
	class_definition = . operatordefinition, FOLLOW [172] -> GOTO 116
	class_definition = . variabledefinition ";", FOLLOW [172] -> GOTO 117
	typename/L1 = . IDENT, FOLLOW [61] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [61] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typedefinition = . "typedef" typepath IDENT, FOLLOW [13] -> SHIFT "typedef" GOTO 19
	structdefinition = . "struct" IDENT "{" struct_definitionlist "}", FOLLOW [172] -> SHIFT "struct" GOTO 20
	interfacedefinition = . "interface" IDENT "{" interface_definitionlist "}", FOLLOW [172] -> SHIFT "interface" GOTO 21
	classdefinition = . "class" IDENT "{" class_definitionlist "}", FOLLOW [172] -> SHIFT "class" GOTO 22
	classdefinition = . "class" IDENT ":" inheritlist "{" class_definitionlist "}", FOLLOW [172] -> SHIFT "class" GOTO 22
	linkage = . "private", FOLLOW [171] -> SHIFT "private" GOTO 23
	linkage = . "public", FOLLOW [171] -> SHIFT "public" GOTO 24
	constructordefinition = . "destructor" "{" codeblock "}", FOLLOW [172] -> SHIFT "destructor" GOTO 118
	class_definitionlist = ., FOLLOW [16] -> REDUCE class_definitionlist #0
	linkage = . (30), FOLLOW [171] -> REDUCE linkage #0 CALL linkage {linkage="internal",attributes="#0 nounwind"}
[109]
	class_definition = typedefinition . ";", FOLLOW [172] -> SHIFT ';' GOTO 196
[110]
	class_definition = structdefinition . (11), FOLLOW [172] -> REDUCE class_definition #1 CALL definition 1
[111]
	class_definition = interfacedefinition . (11), FOLLOW [172] -> REDUCE class_definition #1 CALL definition 1
[112]
	class_definition = classdefinition . (11), FOLLOW [172] -> REDUCE class_definition #1 CALL definition 1
[113]
	functiondefinition = linkage . "function" typespec IDENT callablebody, FOLLOW [172] -> SHIFT "function" GOTO 34
	functiondefinition = linkage . "procedure" IDENT callablebody, FOLLOW [172] -> SHIFT "procedure" GOTO 35
	constructordefinition = linkage . "constructor" callablebody, FOLLOW [172] -> SHIFT "constructor" GOTO 197
	operatordefinition = linkage . "operator" "->" typespec callablebody, FOLLOW [172] -> SHIFT "operator" GOTO 198
	operatordefinition = linkage . "operator" "=" typespec callablebody, FOLLOW [172] -> SHIFT "operator" GOTO 198
	operatordefinition = linkage . "operator" "+" typespec callablebody, FOLLOW [172] -> SHIFT "operator" GOTO 198
	operatordefinition = linkage . "operator" "-" typespec callablebody, FOLLOW [172] -> SHIFT "operator" GOTO 198
	operatordefinition = linkage . "operator" "*" typespec callablebody, FOLLOW [172] -> SHIFT "operator" GOTO 198
	operatordefinition = linkage . "operator" "/" typespec callablebody, FOLLOW [172] -> SHIFT "operator" GOTO 198
	operatordefinition = linkage . "operator" "%" typespec callablebody, FOLLOW [172] -> SHIFT "operator" GOTO 198
	operatordefinition = linkage . "operator" "&&" typespec callablebody, FOLLOW [172] -> SHIFT "operator" GOTO 198
	operatordefinition = linkage . "operator" "||" typespec callablebody, FOLLOW [172] -> SHIFT "operator" GOTO 198
	operatordefinition = linkage . "operator" "&" typespec callablebody, FOLLOW [172] -> SHIFT "operator" GOTO 198
	operatordefinition = linkage . "operator" "|" typespec callablebody, FOLLOW [172] -> SHIFT "operator" GOTO 198
	operatordefinition = linkage . "operator" "<<" typespec callablebody, FOLLOW [172] -> SHIFT "operator" GOTO 198
	operatordefinition = linkage . "operator" ">>" typespec callablebody, FOLLOW [172] -> SHIFT "operator" GOTO 198
	operatordefinition = linkage . "operator" "~" typespec callablebody, FOLLOW [172] -> SHIFT "operator" GOTO 198
	operatordefinition = linkage . "operator" "!" typespec callablebody, FOLLOW [172] -> SHIFT "operator" GOTO 198
	operatordefinition = linkage . "operator" "(" ")" typespec callablebody, FOLLOW [172] -> SHIFT "operator" GOTO 198
	operatordefinition = linkage . "operator" "[" "]" typespec callablebody, FOLLOW [172] -> SHIFT "operator" GOTO 198
	operatordefinition = linkage . "operator" "==" typespec callablebody, FOLLOW [172] -> SHIFT "operator" GOTO 198
	operatordefinition = linkage . "operator" "!=" typespec callablebody, FOLLOW [172] -> SHIFT "operator" GOTO 198
	operatordefinition = linkage . "operator" ">=" typespec callablebody, FOLLOW [172] -> SHIFT "operator" GOTO 198
	operatordefinition = linkage . "operator" "<=" typespec callablebody, FOLLOW [172] -> SHIFT "operator" GOTO 198
	operatordefinition = linkage . "operator" ">" typespec callablebody, FOLLOW [172] -> SHIFT "operator" GOTO 198
	operatordefinition = linkage . "operator" "<" typespec callablebody, FOLLOW [172] -> SHIFT "operator" GOTO 198
[114]
	class_definition = functiondefinition . (12), FOLLOW [172] -> REDUCE class_definition #1 CALL definition 2
[115]
	class_definition = constructordefinition . (12), FOLLOW [172] -> REDUCE class_definition #1 CALL definition 2
[116]
	class_definition = operatordefinition . (12), FOLLOW [172] -> REDUCE class_definition #1 CALL definition 2
[117]
	class_definition = variabledefinition . ";", FOLLOW [172] -> SHIFT ';' GOTO 199
[118]
	constructordefinition = "destructor" . "{" codeblock "}", FOLLOW [172] -> SHIFT '{' GOTO 200
[119]
	inheritlist = typepath . "," inheritlist, FOLLOW [17] -> SHIFT ',' GOTO 201
	inheritlist = typepath . (step:28), FOLLOW [17] -> REDUCE inheritlist #1 CALL inheritdef 1
[120]
	classdefinition = "class" IDENT ":" inheritlist . "{" class_definitionlist "}", FOLLOW [173] -> SHIFT '{' GOTO 202
[121]
	extern_definition = "extern" DQSTRING "function" typespec IDENT . "(" extern_paramlist ")" ";", FOLLOW [58] -> SHIFT '(' GOTO 203
	extern_definition = "extern" DQSTRING "function" typespec IDENT . "(" extern_paramlist "..." ")" ";", FOLLOW [58] -> SHIFT '(' GOTO 203
[122]
	extern_paramlist = . extern_parameters, FOLLOW [183] -> GOTO 204
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" . extern_paramlist ")" ";", FOLLOW [58] -> GOTO 205
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" . extern_paramlist "..." ")" ";", FOLLOW [58] -> GOTO 205
	typespec/L1 = . typename, FOLLOW [185] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [185] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [185] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [185] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [185] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [185] -> GOTO 8
	extern_parameters = . typespec "," extern_parameters, FOLLOW [183] -> GOTO 206
	extern_parameters = . typespec, FOLLOW [183] -> GOTO 206
	typename/L1 = . IDENT, FOLLOW [186] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [186] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [185] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [185] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [185] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [185] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [185] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [185] -> SHIFT "const" GOTO 18
	extern_paramlist = . (6), FOLLOW [183] -> REDUCE extern_paramlist #0 CALL extern_paramdeflist
[123]
	statement/L1 = typedefinition ";" . (65), FOLLOW [97] -> REDUCE statement #2 CALL definition
[124]
	main_procedure = "main" "{" codeblock "}" . (scope:61), FOLLOW [0] -> REDUCE main_procedure #4 CALL main_procdef
[125]
	statementlist = statement statementlist . (step), FOLLOW [16] -> REDUCE statementlist #2
[126]
	iexpression = expression indirection . IDENT, FOLLOW [234] -> SHIFT IDENT GOTO 207
[127]
	expression/L3 = . expression "=" expression, FOLLOW [234] -> GOTO 180
	expression/L3 = . expression "+=" expression, FOLLOW [234] -> GOTO 180
	expression/L3 = . expression "-=" expression, FOLLOW [234] -> GOTO 180
	expression/L3 = . expression "*=" expression, FOLLOW [234] -> GOTO 180
	expression/L3 = . expression "/=" expression, FOLLOW [234] -> GOTO 180
	expression/L3 = . expression "^=" expression, FOLLOW [234] -> GOTO 180
	expression/L3 = . expression "&=" expression, FOLLOW [234] -> GOTO 180
	expression/L3 = . expression "%=" expression, FOLLOW [234] -> GOTO 180
	expression/L3 = . expression "&&=" expression, FOLLOW [234] -> GOTO 180
	expression/L3 = . expression "||=" expression, FOLLOW [234] -> GOTO 180
	expression/L3 = . expression "&=" expression, FOLLOW [234] -> GOTO 180
	expression/L3 = . expression "|=" expression, FOLLOW [234] -> GOTO 180
	expression/L3 = . expression "<<=" expression, FOLLOW [234] -> GOTO 180
	expression/L3 = . expression ">>=" expression, FOLLOW [234] -> GOTO 180
	expression/L4 = . expression "||" expression, FOLLOW [234] -> GOTO 180
	expression/L5 = . expression "&&" expression, FOLLOW [234] -> GOTO 180
	expression/L6 = . expression "|" expression, FOLLOW [234] -> GOTO 180
	expression/L7 = . expression "^" expression, FOLLOW [234] -> GOTO 180
	expression/L7 = . expression "&" expression, FOLLOW [234] -> GOTO 180
	expression/L8 = . expression "==" expression, FOLLOW [234] -> GOTO 180
	expression/L8 = . expression "!=" expression, FOLLOW [234] -> GOTO 180
	expression/L8 = . expression "<=" expression, FOLLOW [234] -> GOTO 180
	expression/L8 = . expression "<" expression, FOLLOW [234] -> GOTO 180
	expression/L8 = . expression ">=" expression, FOLLOW [234] -> GOTO 180
	expression/L8 = . expression ">" expression, FOLLOW [234] -> GOTO 180
	expression/L9 = . expression "+" expression, FOLLOW [234] -> GOTO 180
	expression/L9 = . expression "-" expression, FOLLOW [234] -> GOTO 180
	expression/L10 = . expression "*" expression, FOLLOW [234] -> GOTO 180
	expression/L10 = . expression "/" expression, FOLLOW [234] -> GOTO 180
	expression/L10 = . expression "%" expression, FOLLOW [234] -> GOTO 180
	expression/L11 = . expression "<<" expression, FOLLOW [234] -> GOTO 180
	expression/L11 = . expression ">>" expression, FOLLOW [234] -> GOTO 180
	expression/L12 = . expression "." IDENT, FOLLOW [234] -> GOTO 180
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [234] -> GOTO 180
	expression/L13 = . expression "(" ")", FOLLOW [234] -> GOTO 180
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [234] -> GOTO 180
	iexpression = . expression indirection IDENT, FOLLOW [234] -> GOTO 180
	expressionlist = . expression "," expressionlist, FOLLOW [10] -> GOTO 180
	expressionlist = . expression, FOLLOW [10] -> GOTO 180
	expression/L12 = . iexpression, FOLLOW [234] -> GOTO 69
	expression/L13 = expression "(" . expressionlist ")", FOLLOW [234] -> GOTO 208
	expression/L2 = . BOOLEAN, FOLLOW [234] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [234] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [234] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [234] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [234] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [234] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [234] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [234] -> SHIFT '(' GOTO 77
	expression/L13 = expression "(" . ")", FOLLOW [234] -> SHIFT ')' GOTO 209
	expression/L9 = . "&" expression, FOLLOW [234] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [234] -> SHIFT '{' GOTO 94
	expression/L1 = . "{" "}", FOLLOW [234] -> SHIFT '{' GOTO 94
	expression/L9 = . "+" expression, FOLLOW [234] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [234] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [234] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [234] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [234] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [234] -> SHIFT "new" GOTO 90
	expression/L2 = . "null", FOLLOW [234] -> SHIFT "null" GOTO 91
[128]
	statement/L1 = expression ";" . (66), FOLLOW [97] -> REDUCE statement #2 CALL free_expression
[129]
	expression/L3 = . expression "=" expression, FOLLOW [234] -> GOTO 210
	expression/L3 = . expression "+=" expression, FOLLOW [234] -> GOTO 210
	expression/L3 = . expression "-=" expression, FOLLOW [234] -> GOTO 210
	expression/L3 = . expression "*=" expression, FOLLOW [234] -> GOTO 210
	expression/L3 = . expression "/=" expression, FOLLOW [234] -> GOTO 210
	expression/L3 = . expression "^=" expression, FOLLOW [234] -> GOTO 210
	expression/L3 = . expression "&=" expression, FOLLOW [234] -> GOTO 210
	expression/L3 = . expression "%=" expression, FOLLOW [234] -> GOTO 210
	expression/L3 = . expression "&&=" expression, FOLLOW [234] -> GOTO 210
	expression/L3 = . expression "||=" expression, FOLLOW [234] -> GOTO 210
	expression/L3 = . expression "&=" expression, FOLLOW [234] -> GOTO 210
	expression/L3 = . expression "|=" expression, FOLLOW [234] -> GOTO 210
	expression/L3 = . expression "<<=" expression, FOLLOW [234] -> GOTO 210
	expression/L3 = . expression ">>=" expression, FOLLOW [234] -> GOTO 210
	expression/L4 = . expression "||" expression, FOLLOW [234] -> GOTO 210
	expression/L5 = . expression "&&" expression, FOLLOW [234] -> GOTO 210
	expression/L6 = . expression "|" expression, FOLLOW [234] -> GOTO 210
	expression/L7 = . expression "^" expression, FOLLOW [234] -> GOTO 210
	expression/L7 = . expression "&" expression, FOLLOW [234] -> GOTO 210
	expression/L7 = expression "&" . expression, FOLLOW [234] -> GOTO 210
	expression/L8 = . expression "==" expression, FOLLOW [234] -> GOTO 210
	expression/L8 = . expression "!=" expression, FOLLOW [234] -> GOTO 210
	expression/L8 = . expression "<=" expression, FOLLOW [234] -> GOTO 210
	expression/L8 = . expression "<" expression, FOLLOW [234] -> GOTO 210
	expression/L8 = . expression ">=" expression, FOLLOW [234] -> GOTO 210
	expression/L8 = . expression ">" expression, FOLLOW [234] -> GOTO 210
	expression/L9 = . expression "+" expression, FOLLOW [234] -> GOTO 210
	expression/L9 = . expression "-" expression, FOLLOW [234] -> GOTO 210
	expression/L10 = . expression "*" expression, FOLLOW [234] -> GOTO 210
	expression/L10 = . expression "/" expression, FOLLOW [234] -> GOTO 210
	expression/L10 = . expression "%" expression, FOLLOW [234] -> GOTO 210
	expression/L11 = . expression "<<" expression, FOLLOW [234] -> GOTO 210
	expression/L11 = . expression ">>" expression, FOLLOW [234] -> GOTO 210
	expression/L12 = . expression "." IDENT, FOLLOW [234] -> GOTO 210
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [234] -> GOTO 210
	expression/L13 = . expression "(" ")", FOLLOW [234] -> GOTO 210
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [234] -> GOTO 210
	iexpression = . expression indirection IDENT, FOLLOW [234] -> GOTO 210
	expression/L12 = . iexpression, FOLLOW [234] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [234] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [234] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [234] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [234] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [234] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [234] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [234] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [234] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [234] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [234] -> SHIFT '{' GOTO 94
	expression/L1 = . "{" "}", FOLLOW [234] -> SHIFT '{' GOTO 94
	expression/L9 = . "+" expression, FOLLOW [234] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [234] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [234] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [234] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [234] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [234] -> SHIFT "new" GOTO 90
	expression/L2 = . "null", FOLLOW [234] -> SHIFT "null" GOTO 91
[130]
	expression/L3 = . expression "=" expression, FOLLOW [234] -> GOTO 211
	expression/L3 = . expression "+=" expression, FOLLOW [234] -> GOTO 211
	expression/L3 = . expression "-=" expression, FOLLOW [234] -> GOTO 211
	expression/L3 = . expression "*=" expression, FOLLOW [234] -> GOTO 211
	expression/L3 = . expression "/=" expression, FOLLOW [234] -> GOTO 211
	expression/L3 = . expression "^=" expression, FOLLOW [234] -> GOTO 211
	expression/L3 = . expression "&=" expression, FOLLOW [234] -> GOTO 211
	expression/L3 = . expression "%=" expression, FOLLOW [234] -> GOTO 211
	expression/L3 = . expression "&&=" expression, FOLLOW [234] -> GOTO 211
	expression/L3 = . expression "||=" expression, FOLLOW [234] -> GOTO 211
	expression/L3 = . expression "&=" expression, FOLLOW [234] -> GOTO 211
	expression/L3 = . expression "|=" expression, FOLLOW [234] -> GOTO 211
	expression/L3 = . expression "<<=" expression, FOLLOW [234] -> GOTO 211
	expression/L3 = . expression ">>=" expression, FOLLOW [234] -> GOTO 211
	expression/L4 = . expression "||" expression, FOLLOW [234] -> GOTO 211
	expression/L5 = . expression "&&" expression, FOLLOW [234] -> GOTO 211
	expression/L6 = . expression "|" expression, FOLLOW [234] -> GOTO 211
	expression/L7 = . expression "^" expression, FOLLOW [234] -> GOTO 211
	expression/L7 = expression "^" . expression, FOLLOW [234] -> GOTO 211
	expression/L7 = . expression "&" expression, FOLLOW [234] -> GOTO 211
	expression/L8 = . expression "==" expression, FOLLOW [234] -> GOTO 211
	expression/L8 = . expression "!=" expression, FOLLOW [234] -> GOTO 211
	expression/L8 = . expression "<=" expression, FOLLOW [234] -> GOTO 211
	expression/L8 = . expression "<" expression, FOLLOW [234] -> GOTO 211
	expression/L8 = . expression ">=" expression, FOLLOW [234] -> GOTO 211
	expression/L8 = . expression ">" expression, FOLLOW [234] -> GOTO 211
	expression/L9 = . expression "+" expression, FOLLOW [234] -> GOTO 211
	expression/L9 = . expression "-" expression, FOLLOW [234] -> GOTO 211
	expression/L10 = . expression "*" expression, FOLLOW [234] -> GOTO 211
	expression/L10 = . expression "/" expression, FOLLOW [234] -> GOTO 211
	expression/L10 = . expression "%" expression, FOLLOW [234] -> GOTO 211
	expression/L11 = . expression "<<" expression, FOLLOW [234] -> GOTO 211
	expression/L11 = . expression ">>" expression, FOLLOW [234] -> GOTO 211
	expression/L12 = . expression "." IDENT, FOLLOW [234] -> GOTO 211
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [234] -> GOTO 211
	expression/L13 = . expression "(" ")", FOLLOW [234] -> GOTO 211
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [234] -> GOTO 211
	iexpression = . expression indirection IDENT, FOLLOW [234] -> GOTO 211
	expression/L12 = . iexpression, FOLLOW [234] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [234] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [234] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [234] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [234] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [234] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [234] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [234] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [234] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [234] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [234] -> SHIFT '{' GOTO 94
	expression/L1 = . "{" "}", FOLLOW [234] -> SHIFT '{' GOTO 94
	expression/L9 = . "+" expression, FOLLOW [234] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [234] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [234] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [234] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [234] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [234] -> SHIFT "new" GOTO 90
	expression/L2 = . "null", FOLLOW [234] -> SHIFT "null" GOTO 91
[131]
	indirection = "->" . indirection, FOLLOW [9] -> GOTO 212
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 131
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 131
	indirection = "->" . (124), FOLLOW [9] -> REDUCE indirection #1 CALL count
[132]
	expression/L3 = . expression "=" expression, FOLLOW [234] -> GOTO 213
	expression/L3 = expression "=" . expression, FOLLOW [234] -> GOTO 213
	expression/L3 = . expression "+=" expression, FOLLOW [234] -> GOTO 213
	expression/L3 = . expression "-=" expression, FOLLOW [234] -> GOTO 213
	expression/L3 = . expression "*=" expression, FOLLOW [234] -> GOTO 213
	expression/L3 = . expression "/=" expression, FOLLOW [234] -> GOTO 213
	expression/L3 = . expression "^=" expression, FOLLOW [234] -> GOTO 213
	expression/L3 = . expression "&=" expression, FOLLOW [234] -> GOTO 213
	expression/L3 = . expression "%=" expression, FOLLOW [234] -> GOTO 213
	expression/L3 = . expression "&&=" expression, FOLLOW [234] -> GOTO 213
	expression/L3 = . expression "||=" expression, FOLLOW [234] -> GOTO 213
	expression/L3 = . expression "&=" expression, FOLLOW [234] -> GOTO 213
	expression/L3 = . expression "|=" expression, FOLLOW [234] -> GOTO 213
	expression/L3 = . expression "<<=" expression, FOLLOW [234] -> GOTO 213
	expression/L3 = . expression ">>=" expression, FOLLOW [234] -> GOTO 213
	expression/L4 = . expression "||" expression, FOLLOW [234] -> GOTO 213
	expression/L5 = . expression "&&" expression, FOLLOW [234] -> GOTO 213
	expression/L6 = . expression "|" expression, FOLLOW [234] -> GOTO 213
	expression/L7 = . expression "^" expression, FOLLOW [234] -> GOTO 213
	expression/L7 = . expression "&" expression, FOLLOW [234] -> GOTO 213
	expression/L8 = . expression "==" expression, FOLLOW [234] -> GOTO 213
	expression/L8 = . expression "!=" expression, FOLLOW [234] -> GOTO 213
	expression/L8 = . expression "<=" expression, FOLLOW [234] -> GOTO 213
	expression/L8 = . expression "<" expression, FOLLOW [234] -> GOTO 213
	expression/L8 = . expression ">=" expression, FOLLOW [234] -> GOTO 213
	expression/L8 = . expression ">" expression, FOLLOW [234] -> GOTO 213
	expression/L9 = . expression "+" expression, FOLLOW [234] -> GOTO 213
	expression/L9 = . expression "-" expression, FOLLOW [234] -> GOTO 213
	expression/L10 = . expression "*" expression, FOLLOW [234] -> GOTO 213
	expression/L10 = . expression "/" expression, FOLLOW [234] -> GOTO 213
	expression/L10 = . expression "%" expression, FOLLOW [234] -> GOTO 213
	expression/L11 = . expression "<<" expression, FOLLOW [234] -> GOTO 213
	expression/L11 = . expression ">>" expression, FOLLOW [234] -> GOTO 213
	expression/L12 = . expression "." IDENT, FOLLOW [234] -> GOTO 213
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [234] -> GOTO 213
	expression/L13 = . expression "(" ")", FOLLOW [234] -> GOTO 213
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [234] -> GOTO 213
	iexpression = . expression indirection IDENT, FOLLOW [234] -> GOTO 213
	expression/L12 = . iexpression, FOLLOW [234] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [234] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [234] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [234] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [234] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [234] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [234] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [234] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [234] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [234] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [234] -> SHIFT '{' GOTO 94
	expression/L1 = . "{" "}", FOLLOW [234] -> SHIFT '{' GOTO 94
	expression/L9 = . "+" expression, FOLLOW [234] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [234] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [234] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [234] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [234] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [234] -> SHIFT "new" GOTO 90
	expression/L2 = . "null", FOLLOW [234] -> SHIFT "null" GOTO 91
[133]
	expression/L3 = . expression "=" expression, FOLLOW [234] -> GOTO 214
	expression/L3 = . expression "+=" expression, FOLLOW [234] -> GOTO 214
	expression/L3 = . expression "-=" expression, FOLLOW [234] -> GOTO 214
	expression/L3 = . expression "*=" expression, FOLLOW [234] -> GOTO 214
	expression/L3 = . expression "/=" expression, FOLLOW [234] -> GOTO 214
	expression/L3 = . expression "^=" expression, FOLLOW [234] -> GOTO 214
	expression/L3 = . expression "&=" expression, FOLLOW [234] -> GOTO 214
	expression/L3 = . expression "%=" expression, FOLLOW [234] -> GOTO 214
	expression/L3 = . expression "&&=" expression, FOLLOW [234] -> GOTO 214
	expression/L3 = . expression "||=" expression, FOLLOW [234] -> GOTO 214
	expression/L3 = . expression "&=" expression, FOLLOW [234] -> GOTO 214
	expression/L3 = . expression "|=" expression, FOLLOW [234] -> GOTO 214
	expression/L3 = . expression "<<=" expression, FOLLOW [234] -> GOTO 214
	expression/L3 = . expression ">>=" expression, FOLLOW [234] -> GOTO 214
	expression/L4 = . expression "||" expression, FOLLOW [234] -> GOTO 214
	expression/L5 = . expression "&&" expression, FOLLOW [234] -> GOTO 214
	expression/L6 = . expression "|" expression, FOLLOW [234] -> GOTO 214
	expression/L7 = . expression "^" expression, FOLLOW [234] -> GOTO 214
	expression/L7 = . expression "&" expression, FOLLOW [234] -> GOTO 214
	expression/L8 = . expression "==" expression, FOLLOW [234] -> GOTO 214
	expression/L8 = . expression "!=" expression, FOLLOW [234] -> GOTO 214
	expression/L8 = . expression "<=" expression, FOLLOW [234] -> GOTO 214
	expression/L8 = . expression "<" expression, FOLLOW [234] -> GOTO 214
	expression/L8 = . expression ">=" expression, FOLLOW [234] -> GOTO 214
	expression/L8 = . expression ">" expression, FOLLOW [234] -> GOTO 214
	expression/L9 = . expression "+" expression, FOLLOW [234] -> GOTO 214
	expression/L9 = expression "+" . expression, FOLLOW [234] -> GOTO 214
	expression/L9 = . expression "-" expression, FOLLOW [234] -> GOTO 214
	expression/L10 = . expression "*" expression, FOLLOW [234] -> GOTO 214
	expression/L10 = . expression "/" expression, FOLLOW [234] -> GOTO 214
	expression/L10 = . expression "%" expression, FOLLOW [234] -> GOTO 214
	expression/L11 = . expression "<<" expression, FOLLOW [234] -> GOTO 214
	expression/L11 = . expression ">>" expression, FOLLOW [234] -> GOTO 214
	expression/L12 = . expression "." IDENT, FOLLOW [234] -> GOTO 214
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [234] -> GOTO 214
	expression/L13 = . expression "(" ")", FOLLOW [234] -> GOTO 214
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [234] -> GOTO 214
	iexpression = . expression indirection IDENT, FOLLOW [234] -> GOTO 214
	expression/L12 = . iexpression, FOLLOW [234] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [234] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [234] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [234] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [234] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [234] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [234] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [234] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [234] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [234] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [234] -> SHIFT '{' GOTO 94
	expression/L1 = . "{" "}", FOLLOW [234] -> SHIFT '{' GOTO 94
	expression/L9 = . "+" expression, FOLLOW [234] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [234] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [234] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [234] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [234] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [234] -> SHIFT "new" GOTO 90
	expression/L2 = . "null", FOLLOW [234] -> SHIFT "null" GOTO 91
[134]
	expression/L3 = . expression "=" expression, FOLLOW [234] -> GOTO 215
	expression/L3 = . expression "+=" expression, FOLLOW [234] -> GOTO 215
	expression/L3 = . expression "-=" expression, FOLLOW [234] -> GOTO 215
	expression/L3 = . expression "*=" expression, FOLLOW [234] -> GOTO 215
	expression/L3 = . expression "/=" expression, FOLLOW [234] -> GOTO 215
	expression/L3 = . expression "^=" expression, FOLLOW [234] -> GOTO 215
	expression/L3 = . expression "&=" expression, FOLLOW [234] -> GOTO 215
	expression/L3 = . expression "%=" expression, FOLLOW [234] -> GOTO 215
	expression/L3 = . expression "&&=" expression, FOLLOW [234] -> GOTO 215
	expression/L3 = . expression "||=" expression, FOLLOW [234] -> GOTO 215
	expression/L3 = . expression "&=" expression, FOLLOW [234] -> GOTO 215
	expression/L3 = . expression "|=" expression, FOLLOW [234] -> GOTO 215
	expression/L3 = . expression "<<=" expression, FOLLOW [234] -> GOTO 215
	expression/L3 = . expression ">>=" expression, FOLLOW [234] -> GOTO 215
	expression/L4 = . expression "||" expression, FOLLOW [234] -> GOTO 215
	expression/L5 = . expression "&&" expression, FOLLOW [234] -> GOTO 215
	expression/L6 = . expression "|" expression, FOLLOW [234] -> GOTO 215
	expression/L7 = . expression "^" expression, FOLLOW [234] -> GOTO 215
	expression/L7 = . expression "&" expression, FOLLOW [234] -> GOTO 215
	expression/L8 = . expression "==" expression, FOLLOW [234] -> GOTO 215
	expression/L8 = . expression "!=" expression, FOLLOW [234] -> GOTO 215
	expression/L8 = . expression "<=" expression, FOLLOW [234] -> GOTO 215
	expression/L8 = . expression "<" expression, FOLLOW [234] -> GOTO 215
	expression/L8 = . expression ">=" expression, FOLLOW [234] -> GOTO 215
	expression/L8 = . expression ">" expression, FOLLOW [234] -> GOTO 215
	expression/L9 = . expression "+" expression, FOLLOW [234] -> GOTO 215
	expression/L9 = . expression "-" expression, FOLLOW [234] -> GOTO 215
	expression/L9 = expression "-" . expression, FOLLOW [234] -> GOTO 215
	expression/L10 = . expression "*" expression, FOLLOW [234] -> GOTO 215
	expression/L10 = . expression "/" expression, FOLLOW [234] -> GOTO 215
	expression/L10 = . expression "%" expression, FOLLOW [234] -> GOTO 215
	expression/L11 = . expression "<<" expression, FOLLOW [234] -> GOTO 215
	expression/L11 = . expression ">>" expression, FOLLOW [234] -> GOTO 215
	expression/L12 = . expression "." IDENT, FOLLOW [234] -> GOTO 215
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [234] -> GOTO 215
	expression/L13 = . expression "(" ")", FOLLOW [234] -> GOTO 215
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [234] -> GOTO 215
	iexpression = . expression indirection IDENT, FOLLOW [234] -> GOTO 215
	expression/L12 = . iexpression, FOLLOW [234] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [234] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [234] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [234] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [234] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [234] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [234] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [234] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [234] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [234] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [234] -> SHIFT '{' GOTO 94
	expression/L1 = . "{" "}", FOLLOW [234] -> SHIFT '{' GOTO 94
	expression/L9 = . "+" expression, FOLLOW [234] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [234] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [234] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [234] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [234] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [234] -> SHIFT "new" GOTO 90
	expression/L2 = . "null", FOLLOW [234] -> SHIFT "null" GOTO 91
[135]
	expression/L3 = . expression "=" expression, FOLLOW [234] -> GOTO 216
	expression/L3 = . expression "+=" expression, FOLLOW [234] -> GOTO 216
	expression/L3 = . expression "-=" expression, FOLLOW [234] -> GOTO 216
	expression/L3 = . expression "*=" expression, FOLLOW [234] -> GOTO 216
	expression/L3 = . expression "/=" expression, FOLLOW [234] -> GOTO 216
	expression/L3 = . expression "^=" expression, FOLLOW [234] -> GOTO 216
	expression/L3 = . expression "&=" expression, FOLLOW [234] -> GOTO 216
	expression/L3 = . expression "%=" expression, FOLLOW [234] -> GOTO 216
	expression/L3 = . expression "&&=" expression, FOLLOW [234] -> GOTO 216
	expression/L3 = . expression "||=" expression, FOLLOW [234] -> GOTO 216
	expression/L3 = . expression "&=" expression, FOLLOW [234] -> GOTO 216
	expression/L3 = . expression "|=" expression, FOLLOW [234] -> GOTO 216
	expression/L3 = . expression "<<=" expression, FOLLOW [234] -> GOTO 216
	expression/L3 = . expression ">>=" expression, FOLLOW [234] -> GOTO 216
	expression/L4 = . expression "||" expression, FOLLOW [234] -> GOTO 216
	expression/L5 = . expression "&&" expression, FOLLOW [234] -> GOTO 216
	expression/L6 = . expression "|" expression, FOLLOW [234] -> GOTO 216
	expression/L7 = . expression "^" expression, FOLLOW [234] -> GOTO 216
	expression/L7 = . expression "&" expression, FOLLOW [234] -> GOTO 216
	expression/L8 = . expression "==" expression, FOLLOW [234] -> GOTO 216
	expression/L8 = . expression "!=" expression, FOLLOW [234] -> GOTO 216
	expression/L8 = . expression "<=" expression, FOLLOW [234] -> GOTO 216
	expression/L8 = . expression "<" expression, FOLLOW [234] -> GOTO 216
	expression/L8 = . expression ">=" expression, FOLLOW [234] -> GOTO 216
	expression/L8 = . expression ">" expression, FOLLOW [234] -> GOTO 216
	expression/L9 = . expression "+" expression, FOLLOW [234] -> GOTO 216
	expression/L9 = . expression "-" expression, FOLLOW [234] -> GOTO 216
	expression/L10 = . expression "*" expression, FOLLOW [234] -> GOTO 216
	expression/L10 = expression "*" . expression, FOLLOW [234] -> GOTO 216
	expression/L10 = . expression "/" expression, FOLLOW [234] -> GOTO 216
	expression/L10 = . expression "%" expression, FOLLOW [234] -> GOTO 216
	expression/L11 = . expression "<<" expression, FOLLOW [234] -> GOTO 216
	expression/L11 = . expression ">>" expression, FOLLOW [234] -> GOTO 216
	expression/L12 = . expression "." IDENT, FOLLOW [234] -> GOTO 216
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [234] -> GOTO 216
	expression/L13 = . expression "(" ")", FOLLOW [234] -> GOTO 216
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [234] -> GOTO 216
	iexpression = . expression indirection IDENT, FOLLOW [234] -> GOTO 216
	expression/L12 = . iexpression, FOLLOW [234] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [234] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [234] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [234] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [234] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [234] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [234] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [234] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [234] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [234] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [234] -> SHIFT '{' GOTO 94
	expression/L1 = . "{" "}", FOLLOW [234] -> SHIFT '{' GOTO 94
	expression/L9 = . "+" expression, FOLLOW [234] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [234] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [234] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [234] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [234] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [234] -> SHIFT "new" GOTO 90
	expression/L2 = . "null", FOLLOW [234] -> SHIFT "null" GOTO 91
[136]
	expression/L3 = . expression "=" expression, FOLLOW [234] -> GOTO 217
	expression/L3 = . expression "+=" expression, FOLLOW [234] -> GOTO 217
	expression/L3 = . expression "-=" expression, FOLLOW [234] -> GOTO 217
	expression/L3 = . expression "*=" expression, FOLLOW [234] -> GOTO 217
	expression/L3 = . expression "/=" expression, FOLLOW [234] -> GOTO 217
	expression/L3 = . expression "^=" expression, FOLLOW [234] -> GOTO 217
	expression/L3 = . expression "&=" expression, FOLLOW [234] -> GOTO 217
	expression/L3 = . expression "%=" expression, FOLLOW [234] -> GOTO 217
	expression/L3 = . expression "&&=" expression, FOLLOW [234] -> GOTO 217
	expression/L3 = . expression "||=" expression, FOLLOW [234] -> GOTO 217
	expression/L3 = . expression "&=" expression, FOLLOW [234] -> GOTO 217
	expression/L3 = . expression "|=" expression, FOLLOW [234] -> GOTO 217
	expression/L3 = . expression "<<=" expression, FOLLOW [234] -> GOTO 217
	expression/L3 = . expression ">>=" expression, FOLLOW [234] -> GOTO 217
	expression/L4 = . expression "||" expression, FOLLOW [234] -> GOTO 217
	expression/L5 = . expression "&&" expression, FOLLOW [234] -> GOTO 217
	expression/L6 = . expression "|" expression, FOLLOW [234] -> GOTO 217
	expression/L7 = . expression "^" expression, FOLLOW [234] -> GOTO 217
	expression/L7 = . expression "&" expression, FOLLOW [234] -> GOTO 217
	expression/L8 = . expression "==" expression, FOLLOW [234] -> GOTO 217
	expression/L8 = . expression "!=" expression, FOLLOW [234] -> GOTO 217
	expression/L8 = . expression "<=" expression, FOLLOW [234] -> GOTO 217
	expression/L8 = . expression "<" expression, FOLLOW [234] -> GOTO 217
	expression/L8 = . expression ">=" expression, FOLLOW [234] -> GOTO 217
	expression/L8 = . expression ">" expression, FOLLOW [234] -> GOTO 217
	expression/L9 = . expression "+" expression, FOLLOW [234] -> GOTO 217
	expression/L9 = . expression "-" expression, FOLLOW [234] -> GOTO 217
	expression/L10 = . expression "*" expression, FOLLOW [234] -> GOTO 217
	expression/L10 = . expression "/" expression, FOLLOW [234] -> GOTO 217
	expression/L10 = expression "/" . expression, FOLLOW [234] -> GOTO 217
	expression/L10 = . expression "%" expression, FOLLOW [234] -> GOTO 217
	expression/L11 = . expression "<<" expression, FOLLOW [234] -> GOTO 217
	expression/L11 = . expression ">>" expression, FOLLOW [234] -> GOTO 217
	expression/L12 = . expression "." IDENT, FOLLOW [234] -> GOTO 217
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [234] -> GOTO 217
	expression/L13 = . expression "(" ")", FOLLOW [234] -> GOTO 217
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [234] -> GOTO 217
	iexpression = . expression indirection IDENT, FOLLOW [234] -> GOTO 217
	expression/L12 = . iexpression, FOLLOW [234] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [234] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [234] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [234] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [234] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [234] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [234] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [234] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [234] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [234] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [234] -> SHIFT '{' GOTO 94
	expression/L1 = . "{" "}", FOLLOW [234] -> SHIFT '{' GOTO 94
	expression/L9 = . "+" expression, FOLLOW [234] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [234] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [234] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [234] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [234] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [234] -> SHIFT "new" GOTO 90
	expression/L2 = . "null", FOLLOW [234] -> SHIFT "null" GOTO 91
[137]
	expression/L3 = . expression "=" expression, FOLLOW [234] -> GOTO 218
	expression/L3 = . expression "+=" expression, FOLLOW [234] -> GOTO 218
	expression/L3 = . expression "-=" expression, FOLLOW [234] -> GOTO 218
	expression/L3 = . expression "*=" expression, FOLLOW [234] -> GOTO 218
	expression/L3 = . expression "/=" expression, FOLLOW [234] -> GOTO 218
	expression/L3 = . expression "^=" expression, FOLLOW [234] -> GOTO 218
	expression/L3 = . expression "&=" expression, FOLLOW [234] -> GOTO 218
	expression/L3 = . expression "%=" expression, FOLLOW [234] -> GOTO 218
	expression/L3 = . expression "&&=" expression, FOLLOW [234] -> GOTO 218
	expression/L3 = . expression "||=" expression, FOLLOW [234] -> GOTO 218
	expression/L3 = . expression "&=" expression, FOLLOW [234] -> GOTO 218
	expression/L3 = . expression "|=" expression, FOLLOW [234] -> GOTO 218
	expression/L3 = . expression "<<=" expression, FOLLOW [234] -> GOTO 218
	expression/L3 = . expression ">>=" expression, FOLLOW [234] -> GOTO 218
	expression/L4 = . expression "||" expression, FOLLOW [234] -> GOTO 218
	expression/L5 = . expression "&&" expression, FOLLOW [234] -> GOTO 218
	expression/L6 = . expression "|" expression, FOLLOW [234] -> GOTO 218
	expression/L7 = . expression "^" expression, FOLLOW [234] -> GOTO 218
	expression/L7 = . expression "&" expression, FOLLOW [234] -> GOTO 218
	expression/L8 = . expression "==" expression, FOLLOW [234] -> GOTO 218
	expression/L8 = . expression "!=" expression, FOLLOW [234] -> GOTO 218
	expression/L8 = . expression "<=" expression, FOLLOW [234] -> GOTO 218
	expression/L8 = . expression "<" expression, FOLLOW [234] -> GOTO 218
	expression/L8 = . expression ">=" expression, FOLLOW [234] -> GOTO 218
	expression/L8 = . expression ">" expression, FOLLOW [234] -> GOTO 218
	expression/L9 = . expression "+" expression, FOLLOW [234] -> GOTO 218
	expression/L9 = . expression "-" expression, FOLLOW [234] -> GOTO 218
	expression/L10 = . expression "*" expression, FOLLOW [234] -> GOTO 218
	expression/L10 = . expression "/" expression, FOLLOW [234] -> GOTO 218
	expression/L10 = . expression "%" expression, FOLLOW [234] -> GOTO 218
	expression/L10 = expression "%" . expression, FOLLOW [234] -> GOTO 218
	expression/L11 = . expression "<<" expression, FOLLOW [234] -> GOTO 218
	expression/L11 = . expression ">>" expression, FOLLOW [234] -> GOTO 218
	expression/L12 = . expression "." IDENT, FOLLOW [234] -> GOTO 218
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [234] -> GOTO 218
	expression/L13 = . expression "(" ")", FOLLOW [234] -> GOTO 218
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [234] -> GOTO 218
	iexpression = . expression indirection IDENT, FOLLOW [234] -> GOTO 218
	expression/L12 = . iexpression, FOLLOW [234] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [234] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [234] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [234] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [234] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [234] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [234] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [234] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [234] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [234] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [234] -> SHIFT '{' GOTO 94
	expression/L1 = . "{" "}", FOLLOW [234] -> SHIFT '{' GOTO 94
	expression/L9 = . "+" expression, FOLLOW [234] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [234] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [234] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [234] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [234] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [234] -> SHIFT "new" GOTO 90
	expression/L2 = . "null", FOLLOW [234] -> SHIFT "null" GOTO 91
[138]
	expression/L3 = . expression "=" expression, FOLLOW [234] -> GOTO 219
	expression/L3 = . expression "+=" expression, FOLLOW [234] -> GOTO 219
	expression/L3 = . expression "-=" expression, FOLLOW [234] -> GOTO 219
	expression/L3 = . expression "*=" expression, FOLLOW [234] -> GOTO 219
	expression/L3 = . expression "/=" expression, FOLLOW [234] -> GOTO 219
	expression/L3 = . expression "^=" expression, FOLLOW [234] -> GOTO 219
	expression/L3 = . expression "&=" expression, FOLLOW [234] -> GOTO 219
	expression/L3 = . expression "%=" expression, FOLLOW [234] -> GOTO 219
	expression/L3 = . expression "&&=" expression, FOLLOW [234] -> GOTO 219
	expression/L3 = . expression "||=" expression, FOLLOW [234] -> GOTO 219
	expression/L3 = . expression "&=" expression, FOLLOW [234] -> GOTO 219
	expression/L3 = . expression "|=" expression, FOLLOW [234] -> GOTO 219
	expression/L3 = . expression "<<=" expression, FOLLOW [234] -> GOTO 219
	expression/L3 = . expression ">>=" expression, FOLLOW [234] -> GOTO 219
	expression/L4 = . expression "||" expression, FOLLOW [234] -> GOTO 219
	expression/L5 = . expression "&&" expression, FOLLOW [234] -> GOTO 219
	expression/L5 = expression "&&" . expression, FOLLOW [234] -> GOTO 219
	expression/L6 = . expression "|" expression, FOLLOW [234] -> GOTO 219
	expression/L7 = . expression "^" expression, FOLLOW [234] -> GOTO 219
	expression/L7 = . expression "&" expression, FOLLOW [234] -> GOTO 219
	expression/L8 = . expression "==" expression, FOLLOW [234] -> GOTO 219
	expression/L8 = . expression "!=" expression, FOLLOW [234] -> GOTO 219
	expression/L8 = . expression "<=" expression, FOLLOW [234] -> GOTO 219
	expression/L8 = . expression "<" expression, FOLLOW [234] -> GOTO 219
	expression/L8 = . expression ">=" expression, FOLLOW [234] -> GOTO 219
	expression/L8 = . expression ">" expression, FOLLOW [234] -> GOTO 219
	expression/L9 = . expression "+" expression, FOLLOW [234] -> GOTO 219
	expression/L9 = . expression "-" expression, FOLLOW [234] -> GOTO 219
	expression/L10 = . expression "*" expression, FOLLOW [234] -> GOTO 219
	expression/L10 = . expression "/" expression, FOLLOW [234] -> GOTO 219
	expression/L10 = . expression "%" expression, FOLLOW [234] -> GOTO 219
	expression/L11 = . expression "<<" expression, FOLLOW [234] -> GOTO 219
	expression/L11 = . expression ">>" expression, FOLLOW [234] -> GOTO 219
	expression/L12 = . expression "." IDENT, FOLLOW [234] -> GOTO 219
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [234] -> GOTO 219
	expression/L13 = . expression "(" ")", FOLLOW [234] -> GOTO 219
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [234] -> GOTO 219
	iexpression = . expression indirection IDENT, FOLLOW [234] -> GOTO 219
	expression/L12 = . iexpression, FOLLOW [234] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [234] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [234] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [234] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [234] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [234] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [234] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [234] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [234] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [234] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [234] -> SHIFT '{' GOTO 94
	expression/L1 = . "{" "}", FOLLOW [234] -> SHIFT '{' GOTO 94
	expression/L9 = . "+" expression, FOLLOW [234] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [234] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [234] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [234] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [234] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [234] -> SHIFT "new" GOTO 90
	expression/L2 = . "null", FOLLOW [234] -> SHIFT "null" GOTO 91
[139]
	expression/L3 = . expression "=" expression, FOLLOW [234] -> GOTO 220
	expression/L3 = . expression "+=" expression, FOLLOW [234] -> GOTO 220
	expression/L3 = . expression "-=" expression, FOLLOW [234] -> GOTO 220
	expression/L3 = . expression "*=" expression, FOLLOW [234] -> GOTO 220
	expression/L3 = . expression "/=" expression, FOLLOW [234] -> GOTO 220
	expression/L3 = . expression "^=" expression, FOLLOW [234] -> GOTO 220
	expression/L3 = . expression "&=" expression, FOLLOW [234] -> GOTO 220
	expression/L3 = . expression "%=" expression, FOLLOW [234] -> GOTO 220
	expression/L3 = . expression "&&=" expression, FOLLOW [234] -> GOTO 220
	expression/L3 = . expression "||=" expression, FOLLOW [234] -> GOTO 220
	expression/L3 = . expression "&=" expression, FOLLOW [234] -> GOTO 220
	expression/L3 = . expression "|=" expression, FOLLOW [234] -> GOTO 220
	expression/L3 = . expression "<<=" expression, FOLLOW [234] -> GOTO 220
	expression/L3 = . expression ">>=" expression, FOLLOW [234] -> GOTO 220
	expression/L4 = . expression "||" expression, FOLLOW [234] -> GOTO 220
	expression/L4 = expression "||" . expression, FOLLOW [234] -> GOTO 220
	expression/L5 = . expression "&&" expression, FOLLOW [234] -> GOTO 220
	expression/L6 = . expression "|" expression, FOLLOW [234] -> GOTO 220
	expression/L7 = . expression "^" expression, FOLLOW [234] -> GOTO 220
	expression/L7 = . expression "&" expression, FOLLOW [234] -> GOTO 220
	expression/L8 = . expression "==" expression, FOLLOW [234] -> GOTO 220
	expression/L8 = . expression "!=" expression, FOLLOW [234] -> GOTO 220
	expression/L8 = . expression "<=" expression, FOLLOW [234] -> GOTO 220
	expression/L8 = . expression "<" expression, FOLLOW [234] -> GOTO 220
	expression/L8 = . expression ">=" expression, FOLLOW [234] -> GOTO 220
	expression/L8 = . expression ">" expression, FOLLOW [234] -> GOTO 220
	expression/L9 = . expression "+" expression, FOLLOW [234] -> GOTO 220
	expression/L9 = . expression "-" expression, FOLLOW [234] -> GOTO 220
	expression/L10 = . expression "*" expression, FOLLOW [234] -> GOTO 220
	expression/L10 = . expression "/" expression, FOLLOW [234] -> GOTO 220
	expression/L10 = . expression "%" expression, FOLLOW [234] -> GOTO 220
	expression/L11 = . expression "<<" expression, FOLLOW [234] -> GOTO 220
	expression/L11 = . expression ">>" expression, FOLLOW [234] -> GOTO 220
	expression/L12 = . expression "." IDENT, FOLLOW [234] -> GOTO 220
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [234] -> GOTO 220
	expression/L13 = . expression "(" ")", FOLLOW [234] -> GOTO 220
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [234] -> GOTO 220
	iexpression = . expression indirection IDENT, FOLLOW [234] -> GOTO 220
	expression/L12 = . iexpression, FOLLOW [234] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [234] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [234] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [234] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [234] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [234] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [234] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [234] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [234] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [234] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [234] -> SHIFT '{' GOTO 94
	expression/L1 = . "{" "}", FOLLOW [234] -> SHIFT '{' GOTO 94
	expression/L9 = . "+" expression, FOLLOW [234] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [234] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [234] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [234] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [234] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [234] -> SHIFT "new" GOTO 90
	expression/L2 = . "null", FOLLOW [234] -> SHIFT "null" GOTO 91
[140]
	expression/L3 = . expression "=" expression, FOLLOW [234] -> GOTO 221
	expression/L3 = . expression "+=" expression, FOLLOW [234] -> GOTO 221
	expression/L3 = . expression "-=" expression, FOLLOW [234] -> GOTO 221
	expression/L3 = . expression "*=" expression, FOLLOW [234] -> GOTO 221
	expression/L3 = . expression "/=" expression, FOLLOW [234] -> GOTO 221
	expression/L3 = . expression "^=" expression, FOLLOW [234] -> GOTO 221
	expression/L3 = . expression "&=" expression, FOLLOW [234] -> GOTO 221
	expression/L3 = . expression "%=" expression, FOLLOW [234] -> GOTO 221
	expression/L3 = . expression "&&=" expression, FOLLOW [234] -> GOTO 221
	expression/L3 = . expression "||=" expression, FOLLOW [234] -> GOTO 221
	expression/L3 = . expression "&=" expression, FOLLOW [234] -> GOTO 221
	expression/L3 = . expression "|=" expression, FOLLOW [234] -> GOTO 221
	expression/L3 = . expression "<<=" expression, FOLLOW [234] -> GOTO 221
	expression/L3 = . expression ">>=" expression, FOLLOW [234] -> GOTO 221
	expression/L4 = . expression "||" expression, FOLLOW [234] -> GOTO 221
	expression/L5 = . expression "&&" expression, FOLLOW [234] -> GOTO 221
	expression/L6 = . expression "|" expression, FOLLOW [234] -> GOTO 221
	expression/L6 = expression "|" . expression, FOLLOW [234] -> GOTO 221
	expression/L7 = . expression "^" expression, FOLLOW [234] -> GOTO 221
	expression/L7 = . expression "&" expression, FOLLOW [234] -> GOTO 221
	expression/L8 = . expression "==" expression, FOLLOW [234] -> GOTO 221
	expression/L8 = . expression "!=" expression, FOLLOW [234] -> GOTO 221
	expression/L8 = . expression "<=" expression, FOLLOW [234] -> GOTO 221
	expression/L8 = . expression "<" expression, FOLLOW [234] -> GOTO 221
	expression/L8 = . expression ">=" expression, FOLLOW [234] -> GOTO 221
	expression/L8 = . expression ">" expression, FOLLOW [234] -> GOTO 221
	expression/L9 = . expression "+" expression, FOLLOW [234] -> GOTO 221
	expression/L9 = . expression "-" expression, FOLLOW [234] -> GOTO 221
	expression/L10 = . expression "*" expression, FOLLOW [234] -> GOTO 221
	expression/L10 = . expression "/" expression, FOLLOW [234] -> GOTO 221
	expression/L10 = . expression "%" expression, FOLLOW [234] -> GOTO 221
	expression/L11 = . expression "<<" expression, FOLLOW [234] -> GOTO 221
	expression/L11 = . expression ">>" expression, FOLLOW [234] -> GOTO 221
	expression/L12 = . expression "." IDENT, FOLLOW [234] -> GOTO 221
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [234] -> GOTO 221
	expression/L13 = . expression "(" ")", FOLLOW [234] -> GOTO 221
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [234] -> GOTO 221
	iexpression = . expression indirection IDENT, FOLLOW [234] -> GOTO 221
	expression/L12 = . iexpression, FOLLOW [234] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [234] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [234] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [234] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [234] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [234] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [234] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [234] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [234] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [234] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [234] -> SHIFT '{' GOTO 94
	expression/L1 = . "{" "}", FOLLOW [234] -> SHIFT '{' GOTO 94
	expression/L9 = . "+" expression, FOLLOW [234] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [234] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [234] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [234] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [234] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [234] -> SHIFT "new" GOTO 90
	expression/L2 = . "null", FOLLOW [234] -> SHIFT "null" GOTO 91
[141]
	expression/L3 = . expression "=" expression, FOLLOW [234] -> GOTO 222
	expression/L3 = . expression "+=" expression, FOLLOW [234] -> GOTO 222
	expression/L3 = . expression "-=" expression, FOLLOW [234] -> GOTO 222
	expression/L3 = . expression "*=" expression, FOLLOW [234] -> GOTO 222
	expression/L3 = . expression "/=" expression, FOLLOW [234] -> GOTO 222
	expression/L3 = . expression "^=" expression, FOLLOW [234] -> GOTO 222
	expression/L3 = . expression "&=" expression, FOLLOW [234] -> GOTO 222
	expression/L3 = . expression "%=" expression, FOLLOW [234] -> GOTO 222
	expression/L3 = . expression "&&=" expression, FOLLOW [234] -> GOTO 222
	expression/L3 = . expression "||=" expression, FOLLOW [234] -> GOTO 222
	expression/L3 = . expression "&=" expression, FOLLOW [234] -> GOTO 222
	expression/L3 = . expression "|=" expression, FOLLOW [234] -> GOTO 222
	expression/L3 = . expression "<<=" expression, FOLLOW [234] -> GOTO 222
	expression/L3 = . expression ">>=" expression, FOLLOW [234] -> GOTO 222
	expression/L4 = . expression "||" expression, FOLLOW [234] -> GOTO 222
	expression/L5 = . expression "&&" expression, FOLLOW [234] -> GOTO 222
	expression/L6 = . expression "|" expression, FOLLOW [234] -> GOTO 222
	expression/L7 = . expression "^" expression, FOLLOW [234] -> GOTO 222
	expression/L7 = . expression "&" expression, FOLLOW [234] -> GOTO 222
	expression/L8 = . expression "==" expression, FOLLOW [234] -> GOTO 222
	expression/L8 = . expression "!=" expression, FOLLOW [234] -> GOTO 222
	expression/L8 = . expression "<=" expression, FOLLOW [234] -> GOTO 222
	expression/L8 = . expression "<" expression, FOLLOW [234] -> GOTO 222
	expression/L8 = . expression ">=" expression, FOLLOW [234] -> GOTO 222
	expression/L8 = . expression ">" expression, FOLLOW [234] -> GOTO 222
	expression/L9 = . expression "+" expression, FOLLOW [234] -> GOTO 222
	expression/L9 = . expression "-" expression, FOLLOW [234] -> GOTO 222
	expression/L10 = . expression "*" expression, FOLLOW [234] -> GOTO 222
	expression/L10 = . expression "/" expression, FOLLOW [234] -> GOTO 222
	expression/L10 = . expression "%" expression, FOLLOW [234] -> GOTO 222
	expression/L11 = . expression "<<" expression, FOLLOW [234] -> GOTO 222
	expression/L11 = expression "<<" . expression, FOLLOW [234] -> GOTO 222
	expression/L11 = . expression ">>" expression, FOLLOW [234] -> GOTO 222
	expression/L12 = . expression "." IDENT, FOLLOW [234] -> GOTO 222
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [234] -> GOTO 222
	expression/L13 = . expression "(" ")", FOLLOW [234] -> GOTO 222
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [234] -> GOTO 222
	iexpression = . expression indirection IDENT, FOLLOW [234] -> GOTO 222
	expression/L12 = . iexpression, FOLLOW [234] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [234] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [234] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [234] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [234] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [234] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [234] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [234] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [234] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [234] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [234] -> SHIFT '{' GOTO 94
	expression/L1 = . "{" "}", FOLLOW [234] -> SHIFT '{' GOTO 94
	expression/L9 = . "+" expression, FOLLOW [234] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [234] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [234] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [234] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [234] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [234] -> SHIFT "new" GOTO 90
	expression/L2 = . "null", FOLLOW [234] -> SHIFT "null" GOTO 91
[142]
	expression/L3 = . expression "=" expression, FOLLOW [234] -> GOTO 223
	expression/L3 = . expression "+=" expression, FOLLOW [234] -> GOTO 223
	expression/L3 = . expression "-=" expression, FOLLOW [234] -> GOTO 223
	expression/L3 = . expression "*=" expression, FOLLOW [234] -> GOTO 223
	expression/L3 = . expression "/=" expression, FOLLOW [234] -> GOTO 223
	expression/L3 = . expression "^=" expression, FOLLOW [234] -> GOTO 223
	expression/L3 = . expression "&=" expression, FOLLOW [234] -> GOTO 223
	expression/L3 = . expression "%=" expression, FOLLOW [234] -> GOTO 223
	expression/L3 = . expression "&&=" expression, FOLLOW [234] -> GOTO 223
	expression/L3 = . expression "||=" expression, FOLLOW [234] -> GOTO 223
	expression/L3 = . expression "&=" expression, FOLLOW [234] -> GOTO 223
	expression/L3 = . expression "|=" expression, FOLLOW [234] -> GOTO 223
	expression/L3 = . expression "<<=" expression, FOLLOW [234] -> GOTO 223
	expression/L3 = . expression ">>=" expression, FOLLOW [234] -> GOTO 223
	expression/L4 = . expression "||" expression, FOLLOW [234] -> GOTO 223
	expression/L5 = . expression "&&" expression, FOLLOW [234] -> GOTO 223
	expression/L6 = . expression "|" expression, FOLLOW [234] -> GOTO 223
	expression/L7 = . expression "^" expression, FOLLOW [234] -> GOTO 223
	expression/L7 = . expression "&" expression, FOLLOW [234] -> GOTO 223
	expression/L8 = . expression "==" expression, FOLLOW [234] -> GOTO 223
	expression/L8 = . expression "!=" expression, FOLLOW [234] -> GOTO 223
	expression/L8 = . expression "<=" expression, FOLLOW [234] -> GOTO 223
	expression/L8 = . expression "<" expression, FOLLOW [234] -> GOTO 223
	expression/L8 = . expression ">=" expression, FOLLOW [234] -> GOTO 223
	expression/L8 = . expression ">" expression, FOLLOW [234] -> GOTO 223
	expression/L9 = . expression "+" expression, FOLLOW [234] -> GOTO 223
	expression/L9 = . expression "-" expression, FOLLOW [234] -> GOTO 223
	expression/L10 = . expression "*" expression, FOLLOW [234] -> GOTO 223
	expression/L10 = . expression "/" expression, FOLLOW [234] -> GOTO 223
	expression/L10 = . expression "%" expression, FOLLOW [234] -> GOTO 223
	expression/L11 = . expression "<<" expression, FOLLOW [234] -> GOTO 223
	expression/L11 = . expression ">>" expression, FOLLOW [234] -> GOTO 223
	expression/L11 = expression ">>" . expression, FOLLOW [234] -> GOTO 223
	expression/L12 = . expression "." IDENT, FOLLOW [234] -> GOTO 223
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [234] -> GOTO 223
	expression/L13 = . expression "(" ")", FOLLOW [234] -> GOTO 223
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [234] -> GOTO 223
	iexpression = . expression indirection IDENT, FOLLOW [234] -> GOTO 223
	expression/L12 = . iexpression, FOLLOW [234] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [234] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [234] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [234] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [234] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [234] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [234] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [234] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [234] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [234] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [234] -> SHIFT '{' GOTO 94
	expression/L1 = . "{" "}", FOLLOW [234] -> SHIFT '{' GOTO 94
	expression/L9 = . "+" expression, FOLLOW [234] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [234] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [234] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [234] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [234] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [234] -> SHIFT "new" GOTO 90
	expression/L2 = . "null", FOLLOW [234] -> SHIFT "null" GOTO 91
[143]
	expression/L3 = . expression "=" expression, FOLLOW [234] -> GOTO 180
	expression/L3 = . expression "+=" expression, FOLLOW [234] -> GOTO 180
	expression/L3 = . expression "-=" expression, FOLLOW [234] -> GOTO 180
	expression/L3 = . expression "*=" expression, FOLLOW [234] -> GOTO 180
	expression/L3 = . expression "/=" expression, FOLLOW [234] -> GOTO 180
	expression/L3 = . expression "^=" expression, FOLLOW [234] -> GOTO 180
	expression/L3 = . expression "&=" expression, FOLLOW [234] -> GOTO 180
	expression/L3 = . expression "%=" expression, FOLLOW [234] -> GOTO 180
	expression/L3 = . expression "&&=" expression, FOLLOW [234] -> GOTO 180
	expression/L3 = . expression "||=" expression, FOLLOW [234] -> GOTO 180
	expression/L3 = . expression "&=" expression, FOLLOW [234] -> GOTO 180
	expression/L3 = . expression "|=" expression, FOLLOW [234] -> GOTO 180
	expression/L3 = . expression "<<=" expression, FOLLOW [234] -> GOTO 180
	expression/L3 = . expression ">>=" expression, FOLLOW [234] -> GOTO 180
	expression/L4 = . expression "||" expression, FOLLOW [234] -> GOTO 180
	expression/L5 = . expression "&&" expression, FOLLOW [234] -> GOTO 180
	expression/L6 = . expression "|" expression, FOLLOW [234] -> GOTO 180
	expression/L7 = . expression "^" expression, FOLLOW [234] -> GOTO 180
	expression/L7 = . expression "&" expression, FOLLOW [234] -> GOTO 180
	expression/L8 = . expression "==" expression, FOLLOW [234] -> GOTO 180
	expression/L8 = . expression "!=" expression, FOLLOW [234] -> GOTO 180
	expression/L8 = . expression "<=" expression, FOLLOW [234] -> GOTO 180
	expression/L8 = . expression "<" expression, FOLLOW [234] -> GOTO 180
	expression/L8 = . expression ">=" expression, FOLLOW [234] -> GOTO 180
	expression/L8 = . expression ">" expression, FOLLOW [234] -> GOTO 180
	expression/L9 = . expression "+" expression, FOLLOW [234] -> GOTO 180
	expression/L9 = . expression "-" expression, FOLLOW [234] -> GOTO 180
	expression/L10 = . expression "*" expression, FOLLOW [234] -> GOTO 180
	expression/L10 = . expression "/" expression, FOLLOW [234] -> GOTO 180
	expression/L10 = . expression "%" expression, FOLLOW [234] -> GOTO 180
	expression/L11 = . expression "<<" expression, FOLLOW [234] -> GOTO 180
	expression/L11 = . expression ">>" expression, FOLLOW [234] -> GOTO 180
	expression/L12 = . expression "." IDENT, FOLLOW [234] -> GOTO 180
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [234] -> GOTO 180
	expression/L13 = . expression "(" ")", FOLLOW [234] -> GOTO 180
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [234] -> GOTO 180
	iexpression = . expression indirection IDENT, FOLLOW [234] -> GOTO 180
	expressionlist = . expression "," expressionlist, FOLLOW [24] -> GOTO 180
	expressionlist = . expression, FOLLOW [24] -> GOTO 180
	expression/L12 = . iexpression, FOLLOW [234] -> GOTO 69
	expression/L13 = expression "[" . expressionlist "]", FOLLOW [234] -> GOTO 224
	expression/L2 = . BOOLEAN, FOLLOW [234] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [234] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [234] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [234] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [234] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [234] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [234] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [234] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [234] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [234] -> SHIFT '{' GOTO 94
	expression/L1 = . "{" "}", FOLLOW [234] -> SHIFT '{' GOTO 94
	expression/L9 = . "+" expression, FOLLOW [234] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [234] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [234] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [234] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [234] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [234] -> SHIFT "new" GOTO 90
	expression/L2 = . "null", FOLLOW [234] -> SHIFT "null" GOTO 91
[144]
	expression/L3 = . expression "=" expression, FOLLOW [234] -> GOTO 225
	expression/L3 = . expression "+=" expression, FOLLOW [234] -> GOTO 225
	expression/L3 = . expression "-=" expression, FOLLOW [234] -> GOTO 225
	expression/L3 = . expression "*=" expression, FOLLOW [234] -> GOTO 225
	expression/L3 = . expression "/=" expression, FOLLOW [234] -> GOTO 225
	expression/L3 = . expression "^=" expression, FOLLOW [234] -> GOTO 225
	expression/L3 = . expression "&=" expression, FOLLOW [234] -> GOTO 225
	expression/L3 = . expression "%=" expression, FOLLOW [234] -> GOTO 225
	expression/L3 = . expression "&&=" expression, FOLLOW [234] -> GOTO 225
	expression/L3 = . expression "||=" expression, FOLLOW [234] -> GOTO 225
	expression/L3 = . expression "&=" expression, FOLLOW [234] -> GOTO 225
	expression/L3 = . expression "|=" expression, FOLLOW [234] -> GOTO 225
	expression/L3 = . expression "<<=" expression, FOLLOW [234] -> GOTO 225
	expression/L3 = . expression ">>=" expression, FOLLOW [234] -> GOTO 225
	expression/L4 = . expression "||" expression, FOLLOW [234] -> GOTO 225
	expression/L5 = . expression "&&" expression, FOLLOW [234] -> GOTO 225
	expression/L6 = . expression "|" expression, FOLLOW [234] -> GOTO 225
	expression/L7 = . expression "^" expression, FOLLOW [234] -> GOTO 225
	expression/L7 = . expression "&" expression, FOLLOW [234] -> GOTO 225
	expression/L8 = . expression "==" expression, FOLLOW [234] -> GOTO 225
	expression/L8 = expression "==" . expression, FOLLOW [234] -> GOTO 225
	expression/L8 = . expression "!=" expression, FOLLOW [234] -> GOTO 225
	expression/L8 = . expression "<=" expression, FOLLOW [234] -> GOTO 225
	expression/L8 = . expression "<" expression, FOLLOW [234] -> GOTO 225
	expression/L8 = . expression ">=" expression, FOLLOW [234] -> GOTO 225
	expression/L8 = . expression ">" expression, FOLLOW [234] -> GOTO 225
	expression/L9 = . expression "+" expression, FOLLOW [234] -> GOTO 225
	expression/L9 = . expression "-" expression, FOLLOW [234] -> GOTO 225
	expression/L10 = . expression "*" expression, FOLLOW [234] -> GOTO 225
	expression/L10 = . expression "/" expression, FOLLOW [234] -> GOTO 225
	expression/L10 = . expression "%" expression, FOLLOW [234] -> GOTO 225
	expression/L11 = . expression "<<" expression, FOLLOW [234] -> GOTO 225
	expression/L11 = . expression ">>" expression, FOLLOW [234] -> GOTO 225
	expression/L12 = . expression "." IDENT, FOLLOW [234] -> GOTO 225
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [234] -> GOTO 225
	expression/L13 = . expression "(" ")", FOLLOW [234] -> GOTO 225
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [234] -> GOTO 225
	iexpression = . expression indirection IDENT, FOLLOW [234] -> GOTO 225
	expression/L12 = . iexpression, FOLLOW [234] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [234] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [234] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [234] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [234] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [234] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [234] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [234] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [234] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [234] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [234] -> SHIFT '{' GOTO 94
	expression/L1 = . "{" "}", FOLLOW [234] -> SHIFT '{' GOTO 94
	expression/L9 = . "+" expression, FOLLOW [234] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [234] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [234] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [234] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [234] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [234] -> SHIFT "new" GOTO 90
	expression/L2 = . "null", FOLLOW [234] -> SHIFT "null" GOTO 91
[145]
	expression/L3 = . expression "=" expression, FOLLOW [234] -> GOTO 226
	expression/L3 = . expression "+=" expression, FOLLOW [234] -> GOTO 226
	expression/L3 = . expression "-=" expression, FOLLOW [234] -> GOTO 226
	expression/L3 = . expression "*=" expression, FOLLOW [234] -> GOTO 226
	expression/L3 = . expression "/=" expression, FOLLOW [234] -> GOTO 226
	expression/L3 = . expression "^=" expression, FOLLOW [234] -> GOTO 226
	expression/L3 = . expression "&=" expression, FOLLOW [234] -> GOTO 226
	expression/L3 = . expression "%=" expression, FOLLOW [234] -> GOTO 226
	expression/L3 = . expression "&&=" expression, FOLLOW [234] -> GOTO 226
	expression/L3 = . expression "||=" expression, FOLLOW [234] -> GOTO 226
	expression/L3 = . expression "&=" expression, FOLLOW [234] -> GOTO 226
	expression/L3 = . expression "|=" expression, FOLLOW [234] -> GOTO 226
	expression/L3 = . expression "<<=" expression, FOLLOW [234] -> GOTO 226
	expression/L3 = . expression ">>=" expression, FOLLOW [234] -> GOTO 226
	expression/L4 = . expression "||" expression, FOLLOW [234] -> GOTO 226
	expression/L5 = . expression "&&" expression, FOLLOW [234] -> GOTO 226
	expression/L6 = . expression "|" expression, FOLLOW [234] -> GOTO 226
	expression/L7 = . expression "^" expression, FOLLOW [234] -> GOTO 226
	expression/L7 = . expression "&" expression, FOLLOW [234] -> GOTO 226
	expression/L8 = . expression "==" expression, FOLLOW [234] -> GOTO 226
	expression/L8 = . expression "!=" expression, FOLLOW [234] -> GOTO 226
	expression/L8 = expression "!=" . expression, FOLLOW [234] -> GOTO 226
	expression/L8 = . expression "<=" expression, FOLLOW [234] -> GOTO 226
	expression/L8 = . expression "<" expression, FOLLOW [234] -> GOTO 226
	expression/L8 = . expression ">=" expression, FOLLOW [234] -> GOTO 226
	expression/L8 = . expression ">" expression, FOLLOW [234] -> GOTO 226
	expression/L9 = . expression "+" expression, FOLLOW [234] -> GOTO 226
	expression/L9 = . expression "-" expression, FOLLOW [234] -> GOTO 226
	expression/L10 = . expression "*" expression, FOLLOW [234] -> GOTO 226
	expression/L10 = . expression "/" expression, FOLLOW [234] -> GOTO 226
	expression/L10 = . expression "%" expression, FOLLOW [234] -> GOTO 226
	expression/L11 = . expression "<<" expression, FOLLOW [234] -> GOTO 226
	expression/L11 = . expression ">>" expression, FOLLOW [234] -> GOTO 226
	expression/L12 = . expression "." IDENT, FOLLOW [234] -> GOTO 226
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [234] -> GOTO 226
	expression/L13 = . expression "(" ")", FOLLOW [234] -> GOTO 226
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [234] -> GOTO 226
	iexpression = . expression indirection IDENT, FOLLOW [234] -> GOTO 226
	expression/L12 = . iexpression, FOLLOW [234] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [234] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [234] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [234] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [234] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [234] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [234] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [234] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [234] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [234] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [234] -> SHIFT '{' GOTO 94
	expression/L1 = . "{" "}", FOLLOW [234] -> SHIFT '{' GOTO 94
	expression/L9 = . "+" expression, FOLLOW [234] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [234] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [234] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [234] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [234] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [234] -> SHIFT "new" GOTO 90
	expression/L2 = . "null", FOLLOW [234] -> SHIFT "null" GOTO 91
[146]
	expression/L3 = . expression "=" expression, FOLLOW [234] -> GOTO 227
	expression/L3 = . expression "+=" expression, FOLLOW [234] -> GOTO 227
	expression/L3 = . expression "-=" expression, FOLLOW [234] -> GOTO 227
	expression/L3 = . expression "*=" expression, FOLLOW [234] -> GOTO 227
	expression/L3 = . expression "/=" expression, FOLLOW [234] -> GOTO 227
	expression/L3 = . expression "^=" expression, FOLLOW [234] -> GOTO 227
	expression/L3 = . expression "&=" expression, FOLLOW [234] -> GOTO 227
	expression/L3 = . expression "%=" expression, FOLLOW [234] -> GOTO 227
	expression/L3 = . expression "&&=" expression, FOLLOW [234] -> GOTO 227
	expression/L3 = . expression "||=" expression, FOLLOW [234] -> GOTO 227
	expression/L3 = . expression "&=" expression, FOLLOW [234] -> GOTO 227
	expression/L3 = . expression "|=" expression, FOLLOW [234] -> GOTO 227
	expression/L3 = . expression "<<=" expression, FOLLOW [234] -> GOTO 227
	expression/L3 = . expression ">>=" expression, FOLLOW [234] -> GOTO 227
	expression/L4 = . expression "||" expression, FOLLOW [234] -> GOTO 227
	expression/L5 = . expression "&&" expression, FOLLOW [234] -> GOTO 227
	expression/L6 = . expression "|" expression, FOLLOW [234] -> GOTO 227
	expression/L7 = . expression "^" expression, FOLLOW [234] -> GOTO 227
	expression/L7 = . expression "&" expression, FOLLOW [234] -> GOTO 227
	expression/L8 = . expression "==" expression, FOLLOW [234] -> GOTO 227
	expression/L8 = . expression "!=" expression, FOLLOW [234] -> GOTO 227
	expression/L8 = . expression "<=" expression, FOLLOW [234] -> GOTO 227
	expression/L8 = . expression "<" expression, FOLLOW [234] -> GOTO 227
	expression/L8 = . expression ">=" expression, FOLLOW [234] -> GOTO 227
	expression/L8 = expression ">=" . expression, FOLLOW [234] -> GOTO 227
	expression/L8 = . expression ">" expression, FOLLOW [234] -> GOTO 227
	expression/L9 = . expression "+" expression, FOLLOW [234] -> GOTO 227
	expression/L9 = . expression "-" expression, FOLLOW [234] -> GOTO 227
	expression/L10 = . expression "*" expression, FOLLOW [234] -> GOTO 227
	expression/L10 = . expression "/" expression, FOLLOW [234] -> GOTO 227
	expression/L10 = . expression "%" expression, FOLLOW [234] -> GOTO 227
	expression/L11 = . expression "<<" expression, FOLLOW [234] -> GOTO 227
	expression/L11 = . expression ">>" expression, FOLLOW [234] -> GOTO 227
	expression/L12 = . expression "." IDENT, FOLLOW [234] -> GOTO 227
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [234] -> GOTO 227
	expression/L13 = . expression "(" ")", FOLLOW [234] -> GOTO 227
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [234] -> GOTO 227
	iexpression = . expression indirection IDENT, FOLLOW [234] -> GOTO 227
	expression/L12 = . iexpression, FOLLOW [234] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [234] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [234] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [234] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [234] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [234] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [234] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [234] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [234] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [234] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [234] -> SHIFT '{' GOTO 94
	expression/L1 = . "{" "}", FOLLOW [234] -> SHIFT '{' GOTO 94
	expression/L9 = . "+" expression, FOLLOW [234] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [234] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [234] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [234] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [234] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [234] -> SHIFT "new" GOTO 90
	expression/L2 = . "null", FOLLOW [234] -> SHIFT "null" GOTO 91
[147]
	expression/L3 = . expression "=" expression, FOLLOW [234] -> GOTO 228
	expression/L3 = . expression "+=" expression, FOLLOW [234] -> GOTO 228
	expression/L3 = . expression "-=" expression, FOLLOW [234] -> GOTO 228
	expression/L3 = . expression "*=" expression, FOLLOW [234] -> GOTO 228
	expression/L3 = . expression "/=" expression, FOLLOW [234] -> GOTO 228
	expression/L3 = . expression "^=" expression, FOLLOW [234] -> GOTO 228
	expression/L3 = . expression "&=" expression, FOLLOW [234] -> GOTO 228
	expression/L3 = . expression "%=" expression, FOLLOW [234] -> GOTO 228
	expression/L3 = . expression "&&=" expression, FOLLOW [234] -> GOTO 228
	expression/L3 = . expression "||=" expression, FOLLOW [234] -> GOTO 228
	expression/L3 = . expression "&=" expression, FOLLOW [234] -> GOTO 228
	expression/L3 = . expression "|=" expression, FOLLOW [234] -> GOTO 228
	expression/L3 = . expression "<<=" expression, FOLLOW [234] -> GOTO 228
	expression/L3 = . expression ">>=" expression, FOLLOW [234] -> GOTO 228
	expression/L4 = . expression "||" expression, FOLLOW [234] -> GOTO 228
	expression/L5 = . expression "&&" expression, FOLLOW [234] -> GOTO 228
	expression/L6 = . expression "|" expression, FOLLOW [234] -> GOTO 228
	expression/L7 = . expression "^" expression, FOLLOW [234] -> GOTO 228
	expression/L7 = . expression "&" expression, FOLLOW [234] -> GOTO 228
	expression/L8 = . expression "==" expression, FOLLOW [234] -> GOTO 228
	expression/L8 = . expression "!=" expression, FOLLOW [234] -> GOTO 228
	expression/L8 = . expression "<=" expression, FOLLOW [234] -> GOTO 228
	expression/L8 = expression "<=" . expression, FOLLOW [234] -> GOTO 228
	expression/L8 = . expression "<" expression, FOLLOW [234] -> GOTO 228
	expression/L8 = . expression ">=" expression, FOLLOW [234] -> GOTO 228
	expression/L8 = . expression ">" expression, FOLLOW [234] -> GOTO 228
	expression/L9 = . expression "+" expression, FOLLOW [234] -> GOTO 228
	expression/L9 = . expression "-" expression, FOLLOW [234] -> GOTO 228
	expression/L10 = . expression "*" expression, FOLLOW [234] -> GOTO 228
	expression/L10 = . expression "/" expression, FOLLOW [234] -> GOTO 228
	expression/L10 = . expression "%" expression, FOLLOW [234] -> GOTO 228
	expression/L11 = . expression "<<" expression, FOLLOW [234] -> GOTO 228
	expression/L11 = . expression ">>" expression, FOLLOW [234] -> GOTO 228
	expression/L12 = . expression "." IDENT, FOLLOW [234] -> GOTO 228
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [234] -> GOTO 228
	expression/L13 = . expression "(" ")", FOLLOW [234] -> GOTO 228
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [234] -> GOTO 228
	iexpression = . expression indirection IDENT, FOLLOW [234] -> GOTO 228
	expression/L12 = . iexpression, FOLLOW [234] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [234] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [234] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [234] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [234] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [234] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [234] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [234] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [234] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [234] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [234] -> SHIFT '{' GOTO 94
	expression/L1 = . "{" "}", FOLLOW [234] -> SHIFT '{' GOTO 94
	expression/L9 = . "+" expression, FOLLOW [234] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [234] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [234] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [234] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [234] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [234] -> SHIFT "new" GOTO 90
	expression/L2 = . "null", FOLLOW [234] -> SHIFT "null" GOTO 91
[148]
	expression/L3 = . expression "=" expression, FOLLOW [234] -> GOTO 229
	expression/L3 = . expression "+=" expression, FOLLOW [234] -> GOTO 229
	expression/L3 = . expression "-=" expression, FOLLOW [234] -> GOTO 229
	expression/L3 = . expression "*=" expression, FOLLOW [234] -> GOTO 229
	expression/L3 = . expression "/=" expression, FOLLOW [234] -> GOTO 229
	expression/L3 = . expression "^=" expression, FOLLOW [234] -> GOTO 229
	expression/L3 = . expression "&=" expression, FOLLOW [234] -> GOTO 229
	expression/L3 = . expression "%=" expression, FOLLOW [234] -> GOTO 229
	expression/L3 = . expression "&&=" expression, FOLLOW [234] -> GOTO 229
	expression/L3 = . expression "||=" expression, FOLLOW [234] -> GOTO 229
	expression/L3 = . expression "&=" expression, FOLLOW [234] -> GOTO 229
	expression/L3 = . expression "|=" expression, FOLLOW [234] -> GOTO 229
	expression/L3 = . expression "<<=" expression, FOLLOW [234] -> GOTO 229
	expression/L3 = . expression ">>=" expression, FOLLOW [234] -> GOTO 229
	expression/L4 = . expression "||" expression, FOLLOW [234] -> GOTO 229
	expression/L5 = . expression "&&" expression, FOLLOW [234] -> GOTO 229
	expression/L6 = . expression "|" expression, FOLLOW [234] -> GOTO 229
	expression/L7 = . expression "^" expression, FOLLOW [234] -> GOTO 229
	expression/L7 = . expression "&" expression, FOLLOW [234] -> GOTO 229
	expression/L8 = . expression "==" expression, FOLLOW [234] -> GOTO 229
	expression/L8 = . expression "!=" expression, FOLLOW [234] -> GOTO 229
	expression/L8 = . expression "<=" expression, FOLLOW [234] -> GOTO 229
	expression/L8 = . expression "<" expression, FOLLOW [234] -> GOTO 229
	expression/L8 = . expression ">=" expression, FOLLOW [234] -> GOTO 229
	expression/L8 = . expression ">" expression, FOLLOW [234] -> GOTO 229
	expression/L8 = expression ">" . expression, FOLLOW [234] -> GOTO 229
	expression/L9 = . expression "+" expression, FOLLOW [234] -> GOTO 229
	expression/L9 = . expression "-" expression, FOLLOW [234] -> GOTO 229
	expression/L10 = . expression "*" expression, FOLLOW [234] -> GOTO 229
	expression/L10 = . expression "/" expression, FOLLOW [234] -> GOTO 229
	expression/L10 = . expression "%" expression, FOLLOW [234] -> GOTO 229
	expression/L11 = . expression "<<" expression, FOLLOW [234] -> GOTO 229
	expression/L11 = . expression ">>" expression, FOLLOW [234] -> GOTO 229
	expression/L12 = . expression "." IDENT, FOLLOW [234] -> GOTO 229
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [234] -> GOTO 229
	expression/L13 = . expression "(" ")", FOLLOW [234] -> GOTO 229
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [234] -> GOTO 229
	iexpression = . expression indirection IDENT, FOLLOW [234] -> GOTO 229
	expression/L12 = . iexpression, FOLLOW [234] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [234] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [234] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [234] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [234] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [234] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [234] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [234] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [234] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [234] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [234] -> SHIFT '{' GOTO 94
	expression/L1 = . "{" "}", FOLLOW [234] -> SHIFT '{' GOTO 94
	expression/L9 = . "+" expression, FOLLOW [234] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [234] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [234] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [234] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [234] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [234] -> SHIFT "new" GOTO 90
	expression/L2 = . "null", FOLLOW [234] -> SHIFT "null" GOTO 91
[149]
	expression/L3 = . expression "=" expression, FOLLOW [234] -> GOTO 230
	expression/L3 = . expression "+=" expression, FOLLOW [234] -> GOTO 230
	expression/L3 = . expression "-=" expression, FOLLOW [234] -> GOTO 230
	expression/L3 = . expression "*=" expression, FOLLOW [234] -> GOTO 230
	expression/L3 = . expression "/=" expression, FOLLOW [234] -> GOTO 230
	expression/L3 = . expression "^=" expression, FOLLOW [234] -> GOTO 230
	expression/L3 = . expression "&=" expression, FOLLOW [234] -> GOTO 230
	expression/L3 = . expression "%=" expression, FOLLOW [234] -> GOTO 230
	expression/L3 = . expression "&&=" expression, FOLLOW [234] -> GOTO 230
	expression/L3 = . expression "||=" expression, FOLLOW [234] -> GOTO 230
	expression/L3 = . expression "&=" expression, FOLLOW [234] -> GOTO 230
	expression/L3 = . expression "|=" expression, FOLLOW [234] -> GOTO 230
	expression/L3 = . expression "<<=" expression, FOLLOW [234] -> GOTO 230
	expression/L3 = . expression ">>=" expression, FOLLOW [234] -> GOTO 230
	expression/L4 = . expression "||" expression, FOLLOW [234] -> GOTO 230
	expression/L5 = . expression "&&" expression, FOLLOW [234] -> GOTO 230
	expression/L6 = . expression "|" expression, FOLLOW [234] -> GOTO 230
	expression/L7 = . expression "^" expression, FOLLOW [234] -> GOTO 230
	expression/L7 = . expression "&" expression, FOLLOW [234] -> GOTO 230
	expression/L8 = . expression "==" expression, FOLLOW [234] -> GOTO 230
	expression/L8 = . expression "!=" expression, FOLLOW [234] -> GOTO 230
	expression/L8 = . expression "<=" expression, FOLLOW [234] -> GOTO 230
	expression/L8 = . expression "<" expression, FOLLOW [234] -> GOTO 230
	expression/L8 = expression "<" . expression, FOLLOW [234] -> GOTO 230
	expression/L8 = . expression ">=" expression, FOLLOW [234] -> GOTO 230
	expression/L8 = . expression ">" expression, FOLLOW [234] -> GOTO 230
	expression/L9 = . expression "+" expression, FOLLOW [234] -> GOTO 230
	expression/L9 = . expression "-" expression, FOLLOW [234] -> GOTO 230
	expression/L10 = . expression "*" expression, FOLLOW [234] -> GOTO 230
	expression/L10 = . expression "/" expression, FOLLOW [234] -> GOTO 230
	expression/L10 = . expression "%" expression, FOLLOW [234] -> GOTO 230
	expression/L11 = . expression "<<" expression, FOLLOW [234] -> GOTO 230
	expression/L11 = . expression ">>" expression, FOLLOW [234] -> GOTO 230
	expression/L12 = . expression "." IDENT, FOLLOW [234] -> GOTO 230
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [234] -> GOTO 230
	expression/L13 = . expression "(" ")", FOLLOW [234] -> GOTO 230
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [234] -> GOTO 230
	iexpression = . expression indirection IDENT, FOLLOW [234] -> GOTO 230
	expression/L12 = . iexpression, FOLLOW [234] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [234] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [234] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [234] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [234] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [234] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [234] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [234] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [234] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [234] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [234] -> SHIFT '{' GOTO 94
	expression/L1 = . "{" "}", FOLLOW [234] -> SHIFT '{' GOTO 94
	expression/L9 = . "+" expression, FOLLOW [234] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [234] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [234] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [234] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [234] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [234] -> SHIFT "new" GOTO 90
	expression/L2 = . "null", FOLLOW [234] -> SHIFT "null" GOTO 91
[150]
	expression/L3 = . expression "=" expression, FOLLOW [234] -> GOTO 231
	expression/L3 = . expression "+=" expression, FOLLOW [234] -> GOTO 231
	expression/L3 = expression "+=" . expression, FOLLOW [234] -> GOTO 231
	expression/L3 = . expression "-=" expression, FOLLOW [234] -> GOTO 231
	expression/L3 = . expression "*=" expression, FOLLOW [234] -> GOTO 231
	expression/L3 = . expression "/=" expression, FOLLOW [234] -> GOTO 231
	expression/L3 = . expression "^=" expression, FOLLOW [234] -> GOTO 231
	expression/L3 = . expression "&=" expression, FOLLOW [234] -> GOTO 231
	expression/L3 = . expression "%=" expression, FOLLOW [234] -> GOTO 231
	expression/L3 = . expression "&&=" expression, FOLLOW [234] -> GOTO 231
	expression/L3 = . expression "||=" expression, FOLLOW [234] -> GOTO 231
	expression/L3 = . expression "&=" expression, FOLLOW [234] -> GOTO 231
	expression/L3 = . expression "|=" expression, FOLLOW [234] -> GOTO 231
	expression/L3 = . expression "<<=" expression, FOLLOW [234] -> GOTO 231
	expression/L3 = . expression ">>=" expression, FOLLOW [234] -> GOTO 231
	expression/L4 = . expression "||" expression, FOLLOW [234] -> GOTO 231
	expression/L5 = . expression "&&" expression, FOLLOW [234] -> GOTO 231
	expression/L6 = . expression "|" expression, FOLLOW [234] -> GOTO 231
	expression/L7 = . expression "^" expression, FOLLOW [234] -> GOTO 231
	expression/L7 = . expression "&" expression, FOLLOW [234] -> GOTO 231
	expression/L8 = . expression "==" expression, FOLLOW [234] -> GOTO 231
	expression/L8 = . expression "!=" expression, FOLLOW [234] -> GOTO 231
	expression/L8 = . expression "<=" expression, FOLLOW [234] -> GOTO 231
	expression/L8 = . expression "<" expression, FOLLOW [234] -> GOTO 231
	expression/L8 = . expression ">=" expression, FOLLOW [234] -> GOTO 231
	expression/L8 = . expression ">" expression, FOLLOW [234] -> GOTO 231
	expression/L9 = . expression "+" expression, FOLLOW [234] -> GOTO 231
	expression/L9 = . expression "-" expression, FOLLOW [234] -> GOTO 231
	expression/L10 = . expression "*" expression, FOLLOW [234] -> GOTO 231
	expression/L10 = . expression "/" expression, FOLLOW [234] -> GOTO 231
	expression/L10 = . expression "%" expression, FOLLOW [234] -> GOTO 231
	expression/L11 = . expression "<<" expression, FOLLOW [234] -> GOTO 231
	expression/L11 = . expression ">>" expression, FOLLOW [234] -> GOTO 231
	expression/L12 = . expression "." IDENT, FOLLOW [234] -> GOTO 231
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [234] -> GOTO 231
	expression/L13 = . expression "(" ")", FOLLOW [234] -> GOTO 231
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [234] -> GOTO 231
	iexpression = . expression indirection IDENT, FOLLOW [234] -> GOTO 231
	expression/L12 = . iexpression, FOLLOW [234] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [234] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [234] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [234] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [234] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [234] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [234] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [234] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [234] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [234] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [234] -> SHIFT '{' GOTO 94
	expression/L1 = . "{" "}", FOLLOW [234] -> SHIFT '{' GOTO 94
	expression/L9 = . "+" expression, FOLLOW [234] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [234] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [234] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [234] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [234] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [234] -> SHIFT "new" GOTO 90
	expression/L2 = . "null", FOLLOW [234] -> SHIFT "null" GOTO 91
[151]
	expression/L3 = . expression "=" expression, FOLLOW [234] -> GOTO 232
	expression/L3 = . expression "+=" expression, FOLLOW [234] -> GOTO 232
	expression/L3 = . expression "-=" expression, FOLLOW [234] -> GOTO 232
	expression/L3 = expression "-=" . expression, FOLLOW [234] -> GOTO 232
	expression/L3 = . expression "*=" expression, FOLLOW [234] -> GOTO 232
	expression/L3 = . expression "/=" expression, FOLLOW [234] -> GOTO 232
	expression/L3 = . expression "^=" expression, FOLLOW [234] -> GOTO 232
	expression/L3 = . expression "&=" expression, FOLLOW [234] -> GOTO 232
	expression/L3 = . expression "%=" expression, FOLLOW [234] -> GOTO 232
	expression/L3 = . expression "&&=" expression, FOLLOW [234] -> GOTO 232
	expression/L3 = . expression "||=" expression, FOLLOW [234] -> GOTO 232
	expression/L3 = . expression "&=" expression, FOLLOW [234] -> GOTO 232
	expression/L3 = . expression "|=" expression, FOLLOW [234] -> GOTO 232
	expression/L3 = . expression "<<=" expression, FOLLOW [234] -> GOTO 232
	expression/L3 = . expression ">>=" expression, FOLLOW [234] -> GOTO 232
	expression/L4 = . expression "||" expression, FOLLOW [234] -> GOTO 232
	expression/L5 = . expression "&&" expression, FOLLOW [234] -> GOTO 232
	expression/L6 = . expression "|" expression, FOLLOW [234] -> GOTO 232
	expression/L7 = . expression "^" expression, FOLLOW [234] -> GOTO 232
	expression/L7 = . expression "&" expression, FOLLOW [234] -> GOTO 232
	expression/L8 = . expression "==" expression, FOLLOW [234] -> GOTO 232
	expression/L8 = . expression "!=" expression, FOLLOW [234] -> GOTO 232
	expression/L8 = . expression "<=" expression, FOLLOW [234] -> GOTO 232
	expression/L8 = . expression "<" expression, FOLLOW [234] -> GOTO 232
	expression/L8 = . expression ">=" expression, FOLLOW [234] -> GOTO 232
	expression/L8 = . expression ">" expression, FOLLOW [234] -> GOTO 232
	expression/L9 = . expression "+" expression, FOLLOW [234] -> GOTO 232
	expression/L9 = . expression "-" expression, FOLLOW [234] -> GOTO 232
	expression/L10 = . expression "*" expression, FOLLOW [234] -> GOTO 232
	expression/L10 = . expression "/" expression, FOLLOW [234] -> GOTO 232
	expression/L10 = . expression "%" expression, FOLLOW [234] -> GOTO 232
	expression/L11 = . expression "<<" expression, FOLLOW [234] -> GOTO 232
	expression/L11 = . expression ">>" expression, FOLLOW [234] -> GOTO 232
	expression/L12 = . expression "." IDENT, FOLLOW [234] -> GOTO 232
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [234] -> GOTO 232
	expression/L13 = . expression "(" ")", FOLLOW [234] -> GOTO 232
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [234] -> GOTO 232
	iexpression = . expression indirection IDENT, FOLLOW [234] -> GOTO 232
	expression/L12 = . iexpression, FOLLOW [234] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [234] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [234] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [234] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [234] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [234] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [234] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [234] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [234] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [234] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [234] -> SHIFT '{' GOTO 94
	expression/L1 = . "{" "}", FOLLOW [234] -> SHIFT '{' GOTO 94
	expression/L9 = . "+" expression, FOLLOW [234] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [234] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [234] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [234] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [234] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [234] -> SHIFT "new" GOTO 90
	expression/L2 = . "null", FOLLOW [234] -> SHIFT "null" GOTO 91
[152]
	expression/L3 = . expression "=" expression, FOLLOW [234] -> GOTO 233
	expression/L3 = . expression "+=" expression, FOLLOW [234] -> GOTO 233
	expression/L3 = . expression "-=" expression, FOLLOW [234] -> GOTO 233
	expression/L3 = . expression "*=" expression, FOLLOW [234] -> GOTO 233
	expression/L3 = expression "*=" . expression, FOLLOW [234] -> GOTO 233
	expression/L3 = . expression "/=" expression, FOLLOW [234] -> GOTO 233
	expression/L3 = . expression "^=" expression, FOLLOW [234] -> GOTO 233
	expression/L3 = . expression "&=" expression, FOLLOW [234] -> GOTO 233
	expression/L3 = . expression "%=" expression, FOLLOW [234] -> GOTO 233
	expression/L3 = . expression "&&=" expression, FOLLOW [234] -> GOTO 233
	expression/L3 = . expression "||=" expression, FOLLOW [234] -> GOTO 233
	expression/L3 = . expression "&=" expression, FOLLOW [234] -> GOTO 233
	expression/L3 = . expression "|=" expression, FOLLOW [234] -> GOTO 233
	expression/L3 = . expression "<<=" expression, FOLLOW [234] -> GOTO 233
	expression/L3 = . expression ">>=" expression, FOLLOW [234] -> GOTO 233
	expression/L4 = . expression "||" expression, FOLLOW [234] -> GOTO 233
	expression/L5 = . expression "&&" expression, FOLLOW [234] -> GOTO 233
	expression/L6 = . expression "|" expression, FOLLOW [234] -> GOTO 233
	expression/L7 = . expression "^" expression, FOLLOW [234] -> GOTO 233
	expression/L7 = . expression "&" expression, FOLLOW [234] -> GOTO 233
	expression/L8 = . expression "==" expression, FOLLOW [234] -> GOTO 233
	expression/L8 = . expression "!=" expression, FOLLOW [234] -> GOTO 233
	expression/L8 = . expression "<=" expression, FOLLOW [234] -> GOTO 233
	expression/L8 = . expression "<" expression, FOLLOW [234] -> GOTO 233
	expression/L8 = . expression ">=" expression, FOLLOW [234] -> GOTO 233
	expression/L8 = . expression ">" expression, FOLLOW [234] -> GOTO 233
	expression/L9 = . expression "+" expression, FOLLOW [234] -> GOTO 233
	expression/L9 = . expression "-" expression, FOLLOW [234] -> GOTO 233
	expression/L10 = . expression "*" expression, FOLLOW [234] -> GOTO 233
	expression/L10 = . expression "/" expression, FOLLOW [234] -> GOTO 233
	expression/L10 = . expression "%" expression, FOLLOW [234] -> GOTO 233
	expression/L11 = . expression "<<" expression, FOLLOW [234] -> GOTO 233
	expression/L11 = . expression ">>" expression, FOLLOW [234] -> GOTO 233
	expression/L12 = . expression "." IDENT, FOLLOW [234] -> GOTO 233
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [234] -> GOTO 233
	expression/L13 = . expression "(" ")", FOLLOW [234] -> GOTO 233
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [234] -> GOTO 233
	iexpression = . expression indirection IDENT, FOLLOW [234] -> GOTO 233
	expression/L12 = . iexpression, FOLLOW [234] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [234] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [234] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [234] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [234] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [234] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [234] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [234] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [234] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [234] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [234] -> SHIFT '{' GOTO 94
	expression/L1 = . "{" "}", FOLLOW [234] -> SHIFT '{' GOTO 94
	expression/L9 = . "+" expression, FOLLOW [234] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [234] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [234] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [234] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [234] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [234] -> SHIFT "new" GOTO 90
	expression/L2 = . "null", FOLLOW [234] -> SHIFT "null" GOTO 91
[153]
	expression/L3 = . expression "=" expression, FOLLOW [234] -> GOTO 234
	expression/L3 = . expression "+=" expression, FOLLOW [234] -> GOTO 234
	expression/L3 = . expression "-=" expression, FOLLOW [234] -> GOTO 234
	expression/L3 = . expression "*=" expression, FOLLOW [234] -> GOTO 234
	expression/L3 = . expression "/=" expression, FOLLOW [234] -> GOTO 234
	expression/L3 = expression "/=" . expression, FOLLOW [234] -> GOTO 234
	expression/L3 = . expression "^=" expression, FOLLOW [234] -> GOTO 234
	expression/L3 = . expression "&=" expression, FOLLOW [234] -> GOTO 234
	expression/L3 = . expression "%=" expression, FOLLOW [234] -> GOTO 234
	expression/L3 = . expression "&&=" expression, FOLLOW [234] -> GOTO 234
	expression/L3 = . expression "||=" expression, FOLLOW [234] -> GOTO 234
	expression/L3 = . expression "&=" expression, FOLLOW [234] -> GOTO 234
	expression/L3 = . expression "|=" expression, FOLLOW [234] -> GOTO 234
	expression/L3 = . expression "<<=" expression, FOLLOW [234] -> GOTO 234
	expression/L3 = . expression ">>=" expression, FOLLOW [234] -> GOTO 234
	expression/L4 = . expression "||" expression, FOLLOW [234] -> GOTO 234
	expression/L5 = . expression "&&" expression, FOLLOW [234] -> GOTO 234
	expression/L6 = . expression "|" expression, FOLLOW [234] -> GOTO 234
	expression/L7 = . expression "^" expression, FOLLOW [234] -> GOTO 234
	expression/L7 = . expression "&" expression, FOLLOW [234] -> GOTO 234
	expression/L8 = . expression "==" expression, FOLLOW [234] -> GOTO 234
	expression/L8 = . expression "!=" expression, FOLLOW [234] -> GOTO 234
	expression/L8 = . expression "<=" expression, FOLLOW [234] -> GOTO 234
	expression/L8 = . expression "<" expression, FOLLOW [234] -> GOTO 234
	expression/L8 = . expression ">=" expression, FOLLOW [234] -> GOTO 234
	expression/L8 = . expression ">" expression, FOLLOW [234] -> GOTO 234
	expression/L9 = . expression "+" expression, FOLLOW [234] -> GOTO 234
	expression/L9 = . expression "-" expression, FOLLOW [234] -> GOTO 234
	expression/L10 = . expression "*" expression, FOLLOW [234] -> GOTO 234
	expression/L10 = . expression "/" expression, FOLLOW [234] -> GOTO 234
	expression/L10 = . expression "%" expression, FOLLOW [234] -> GOTO 234
	expression/L11 = . expression "<<" expression, FOLLOW [234] -> GOTO 234
	expression/L11 = . expression ">>" expression, FOLLOW [234] -> GOTO 234
	expression/L12 = . expression "." IDENT, FOLLOW [234] -> GOTO 234
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [234] -> GOTO 234
	expression/L13 = . expression "(" ")", FOLLOW [234] -> GOTO 234
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [234] -> GOTO 234
	iexpression = . expression indirection IDENT, FOLLOW [234] -> GOTO 234
	expression/L12 = . iexpression, FOLLOW [234] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [234] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [234] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [234] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [234] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [234] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [234] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [234] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [234] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [234] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [234] -> SHIFT '{' GOTO 94
	expression/L1 = . "{" "}", FOLLOW [234] -> SHIFT '{' GOTO 94
	expression/L9 = . "+" expression, FOLLOW [234] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [234] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [234] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [234] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [234] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [234] -> SHIFT "new" GOTO 90
	expression/L2 = . "null", FOLLOW [234] -> SHIFT "null" GOTO 91
[154]
	expression/L3 = . expression "=" expression, FOLLOW [234] -> GOTO 235
	expression/L3 = . expression "+=" expression, FOLLOW [234] -> GOTO 235
	expression/L3 = . expression "-=" expression, FOLLOW [234] -> GOTO 235
	expression/L3 = . expression "*=" expression, FOLLOW [234] -> GOTO 235
	expression/L3 = . expression "/=" expression, FOLLOW [234] -> GOTO 235
	expression/L3 = . expression "^=" expression, FOLLOW [234] -> GOTO 235
	expression/L3 = expression "^=" . expression, FOLLOW [234] -> GOTO 235
	expression/L3 = . expression "&=" expression, FOLLOW [234] -> GOTO 235
	expression/L3 = . expression "%=" expression, FOLLOW [234] -> GOTO 235
	expression/L3 = . expression "&&=" expression, FOLLOW [234] -> GOTO 235
	expression/L3 = . expression "||=" expression, FOLLOW [234] -> GOTO 235
	expression/L3 = . expression "&=" expression, FOLLOW [234] -> GOTO 235
	expression/L3 = . expression "|=" expression, FOLLOW [234] -> GOTO 235
	expression/L3 = . expression "<<=" expression, FOLLOW [234] -> GOTO 235
	expression/L3 = . expression ">>=" expression, FOLLOW [234] -> GOTO 235
	expression/L4 = . expression "||" expression, FOLLOW [234] -> GOTO 235
	expression/L5 = . expression "&&" expression, FOLLOW [234] -> GOTO 235
	expression/L6 = . expression "|" expression, FOLLOW [234] -> GOTO 235
	expression/L7 = . expression "^" expression, FOLLOW [234] -> GOTO 235
	expression/L7 = . expression "&" expression, FOLLOW [234] -> GOTO 235
	expression/L8 = . expression "==" expression, FOLLOW [234] -> GOTO 235
	expression/L8 = . expression "!=" expression, FOLLOW [234] -> GOTO 235
	expression/L8 = . expression "<=" expression, FOLLOW [234] -> GOTO 235
	expression/L8 = . expression "<" expression, FOLLOW [234] -> GOTO 235
	expression/L8 = . expression ">=" expression, FOLLOW [234] -> GOTO 235
	expression/L8 = . expression ">" expression, FOLLOW [234] -> GOTO 235
	expression/L9 = . expression "+" expression, FOLLOW [234] -> GOTO 235
	expression/L9 = . expression "-" expression, FOLLOW [234] -> GOTO 235
	expression/L10 = . expression "*" expression, FOLLOW [234] -> GOTO 235
	expression/L10 = . expression "/" expression, FOLLOW [234] -> GOTO 235
	expression/L10 = . expression "%" expression, FOLLOW [234] -> GOTO 235
	expression/L11 = . expression "<<" expression, FOLLOW [234] -> GOTO 235
	expression/L11 = . expression ">>" expression, FOLLOW [234] -> GOTO 235
	expression/L12 = . expression "." IDENT, FOLLOW [234] -> GOTO 235
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [234] -> GOTO 235
	expression/L13 = . expression "(" ")", FOLLOW [234] -> GOTO 235
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [234] -> GOTO 235
	iexpression = . expression indirection IDENT, FOLLOW [234] -> GOTO 235
	expression/L12 = . iexpression, FOLLOW [234] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [234] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [234] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [234] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [234] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [234] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [234] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [234] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [234] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [234] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [234] -> SHIFT '{' GOTO 94
	expression/L1 = . "{" "}", FOLLOW [234] -> SHIFT '{' GOTO 94
	expression/L9 = . "+" expression, FOLLOW [234] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [234] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [234] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [234] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [234] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [234] -> SHIFT "new" GOTO 90
	expression/L2 = . "null", FOLLOW [234] -> SHIFT "null" GOTO 91
[155]
	expression/L3 = . expression "=" expression, FOLLOW [234] -> GOTO 236
	expression/L3 = . expression "+=" expression, FOLLOW [234] -> GOTO 236
	expression/L3 = . expression "-=" expression, FOLLOW [234] -> GOTO 236
	expression/L3 = . expression "*=" expression, FOLLOW [234] -> GOTO 236
	expression/L3 = . expression "/=" expression, FOLLOW [234] -> GOTO 236
	expression/L3 = . expression "^=" expression, FOLLOW [234] -> GOTO 236
	expression/L3 = . expression "&=" expression, FOLLOW [234] -> GOTO 236
	expression/L3 = expression "&=" . expression, FOLLOW [234] -> GOTO 236
	expression/L3 = . expression "%=" expression, FOLLOW [234] -> GOTO 236
	expression/L3 = . expression "&&=" expression, FOLLOW [234] -> GOTO 236
	expression/L3 = . expression "||=" expression, FOLLOW [234] -> GOTO 236
	expression/L3 = . expression "&=" expression, FOLLOW [234] -> GOTO 236
	expression/L3 = expression "&=" . expression, FOLLOW [234] -> GOTO 236
	expression/L3 = . expression "|=" expression, FOLLOW [234] -> GOTO 236
	expression/L3 = . expression "<<=" expression, FOLLOW [234] -> GOTO 236
	expression/L3 = . expression ">>=" expression, FOLLOW [234] -> GOTO 236
	expression/L4 = . expression "||" expression, FOLLOW [234] -> GOTO 236
	expression/L5 = . expression "&&" expression, FOLLOW [234] -> GOTO 236
	expression/L6 = . expression "|" expression, FOLLOW [234] -> GOTO 236
	expression/L7 = . expression "^" expression, FOLLOW [234] -> GOTO 236
	expression/L7 = . expression "&" expression, FOLLOW [234] -> GOTO 236
	expression/L8 = . expression "==" expression, FOLLOW [234] -> GOTO 236
	expression/L8 = . expression "!=" expression, FOLLOW [234] -> GOTO 236
	expression/L8 = . expression "<=" expression, FOLLOW [234] -> GOTO 236
	expression/L8 = . expression "<" expression, FOLLOW [234] -> GOTO 236
	expression/L8 = . expression ">=" expression, FOLLOW [234] -> GOTO 236
	expression/L8 = . expression ">" expression, FOLLOW [234] -> GOTO 236
	expression/L9 = . expression "+" expression, FOLLOW [234] -> GOTO 236
	expression/L9 = . expression "-" expression, FOLLOW [234] -> GOTO 236
	expression/L10 = . expression "*" expression, FOLLOW [234] -> GOTO 236
	expression/L10 = . expression "/" expression, FOLLOW [234] -> GOTO 236
	expression/L10 = . expression "%" expression, FOLLOW [234] -> GOTO 236
	expression/L11 = . expression "<<" expression, FOLLOW [234] -> GOTO 236
	expression/L11 = . expression ">>" expression, FOLLOW [234] -> GOTO 236
	expression/L12 = . expression "." IDENT, FOLLOW [234] -> GOTO 236
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [234] -> GOTO 236
	expression/L13 = . expression "(" ")", FOLLOW [234] -> GOTO 236
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [234] -> GOTO 236
	iexpression = . expression indirection IDENT, FOLLOW [234] -> GOTO 236
	expression/L12 = . iexpression, FOLLOW [234] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [234] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [234] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [234] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [234] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [234] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [234] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [234] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [234] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [234] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [234] -> SHIFT '{' GOTO 94
	expression/L1 = . "{" "}", FOLLOW [234] -> SHIFT '{' GOTO 94
	expression/L9 = . "+" expression, FOLLOW [234] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [234] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [234] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [234] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [234] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [234] -> SHIFT "new" GOTO 90
	expression/L2 = . "null", FOLLOW [234] -> SHIFT "null" GOTO 91
[156]
	expression/L3 = . expression "=" expression, FOLLOW [234] -> GOTO 237
	expression/L3 = . expression "+=" expression, FOLLOW [234] -> GOTO 237
	expression/L3 = . expression "-=" expression, FOLLOW [234] -> GOTO 237
	expression/L3 = . expression "*=" expression, FOLLOW [234] -> GOTO 237
	expression/L3 = . expression "/=" expression, FOLLOW [234] -> GOTO 237
	expression/L3 = . expression "^=" expression, FOLLOW [234] -> GOTO 237
	expression/L3 = . expression "&=" expression, FOLLOW [234] -> GOTO 237
	expression/L3 = . expression "%=" expression, FOLLOW [234] -> GOTO 237
	expression/L3 = expression "%=" . expression, FOLLOW [234] -> GOTO 237
	expression/L3 = . expression "&&=" expression, FOLLOW [234] -> GOTO 237
	expression/L3 = . expression "||=" expression, FOLLOW [234] -> GOTO 237
	expression/L3 = . expression "&=" expression, FOLLOW [234] -> GOTO 237
	expression/L3 = . expression "|=" expression, FOLLOW [234] -> GOTO 237
	expression/L3 = . expression "<<=" expression, FOLLOW [234] -> GOTO 237
	expression/L3 = . expression ">>=" expression, FOLLOW [234] -> GOTO 237
	expression/L4 = . expression "||" expression, FOLLOW [234] -> GOTO 237
	expression/L5 = . expression "&&" expression, FOLLOW [234] -> GOTO 237
	expression/L6 = . expression "|" expression, FOLLOW [234] -> GOTO 237
	expression/L7 = . expression "^" expression, FOLLOW [234] -> GOTO 237
	expression/L7 = . expression "&" expression, FOLLOW [234] -> GOTO 237
	expression/L8 = . expression "==" expression, FOLLOW [234] -> GOTO 237
	expression/L8 = . expression "!=" expression, FOLLOW [234] -> GOTO 237
	expression/L8 = . expression "<=" expression, FOLLOW [234] -> GOTO 237
	expression/L8 = . expression "<" expression, FOLLOW [234] -> GOTO 237
	expression/L8 = . expression ">=" expression, FOLLOW [234] -> GOTO 237
	expression/L8 = . expression ">" expression, FOLLOW [234] -> GOTO 237
	expression/L9 = . expression "+" expression, FOLLOW [234] -> GOTO 237
	expression/L9 = . expression "-" expression, FOLLOW [234] -> GOTO 237
	expression/L10 = . expression "*" expression, FOLLOW [234] -> GOTO 237
	expression/L10 = . expression "/" expression, FOLLOW [234] -> GOTO 237
	expression/L10 = . expression "%" expression, FOLLOW [234] -> GOTO 237
	expression/L11 = . expression "<<" expression, FOLLOW [234] -> GOTO 237
	expression/L11 = . expression ">>" expression, FOLLOW [234] -> GOTO 237
	expression/L12 = . expression "." IDENT, FOLLOW [234] -> GOTO 237
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [234] -> GOTO 237
	expression/L13 = . expression "(" ")", FOLLOW [234] -> GOTO 237
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [234] -> GOTO 237
	iexpression = . expression indirection IDENT, FOLLOW [234] -> GOTO 237
	expression/L12 = . iexpression, FOLLOW [234] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [234] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [234] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [234] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [234] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [234] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [234] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [234] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [234] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [234] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [234] -> SHIFT '{' GOTO 94
	expression/L1 = . "{" "}", FOLLOW [234] -> SHIFT '{' GOTO 94
	expression/L9 = . "+" expression, FOLLOW [234] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [234] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [234] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [234] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [234] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [234] -> SHIFT "new" GOTO 90
	expression/L2 = . "null", FOLLOW [234] -> SHIFT "null" GOTO 91
[157]
	expression/L3 = . expression "=" expression, FOLLOW [234] -> GOTO 238
	expression/L3 = . expression "+=" expression, FOLLOW [234] -> GOTO 238
	expression/L3 = . expression "-=" expression, FOLLOW [234] -> GOTO 238
	expression/L3 = . expression "*=" expression, FOLLOW [234] -> GOTO 238
	expression/L3 = . expression "/=" expression, FOLLOW [234] -> GOTO 238
	expression/L3 = . expression "^=" expression, FOLLOW [234] -> GOTO 238
	expression/L3 = . expression "&=" expression, FOLLOW [234] -> GOTO 238
	expression/L3 = . expression "%=" expression, FOLLOW [234] -> GOTO 238
	expression/L3 = . expression "&&=" expression, FOLLOW [234] -> GOTO 238
	expression/L3 = expression "&&=" . expression, FOLLOW [234] -> GOTO 238
	expression/L3 = . expression "||=" expression, FOLLOW [234] -> GOTO 238
	expression/L3 = . expression "&=" expression, FOLLOW [234] -> GOTO 238
	expression/L3 = . expression "|=" expression, FOLLOW [234] -> GOTO 238
	expression/L3 = . expression "<<=" expression, FOLLOW [234] -> GOTO 238
	expression/L3 = . expression ">>=" expression, FOLLOW [234] -> GOTO 238
	expression/L4 = . expression "||" expression, FOLLOW [234] -> GOTO 238
	expression/L5 = . expression "&&" expression, FOLLOW [234] -> GOTO 238
	expression/L6 = . expression "|" expression, FOLLOW [234] -> GOTO 238
	expression/L7 = . expression "^" expression, FOLLOW [234] -> GOTO 238
	expression/L7 = . expression "&" expression, FOLLOW [234] -> GOTO 238
	expression/L8 = . expression "==" expression, FOLLOW [234] -> GOTO 238
	expression/L8 = . expression "!=" expression, FOLLOW [234] -> GOTO 238
	expression/L8 = . expression "<=" expression, FOLLOW [234] -> GOTO 238
	expression/L8 = . expression "<" expression, FOLLOW [234] -> GOTO 238
	expression/L8 = . expression ">=" expression, FOLLOW [234] -> GOTO 238
	expression/L8 = . expression ">" expression, FOLLOW [234] -> GOTO 238
	expression/L9 = . expression "+" expression, FOLLOW [234] -> GOTO 238
	expression/L9 = . expression "-" expression, FOLLOW [234] -> GOTO 238
	expression/L10 = . expression "*" expression, FOLLOW [234] -> GOTO 238
	expression/L10 = . expression "/" expression, FOLLOW [234] -> GOTO 238
	expression/L10 = . expression "%" expression, FOLLOW [234] -> GOTO 238
	expression/L11 = . expression "<<" expression, FOLLOW [234] -> GOTO 238
	expression/L11 = . expression ">>" expression, FOLLOW [234] -> GOTO 238
	expression/L12 = . expression "." IDENT, FOLLOW [234] -> GOTO 238
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [234] -> GOTO 238
	expression/L13 = . expression "(" ")", FOLLOW [234] -> GOTO 238
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [234] -> GOTO 238
	iexpression = . expression indirection IDENT, FOLLOW [234] -> GOTO 238
	expression/L12 = . iexpression, FOLLOW [234] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [234] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [234] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [234] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [234] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [234] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [234] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [234] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [234] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [234] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [234] -> SHIFT '{' GOTO 94
	expression/L1 = . "{" "}", FOLLOW [234] -> SHIFT '{' GOTO 94
	expression/L9 = . "+" expression, FOLLOW [234] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [234] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [234] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [234] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [234] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [234] -> SHIFT "new" GOTO 90
	expression/L2 = . "null", FOLLOW [234] -> SHIFT "null" GOTO 91
[158]
	expression/L3 = . expression "=" expression, FOLLOW [234] -> GOTO 239
	expression/L3 = . expression "+=" expression, FOLLOW [234] -> GOTO 239
	expression/L3 = . expression "-=" expression, FOLLOW [234] -> GOTO 239
	expression/L3 = . expression "*=" expression, FOLLOW [234] -> GOTO 239
	expression/L3 = . expression "/=" expression, FOLLOW [234] -> GOTO 239
	expression/L3 = . expression "^=" expression, FOLLOW [234] -> GOTO 239
	expression/L3 = . expression "&=" expression, FOLLOW [234] -> GOTO 239
	expression/L3 = . expression "%=" expression, FOLLOW [234] -> GOTO 239
	expression/L3 = . expression "&&=" expression, FOLLOW [234] -> GOTO 239
	expression/L3 = . expression "||=" expression, FOLLOW [234] -> GOTO 239
	expression/L3 = expression "||=" . expression, FOLLOW [234] -> GOTO 239
	expression/L3 = . expression "&=" expression, FOLLOW [234] -> GOTO 239
	expression/L3 = . expression "|=" expression, FOLLOW [234] -> GOTO 239
	expression/L3 = . expression "<<=" expression, FOLLOW [234] -> GOTO 239
	expression/L3 = . expression ">>=" expression, FOLLOW [234] -> GOTO 239
	expression/L4 = . expression "||" expression, FOLLOW [234] -> GOTO 239
	expression/L5 = . expression "&&" expression, FOLLOW [234] -> GOTO 239
	expression/L6 = . expression "|" expression, FOLLOW [234] -> GOTO 239
	expression/L7 = . expression "^" expression, FOLLOW [234] -> GOTO 239
	expression/L7 = . expression "&" expression, FOLLOW [234] -> GOTO 239
	expression/L8 = . expression "==" expression, FOLLOW [234] -> GOTO 239
	expression/L8 = . expression "!=" expression, FOLLOW [234] -> GOTO 239
	expression/L8 = . expression "<=" expression, FOLLOW [234] -> GOTO 239
	expression/L8 = . expression "<" expression, FOLLOW [234] -> GOTO 239
	expression/L8 = . expression ">=" expression, FOLLOW [234] -> GOTO 239
	expression/L8 = . expression ">" expression, FOLLOW [234] -> GOTO 239
	expression/L9 = . expression "+" expression, FOLLOW [234] -> GOTO 239
	expression/L9 = . expression "-" expression, FOLLOW [234] -> GOTO 239
	expression/L10 = . expression "*" expression, FOLLOW [234] -> GOTO 239
	expression/L10 = . expression "/" expression, FOLLOW [234] -> GOTO 239
	expression/L10 = . expression "%" expression, FOLLOW [234] -> GOTO 239
	expression/L11 = . expression "<<" expression, FOLLOW [234] -> GOTO 239
	expression/L11 = . expression ">>" expression, FOLLOW [234] -> GOTO 239
	expression/L12 = . expression "." IDENT, FOLLOW [234] -> GOTO 239
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [234] -> GOTO 239
	expression/L13 = . expression "(" ")", FOLLOW [234] -> GOTO 239
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [234] -> GOTO 239
	iexpression = . expression indirection IDENT, FOLLOW [234] -> GOTO 239
	expression/L12 = . iexpression, FOLLOW [234] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [234] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [234] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [234] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [234] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [234] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [234] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [234] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [234] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [234] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [234] -> SHIFT '{' GOTO 94
	expression/L1 = . "{" "}", FOLLOW [234] -> SHIFT '{' GOTO 94
	expression/L9 = . "+" expression, FOLLOW [234] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [234] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [234] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [234] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [234] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [234] -> SHIFT "new" GOTO 90
	expression/L2 = . "null", FOLLOW [234] -> SHIFT "null" GOTO 91
[159]
	expression/L3 = . expression "=" expression, FOLLOW [234] -> GOTO 240
	expression/L3 = . expression "+=" expression, FOLLOW [234] -> GOTO 240
	expression/L3 = . expression "-=" expression, FOLLOW [234] -> GOTO 240
	expression/L3 = . expression "*=" expression, FOLLOW [234] -> GOTO 240
	expression/L3 = . expression "/=" expression, FOLLOW [234] -> GOTO 240
	expression/L3 = . expression "^=" expression, FOLLOW [234] -> GOTO 240
	expression/L3 = . expression "&=" expression, FOLLOW [234] -> GOTO 240
	expression/L3 = . expression "%=" expression, FOLLOW [234] -> GOTO 240
	expression/L3 = . expression "&&=" expression, FOLLOW [234] -> GOTO 240
	expression/L3 = . expression "||=" expression, FOLLOW [234] -> GOTO 240
	expression/L3 = . expression "&=" expression, FOLLOW [234] -> GOTO 240
	expression/L3 = . expression "|=" expression, FOLLOW [234] -> GOTO 240
	expression/L3 = expression "|=" . expression, FOLLOW [234] -> GOTO 240
	expression/L3 = . expression "<<=" expression, FOLLOW [234] -> GOTO 240
	expression/L3 = . expression ">>=" expression, FOLLOW [234] -> GOTO 240
	expression/L4 = . expression "||" expression, FOLLOW [234] -> GOTO 240
	expression/L5 = . expression "&&" expression, FOLLOW [234] -> GOTO 240
	expression/L6 = . expression "|" expression, FOLLOW [234] -> GOTO 240
	expression/L7 = . expression "^" expression, FOLLOW [234] -> GOTO 240
	expression/L7 = . expression "&" expression, FOLLOW [234] -> GOTO 240
	expression/L8 = . expression "==" expression, FOLLOW [234] -> GOTO 240
	expression/L8 = . expression "!=" expression, FOLLOW [234] -> GOTO 240
	expression/L8 = . expression "<=" expression, FOLLOW [234] -> GOTO 240
	expression/L8 = . expression "<" expression, FOLLOW [234] -> GOTO 240
	expression/L8 = . expression ">=" expression, FOLLOW [234] -> GOTO 240
	expression/L8 = . expression ">" expression, FOLLOW [234] -> GOTO 240
	expression/L9 = . expression "+" expression, FOLLOW [234] -> GOTO 240
	expression/L9 = . expression "-" expression, FOLLOW [234] -> GOTO 240
	expression/L10 = . expression "*" expression, FOLLOW [234] -> GOTO 240
	expression/L10 = . expression "/" expression, FOLLOW [234] -> GOTO 240
	expression/L10 = . expression "%" expression, FOLLOW [234] -> GOTO 240
	expression/L11 = . expression "<<" expression, FOLLOW [234] -> GOTO 240
	expression/L11 = . expression ">>" expression, FOLLOW [234] -> GOTO 240
	expression/L12 = . expression "." IDENT, FOLLOW [234] -> GOTO 240
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [234] -> GOTO 240
	expression/L13 = . expression "(" ")", FOLLOW [234] -> GOTO 240
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [234] -> GOTO 240
	iexpression = . expression indirection IDENT, FOLLOW [234] -> GOTO 240
	expression/L12 = . iexpression, FOLLOW [234] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [234] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [234] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [234] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [234] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [234] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [234] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [234] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [234] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [234] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [234] -> SHIFT '{' GOTO 94
	expression/L1 = . "{" "}", FOLLOW [234] -> SHIFT '{' GOTO 94
	expression/L9 = . "+" expression, FOLLOW [234] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [234] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [234] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [234] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [234] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [234] -> SHIFT "new" GOTO 90
	expression/L2 = . "null", FOLLOW [234] -> SHIFT "null" GOTO 91
[160]
	expression/L3 = . expression "=" expression, FOLLOW [234] -> GOTO 241
	expression/L3 = . expression "+=" expression, FOLLOW [234] -> GOTO 241
	expression/L3 = . expression "-=" expression, FOLLOW [234] -> GOTO 241
	expression/L3 = . expression "*=" expression, FOLLOW [234] -> GOTO 241
	expression/L3 = . expression "/=" expression, FOLLOW [234] -> GOTO 241
	expression/L3 = . expression "^=" expression, FOLLOW [234] -> GOTO 241
	expression/L3 = . expression "&=" expression, FOLLOW [234] -> GOTO 241
	expression/L3 = . expression "%=" expression, FOLLOW [234] -> GOTO 241
	expression/L3 = . expression "&&=" expression, FOLLOW [234] -> GOTO 241
	expression/L3 = . expression "||=" expression, FOLLOW [234] -> GOTO 241
	expression/L3 = . expression "&=" expression, FOLLOW [234] -> GOTO 241
	expression/L3 = . expression "|=" expression, FOLLOW [234] -> GOTO 241
	expression/L3 = . expression "<<=" expression, FOLLOW [234] -> GOTO 241
	expression/L3 = expression "<<=" . expression, FOLLOW [234] -> GOTO 241
	expression/L3 = . expression ">>=" expression, FOLLOW [234] -> GOTO 241
	expression/L4 = . expression "||" expression, FOLLOW [234] -> GOTO 241
	expression/L5 = . expression "&&" expression, FOLLOW [234] -> GOTO 241
	expression/L6 = . expression "|" expression, FOLLOW [234] -> GOTO 241
	expression/L7 = . expression "^" expression, FOLLOW [234] -> GOTO 241
	expression/L7 = . expression "&" expression, FOLLOW [234] -> GOTO 241
	expression/L8 = . expression "==" expression, FOLLOW [234] -> GOTO 241
	expression/L8 = . expression "!=" expression, FOLLOW [234] -> GOTO 241
	expression/L8 = . expression "<=" expression, FOLLOW [234] -> GOTO 241
	expression/L8 = . expression "<" expression, FOLLOW [234] -> GOTO 241
	expression/L8 = . expression ">=" expression, FOLLOW [234] -> GOTO 241
	expression/L8 = . expression ">" expression, FOLLOW [234] -> GOTO 241
	expression/L9 = . expression "+" expression, FOLLOW [234] -> GOTO 241
	expression/L9 = . expression "-" expression, FOLLOW [234] -> GOTO 241
	expression/L10 = . expression "*" expression, FOLLOW [234] -> GOTO 241
	expression/L10 = . expression "/" expression, FOLLOW [234] -> GOTO 241
	expression/L10 = . expression "%" expression, FOLLOW [234] -> GOTO 241
	expression/L11 = . expression "<<" expression, FOLLOW [234] -> GOTO 241
	expression/L11 = . expression ">>" expression, FOLLOW [234] -> GOTO 241
	expression/L12 = . expression "." IDENT, FOLLOW [234] -> GOTO 241
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [234] -> GOTO 241
	expression/L13 = . expression "(" ")", FOLLOW [234] -> GOTO 241
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [234] -> GOTO 241
	iexpression = . expression indirection IDENT, FOLLOW [234] -> GOTO 241
	expression/L12 = . iexpression, FOLLOW [234] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [234] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [234] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [234] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [234] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [234] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [234] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [234] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [234] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [234] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [234] -> SHIFT '{' GOTO 94
	expression/L1 = . "{" "}", FOLLOW [234] -> SHIFT '{' GOTO 94
	expression/L9 = . "+" expression, FOLLOW [234] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [234] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [234] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [234] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [234] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [234] -> SHIFT "new" GOTO 90
	expression/L2 = . "null", FOLLOW [234] -> SHIFT "null" GOTO 91
[161]
	expression/L3 = . expression "=" expression, FOLLOW [234] -> GOTO 242
	expression/L3 = . expression "+=" expression, FOLLOW [234] -> GOTO 242
	expression/L3 = . expression "-=" expression, FOLLOW [234] -> GOTO 242
	expression/L3 = . expression "*=" expression, FOLLOW [234] -> GOTO 242
	expression/L3 = . expression "/=" expression, FOLLOW [234] -> GOTO 242
	expression/L3 = . expression "^=" expression, FOLLOW [234] -> GOTO 242
	expression/L3 = . expression "&=" expression, FOLLOW [234] -> GOTO 242
	expression/L3 = . expression "%=" expression, FOLLOW [234] -> GOTO 242
	expression/L3 = . expression "&&=" expression, FOLLOW [234] -> GOTO 242
	expression/L3 = . expression "||=" expression, FOLLOW [234] -> GOTO 242
	expression/L3 = . expression "&=" expression, FOLLOW [234] -> GOTO 242
	expression/L3 = . expression "|=" expression, FOLLOW [234] -> GOTO 242
	expression/L3 = . expression "<<=" expression, FOLLOW [234] -> GOTO 242
	expression/L3 = . expression ">>=" expression, FOLLOW [234] -> GOTO 242
	expression/L3 = expression ">>=" . expression, FOLLOW [234] -> GOTO 242
	expression/L4 = . expression "||" expression, FOLLOW [234] -> GOTO 242
	expression/L5 = . expression "&&" expression, FOLLOW [234] -> GOTO 242
	expression/L6 = . expression "|" expression, FOLLOW [234] -> GOTO 242
	expression/L7 = . expression "^" expression, FOLLOW [234] -> GOTO 242
	expression/L7 = . expression "&" expression, FOLLOW [234] -> GOTO 242
	expression/L8 = . expression "==" expression, FOLLOW [234] -> GOTO 242
	expression/L8 = . expression "!=" expression, FOLLOW [234] -> GOTO 242
	expression/L8 = . expression "<=" expression, FOLLOW [234] -> GOTO 242
	expression/L8 = . expression "<" expression, FOLLOW [234] -> GOTO 242
	expression/L8 = . expression ">=" expression, FOLLOW [234] -> GOTO 242
	expression/L8 = . expression ">" expression, FOLLOW [234] -> GOTO 242
	expression/L9 = . expression "+" expression, FOLLOW [234] -> GOTO 242
	expression/L9 = . expression "-" expression, FOLLOW [234] -> GOTO 242
	expression/L10 = . expression "*" expression, FOLLOW [234] -> GOTO 242
	expression/L10 = . expression "/" expression, FOLLOW [234] -> GOTO 242
	expression/L10 = . expression "%" expression, FOLLOW [234] -> GOTO 242
	expression/L11 = . expression "<<" expression, FOLLOW [234] -> GOTO 242
	expression/L11 = . expression ">>" expression, FOLLOW [234] -> GOTO 242
	expression/L12 = . expression "." IDENT, FOLLOW [234] -> GOTO 242
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [234] -> GOTO 242
	expression/L13 = . expression "(" ")", FOLLOW [234] -> GOTO 242
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [234] -> GOTO 242
	iexpression = . expression indirection IDENT, FOLLOW [234] -> GOTO 242
	expression/L12 = . iexpression, FOLLOW [234] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [234] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [234] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [234] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [234] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [234] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [234] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [234] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [234] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [234] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [234] -> SHIFT '{' GOTO 94
	expression/L1 = . "{" "}", FOLLOW [234] -> SHIFT '{' GOTO 94
	expression/L9 = . "+" expression, FOLLOW [234] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [234] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [234] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [234] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [234] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [234] -> SHIFT "new" GOTO 90
	expression/L2 = . "null", FOLLOW [234] -> SHIFT "null" GOTO 91
[162]
	expression/L12 = expression "." . IDENT, FOLLOW [234] -> SHIFT IDENT GOTO 243
[163]
	iexpression = expression . indirection IDENT, FOLLOW [234] -> GOTO 126
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [234] -> SHIFT '(' GOTO 127
	expression/L13 = expression . "(" ")", FOLLOW [234] -> SHIFT '(' GOTO 127
	expression/L2 = "(" expression . ")", FOLLOW [234] -> SHIFT ')' GOTO 244
	expression/L7 = expression . "&" expression, FOLLOW [234] -> SHIFT '&' GOTO 129
	expression/L7 = expression . "^" expression, FOLLOW [234] -> SHIFT '^' GOTO 130
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 131
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 131
	expression/L3 = expression . "=" expression, FOLLOW [234] -> SHIFT '=' GOTO 132
	expression/L9 = expression . "+" expression, FOLLOW [234] -> SHIFT '+' GOTO 133
	expression/L9 = expression . "-" expression, FOLLOW [234] -> SHIFT '-' GOTO 134
	expression/L10 = expression . "*" expression, FOLLOW [234] -> SHIFT '*' GOTO 135
	expression/L10 = expression . "/" expression, FOLLOW [234] -> SHIFT '/' GOTO 136
	expression/L10 = expression . "%" expression, FOLLOW [234] -> SHIFT '%' GOTO 137
	expression/L5 = expression . "&&" expression, FOLLOW [234] -> SHIFT "&&" GOTO 138
	expression/L4 = expression . "||" expression, FOLLOW [234] -> SHIFT "||" GOTO 139
	expression/L6 = expression . "|" expression, FOLLOW [234] -> SHIFT '|' GOTO 140
	expression/L11 = expression . "<<" expression, FOLLOW [234] -> SHIFT "<<" GOTO 141
	expression/L11 = expression . ">>" expression, FOLLOW [234] -> SHIFT ">>" GOTO 142
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [234] -> SHIFT '[' GOTO 143
	expression/L8 = expression . "==" expression, FOLLOW [234] -> SHIFT "==" GOTO 144
	expression/L8 = expression . "!=" expression, FOLLOW [234] -> SHIFT "!=" GOTO 145
	expression/L8 = expression . ">=" expression, FOLLOW [234] -> SHIFT ">=" GOTO 146
	expression/L8 = expression . "<=" expression, FOLLOW [234] -> SHIFT "<=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [234] -> SHIFT '>' GOTO 148
	expression/L8 = expression . "<" expression, FOLLOW [234] -> SHIFT '<' GOTO 149
	expression/L3 = expression . "+=" expression, FOLLOW [234] -> SHIFT "+=" GOTO 150
	expression/L3 = expression . "-=" expression, FOLLOW [234] -> SHIFT "-=" GOTO 151
	expression/L3 = expression . "*=" expression, FOLLOW [234] -> SHIFT "*=" GOTO 152
	expression/L3 = expression . "/=" expression, FOLLOW [234] -> SHIFT "/=" GOTO 153
	expression/L3 = expression . "^=" expression, FOLLOW [234] -> SHIFT "^=" GOTO 154
	expression/L3 = expression . "&=" expression, FOLLOW [234] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "&=" expression, FOLLOW [234] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "%=" expression, FOLLOW [234] -> SHIFT "%=" GOTO 156
	expression/L3 = expression . "&&=" expression, FOLLOW [234] -> SHIFT "&&=" GOTO 157
	expression/L3 = expression . "||=" expression, FOLLOW [234] -> SHIFT "||=" GOTO 158
	expression/L3 = expression . "|=" expression, FOLLOW [234] -> SHIFT "|=" GOTO 159
	expression/L3 = expression . "<<=" expression, FOLLOW [234] -> SHIFT "<<=" GOTO 160
	expression/L3 = expression . ">>=" expression, FOLLOW [234] -> SHIFT ">>=" GOTO 161
	expression/L12 = expression . "." IDENT, FOLLOW [234] -> SHIFT '.' GOTO 162
[164]
	iexpression = expression . indirection IDENT, FOLLOW [234] -> GOTO 126
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [234] -> SHIFT '(' GOTO 127
	expression/L13 = expression . "(" ")", FOLLOW [234] -> SHIFT '(' GOTO 127
	expression/L7 = expression . "&" expression, FOLLOW [234] -> SHIFT '&' GOTO 129
	expression/L7 = expression . "^" expression, FOLLOW [234] -> SHIFT '^' GOTO 130
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 131
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 131
	expression/L3 = expression . "=" expression, FOLLOW [234] -> SHIFT '=' GOTO 132
	expression/L9 = expression . "+" expression, FOLLOW [234] -> SHIFT '+' GOTO 133
	expression/L9 = expression . "-" expression, FOLLOW [234] -> SHIFT '-' GOTO 134
	expression/L10 = expression . "*" expression, FOLLOW [234] -> SHIFT '*' GOTO 135
	expression/L10 = expression . "/" expression, FOLLOW [234] -> SHIFT '/' GOTO 136
	expression/L10 = expression . "%" expression, FOLLOW [234] -> SHIFT '%' GOTO 137
	expression/L5 = expression . "&&" expression, FOLLOW [234] -> SHIFT "&&" GOTO 138
	expression/L4 = expression . "||" expression, FOLLOW [234] -> SHIFT "||" GOTO 139
	expression/L6 = expression . "|" expression, FOLLOW [234] -> SHIFT '|' GOTO 140
	expression/L11 = expression . "<<" expression, FOLLOW [234] -> SHIFT "<<" GOTO 141
	expression/L11 = expression . ">>" expression, FOLLOW [234] -> SHIFT ">>" GOTO 142
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [234] -> SHIFT '[' GOTO 143
	expression/L8 = expression . "==" expression, FOLLOW [234] -> SHIFT "==" GOTO 144
	expression/L8 = expression . "!=" expression, FOLLOW [234] -> SHIFT "!=" GOTO 145
	expression/L8 = expression . ">=" expression, FOLLOW [234] -> SHIFT ">=" GOTO 146
	expression/L8 = expression . "<=" expression, FOLLOW [234] -> SHIFT "<=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [234] -> SHIFT '>' GOTO 148
	expression/L8 = expression . "<" expression, FOLLOW [234] -> SHIFT '<' GOTO 149
	expression/L3 = expression . "+=" expression, FOLLOW [234] -> SHIFT "+=" GOTO 150
	expression/L3 = expression . "-=" expression, FOLLOW [234] -> SHIFT "-=" GOTO 151
	expression/L3 = expression . "*=" expression, FOLLOW [234] -> SHIFT "*=" GOTO 152
	expression/L3 = expression . "/=" expression, FOLLOW [234] -> SHIFT "/=" GOTO 153
	expression/L3 = expression . "^=" expression, FOLLOW [234] -> SHIFT "^=" GOTO 154
	expression/L3 = expression . "&=" expression, FOLLOW [234] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "&=" expression, FOLLOW [234] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "%=" expression, FOLLOW [234] -> SHIFT "%=" GOTO 156
	expression/L3 = expression . "&&=" expression, FOLLOW [234] -> SHIFT "&&=" GOTO 157
	expression/L3 = expression . "||=" expression, FOLLOW [234] -> SHIFT "||=" GOTO 158
	expression/L3 = expression . "|=" expression, FOLLOW [234] -> SHIFT "|=" GOTO 159
	expression/L3 = expression . "<<=" expression, FOLLOW [234] -> SHIFT "<<=" GOTO 160
	expression/L3 = expression . ">>=" expression, FOLLOW [234] -> SHIFT ">>=" GOTO 161
	expression/L12 = expression . "." IDENT, FOLLOW [234] -> SHIFT '.' GOTO 162
	expression/L9 = "&" expression . (103), FOLLOW [234] -> REDUCE expression #2 CALL operator "&"
[165]
	statement/L1 = "{" codeblock . "}", FOLLOW [97] -> SHIFT '}' GOTO 245
[166]
	iexpression = expression . indirection IDENT, FOLLOW [177] -> GOTO 126
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [177] -> SHIFT '(' GOTO 127
	expression/L13 = expression . "(" ")", FOLLOW [177] -> SHIFT '(' GOTO 127
	statement/L1 = expression . ";", FOLLOW [97] -> SHIFT ';' GOTO 128
	expressionlist = expression . "," expressionlist, FOLLOW [16] -> SHIFT ',' GOTO 246
	expression/L7 = expression . "&" expression, FOLLOW [177] -> SHIFT '&' GOTO 129
	expression/L7 = expression . "^" expression, FOLLOW [177] -> SHIFT '^' GOTO 130
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 131
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 131
	expression/L3 = expression . "=" expression, FOLLOW [177] -> SHIFT '=' GOTO 132
	expression/L9 = expression . "+" expression, FOLLOW [177] -> SHIFT '+' GOTO 133
	expression/L9 = expression . "-" expression, FOLLOW [177] -> SHIFT '-' GOTO 134
	expression/L10 = expression . "*" expression, FOLLOW [177] -> SHIFT '*' GOTO 135
	expression/L10 = expression . "/" expression, FOLLOW [177] -> SHIFT '/' GOTO 136
	expression/L10 = expression . "%" expression, FOLLOW [177] -> SHIFT '%' GOTO 137
	expression/L5 = expression . "&&" expression, FOLLOW [177] -> SHIFT "&&" GOTO 138
	expression/L4 = expression . "||" expression, FOLLOW [177] -> SHIFT "||" GOTO 139
	expression/L6 = expression . "|" expression, FOLLOW [177] -> SHIFT '|' GOTO 140
	expression/L11 = expression . "<<" expression, FOLLOW [177] -> SHIFT "<<" GOTO 141
	expression/L11 = expression . ">>" expression, FOLLOW [177] -> SHIFT ">>" GOTO 142
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [177] -> SHIFT '[' GOTO 143
	expression/L8 = expression . "==" expression, FOLLOW [177] -> SHIFT "==" GOTO 144
	expression/L8 = expression . "!=" expression, FOLLOW [177] -> SHIFT "!=" GOTO 145
	expression/L8 = expression . ">=" expression, FOLLOW [177] -> SHIFT ">=" GOTO 146
	expression/L8 = expression . "<=" expression, FOLLOW [177] -> SHIFT "<=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [177] -> SHIFT '>' GOTO 148
	expression/L8 = expression . "<" expression, FOLLOW [177] -> SHIFT '<' GOTO 149
	expression/L3 = expression . "+=" expression, FOLLOW [177] -> SHIFT "+=" GOTO 150
	expression/L3 = expression . "-=" expression, FOLLOW [177] -> SHIFT "-=" GOTO 151
	expression/L3 = expression . "*=" expression, FOLLOW [177] -> SHIFT "*=" GOTO 152
	expression/L3 = expression . "/=" expression, FOLLOW [177] -> SHIFT "/=" GOTO 153
	expression/L3 = expression . "^=" expression, FOLLOW [177] -> SHIFT "^=" GOTO 154
	expression/L3 = expression . "&=" expression, FOLLOW [177] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "&=" expression, FOLLOW [177] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "%=" expression, FOLLOW [177] -> SHIFT "%=" GOTO 156
	expression/L3 = expression . "&&=" expression, FOLLOW [177] -> SHIFT "&&=" GOTO 157
	expression/L3 = expression . "||=" expression, FOLLOW [177] -> SHIFT "||=" GOTO 158
	expression/L3 = expression . "|=" expression, FOLLOW [177] -> SHIFT "|=" GOTO 159
	expression/L3 = expression . "<<=" expression, FOLLOW [177] -> SHIFT "<<=" GOTO 160
	expression/L3 = expression . ">>=" expression, FOLLOW [177] -> SHIFT ">>=" GOTO 161
	expression/L12 = expression . "." IDENT, FOLLOW [177] -> SHIFT '.' GOTO 162
	expressionlist = expression ., FOLLOW [16] -> REDUCE expressionlist #1
[167]
	expression/L1 = "{" expressionlist . "}", FOLLOW [234] -> SHIFT '}' GOTO 247
[168]
	expression/L1 = "{" "}" . (76), FOLLOW [234] -> REDUCE expression #2 CALL structure
[169]
	iexpression = expression . indirection IDENT, FOLLOW [234] -> GOTO 126
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [234] -> SHIFT '(' GOTO 127
	expression/L13 = expression . "(" ")", FOLLOW [234] -> SHIFT '(' GOTO 127
	expression/L7 = expression . "&" expression, FOLLOW [234] -> SHIFT '&' GOTO 129
	expression/L7 = expression . "^" expression, FOLLOW [234] -> SHIFT '^' GOTO 130
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 131
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 131
	expression/L3 = expression . "=" expression, FOLLOW [234] -> SHIFT '=' GOTO 132
	expression/L9 = expression . "+" expression, FOLLOW [234] -> SHIFT '+' GOTO 133
	expression/L9 = expression . "-" expression, FOLLOW [234] -> SHIFT '-' GOTO 134
	expression/L10 = expression . "*" expression, FOLLOW [234] -> SHIFT '*' GOTO 135
	expression/L10 = expression . "/" expression, FOLLOW [234] -> SHIFT '/' GOTO 136
	expression/L10 = expression . "%" expression, FOLLOW [234] -> SHIFT '%' GOTO 137
	expression/L5 = expression . "&&" expression, FOLLOW [234] -> SHIFT "&&" GOTO 138
	expression/L4 = expression . "||" expression, FOLLOW [234] -> SHIFT "||" GOTO 139
	expression/L6 = expression . "|" expression, FOLLOW [234] -> SHIFT '|' GOTO 140
	expression/L11 = expression . "<<" expression, FOLLOW [234] -> SHIFT "<<" GOTO 141
	expression/L11 = expression . ">>" expression, FOLLOW [234] -> SHIFT ">>" GOTO 142
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [234] -> SHIFT '[' GOTO 143
	expression/L8 = expression . "==" expression, FOLLOW [234] -> SHIFT "==" GOTO 144
	expression/L8 = expression . "!=" expression, FOLLOW [234] -> SHIFT "!=" GOTO 145
	expression/L8 = expression . ">=" expression, FOLLOW [234] -> SHIFT ">=" GOTO 146
	expression/L8 = expression . "<=" expression, FOLLOW [234] -> SHIFT "<=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [234] -> SHIFT '>' GOTO 148
	expression/L8 = expression . "<" expression, FOLLOW [234] -> SHIFT '<' GOTO 149
	expression/L3 = expression . "+=" expression, FOLLOW [234] -> SHIFT "+=" GOTO 150
	expression/L3 = expression . "-=" expression, FOLLOW [234] -> SHIFT "-=" GOTO 151
	expression/L3 = expression . "*=" expression, FOLLOW [234] -> SHIFT "*=" GOTO 152
	expression/L3 = expression . "/=" expression, FOLLOW [234] -> SHIFT "/=" GOTO 153
	expression/L3 = expression . "^=" expression, FOLLOW [234] -> SHIFT "^=" GOTO 154
	expression/L3 = expression . "&=" expression, FOLLOW [234] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "&=" expression, FOLLOW [234] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "%=" expression, FOLLOW [234] -> SHIFT "%=" GOTO 156
	expression/L3 = expression . "&&=" expression, FOLLOW [234] -> SHIFT "&&=" GOTO 157
	expression/L3 = expression . "||=" expression, FOLLOW [234] -> SHIFT "||=" GOTO 158
	expression/L3 = expression . "|=" expression, FOLLOW [234] -> SHIFT "|=" GOTO 159
	expression/L3 = expression . "<<=" expression, FOLLOW [234] -> SHIFT "<<=" GOTO 160
	expression/L3 = expression . ">>=" expression, FOLLOW [234] -> SHIFT ">>=" GOTO 161
	expression/L12 = expression . "." IDENT, FOLLOW [234] -> SHIFT '.' GOTO 162
	expression/L9 = "+" expression . (110), FOLLOW [234] -> REDUCE expression #2 CALL operator "+"
[170]
	iexpression = expression . indirection IDENT, FOLLOW [234] -> GOTO 126
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [234] -> SHIFT '(' GOTO 127
	expression/L13 = expression . "(" ")", FOLLOW [234] -> SHIFT '(' GOTO 127
	expression/L7 = expression . "&" expression, FOLLOW [234] -> SHIFT '&' GOTO 129
	expression/L7 = expression . "^" expression, FOLLOW [234] -> SHIFT '^' GOTO 130
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 131
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 131
	expression/L3 = expression . "=" expression, FOLLOW [234] -> SHIFT '=' GOTO 132
	expression/L9 = expression . "+" expression, FOLLOW [234] -> SHIFT '+' GOTO 133
	expression/L9 = expression . "-" expression, FOLLOW [234] -> SHIFT '-' GOTO 134
	expression/L10 = expression . "*" expression, FOLLOW [234] -> SHIFT '*' GOTO 135
	expression/L10 = expression . "/" expression, FOLLOW [234] -> SHIFT '/' GOTO 136
	expression/L10 = expression . "%" expression, FOLLOW [234] -> SHIFT '%' GOTO 137
	expression/L5 = expression . "&&" expression, FOLLOW [234] -> SHIFT "&&" GOTO 138
	expression/L4 = expression . "||" expression, FOLLOW [234] -> SHIFT "||" GOTO 139
	expression/L6 = expression . "|" expression, FOLLOW [234] -> SHIFT '|' GOTO 140
	expression/L11 = expression . "<<" expression, FOLLOW [234] -> SHIFT "<<" GOTO 141
	expression/L11 = expression . ">>" expression, FOLLOW [234] -> SHIFT ">>" GOTO 142
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [234] -> SHIFT '[' GOTO 143
	expression/L8 = expression . "==" expression, FOLLOW [234] -> SHIFT "==" GOTO 144
	expression/L8 = expression . "!=" expression, FOLLOW [234] -> SHIFT "!=" GOTO 145
	expression/L8 = expression . ">=" expression, FOLLOW [234] -> SHIFT ">=" GOTO 146
	expression/L8 = expression . "<=" expression, FOLLOW [234] -> SHIFT "<=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [234] -> SHIFT '>' GOTO 148
	expression/L8 = expression . "<" expression, FOLLOW [234] -> SHIFT '<' GOTO 149
	expression/L3 = expression . "+=" expression, FOLLOW [234] -> SHIFT "+=" GOTO 150
	expression/L3 = expression . "-=" expression, FOLLOW [234] -> SHIFT "-=" GOTO 151
	expression/L3 = expression . "*=" expression, FOLLOW [234] -> SHIFT "*=" GOTO 152
	expression/L3 = expression . "/=" expression, FOLLOW [234] -> SHIFT "/=" GOTO 153
	expression/L3 = expression . "^=" expression, FOLLOW [234] -> SHIFT "^=" GOTO 154
	expression/L3 = expression . "&=" expression, FOLLOW [234] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "&=" expression, FOLLOW [234] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "%=" expression, FOLLOW [234] -> SHIFT "%=" GOTO 156
	expression/L3 = expression . "&&=" expression, FOLLOW [234] -> SHIFT "&&=" GOTO 157
	expression/L3 = expression . "||=" expression, FOLLOW [234] -> SHIFT "||=" GOTO 158
	expression/L3 = expression . "|=" expression, FOLLOW [234] -> SHIFT "|=" GOTO 159
	expression/L3 = expression . "<<=" expression, FOLLOW [234] -> SHIFT "<<=" GOTO 160
	expression/L3 = expression . ">>=" expression, FOLLOW [234] -> SHIFT ">>=" GOTO 161
	expression/L12 = expression . "." IDENT, FOLLOW [234] -> SHIFT '.' GOTO 162
	expression/L9 = "-" expression . (111), FOLLOW [234] -> REDUCE expression #2 CALL operator "-"
[171]
	iexpression = expression . indirection IDENT, FOLLOW [234] -> GOTO 126
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [234] -> SHIFT '(' GOTO 127
	expression/L13 = expression . "(" ")", FOLLOW [234] -> SHIFT '(' GOTO 127
	expression/L7 = expression . "&" expression, FOLLOW [234] -> SHIFT '&' GOTO 129
	expression/L7 = expression . "^" expression, FOLLOW [234] -> SHIFT '^' GOTO 130
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 131
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 131
	expression/L3 = expression . "=" expression, FOLLOW [234] -> SHIFT '=' GOTO 132
	expression/L9 = expression . "+" expression, FOLLOW [234] -> SHIFT '+' GOTO 133
	expression/L9 = expression . "-" expression, FOLLOW [234] -> SHIFT '-' GOTO 134
	expression/L10 = expression . "*" expression, FOLLOW [234] -> SHIFT '*' GOTO 135
	expression/L10 = expression . "/" expression, FOLLOW [234] -> SHIFT '/' GOTO 136
	expression/L10 = expression . "%" expression, FOLLOW [234] -> SHIFT '%' GOTO 137
	expression/L5 = expression . "&&" expression, FOLLOW [234] -> SHIFT "&&" GOTO 138
	expression/L4 = expression . "||" expression, FOLLOW [234] -> SHIFT "||" GOTO 139
	expression/L6 = expression . "|" expression, FOLLOW [234] -> SHIFT '|' GOTO 140
	expression/L11 = expression . "<<" expression, FOLLOW [234] -> SHIFT "<<" GOTO 141
	expression/L11 = expression . ">>" expression, FOLLOW [234] -> SHIFT ">>" GOTO 142
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [234] -> SHIFT '[' GOTO 143
	expression/L8 = expression . "==" expression, FOLLOW [234] -> SHIFT "==" GOTO 144
	expression/L8 = expression . "!=" expression, FOLLOW [234] -> SHIFT "!=" GOTO 145
	expression/L8 = expression . ">=" expression, FOLLOW [234] -> SHIFT ">=" GOTO 146
	expression/L8 = expression . "<=" expression, FOLLOW [234] -> SHIFT "<=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [234] -> SHIFT '>' GOTO 148
	expression/L8 = expression . "<" expression, FOLLOW [234] -> SHIFT '<' GOTO 149
	expression/L3 = expression . "+=" expression, FOLLOW [234] -> SHIFT "+=" GOTO 150
	expression/L3 = expression . "-=" expression, FOLLOW [234] -> SHIFT "-=" GOTO 151
	expression/L3 = expression . "*=" expression, FOLLOW [234] -> SHIFT "*=" GOTO 152
	expression/L3 = expression . "/=" expression, FOLLOW [234] -> SHIFT "/=" GOTO 153
	expression/L3 = expression . "^=" expression, FOLLOW [234] -> SHIFT "^=" GOTO 154
	expression/L3 = expression . "&=" expression, FOLLOW [234] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "&=" expression, FOLLOW [234] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "%=" expression, FOLLOW [234] -> SHIFT "%=" GOTO 156
	expression/L3 = expression . "&&=" expression, FOLLOW [234] -> SHIFT "&&=" GOTO 157
	expression/L3 = expression . "||=" expression, FOLLOW [234] -> SHIFT "||=" GOTO 158
	expression/L3 = expression . "|=" expression, FOLLOW [234] -> SHIFT "|=" GOTO 159
	expression/L3 = expression . "<<=" expression, FOLLOW [234] -> SHIFT "<<=" GOTO 160
	expression/L3 = expression . ">>=" expression, FOLLOW [234] -> SHIFT ">>=" GOTO 161
	expression/L12 = expression . "." IDENT, FOLLOW [234] -> SHIFT '.' GOTO 162
	expression/L12 = "*" expression . (120), FOLLOW [234] -> REDUCE expression #2 CALL operator "->"
[172]
	iexpression = expression . indirection IDENT, FOLLOW [234] -> GOTO 126
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [234] -> SHIFT '(' GOTO 127
	expression/L13 = expression . "(" ")", FOLLOW [234] -> SHIFT '(' GOTO 127
	expression/L7 = expression . "&" expression, FOLLOW [234] -> SHIFT '&' GOTO 129
	expression/L7 = expression . "^" expression, FOLLOW [234] -> SHIFT '^' GOTO 130
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 131
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 131
	expression/L3 = expression . "=" expression, FOLLOW [234] -> SHIFT '=' GOTO 132
	expression/L9 = expression . "+" expression, FOLLOW [234] -> SHIFT '+' GOTO 133
	expression/L9 = expression . "-" expression, FOLLOW [234] -> SHIFT '-' GOTO 134
	expression/L10 = expression . "*" expression, FOLLOW [234] -> SHIFT '*' GOTO 135
	expression/L10 = expression . "/" expression, FOLLOW [234] -> SHIFT '/' GOTO 136
	expression/L10 = expression . "%" expression, FOLLOW [234] -> SHIFT '%' GOTO 137
	expression/L5 = expression . "&&" expression, FOLLOW [234] -> SHIFT "&&" GOTO 138
	expression/L4 = expression . "||" expression, FOLLOW [234] -> SHIFT "||" GOTO 139
	expression/L6 = expression . "|" expression, FOLLOW [234] -> SHIFT '|' GOTO 140
	expression/L11 = expression . "<<" expression, FOLLOW [234] -> SHIFT "<<" GOTO 141
	expression/L11 = expression . ">>" expression, FOLLOW [234] -> SHIFT ">>" GOTO 142
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [234] -> SHIFT '[' GOTO 143
	expression/L8 = expression . "==" expression, FOLLOW [234] -> SHIFT "==" GOTO 144
	expression/L8 = expression . "!=" expression, FOLLOW [234] -> SHIFT "!=" GOTO 145
	expression/L8 = expression . ">=" expression, FOLLOW [234] -> SHIFT ">=" GOTO 146
	expression/L8 = expression . "<=" expression, FOLLOW [234] -> SHIFT "<=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [234] -> SHIFT '>' GOTO 148
	expression/L8 = expression . "<" expression, FOLLOW [234] -> SHIFT '<' GOTO 149
	expression/L3 = expression . "+=" expression, FOLLOW [234] -> SHIFT "+=" GOTO 150
	expression/L3 = expression . "-=" expression, FOLLOW [234] -> SHIFT "-=" GOTO 151
	expression/L3 = expression . "*=" expression, FOLLOW [234] -> SHIFT "*=" GOTO 152
	expression/L3 = expression . "/=" expression, FOLLOW [234] -> SHIFT "/=" GOTO 153
	expression/L3 = expression . "^=" expression, FOLLOW [234] -> SHIFT "^=" GOTO 154
	expression/L3 = expression . "&=" expression, FOLLOW [234] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "&=" expression, FOLLOW [234] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "%=" expression, FOLLOW [234] -> SHIFT "%=" GOTO 156
	expression/L3 = expression . "&&=" expression, FOLLOW [234] -> SHIFT "&&=" GOTO 157
	expression/L3 = expression . "||=" expression, FOLLOW [234] -> SHIFT "||=" GOTO 158
	expression/L3 = expression . "|=" expression, FOLLOW [234] -> SHIFT "|=" GOTO 159
	expression/L3 = expression . "<<=" expression, FOLLOW [234] -> SHIFT "<<=" GOTO 160
	expression/L3 = expression . ">>=" expression, FOLLOW [234] -> SHIFT ">>=" GOTO 161
	expression/L12 = expression . "." IDENT, FOLLOW [234] -> SHIFT '.' GOTO 162
	expression/L9 = "~" expression . (112), FOLLOW [234] -> REDUCE expression #2 CALL operator "~"
[173]
	iexpression = expression . indirection IDENT, FOLLOW [234] -> GOTO 126
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [234] -> SHIFT '(' GOTO 127
	expression/L13 = expression . "(" ")", FOLLOW [234] -> SHIFT '(' GOTO 127
	expression/L7 = expression . "&" expression, FOLLOW [234] -> SHIFT '&' GOTO 129
	expression/L7 = expression . "^" expression, FOLLOW [234] -> SHIFT '^' GOTO 130
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 131
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 131
	expression/L3 = expression . "=" expression, FOLLOW [234] -> SHIFT '=' GOTO 132
	expression/L9 = expression . "+" expression, FOLLOW [234] -> SHIFT '+' GOTO 133
	expression/L9 = expression . "-" expression, FOLLOW [234] -> SHIFT '-' GOTO 134
	expression/L10 = expression . "*" expression, FOLLOW [234] -> SHIFT '*' GOTO 135
	expression/L10 = expression . "/" expression, FOLLOW [234] -> SHIFT '/' GOTO 136
	expression/L10 = expression . "%" expression, FOLLOW [234] -> SHIFT '%' GOTO 137
	expression/L5 = expression . "&&" expression, FOLLOW [234] -> SHIFT "&&" GOTO 138
	expression/L4 = expression . "||" expression, FOLLOW [234] -> SHIFT "||" GOTO 139
	expression/L6 = expression . "|" expression, FOLLOW [234] -> SHIFT '|' GOTO 140
	expression/L11 = expression . "<<" expression, FOLLOW [234] -> SHIFT "<<" GOTO 141
	expression/L11 = expression . ">>" expression, FOLLOW [234] -> SHIFT ">>" GOTO 142
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [234] -> SHIFT '[' GOTO 143
	expression/L8 = expression . "==" expression, FOLLOW [234] -> SHIFT "==" GOTO 144
	expression/L8 = expression . "!=" expression, FOLLOW [234] -> SHIFT "!=" GOTO 145
	expression/L8 = expression . ">=" expression, FOLLOW [234] -> SHIFT ">=" GOTO 146
	expression/L8 = expression . "<=" expression, FOLLOW [234] -> SHIFT "<=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [234] -> SHIFT '>' GOTO 148
	expression/L8 = expression . "<" expression, FOLLOW [234] -> SHIFT '<' GOTO 149
	expression/L3 = expression . "+=" expression, FOLLOW [234] -> SHIFT "+=" GOTO 150
	expression/L3 = expression . "-=" expression, FOLLOW [234] -> SHIFT "-=" GOTO 151
	expression/L3 = expression . "*=" expression, FOLLOW [234] -> SHIFT "*=" GOTO 152
	expression/L3 = expression . "/=" expression, FOLLOW [234] -> SHIFT "/=" GOTO 153
	expression/L3 = expression . "^=" expression, FOLLOW [234] -> SHIFT "^=" GOTO 154
	expression/L3 = expression . "&=" expression, FOLLOW [234] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "&=" expression, FOLLOW [234] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "%=" expression, FOLLOW [234] -> SHIFT "%=" GOTO 156
	expression/L3 = expression . "&&=" expression, FOLLOW [234] -> SHIFT "&&=" GOTO 157
	expression/L3 = expression . "||=" expression, FOLLOW [234] -> SHIFT "||=" GOTO 158
	expression/L3 = expression . "|=" expression, FOLLOW [234] -> SHIFT "|=" GOTO 159
	expression/L3 = expression . "<<=" expression, FOLLOW [234] -> SHIFT "<<=" GOTO 160
	expression/L3 = expression . ">>=" expression, FOLLOW [234] -> SHIFT ">>=" GOTO 161
	expression/L12 = expression . "." IDENT, FOLLOW [234] -> SHIFT '.' GOTO 162
	expression/L9 = "!" expression . (113), FOLLOW [234] -> REDUCE expression #2 CALL operator "!"
[174]
	statement/L1 = "var" variabledefinition . ";", FOLLOW [97] -> SHIFT ';' GOTO 248
[175]
	iexpression = expression . indirection IDENT, FOLLOW [96] -> GOTO 126
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [96] -> SHIFT '(' GOTO 127
	expression/L13 = expression . "(" ")", FOLLOW [96] -> SHIFT '(' GOTO 127
	statement/L1 = "return" expression . ";", FOLLOW [97] -> SHIFT ';' GOTO 249
	expression/L7 = expression . "&" expression, FOLLOW [96] -> SHIFT '&' GOTO 129
	expression/L7 = expression . "^" expression, FOLLOW [96] -> SHIFT '^' GOTO 130
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 131
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 131
	expression/L3 = expression . "=" expression, FOLLOW [96] -> SHIFT '=' GOTO 132
	expression/L9 = expression . "+" expression, FOLLOW [96] -> SHIFT '+' GOTO 133
	expression/L9 = expression . "-" expression, FOLLOW [96] -> SHIFT '-' GOTO 134
	expression/L10 = expression . "*" expression, FOLLOW [96] -> SHIFT '*' GOTO 135
	expression/L10 = expression . "/" expression, FOLLOW [96] -> SHIFT '/' GOTO 136
	expression/L10 = expression . "%" expression, FOLLOW [96] -> SHIFT '%' GOTO 137
	expression/L5 = expression . "&&" expression, FOLLOW [96] -> SHIFT "&&" GOTO 138
	expression/L4 = expression . "||" expression, FOLLOW [96] -> SHIFT "||" GOTO 139
	expression/L6 = expression . "|" expression, FOLLOW [96] -> SHIFT '|' GOTO 140
	expression/L11 = expression . "<<" expression, FOLLOW [96] -> SHIFT "<<" GOTO 141
	expression/L11 = expression . ">>" expression, FOLLOW [96] -> SHIFT ">>" GOTO 142
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [96] -> SHIFT '[' GOTO 143
	expression/L8 = expression . "==" expression, FOLLOW [96] -> SHIFT "==" GOTO 144
	expression/L8 = expression . "!=" expression, FOLLOW [96] -> SHIFT "!=" GOTO 145
	expression/L8 = expression . ">=" expression, FOLLOW [96] -> SHIFT ">=" GOTO 146
	expression/L8 = expression . "<=" expression, FOLLOW [96] -> SHIFT "<=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [96] -> SHIFT '>' GOTO 148
	expression/L8 = expression . "<" expression, FOLLOW [96] -> SHIFT '<' GOTO 149
	expression/L3 = expression . "+=" expression, FOLLOW [96] -> SHIFT "+=" GOTO 150
	expression/L3 = expression . "-=" expression, FOLLOW [96] -> SHIFT "-=" GOTO 151
	expression/L3 = expression . "*=" expression, FOLLOW [96] -> SHIFT "*=" GOTO 152
	expression/L3 = expression . "/=" expression, FOLLOW [96] -> SHIFT "/=" GOTO 153
	expression/L3 = expression . "^=" expression, FOLLOW [96] -> SHIFT "^=" GOTO 154
	expression/L3 = expression . "&=" expression, FOLLOW [96] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "&=" expression, FOLLOW [96] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "%=" expression, FOLLOW [96] -> SHIFT "%=" GOTO 156
	expression/L3 = expression . "&&=" expression, FOLLOW [96] -> SHIFT "&&=" GOTO 157
	expression/L3 = expression . "||=" expression, FOLLOW [96] -> SHIFT "||=" GOTO 158
	expression/L3 = expression . "|=" expression, FOLLOW [96] -> SHIFT "|=" GOTO 159
	expression/L3 = expression . "<<=" expression, FOLLOW [96] -> SHIFT "<<=" GOTO 160
	expression/L3 = expression . ">>=" expression, FOLLOW [96] -> SHIFT ">>=" GOTO 161
	expression/L12 = expression . "." IDENT, FOLLOW [96] -> SHIFT '.' GOTO 162
[176]
	iexpression = expression . indirection IDENT, FOLLOW [96] -> GOTO 126
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [96] -> SHIFT '(' GOTO 127
	expression/L13 = expression . "(" ")", FOLLOW [96] -> SHIFT '(' GOTO 127
	statement/L1 = "delete" expression . ";", FOLLOW [97] -> SHIFT ';' GOTO 250
	expression/L7 = expression . "&" expression, FOLLOW [96] -> SHIFT '&' GOTO 129
	expression/L7 = expression . "^" expression, FOLLOW [96] -> SHIFT '^' GOTO 130
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 131
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 131
	expression/L3 = expression . "=" expression, FOLLOW [96] -> SHIFT '=' GOTO 132
	expression/L9 = expression . "+" expression, FOLLOW [96] -> SHIFT '+' GOTO 133
	expression/L9 = expression . "-" expression, FOLLOW [96] -> SHIFT '-' GOTO 134
	expression/L10 = expression . "*" expression, FOLLOW [96] -> SHIFT '*' GOTO 135
	expression/L10 = expression . "/" expression, FOLLOW [96] -> SHIFT '/' GOTO 136
	expression/L10 = expression . "%" expression, FOLLOW [96] -> SHIFT '%' GOTO 137
	expression/L5 = expression . "&&" expression, FOLLOW [96] -> SHIFT "&&" GOTO 138
	expression/L4 = expression . "||" expression, FOLLOW [96] -> SHIFT "||" GOTO 139
	expression/L6 = expression . "|" expression, FOLLOW [96] -> SHIFT '|' GOTO 140
	expression/L11 = expression . "<<" expression, FOLLOW [96] -> SHIFT "<<" GOTO 141
	expression/L11 = expression . ">>" expression, FOLLOW [96] -> SHIFT ">>" GOTO 142
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [96] -> SHIFT '[' GOTO 143
	expression/L8 = expression . "==" expression, FOLLOW [96] -> SHIFT "==" GOTO 144
	expression/L8 = expression . "!=" expression, FOLLOW [96] -> SHIFT "!=" GOTO 145
	expression/L8 = expression . ">=" expression, FOLLOW [96] -> SHIFT ">=" GOTO 146
	expression/L8 = expression . "<=" expression, FOLLOW [96] -> SHIFT "<=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [96] -> SHIFT '>' GOTO 148
	expression/L8 = expression . "<" expression, FOLLOW [96] -> SHIFT '<' GOTO 149
	expression/L3 = expression . "+=" expression, FOLLOW [96] -> SHIFT "+=" GOTO 150
	expression/L3 = expression . "-=" expression, FOLLOW [96] -> SHIFT "-=" GOTO 151
	expression/L3 = expression . "*=" expression, FOLLOW [96] -> SHIFT "*=" GOTO 152
	expression/L3 = expression . "/=" expression, FOLLOW [96] -> SHIFT "/=" GOTO 153
	expression/L3 = expression . "^=" expression, FOLLOW [96] -> SHIFT "^=" GOTO 154
	expression/L3 = expression . "&=" expression, FOLLOW [96] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "&=" expression, FOLLOW [96] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "%=" expression, FOLLOW [96] -> SHIFT "%=" GOTO 156
	expression/L3 = expression . "&&=" expression, FOLLOW [96] -> SHIFT "&&=" GOTO 157
	expression/L3 = expression . "||=" expression, FOLLOW [96] -> SHIFT "||=" GOTO 158
	expression/L3 = expression . "|=" expression, FOLLOW [96] -> SHIFT "|=" GOTO 159
	expression/L3 = expression . "<<=" expression, FOLLOW [96] -> SHIFT "<<=" GOTO 160
	expression/L3 = expression . ">>=" expression, FOLLOW [96] -> SHIFT ">>=" GOTO 161
	expression/L12 = expression . "." IDENT, FOLLOW [96] -> SHIFT '.' GOTO 162
[177]
	statement/L1 = "if" "(" . expression ")" "{" codeblock "}", FOLLOW [97] -> GOTO 251
	statement/L1 = "if" "(" . expression ")" "{" codeblock "}" "else" "{" codeblock "}", FOLLOW [97] -> GOTO 251
	expression/L3 = . expression "=" expression, FOLLOW [224] -> GOTO 251
	expression/L3 = . expression "+=" expression, FOLLOW [224] -> GOTO 251
	expression/L3 = . expression "-=" expression, FOLLOW [224] -> GOTO 251
	expression/L3 = . expression "*=" expression, FOLLOW [224] -> GOTO 251
	expression/L3 = . expression "/=" expression, FOLLOW [224] -> GOTO 251
	expression/L3 = . expression "^=" expression, FOLLOW [224] -> GOTO 251
	expression/L3 = . expression "&=" expression, FOLLOW [224] -> GOTO 251
	expression/L3 = . expression "%=" expression, FOLLOW [224] -> GOTO 251
	expression/L3 = . expression "&&=" expression, FOLLOW [224] -> GOTO 251
	expression/L3 = . expression "||=" expression, FOLLOW [224] -> GOTO 251
	expression/L3 = . expression "&=" expression, FOLLOW [224] -> GOTO 251
	expression/L3 = . expression "|=" expression, FOLLOW [224] -> GOTO 251
	expression/L3 = . expression "<<=" expression, FOLLOW [224] -> GOTO 251
	expression/L3 = . expression ">>=" expression, FOLLOW [224] -> GOTO 251
	expression/L4 = . expression "||" expression, FOLLOW [224] -> GOTO 251
	expression/L5 = . expression "&&" expression, FOLLOW [224] -> GOTO 251
	expression/L6 = . expression "|" expression, FOLLOW [224] -> GOTO 251
	expression/L7 = . expression "^" expression, FOLLOW [224] -> GOTO 251
	expression/L7 = . expression "&" expression, FOLLOW [224] -> GOTO 251
	expression/L8 = . expression "==" expression, FOLLOW [224] -> GOTO 251
	expression/L8 = . expression "!=" expression, FOLLOW [224] -> GOTO 251
	expression/L8 = . expression "<=" expression, FOLLOW [224] -> GOTO 251
	expression/L8 = . expression "<" expression, FOLLOW [224] -> GOTO 251
	expression/L8 = . expression ">=" expression, FOLLOW [224] -> GOTO 251
	expression/L8 = . expression ">" expression, FOLLOW [224] -> GOTO 251
	expression/L9 = . expression "+" expression, FOLLOW [224] -> GOTO 251
	expression/L9 = . expression "-" expression, FOLLOW [224] -> GOTO 251
	expression/L10 = . expression "*" expression, FOLLOW [224] -> GOTO 251
	expression/L10 = . expression "/" expression, FOLLOW [224] -> GOTO 251
	expression/L10 = . expression "%" expression, FOLLOW [224] -> GOTO 251
	expression/L11 = . expression "<<" expression, FOLLOW [224] -> GOTO 251
	expression/L11 = . expression ">>" expression, FOLLOW [224] -> GOTO 251
	expression/L12 = . expression "." IDENT, FOLLOW [224] -> GOTO 251
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [224] -> GOTO 251
	expression/L13 = . expression "(" ")", FOLLOW [224] -> GOTO 251
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [224] -> GOTO 251
	iexpression = . expression indirection IDENT, FOLLOW [224] -> GOTO 251
	expression/L12 = . iexpression, FOLLOW [224] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [224] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [224] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [224] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [224] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [224] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [224] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [224] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [224] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [224] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [224] -> SHIFT '{' GOTO 94
	expression/L1 = . "{" "}", FOLLOW [224] -> SHIFT '{' GOTO 94
	expression/L9 = . "+" expression, FOLLOW [224] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [224] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [224] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [224] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [224] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [224] -> SHIFT "new" GOTO 90
	expression/L2 = . "null", FOLLOW [224] -> SHIFT "null" GOTO 91
[178]
	statement/L1 = "while" "(" . expression ")" "{" codeblock "}", FOLLOW [97] -> GOTO 252
	expression/L3 = . expression "=" expression, FOLLOW [224] -> GOTO 252
	expression/L3 = . expression "+=" expression, FOLLOW [224] -> GOTO 252
	expression/L3 = . expression "-=" expression, FOLLOW [224] -> GOTO 252
	expression/L3 = . expression "*=" expression, FOLLOW [224] -> GOTO 252
	expression/L3 = . expression "/=" expression, FOLLOW [224] -> GOTO 252
	expression/L3 = . expression "^=" expression, FOLLOW [224] -> GOTO 252
	expression/L3 = . expression "&=" expression, FOLLOW [224] -> GOTO 252
	expression/L3 = . expression "%=" expression, FOLLOW [224] -> GOTO 252
	expression/L3 = . expression "&&=" expression, FOLLOW [224] -> GOTO 252
	expression/L3 = . expression "||=" expression, FOLLOW [224] -> GOTO 252
	expression/L3 = . expression "&=" expression, FOLLOW [224] -> GOTO 252
	expression/L3 = . expression "|=" expression, FOLLOW [224] -> GOTO 252
	expression/L3 = . expression "<<=" expression, FOLLOW [224] -> GOTO 252
	expression/L3 = . expression ">>=" expression, FOLLOW [224] -> GOTO 252
	expression/L4 = . expression "||" expression, FOLLOW [224] -> GOTO 252
	expression/L5 = . expression "&&" expression, FOLLOW [224] -> GOTO 252
	expression/L6 = . expression "|" expression, FOLLOW [224] -> GOTO 252
	expression/L7 = . expression "^" expression, FOLLOW [224] -> GOTO 252
	expression/L7 = . expression "&" expression, FOLLOW [224] -> GOTO 252
	expression/L8 = . expression "==" expression, FOLLOW [224] -> GOTO 252
	expression/L8 = . expression "!=" expression, FOLLOW [224] -> GOTO 252
	expression/L8 = . expression "<=" expression, FOLLOW [224] -> GOTO 252
	expression/L8 = . expression "<" expression, FOLLOW [224] -> GOTO 252
	expression/L8 = . expression ">=" expression, FOLLOW [224] -> GOTO 252
	expression/L8 = . expression ">" expression, FOLLOW [224] -> GOTO 252
	expression/L9 = . expression "+" expression, FOLLOW [224] -> GOTO 252
	expression/L9 = . expression "-" expression, FOLLOW [224] -> GOTO 252
	expression/L10 = . expression "*" expression, FOLLOW [224] -> GOTO 252
	expression/L10 = . expression "/" expression, FOLLOW [224] -> GOTO 252
	expression/L10 = . expression "%" expression, FOLLOW [224] -> GOTO 252
	expression/L11 = . expression "<<" expression, FOLLOW [224] -> GOTO 252
	expression/L11 = . expression ">>" expression, FOLLOW [224] -> GOTO 252
	expression/L12 = . expression "." IDENT, FOLLOW [224] -> GOTO 252
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [224] -> GOTO 252
	expression/L13 = . expression "(" ")", FOLLOW [224] -> GOTO 252
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [224] -> GOTO 252
	iexpression = . expression indirection IDENT, FOLLOW [224] -> GOTO 252
	expression/L12 = . iexpression, FOLLOW [224] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [224] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [224] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [224] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [224] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [224] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [224] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [224] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [224] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [224] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [224] -> SHIFT '{' GOTO 94
	expression/L1 = . "{" "}", FOLLOW [224] -> SHIFT '{' GOTO 94
	expression/L9 = . "+" expression, FOLLOW [224] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [224] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [224] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [224] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [224] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [224] -> SHIFT "new" GOTO 90
	expression/L2 = . "null", FOLLOW [224] -> SHIFT "null" GOTO 91
[179]
	expression/L1 = "new" typespec . ":" expression, FOLLOW [234] -> SHIFT ':' GOTO 253
[180]
	iexpression = expression . indirection IDENT, FOLLOW [234] -> GOTO 126
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [234] -> SHIFT '(' GOTO 127
	expression/L13 = expression . "(" ")", FOLLOW [234] -> SHIFT '(' GOTO 127
	expressionlist = expression . "," expressionlist, FOLLOW [238] -> SHIFT ',' GOTO 246
	expression/L7 = expression . "&" expression, FOLLOW [234] -> SHIFT '&' GOTO 129
	expression/L7 = expression . "^" expression, FOLLOW [234] -> SHIFT '^' GOTO 130
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 131
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 131
	expression/L3 = expression . "=" expression, FOLLOW [234] -> SHIFT '=' GOTO 132
	expression/L9 = expression . "+" expression, FOLLOW [234] -> SHIFT '+' GOTO 133
	expression/L9 = expression . "-" expression, FOLLOW [234] -> SHIFT '-' GOTO 134
	expression/L10 = expression . "*" expression, FOLLOW [234] -> SHIFT '*' GOTO 135
	expression/L10 = expression . "/" expression, FOLLOW [234] -> SHIFT '/' GOTO 136
	expression/L10 = expression . "%" expression, FOLLOW [234] -> SHIFT '%' GOTO 137
	expression/L5 = expression . "&&" expression, FOLLOW [234] -> SHIFT "&&" GOTO 138
	expression/L4 = expression . "||" expression, FOLLOW [234] -> SHIFT "||" GOTO 139
	expression/L6 = expression . "|" expression, FOLLOW [234] -> SHIFT '|' GOTO 140
	expression/L11 = expression . "<<" expression, FOLLOW [234] -> SHIFT "<<" GOTO 141
	expression/L11 = expression . ">>" expression, FOLLOW [234] -> SHIFT ">>" GOTO 142
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [234] -> SHIFT '[' GOTO 143
	expression/L8 = expression . "==" expression, FOLLOW [234] -> SHIFT "==" GOTO 144
	expression/L8 = expression . "!=" expression, FOLLOW [234] -> SHIFT "!=" GOTO 145
	expression/L8 = expression . ">=" expression, FOLLOW [234] -> SHIFT ">=" GOTO 146
	expression/L8 = expression . "<=" expression, FOLLOW [234] -> SHIFT "<=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [234] -> SHIFT '>' GOTO 148
	expression/L8 = expression . "<" expression, FOLLOW [234] -> SHIFT '<' GOTO 149
	expression/L3 = expression . "+=" expression, FOLLOW [234] -> SHIFT "+=" GOTO 150
	expression/L3 = expression . "-=" expression, FOLLOW [234] -> SHIFT "-=" GOTO 151
	expression/L3 = expression . "*=" expression, FOLLOW [234] -> SHIFT "*=" GOTO 152
	expression/L3 = expression . "/=" expression, FOLLOW [234] -> SHIFT "/=" GOTO 153
	expression/L3 = expression . "^=" expression, FOLLOW [234] -> SHIFT "^=" GOTO 154
	expression/L3 = expression . "&=" expression, FOLLOW [234] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "&=" expression, FOLLOW [234] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "%=" expression, FOLLOW [234] -> SHIFT "%=" GOTO 156
	expression/L3 = expression . "&&=" expression, FOLLOW [234] -> SHIFT "&&=" GOTO 157
	expression/L3 = expression . "||=" expression, FOLLOW [234] -> SHIFT "||=" GOTO 158
	expression/L3 = expression . "|=" expression, FOLLOW [234] -> SHIFT "|=" GOTO 159
	expression/L3 = expression . "<<=" expression, FOLLOW [234] -> SHIFT "<<=" GOTO 160
	expression/L3 = expression . ">>=" expression, FOLLOW [234] -> SHIFT ">>=" GOTO 161
	expression/L12 = expression . "." IDENT, FOLLOW [234] -> SHIFT '.' GOTO 162
	expressionlist = expression ., FOLLOW [238] -> REDUCE expressionlist #1
[181]
	variabledefinition = typespec IDENT "[" expression "]" . "=" expression, FOLLOW [13] -> SHIFT '=' GOTO 254
	variabledefinition = typespec IDENT "[" expression "]" . (step:75), FOLLOW [13] -> REDUCE variabledefinition #5 CALL vardef_array
[182]
	functiondefinition = linkage "function" typespec IDENT callablebody . (32), FOLLOW [244] -> REDUCE functiondefinition #5 CALL funcdef
[183]
	paramdecl = typespec . IDENT, FOLLOW [182] -> SHIFT IDENT GOTO 255
[184]
	callablebody = "(" parameterlist . ")" "{" codeblock "}", FOLLOW [244] -> SHIFT ')' GOTO 256
	callablebody = "(" parameterlist . ")" "const" "{" codeblock "}", FOLLOW [244] -> SHIFT ')' GOTO 256
[185]
	parameterlist = parameters . (62), FOLLOW [10] -> REDUCE parameterlist #1 CALL paramdeflist
[186]
	parameters = paramdecl . "," parameters, FOLLOW [10] -> SHIFT ',' GOTO 257
	parameters = paramdecl ., FOLLOW [10] -> REDUCE parameters #1
[187]
	typespec/L1 = "const" typename "^" "^" "&" . (24), FOLLOW [248] -> REDUCE typespec #5 CALL typespec "const^^&"
[188]
	structdefinition = "struct" IDENT "{" struct_definitionlist "}" . (step:26), FOLLOW [173] -> REDUCE structdefinition #5 CALL structdef
[189]
	struct_definitionlist = struct_definition struct_definitionlist ., FOLLOW [16] -> REDUCE struct_definitionlist #2
[190]
	interfacedefinition = "interface" IDENT "{" interface_definitionlist "}" . (step:27), FOLLOW [173] -> REDUCE interfacedefinition #5 CALL interfacedef
[191]
	interface_definitionlist = interface_definition interface_definitionlist ., FOLLOW [16] -> REDUCE interface_definitionlist #2
[192]
	interface_definition = "function" typespec . IDENT "(" parameterlist ")" ";", FOLLOW [169] -> SHIFT IDENT GOTO 258
	interface_definition = "function" typespec . IDENT "(" parameterlist ")" "const" ";", FOLLOW [169] -> SHIFT IDENT GOTO 258
[193]
	interface_definition = "procedure" IDENT . "(" parameterlist ")" ";", FOLLOW [169] -> SHIFT '(' GOTO 259
	interface_definition = "procedure" IDENT . "(" parameterlist ")" "const" ";", FOLLOW [169] -> SHIFT '(' GOTO 259
[194]
	classdefinition = "class" IDENT "{" class_definitionlist "}" . (step:29), FOLLOW [173] -> REDUCE classdefinition #5 CALL classdef
[195]
	class_definitionlist = class_definition class_definitionlist ., FOLLOW [16] -> REDUCE class_definitionlist #2
[196]
	class_definition = typedefinition ";" . (11), FOLLOW [172] -> REDUCE class_definition #2 CALL definition 1
[197]
	constructordefinition = linkage "constructor" . callablebody, FOLLOW [172] -> GOTO 260
	callablebody = . "(" parameterlist ")" "{" codeblock "}", FOLLOW [172] -> SHIFT '(' GOTO 98
	callablebody = . "(" parameterlist ")" "const" "{" codeblock "}", FOLLOW [172] -> SHIFT '(' GOTO 98
[198]
	operatordefinition = linkage "operator" . "(" ")" typespec callablebody, FOLLOW [172] -> SHIFT '(' GOTO 261
	operatordefinition = linkage "operator" . "&" typespec callablebody, FOLLOW [172] -> SHIFT '&' GOTO 262
	operatordefinition = linkage "operator" . "->" typespec callablebody, FOLLOW [172] -> SHIFT "->" GOTO 263
	operatordefinition = linkage "operator" . "=" typespec callablebody, FOLLOW [172] -> SHIFT '=' GOTO 264
	operatordefinition = linkage "operator" . "+" typespec callablebody, FOLLOW [172] -> SHIFT '+' GOTO 265
	operatordefinition = linkage "operator" . "-" typespec callablebody, FOLLOW [172] -> SHIFT '-' GOTO 266
	operatordefinition = linkage "operator" . "*" typespec callablebody, FOLLOW [172] -> SHIFT '*' GOTO 267
	operatordefinition = linkage "operator" . "/" typespec callablebody, FOLLOW [172] -> SHIFT '/' GOTO 268
	operatordefinition = linkage "operator" . "%" typespec callablebody, FOLLOW [172] -> SHIFT '%' GOTO 269
	operatordefinition = linkage "operator" . "&&" typespec callablebody, FOLLOW [172] -> SHIFT "&&" GOTO 270
	operatordefinition = linkage "operator" . "||" typespec callablebody, FOLLOW [172] -> SHIFT "||" GOTO 271
	operatordefinition = linkage "operator" . "|" typespec callablebody, FOLLOW [172] -> SHIFT '|' GOTO 272
	operatordefinition = linkage "operator" . "<<" typespec callablebody, FOLLOW [172] -> SHIFT "<<" GOTO 273
	operatordefinition = linkage "operator" . ">>" typespec callablebody, FOLLOW [172] -> SHIFT ">>" GOTO 274
	operatordefinition = linkage "operator" . "~" typespec callablebody, FOLLOW [172] -> SHIFT '~' GOTO 275
	operatordefinition = linkage "operator" . "!" typespec callablebody, FOLLOW [172] -> SHIFT '!' GOTO 276
	operatordefinition = linkage "operator" . "[" "]" typespec callablebody, FOLLOW [172] -> SHIFT '[' GOTO 277
	operatordefinition = linkage "operator" . "==" typespec callablebody, FOLLOW [172] -> SHIFT "==" GOTO 278
	operatordefinition = linkage "operator" . "!=" typespec callablebody, FOLLOW [172] -> SHIFT "!=" GOTO 279
	operatordefinition = linkage "operator" . ">=" typespec callablebody, FOLLOW [172] -> SHIFT ">=" GOTO 280
	operatordefinition = linkage "operator" . "<=" typespec callablebody, FOLLOW [172] -> SHIFT "<=" GOTO 281
	operatordefinition = linkage "operator" . ">" typespec callablebody, FOLLOW [172] -> SHIFT '>' GOTO 282
	operatordefinition = linkage "operator" . "<" typespec callablebody, FOLLOW [172] -> SHIFT '<' GOTO 283
[199]
	class_definition = variabledefinition ";" . (11), FOLLOW [172] -> REDUCE class_definition #2 CALL definition 1
[200]
	statement/L1 = . typedefinition ";", FOLLOW [97] -> GOTO 63
	functiondefinition = . linkage "function" typespec IDENT callablebody, FOLLOW [97] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [97] -> GOTO 14
	statement/L1 = . functiondefinition, FOLLOW [97] -> GOTO 64
	constructordefinition = "destructor" "{" . codeblock "}", FOLLOW [172] -> GOTO 284
	codeblock = . statementlist, FOLLOW [16] -> GOTO 66
	statementlist = . statement statementlist, FOLLOW [16] -> GOTO 67
	statement/L1 = . expression ";", FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "+=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "-=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "*=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "/=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "^=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "&=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "%=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "&&=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "||=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "&=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "|=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "<<=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression ">>=" expression, FOLLOW [96] -> GOTO 68
	expression/L4 = . expression "||" expression, FOLLOW [96] -> GOTO 68
	expression/L5 = . expression "&&" expression, FOLLOW [96] -> GOTO 68
	expression/L6 = . expression "|" expression, FOLLOW [96] -> GOTO 68
	expression/L7 = . expression "^" expression, FOLLOW [96] -> GOTO 68
	expression/L7 = . expression "&" expression, FOLLOW [96] -> GOTO 68
	expression/L8 = . expression "==" expression, FOLLOW [96] -> GOTO 68
	expression/L8 = . expression "!=" expression, FOLLOW [96] -> GOTO 68
	expression/L8 = . expression "<=" expression, FOLLOW [96] -> GOTO 68
	expression/L8 = . expression "<" expression, FOLLOW [96] -> GOTO 68
	expression/L8 = . expression ">=" expression, FOLLOW [96] -> GOTO 68
	expression/L8 = . expression ">" expression, FOLLOW [96] -> GOTO 68
	expression/L9 = . expression "+" expression, FOLLOW [96] -> GOTO 68
	expression/L9 = . expression "-" expression, FOLLOW [96] -> GOTO 68
	expression/L10 = . expression "*" expression, FOLLOW [96] -> GOTO 68
	expression/L10 = . expression "/" expression, FOLLOW [96] -> GOTO 68
	expression/L10 = . expression "%" expression, FOLLOW [96] -> GOTO 68
	expression/L11 = . expression "<<" expression, FOLLOW [96] -> GOTO 68
	expression/L11 = . expression ">>" expression, FOLLOW [96] -> GOTO 68
	expression/L12 = . expression "." IDENT, FOLLOW [96] -> GOTO 68
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [96] -> GOTO 68
	expression/L13 = . expression "(" ")", FOLLOW [96] -> GOTO 68
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [96] -> GOTO 68
	iexpression = . expression indirection IDENT, FOLLOW [96] -> GOTO 68
	expression/L12 = . iexpression, FOLLOW [96] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [96] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [96] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [96] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [96] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [96] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [96] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [96] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [96] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [96] -> SHIFT '&' GOTO 78
	typedefinition = . "typedef" typepath IDENT, FOLLOW [13] -> SHIFT "typedef" GOTO 19
	statement/L1 = . "{" codeblock "}", FOLLOW [97] -> SHIFT '{' GOTO 79
	expression/L1 = . "{" expressionlist "}", FOLLOW [96] -> SHIFT '{' GOTO 79
	expression/L1 = . "{" "}", FOLLOW [96] -> SHIFT '{' GOTO 79
	linkage = . "private", FOLLOW [60] -> SHIFT "private" GOTO 23
	linkage = . "public", FOLLOW [60] -> SHIFT "public" GOTO 24
	expression/L9 = . "+" expression, FOLLOW [96] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [96] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [96] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [96] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [96] -> SHIFT '!' GOTO 84
	statement/L1 = . "var" variabledefinition ";", FOLLOW [97] -> SHIFT "var" GOTO 85
	statement/L1 = . "return" expression ";", FOLLOW [97] -> SHIFT "return" GOTO 86
	statement/L1 = . "delete" expression ";", FOLLOW [97] -> SHIFT "delete" GOTO 87
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}", FOLLOW [97] -> SHIFT "if" GOTO 88
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}", FOLLOW [97] -> SHIFT "if" GOTO 88
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}", FOLLOW [97] -> SHIFT "while" GOTO 89
	expression/L1 = . "new" typespec ":" expression, FOLLOW [96] -> SHIFT "new" GOTO 90
	expression/L2 = . "null", FOLLOW [96] -> SHIFT "null" GOTO 91
	statementlist = ., FOLLOW [16] -> REDUCE statementlist #0
	linkage = . (30), FOLLOW [60] -> REDUCE linkage #0 CALL linkage {linkage="internal",attributes="#0 nounwind"}
[201]
	typepath/L1 = . typename, FOLLOW [174] -> GOTO 39
	inheritlist = . typepath "," inheritlist, FOLLOW [17] -> GOTO 119
	inheritlist = . typepath, FOLLOW [17] -> GOTO 119
	inheritlist = typepath "," . inheritlist, FOLLOW [17] -> GOTO 285
	typename/L1 = . IDENT, FOLLOW [174] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [174] -> SHIFT IDENT GOTO 17
[202]
	classdefinition = "class" IDENT ":" inheritlist "{" . class_definitionlist "}", FOLLOW [173] -> GOTO 286
	class_definitionlist = . class_definition class_definitionlist, FOLLOW [16] -> GOTO 108
	typespec/L1 = . typename, FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [9] -> GOTO 8
	variabledefinition = . typespec IDENT, FOLLOW [13] -> GOTO 9
	variabledefinition = . typespec IDENT "=" expression, FOLLOW [13] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression, FOLLOW [13] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]", FOLLOW [13] -> GOTO 9
	class_definition = . typedefinition ";", FOLLOW [172] -> GOTO 109
	class_definition = . structdefinition, FOLLOW [172] -> GOTO 110
	class_definition = . interfacedefinition, FOLLOW [172] -> GOTO 111
	class_definition = . classdefinition, FOLLOW [172] -> GOTO 112
	functiondefinition = . linkage "function" typespec IDENT callablebody, FOLLOW [172] -> GOTO 113
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [172] -> GOTO 113
	constructordefinition = . linkage "constructor" callablebody, FOLLOW [172] -> GOTO 113
	operatordefinition = . linkage "operator" "->" typespec callablebody, FOLLOW [172] -> GOTO 113
	operatordefinition = . linkage "operator" "=" typespec callablebody, FOLLOW [172] -> GOTO 113
	operatordefinition = . linkage "operator" "+" typespec callablebody, FOLLOW [172] -> GOTO 113
	operatordefinition = . linkage "operator" "-" typespec callablebody, FOLLOW [172] -> GOTO 113
	operatordefinition = . linkage "operator" "*" typespec callablebody, FOLLOW [172] -> GOTO 113
	operatordefinition = . linkage "operator" "/" typespec callablebody, FOLLOW [172] -> GOTO 113
	operatordefinition = . linkage "operator" "%" typespec callablebody, FOLLOW [172] -> GOTO 113
	operatordefinition = . linkage "operator" "&&" typespec callablebody, FOLLOW [172] -> GOTO 113
	operatordefinition = . linkage "operator" "||" typespec callablebody, FOLLOW [172] -> GOTO 113
	operatordefinition = . linkage "operator" "&" typespec callablebody, FOLLOW [172] -> GOTO 113
	operatordefinition = . linkage "operator" "|" typespec callablebody, FOLLOW [172] -> GOTO 113
	operatordefinition = . linkage "operator" "<<" typespec callablebody, FOLLOW [172] -> GOTO 113
	operatordefinition = . linkage "operator" ">>" typespec callablebody, FOLLOW [172] -> GOTO 113
	operatordefinition = . linkage "operator" "~" typespec callablebody, FOLLOW [172] -> GOTO 113
	operatordefinition = . linkage "operator" "!" typespec callablebody, FOLLOW [172] -> GOTO 113
	operatordefinition = . linkage "operator" "(" ")" typespec callablebody, FOLLOW [172] -> GOTO 113
	operatordefinition = . linkage "operator" "[" "]" typespec callablebody, FOLLOW [172] -> GOTO 113
	operatordefinition = . linkage "operator" "==" typespec callablebody, FOLLOW [172] -> GOTO 113
	operatordefinition = . linkage "operator" "!=" typespec callablebody, FOLLOW [172] -> GOTO 113
	operatordefinition = . linkage "operator" ">=" typespec callablebody, FOLLOW [172] -> GOTO 113
	operatordefinition = . linkage "operator" "<=" typespec callablebody, FOLLOW [172] -> GOTO 113
	operatordefinition = . linkage "operator" ">" typespec callablebody, FOLLOW [172] -> GOTO 113
	operatordefinition = . linkage "operator" "<" typespec callablebody, FOLLOW [172] -> GOTO 113
	class_definition = . functiondefinition, FOLLOW [172] -> GOTO 114
	class_definition = . constructordefinition, FOLLOW [172] -> GOTO 115
	class_definition = . operatordefinition, FOLLOW [172] -> GOTO 116
	class_definition = . variabledefinition ";", FOLLOW [172] -> GOTO 117
	typename/L1 = . IDENT, FOLLOW [61] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [61] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typedefinition = . "typedef" typepath IDENT, FOLLOW [13] -> SHIFT "typedef" GOTO 19
	structdefinition = . "struct" IDENT "{" struct_definitionlist "}", FOLLOW [172] -> SHIFT "struct" GOTO 20
	interfacedefinition = . "interface" IDENT "{" interface_definitionlist "}", FOLLOW [172] -> SHIFT "interface" GOTO 21
	classdefinition = . "class" IDENT "{" class_definitionlist "}", FOLLOW [173] -> SHIFT "class" GOTO 22
	classdefinition = . "class" IDENT ":" inheritlist "{" class_definitionlist "}", FOLLOW [173] -> SHIFT "class" GOTO 22
	linkage = . "private", FOLLOW [171] -> SHIFT "private" GOTO 23
	linkage = . "public", FOLLOW [171] -> SHIFT "public" GOTO 24
	constructordefinition = . "destructor" "{" codeblock "}", FOLLOW [172] -> SHIFT "destructor" GOTO 118
	class_definitionlist = ., FOLLOW [16] -> REDUCE class_definitionlist #0
	linkage = . (30), FOLLOW [171] -> REDUCE linkage #0 CALL linkage {linkage="internal",attributes="#0 nounwind"}
[203]
	extern_paramlist = . extern_parameters, FOLLOW [183] -> GOTO 204
	extern_definition = "extern" DQSTRING "function" typespec IDENT "(" . extern_paramlist ")" ";", FOLLOW [58] -> GOTO 287
	extern_definition = "extern" DQSTRING "function" typespec IDENT "(" . extern_paramlist "..." ")" ";", FOLLOW [58] -> GOTO 287
	typespec/L1 = . typename, FOLLOW [185] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [185] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [185] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [185] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [185] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [185] -> GOTO 8
	extern_parameters = . typespec "," extern_parameters, FOLLOW [183] -> GOTO 206
	extern_parameters = . typespec, FOLLOW [183] -> GOTO 206
	typename/L1 = . IDENT, FOLLOW [186] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [186] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [185] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [185] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [185] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [185] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [185] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [185] -> SHIFT "const" GOTO 18
	extern_paramlist = . (6), FOLLOW [183] -> REDUCE extern_paramlist #0 CALL extern_paramdeflist
[204]
	extern_paramlist = extern_parameters . (6), FOLLOW [183] -> REDUCE extern_paramlist #1 CALL extern_paramdeflist
[205]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist . ")" ";", FOLLOW [58] -> SHIFT ')' GOTO 288
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist . "..." ")" ";", FOLLOW [58] -> SHIFT "..." GOTO 289
[206]
	extern_parameters = typespec . "," extern_parameters, FOLLOW [183] -> SHIFT ',' GOTO 290
	extern_parameters = typespec ., FOLLOW [183] -> REDUCE extern_parameters #1
[207]
	iexpression = expression indirection IDENT . (123), FOLLOW [234] -> REDUCE iexpression #3 CALL rep_operator "->"
[208]
	expression/L13 = expression "(" expressionlist . ")", FOLLOW [234] -> SHIFT ')' GOTO 291
[209]
	expression/L13 = expression "(" ")" . (121), FOLLOW [234] -> REDUCE expression #3 CALL operator "()"
[210]
	iexpression = expression . indirection IDENT, FOLLOW [234] -> GOTO 126
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [234] -> SHIFT '(' GOTO 127
	expression/L13 = expression . "(" ")", FOLLOW [234] -> SHIFT '(' GOTO 127
	expression/L7 = expression . "&" expression, FOLLOW [234] -> SHIFT '&' GOTO 129
	expression/L7 = expression . "^" expression, FOLLOW [234] -> SHIFT '^' GOTO 130
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 131
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 131
	expression/L3 = expression . "=" expression, FOLLOW [234] -> SHIFT '=' GOTO 132
	expression/L9 = expression . "+" expression, FOLLOW [234] -> SHIFT '+' GOTO 133
	expression/L9 = expression . "-" expression, FOLLOW [234] -> SHIFT '-' GOTO 134
	expression/L10 = expression . "*" expression, FOLLOW [234] -> SHIFT '*' GOTO 135
	expression/L10 = expression . "/" expression, FOLLOW [234] -> SHIFT '/' GOTO 136
	expression/L10 = expression . "%" expression, FOLLOW [234] -> SHIFT '%' GOTO 137
	expression/L5 = expression . "&&" expression, FOLLOW [234] -> SHIFT "&&" GOTO 138
	expression/L4 = expression . "||" expression, FOLLOW [234] -> SHIFT "||" GOTO 139
	expression/L6 = expression . "|" expression, FOLLOW [234] -> SHIFT '|' GOTO 140
	expression/L11 = expression . "<<" expression, FOLLOW [234] -> SHIFT "<<" GOTO 141
	expression/L11 = expression . ">>" expression, FOLLOW [234] -> SHIFT ">>" GOTO 142
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [234] -> SHIFT '[' GOTO 143
	expression/L8 = expression . "==" expression, FOLLOW [234] -> SHIFT "==" GOTO 144
	expression/L8 = expression . "!=" expression, FOLLOW [234] -> SHIFT "!=" GOTO 145
	expression/L8 = expression . ">=" expression, FOLLOW [234] -> SHIFT ">=" GOTO 146
	expression/L8 = expression . "<=" expression, FOLLOW [234] -> SHIFT "<=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [234] -> SHIFT '>' GOTO 148
	expression/L8 = expression . "<" expression, FOLLOW [234] -> SHIFT '<' GOTO 149
	expression/L3 = expression . "+=" expression, FOLLOW [234] -> SHIFT "+=" GOTO 150
	expression/L3 = expression . "-=" expression, FOLLOW [234] -> SHIFT "-=" GOTO 151
	expression/L3 = expression . "*=" expression, FOLLOW [234] -> SHIFT "*=" GOTO 152
	expression/L3 = expression . "/=" expression, FOLLOW [234] -> SHIFT "/=" GOTO 153
	expression/L3 = expression . "^=" expression, FOLLOW [234] -> SHIFT "^=" GOTO 154
	expression/L3 = expression . "&=" expression, FOLLOW [234] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "&=" expression, FOLLOW [234] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "%=" expression, FOLLOW [234] -> SHIFT "%=" GOTO 156
	expression/L3 = expression . "&&=" expression, FOLLOW [234] -> SHIFT "&&=" GOTO 157
	expression/L3 = expression . "||=" expression, FOLLOW [234] -> SHIFT "||=" GOTO 158
	expression/L3 = expression . "|=" expression, FOLLOW [234] -> SHIFT "|=" GOTO 159
	expression/L3 = expression . "<<=" expression, FOLLOW [234] -> SHIFT "<<=" GOTO 160
	expression/L3 = expression . ">>=" expression, FOLLOW [234] -> SHIFT ">>=" GOTO 161
	expression/L12 = expression . "." IDENT, FOLLOW [234] -> SHIFT '.' GOTO 162
	expression/L7 = expression "&" expression . (103), FOLLOW [234] -> REDUCE expression #3 CALL operator "&"
[211]
	iexpression = expression . indirection IDENT, FOLLOW [234] -> GOTO 126
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [234] -> SHIFT '(' GOTO 127
	expression/L13 = expression . "(" ")", FOLLOW [234] -> SHIFT '(' GOTO 127
	expression/L7 = expression . "&" expression, FOLLOW [234] -> SHIFT '&' GOTO 129
	expression/L7 = expression . "^" expression, FOLLOW [234] -> SHIFT '^' GOTO 130
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 131
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 131
	expression/L3 = expression . "=" expression, FOLLOW [234] -> SHIFT '=' GOTO 132
	expression/L9 = expression . "+" expression, FOLLOW [234] -> SHIFT '+' GOTO 133
	expression/L9 = expression . "-" expression, FOLLOW [234] -> SHIFT '-' GOTO 134
	expression/L10 = expression . "*" expression, FOLLOW [234] -> SHIFT '*' GOTO 135
	expression/L10 = expression . "/" expression, FOLLOW [234] -> SHIFT '/' GOTO 136
	expression/L10 = expression . "%" expression, FOLLOW [234] -> SHIFT '%' GOTO 137
	expression/L5 = expression . "&&" expression, FOLLOW [234] -> SHIFT "&&" GOTO 138
	expression/L4 = expression . "||" expression, FOLLOW [234] -> SHIFT "||" GOTO 139
	expression/L6 = expression . "|" expression, FOLLOW [234] -> SHIFT '|' GOTO 140
	expression/L11 = expression . "<<" expression, FOLLOW [234] -> SHIFT "<<" GOTO 141
	expression/L11 = expression . ">>" expression, FOLLOW [234] -> SHIFT ">>" GOTO 142
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [234] -> SHIFT '[' GOTO 143
	expression/L8 = expression . "==" expression, FOLLOW [234] -> SHIFT "==" GOTO 144
	expression/L8 = expression . "!=" expression, FOLLOW [234] -> SHIFT "!=" GOTO 145
	expression/L8 = expression . ">=" expression, FOLLOW [234] -> SHIFT ">=" GOTO 146
	expression/L8 = expression . "<=" expression, FOLLOW [234] -> SHIFT "<=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [234] -> SHIFT '>' GOTO 148
	expression/L8 = expression . "<" expression, FOLLOW [234] -> SHIFT '<' GOTO 149
	expression/L3 = expression . "+=" expression, FOLLOW [234] -> SHIFT "+=" GOTO 150
	expression/L3 = expression . "-=" expression, FOLLOW [234] -> SHIFT "-=" GOTO 151
	expression/L3 = expression . "*=" expression, FOLLOW [234] -> SHIFT "*=" GOTO 152
	expression/L3 = expression . "/=" expression, FOLLOW [234] -> SHIFT "/=" GOTO 153
	expression/L3 = expression . "^=" expression, FOLLOW [234] -> SHIFT "^=" GOTO 154
	expression/L3 = expression . "&=" expression, FOLLOW [234] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "&=" expression, FOLLOW [234] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "%=" expression, FOLLOW [234] -> SHIFT "%=" GOTO 156
	expression/L3 = expression . "&&=" expression, FOLLOW [234] -> SHIFT "&&=" GOTO 157
	expression/L3 = expression . "||=" expression, FOLLOW [234] -> SHIFT "||=" GOTO 158
	expression/L3 = expression . "|=" expression, FOLLOW [234] -> SHIFT "|=" GOTO 159
	expression/L3 = expression . "<<=" expression, FOLLOW [234] -> SHIFT "<<=" GOTO 160
	expression/L3 = expression . ">>=" expression, FOLLOW [234] -> SHIFT ">>=" GOTO 161
	expression/L12 = expression . "." IDENT, FOLLOW [234] -> SHIFT '.' GOTO 162
	expression/L7 = expression "^" expression . (102), FOLLOW [234] -> REDUCE expression #3 CALL operator "^"
[212]
	indirection = "->" indirection . (124), FOLLOW [9] -> REDUCE indirection #2 CALL count
[213]
	iexpression = expression . indirection IDENT, FOLLOW [234] -> GOTO 126
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [234] -> SHIFT '(' GOTO 127
	expression/L13 = expression . "(" ")", FOLLOW [234] -> SHIFT '(' GOTO 127
	expression/L7 = expression . "&" expression, FOLLOW [234] -> SHIFT '&' GOTO 129
	expression/L7 = expression . "^" expression, FOLLOW [234] -> SHIFT '^' GOTO 130
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 131
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 131
	expression/L3 = expression . "=" expression, FOLLOW [234] -> SHIFT '=' GOTO 132
	expression/L9 = expression . "+" expression, FOLLOW [234] -> SHIFT '+' GOTO 133
	expression/L9 = expression . "-" expression, FOLLOW [234] -> SHIFT '-' GOTO 134
	expression/L10 = expression . "*" expression, FOLLOW [234] -> SHIFT '*' GOTO 135
	expression/L10 = expression . "/" expression, FOLLOW [234] -> SHIFT '/' GOTO 136
	expression/L10 = expression . "%" expression, FOLLOW [234] -> SHIFT '%' GOTO 137
	expression/L5 = expression . "&&" expression, FOLLOW [234] -> SHIFT "&&" GOTO 138
	expression/L4 = expression . "||" expression, FOLLOW [234] -> SHIFT "||" GOTO 139
	expression/L6 = expression . "|" expression, FOLLOW [234] -> SHIFT '|' GOTO 140
	expression/L11 = expression . "<<" expression, FOLLOW [234] -> SHIFT "<<" GOTO 141
	expression/L11 = expression . ">>" expression, FOLLOW [234] -> SHIFT ">>" GOTO 142
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [234] -> SHIFT '[' GOTO 143
	expression/L8 = expression . "==" expression, FOLLOW [234] -> SHIFT "==" GOTO 144
	expression/L8 = expression . "!=" expression, FOLLOW [234] -> SHIFT "!=" GOTO 145
	expression/L8 = expression . ">=" expression, FOLLOW [234] -> SHIFT ">=" GOTO 146
	expression/L8 = expression . "<=" expression, FOLLOW [234] -> SHIFT "<=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [234] -> SHIFT '>' GOTO 148
	expression/L8 = expression . "<" expression, FOLLOW [234] -> SHIFT '<' GOTO 149
	expression/L3 = expression . "+=" expression, FOLLOW [234] -> SHIFT "+=" GOTO 150
	expression/L3 = expression . "-=" expression, FOLLOW [234] -> SHIFT "-=" GOTO 151
	expression/L3 = expression . "*=" expression, FOLLOW [234] -> SHIFT "*=" GOTO 152
	expression/L3 = expression . "/=" expression, FOLLOW [234] -> SHIFT "/=" GOTO 153
	expression/L3 = expression . "^=" expression, FOLLOW [234] -> SHIFT "^=" GOTO 154
	expression/L3 = expression . "&=" expression, FOLLOW [234] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "&=" expression, FOLLOW [234] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "%=" expression, FOLLOW [234] -> SHIFT "%=" GOTO 156
	expression/L3 = expression . "&&=" expression, FOLLOW [234] -> SHIFT "&&=" GOTO 157
	expression/L3 = expression . "||=" expression, FOLLOW [234] -> SHIFT "||=" GOTO 158
	expression/L3 = expression . "|=" expression, FOLLOW [234] -> SHIFT "|=" GOTO 159
	expression/L3 = expression . "<<=" expression, FOLLOW [234] -> SHIFT "<<=" GOTO 160
	expression/L3 = expression . ">>=" expression, FOLLOW [234] -> SHIFT ">>=" GOTO 161
	expression/L12 = expression . "." IDENT, FOLLOW [234] -> SHIFT '.' GOTO 162
	expression/L3 = expression "=" expression . (86), FOLLOW [234] -> REDUCE expression #3 CALL operator "="
[214]
	iexpression = expression . indirection IDENT, FOLLOW [234] -> GOTO 126
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [234] -> SHIFT '(' GOTO 127
	expression/L13 = expression . "(" ")", FOLLOW [234] -> SHIFT '(' GOTO 127
	expression/L7 = expression . "&" expression, FOLLOW [234] -> SHIFT '&' GOTO 129
	expression/L7 = expression . "^" expression, FOLLOW [234] -> SHIFT '^' GOTO 130
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 131
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 131
	expression/L3 = expression . "=" expression, FOLLOW [234] -> SHIFT '=' GOTO 132
	expression/L9 = expression . "+" expression, FOLLOW [234] -> SHIFT '+' GOTO 133
	expression/L9 = expression . "-" expression, FOLLOW [234] -> SHIFT '-' GOTO 134
	expression/L10 = expression . "*" expression, FOLLOW [234] -> SHIFT '*' GOTO 135
	expression/L10 = expression . "/" expression, FOLLOW [234] -> SHIFT '/' GOTO 136
	expression/L10 = expression . "%" expression, FOLLOW [234] -> SHIFT '%' GOTO 137
	expression/L5 = expression . "&&" expression, FOLLOW [234] -> SHIFT "&&" GOTO 138
	expression/L4 = expression . "||" expression, FOLLOW [234] -> SHIFT "||" GOTO 139
	expression/L6 = expression . "|" expression, FOLLOW [234] -> SHIFT '|' GOTO 140
	expression/L11 = expression . "<<" expression, FOLLOW [234] -> SHIFT "<<" GOTO 141
	expression/L11 = expression . ">>" expression, FOLLOW [234] -> SHIFT ">>" GOTO 142
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [234] -> SHIFT '[' GOTO 143
	expression/L8 = expression . "==" expression, FOLLOW [234] -> SHIFT "==" GOTO 144
	expression/L8 = expression . "!=" expression, FOLLOW [234] -> SHIFT "!=" GOTO 145
	expression/L8 = expression . ">=" expression, FOLLOW [234] -> SHIFT ">=" GOTO 146
	expression/L8 = expression . "<=" expression, FOLLOW [234] -> SHIFT "<=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [234] -> SHIFT '>' GOTO 148
	expression/L8 = expression . "<" expression, FOLLOW [234] -> SHIFT '<' GOTO 149
	expression/L3 = expression . "+=" expression, FOLLOW [234] -> SHIFT "+=" GOTO 150
	expression/L3 = expression . "-=" expression, FOLLOW [234] -> SHIFT "-=" GOTO 151
	expression/L3 = expression . "*=" expression, FOLLOW [234] -> SHIFT "*=" GOTO 152
	expression/L3 = expression . "/=" expression, FOLLOW [234] -> SHIFT "/=" GOTO 153
	expression/L3 = expression . "^=" expression, FOLLOW [234] -> SHIFT "^=" GOTO 154
	expression/L3 = expression . "&=" expression, FOLLOW [234] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "&=" expression, FOLLOW [234] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "%=" expression, FOLLOW [234] -> SHIFT "%=" GOTO 156
	expression/L3 = expression . "&&=" expression, FOLLOW [234] -> SHIFT "&&=" GOTO 157
	expression/L3 = expression . "||=" expression, FOLLOW [234] -> SHIFT "||=" GOTO 158
	expression/L3 = expression . "|=" expression, FOLLOW [234] -> SHIFT "|=" GOTO 159
	expression/L3 = expression . "<<=" expression, FOLLOW [234] -> SHIFT "<<=" GOTO 160
	expression/L3 = expression . ">>=" expression, FOLLOW [234] -> SHIFT ">>=" GOTO 161
	expression/L12 = expression . "." IDENT, FOLLOW [234] -> SHIFT '.' GOTO 162
	expression/L9 = expression "+" expression . (110), FOLLOW [234] -> REDUCE expression #3 CALL operator "+"
[215]
	iexpression = expression . indirection IDENT, FOLLOW [234] -> GOTO 126
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [234] -> SHIFT '(' GOTO 127
	expression/L13 = expression . "(" ")", FOLLOW [234] -> SHIFT '(' GOTO 127
	expression/L7 = expression . "&" expression, FOLLOW [234] -> SHIFT '&' GOTO 129
	expression/L7 = expression . "^" expression, FOLLOW [234] -> SHIFT '^' GOTO 130
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 131
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 131
	expression/L3 = expression . "=" expression, FOLLOW [234] -> SHIFT '=' GOTO 132
	expression/L9 = expression . "+" expression, FOLLOW [234] -> SHIFT '+' GOTO 133
	expression/L9 = expression . "-" expression, FOLLOW [234] -> SHIFT '-' GOTO 134
	expression/L10 = expression . "*" expression, FOLLOW [234] -> SHIFT '*' GOTO 135
	expression/L10 = expression . "/" expression, FOLLOW [234] -> SHIFT '/' GOTO 136
	expression/L10 = expression . "%" expression, FOLLOW [234] -> SHIFT '%' GOTO 137
	expression/L5 = expression . "&&" expression, FOLLOW [234] -> SHIFT "&&" GOTO 138
	expression/L4 = expression . "||" expression, FOLLOW [234] -> SHIFT "||" GOTO 139
	expression/L6 = expression . "|" expression, FOLLOW [234] -> SHIFT '|' GOTO 140
	expression/L11 = expression . "<<" expression, FOLLOW [234] -> SHIFT "<<" GOTO 141
	expression/L11 = expression . ">>" expression, FOLLOW [234] -> SHIFT ">>" GOTO 142
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [234] -> SHIFT '[' GOTO 143
	expression/L8 = expression . "==" expression, FOLLOW [234] -> SHIFT "==" GOTO 144
	expression/L8 = expression . "!=" expression, FOLLOW [234] -> SHIFT "!=" GOTO 145
	expression/L8 = expression . ">=" expression, FOLLOW [234] -> SHIFT ">=" GOTO 146
	expression/L8 = expression . "<=" expression, FOLLOW [234] -> SHIFT "<=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [234] -> SHIFT '>' GOTO 148
	expression/L8 = expression . "<" expression, FOLLOW [234] -> SHIFT '<' GOTO 149
	expression/L3 = expression . "+=" expression, FOLLOW [234] -> SHIFT "+=" GOTO 150
	expression/L3 = expression . "-=" expression, FOLLOW [234] -> SHIFT "-=" GOTO 151
	expression/L3 = expression . "*=" expression, FOLLOW [234] -> SHIFT "*=" GOTO 152
	expression/L3 = expression . "/=" expression, FOLLOW [234] -> SHIFT "/=" GOTO 153
	expression/L3 = expression . "^=" expression, FOLLOW [234] -> SHIFT "^=" GOTO 154
	expression/L3 = expression . "&=" expression, FOLLOW [234] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "&=" expression, FOLLOW [234] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "%=" expression, FOLLOW [234] -> SHIFT "%=" GOTO 156
	expression/L3 = expression . "&&=" expression, FOLLOW [234] -> SHIFT "&&=" GOTO 157
	expression/L3 = expression . "||=" expression, FOLLOW [234] -> SHIFT "||=" GOTO 158
	expression/L3 = expression . "|=" expression, FOLLOW [234] -> SHIFT "|=" GOTO 159
	expression/L3 = expression . "<<=" expression, FOLLOW [234] -> SHIFT "<<=" GOTO 160
	expression/L3 = expression . ">>=" expression, FOLLOW [234] -> SHIFT ">>=" GOTO 161
	expression/L12 = expression . "." IDENT, FOLLOW [234] -> SHIFT '.' GOTO 162
	expression/L9 = expression "-" expression . (111), FOLLOW [234] -> REDUCE expression #3 CALL operator "-"
[216]
	iexpression = expression . indirection IDENT, FOLLOW [234] -> GOTO 126
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [234] -> SHIFT '(' GOTO 127
	expression/L13 = expression . "(" ")", FOLLOW [234] -> SHIFT '(' GOTO 127
	expression/L7 = expression . "&" expression, FOLLOW [234] -> SHIFT '&' GOTO 129
	expression/L7 = expression . "^" expression, FOLLOW [234] -> SHIFT '^' GOTO 130
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 131
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 131
	expression/L3 = expression . "=" expression, FOLLOW [234] -> SHIFT '=' GOTO 132
	expression/L9 = expression . "+" expression, FOLLOW [234] -> SHIFT '+' GOTO 133
	expression/L9 = expression . "-" expression, FOLLOW [234] -> SHIFT '-' GOTO 134
	expression/L10 = expression . "*" expression, FOLLOW [234] -> SHIFT '*' GOTO 135
	expression/L10 = expression . "/" expression, FOLLOW [234] -> SHIFT '/' GOTO 136
	expression/L10 = expression . "%" expression, FOLLOW [234] -> SHIFT '%' GOTO 137
	expression/L5 = expression . "&&" expression, FOLLOW [234] -> SHIFT "&&" GOTO 138
	expression/L4 = expression . "||" expression, FOLLOW [234] -> SHIFT "||" GOTO 139
	expression/L6 = expression . "|" expression, FOLLOW [234] -> SHIFT '|' GOTO 140
	expression/L11 = expression . "<<" expression, FOLLOW [234] -> SHIFT "<<" GOTO 141
	expression/L11 = expression . ">>" expression, FOLLOW [234] -> SHIFT ">>" GOTO 142
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [234] -> SHIFT '[' GOTO 143
	expression/L8 = expression . "==" expression, FOLLOW [234] -> SHIFT "==" GOTO 144
	expression/L8 = expression . "!=" expression, FOLLOW [234] -> SHIFT "!=" GOTO 145
	expression/L8 = expression . ">=" expression, FOLLOW [234] -> SHIFT ">=" GOTO 146
	expression/L8 = expression . "<=" expression, FOLLOW [234] -> SHIFT "<=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [234] -> SHIFT '>' GOTO 148
	expression/L8 = expression . "<" expression, FOLLOW [234] -> SHIFT '<' GOTO 149
	expression/L3 = expression . "+=" expression, FOLLOW [234] -> SHIFT "+=" GOTO 150
	expression/L3 = expression . "-=" expression, FOLLOW [234] -> SHIFT "-=" GOTO 151
	expression/L3 = expression . "*=" expression, FOLLOW [234] -> SHIFT "*=" GOTO 152
	expression/L3 = expression . "/=" expression, FOLLOW [234] -> SHIFT "/=" GOTO 153
	expression/L3 = expression . "^=" expression, FOLLOW [234] -> SHIFT "^=" GOTO 154
	expression/L3 = expression . "&=" expression, FOLLOW [234] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "&=" expression, FOLLOW [234] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "%=" expression, FOLLOW [234] -> SHIFT "%=" GOTO 156
	expression/L3 = expression . "&&=" expression, FOLLOW [234] -> SHIFT "&&=" GOTO 157
	expression/L3 = expression . "||=" expression, FOLLOW [234] -> SHIFT "||=" GOTO 158
	expression/L3 = expression . "|=" expression, FOLLOW [234] -> SHIFT "|=" GOTO 159
	expression/L3 = expression . "<<=" expression, FOLLOW [234] -> SHIFT "<<=" GOTO 160
	expression/L3 = expression . ">>=" expression, FOLLOW [234] -> SHIFT ">>=" GOTO 161
	expression/L12 = expression . "." IDENT, FOLLOW [234] -> SHIFT '.' GOTO 162
	expression/L10 = expression "*" expression . (114), FOLLOW [234] -> REDUCE expression #3 CALL operator "*"
[217]
	iexpression = expression . indirection IDENT, FOLLOW [234] -> GOTO 126
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [234] -> SHIFT '(' GOTO 127
	expression/L13 = expression . "(" ")", FOLLOW [234] -> SHIFT '(' GOTO 127
	expression/L7 = expression . "&" expression, FOLLOW [234] -> SHIFT '&' GOTO 129
	expression/L7 = expression . "^" expression, FOLLOW [234] -> SHIFT '^' GOTO 130
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 131
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 131
	expression/L3 = expression . "=" expression, FOLLOW [234] -> SHIFT '=' GOTO 132
	expression/L9 = expression . "+" expression, FOLLOW [234] -> SHIFT '+' GOTO 133
	expression/L9 = expression . "-" expression, FOLLOW [234] -> SHIFT '-' GOTO 134
	expression/L10 = expression . "*" expression, FOLLOW [234] -> SHIFT '*' GOTO 135
	expression/L10 = expression . "/" expression, FOLLOW [234] -> SHIFT '/' GOTO 136
	expression/L10 = expression . "%" expression, FOLLOW [234] -> SHIFT '%' GOTO 137
	expression/L5 = expression . "&&" expression, FOLLOW [234] -> SHIFT "&&" GOTO 138
	expression/L4 = expression . "||" expression, FOLLOW [234] -> SHIFT "||" GOTO 139
	expression/L6 = expression . "|" expression, FOLLOW [234] -> SHIFT '|' GOTO 140
	expression/L11 = expression . "<<" expression, FOLLOW [234] -> SHIFT "<<" GOTO 141
	expression/L11 = expression . ">>" expression, FOLLOW [234] -> SHIFT ">>" GOTO 142
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [234] -> SHIFT '[' GOTO 143
	expression/L8 = expression . "==" expression, FOLLOW [234] -> SHIFT "==" GOTO 144
	expression/L8 = expression . "!=" expression, FOLLOW [234] -> SHIFT "!=" GOTO 145
	expression/L8 = expression . ">=" expression, FOLLOW [234] -> SHIFT ">=" GOTO 146
	expression/L8 = expression . "<=" expression, FOLLOW [234] -> SHIFT "<=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [234] -> SHIFT '>' GOTO 148
	expression/L8 = expression . "<" expression, FOLLOW [234] -> SHIFT '<' GOTO 149
	expression/L3 = expression . "+=" expression, FOLLOW [234] -> SHIFT "+=" GOTO 150
	expression/L3 = expression . "-=" expression, FOLLOW [234] -> SHIFT "-=" GOTO 151
	expression/L3 = expression . "*=" expression, FOLLOW [234] -> SHIFT "*=" GOTO 152
	expression/L3 = expression . "/=" expression, FOLLOW [234] -> SHIFT "/=" GOTO 153
	expression/L3 = expression . "^=" expression, FOLLOW [234] -> SHIFT "^=" GOTO 154
	expression/L3 = expression . "&=" expression, FOLLOW [234] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "&=" expression, FOLLOW [234] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "%=" expression, FOLLOW [234] -> SHIFT "%=" GOTO 156
	expression/L3 = expression . "&&=" expression, FOLLOW [234] -> SHIFT "&&=" GOTO 157
	expression/L3 = expression . "||=" expression, FOLLOW [234] -> SHIFT "||=" GOTO 158
	expression/L3 = expression . "|=" expression, FOLLOW [234] -> SHIFT "|=" GOTO 159
	expression/L3 = expression . "<<=" expression, FOLLOW [234] -> SHIFT "<<=" GOTO 160
	expression/L3 = expression . ">>=" expression, FOLLOW [234] -> SHIFT ">>=" GOTO 161
	expression/L12 = expression . "." IDENT, FOLLOW [234] -> SHIFT '.' GOTO 162
	expression/L10 = expression "/" expression . (115), FOLLOW [234] -> REDUCE expression #3 CALL operator "/"
[218]
	iexpression = expression . indirection IDENT, FOLLOW [234] -> GOTO 126
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [234] -> SHIFT '(' GOTO 127
	expression/L13 = expression . "(" ")", FOLLOW [234] -> SHIFT '(' GOTO 127
	expression/L7 = expression . "&" expression, FOLLOW [234] -> SHIFT '&' GOTO 129
	expression/L7 = expression . "^" expression, FOLLOW [234] -> SHIFT '^' GOTO 130
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 131
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 131
	expression/L3 = expression . "=" expression, FOLLOW [234] -> SHIFT '=' GOTO 132
	expression/L9 = expression . "+" expression, FOLLOW [234] -> SHIFT '+' GOTO 133
	expression/L9 = expression . "-" expression, FOLLOW [234] -> SHIFT '-' GOTO 134
	expression/L10 = expression . "*" expression, FOLLOW [234] -> SHIFT '*' GOTO 135
	expression/L10 = expression . "/" expression, FOLLOW [234] -> SHIFT '/' GOTO 136
	expression/L10 = expression . "%" expression, FOLLOW [234] -> SHIFT '%' GOTO 137
	expression/L5 = expression . "&&" expression, FOLLOW [234] -> SHIFT "&&" GOTO 138
	expression/L4 = expression . "||" expression, FOLLOW [234] -> SHIFT "||" GOTO 139
	expression/L6 = expression . "|" expression, FOLLOW [234] -> SHIFT '|' GOTO 140
	expression/L11 = expression . "<<" expression, FOLLOW [234] -> SHIFT "<<" GOTO 141
	expression/L11 = expression . ">>" expression, FOLLOW [234] -> SHIFT ">>" GOTO 142
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [234] -> SHIFT '[' GOTO 143
	expression/L8 = expression . "==" expression, FOLLOW [234] -> SHIFT "==" GOTO 144
	expression/L8 = expression . "!=" expression, FOLLOW [234] -> SHIFT "!=" GOTO 145
	expression/L8 = expression . ">=" expression, FOLLOW [234] -> SHIFT ">=" GOTO 146
	expression/L8 = expression . "<=" expression, FOLLOW [234] -> SHIFT "<=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [234] -> SHIFT '>' GOTO 148
	expression/L8 = expression . "<" expression, FOLLOW [234] -> SHIFT '<' GOTO 149
	expression/L3 = expression . "+=" expression, FOLLOW [234] -> SHIFT "+=" GOTO 150
	expression/L3 = expression . "-=" expression, FOLLOW [234] -> SHIFT "-=" GOTO 151
	expression/L3 = expression . "*=" expression, FOLLOW [234] -> SHIFT "*=" GOTO 152
	expression/L3 = expression . "/=" expression, FOLLOW [234] -> SHIFT "/=" GOTO 153
	expression/L3 = expression . "^=" expression, FOLLOW [234] -> SHIFT "^=" GOTO 154
	expression/L3 = expression . "&=" expression, FOLLOW [234] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "&=" expression, FOLLOW [234] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "%=" expression, FOLLOW [234] -> SHIFT "%=" GOTO 156
	expression/L3 = expression . "&&=" expression, FOLLOW [234] -> SHIFT "&&=" GOTO 157
	expression/L3 = expression . "||=" expression, FOLLOW [234] -> SHIFT "||=" GOTO 158
	expression/L3 = expression . "|=" expression, FOLLOW [234] -> SHIFT "|=" GOTO 159
	expression/L3 = expression . "<<=" expression, FOLLOW [234] -> SHIFT "<<=" GOTO 160
	expression/L3 = expression . ">>=" expression, FOLLOW [234] -> SHIFT ">>=" GOTO 161
	expression/L12 = expression . "." IDENT, FOLLOW [234] -> SHIFT '.' GOTO 162
	expression/L10 = expression "%" expression . (116), FOLLOW [234] -> REDUCE expression #3 CALL operator "%"
[219]
	iexpression = expression . indirection IDENT, FOLLOW [234] -> GOTO 126
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [234] -> SHIFT '(' GOTO 127
	expression/L13 = expression . "(" ")", FOLLOW [234] -> SHIFT '(' GOTO 127
	expression/L7 = expression . "&" expression, FOLLOW [234] -> SHIFT '&' GOTO 129
	expression/L7 = expression . "^" expression, FOLLOW [234] -> SHIFT '^' GOTO 130
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 131
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 131
	expression/L3 = expression . "=" expression, FOLLOW [234] -> SHIFT '=' GOTO 132
	expression/L9 = expression . "+" expression, FOLLOW [234] -> SHIFT '+' GOTO 133
	expression/L9 = expression . "-" expression, FOLLOW [234] -> SHIFT '-' GOTO 134
	expression/L10 = expression . "*" expression, FOLLOW [234] -> SHIFT '*' GOTO 135
	expression/L10 = expression . "/" expression, FOLLOW [234] -> SHIFT '/' GOTO 136
	expression/L10 = expression . "%" expression, FOLLOW [234] -> SHIFT '%' GOTO 137
	expression/L5 = expression . "&&" expression, FOLLOW [234] -> SHIFT "&&" GOTO 138
	expression/L4 = expression . "||" expression, FOLLOW [234] -> SHIFT "||" GOTO 139
	expression/L6 = expression . "|" expression, FOLLOW [234] -> SHIFT '|' GOTO 140
	expression/L11 = expression . "<<" expression, FOLLOW [234] -> SHIFT "<<" GOTO 141
	expression/L11 = expression . ">>" expression, FOLLOW [234] -> SHIFT ">>" GOTO 142
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [234] -> SHIFT '[' GOTO 143
	expression/L8 = expression . "==" expression, FOLLOW [234] -> SHIFT "==" GOTO 144
	expression/L8 = expression . "!=" expression, FOLLOW [234] -> SHIFT "!=" GOTO 145
	expression/L8 = expression . ">=" expression, FOLLOW [234] -> SHIFT ">=" GOTO 146
	expression/L8 = expression . "<=" expression, FOLLOW [234] -> SHIFT "<=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [234] -> SHIFT '>' GOTO 148
	expression/L8 = expression . "<" expression, FOLLOW [234] -> SHIFT '<' GOTO 149
	expression/L3 = expression . "+=" expression, FOLLOW [234] -> SHIFT "+=" GOTO 150
	expression/L3 = expression . "-=" expression, FOLLOW [234] -> SHIFT "-=" GOTO 151
	expression/L3 = expression . "*=" expression, FOLLOW [234] -> SHIFT "*=" GOTO 152
	expression/L3 = expression . "/=" expression, FOLLOW [234] -> SHIFT "/=" GOTO 153
	expression/L3 = expression . "^=" expression, FOLLOW [234] -> SHIFT "^=" GOTO 154
	expression/L3 = expression . "&=" expression, FOLLOW [234] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "&=" expression, FOLLOW [234] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "%=" expression, FOLLOW [234] -> SHIFT "%=" GOTO 156
	expression/L3 = expression . "&&=" expression, FOLLOW [234] -> SHIFT "&&=" GOTO 157
	expression/L3 = expression . "||=" expression, FOLLOW [234] -> SHIFT "||=" GOTO 158
	expression/L3 = expression . "|=" expression, FOLLOW [234] -> SHIFT "|=" GOTO 159
	expression/L3 = expression . "<<=" expression, FOLLOW [234] -> SHIFT "<<=" GOTO 160
	expression/L3 = expression . ">>=" expression, FOLLOW [234] -> SHIFT ">>=" GOTO 161
	expression/L12 = expression . "." IDENT, FOLLOW [234] -> SHIFT '.' GOTO 162
	expression/L5 = expression "&&" expression . (100), FOLLOW [234] -> REDUCE expression #3 CALL operator "&&"
[220]
	iexpression = expression . indirection IDENT, FOLLOW [234] -> GOTO 126
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [234] -> SHIFT '(' GOTO 127
	expression/L13 = expression . "(" ")", FOLLOW [234] -> SHIFT '(' GOTO 127
	expression/L7 = expression . "&" expression, FOLLOW [234] -> SHIFT '&' GOTO 129
	expression/L7 = expression . "^" expression, FOLLOW [234] -> SHIFT '^' GOTO 130
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 131
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 131
	expression/L3 = expression . "=" expression, FOLLOW [234] -> SHIFT '=' GOTO 132
	expression/L9 = expression . "+" expression, FOLLOW [234] -> SHIFT '+' GOTO 133
	expression/L9 = expression . "-" expression, FOLLOW [234] -> SHIFT '-' GOTO 134
	expression/L10 = expression . "*" expression, FOLLOW [234] -> SHIFT '*' GOTO 135
	expression/L10 = expression . "/" expression, FOLLOW [234] -> SHIFT '/' GOTO 136
	expression/L10 = expression . "%" expression, FOLLOW [234] -> SHIFT '%' GOTO 137
	expression/L5 = expression . "&&" expression, FOLLOW [234] -> SHIFT "&&" GOTO 138
	expression/L4 = expression . "||" expression, FOLLOW [234] -> SHIFT "||" GOTO 139
	expression/L6 = expression . "|" expression, FOLLOW [234] -> SHIFT '|' GOTO 140
	expression/L11 = expression . "<<" expression, FOLLOW [234] -> SHIFT "<<" GOTO 141
	expression/L11 = expression . ">>" expression, FOLLOW [234] -> SHIFT ">>" GOTO 142
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [234] -> SHIFT '[' GOTO 143
	expression/L8 = expression . "==" expression, FOLLOW [234] -> SHIFT "==" GOTO 144
	expression/L8 = expression . "!=" expression, FOLLOW [234] -> SHIFT "!=" GOTO 145
	expression/L8 = expression . ">=" expression, FOLLOW [234] -> SHIFT ">=" GOTO 146
	expression/L8 = expression . "<=" expression, FOLLOW [234] -> SHIFT "<=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [234] -> SHIFT '>' GOTO 148
	expression/L8 = expression . "<" expression, FOLLOW [234] -> SHIFT '<' GOTO 149
	expression/L3 = expression . "+=" expression, FOLLOW [234] -> SHIFT "+=" GOTO 150
	expression/L3 = expression . "-=" expression, FOLLOW [234] -> SHIFT "-=" GOTO 151
	expression/L3 = expression . "*=" expression, FOLLOW [234] -> SHIFT "*=" GOTO 152
	expression/L3 = expression . "/=" expression, FOLLOW [234] -> SHIFT "/=" GOTO 153
	expression/L3 = expression . "^=" expression, FOLLOW [234] -> SHIFT "^=" GOTO 154
	expression/L3 = expression . "&=" expression, FOLLOW [234] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "&=" expression, FOLLOW [234] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "%=" expression, FOLLOW [234] -> SHIFT "%=" GOTO 156
	expression/L3 = expression . "&&=" expression, FOLLOW [234] -> SHIFT "&&=" GOTO 157
	expression/L3 = expression . "||=" expression, FOLLOW [234] -> SHIFT "||=" GOTO 158
	expression/L3 = expression . "|=" expression, FOLLOW [234] -> SHIFT "|=" GOTO 159
	expression/L3 = expression . "<<=" expression, FOLLOW [234] -> SHIFT "<<=" GOTO 160
	expression/L3 = expression . ">>=" expression, FOLLOW [234] -> SHIFT ">>=" GOTO 161
	expression/L12 = expression . "." IDENT, FOLLOW [234] -> SHIFT '.' GOTO 162
	expression/L4 = expression "||" expression . (99), FOLLOW [234] -> REDUCE expression #3 CALL operator "||"
[221]
	iexpression = expression . indirection IDENT, FOLLOW [234] -> GOTO 126
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [234] -> SHIFT '(' GOTO 127
	expression/L13 = expression . "(" ")", FOLLOW [234] -> SHIFT '(' GOTO 127
	expression/L7 = expression . "&" expression, FOLLOW [234] -> SHIFT '&' GOTO 129
	expression/L7 = expression . "^" expression, FOLLOW [234] -> SHIFT '^' GOTO 130
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 131
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 131
	expression/L3 = expression . "=" expression, FOLLOW [234] -> SHIFT '=' GOTO 132
	expression/L9 = expression . "+" expression, FOLLOW [234] -> SHIFT '+' GOTO 133
	expression/L9 = expression . "-" expression, FOLLOW [234] -> SHIFT '-' GOTO 134
	expression/L10 = expression . "*" expression, FOLLOW [234] -> SHIFT '*' GOTO 135
	expression/L10 = expression . "/" expression, FOLLOW [234] -> SHIFT '/' GOTO 136
	expression/L10 = expression . "%" expression, FOLLOW [234] -> SHIFT '%' GOTO 137
	expression/L5 = expression . "&&" expression, FOLLOW [234] -> SHIFT "&&" GOTO 138
	expression/L4 = expression . "||" expression, FOLLOW [234] -> SHIFT "||" GOTO 139
	expression/L6 = expression . "|" expression, FOLLOW [234] -> SHIFT '|' GOTO 140
	expression/L11 = expression . "<<" expression, FOLLOW [234] -> SHIFT "<<" GOTO 141
	expression/L11 = expression . ">>" expression, FOLLOW [234] -> SHIFT ">>" GOTO 142
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [234] -> SHIFT '[' GOTO 143
	expression/L8 = expression . "==" expression, FOLLOW [234] -> SHIFT "==" GOTO 144
	expression/L8 = expression . "!=" expression, FOLLOW [234] -> SHIFT "!=" GOTO 145
	expression/L8 = expression . ">=" expression, FOLLOW [234] -> SHIFT ">=" GOTO 146
	expression/L8 = expression . "<=" expression, FOLLOW [234] -> SHIFT "<=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [234] -> SHIFT '>' GOTO 148
	expression/L8 = expression . "<" expression, FOLLOW [234] -> SHIFT '<' GOTO 149
	expression/L3 = expression . "+=" expression, FOLLOW [234] -> SHIFT "+=" GOTO 150
	expression/L3 = expression . "-=" expression, FOLLOW [234] -> SHIFT "-=" GOTO 151
	expression/L3 = expression . "*=" expression, FOLLOW [234] -> SHIFT "*=" GOTO 152
	expression/L3 = expression . "/=" expression, FOLLOW [234] -> SHIFT "/=" GOTO 153
	expression/L3 = expression . "^=" expression, FOLLOW [234] -> SHIFT "^=" GOTO 154
	expression/L3 = expression . "&=" expression, FOLLOW [234] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "&=" expression, FOLLOW [234] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "%=" expression, FOLLOW [234] -> SHIFT "%=" GOTO 156
	expression/L3 = expression . "&&=" expression, FOLLOW [234] -> SHIFT "&&=" GOTO 157
	expression/L3 = expression . "||=" expression, FOLLOW [234] -> SHIFT "||=" GOTO 158
	expression/L3 = expression . "|=" expression, FOLLOW [234] -> SHIFT "|=" GOTO 159
	expression/L3 = expression . "<<=" expression, FOLLOW [234] -> SHIFT "<<=" GOTO 160
	expression/L3 = expression . ">>=" expression, FOLLOW [234] -> SHIFT ">>=" GOTO 161
	expression/L12 = expression . "." IDENT, FOLLOW [234] -> SHIFT '.' GOTO 162
	expression/L6 = expression "|" expression . (101), FOLLOW [234] -> REDUCE expression #3 CALL operator "|"
[222]
	iexpression = expression . indirection IDENT, FOLLOW [234] -> GOTO 126
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [234] -> SHIFT '(' GOTO 127
	expression/L13 = expression . "(" ")", FOLLOW [234] -> SHIFT '(' GOTO 127
	expression/L7 = expression . "&" expression, FOLLOW [234] -> SHIFT '&' GOTO 129
	expression/L7 = expression . "^" expression, FOLLOW [234] -> SHIFT '^' GOTO 130
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 131
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 131
	expression/L3 = expression . "=" expression, FOLLOW [234] -> SHIFT '=' GOTO 132
	expression/L9 = expression . "+" expression, FOLLOW [234] -> SHIFT '+' GOTO 133
	expression/L9 = expression . "-" expression, FOLLOW [234] -> SHIFT '-' GOTO 134
	expression/L10 = expression . "*" expression, FOLLOW [234] -> SHIFT '*' GOTO 135
	expression/L10 = expression . "/" expression, FOLLOW [234] -> SHIFT '/' GOTO 136
	expression/L10 = expression . "%" expression, FOLLOW [234] -> SHIFT '%' GOTO 137
	expression/L5 = expression . "&&" expression, FOLLOW [234] -> SHIFT "&&" GOTO 138
	expression/L4 = expression . "||" expression, FOLLOW [234] -> SHIFT "||" GOTO 139
	expression/L6 = expression . "|" expression, FOLLOW [234] -> SHIFT '|' GOTO 140
	expression/L11 = expression . "<<" expression, FOLLOW [234] -> SHIFT "<<" GOTO 141
	expression/L11 = expression . ">>" expression, FOLLOW [234] -> SHIFT ">>" GOTO 142
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [234] -> SHIFT '[' GOTO 143
	expression/L8 = expression . "==" expression, FOLLOW [234] -> SHIFT "==" GOTO 144
	expression/L8 = expression . "!=" expression, FOLLOW [234] -> SHIFT "!=" GOTO 145
	expression/L8 = expression . ">=" expression, FOLLOW [234] -> SHIFT ">=" GOTO 146
	expression/L8 = expression . "<=" expression, FOLLOW [234] -> SHIFT "<=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [234] -> SHIFT '>' GOTO 148
	expression/L8 = expression . "<" expression, FOLLOW [234] -> SHIFT '<' GOTO 149
	expression/L3 = expression . "+=" expression, FOLLOW [234] -> SHIFT "+=" GOTO 150
	expression/L3 = expression . "-=" expression, FOLLOW [234] -> SHIFT "-=" GOTO 151
	expression/L3 = expression . "*=" expression, FOLLOW [234] -> SHIFT "*=" GOTO 152
	expression/L3 = expression . "/=" expression, FOLLOW [234] -> SHIFT "/=" GOTO 153
	expression/L3 = expression . "^=" expression, FOLLOW [234] -> SHIFT "^=" GOTO 154
	expression/L3 = expression . "&=" expression, FOLLOW [234] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "&=" expression, FOLLOW [234] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "%=" expression, FOLLOW [234] -> SHIFT "%=" GOTO 156
	expression/L3 = expression . "&&=" expression, FOLLOW [234] -> SHIFT "&&=" GOTO 157
	expression/L3 = expression . "||=" expression, FOLLOW [234] -> SHIFT "||=" GOTO 158
	expression/L3 = expression . "|=" expression, FOLLOW [234] -> SHIFT "|=" GOTO 159
	expression/L3 = expression . "<<=" expression, FOLLOW [234] -> SHIFT "<<=" GOTO 160
	expression/L3 = expression . ">>=" expression, FOLLOW [234] -> SHIFT ">>=" GOTO 161
	expression/L12 = expression . "." IDENT, FOLLOW [234] -> SHIFT '.' GOTO 162
	expression/L11 = expression "<<" expression . (117), FOLLOW [234] -> REDUCE expression #3 CALL operator "<<"
[223]
	iexpression = expression . indirection IDENT, FOLLOW [234] -> GOTO 126
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [234] -> SHIFT '(' GOTO 127
	expression/L13 = expression . "(" ")", FOLLOW [234] -> SHIFT '(' GOTO 127
	expression/L7 = expression . "&" expression, FOLLOW [234] -> SHIFT '&' GOTO 129
	expression/L7 = expression . "^" expression, FOLLOW [234] -> SHIFT '^' GOTO 130
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 131
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 131
	expression/L3 = expression . "=" expression, FOLLOW [234] -> SHIFT '=' GOTO 132
	expression/L9 = expression . "+" expression, FOLLOW [234] -> SHIFT '+' GOTO 133
	expression/L9 = expression . "-" expression, FOLLOW [234] -> SHIFT '-' GOTO 134
	expression/L10 = expression . "*" expression, FOLLOW [234] -> SHIFT '*' GOTO 135
	expression/L10 = expression . "/" expression, FOLLOW [234] -> SHIFT '/' GOTO 136
	expression/L10 = expression . "%" expression, FOLLOW [234] -> SHIFT '%' GOTO 137
	expression/L5 = expression . "&&" expression, FOLLOW [234] -> SHIFT "&&" GOTO 138
	expression/L4 = expression . "||" expression, FOLLOW [234] -> SHIFT "||" GOTO 139
	expression/L6 = expression . "|" expression, FOLLOW [234] -> SHIFT '|' GOTO 140
	expression/L11 = expression . "<<" expression, FOLLOW [234] -> SHIFT "<<" GOTO 141
	expression/L11 = expression . ">>" expression, FOLLOW [234] -> SHIFT ">>" GOTO 142
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [234] -> SHIFT '[' GOTO 143
	expression/L8 = expression . "==" expression, FOLLOW [234] -> SHIFT "==" GOTO 144
	expression/L8 = expression . "!=" expression, FOLLOW [234] -> SHIFT "!=" GOTO 145
	expression/L8 = expression . ">=" expression, FOLLOW [234] -> SHIFT ">=" GOTO 146
	expression/L8 = expression . "<=" expression, FOLLOW [234] -> SHIFT "<=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [234] -> SHIFT '>' GOTO 148
	expression/L8 = expression . "<" expression, FOLLOW [234] -> SHIFT '<' GOTO 149
	expression/L3 = expression . "+=" expression, FOLLOW [234] -> SHIFT "+=" GOTO 150
	expression/L3 = expression . "-=" expression, FOLLOW [234] -> SHIFT "-=" GOTO 151
	expression/L3 = expression . "*=" expression, FOLLOW [234] -> SHIFT "*=" GOTO 152
	expression/L3 = expression . "/=" expression, FOLLOW [234] -> SHIFT "/=" GOTO 153
	expression/L3 = expression . "^=" expression, FOLLOW [234] -> SHIFT "^=" GOTO 154
	expression/L3 = expression . "&=" expression, FOLLOW [234] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "&=" expression, FOLLOW [234] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "%=" expression, FOLLOW [234] -> SHIFT "%=" GOTO 156
	expression/L3 = expression . "&&=" expression, FOLLOW [234] -> SHIFT "&&=" GOTO 157
	expression/L3 = expression . "||=" expression, FOLLOW [234] -> SHIFT "||=" GOTO 158
	expression/L3 = expression . "|=" expression, FOLLOW [234] -> SHIFT "|=" GOTO 159
	expression/L3 = expression . "<<=" expression, FOLLOW [234] -> SHIFT "<<=" GOTO 160
	expression/L3 = expression . ">>=" expression, FOLLOW [234] -> SHIFT ">>=" GOTO 161
	expression/L12 = expression . "." IDENT, FOLLOW [234] -> SHIFT '.' GOTO 162
	expression/L11 = expression ">>" expression . (118), FOLLOW [234] -> REDUCE expression #3 CALL operator ">>"
[224]
	expression/L13 = expression "[" expressionlist . "]", FOLLOW [234] -> SHIFT ']' GOTO 292
[225]
	iexpression = expression . indirection IDENT, FOLLOW [234] -> GOTO 126
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [234] -> SHIFT '(' GOTO 127
	expression/L13 = expression . "(" ")", FOLLOW [234] -> SHIFT '(' GOTO 127
	expression/L7 = expression . "&" expression, FOLLOW [234] -> SHIFT '&' GOTO 129
	expression/L7 = expression . "^" expression, FOLLOW [234] -> SHIFT '^' GOTO 130
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 131
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 131
	expression/L3 = expression . "=" expression, FOLLOW [234] -> SHIFT '=' GOTO 132
	expression/L9 = expression . "+" expression, FOLLOW [234] -> SHIFT '+' GOTO 133
	expression/L9 = expression . "-" expression, FOLLOW [234] -> SHIFT '-' GOTO 134
	expression/L10 = expression . "*" expression, FOLLOW [234] -> SHIFT '*' GOTO 135
	expression/L10 = expression . "/" expression, FOLLOW [234] -> SHIFT '/' GOTO 136
	expression/L10 = expression . "%" expression, FOLLOW [234] -> SHIFT '%' GOTO 137
	expression/L5 = expression . "&&" expression, FOLLOW [234] -> SHIFT "&&" GOTO 138
	expression/L4 = expression . "||" expression, FOLLOW [234] -> SHIFT "||" GOTO 139
	expression/L6 = expression . "|" expression, FOLLOW [234] -> SHIFT '|' GOTO 140
	expression/L11 = expression . "<<" expression, FOLLOW [234] -> SHIFT "<<" GOTO 141
	expression/L11 = expression . ">>" expression, FOLLOW [234] -> SHIFT ">>" GOTO 142
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [234] -> SHIFT '[' GOTO 143
	expression/L8 = expression . "==" expression, FOLLOW [234] -> SHIFT "==" GOTO 144
	expression/L8 = expression . "!=" expression, FOLLOW [234] -> SHIFT "!=" GOTO 145
	expression/L8 = expression . ">=" expression, FOLLOW [234] -> SHIFT ">=" GOTO 146
	expression/L8 = expression . "<=" expression, FOLLOW [234] -> SHIFT "<=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [234] -> SHIFT '>' GOTO 148
	expression/L8 = expression . "<" expression, FOLLOW [234] -> SHIFT '<' GOTO 149
	expression/L3 = expression . "+=" expression, FOLLOW [234] -> SHIFT "+=" GOTO 150
	expression/L3 = expression . "-=" expression, FOLLOW [234] -> SHIFT "-=" GOTO 151
	expression/L3 = expression . "*=" expression, FOLLOW [234] -> SHIFT "*=" GOTO 152
	expression/L3 = expression . "/=" expression, FOLLOW [234] -> SHIFT "/=" GOTO 153
	expression/L3 = expression . "^=" expression, FOLLOW [234] -> SHIFT "^=" GOTO 154
	expression/L3 = expression . "&=" expression, FOLLOW [234] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "&=" expression, FOLLOW [234] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "%=" expression, FOLLOW [234] -> SHIFT "%=" GOTO 156
	expression/L3 = expression . "&&=" expression, FOLLOW [234] -> SHIFT "&&=" GOTO 157
	expression/L3 = expression . "||=" expression, FOLLOW [234] -> SHIFT "||=" GOTO 158
	expression/L3 = expression . "|=" expression, FOLLOW [234] -> SHIFT "|=" GOTO 159
	expression/L3 = expression . "<<=" expression, FOLLOW [234] -> SHIFT "<<=" GOTO 160
	expression/L3 = expression . ">>=" expression, FOLLOW [234] -> SHIFT ">>=" GOTO 161
	expression/L12 = expression . "." IDENT, FOLLOW [234] -> SHIFT '.' GOTO 162
	expression/L8 = expression "==" expression . (104), FOLLOW [234] -> REDUCE expression #3 CALL operator "=="
[226]
	iexpression = expression . indirection IDENT, FOLLOW [234] -> GOTO 126
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [234] -> SHIFT '(' GOTO 127
	expression/L13 = expression . "(" ")", FOLLOW [234] -> SHIFT '(' GOTO 127
	expression/L7 = expression . "&" expression, FOLLOW [234] -> SHIFT '&' GOTO 129
	expression/L7 = expression . "^" expression, FOLLOW [234] -> SHIFT '^' GOTO 130
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 131
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 131
	expression/L3 = expression . "=" expression, FOLLOW [234] -> SHIFT '=' GOTO 132
	expression/L9 = expression . "+" expression, FOLLOW [234] -> SHIFT '+' GOTO 133
	expression/L9 = expression . "-" expression, FOLLOW [234] -> SHIFT '-' GOTO 134
	expression/L10 = expression . "*" expression, FOLLOW [234] -> SHIFT '*' GOTO 135
	expression/L10 = expression . "/" expression, FOLLOW [234] -> SHIFT '/' GOTO 136
	expression/L10 = expression . "%" expression, FOLLOW [234] -> SHIFT '%' GOTO 137
	expression/L5 = expression . "&&" expression, FOLLOW [234] -> SHIFT "&&" GOTO 138
	expression/L4 = expression . "||" expression, FOLLOW [234] -> SHIFT "||" GOTO 139
	expression/L6 = expression . "|" expression, FOLLOW [234] -> SHIFT '|' GOTO 140
	expression/L11 = expression . "<<" expression, FOLLOW [234] -> SHIFT "<<" GOTO 141
	expression/L11 = expression . ">>" expression, FOLLOW [234] -> SHIFT ">>" GOTO 142
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [234] -> SHIFT '[' GOTO 143
	expression/L8 = expression . "==" expression, FOLLOW [234] -> SHIFT "==" GOTO 144
	expression/L8 = expression . "!=" expression, FOLLOW [234] -> SHIFT "!=" GOTO 145
	expression/L8 = expression . ">=" expression, FOLLOW [234] -> SHIFT ">=" GOTO 146
	expression/L8 = expression . "<=" expression, FOLLOW [234] -> SHIFT "<=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [234] -> SHIFT '>' GOTO 148
	expression/L8 = expression . "<" expression, FOLLOW [234] -> SHIFT '<' GOTO 149
	expression/L3 = expression . "+=" expression, FOLLOW [234] -> SHIFT "+=" GOTO 150
	expression/L3 = expression . "-=" expression, FOLLOW [234] -> SHIFT "-=" GOTO 151
	expression/L3 = expression . "*=" expression, FOLLOW [234] -> SHIFT "*=" GOTO 152
	expression/L3 = expression . "/=" expression, FOLLOW [234] -> SHIFT "/=" GOTO 153
	expression/L3 = expression . "^=" expression, FOLLOW [234] -> SHIFT "^=" GOTO 154
	expression/L3 = expression . "&=" expression, FOLLOW [234] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "&=" expression, FOLLOW [234] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "%=" expression, FOLLOW [234] -> SHIFT "%=" GOTO 156
	expression/L3 = expression . "&&=" expression, FOLLOW [234] -> SHIFT "&&=" GOTO 157
	expression/L3 = expression . "||=" expression, FOLLOW [234] -> SHIFT "||=" GOTO 158
	expression/L3 = expression . "|=" expression, FOLLOW [234] -> SHIFT "|=" GOTO 159
	expression/L3 = expression . "<<=" expression, FOLLOW [234] -> SHIFT "<<=" GOTO 160
	expression/L3 = expression . ">>=" expression, FOLLOW [234] -> SHIFT ">>=" GOTO 161
	expression/L12 = expression . "." IDENT, FOLLOW [234] -> SHIFT '.' GOTO 162
	expression/L8 = expression "!=" expression . (105), FOLLOW [234] -> REDUCE expression #3 CALL operator "!="
[227]
	iexpression = expression . indirection IDENT, FOLLOW [234] -> GOTO 126
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [234] -> SHIFT '(' GOTO 127
	expression/L13 = expression . "(" ")", FOLLOW [234] -> SHIFT '(' GOTO 127
	expression/L7 = expression . "&" expression, FOLLOW [234] -> SHIFT '&' GOTO 129
	expression/L7 = expression . "^" expression, FOLLOW [234] -> SHIFT '^' GOTO 130
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 131
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 131
	expression/L3 = expression . "=" expression, FOLLOW [234] -> SHIFT '=' GOTO 132
	expression/L9 = expression . "+" expression, FOLLOW [234] -> SHIFT '+' GOTO 133
	expression/L9 = expression . "-" expression, FOLLOW [234] -> SHIFT '-' GOTO 134
	expression/L10 = expression . "*" expression, FOLLOW [234] -> SHIFT '*' GOTO 135
	expression/L10 = expression . "/" expression, FOLLOW [234] -> SHIFT '/' GOTO 136
	expression/L10 = expression . "%" expression, FOLLOW [234] -> SHIFT '%' GOTO 137
	expression/L5 = expression . "&&" expression, FOLLOW [234] -> SHIFT "&&" GOTO 138
	expression/L4 = expression . "||" expression, FOLLOW [234] -> SHIFT "||" GOTO 139
	expression/L6 = expression . "|" expression, FOLLOW [234] -> SHIFT '|' GOTO 140
	expression/L11 = expression . "<<" expression, FOLLOW [234] -> SHIFT "<<" GOTO 141
	expression/L11 = expression . ">>" expression, FOLLOW [234] -> SHIFT ">>" GOTO 142
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [234] -> SHIFT '[' GOTO 143
	expression/L8 = expression . "==" expression, FOLLOW [234] -> SHIFT "==" GOTO 144
	expression/L8 = expression . "!=" expression, FOLLOW [234] -> SHIFT "!=" GOTO 145
	expression/L8 = expression . ">=" expression, FOLLOW [234] -> SHIFT ">=" GOTO 146
	expression/L8 = expression . "<=" expression, FOLLOW [234] -> SHIFT "<=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [234] -> SHIFT '>' GOTO 148
	expression/L8 = expression . "<" expression, FOLLOW [234] -> SHIFT '<' GOTO 149
	expression/L3 = expression . "+=" expression, FOLLOW [234] -> SHIFT "+=" GOTO 150
	expression/L3 = expression . "-=" expression, FOLLOW [234] -> SHIFT "-=" GOTO 151
	expression/L3 = expression . "*=" expression, FOLLOW [234] -> SHIFT "*=" GOTO 152
	expression/L3 = expression . "/=" expression, FOLLOW [234] -> SHIFT "/=" GOTO 153
	expression/L3 = expression . "^=" expression, FOLLOW [234] -> SHIFT "^=" GOTO 154
	expression/L3 = expression . "&=" expression, FOLLOW [234] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "&=" expression, FOLLOW [234] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "%=" expression, FOLLOW [234] -> SHIFT "%=" GOTO 156
	expression/L3 = expression . "&&=" expression, FOLLOW [234] -> SHIFT "&&=" GOTO 157
	expression/L3 = expression . "||=" expression, FOLLOW [234] -> SHIFT "||=" GOTO 158
	expression/L3 = expression . "|=" expression, FOLLOW [234] -> SHIFT "|=" GOTO 159
	expression/L3 = expression . "<<=" expression, FOLLOW [234] -> SHIFT "<<=" GOTO 160
	expression/L3 = expression . ">>=" expression, FOLLOW [234] -> SHIFT ">>=" GOTO 161
	expression/L12 = expression . "." IDENT, FOLLOW [234] -> SHIFT '.' GOTO 162
	expression/L8 = expression ">=" expression . (108), FOLLOW [234] -> REDUCE expression #3 CALL operator ">="
[228]
	iexpression = expression . indirection IDENT, FOLLOW [234] -> GOTO 126
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [234] -> SHIFT '(' GOTO 127
	expression/L13 = expression . "(" ")", FOLLOW [234] -> SHIFT '(' GOTO 127
	expression/L7 = expression . "&" expression, FOLLOW [234] -> SHIFT '&' GOTO 129
	expression/L7 = expression . "^" expression, FOLLOW [234] -> SHIFT '^' GOTO 130
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 131
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 131
	expression/L3 = expression . "=" expression, FOLLOW [234] -> SHIFT '=' GOTO 132
	expression/L9 = expression . "+" expression, FOLLOW [234] -> SHIFT '+' GOTO 133
	expression/L9 = expression . "-" expression, FOLLOW [234] -> SHIFT '-' GOTO 134
	expression/L10 = expression . "*" expression, FOLLOW [234] -> SHIFT '*' GOTO 135
	expression/L10 = expression . "/" expression, FOLLOW [234] -> SHIFT '/' GOTO 136
	expression/L10 = expression . "%" expression, FOLLOW [234] -> SHIFT '%' GOTO 137
	expression/L5 = expression . "&&" expression, FOLLOW [234] -> SHIFT "&&" GOTO 138
	expression/L4 = expression . "||" expression, FOLLOW [234] -> SHIFT "||" GOTO 139
	expression/L6 = expression . "|" expression, FOLLOW [234] -> SHIFT '|' GOTO 140
	expression/L11 = expression . "<<" expression, FOLLOW [234] -> SHIFT "<<" GOTO 141
	expression/L11 = expression . ">>" expression, FOLLOW [234] -> SHIFT ">>" GOTO 142
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [234] -> SHIFT '[' GOTO 143
	expression/L8 = expression . "==" expression, FOLLOW [234] -> SHIFT "==" GOTO 144
	expression/L8 = expression . "!=" expression, FOLLOW [234] -> SHIFT "!=" GOTO 145
	expression/L8 = expression . ">=" expression, FOLLOW [234] -> SHIFT ">=" GOTO 146
	expression/L8 = expression . "<=" expression, FOLLOW [234] -> SHIFT "<=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [234] -> SHIFT '>' GOTO 148
	expression/L8 = expression . "<" expression, FOLLOW [234] -> SHIFT '<' GOTO 149
	expression/L3 = expression . "+=" expression, FOLLOW [234] -> SHIFT "+=" GOTO 150
	expression/L3 = expression . "-=" expression, FOLLOW [234] -> SHIFT "-=" GOTO 151
	expression/L3 = expression . "*=" expression, FOLLOW [234] -> SHIFT "*=" GOTO 152
	expression/L3 = expression . "/=" expression, FOLLOW [234] -> SHIFT "/=" GOTO 153
	expression/L3 = expression . "^=" expression, FOLLOW [234] -> SHIFT "^=" GOTO 154
	expression/L3 = expression . "&=" expression, FOLLOW [234] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "&=" expression, FOLLOW [234] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "%=" expression, FOLLOW [234] -> SHIFT "%=" GOTO 156
	expression/L3 = expression . "&&=" expression, FOLLOW [234] -> SHIFT "&&=" GOTO 157
	expression/L3 = expression . "||=" expression, FOLLOW [234] -> SHIFT "||=" GOTO 158
	expression/L3 = expression . "|=" expression, FOLLOW [234] -> SHIFT "|=" GOTO 159
	expression/L3 = expression . "<<=" expression, FOLLOW [234] -> SHIFT "<<=" GOTO 160
	expression/L3 = expression . ">>=" expression, FOLLOW [234] -> SHIFT ">>=" GOTO 161
	expression/L12 = expression . "." IDENT, FOLLOW [234] -> SHIFT '.' GOTO 162
	expression/L8 = expression "<=" expression . (106), FOLLOW [234] -> REDUCE expression #3 CALL operator "<="
[229]
	iexpression = expression . indirection IDENT, FOLLOW [234] -> GOTO 126
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [234] -> SHIFT '(' GOTO 127
	expression/L13 = expression . "(" ")", FOLLOW [234] -> SHIFT '(' GOTO 127
	expression/L7 = expression . "&" expression, FOLLOW [234] -> SHIFT '&' GOTO 129
	expression/L7 = expression . "^" expression, FOLLOW [234] -> SHIFT '^' GOTO 130
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 131
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 131
	expression/L3 = expression . "=" expression, FOLLOW [234] -> SHIFT '=' GOTO 132
	expression/L9 = expression . "+" expression, FOLLOW [234] -> SHIFT '+' GOTO 133
	expression/L9 = expression . "-" expression, FOLLOW [234] -> SHIFT '-' GOTO 134
	expression/L10 = expression . "*" expression, FOLLOW [234] -> SHIFT '*' GOTO 135
	expression/L10 = expression . "/" expression, FOLLOW [234] -> SHIFT '/' GOTO 136
	expression/L10 = expression . "%" expression, FOLLOW [234] -> SHIFT '%' GOTO 137
	expression/L5 = expression . "&&" expression, FOLLOW [234] -> SHIFT "&&" GOTO 138
	expression/L4 = expression . "||" expression, FOLLOW [234] -> SHIFT "||" GOTO 139
	expression/L6 = expression . "|" expression, FOLLOW [234] -> SHIFT '|' GOTO 140
	expression/L11 = expression . "<<" expression, FOLLOW [234] -> SHIFT "<<" GOTO 141
	expression/L11 = expression . ">>" expression, FOLLOW [234] -> SHIFT ">>" GOTO 142
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [234] -> SHIFT '[' GOTO 143
	expression/L8 = expression . "==" expression, FOLLOW [234] -> SHIFT "==" GOTO 144
	expression/L8 = expression . "!=" expression, FOLLOW [234] -> SHIFT "!=" GOTO 145
	expression/L8 = expression . ">=" expression, FOLLOW [234] -> SHIFT ">=" GOTO 146
	expression/L8 = expression . "<=" expression, FOLLOW [234] -> SHIFT "<=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [234] -> SHIFT '>' GOTO 148
	expression/L8 = expression . "<" expression, FOLLOW [234] -> SHIFT '<' GOTO 149
	expression/L3 = expression . "+=" expression, FOLLOW [234] -> SHIFT "+=" GOTO 150
	expression/L3 = expression . "-=" expression, FOLLOW [234] -> SHIFT "-=" GOTO 151
	expression/L3 = expression . "*=" expression, FOLLOW [234] -> SHIFT "*=" GOTO 152
	expression/L3 = expression . "/=" expression, FOLLOW [234] -> SHIFT "/=" GOTO 153
	expression/L3 = expression . "^=" expression, FOLLOW [234] -> SHIFT "^=" GOTO 154
	expression/L3 = expression . "&=" expression, FOLLOW [234] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "&=" expression, FOLLOW [234] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "%=" expression, FOLLOW [234] -> SHIFT "%=" GOTO 156
	expression/L3 = expression . "&&=" expression, FOLLOW [234] -> SHIFT "&&=" GOTO 157
	expression/L3 = expression . "||=" expression, FOLLOW [234] -> SHIFT "||=" GOTO 158
	expression/L3 = expression . "|=" expression, FOLLOW [234] -> SHIFT "|=" GOTO 159
	expression/L3 = expression . "<<=" expression, FOLLOW [234] -> SHIFT "<<=" GOTO 160
	expression/L3 = expression . ">>=" expression, FOLLOW [234] -> SHIFT ">>=" GOTO 161
	expression/L12 = expression . "." IDENT, FOLLOW [234] -> SHIFT '.' GOTO 162
	expression/L8 = expression ">" expression . (109), FOLLOW [234] -> REDUCE expression #3 CALL operator ">"
[230]
	iexpression = expression . indirection IDENT, FOLLOW [234] -> GOTO 126
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [234] -> SHIFT '(' GOTO 127
	expression/L13 = expression . "(" ")", FOLLOW [234] -> SHIFT '(' GOTO 127
	expression/L7 = expression . "&" expression, FOLLOW [234] -> SHIFT '&' GOTO 129
	expression/L7 = expression . "^" expression, FOLLOW [234] -> SHIFT '^' GOTO 130
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 131
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 131
	expression/L3 = expression . "=" expression, FOLLOW [234] -> SHIFT '=' GOTO 132
	expression/L9 = expression . "+" expression, FOLLOW [234] -> SHIFT '+' GOTO 133
	expression/L9 = expression . "-" expression, FOLLOW [234] -> SHIFT '-' GOTO 134
	expression/L10 = expression . "*" expression, FOLLOW [234] -> SHIFT '*' GOTO 135
	expression/L10 = expression . "/" expression, FOLLOW [234] -> SHIFT '/' GOTO 136
	expression/L10 = expression . "%" expression, FOLLOW [234] -> SHIFT '%' GOTO 137
	expression/L5 = expression . "&&" expression, FOLLOW [234] -> SHIFT "&&" GOTO 138
	expression/L4 = expression . "||" expression, FOLLOW [234] -> SHIFT "||" GOTO 139
	expression/L6 = expression . "|" expression, FOLLOW [234] -> SHIFT '|' GOTO 140
	expression/L11 = expression . "<<" expression, FOLLOW [234] -> SHIFT "<<" GOTO 141
	expression/L11 = expression . ">>" expression, FOLLOW [234] -> SHIFT ">>" GOTO 142
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [234] -> SHIFT '[' GOTO 143
	expression/L8 = expression . "==" expression, FOLLOW [234] -> SHIFT "==" GOTO 144
	expression/L8 = expression . "!=" expression, FOLLOW [234] -> SHIFT "!=" GOTO 145
	expression/L8 = expression . ">=" expression, FOLLOW [234] -> SHIFT ">=" GOTO 146
	expression/L8 = expression . "<=" expression, FOLLOW [234] -> SHIFT "<=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [234] -> SHIFT '>' GOTO 148
	expression/L8 = expression . "<" expression, FOLLOW [234] -> SHIFT '<' GOTO 149
	expression/L3 = expression . "+=" expression, FOLLOW [234] -> SHIFT "+=" GOTO 150
	expression/L3 = expression . "-=" expression, FOLLOW [234] -> SHIFT "-=" GOTO 151
	expression/L3 = expression . "*=" expression, FOLLOW [234] -> SHIFT "*=" GOTO 152
	expression/L3 = expression . "/=" expression, FOLLOW [234] -> SHIFT "/=" GOTO 153
	expression/L3 = expression . "^=" expression, FOLLOW [234] -> SHIFT "^=" GOTO 154
	expression/L3 = expression . "&=" expression, FOLLOW [234] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "&=" expression, FOLLOW [234] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "%=" expression, FOLLOW [234] -> SHIFT "%=" GOTO 156
	expression/L3 = expression . "&&=" expression, FOLLOW [234] -> SHIFT "&&=" GOTO 157
	expression/L3 = expression . "||=" expression, FOLLOW [234] -> SHIFT "||=" GOTO 158
	expression/L3 = expression . "|=" expression, FOLLOW [234] -> SHIFT "|=" GOTO 159
	expression/L3 = expression . "<<=" expression, FOLLOW [234] -> SHIFT "<<=" GOTO 160
	expression/L3 = expression . ">>=" expression, FOLLOW [234] -> SHIFT ">>=" GOTO 161
	expression/L12 = expression . "." IDENT, FOLLOW [234] -> SHIFT '.' GOTO 162
	expression/L8 = expression "<" expression . (107), FOLLOW [234] -> REDUCE expression #3 CALL operator "<"
[231]
	iexpression = expression . indirection IDENT, FOLLOW [234] -> GOTO 126
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [234] -> SHIFT '(' GOTO 127
	expression/L13 = expression . "(" ")", FOLLOW [234] -> SHIFT '(' GOTO 127
	expression/L7 = expression . "&" expression, FOLLOW [234] -> SHIFT '&' GOTO 129
	expression/L7 = expression . "^" expression, FOLLOW [234] -> SHIFT '^' GOTO 130
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 131
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 131
	expression/L3 = expression . "=" expression, FOLLOW [234] -> SHIFT '=' GOTO 132
	expression/L9 = expression . "+" expression, FOLLOW [234] -> SHIFT '+' GOTO 133
	expression/L9 = expression . "-" expression, FOLLOW [234] -> SHIFT '-' GOTO 134
	expression/L10 = expression . "*" expression, FOLLOW [234] -> SHIFT '*' GOTO 135
	expression/L10 = expression . "/" expression, FOLLOW [234] -> SHIFT '/' GOTO 136
	expression/L10 = expression . "%" expression, FOLLOW [234] -> SHIFT '%' GOTO 137
	expression/L5 = expression . "&&" expression, FOLLOW [234] -> SHIFT "&&" GOTO 138
	expression/L4 = expression . "||" expression, FOLLOW [234] -> SHIFT "||" GOTO 139
	expression/L6 = expression . "|" expression, FOLLOW [234] -> SHIFT '|' GOTO 140
	expression/L11 = expression . "<<" expression, FOLLOW [234] -> SHIFT "<<" GOTO 141
	expression/L11 = expression . ">>" expression, FOLLOW [234] -> SHIFT ">>" GOTO 142
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [234] -> SHIFT '[' GOTO 143
	expression/L8 = expression . "==" expression, FOLLOW [234] -> SHIFT "==" GOTO 144
	expression/L8 = expression . "!=" expression, FOLLOW [234] -> SHIFT "!=" GOTO 145
	expression/L8 = expression . ">=" expression, FOLLOW [234] -> SHIFT ">=" GOTO 146
	expression/L8 = expression . "<=" expression, FOLLOW [234] -> SHIFT "<=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [234] -> SHIFT '>' GOTO 148
	expression/L8 = expression . "<" expression, FOLLOW [234] -> SHIFT '<' GOTO 149
	expression/L3 = expression . "+=" expression, FOLLOW [234] -> SHIFT "+=" GOTO 150
	expression/L3 = expression . "-=" expression, FOLLOW [234] -> SHIFT "-=" GOTO 151
	expression/L3 = expression . "*=" expression, FOLLOW [234] -> SHIFT "*=" GOTO 152
	expression/L3 = expression . "/=" expression, FOLLOW [234] -> SHIFT "/=" GOTO 153
	expression/L3 = expression . "^=" expression, FOLLOW [234] -> SHIFT "^=" GOTO 154
	expression/L3 = expression . "&=" expression, FOLLOW [234] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "&=" expression, FOLLOW [234] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "%=" expression, FOLLOW [234] -> SHIFT "%=" GOTO 156
	expression/L3 = expression . "&&=" expression, FOLLOW [234] -> SHIFT "&&=" GOTO 157
	expression/L3 = expression . "||=" expression, FOLLOW [234] -> SHIFT "||=" GOTO 158
	expression/L3 = expression . "|=" expression, FOLLOW [234] -> SHIFT "|=" GOTO 159
	expression/L3 = expression . "<<=" expression, FOLLOW [234] -> SHIFT "<<=" GOTO 160
	expression/L3 = expression . ">>=" expression, FOLLOW [234] -> SHIFT ">>=" GOTO 161
	expression/L12 = expression . "." IDENT, FOLLOW [234] -> SHIFT '.' GOTO 162
	expression/L3 = expression "+=" expression . (87), FOLLOW [234] -> REDUCE expression #3 CALL assign_operator "+"
[232]
	iexpression = expression . indirection IDENT, FOLLOW [234] -> GOTO 126
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [234] -> SHIFT '(' GOTO 127
	expression/L13 = expression . "(" ")", FOLLOW [234] -> SHIFT '(' GOTO 127
	expression/L7 = expression . "&" expression, FOLLOW [234] -> SHIFT '&' GOTO 129
	expression/L7 = expression . "^" expression, FOLLOW [234] -> SHIFT '^' GOTO 130
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 131
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 131
	expression/L3 = expression . "=" expression, FOLLOW [234] -> SHIFT '=' GOTO 132
	expression/L9 = expression . "+" expression, FOLLOW [234] -> SHIFT '+' GOTO 133
	expression/L9 = expression . "-" expression, FOLLOW [234] -> SHIFT '-' GOTO 134
	expression/L10 = expression . "*" expression, FOLLOW [234] -> SHIFT '*' GOTO 135
	expression/L10 = expression . "/" expression, FOLLOW [234] -> SHIFT '/' GOTO 136
	expression/L10 = expression . "%" expression, FOLLOW [234] -> SHIFT '%' GOTO 137
	expression/L5 = expression . "&&" expression, FOLLOW [234] -> SHIFT "&&" GOTO 138
	expression/L4 = expression . "||" expression, FOLLOW [234] -> SHIFT "||" GOTO 139
	expression/L6 = expression . "|" expression, FOLLOW [234] -> SHIFT '|' GOTO 140
	expression/L11 = expression . "<<" expression, FOLLOW [234] -> SHIFT "<<" GOTO 141
	expression/L11 = expression . ">>" expression, FOLLOW [234] -> SHIFT ">>" GOTO 142
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [234] -> SHIFT '[' GOTO 143
	expression/L8 = expression . "==" expression, FOLLOW [234] -> SHIFT "==" GOTO 144
	expression/L8 = expression . "!=" expression, FOLLOW [234] -> SHIFT "!=" GOTO 145
	expression/L8 = expression . ">=" expression, FOLLOW [234] -> SHIFT ">=" GOTO 146
	expression/L8 = expression . "<=" expression, FOLLOW [234] -> SHIFT "<=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [234] -> SHIFT '>' GOTO 148
	expression/L8 = expression . "<" expression, FOLLOW [234] -> SHIFT '<' GOTO 149
	expression/L3 = expression . "+=" expression, FOLLOW [234] -> SHIFT "+=" GOTO 150
	expression/L3 = expression . "-=" expression, FOLLOW [234] -> SHIFT "-=" GOTO 151
	expression/L3 = expression . "*=" expression, FOLLOW [234] -> SHIFT "*=" GOTO 152
	expression/L3 = expression . "/=" expression, FOLLOW [234] -> SHIFT "/=" GOTO 153
	expression/L3 = expression . "^=" expression, FOLLOW [234] -> SHIFT "^=" GOTO 154
	expression/L3 = expression . "&=" expression, FOLLOW [234] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "&=" expression, FOLLOW [234] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "%=" expression, FOLLOW [234] -> SHIFT "%=" GOTO 156
	expression/L3 = expression . "&&=" expression, FOLLOW [234] -> SHIFT "&&=" GOTO 157
	expression/L3 = expression . "||=" expression, FOLLOW [234] -> SHIFT "||=" GOTO 158
	expression/L3 = expression . "|=" expression, FOLLOW [234] -> SHIFT "|=" GOTO 159
	expression/L3 = expression . "<<=" expression, FOLLOW [234] -> SHIFT "<<=" GOTO 160
	expression/L3 = expression . ">>=" expression, FOLLOW [234] -> SHIFT ">>=" GOTO 161
	expression/L12 = expression . "." IDENT, FOLLOW [234] -> SHIFT '.' GOTO 162
	expression/L3 = expression "-=" expression . (88), FOLLOW [234] -> REDUCE expression #3 CALL assign_operator "-"
[233]
	iexpression = expression . indirection IDENT, FOLLOW [234] -> GOTO 126
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [234] -> SHIFT '(' GOTO 127
	expression/L13 = expression . "(" ")", FOLLOW [234] -> SHIFT '(' GOTO 127
	expression/L7 = expression . "&" expression, FOLLOW [234] -> SHIFT '&' GOTO 129
	expression/L7 = expression . "^" expression, FOLLOW [234] -> SHIFT '^' GOTO 130
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 131
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 131
	expression/L3 = expression . "=" expression, FOLLOW [234] -> SHIFT '=' GOTO 132
	expression/L9 = expression . "+" expression, FOLLOW [234] -> SHIFT '+' GOTO 133
	expression/L9 = expression . "-" expression, FOLLOW [234] -> SHIFT '-' GOTO 134
	expression/L10 = expression . "*" expression, FOLLOW [234] -> SHIFT '*' GOTO 135
	expression/L10 = expression . "/" expression, FOLLOW [234] -> SHIFT '/' GOTO 136
	expression/L10 = expression . "%" expression, FOLLOW [234] -> SHIFT '%' GOTO 137
	expression/L5 = expression . "&&" expression, FOLLOW [234] -> SHIFT "&&" GOTO 138
	expression/L4 = expression . "||" expression, FOLLOW [234] -> SHIFT "||" GOTO 139
	expression/L6 = expression . "|" expression, FOLLOW [234] -> SHIFT '|' GOTO 140
	expression/L11 = expression . "<<" expression, FOLLOW [234] -> SHIFT "<<" GOTO 141
	expression/L11 = expression . ">>" expression, FOLLOW [234] -> SHIFT ">>" GOTO 142
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [234] -> SHIFT '[' GOTO 143
	expression/L8 = expression . "==" expression, FOLLOW [234] -> SHIFT "==" GOTO 144
	expression/L8 = expression . "!=" expression, FOLLOW [234] -> SHIFT "!=" GOTO 145
	expression/L8 = expression . ">=" expression, FOLLOW [234] -> SHIFT ">=" GOTO 146
	expression/L8 = expression . "<=" expression, FOLLOW [234] -> SHIFT "<=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [234] -> SHIFT '>' GOTO 148
	expression/L8 = expression . "<" expression, FOLLOW [234] -> SHIFT '<' GOTO 149
	expression/L3 = expression . "+=" expression, FOLLOW [234] -> SHIFT "+=" GOTO 150
	expression/L3 = expression . "-=" expression, FOLLOW [234] -> SHIFT "-=" GOTO 151
	expression/L3 = expression . "*=" expression, FOLLOW [234] -> SHIFT "*=" GOTO 152
	expression/L3 = expression . "/=" expression, FOLLOW [234] -> SHIFT "/=" GOTO 153
	expression/L3 = expression . "^=" expression, FOLLOW [234] -> SHIFT "^=" GOTO 154
	expression/L3 = expression . "&=" expression, FOLLOW [234] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "&=" expression, FOLLOW [234] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "%=" expression, FOLLOW [234] -> SHIFT "%=" GOTO 156
	expression/L3 = expression . "&&=" expression, FOLLOW [234] -> SHIFT "&&=" GOTO 157
	expression/L3 = expression . "||=" expression, FOLLOW [234] -> SHIFT "||=" GOTO 158
	expression/L3 = expression . "|=" expression, FOLLOW [234] -> SHIFT "|=" GOTO 159
	expression/L3 = expression . "<<=" expression, FOLLOW [234] -> SHIFT "<<=" GOTO 160
	expression/L3 = expression . ">>=" expression, FOLLOW [234] -> SHIFT ">>=" GOTO 161
	expression/L12 = expression . "." IDENT, FOLLOW [234] -> SHIFT '.' GOTO 162
	expression/L3 = expression "*=" expression . (89), FOLLOW [234] -> REDUCE expression #3 CALL assign_operator "*"
[234]
	iexpression = expression . indirection IDENT, FOLLOW [234] -> GOTO 126
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [234] -> SHIFT '(' GOTO 127
	expression/L13 = expression . "(" ")", FOLLOW [234] -> SHIFT '(' GOTO 127
	expression/L7 = expression . "&" expression, FOLLOW [234] -> SHIFT '&' GOTO 129
	expression/L7 = expression . "^" expression, FOLLOW [234] -> SHIFT '^' GOTO 130
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 131
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 131
	expression/L3 = expression . "=" expression, FOLLOW [234] -> SHIFT '=' GOTO 132
	expression/L9 = expression . "+" expression, FOLLOW [234] -> SHIFT '+' GOTO 133
	expression/L9 = expression . "-" expression, FOLLOW [234] -> SHIFT '-' GOTO 134
	expression/L10 = expression . "*" expression, FOLLOW [234] -> SHIFT '*' GOTO 135
	expression/L10 = expression . "/" expression, FOLLOW [234] -> SHIFT '/' GOTO 136
	expression/L10 = expression . "%" expression, FOLLOW [234] -> SHIFT '%' GOTO 137
	expression/L5 = expression . "&&" expression, FOLLOW [234] -> SHIFT "&&" GOTO 138
	expression/L4 = expression . "||" expression, FOLLOW [234] -> SHIFT "||" GOTO 139
	expression/L6 = expression . "|" expression, FOLLOW [234] -> SHIFT '|' GOTO 140
	expression/L11 = expression . "<<" expression, FOLLOW [234] -> SHIFT "<<" GOTO 141
	expression/L11 = expression . ">>" expression, FOLLOW [234] -> SHIFT ">>" GOTO 142
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [234] -> SHIFT '[' GOTO 143
	expression/L8 = expression . "==" expression, FOLLOW [234] -> SHIFT "==" GOTO 144
	expression/L8 = expression . "!=" expression, FOLLOW [234] -> SHIFT "!=" GOTO 145
	expression/L8 = expression . ">=" expression, FOLLOW [234] -> SHIFT ">=" GOTO 146
	expression/L8 = expression . "<=" expression, FOLLOW [234] -> SHIFT "<=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [234] -> SHIFT '>' GOTO 148
	expression/L8 = expression . "<" expression, FOLLOW [234] -> SHIFT '<' GOTO 149
	expression/L3 = expression . "+=" expression, FOLLOW [234] -> SHIFT "+=" GOTO 150
	expression/L3 = expression . "-=" expression, FOLLOW [234] -> SHIFT "-=" GOTO 151
	expression/L3 = expression . "*=" expression, FOLLOW [234] -> SHIFT "*=" GOTO 152
	expression/L3 = expression . "/=" expression, FOLLOW [234] -> SHIFT "/=" GOTO 153
	expression/L3 = expression . "^=" expression, FOLLOW [234] -> SHIFT "^=" GOTO 154
	expression/L3 = expression . "&=" expression, FOLLOW [234] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "&=" expression, FOLLOW [234] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "%=" expression, FOLLOW [234] -> SHIFT "%=" GOTO 156
	expression/L3 = expression . "&&=" expression, FOLLOW [234] -> SHIFT "&&=" GOTO 157
	expression/L3 = expression . "||=" expression, FOLLOW [234] -> SHIFT "||=" GOTO 158
	expression/L3 = expression . "|=" expression, FOLLOW [234] -> SHIFT "|=" GOTO 159
	expression/L3 = expression . "<<=" expression, FOLLOW [234] -> SHIFT "<<=" GOTO 160
	expression/L3 = expression . ">>=" expression, FOLLOW [234] -> SHIFT ">>=" GOTO 161
	expression/L12 = expression . "." IDENT, FOLLOW [234] -> SHIFT '.' GOTO 162
	expression/L3 = expression "/=" expression . (90), FOLLOW [234] -> REDUCE expression #3 CALL assign_operator "/"
[235]
	iexpression = expression . indirection IDENT, FOLLOW [234] -> GOTO 126
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [234] -> SHIFT '(' GOTO 127
	expression/L13 = expression . "(" ")", FOLLOW [234] -> SHIFT '(' GOTO 127
	expression/L7 = expression . "&" expression, FOLLOW [234] -> SHIFT '&' GOTO 129
	expression/L7 = expression . "^" expression, FOLLOW [234] -> SHIFT '^' GOTO 130
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 131
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 131
	expression/L3 = expression . "=" expression, FOLLOW [234] -> SHIFT '=' GOTO 132
	expression/L9 = expression . "+" expression, FOLLOW [234] -> SHIFT '+' GOTO 133
	expression/L9 = expression . "-" expression, FOLLOW [234] -> SHIFT '-' GOTO 134
	expression/L10 = expression . "*" expression, FOLLOW [234] -> SHIFT '*' GOTO 135
	expression/L10 = expression . "/" expression, FOLLOW [234] -> SHIFT '/' GOTO 136
	expression/L10 = expression . "%" expression, FOLLOW [234] -> SHIFT '%' GOTO 137
	expression/L5 = expression . "&&" expression, FOLLOW [234] -> SHIFT "&&" GOTO 138
	expression/L4 = expression . "||" expression, FOLLOW [234] -> SHIFT "||" GOTO 139
	expression/L6 = expression . "|" expression, FOLLOW [234] -> SHIFT '|' GOTO 140
	expression/L11 = expression . "<<" expression, FOLLOW [234] -> SHIFT "<<" GOTO 141
	expression/L11 = expression . ">>" expression, FOLLOW [234] -> SHIFT ">>" GOTO 142
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [234] -> SHIFT '[' GOTO 143
	expression/L8 = expression . "==" expression, FOLLOW [234] -> SHIFT "==" GOTO 144
	expression/L8 = expression . "!=" expression, FOLLOW [234] -> SHIFT "!=" GOTO 145
	expression/L8 = expression . ">=" expression, FOLLOW [234] -> SHIFT ">=" GOTO 146
	expression/L8 = expression . "<=" expression, FOLLOW [234] -> SHIFT "<=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [234] -> SHIFT '>' GOTO 148
	expression/L8 = expression . "<" expression, FOLLOW [234] -> SHIFT '<' GOTO 149
	expression/L3 = expression . "+=" expression, FOLLOW [234] -> SHIFT "+=" GOTO 150
	expression/L3 = expression . "-=" expression, FOLLOW [234] -> SHIFT "-=" GOTO 151
	expression/L3 = expression . "*=" expression, FOLLOW [234] -> SHIFT "*=" GOTO 152
	expression/L3 = expression . "/=" expression, FOLLOW [234] -> SHIFT "/=" GOTO 153
	expression/L3 = expression . "^=" expression, FOLLOW [234] -> SHIFT "^=" GOTO 154
	expression/L3 = expression . "&=" expression, FOLLOW [234] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "&=" expression, FOLLOW [234] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "%=" expression, FOLLOW [234] -> SHIFT "%=" GOTO 156
	expression/L3 = expression . "&&=" expression, FOLLOW [234] -> SHIFT "&&=" GOTO 157
	expression/L3 = expression . "||=" expression, FOLLOW [234] -> SHIFT "||=" GOTO 158
	expression/L3 = expression . "|=" expression, FOLLOW [234] -> SHIFT "|=" GOTO 159
	expression/L3 = expression . "<<=" expression, FOLLOW [234] -> SHIFT "<<=" GOTO 160
	expression/L3 = expression . ">>=" expression, FOLLOW [234] -> SHIFT ">>=" GOTO 161
	expression/L12 = expression . "." IDENT, FOLLOW [234] -> SHIFT '.' GOTO 162
	expression/L3 = expression "^=" expression . (91), FOLLOW [234] -> REDUCE expression #3 CALL assign_operator "^"
[236]
	iexpression = expression . indirection IDENT, FOLLOW [234] -> GOTO 126
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [234] -> SHIFT '(' GOTO 127
	expression/L13 = expression . "(" ")", FOLLOW [234] -> SHIFT '(' GOTO 127
	expression/L7 = expression . "&" expression, FOLLOW [234] -> SHIFT '&' GOTO 129
	expression/L7 = expression . "^" expression, FOLLOW [234] -> SHIFT '^' GOTO 130
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 131
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 131
	expression/L3 = expression . "=" expression, FOLLOW [234] -> SHIFT '=' GOTO 132
	expression/L9 = expression . "+" expression, FOLLOW [234] -> SHIFT '+' GOTO 133
	expression/L9 = expression . "-" expression, FOLLOW [234] -> SHIFT '-' GOTO 134
	expression/L10 = expression . "*" expression, FOLLOW [234] -> SHIFT '*' GOTO 135
	expression/L10 = expression . "/" expression, FOLLOW [234] -> SHIFT '/' GOTO 136
	expression/L10 = expression . "%" expression, FOLLOW [234] -> SHIFT '%' GOTO 137
	expression/L5 = expression . "&&" expression, FOLLOW [234] -> SHIFT "&&" GOTO 138
	expression/L4 = expression . "||" expression, FOLLOW [234] -> SHIFT "||" GOTO 139
	expression/L6 = expression . "|" expression, FOLLOW [234] -> SHIFT '|' GOTO 140
	expression/L11 = expression . "<<" expression, FOLLOW [234] -> SHIFT "<<" GOTO 141
	expression/L11 = expression . ">>" expression, FOLLOW [234] -> SHIFT ">>" GOTO 142
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [234] -> SHIFT '[' GOTO 143
	expression/L8 = expression . "==" expression, FOLLOW [234] -> SHIFT "==" GOTO 144
	expression/L8 = expression . "!=" expression, FOLLOW [234] -> SHIFT "!=" GOTO 145
	expression/L8 = expression . ">=" expression, FOLLOW [234] -> SHIFT ">=" GOTO 146
	expression/L8 = expression . "<=" expression, FOLLOW [234] -> SHIFT "<=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [234] -> SHIFT '>' GOTO 148
	expression/L8 = expression . "<" expression, FOLLOW [234] -> SHIFT '<' GOTO 149
	expression/L3 = expression . "+=" expression, FOLLOW [234] -> SHIFT "+=" GOTO 150
	expression/L3 = expression . "-=" expression, FOLLOW [234] -> SHIFT "-=" GOTO 151
	expression/L3 = expression . "*=" expression, FOLLOW [234] -> SHIFT "*=" GOTO 152
	expression/L3 = expression . "/=" expression, FOLLOW [234] -> SHIFT "/=" GOTO 153
	expression/L3 = expression . "^=" expression, FOLLOW [234] -> SHIFT "^=" GOTO 154
	expression/L3 = expression . "&=" expression, FOLLOW [234] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "&=" expression, FOLLOW [234] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "%=" expression, FOLLOW [234] -> SHIFT "%=" GOTO 156
	expression/L3 = expression . "&&=" expression, FOLLOW [234] -> SHIFT "&&=" GOTO 157
	expression/L3 = expression . "||=" expression, FOLLOW [234] -> SHIFT "||=" GOTO 158
	expression/L3 = expression . "|=" expression, FOLLOW [234] -> SHIFT "|=" GOTO 159
	expression/L3 = expression . "<<=" expression, FOLLOW [234] -> SHIFT "<<=" GOTO 160
	expression/L3 = expression . ">>=" expression, FOLLOW [234] -> SHIFT ">>=" GOTO 161
	expression/L12 = expression . "." IDENT, FOLLOW [234] -> SHIFT '.' GOTO 162
	expression/L3 = expression "&=" expression . (92), FOLLOW [234] -> REDUCE expression #3 CALL assign_operator "&"
[237]
	iexpression = expression . indirection IDENT, FOLLOW [234] -> GOTO 126
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [234] -> SHIFT '(' GOTO 127
	expression/L13 = expression . "(" ")", FOLLOW [234] -> SHIFT '(' GOTO 127
	expression/L7 = expression . "&" expression, FOLLOW [234] -> SHIFT '&' GOTO 129
	expression/L7 = expression . "^" expression, FOLLOW [234] -> SHIFT '^' GOTO 130
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 131
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 131
	expression/L3 = expression . "=" expression, FOLLOW [234] -> SHIFT '=' GOTO 132
	expression/L9 = expression . "+" expression, FOLLOW [234] -> SHIFT '+' GOTO 133
	expression/L9 = expression . "-" expression, FOLLOW [234] -> SHIFT '-' GOTO 134
	expression/L10 = expression . "*" expression, FOLLOW [234] -> SHIFT '*' GOTO 135
	expression/L10 = expression . "/" expression, FOLLOW [234] -> SHIFT '/' GOTO 136
	expression/L10 = expression . "%" expression, FOLLOW [234] -> SHIFT '%' GOTO 137
	expression/L5 = expression . "&&" expression, FOLLOW [234] -> SHIFT "&&" GOTO 138
	expression/L4 = expression . "||" expression, FOLLOW [234] -> SHIFT "||" GOTO 139
	expression/L6 = expression . "|" expression, FOLLOW [234] -> SHIFT '|' GOTO 140
	expression/L11 = expression . "<<" expression, FOLLOW [234] -> SHIFT "<<" GOTO 141
	expression/L11 = expression . ">>" expression, FOLLOW [234] -> SHIFT ">>" GOTO 142
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [234] -> SHIFT '[' GOTO 143
	expression/L8 = expression . "==" expression, FOLLOW [234] -> SHIFT "==" GOTO 144
	expression/L8 = expression . "!=" expression, FOLLOW [234] -> SHIFT "!=" GOTO 145
	expression/L8 = expression . ">=" expression, FOLLOW [234] -> SHIFT ">=" GOTO 146
	expression/L8 = expression . "<=" expression, FOLLOW [234] -> SHIFT "<=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [234] -> SHIFT '>' GOTO 148
	expression/L8 = expression . "<" expression, FOLLOW [234] -> SHIFT '<' GOTO 149
	expression/L3 = expression . "+=" expression, FOLLOW [234] -> SHIFT "+=" GOTO 150
	expression/L3 = expression . "-=" expression, FOLLOW [234] -> SHIFT "-=" GOTO 151
	expression/L3 = expression . "*=" expression, FOLLOW [234] -> SHIFT "*=" GOTO 152
	expression/L3 = expression . "/=" expression, FOLLOW [234] -> SHIFT "/=" GOTO 153
	expression/L3 = expression . "^=" expression, FOLLOW [234] -> SHIFT "^=" GOTO 154
	expression/L3 = expression . "&=" expression, FOLLOW [234] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "&=" expression, FOLLOW [234] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "%=" expression, FOLLOW [234] -> SHIFT "%=" GOTO 156
	expression/L3 = expression . "&&=" expression, FOLLOW [234] -> SHIFT "&&=" GOTO 157
	expression/L3 = expression . "||=" expression, FOLLOW [234] -> SHIFT "||=" GOTO 158
	expression/L3 = expression . "|=" expression, FOLLOW [234] -> SHIFT "|=" GOTO 159
	expression/L3 = expression . "<<=" expression, FOLLOW [234] -> SHIFT "<<=" GOTO 160
	expression/L3 = expression . ">>=" expression, FOLLOW [234] -> SHIFT ">>=" GOTO 161
	expression/L12 = expression . "." IDENT, FOLLOW [234] -> SHIFT '.' GOTO 162
	expression/L3 = expression "%=" expression . (93), FOLLOW [234] -> REDUCE expression #3 CALL assign_operator "%"
[238]
	iexpression = expression . indirection IDENT, FOLLOW [234] -> GOTO 126
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [234] -> SHIFT '(' GOTO 127
	expression/L13 = expression . "(" ")", FOLLOW [234] -> SHIFT '(' GOTO 127
	expression/L7 = expression . "&" expression, FOLLOW [234] -> SHIFT '&' GOTO 129
	expression/L7 = expression . "^" expression, FOLLOW [234] -> SHIFT '^' GOTO 130
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 131
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 131
	expression/L3 = expression . "=" expression, FOLLOW [234] -> SHIFT '=' GOTO 132
	expression/L9 = expression . "+" expression, FOLLOW [234] -> SHIFT '+' GOTO 133
	expression/L9 = expression . "-" expression, FOLLOW [234] -> SHIFT '-' GOTO 134
	expression/L10 = expression . "*" expression, FOLLOW [234] -> SHIFT '*' GOTO 135
	expression/L10 = expression . "/" expression, FOLLOW [234] -> SHIFT '/' GOTO 136
	expression/L10 = expression . "%" expression, FOLLOW [234] -> SHIFT '%' GOTO 137
	expression/L5 = expression . "&&" expression, FOLLOW [234] -> SHIFT "&&" GOTO 138
	expression/L4 = expression . "||" expression, FOLLOW [234] -> SHIFT "||" GOTO 139
	expression/L6 = expression . "|" expression, FOLLOW [234] -> SHIFT '|' GOTO 140
	expression/L11 = expression . "<<" expression, FOLLOW [234] -> SHIFT "<<" GOTO 141
	expression/L11 = expression . ">>" expression, FOLLOW [234] -> SHIFT ">>" GOTO 142
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [234] -> SHIFT '[' GOTO 143
	expression/L8 = expression . "==" expression, FOLLOW [234] -> SHIFT "==" GOTO 144
	expression/L8 = expression . "!=" expression, FOLLOW [234] -> SHIFT "!=" GOTO 145
	expression/L8 = expression . ">=" expression, FOLLOW [234] -> SHIFT ">=" GOTO 146
	expression/L8 = expression . "<=" expression, FOLLOW [234] -> SHIFT "<=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [234] -> SHIFT '>' GOTO 148
	expression/L8 = expression . "<" expression, FOLLOW [234] -> SHIFT '<' GOTO 149
	expression/L3 = expression . "+=" expression, FOLLOW [234] -> SHIFT "+=" GOTO 150
	expression/L3 = expression . "-=" expression, FOLLOW [234] -> SHIFT "-=" GOTO 151
	expression/L3 = expression . "*=" expression, FOLLOW [234] -> SHIFT "*=" GOTO 152
	expression/L3 = expression . "/=" expression, FOLLOW [234] -> SHIFT "/=" GOTO 153
	expression/L3 = expression . "^=" expression, FOLLOW [234] -> SHIFT "^=" GOTO 154
	expression/L3 = expression . "&=" expression, FOLLOW [234] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "&=" expression, FOLLOW [234] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "%=" expression, FOLLOW [234] -> SHIFT "%=" GOTO 156
	expression/L3 = expression . "&&=" expression, FOLLOW [234] -> SHIFT "&&=" GOTO 157
	expression/L3 = expression . "||=" expression, FOLLOW [234] -> SHIFT "||=" GOTO 158
	expression/L3 = expression . "|=" expression, FOLLOW [234] -> SHIFT "|=" GOTO 159
	expression/L3 = expression . "<<=" expression, FOLLOW [234] -> SHIFT "<<=" GOTO 160
	expression/L3 = expression . ">>=" expression, FOLLOW [234] -> SHIFT ">>=" GOTO 161
	expression/L12 = expression . "." IDENT, FOLLOW [234] -> SHIFT '.' GOTO 162
	expression/L3 = expression "&&=" expression . (94), FOLLOW [234] -> REDUCE expression #3 CALL assign_operator "&&"
[239]
	iexpression = expression . indirection IDENT, FOLLOW [234] -> GOTO 126
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [234] -> SHIFT '(' GOTO 127
	expression/L13 = expression . "(" ")", FOLLOW [234] -> SHIFT '(' GOTO 127
	expression/L7 = expression . "&" expression, FOLLOW [234] -> SHIFT '&' GOTO 129
	expression/L7 = expression . "^" expression, FOLLOW [234] -> SHIFT '^' GOTO 130
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 131
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 131
	expression/L3 = expression . "=" expression, FOLLOW [234] -> SHIFT '=' GOTO 132
	expression/L9 = expression . "+" expression, FOLLOW [234] -> SHIFT '+' GOTO 133
	expression/L9 = expression . "-" expression, FOLLOW [234] -> SHIFT '-' GOTO 134
	expression/L10 = expression . "*" expression, FOLLOW [234] -> SHIFT '*' GOTO 135
	expression/L10 = expression . "/" expression, FOLLOW [234] -> SHIFT '/' GOTO 136
	expression/L10 = expression . "%" expression, FOLLOW [234] -> SHIFT '%' GOTO 137
	expression/L5 = expression . "&&" expression, FOLLOW [234] -> SHIFT "&&" GOTO 138
	expression/L4 = expression . "||" expression, FOLLOW [234] -> SHIFT "||" GOTO 139
	expression/L6 = expression . "|" expression, FOLLOW [234] -> SHIFT '|' GOTO 140
	expression/L11 = expression . "<<" expression, FOLLOW [234] -> SHIFT "<<" GOTO 141
	expression/L11 = expression . ">>" expression, FOLLOW [234] -> SHIFT ">>" GOTO 142
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [234] -> SHIFT '[' GOTO 143
	expression/L8 = expression . "==" expression, FOLLOW [234] -> SHIFT "==" GOTO 144
	expression/L8 = expression . "!=" expression, FOLLOW [234] -> SHIFT "!=" GOTO 145
	expression/L8 = expression . ">=" expression, FOLLOW [234] -> SHIFT ">=" GOTO 146
	expression/L8 = expression . "<=" expression, FOLLOW [234] -> SHIFT "<=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [234] -> SHIFT '>' GOTO 148
	expression/L8 = expression . "<" expression, FOLLOW [234] -> SHIFT '<' GOTO 149
	expression/L3 = expression . "+=" expression, FOLLOW [234] -> SHIFT "+=" GOTO 150
	expression/L3 = expression . "-=" expression, FOLLOW [234] -> SHIFT "-=" GOTO 151
	expression/L3 = expression . "*=" expression, FOLLOW [234] -> SHIFT "*=" GOTO 152
	expression/L3 = expression . "/=" expression, FOLLOW [234] -> SHIFT "/=" GOTO 153
	expression/L3 = expression . "^=" expression, FOLLOW [234] -> SHIFT "^=" GOTO 154
	expression/L3 = expression . "&=" expression, FOLLOW [234] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "&=" expression, FOLLOW [234] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "%=" expression, FOLLOW [234] -> SHIFT "%=" GOTO 156
	expression/L3 = expression . "&&=" expression, FOLLOW [234] -> SHIFT "&&=" GOTO 157
	expression/L3 = expression . "||=" expression, FOLLOW [234] -> SHIFT "||=" GOTO 158
	expression/L3 = expression . "|=" expression, FOLLOW [234] -> SHIFT "|=" GOTO 159
	expression/L3 = expression . "<<=" expression, FOLLOW [234] -> SHIFT "<<=" GOTO 160
	expression/L3 = expression . ">>=" expression, FOLLOW [234] -> SHIFT ">>=" GOTO 161
	expression/L12 = expression . "." IDENT, FOLLOW [234] -> SHIFT '.' GOTO 162
	expression/L3 = expression "||=" expression . (95), FOLLOW [234] -> REDUCE expression #3 CALL assign_operator "||"
[240]
	iexpression = expression . indirection IDENT, FOLLOW [234] -> GOTO 126
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [234] -> SHIFT '(' GOTO 127
	expression/L13 = expression . "(" ")", FOLLOW [234] -> SHIFT '(' GOTO 127
	expression/L7 = expression . "&" expression, FOLLOW [234] -> SHIFT '&' GOTO 129
	expression/L7 = expression . "^" expression, FOLLOW [234] -> SHIFT '^' GOTO 130
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 131
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 131
	expression/L3 = expression . "=" expression, FOLLOW [234] -> SHIFT '=' GOTO 132
	expression/L9 = expression . "+" expression, FOLLOW [234] -> SHIFT '+' GOTO 133
	expression/L9 = expression . "-" expression, FOLLOW [234] -> SHIFT '-' GOTO 134
	expression/L10 = expression . "*" expression, FOLLOW [234] -> SHIFT '*' GOTO 135
	expression/L10 = expression . "/" expression, FOLLOW [234] -> SHIFT '/' GOTO 136
	expression/L10 = expression . "%" expression, FOLLOW [234] -> SHIFT '%' GOTO 137
	expression/L5 = expression . "&&" expression, FOLLOW [234] -> SHIFT "&&" GOTO 138
	expression/L4 = expression . "||" expression, FOLLOW [234] -> SHIFT "||" GOTO 139
	expression/L6 = expression . "|" expression, FOLLOW [234] -> SHIFT '|' GOTO 140
	expression/L11 = expression . "<<" expression, FOLLOW [234] -> SHIFT "<<" GOTO 141
	expression/L11 = expression . ">>" expression, FOLLOW [234] -> SHIFT ">>" GOTO 142
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [234] -> SHIFT '[' GOTO 143
	expression/L8 = expression . "==" expression, FOLLOW [234] -> SHIFT "==" GOTO 144
	expression/L8 = expression . "!=" expression, FOLLOW [234] -> SHIFT "!=" GOTO 145
	expression/L8 = expression . ">=" expression, FOLLOW [234] -> SHIFT ">=" GOTO 146
	expression/L8 = expression . "<=" expression, FOLLOW [234] -> SHIFT "<=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [234] -> SHIFT '>' GOTO 148
	expression/L8 = expression . "<" expression, FOLLOW [234] -> SHIFT '<' GOTO 149
	expression/L3 = expression . "+=" expression, FOLLOW [234] -> SHIFT "+=" GOTO 150
	expression/L3 = expression . "-=" expression, FOLLOW [234] -> SHIFT "-=" GOTO 151
	expression/L3 = expression . "*=" expression, FOLLOW [234] -> SHIFT "*=" GOTO 152
	expression/L3 = expression . "/=" expression, FOLLOW [234] -> SHIFT "/=" GOTO 153
	expression/L3 = expression . "^=" expression, FOLLOW [234] -> SHIFT "^=" GOTO 154
	expression/L3 = expression . "&=" expression, FOLLOW [234] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "&=" expression, FOLLOW [234] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "%=" expression, FOLLOW [234] -> SHIFT "%=" GOTO 156
	expression/L3 = expression . "&&=" expression, FOLLOW [234] -> SHIFT "&&=" GOTO 157
	expression/L3 = expression . "||=" expression, FOLLOW [234] -> SHIFT "||=" GOTO 158
	expression/L3 = expression . "|=" expression, FOLLOW [234] -> SHIFT "|=" GOTO 159
	expression/L3 = expression . "<<=" expression, FOLLOW [234] -> SHIFT "<<=" GOTO 160
	expression/L3 = expression . ">>=" expression, FOLLOW [234] -> SHIFT ">>=" GOTO 161
	expression/L12 = expression . "." IDENT, FOLLOW [234] -> SHIFT '.' GOTO 162
	expression/L3 = expression "|=" expression . (96), FOLLOW [234] -> REDUCE expression #3 CALL assign_operator "|"
[241]
	iexpression = expression . indirection IDENT, FOLLOW [234] -> GOTO 126
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [234] -> SHIFT '(' GOTO 127
	expression/L13 = expression . "(" ")", FOLLOW [234] -> SHIFT '(' GOTO 127
	expression/L7 = expression . "&" expression, FOLLOW [234] -> SHIFT '&' GOTO 129
	expression/L7 = expression . "^" expression, FOLLOW [234] -> SHIFT '^' GOTO 130
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 131
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 131
	expression/L3 = expression . "=" expression, FOLLOW [234] -> SHIFT '=' GOTO 132
	expression/L9 = expression . "+" expression, FOLLOW [234] -> SHIFT '+' GOTO 133
	expression/L9 = expression . "-" expression, FOLLOW [234] -> SHIFT '-' GOTO 134
	expression/L10 = expression . "*" expression, FOLLOW [234] -> SHIFT '*' GOTO 135
	expression/L10 = expression . "/" expression, FOLLOW [234] -> SHIFT '/' GOTO 136
	expression/L10 = expression . "%" expression, FOLLOW [234] -> SHIFT '%' GOTO 137
	expression/L5 = expression . "&&" expression, FOLLOW [234] -> SHIFT "&&" GOTO 138
	expression/L4 = expression . "||" expression, FOLLOW [234] -> SHIFT "||" GOTO 139
	expression/L6 = expression . "|" expression, FOLLOW [234] -> SHIFT '|' GOTO 140
	expression/L11 = expression . "<<" expression, FOLLOW [234] -> SHIFT "<<" GOTO 141
	expression/L11 = expression . ">>" expression, FOLLOW [234] -> SHIFT ">>" GOTO 142
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [234] -> SHIFT '[' GOTO 143
	expression/L8 = expression . "==" expression, FOLLOW [234] -> SHIFT "==" GOTO 144
	expression/L8 = expression . "!=" expression, FOLLOW [234] -> SHIFT "!=" GOTO 145
	expression/L8 = expression . ">=" expression, FOLLOW [234] -> SHIFT ">=" GOTO 146
	expression/L8 = expression . "<=" expression, FOLLOW [234] -> SHIFT "<=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [234] -> SHIFT '>' GOTO 148
	expression/L8 = expression . "<" expression, FOLLOW [234] -> SHIFT '<' GOTO 149
	expression/L3 = expression . "+=" expression, FOLLOW [234] -> SHIFT "+=" GOTO 150
	expression/L3 = expression . "-=" expression, FOLLOW [234] -> SHIFT "-=" GOTO 151
	expression/L3 = expression . "*=" expression, FOLLOW [234] -> SHIFT "*=" GOTO 152
	expression/L3 = expression . "/=" expression, FOLLOW [234] -> SHIFT "/=" GOTO 153
	expression/L3 = expression . "^=" expression, FOLLOW [234] -> SHIFT "^=" GOTO 154
	expression/L3 = expression . "&=" expression, FOLLOW [234] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "&=" expression, FOLLOW [234] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "%=" expression, FOLLOW [234] -> SHIFT "%=" GOTO 156
	expression/L3 = expression . "&&=" expression, FOLLOW [234] -> SHIFT "&&=" GOTO 157
	expression/L3 = expression . "||=" expression, FOLLOW [234] -> SHIFT "||=" GOTO 158
	expression/L3 = expression . "|=" expression, FOLLOW [234] -> SHIFT "|=" GOTO 159
	expression/L3 = expression . "<<=" expression, FOLLOW [234] -> SHIFT "<<=" GOTO 160
	expression/L3 = expression . ">>=" expression, FOLLOW [234] -> SHIFT ">>=" GOTO 161
	expression/L12 = expression . "." IDENT, FOLLOW [234] -> SHIFT '.' GOTO 162
	expression/L3 = expression "<<=" expression . (97), FOLLOW [234] -> REDUCE expression #3 CALL assign_operator "<<"
[242]
	iexpression = expression . indirection IDENT, FOLLOW [234] -> GOTO 126
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [234] -> SHIFT '(' GOTO 127
	expression/L13 = expression . "(" ")", FOLLOW [234] -> SHIFT '(' GOTO 127
	expression/L7 = expression . "&" expression, FOLLOW [234] -> SHIFT '&' GOTO 129
	expression/L7 = expression . "^" expression, FOLLOW [234] -> SHIFT '^' GOTO 130
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 131
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 131
	expression/L3 = expression . "=" expression, FOLLOW [234] -> SHIFT '=' GOTO 132
	expression/L9 = expression . "+" expression, FOLLOW [234] -> SHIFT '+' GOTO 133
	expression/L9 = expression . "-" expression, FOLLOW [234] -> SHIFT '-' GOTO 134
	expression/L10 = expression . "*" expression, FOLLOW [234] -> SHIFT '*' GOTO 135
	expression/L10 = expression . "/" expression, FOLLOW [234] -> SHIFT '/' GOTO 136
	expression/L10 = expression . "%" expression, FOLLOW [234] -> SHIFT '%' GOTO 137
	expression/L5 = expression . "&&" expression, FOLLOW [234] -> SHIFT "&&" GOTO 138
	expression/L4 = expression . "||" expression, FOLLOW [234] -> SHIFT "||" GOTO 139
	expression/L6 = expression . "|" expression, FOLLOW [234] -> SHIFT '|' GOTO 140
	expression/L11 = expression . "<<" expression, FOLLOW [234] -> SHIFT "<<" GOTO 141
	expression/L11 = expression . ">>" expression, FOLLOW [234] -> SHIFT ">>" GOTO 142
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [234] -> SHIFT '[' GOTO 143
	expression/L8 = expression . "==" expression, FOLLOW [234] -> SHIFT "==" GOTO 144
	expression/L8 = expression . "!=" expression, FOLLOW [234] -> SHIFT "!=" GOTO 145
	expression/L8 = expression . ">=" expression, FOLLOW [234] -> SHIFT ">=" GOTO 146
	expression/L8 = expression . "<=" expression, FOLLOW [234] -> SHIFT "<=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [234] -> SHIFT '>' GOTO 148
	expression/L8 = expression . "<" expression, FOLLOW [234] -> SHIFT '<' GOTO 149
	expression/L3 = expression . "+=" expression, FOLLOW [234] -> SHIFT "+=" GOTO 150
	expression/L3 = expression . "-=" expression, FOLLOW [234] -> SHIFT "-=" GOTO 151
	expression/L3 = expression . "*=" expression, FOLLOW [234] -> SHIFT "*=" GOTO 152
	expression/L3 = expression . "/=" expression, FOLLOW [234] -> SHIFT "/=" GOTO 153
	expression/L3 = expression . "^=" expression, FOLLOW [234] -> SHIFT "^=" GOTO 154
	expression/L3 = expression . "&=" expression, FOLLOW [234] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "&=" expression, FOLLOW [234] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "%=" expression, FOLLOW [234] -> SHIFT "%=" GOTO 156
	expression/L3 = expression . "&&=" expression, FOLLOW [234] -> SHIFT "&&=" GOTO 157
	expression/L3 = expression . "||=" expression, FOLLOW [234] -> SHIFT "||=" GOTO 158
	expression/L3 = expression . "|=" expression, FOLLOW [234] -> SHIFT "|=" GOTO 159
	expression/L3 = expression . "<<=" expression, FOLLOW [234] -> SHIFT "<<=" GOTO 160
	expression/L3 = expression . ">>=" expression, FOLLOW [234] -> SHIFT ">>=" GOTO 161
	expression/L12 = expression . "." IDENT, FOLLOW [234] -> SHIFT '.' GOTO 162
	expression/L3 = expression ">>=" expression . (98), FOLLOW [234] -> REDUCE expression #3 CALL assign_operator ">>"
[243]
	expression/L12 = expression "." IDENT . (119), FOLLOW [234] -> REDUCE expression #3 CALL member
[244]
	expression/L2 = "(" expression ")" ., FOLLOW [234] -> REDUCE expression #3
[245]
	statement/L1 = "{" codeblock "}" . (scope), FOLLOW [97] -> REDUCE statement #3
[246]
	expression/L3 = . expression "=" expression, FOLLOW [226] -> GOTO 180
	expression/L3 = . expression "+=" expression, FOLLOW [226] -> GOTO 180
	expression/L3 = . expression "-=" expression, FOLLOW [226] -> GOTO 180
	expression/L3 = . expression "*=" expression, FOLLOW [226] -> GOTO 180
	expression/L3 = . expression "/=" expression, FOLLOW [226] -> GOTO 180
	expression/L3 = . expression "^=" expression, FOLLOW [226] -> GOTO 180
	expression/L3 = . expression "&=" expression, FOLLOW [226] -> GOTO 180
	expression/L3 = . expression "%=" expression, FOLLOW [226] -> GOTO 180
	expression/L3 = . expression "&&=" expression, FOLLOW [226] -> GOTO 180
	expression/L3 = . expression "||=" expression, FOLLOW [226] -> GOTO 180
	expression/L3 = . expression "&=" expression, FOLLOW [226] -> GOTO 180
	expression/L3 = . expression "|=" expression, FOLLOW [226] -> GOTO 180
	expression/L3 = . expression "<<=" expression, FOLLOW [226] -> GOTO 180
	expression/L3 = . expression ">>=" expression, FOLLOW [226] -> GOTO 180
	expression/L4 = . expression "||" expression, FOLLOW [226] -> GOTO 180
	expression/L5 = . expression "&&" expression, FOLLOW [226] -> GOTO 180
	expression/L6 = . expression "|" expression, FOLLOW [226] -> GOTO 180
	expression/L7 = . expression "^" expression, FOLLOW [226] -> GOTO 180
	expression/L7 = . expression "&" expression, FOLLOW [226] -> GOTO 180
	expression/L8 = . expression "==" expression, FOLLOW [226] -> GOTO 180
	expression/L8 = . expression "!=" expression, FOLLOW [226] -> GOTO 180
	expression/L8 = . expression "<=" expression, FOLLOW [226] -> GOTO 180
	expression/L8 = . expression "<" expression, FOLLOW [226] -> GOTO 180
	expression/L8 = . expression ">=" expression, FOLLOW [226] -> GOTO 180
	expression/L8 = . expression ">" expression, FOLLOW [226] -> GOTO 180
	expression/L9 = . expression "+" expression, FOLLOW [226] -> GOTO 180
	expression/L9 = . expression "-" expression, FOLLOW [226] -> GOTO 180
	expression/L10 = . expression "*" expression, FOLLOW [226] -> GOTO 180
	expression/L10 = . expression "/" expression, FOLLOW [226] -> GOTO 180
	expression/L10 = . expression "%" expression, FOLLOW [226] -> GOTO 180
	expression/L11 = . expression "<<" expression, FOLLOW [226] -> GOTO 180
	expression/L11 = . expression ">>" expression, FOLLOW [226] -> GOTO 180
	expression/L12 = . expression "." IDENT, FOLLOW [226] -> GOTO 180
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [226] -> GOTO 180
	expression/L13 = . expression "(" ")", FOLLOW [226] -> GOTO 180
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [226] -> GOTO 180
	iexpression = . expression indirection IDENT, FOLLOW [226] -> GOTO 180
	expressionlist = . expression "," expressionlist, FOLLOW [238] -> GOTO 180
	expressionlist = . expression, FOLLOW [238] -> GOTO 180
	expression/L12 = . iexpression, FOLLOW [226] -> GOTO 69
	expressionlist = expression "," . expressionlist, FOLLOW [238] -> GOTO 293
	expression/L2 = . BOOLEAN, FOLLOW [226] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [226] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [226] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [226] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [226] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [226] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [226] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [226] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [226] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [226] -> SHIFT '{' GOTO 94
	expression/L1 = . "{" "}", FOLLOW [226] -> SHIFT '{' GOTO 94
	expression/L9 = . "+" expression, FOLLOW [226] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [226] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [226] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [226] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [226] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [226] -> SHIFT "new" GOTO 90
	expression/L2 = . "null", FOLLOW [226] -> SHIFT "null" GOTO 91
[247]
	expression/L1 = "{" expressionlist "}" . (76), FOLLOW [234] -> REDUCE expression #3 CALL structure
[248]
	statement/L1 = "var" variabledefinition ";" . (65), FOLLOW [97] -> REDUCE statement #3 CALL definition
[249]
	statement/L1 = "return" expression ";" . (step:67), FOLLOW [97] -> REDUCE statement #3 CALL return_value
[250]
	statement/L1 = "delete" expression ";" . (68), FOLLOW [97] -> REDUCE statement #3 CALL delete
[251]
	iexpression = expression . indirection IDENT, FOLLOW [224] -> GOTO 126
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [224] -> SHIFT '(' GOTO 127
	expression/L13 = expression . "(" ")", FOLLOW [224] -> SHIFT '(' GOTO 127
	statement/L1 = "if" "(" expression . ")" "{" codeblock "}", FOLLOW [97] -> SHIFT ')' GOTO 294
	statement/L1 = "if" "(" expression . ")" "{" codeblock "}" "else" "{" codeblock "}", FOLLOW [97] -> SHIFT ')' GOTO 294
	expression/L7 = expression . "&" expression, FOLLOW [224] -> SHIFT '&' GOTO 129
	expression/L7 = expression . "^" expression, FOLLOW [224] -> SHIFT '^' GOTO 130
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 131
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 131
	expression/L3 = expression . "=" expression, FOLLOW [224] -> SHIFT '=' GOTO 132
	expression/L9 = expression . "+" expression, FOLLOW [224] -> SHIFT '+' GOTO 133
	expression/L9 = expression . "-" expression, FOLLOW [224] -> SHIFT '-' GOTO 134
	expression/L10 = expression . "*" expression, FOLLOW [224] -> SHIFT '*' GOTO 135
	expression/L10 = expression . "/" expression, FOLLOW [224] -> SHIFT '/' GOTO 136
	expression/L10 = expression . "%" expression, FOLLOW [224] -> SHIFT '%' GOTO 137
	expression/L5 = expression . "&&" expression, FOLLOW [224] -> SHIFT "&&" GOTO 138
	expression/L4 = expression . "||" expression, FOLLOW [224] -> SHIFT "||" GOTO 139
	expression/L6 = expression . "|" expression, FOLLOW [224] -> SHIFT '|' GOTO 140
	expression/L11 = expression . "<<" expression, FOLLOW [224] -> SHIFT "<<" GOTO 141
	expression/L11 = expression . ">>" expression, FOLLOW [224] -> SHIFT ">>" GOTO 142
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [224] -> SHIFT '[' GOTO 143
	expression/L8 = expression . "==" expression, FOLLOW [224] -> SHIFT "==" GOTO 144
	expression/L8 = expression . "!=" expression, FOLLOW [224] -> SHIFT "!=" GOTO 145
	expression/L8 = expression . ">=" expression, FOLLOW [224] -> SHIFT ">=" GOTO 146
	expression/L8 = expression . "<=" expression, FOLLOW [224] -> SHIFT "<=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [224] -> SHIFT '>' GOTO 148
	expression/L8 = expression . "<" expression, FOLLOW [224] -> SHIFT '<' GOTO 149
	expression/L3 = expression . "+=" expression, FOLLOW [224] -> SHIFT "+=" GOTO 150
	expression/L3 = expression . "-=" expression, FOLLOW [224] -> SHIFT "-=" GOTO 151
	expression/L3 = expression . "*=" expression, FOLLOW [224] -> SHIFT "*=" GOTO 152
	expression/L3 = expression . "/=" expression, FOLLOW [224] -> SHIFT "/=" GOTO 153
	expression/L3 = expression . "^=" expression, FOLLOW [224] -> SHIFT "^=" GOTO 154
	expression/L3 = expression . "&=" expression, FOLLOW [224] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "&=" expression, FOLLOW [224] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "%=" expression, FOLLOW [224] -> SHIFT "%=" GOTO 156
	expression/L3 = expression . "&&=" expression, FOLLOW [224] -> SHIFT "&&=" GOTO 157
	expression/L3 = expression . "||=" expression, FOLLOW [224] -> SHIFT "||=" GOTO 158
	expression/L3 = expression . "|=" expression, FOLLOW [224] -> SHIFT "|=" GOTO 159
	expression/L3 = expression . "<<=" expression, FOLLOW [224] -> SHIFT "<<=" GOTO 160
	expression/L3 = expression . ">>=" expression, FOLLOW [224] -> SHIFT ">>=" GOTO 161
	expression/L12 = expression . "." IDENT, FOLLOW [224] -> SHIFT '.' GOTO 162
[252]
	iexpression = expression . indirection IDENT, FOLLOW [224] -> GOTO 126
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [224] -> SHIFT '(' GOTO 127
	expression/L13 = expression . "(" ")", FOLLOW [224] -> SHIFT '(' GOTO 127
	statement/L1 = "while" "(" expression . ")" "{" codeblock "}", FOLLOW [97] -> SHIFT ')' GOTO 295
	expression/L7 = expression . "&" expression, FOLLOW [224] -> SHIFT '&' GOTO 129
	expression/L7 = expression . "^" expression, FOLLOW [224] -> SHIFT '^' GOTO 130
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 131
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 131
	expression/L3 = expression . "=" expression, FOLLOW [224] -> SHIFT '=' GOTO 132
	expression/L9 = expression . "+" expression, FOLLOW [224] -> SHIFT '+' GOTO 133
	expression/L9 = expression . "-" expression, FOLLOW [224] -> SHIFT '-' GOTO 134
	expression/L10 = expression . "*" expression, FOLLOW [224] -> SHIFT '*' GOTO 135
	expression/L10 = expression . "/" expression, FOLLOW [224] -> SHIFT '/' GOTO 136
	expression/L10 = expression . "%" expression, FOLLOW [224] -> SHIFT '%' GOTO 137
	expression/L5 = expression . "&&" expression, FOLLOW [224] -> SHIFT "&&" GOTO 138
	expression/L4 = expression . "||" expression, FOLLOW [224] -> SHIFT "||" GOTO 139
	expression/L6 = expression . "|" expression, FOLLOW [224] -> SHIFT '|' GOTO 140
	expression/L11 = expression . "<<" expression, FOLLOW [224] -> SHIFT "<<" GOTO 141
	expression/L11 = expression . ">>" expression, FOLLOW [224] -> SHIFT ">>" GOTO 142
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [224] -> SHIFT '[' GOTO 143
	expression/L8 = expression . "==" expression, FOLLOW [224] -> SHIFT "==" GOTO 144
	expression/L8 = expression . "!=" expression, FOLLOW [224] -> SHIFT "!=" GOTO 145
	expression/L8 = expression . ">=" expression, FOLLOW [224] -> SHIFT ">=" GOTO 146
	expression/L8 = expression . "<=" expression, FOLLOW [224] -> SHIFT "<=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [224] -> SHIFT '>' GOTO 148
	expression/L8 = expression . "<" expression, FOLLOW [224] -> SHIFT '<' GOTO 149
	expression/L3 = expression . "+=" expression, FOLLOW [224] -> SHIFT "+=" GOTO 150
	expression/L3 = expression . "-=" expression, FOLLOW [224] -> SHIFT "-=" GOTO 151
	expression/L3 = expression . "*=" expression, FOLLOW [224] -> SHIFT "*=" GOTO 152
	expression/L3 = expression . "/=" expression, FOLLOW [224] -> SHIFT "/=" GOTO 153
	expression/L3 = expression . "^=" expression, FOLLOW [224] -> SHIFT "^=" GOTO 154
	expression/L3 = expression . "&=" expression, FOLLOW [224] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "&=" expression, FOLLOW [224] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "%=" expression, FOLLOW [224] -> SHIFT "%=" GOTO 156
	expression/L3 = expression . "&&=" expression, FOLLOW [224] -> SHIFT "&&=" GOTO 157
	expression/L3 = expression . "||=" expression, FOLLOW [224] -> SHIFT "||=" GOTO 158
	expression/L3 = expression . "|=" expression, FOLLOW [224] -> SHIFT "|=" GOTO 159
	expression/L3 = expression . "<<=" expression, FOLLOW [224] -> SHIFT "<<=" GOTO 160
	expression/L3 = expression . ">>=" expression, FOLLOW [224] -> SHIFT ">>=" GOTO 161
	expression/L12 = expression . "." IDENT, FOLLOW [224] -> SHIFT '.' GOTO 162
[253]
	expression/L1 = "new" typespec ":" . expression, FOLLOW [234] -> GOTO 296
	expression/L3 = . expression "=" expression, FOLLOW [234] -> GOTO 296
	expression/L3 = . expression "+=" expression, FOLLOW [234] -> GOTO 296
	expression/L3 = . expression "-=" expression, FOLLOW [234] -> GOTO 296
	expression/L3 = . expression "*=" expression, FOLLOW [234] -> GOTO 296
	expression/L3 = . expression "/=" expression, FOLLOW [234] -> GOTO 296
	expression/L3 = . expression "^=" expression, FOLLOW [234] -> GOTO 296
	expression/L3 = . expression "&=" expression, FOLLOW [234] -> GOTO 296
	expression/L3 = . expression "%=" expression, FOLLOW [234] -> GOTO 296
	expression/L3 = . expression "&&=" expression, FOLLOW [234] -> GOTO 296
	expression/L3 = . expression "||=" expression, FOLLOW [234] -> GOTO 296
	expression/L3 = . expression "&=" expression, FOLLOW [234] -> GOTO 296
	expression/L3 = . expression "|=" expression, FOLLOW [234] -> GOTO 296
	expression/L3 = . expression "<<=" expression, FOLLOW [234] -> GOTO 296
	expression/L3 = . expression ">>=" expression, FOLLOW [234] -> GOTO 296
	expression/L4 = . expression "||" expression, FOLLOW [234] -> GOTO 296
	expression/L5 = . expression "&&" expression, FOLLOW [234] -> GOTO 296
	expression/L6 = . expression "|" expression, FOLLOW [234] -> GOTO 296
	expression/L7 = . expression "^" expression, FOLLOW [234] -> GOTO 296
	expression/L7 = . expression "&" expression, FOLLOW [234] -> GOTO 296
	expression/L8 = . expression "==" expression, FOLLOW [234] -> GOTO 296
	expression/L8 = . expression "!=" expression, FOLLOW [234] -> GOTO 296
	expression/L8 = . expression "<=" expression, FOLLOW [234] -> GOTO 296
	expression/L8 = . expression "<" expression, FOLLOW [234] -> GOTO 296
	expression/L8 = . expression ">=" expression, FOLLOW [234] -> GOTO 296
	expression/L8 = . expression ">" expression, FOLLOW [234] -> GOTO 296
	expression/L9 = . expression "+" expression, FOLLOW [234] -> GOTO 296
	expression/L9 = . expression "-" expression, FOLLOW [234] -> GOTO 296
	expression/L10 = . expression "*" expression, FOLLOW [234] -> GOTO 296
	expression/L10 = . expression "/" expression, FOLLOW [234] -> GOTO 296
	expression/L10 = . expression "%" expression, FOLLOW [234] -> GOTO 296
	expression/L11 = . expression "<<" expression, FOLLOW [234] -> GOTO 296
	expression/L11 = . expression ">>" expression, FOLLOW [234] -> GOTO 296
	expression/L12 = . expression "." IDENT, FOLLOW [234] -> GOTO 296
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [234] -> GOTO 296
	expression/L13 = . expression "(" ")", FOLLOW [234] -> GOTO 296
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [234] -> GOTO 296
	iexpression = . expression indirection IDENT, FOLLOW [234] -> GOTO 296
	expression/L12 = . iexpression, FOLLOW [234] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [234] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [234] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [234] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [234] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [234] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [234] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [234] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [234] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [234] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [234] -> SHIFT '{' GOTO 94
	expression/L1 = . "{" "}", FOLLOW [234] -> SHIFT '{' GOTO 94
	expression/L9 = . "+" expression, FOLLOW [234] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [234] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [234] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [234] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [234] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [234] -> SHIFT "new" GOTO 90
	expression/L2 = . "null", FOLLOW [234] -> SHIFT "null" GOTO 91
[254]
	variabledefinition = typespec IDENT "[" expression "]" "=" . expression, FOLLOW [13] -> GOTO 297
	expression/L3 = . expression "=" expression, FOLLOW [96] -> GOTO 297
	expression/L3 = . expression "+=" expression, FOLLOW [96] -> GOTO 297
	expression/L3 = . expression "-=" expression, FOLLOW [96] -> GOTO 297
	expression/L3 = . expression "*=" expression, FOLLOW [96] -> GOTO 297
	expression/L3 = . expression "/=" expression, FOLLOW [96] -> GOTO 297
	expression/L3 = . expression "^=" expression, FOLLOW [96] -> GOTO 297
	expression/L3 = . expression "&=" expression, FOLLOW [96] -> GOTO 297
	expression/L3 = . expression "%=" expression, FOLLOW [96] -> GOTO 297
	expression/L3 = . expression "&&=" expression, FOLLOW [96] -> GOTO 297
	expression/L3 = . expression "||=" expression, FOLLOW [96] -> GOTO 297
	expression/L3 = . expression "&=" expression, FOLLOW [96] -> GOTO 297
	expression/L3 = . expression "|=" expression, FOLLOW [96] -> GOTO 297
	expression/L3 = . expression "<<=" expression, FOLLOW [96] -> GOTO 297
	expression/L3 = . expression ">>=" expression, FOLLOW [96] -> GOTO 297
	expression/L4 = . expression "||" expression, FOLLOW [96] -> GOTO 297
	expression/L5 = . expression "&&" expression, FOLLOW [96] -> GOTO 297
	expression/L6 = . expression "|" expression, FOLLOW [96] -> GOTO 297
	expression/L7 = . expression "^" expression, FOLLOW [96] -> GOTO 297
	expression/L7 = . expression "&" expression, FOLLOW [96] -> GOTO 297
	expression/L8 = . expression "==" expression, FOLLOW [96] -> GOTO 297
	expression/L8 = . expression "!=" expression, FOLLOW [96] -> GOTO 297
	expression/L8 = . expression "<=" expression, FOLLOW [96] -> GOTO 297
	expression/L8 = . expression "<" expression, FOLLOW [96] -> GOTO 297
	expression/L8 = . expression ">=" expression, FOLLOW [96] -> GOTO 297
	expression/L8 = . expression ">" expression, FOLLOW [96] -> GOTO 297
	expression/L9 = . expression "+" expression, FOLLOW [96] -> GOTO 297
	expression/L9 = . expression "-" expression, FOLLOW [96] -> GOTO 297
	expression/L10 = . expression "*" expression, FOLLOW [96] -> GOTO 297
	expression/L10 = . expression "/" expression, FOLLOW [96] -> GOTO 297
	expression/L10 = . expression "%" expression, FOLLOW [96] -> GOTO 297
	expression/L11 = . expression "<<" expression, FOLLOW [96] -> GOTO 297
	expression/L11 = . expression ">>" expression, FOLLOW [96] -> GOTO 297
	expression/L12 = . expression "." IDENT, FOLLOW [96] -> GOTO 297
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [96] -> GOTO 297
	expression/L13 = . expression "(" ")", FOLLOW [96] -> GOTO 297
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [96] -> GOTO 297
	iexpression = . expression indirection IDENT, FOLLOW [96] -> GOTO 297
	expression/L12 = . iexpression, FOLLOW [96] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [96] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [96] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [96] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [96] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [96] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [96] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [96] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [96] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [96] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [96] -> SHIFT '{' GOTO 94
	expression/L1 = . "{" "}", FOLLOW [96] -> SHIFT '{' GOTO 94
	expression/L9 = . "+" expression, FOLLOW [96] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [96] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [96] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [96] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [96] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [96] -> SHIFT "new" GOTO 90
	expression/L2 = . "null", FOLLOW [96] -> SHIFT "null" GOTO 91
[255]
	paramdecl = typespec IDENT . (63), FOLLOW [182] -> REDUCE paramdecl #2 CALL paramdef
[256]
	callablebody = "(" parameterlist ")" . "const" "{" codeblock "}", FOLLOW [244] -> SHIFT "const" GOTO 298
	callablebody = "(" parameterlist ")" . "{" codeblock "}", FOLLOW [244] -> SHIFT '{' GOTO 299
[257]
	typespec/L1 = . typename, FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [9] -> GOTO 8
	paramdecl = . typespec IDENT, FOLLOW [182] -> GOTO 183
	parameters = paramdecl "," . parameters, FOLLOW [10] -> GOTO 300
	parameters = . paramdecl "," parameters, FOLLOW [10] -> GOTO 186
	parameters = . paramdecl, FOLLOW [10] -> GOTO 186
	typename/L1 = . IDENT, FOLLOW [61] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [61] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
[258]
	interface_definition = "function" typespec IDENT . "(" parameterlist ")" ";", FOLLOW [169] -> SHIFT '(' GOTO 301
	interface_definition = "function" typespec IDENT . "(" parameterlist ")" "const" ";", FOLLOW [169] -> SHIFT '(' GOTO 301
[259]
	typespec/L1 = . typename, FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [9] -> GOTO 8
	paramdecl = . typespec IDENT, FOLLOW [182] -> GOTO 183
	interface_definition = "procedure" IDENT "(" . parameterlist ")" ";", FOLLOW [169] -> GOTO 302
	interface_definition = "procedure" IDENT "(" . parameterlist ")" "const" ";", FOLLOW [169] -> GOTO 302
	parameterlist = . parameters, FOLLOW [10] -> GOTO 185
	parameters = . paramdecl "," parameters, FOLLOW [10] -> GOTO 186
	parameters = . paramdecl, FOLLOW [10] -> GOTO 186
	typename/L1 = . IDENT, FOLLOW [61] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [61] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	parameterlist = . (62), FOLLOW [10] -> REDUCE parameterlist #0 CALL paramdeflist
[260]
	constructordefinition = linkage "constructor" callablebody . (34), FOLLOW [172] -> REDUCE constructordefinition #3 CALL constructordef
[261]
	operatordefinition = linkage "operator" "(" . ")" typespec callablebody, FOLLOW [172] -> SHIFT ')' GOTO 303
[262]
	typespec/L1 = . typename, FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [22] -> GOTO 8
	operatordefinition = linkage "operator" "&" . typespec callablebody, FOLLOW [172] -> GOTO 304
	typename/L1 = . IDENT, FOLLOW [233] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [233] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [22] -> SHIFT "const" GOTO 18
[263]
	typespec/L1 = . typename, FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [22] -> GOTO 8
	operatordefinition = linkage "operator" "->" . typespec callablebody, FOLLOW [172] -> GOTO 305
	typename/L1 = . IDENT, FOLLOW [233] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [233] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [22] -> SHIFT "const" GOTO 18
[264]
	typespec/L1 = . typename, FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [22] -> GOTO 8
	operatordefinition = linkage "operator" "=" . typespec callablebody, FOLLOW [172] -> GOTO 306
	typename/L1 = . IDENT, FOLLOW [233] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [233] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [22] -> SHIFT "const" GOTO 18
[265]
	typespec/L1 = . typename, FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [22] -> GOTO 8
	operatordefinition = linkage "operator" "+" . typespec callablebody, FOLLOW [172] -> GOTO 307
	typename/L1 = . IDENT, FOLLOW [233] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [233] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [22] -> SHIFT "const" GOTO 18
[266]
	typespec/L1 = . typename, FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [22] -> GOTO 8
	operatordefinition = linkage "operator" "-" . typespec callablebody, FOLLOW [172] -> GOTO 308
	typename/L1 = . IDENT, FOLLOW [233] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [233] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [22] -> SHIFT "const" GOTO 18
[267]
	typespec/L1 = . typename, FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [22] -> GOTO 8
	operatordefinition = linkage "operator" "*" . typespec callablebody, FOLLOW [172] -> GOTO 309
	typename/L1 = . IDENT, FOLLOW [233] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [233] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [22] -> SHIFT "const" GOTO 18
[268]
	typespec/L1 = . typename, FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [22] -> GOTO 8
	operatordefinition = linkage "operator" "/" . typespec callablebody, FOLLOW [172] -> GOTO 310
	typename/L1 = . IDENT, FOLLOW [233] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [233] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [22] -> SHIFT "const" GOTO 18
[269]
	typespec/L1 = . typename, FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [22] -> GOTO 8
	operatordefinition = linkage "operator" "%" . typespec callablebody, FOLLOW [172] -> GOTO 311
	typename/L1 = . IDENT, FOLLOW [233] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [233] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [22] -> SHIFT "const" GOTO 18
[270]
	typespec/L1 = . typename, FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [22] -> GOTO 8
	operatordefinition = linkage "operator" "&&" . typespec callablebody, FOLLOW [172] -> GOTO 312
	typename/L1 = . IDENT, FOLLOW [233] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [233] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [22] -> SHIFT "const" GOTO 18
[271]
	typespec/L1 = . typename, FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [22] -> GOTO 8
	operatordefinition = linkage "operator" "||" . typespec callablebody, FOLLOW [172] -> GOTO 313
	typename/L1 = . IDENT, FOLLOW [233] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [233] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [22] -> SHIFT "const" GOTO 18
[272]
	typespec/L1 = . typename, FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [22] -> GOTO 8
	operatordefinition = linkage "operator" "|" . typespec callablebody, FOLLOW [172] -> GOTO 314
	typename/L1 = . IDENT, FOLLOW [233] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [233] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [22] -> SHIFT "const" GOTO 18
[273]
	typespec/L1 = . typename, FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [22] -> GOTO 8
	operatordefinition = linkage "operator" "<<" . typespec callablebody, FOLLOW [172] -> GOTO 315
	typename/L1 = . IDENT, FOLLOW [233] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [233] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [22] -> SHIFT "const" GOTO 18
[274]
	typespec/L1 = . typename, FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [22] -> GOTO 8
	operatordefinition = linkage "operator" ">>" . typespec callablebody, FOLLOW [172] -> GOTO 316
	typename/L1 = . IDENT, FOLLOW [233] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [233] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [22] -> SHIFT "const" GOTO 18
[275]
	typespec/L1 = . typename, FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [22] -> GOTO 8
	operatordefinition = linkage "operator" "~" . typespec callablebody, FOLLOW [172] -> GOTO 317
	typename/L1 = . IDENT, FOLLOW [233] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [233] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [22] -> SHIFT "const" GOTO 18
[276]
	typespec/L1 = . typename, FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [22] -> GOTO 8
	operatordefinition = linkage "operator" "!" . typespec callablebody, FOLLOW [172] -> GOTO 318
	typename/L1 = . IDENT, FOLLOW [233] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [233] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [22] -> SHIFT "const" GOTO 18
[277]
	operatordefinition = linkage "operator" "[" . "]" typespec callablebody, FOLLOW [172] -> SHIFT ']' GOTO 319
[278]
	typespec/L1 = . typename, FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [22] -> GOTO 8
	operatordefinition = linkage "operator" "==" . typespec callablebody, FOLLOW [172] -> GOTO 320
	typename/L1 = . IDENT, FOLLOW [233] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [233] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [22] -> SHIFT "const" GOTO 18
[279]
	typespec/L1 = . typename, FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [22] -> GOTO 8
	operatordefinition = linkage "operator" "!=" . typespec callablebody, FOLLOW [172] -> GOTO 321
	typename/L1 = . IDENT, FOLLOW [233] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [233] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [22] -> SHIFT "const" GOTO 18
[280]
	typespec/L1 = . typename, FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [22] -> GOTO 8
	operatordefinition = linkage "operator" ">=" . typespec callablebody, FOLLOW [172] -> GOTO 322
	typename/L1 = . IDENT, FOLLOW [233] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [233] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [22] -> SHIFT "const" GOTO 18
[281]
	typespec/L1 = . typename, FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [22] -> GOTO 8
	operatordefinition = linkage "operator" "<=" . typespec callablebody, FOLLOW [172] -> GOTO 323
	typename/L1 = . IDENT, FOLLOW [233] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [233] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [22] -> SHIFT "const" GOTO 18
[282]
	typespec/L1 = . typename, FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [22] -> GOTO 8
	operatordefinition = linkage "operator" ">" . typespec callablebody, FOLLOW [172] -> GOTO 324
	typename/L1 = . IDENT, FOLLOW [233] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [233] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [22] -> SHIFT "const" GOTO 18
[283]
	typespec/L1 = . typename, FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [22] -> GOTO 8
	operatordefinition = linkage "operator" "<" . typespec callablebody, FOLLOW [172] -> GOTO 325
	typename/L1 = . IDENT, FOLLOW [233] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [233] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [22] -> SHIFT "const" GOTO 18
[284]
	constructordefinition = "destructor" "{" codeblock . "}", FOLLOW [172] -> SHIFT '}' GOTO 326
[285]
	inheritlist = typepath "," inheritlist . (step:28), FOLLOW [17] -> REDUCE inheritlist #3 CALL inheritdef 1
[286]
	classdefinition = "class" IDENT ":" inheritlist "{" class_definitionlist . "}", FOLLOW [173] -> SHIFT '}' GOTO 327
[287]
	extern_definition = "extern" DQSTRING "function" typespec IDENT "(" extern_paramlist . ")" ";", FOLLOW [58] -> SHIFT ')' GOTO 328
	extern_definition = "extern" DQSTRING "function" typespec IDENT "(" extern_paramlist . "..." ")" ";", FOLLOW [58] -> SHIFT "..." GOTO 329
[288]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist ")" . ";", FOLLOW [58] -> SHIFT ';' GOTO 330
[289]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist "..." . ")" ";", FOLLOW [58] -> SHIFT ')' GOTO 331
[290]
	extern_parameters = typespec "," . extern_parameters, FOLLOW [183] -> GOTO 332
	typespec/L1 = . typename, FOLLOW [185] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [185] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [185] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [185] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [185] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [185] -> GOTO 8
	extern_parameters = . typespec "," extern_parameters, FOLLOW [183] -> GOTO 206
	extern_parameters = . typespec, FOLLOW [183] -> GOTO 206
	typename/L1 = . IDENT, FOLLOW [186] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [186] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [185] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [185] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [185] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [185] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [185] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [185] -> SHIFT "const" GOTO 18
[291]
	expression/L13 = expression "(" expressionlist ")" . (121), FOLLOW [234] -> REDUCE expression #4 CALL operator "()"
[292]
	expression/L13 = expression "[" expressionlist "]" . (122), FOLLOW [234] -> REDUCE expression #4 CALL operator "[]"
[293]
	expressionlist = expression "," expressionlist ., FOLLOW [238] -> REDUCE expressionlist #3
[294]
	statement/L1 = "if" "(" expression ")" . "{" codeblock "}", FOLLOW [97] -> SHIFT '{' GOTO 333
	statement/L1 = "if" "(" expression ")" . "{" codeblock "}" "else" "{" codeblock "}", FOLLOW [97] -> SHIFT '{' GOTO 333
[295]
	statement/L1 = "while" "(" expression ")" . "{" codeblock "}", FOLLOW [97] -> SHIFT '{' GOTO 334
[296]
	iexpression = expression . indirection IDENT, FOLLOW [234] -> GOTO 126
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [234] -> SHIFT '(' GOTO 127
	expression/L13 = expression . "(" ")", FOLLOW [234] -> SHIFT '(' GOTO 127
	expression/L7 = expression . "&" expression, FOLLOW [234] -> SHIFT '&' GOTO 129
	expression/L7 = expression . "^" expression, FOLLOW [234] -> SHIFT '^' GOTO 130
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 131
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 131
	expression/L3 = expression . "=" expression, FOLLOW [234] -> SHIFT '=' GOTO 132
	expression/L9 = expression . "+" expression, FOLLOW [234] -> SHIFT '+' GOTO 133
	expression/L9 = expression . "-" expression, FOLLOW [234] -> SHIFT '-' GOTO 134
	expression/L10 = expression . "*" expression, FOLLOW [234] -> SHIFT '*' GOTO 135
	expression/L10 = expression . "/" expression, FOLLOW [234] -> SHIFT '/' GOTO 136
	expression/L10 = expression . "%" expression, FOLLOW [234] -> SHIFT '%' GOTO 137
	expression/L5 = expression . "&&" expression, FOLLOW [234] -> SHIFT "&&" GOTO 138
	expression/L4 = expression . "||" expression, FOLLOW [234] -> SHIFT "||" GOTO 139
	expression/L6 = expression . "|" expression, FOLLOW [234] -> SHIFT '|' GOTO 140
	expression/L11 = expression . "<<" expression, FOLLOW [234] -> SHIFT "<<" GOTO 141
	expression/L11 = expression . ">>" expression, FOLLOW [234] -> SHIFT ">>" GOTO 142
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [234] -> SHIFT '[' GOTO 143
	expression/L8 = expression . "==" expression, FOLLOW [234] -> SHIFT "==" GOTO 144
	expression/L8 = expression . "!=" expression, FOLLOW [234] -> SHIFT "!=" GOTO 145
	expression/L8 = expression . ">=" expression, FOLLOW [234] -> SHIFT ">=" GOTO 146
	expression/L8 = expression . "<=" expression, FOLLOW [234] -> SHIFT "<=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [234] -> SHIFT '>' GOTO 148
	expression/L8 = expression . "<" expression, FOLLOW [234] -> SHIFT '<' GOTO 149
	expression/L3 = expression . "+=" expression, FOLLOW [234] -> SHIFT "+=" GOTO 150
	expression/L3 = expression . "-=" expression, FOLLOW [234] -> SHIFT "-=" GOTO 151
	expression/L3 = expression . "*=" expression, FOLLOW [234] -> SHIFT "*=" GOTO 152
	expression/L3 = expression . "/=" expression, FOLLOW [234] -> SHIFT "/=" GOTO 153
	expression/L3 = expression . "^=" expression, FOLLOW [234] -> SHIFT "^=" GOTO 154
	expression/L3 = expression . "&=" expression, FOLLOW [234] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "&=" expression, FOLLOW [234] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "%=" expression, FOLLOW [234] -> SHIFT "%=" GOTO 156
	expression/L3 = expression . "&&=" expression, FOLLOW [234] -> SHIFT "&&=" GOTO 157
	expression/L3 = expression . "||=" expression, FOLLOW [234] -> SHIFT "||=" GOTO 158
	expression/L3 = expression . "|=" expression, FOLLOW [234] -> SHIFT "|=" GOTO 159
	expression/L3 = expression . "<<=" expression, FOLLOW [234] -> SHIFT "<<=" GOTO 160
	expression/L3 = expression . ">>=" expression, FOLLOW [234] -> SHIFT ">>=" GOTO 161
	expression/L12 = expression . "." IDENT, FOLLOW [234] -> SHIFT '.' GOTO 162
	expression/L1 = "new" typespec ":" expression . (77), FOLLOW [234] -> REDUCE expression #4 CALL allocate
[297]
	iexpression = expression . indirection IDENT, FOLLOW [96] -> GOTO 126
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [96] -> SHIFT '(' GOTO 127
	expression/L13 = expression . "(" ")", FOLLOW [96] -> SHIFT '(' GOTO 127
	expression/L7 = expression . "&" expression, FOLLOW [96] -> SHIFT '&' GOTO 129
	expression/L7 = expression . "^" expression, FOLLOW [96] -> SHIFT '^' GOTO 130
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 131
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 131
	expression/L3 = expression . "=" expression, FOLLOW [96] -> SHIFT '=' GOTO 132
	expression/L9 = expression . "+" expression, FOLLOW [96] -> SHIFT '+' GOTO 133
	expression/L9 = expression . "-" expression, FOLLOW [96] -> SHIFT '-' GOTO 134
	expression/L10 = expression . "*" expression, FOLLOW [96] -> SHIFT '*' GOTO 135
	expression/L10 = expression . "/" expression, FOLLOW [96] -> SHIFT '/' GOTO 136
	expression/L10 = expression . "%" expression, FOLLOW [96] -> SHIFT '%' GOTO 137
	expression/L5 = expression . "&&" expression, FOLLOW [96] -> SHIFT "&&" GOTO 138
	expression/L4 = expression . "||" expression, FOLLOW [96] -> SHIFT "||" GOTO 139
	expression/L6 = expression . "|" expression, FOLLOW [96] -> SHIFT '|' GOTO 140
	expression/L11 = expression . "<<" expression, FOLLOW [96] -> SHIFT "<<" GOTO 141
	expression/L11 = expression . ">>" expression, FOLLOW [96] -> SHIFT ">>" GOTO 142
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [96] -> SHIFT '[' GOTO 143
	expression/L8 = expression . "==" expression, FOLLOW [96] -> SHIFT "==" GOTO 144
	expression/L8 = expression . "!=" expression, FOLLOW [96] -> SHIFT "!=" GOTO 145
	expression/L8 = expression . ">=" expression, FOLLOW [96] -> SHIFT ">=" GOTO 146
	expression/L8 = expression . "<=" expression, FOLLOW [96] -> SHIFT "<=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [96] -> SHIFT '>' GOTO 148
	expression/L8 = expression . "<" expression, FOLLOW [96] -> SHIFT '<' GOTO 149
	expression/L3 = expression . "+=" expression, FOLLOW [96] -> SHIFT "+=" GOTO 150
	expression/L3 = expression . "-=" expression, FOLLOW [96] -> SHIFT "-=" GOTO 151
	expression/L3 = expression . "*=" expression, FOLLOW [96] -> SHIFT "*=" GOTO 152
	expression/L3 = expression . "/=" expression, FOLLOW [96] -> SHIFT "/=" GOTO 153
	expression/L3 = expression . "^=" expression, FOLLOW [96] -> SHIFT "^=" GOTO 154
	expression/L3 = expression . "&=" expression, FOLLOW [96] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "&=" expression, FOLLOW [96] -> SHIFT "&=" GOTO 155
	expression/L3 = expression . "%=" expression, FOLLOW [96] -> SHIFT "%=" GOTO 156
	expression/L3 = expression . "&&=" expression, FOLLOW [96] -> SHIFT "&&=" GOTO 157
	expression/L3 = expression . "||=" expression, FOLLOW [96] -> SHIFT "||=" GOTO 158
	expression/L3 = expression . "|=" expression, FOLLOW [96] -> SHIFT "|=" GOTO 159
	expression/L3 = expression . "<<=" expression, FOLLOW [96] -> SHIFT "<<=" GOTO 160
	expression/L3 = expression . ">>=" expression, FOLLOW [96] -> SHIFT ">>=" GOTO 161
	expression/L12 = expression . "." IDENT, FOLLOW [96] -> SHIFT '.' GOTO 162
	variabledefinition = typespec IDENT "[" expression "]" "=" expression . (step:74), FOLLOW [13] -> REDUCE variabledefinition #7 CALL vardef_array_assign
[298]
	callablebody = "(" parameterlist ")" "const" . "{" codeblock "}", FOLLOW [244] -> SHIFT '{' GOTO 335
[299]
	statement/L1 = . typedefinition ";", FOLLOW [97] -> GOTO 63
	functiondefinition = . linkage "function" typespec IDENT callablebody, FOLLOW [97] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [97] -> GOTO 14
	statement/L1 = . functiondefinition, FOLLOW [97] -> GOTO 64
	callablebody = "(" parameterlist ")" "{" . codeblock "}", FOLLOW [244] -> GOTO 336
	codeblock = . statementlist, FOLLOW [16] -> GOTO 66
	statementlist = . statement statementlist, FOLLOW [16] -> GOTO 67
	statement/L1 = . expression ";", FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "+=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "-=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "*=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "/=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "^=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "&=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "%=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "&&=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "||=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "&=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "|=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "<<=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression ">>=" expression, FOLLOW [96] -> GOTO 68
	expression/L4 = . expression "||" expression, FOLLOW [96] -> GOTO 68
	expression/L5 = . expression "&&" expression, FOLLOW [96] -> GOTO 68
	expression/L6 = . expression "|" expression, FOLLOW [96] -> GOTO 68
	expression/L7 = . expression "^" expression, FOLLOW [96] -> GOTO 68
	expression/L7 = . expression "&" expression, FOLLOW [96] -> GOTO 68
	expression/L8 = . expression "==" expression, FOLLOW [96] -> GOTO 68
	expression/L8 = . expression "!=" expression, FOLLOW [96] -> GOTO 68
	expression/L8 = . expression "<=" expression, FOLLOW [96] -> GOTO 68
	expression/L8 = . expression "<" expression, FOLLOW [96] -> GOTO 68
	expression/L8 = . expression ">=" expression, FOLLOW [96] -> GOTO 68
	expression/L8 = . expression ">" expression, FOLLOW [96] -> GOTO 68
	expression/L9 = . expression "+" expression, FOLLOW [96] -> GOTO 68
	expression/L9 = . expression "-" expression, FOLLOW [96] -> GOTO 68
	expression/L10 = . expression "*" expression, FOLLOW [96] -> GOTO 68
	expression/L10 = . expression "/" expression, FOLLOW [96] -> GOTO 68
	expression/L10 = . expression "%" expression, FOLLOW [96] -> GOTO 68
	expression/L11 = . expression "<<" expression, FOLLOW [96] -> GOTO 68
	expression/L11 = . expression ">>" expression, FOLLOW [96] -> GOTO 68
	expression/L12 = . expression "." IDENT, FOLLOW [96] -> GOTO 68
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [96] -> GOTO 68
	expression/L13 = . expression "(" ")", FOLLOW [96] -> GOTO 68
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [96] -> GOTO 68
	iexpression = . expression indirection IDENT, FOLLOW [96] -> GOTO 68
	expression/L12 = . iexpression, FOLLOW [96] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [96] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [96] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [96] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [96] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [96] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [96] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [96] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [96] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [96] -> SHIFT '&' GOTO 78
	typedefinition = . "typedef" typepath IDENT, FOLLOW [13] -> SHIFT "typedef" GOTO 19
	statement/L1 = . "{" codeblock "}", FOLLOW [97] -> SHIFT '{' GOTO 79
	expression/L1 = . "{" expressionlist "}", FOLLOW [96] -> SHIFT '{' GOTO 79
	expression/L1 = . "{" "}", FOLLOW [96] -> SHIFT '{' GOTO 79
	linkage = . "private", FOLLOW [60] -> SHIFT "private" GOTO 23
	linkage = . "public", FOLLOW [60] -> SHIFT "public" GOTO 24
	expression/L9 = . "+" expression, FOLLOW [96] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [96] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [96] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [96] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [96] -> SHIFT '!' GOTO 84
	statement/L1 = . "var" variabledefinition ";", FOLLOW [97] -> SHIFT "var" GOTO 85
	statement/L1 = . "return" expression ";", FOLLOW [97] -> SHIFT "return" GOTO 86
	statement/L1 = . "delete" expression ";", FOLLOW [97] -> SHIFT "delete" GOTO 87
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}", FOLLOW [97] -> SHIFT "if" GOTO 88
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}", FOLLOW [97] -> SHIFT "if" GOTO 88
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}", FOLLOW [97] -> SHIFT "while" GOTO 89
	expression/L1 = . "new" typespec ":" expression, FOLLOW [96] -> SHIFT "new" GOTO 90
	expression/L2 = . "null", FOLLOW [96] -> SHIFT "null" GOTO 91
	statementlist = ., FOLLOW [16] -> REDUCE statementlist #0
	linkage = . (30), FOLLOW [60] -> REDUCE linkage #0 CALL linkage {linkage="internal",attributes="#0 nounwind"}
[300]
	parameters = paramdecl "," parameters ., FOLLOW [10] -> REDUCE parameters #3
[301]
	typespec/L1 = . typename, FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [9] -> GOTO 8
	paramdecl = . typespec IDENT, FOLLOW [182] -> GOTO 183
	interface_definition = "function" typespec IDENT "(" . parameterlist ")" ";", FOLLOW [169] -> GOTO 337
	interface_definition = "function" typespec IDENT "(" . parameterlist ")" "const" ";", FOLLOW [169] -> GOTO 337
	parameterlist = . parameters, FOLLOW [10] -> GOTO 185
	parameters = . paramdecl "," parameters, FOLLOW [10] -> GOTO 186
	parameters = . paramdecl, FOLLOW [10] -> GOTO 186
	typename/L1 = . IDENT, FOLLOW [61] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [61] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	parameterlist = . (62), FOLLOW [10] -> REDUCE parameterlist #0 CALL paramdeflist
[302]
	interface_definition = "procedure" IDENT "(" parameterlist . ")" ";", FOLLOW [169] -> SHIFT ')' GOTO 338
	interface_definition = "procedure" IDENT "(" parameterlist . ")" "const" ";", FOLLOW [169] -> SHIFT ')' GOTO 338
[303]
	typespec/L1 = . typename, FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [22] -> GOTO 8
	operatordefinition = linkage "operator" "(" ")" . typespec callablebody, FOLLOW [172] -> GOTO 339
	typename/L1 = . IDENT, FOLLOW [233] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [233] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [22] -> SHIFT "const" GOTO 18
[304]
	operatordefinition = linkage "operator" "&" typespec . callablebody, FOLLOW [172] -> GOTO 340
	callablebody = . "(" parameterlist ")" "{" codeblock "}", FOLLOW [172] -> SHIFT '(' GOTO 98
	callablebody = . "(" parameterlist ")" "const" "{" codeblock "}", FOLLOW [172] -> SHIFT '(' GOTO 98
[305]
	operatordefinition = linkage "operator" "->" typespec . callablebody, FOLLOW [172] -> GOTO 341
	callablebody = . "(" parameterlist ")" "{" codeblock "}", FOLLOW [172] -> SHIFT '(' GOTO 98
	callablebody = . "(" parameterlist ")" "const" "{" codeblock "}", FOLLOW [172] -> SHIFT '(' GOTO 98
[306]
	operatordefinition = linkage "operator" "=" typespec . callablebody, FOLLOW [172] -> GOTO 342
	callablebody = . "(" parameterlist ")" "{" codeblock "}", FOLLOW [172] -> SHIFT '(' GOTO 98
	callablebody = . "(" parameterlist ")" "const" "{" codeblock "}", FOLLOW [172] -> SHIFT '(' GOTO 98
[307]
	operatordefinition = linkage "operator" "+" typespec . callablebody, FOLLOW [172] -> GOTO 343
	callablebody = . "(" parameterlist ")" "{" codeblock "}", FOLLOW [172] -> SHIFT '(' GOTO 98
	callablebody = . "(" parameterlist ")" "const" "{" codeblock "}", FOLLOW [172] -> SHIFT '(' GOTO 98
[308]
	operatordefinition = linkage "operator" "-" typespec . callablebody, FOLLOW [172] -> GOTO 344
	callablebody = . "(" parameterlist ")" "{" codeblock "}", FOLLOW [172] -> SHIFT '(' GOTO 98
	callablebody = . "(" parameterlist ")" "const" "{" codeblock "}", FOLLOW [172] -> SHIFT '(' GOTO 98
[309]
	operatordefinition = linkage "operator" "*" typespec . callablebody, FOLLOW [172] -> GOTO 345
	callablebody = . "(" parameterlist ")" "{" codeblock "}", FOLLOW [172] -> SHIFT '(' GOTO 98
	callablebody = . "(" parameterlist ")" "const" "{" codeblock "}", FOLLOW [172] -> SHIFT '(' GOTO 98
[310]
	operatordefinition = linkage "operator" "/" typespec . callablebody, FOLLOW [172] -> GOTO 346
	callablebody = . "(" parameterlist ")" "{" codeblock "}", FOLLOW [172] -> SHIFT '(' GOTO 98
	callablebody = . "(" parameterlist ")" "const" "{" codeblock "}", FOLLOW [172] -> SHIFT '(' GOTO 98
[311]
	operatordefinition = linkage "operator" "%" typespec . callablebody, FOLLOW [172] -> GOTO 347
	callablebody = . "(" parameterlist ")" "{" codeblock "}", FOLLOW [172] -> SHIFT '(' GOTO 98
	callablebody = . "(" parameterlist ")" "const" "{" codeblock "}", FOLLOW [172] -> SHIFT '(' GOTO 98
[312]
	operatordefinition = linkage "operator" "&&" typespec . callablebody, FOLLOW [172] -> GOTO 348
	callablebody = . "(" parameterlist ")" "{" codeblock "}", FOLLOW [172] -> SHIFT '(' GOTO 98
	callablebody = . "(" parameterlist ")" "const" "{" codeblock "}", FOLLOW [172] -> SHIFT '(' GOTO 98
[313]
	operatordefinition = linkage "operator" "||" typespec . callablebody, FOLLOW [172] -> GOTO 349
	callablebody = . "(" parameterlist ")" "{" codeblock "}", FOLLOW [172] -> SHIFT '(' GOTO 98
	callablebody = . "(" parameterlist ")" "const" "{" codeblock "}", FOLLOW [172] -> SHIFT '(' GOTO 98
[314]
	operatordefinition = linkage "operator" "|" typespec . callablebody, FOLLOW [172] -> GOTO 350
	callablebody = . "(" parameterlist ")" "{" codeblock "}", FOLLOW [172] -> SHIFT '(' GOTO 98
	callablebody = . "(" parameterlist ")" "const" "{" codeblock "}", FOLLOW [172] -> SHIFT '(' GOTO 98
[315]
	operatordefinition = linkage "operator" "<<" typespec . callablebody, FOLLOW [172] -> GOTO 351
	callablebody = . "(" parameterlist ")" "{" codeblock "}", FOLLOW [172] -> SHIFT '(' GOTO 98
	callablebody = . "(" parameterlist ")" "const" "{" codeblock "}", FOLLOW [172] -> SHIFT '(' GOTO 98
[316]
	operatordefinition = linkage "operator" ">>" typespec . callablebody, FOLLOW [172] -> GOTO 352
	callablebody = . "(" parameterlist ")" "{" codeblock "}", FOLLOW [172] -> SHIFT '(' GOTO 98
	callablebody = . "(" parameterlist ")" "const" "{" codeblock "}", FOLLOW [172] -> SHIFT '(' GOTO 98
[317]
	operatordefinition = linkage "operator" "~" typespec . callablebody, FOLLOW [172] -> GOTO 353
	callablebody = . "(" parameterlist ")" "{" codeblock "}", FOLLOW [172] -> SHIFT '(' GOTO 98
	callablebody = . "(" parameterlist ")" "const" "{" codeblock "}", FOLLOW [172] -> SHIFT '(' GOTO 98
[318]
	operatordefinition = linkage "operator" "!" typespec . callablebody, FOLLOW [172] -> GOTO 354
	callablebody = . "(" parameterlist ")" "{" codeblock "}", FOLLOW [172] -> SHIFT '(' GOTO 98
	callablebody = . "(" parameterlist ")" "const" "{" codeblock "}", FOLLOW [172] -> SHIFT '(' GOTO 98
[319]
	typespec/L1 = . typename, FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [22] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [22] -> GOTO 8
	operatordefinition = linkage "operator" "[" "]" . typespec callablebody, FOLLOW [172] -> GOTO 355
	typename/L1 = . IDENT, FOLLOW [233] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [233] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [22] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [22] -> SHIFT "const" GOTO 18
[320]
	operatordefinition = linkage "operator" "==" typespec . callablebody, FOLLOW [172] -> GOTO 356
	callablebody = . "(" parameterlist ")" "{" codeblock "}", FOLLOW [172] -> SHIFT '(' GOTO 98
	callablebody = . "(" parameterlist ")" "const" "{" codeblock "}", FOLLOW [172] -> SHIFT '(' GOTO 98
[321]
	operatordefinition = linkage "operator" "!=" typespec . callablebody, FOLLOW [172] -> GOTO 357
	callablebody = . "(" parameterlist ")" "{" codeblock "}", FOLLOW [172] -> SHIFT '(' GOTO 98
	callablebody = . "(" parameterlist ")" "const" "{" codeblock "}", FOLLOW [172] -> SHIFT '(' GOTO 98
[322]
	operatordefinition = linkage "operator" ">=" typespec . callablebody, FOLLOW [172] -> GOTO 358
	callablebody = . "(" parameterlist ")" "{" codeblock "}", FOLLOW [172] -> SHIFT '(' GOTO 98
	callablebody = . "(" parameterlist ")" "const" "{" codeblock "}", FOLLOW [172] -> SHIFT '(' GOTO 98
[323]
	operatordefinition = linkage "operator" "<=" typespec . callablebody, FOLLOW [172] -> GOTO 359
	callablebody = . "(" parameterlist ")" "{" codeblock "}", FOLLOW [172] -> SHIFT '(' GOTO 98
	callablebody = . "(" parameterlist ")" "const" "{" codeblock "}", FOLLOW [172] -> SHIFT '(' GOTO 98
[324]
	operatordefinition = linkage "operator" ">" typespec . callablebody, FOLLOW [172] -> GOTO 360
	callablebody = . "(" parameterlist ")" "{" codeblock "}", FOLLOW [172] -> SHIFT '(' GOTO 98
	callablebody = . "(" parameterlist ")" "const" "{" codeblock "}", FOLLOW [172] -> SHIFT '(' GOTO 98
[325]
	operatordefinition = linkage "operator" "<" typespec . callablebody, FOLLOW [172] -> GOTO 361
	callablebody = . "(" parameterlist ")" "{" codeblock "}", FOLLOW [172] -> SHIFT '(' GOTO 98
	callablebody = . "(" parameterlist ")" "const" "{" codeblock "}", FOLLOW [172] -> SHIFT '(' GOTO 98
[326]
	constructordefinition = "destructor" "{" codeblock "}" . (35), FOLLOW [172] -> REDUCE constructordefinition #4 CALL destructordef
[327]
	classdefinition = "class" IDENT ":" inheritlist "{" class_definitionlist "}" . (step:29), FOLLOW [173] -> REDUCE classdefinition #7 CALL classdef
[328]
	extern_definition = "extern" DQSTRING "function" typespec IDENT "(" extern_paramlist ")" . ";", FOLLOW [58] -> SHIFT ';' GOTO 362
[329]
	extern_definition = "extern" DQSTRING "function" typespec IDENT "(" extern_paramlist "..." . ")" ";", FOLLOW [58] -> SHIFT ')' GOTO 363
[330]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist ")" ";" . (3), FOLLOW [58] -> REDUCE extern_definition #8 CALL extern_procdef
[331]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist "..." ")" . ";", FOLLOW [58] -> SHIFT ';' GOTO 364
[332]
	extern_parameters = typespec "," extern_parameters ., FOLLOW [183] -> REDUCE extern_parameters #3
[333]
	statement/L1 = . typedefinition ";", FOLLOW [97] -> GOTO 63
	functiondefinition = . linkage "function" typespec IDENT callablebody, FOLLOW [97] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [97] -> GOTO 14
	statement/L1 = . functiondefinition, FOLLOW [97] -> GOTO 64
	statement/L1 = "if" "(" expression ")" "{" . codeblock "}", FOLLOW [97] -> GOTO 365
	statement/L1 = "if" "(" expression ")" "{" . codeblock "}" "else" "{" codeblock "}", FOLLOW [97] -> GOTO 365
	codeblock = . statementlist, FOLLOW [16] -> GOTO 66
	statementlist = . statement statementlist, FOLLOW [16] -> GOTO 67
	statement/L1 = . expression ";", FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "+=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "-=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "*=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "/=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "^=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "&=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "%=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "&&=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "||=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "&=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "|=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "<<=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression ">>=" expression, FOLLOW [96] -> GOTO 68
	expression/L4 = . expression "||" expression, FOLLOW [96] -> GOTO 68
	expression/L5 = . expression "&&" expression, FOLLOW [96] -> GOTO 68
	expression/L6 = . expression "|" expression, FOLLOW [96] -> GOTO 68
	expression/L7 = . expression "^" expression, FOLLOW [96] -> GOTO 68
	expression/L7 = . expression "&" expression, FOLLOW [96] -> GOTO 68
	expression/L8 = . expression "==" expression, FOLLOW [96] -> GOTO 68
	expression/L8 = . expression "!=" expression, FOLLOW [96] -> GOTO 68
	expression/L8 = . expression "<=" expression, FOLLOW [96] -> GOTO 68
	expression/L8 = . expression "<" expression, FOLLOW [96] -> GOTO 68
	expression/L8 = . expression ">=" expression, FOLLOW [96] -> GOTO 68
	expression/L8 = . expression ">" expression, FOLLOW [96] -> GOTO 68
	expression/L9 = . expression "+" expression, FOLLOW [96] -> GOTO 68
	expression/L9 = . expression "-" expression, FOLLOW [96] -> GOTO 68
	expression/L10 = . expression "*" expression, FOLLOW [96] -> GOTO 68
	expression/L10 = . expression "/" expression, FOLLOW [96] -> GOTO 68
	expression/L10 = . expression "%" expression, FOLLOW [96] -> GOTO 68
	expression/L11 = . expression "<<" expression, FOLLOW [96] -> GOTO 68
	expression/L11 = . expression ">>" expression, FOLLOW [96] -> GOTO 68
	expression/L12 = . expression "." IDENT, FOLLOW [96] -> GOTO 68
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [96] -> GOTO 68
	expression/L13 = . expression "(" ")", FOLLOW [96] -> GOTO 68
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [96] -> GOTO 68
	iexpression = . expression indirection IDENT, FOLLOW [96] -> GOTO 68
	expression/L12 = . iexpression, FOLLOW [96] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [96] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [96] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [96] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [96] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [96] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [96] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [96] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [96] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [96] -> SHIFT '&' GOTO 78
	typedefinition = . "typedef" typepath IDENT, FOLLOW [13] -> SHIFT "typedef" GOTO 19
	statement/L1 = . "{" codeblock "}", FOLLOW [97] -> SHIFT '{' GOTO 79
	expression/L1 = . "{" expressionlist "}", FOLLOW [96] -> SHIFT '{' GOTO 79
	expression/L1 = . "{" "}", FOLLOW [96] -> SHIFT '{' GOTO 79
	linkage = . "private", FOLLOW [60] -> SHIFT "private" GOTO 23
	linkage = . "public", FOLLOW [60] -> SHIFT "public" GOTO 24
	expression/L9 = . "+" expression, FOLLOW [96] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [96] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [96] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [96] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [96] -> SHIFT '!' GOTO 84
	statement/L1 = . "var" variabledefinition ";", FOLLOW [97] -> SHIFT "var" GOTO 85
	statement/L1 = . "return" expression ";", FOLLOW [97] -> SHIFT "return" GOTO 86
	statement/L1 = . "delete" expression ";", FOLLOW [97] -> SHIFT "delete" GOTO 87
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}", FOLLOW [97] -> SHIFT "if" GOTO 88
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}", FOLLOW [97] -> SHIFT "if" GOTO 88
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}", FOLLOW [97] -> SHIFT "while" GOTO 89
	expression/L1 = . "new" typespec ":" expression, FOLLOW [96] -> SHIFT "new" GOTO 90
	expression/L2 = . "null", FOLLOW [96] -> SHIFT "null" GOTO 91
	statementlist = ., FOLLOW [16] -> REDUCE statementlist #0
	linkage = . (30), FOLLOW [60] -> REDUCE linkage #0 CALL linkage {linkage="internal",attributes="#0 nounwind"}
[334]
	statement/L1 = . typedefinition ";", FOLLOW [97] -> GOTO 63
	functiondefinition = . linkage "function" typespec IDENT callablebody, FOLLOW [97] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [97] -> GOTO 14
	statement/L1 = . functiondefinition, FOLLOW [97] -> GOTO 64
	statement/L1 = "while" "(" expression ")" "{" . codeblock "}", FOLLOW [97] -> GOTO 366
	codeblock = . statementlist, FOLLOW [16] -> GOTO 66
	statementlist = . statement statementlist, FOLLOW [16] -> GOTO 67
	statement/L1 = . expression ";", FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "+=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "-=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "*=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "/=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "^=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "&=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "%=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "&&=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "||=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "&=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "|=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "<<=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression ">>=" expression, FOLLOW [96] -> GOTO 68
	expression/L4 = . expression "||" expression, FOLLOW [96] -> GOTO 68
	expression/L5 = . expression "&&" expression, FOLLOW [96] -> GOTO 68
	expression/L6 = . expression "|" expression, FOLLOW [96] -> GOTO 68
	expression/L7 = . expression "^" expression, FOLLOW [96] -> GOTO 68
	expression/L7 = . expression "&" expression, FOLLOW [96] -> GOTO 68
	expression/L8 = . expression "==" expression, FOLLOW [96] -> GOTO 68
	expression/L8 = . expression "!=" expression, FOLLOW [96] -> GOTO 68
	expression/L8 = . expression "<=" expression, FOLLOW [96] -> GOTO 68
	expression/L8 = . expression "<" expression, FOLLOW [96] -> GOTO 68
	expression/L8 = . expression ">=" expression, FOLLOW [96] -> GOTO 68
	expression/L8 = . expression ">" expression, FOLLOW [96] -> GOTO 68
	expression/L9 = . expression "+" expression, FOLLOW [96] -> GOTO 68
	expression/L9 = . expression "-" expression, FOLLOW [96] -> GOTO 68
	expression/L10 = . expression "*" expression, FOLLOW [96] -> GOTO 68
	expression/L10 = . expression "/" expression, FOLLOW [96] -> GOTO 68
	expression/L10 = . expression "%" expression, FOLLOW [96] -> GOTO 68
	expression/L11 = . expression "<<" expression, FOLLOW [96] -> GOTO 68
	expression/L11 = . expression ">>" expression, FOLLOW [96] -> GOTO 68
	expression/L12 = . expression "." IDENT, FOLLOW [96] -> GOTO 68
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [96] -> GOTO 68
	expression/L13 = . expression "(" ")", FOLLOW [96] -> GOTO 68
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [96] -> GOTO 68
	iexpression = . expression indirection IDENT, FOLLOW [96] -> GOTO 68
	expression/L12 = . iexpression, FOLLOW [96] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [96] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [96] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [96] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [96] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [96] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [96] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [96] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [96] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [96] -> SHIFT '&' GOTO 78
	typedefinition = . "typedef" typepath IDENT, FOLLOW [13] -> SHIFT "typedef" GOTO 19
	statement/L1 = . "{" codeblock "}", FOLLOW [97] -> SHIFT '{' GOTO 79
	expression/L1 = . "{" expressionlist "}", FOLLOW [96] -> SHIFT '{' GOTO 79
	expression/L1 = . "{" "}", FOLLOW [96] -> SHIFT '{' GOTO 79
	linkage = . "private", FOLLOW [60] -> SHIFT "private" GOTO 23
	linkage = . "public", FOLLOW [60] -> SHIFT "public" GOTO 24
	expression/L9 = . "+" expression, FOLLOW [96] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [96] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [96] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [96] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [96] -> SHIFT '!' GOTO 84
	statement/L1 = . "var" variabledefinition ";", FOLLOW [97] -> SHIFT "var" GOTO 85
	statement/L1 = . "return" expression ";", FOLLOW [97] -> SHIFT "return" GOTO 86
	statement/L1 = . "delete" expression ";", FOLLOW [97] -> SHIFT "delete" GOTO 87
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}", FOLLOW [97] -> SHIFT "if" GOTO 88
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}", FOLLOW [97] -> SHIFT "if" GOTO 88
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}", FOLLOW [97] -> SHIFT "while" GOTO 89
	expression/L1 = . "new" typespec ":" expression, FOLLOW [96] -> SHIFT "new" GOTO 90
	expression/L2 = . "null", FOLLOW [96] -> SHIFT "null" GOTO 91
	statementlist = ., FOLLOW [16] -> REDUCE statementlist #0
	linkage = . (30), FOLLOW [60] -> REDUCE linkage #0 CALL linkage {linkage="internal",attributes="#0 nounwind"}
[335]
	statement/L1 = . typedefinition ";", FOLLOW [97] -> GOTO 63
	functiondefinition = . linkage "function" typespec IDENT callablebody, FOLLOW [97] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [97] -> GOTO 14
	statement/L1 = . functiondefinition, FOLLOW [97] -> GOTO 64
	callablebody = "(" parameterlist ")" "const" "{" . codeblock "}", FOLLOW [244] -> GOTO 367
	codeblock = . statementlist, FOLLOW [16] -> GOTO 66
	statementlist = . statement statementlist, FOLLOW [16] -> GOTO 67
	statement/L1 = . expression ";", FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "+=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "-=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "*=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "/=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "^=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "&=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "%=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "&&=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "||=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "&=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "|=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "<<=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression ">>=" expression, FOLLOW [96] -> GOTO 68
	expression/L4 = . expression "||" expression, FOLLOW [96] -> GOTO 68
	expression/L5 = . expression "&&" expression, FOLLOW [96] -> GOTO 68
	expression/L6 = . expression "|" expression, FOLLOW [96] -> GOTO 68
	expression/L7 = . expression "^" expression, FOLLOW [96] -> GOTO 68
	expression/L7 = . expression "&" expression, FOLLOW [96] -> GOTO 68
	expression/L8 = . expression "==" expression, FOLLOW [96] -> GOTO 68
	expression/L8 = . expression "!=" expression, FOLLOW [96] -> GOTO 68
	expression/L8 = . expression "<=" expression, FOLLOW [96] -> GOTO 68
	expression/L8 = . expression "<" expression, FOLLOW [96] -> GOTO 68
	expression/L8 = . expression ">=" expression, FOLLOW [96] -> GOTO 68
	expression/L8 = . expression ">" expression, FOLLOW [96] -> GOTO 68
	expression/L9 = . expression "+" expression, FOLLOW [96] -> GOTO 68
	expression/L9 = . expression "-" expression, FOLLOW [96] -> GOTO 68
	expression/L10 = . expression "*" expression, FOLLOW [96] -> GOTO 68
	expression/L10 = . expression "/" expression, FOLLOW [96] -> GOTO 68
	expression/L10 = . expression "%" expression, FOLLOW [96] -> GOTO 68
	expression/L11 = . expression "<<" expression, FOLLOW [96] -> GOTO 68
	expression/L11 = . expression ">>" expression, FOLLOW [96] -> GOTO 68
	expression/L12 = . expression "." IDENT, FOLLOW [96] -> GOTO 68
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [96] -> GOTO 68
	expression/L13 = . expression "(" ")", FOLLOW [96] -> GOTO 68
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [96] -> GOTO 68
	iexpression = . expression indirection IDENT, FOLLOW [96] -> GOTO 68
	expression/L12 = . iexpression, FOLLOW [96] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [96] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [96] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [96] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [96] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [96] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [96] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [96] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [96] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [96] -> SHIFT '&' GOTO 78
	typedefinition = . "typedef" typepath IDENT, FOLLOW [13] -> SHIFT "typedef" GOTO 19
	statement/L1 = . "{" codeblock "}", FOLLOW [97] -> SHIFT '{' GOTO 79
	expression/L1 = . "{" expressionlist "}", FOLLOW [96] -> SHIFT '{' GOTO 79
	expression/L1 = . "{" "}", FOLLOW [96] -> SHIFT '{' GOTO 79
	linkage = . "private", FOLLOW [60] -> SHIFT "private" GOTO 23
	linkage = . "public", FOLLOW [60] -> SHIFT "public" GOTO 24
	expression/L9 = . "+" expression, FOLLOW [96] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [96] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [96] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [96] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [96] -> SHIFT '!' GOTO 84
	statement/L1 = . "var" variabledefinition ";", FOLLOW [97] -> SHIFT "var" GOTO 85
	statement/L1 = . "return" expression ";", FOLLOW [97] -> SHIFT "return" GOTO 86
	statement/L1 = . "delete" expression ";", FOLLOW [97] -> SHIFT "delete" GOTO 87
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}", FOLLOW [97] -> SHIFT "if" GOTO 88
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}", FOLLOW [97] -> SHIFT "if" GOTO 88
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}", FOLLOW [97] -> SHIFT "while" GOTO 89
	expression/L1 = . "new" typespec ":" expression, FOLLOW [96] -> SHIFT "new" GOTO 90
	expression/L2 = . "null", FOLLOW [96] -> SHIFT "null" GOTO 91
	statementlist = ., FOLLOW [16] -> REDUCE statementlist #0
	linkage = . (30), FOLLOW [60] -> REDUCE linkage #0 CALL linkage {linkage="internal",attributes="#0 nounwind"}
[336]
	callablebody = "(" parameterlist ")" "{" codeblock . "}", FOLLOW [244] -> SHIFT '}' GOTO 368
[337]
	interface_definition = "function" typespec IDENT "(" parameterlist . ")" ";", FOLLOW [169] -> SHIFT ')' GOTO 369
	interface_definition = "function" typespec IDENT "(" parameterlist . ")" "const" ";", FOLLOW [169] -> SHIFT ')' GOTO 369
[338]
	interface_definition = "procedure" IDENT "(" parameterlist ")" . ";", FOLLOW [169] -> SHIFT ';' GOTO 370
	interface_definition = "procedure" IDENT "(" parameterlist ")" . "const" ";", FOLLOW [169] -> SHIFT "const" GOTO 371
[339]
	operatordefinition = linkage "operator" "(" ")" typespec . callablebody, FOLLOW [172] -> GOTO 372
	callablebody = . "(" parameterlist ")" "{" codeblock "}", FOLLOW [172] -> SHIFT '(' GOTO 98
	callablebody = . "(" parameterlist ")" "const" "{" codeblock "}", FOLLOW [172] -> SHIFT '(' GOTO 98
[340]
	operatordefinition = linkage "operator" "&" typespec callablebody . (45), FOLLOW [172] -> REDUCE operatordefinition #5 CALL operatordef {name="&",minarg=0,maxarg=0}
[341]
	operatordefinition = linkage "operator" "->" typespec callablebody . (36), FOLLOW [172] -> REDUCE operatordefinition #5 CALL operatordef {name="->",minarg=0,maxarg=0}
[342]
	operatordefinition = linkage "operator" "=" typespec callablebody . (37), FOLLOW [172] -> REDUCE operatordefinition #5 CALL operatordef {name="=",minarg=0,maxarg=0}
[343]
	operatordefinition = linkage "operator" "+" typespec callablebody . (38), FOLLOW [172] -> REDUCE operatordefinition #5 CALL operatordef {name="+",minarg=0,maxarg=0}
[344]
	operatordefinition = linkage "operator" "-" typespec callablebody . (39), FOLLOW [172] -> REDUCE operatordefinition #5 CALL operatordef {name="-",minarg=0,maxarg=0}
[345]
	operatordefinition = linkage "operator" "*" typespec callablebody . (40), FOLLOW [172] -> REDUCE operatordefinition #5 CALL operatordef {name="*",minarg=0,maxarg=0}
[346]
	operatordefinition = linkage "operator" "/" typespec callablebody . (41), FOLLOW [172] -> REDUCE operatordefinition #5 CALL operatordef {name="/",minarg=0,maxarg=0}
[347]
	operatordefinition = linkage "operator" "%" typespec callablebody . (42), FOLLOW [172] -> REDUCE operatordefinition #5 CALL operatordef {name="%",minarg=0,maxarg=0}
[348]
	operatordefinition = linkage "operator" "&&" typespec callablebody . (43), FOLLOW [172] -> REDUCE operatordefinition #5 CALL operatordef {name="&&",minarg=0,maxarg=0}
[349]
	operatordefinition = linkage "operator" "||" typespec callablebody . (44), FOLLOW [172] -> REDUCE operatordefinition #5 CALL operatordef {name="||",minarg=0,maxarg=0}
[350]
	operatordefinition = linkage "operator" "|" typespec callablebody . (46), FOLLOW [172] -> REDUCE operatordefinition #5 CALL operatordef {name="|",minarg=0,maxarg=0}
[351]
	operatordefinition = linkage "operator" "<<" typespec callablebody . (47), FOLLOW [172] -> REDUCE operatordefinition #5 CALL operatordef {name="<<",minarg=0,maxarg=0}
[352]
	operatordefinition = linkage "operator" ">>" typespec callablebody . (48), FOLLOW [172] -> REDUCE operatordefinition #5 CALL operatordef {name=">>",minarg=0,maxarg=0}
[353]
	operatordefinition = linkage "operator" "~" typespec callablebody . (49), FOLLOW [172] -> REDUCE operatordefinition #5 CALL operatordef {name="~",minarg=0,maxarg=0}
[354]
	operatordefinition = linkage "operator" "!" typespec callablebody . (50), FOLLOW [172] -> REDUCE operatordefinition #5 CALL operatordef {name="!",minarg=0,maxarg=0}
[355]
	operatordefinition = linkage "operator" "[" "]" typespec . callablebody, FOLLOW [172] -> GOTO 373
	callablebody = . "(" parameterlist ")" "{" codeblock "}", FOLLOW [172] -> SHIFT '(' GOTO 98
	callablebody = . "(" parameterlist ")" "const" "{" codeblock "}", FOLLOW [172] -> SHIFT '(' GOTO 98
[356]
	operatordefinition = linkage "operator" "==" typespec callablebody . (53), FOLLOW [172] -> REDUCE operatordefinition #5 CALL operatordef {name="==",minarg=1,maxarg=1}
[357]
	operatordefinition = linkage "operator" "!=" typespec callablebody . (54), FOLLOW [172] -> REDUCE operatordefinition #5 CALL operatordef {name="!=",minarg=1,maxarg=1}
[358]
	operatordefinition = linkage "operator" ">=" typespec callablebody . (55), FOLLOW [172] -> REDUCE operatordefinition #5 CALL operatordef {name=">=",minarg=1,maxarg=1}
[359]
	operatordefinition = linkage "operator" "<=" typespec callablebody . (56), FOLLOW [172] -> REDUCE operatordefinition #5 CALL operatordef {name="<=",minarg=1,maxarg=1}
[360]
	operatordefinition = linkage "operator" ">" typespec callablebody . (57), FOLLOW [172] -> REDUCE operatordefinition #5 CALL operatordef {name=">",minarg=1,maxarg=1}
[361]
	operatordefinition = linkage "operator" "<" typespec callablebody . (58), FOLLOW [172] -> REDUCE operatordefinition #5 CALL operatordef {name="<",minarg=1,maxarg=1}
[362]
	extern_definition = "extern" DQSTRING "function" typespec IDENT "(" extern_paramlist ")" ";" . (2), FOLLOW [58] -> REDUCE extern_definition #9 CALL extern_funcdef
[363]
	extern_definition = "extern" DQSTRING "function" typespec IDENT "(" extern_paramlist "..." ")" . ";", FOLLOW [58] -> SHIFT ';' GOTO 374
[364]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist "..." ")" ";" . (5), FOLLOW [58] -> REDUCE extern_definition #9 CALL extern_procdef_vararg
[365]
	statement/L1 = "if" "(" expression ")" "{" codeblock . "}", FOLLOW [97] -> SHIFT '}' GOTO 375
	statement/L1 = "if" "(" expression ")" "{" codeblock . "}" "else" "{" codeblock "}", FOLLOW [97] -> SHIFT '}' GOTO 375
[366]
	statement/L1 = "while" "(" expression ")" "{" codeblock . "}", FOLLOW [97] -> SHIFT '}' GOTO 376
[367]
	callablebody = "(" parameterlist ")" "const" "{" codeblock . "}", FOLLOW [244] -> SHIFT '}' GOTO 377
[368]
	callablebody = "(" parameterlist ")" "{" codeblock "}" . (scope:59), FOLLOW [244] -> REDUCE callablebody #6 CALL callablebody "&"
[369]
	interface_definition = "function" typespec IDENT "(" parameterlist ")" . ";", FOLLOW [169] -> SHIFT ';' GOTO 378
	interface_definition = "function" typespec IDENT "(" parameterlist ")" . "const" ";", FOLLOW [169] -> SHIFT "const" GOTO 379
[370]
	interface_definition = "procedure" IDENT "(" parameterlist ")" ";" . (9), FOLLOW [169] -> REDUCE interface_definition #6 CALL interface_procdef "&"
[371]
	interface_definition = "procedure" IDENT "(" parameterlist ")" "const" . ";", FOLLOW [169] -> SHIFT ';' GOTO 380
[372]
	operatordefinition = linkage "operator" "(" ")" typespec callablebody . (51), FOLLOW [172] -> REDUCE operatordefinition #6 CALL operatordef {name="()",minarg=0,maxarg=1024}
[373]
	operatordefinition = linkage "operator" "[" "]" typespec callablebody . (52), FOLLOW [172] -> REDUCE operatordefinition #6 CALL operatordef {name="[]",minarg=0,maxarg=1024}
[374]
	extern_definition = "extern" DQSTRING "function" typespec IDENT "(" extern_paramlist "..." ")" ";" . (4), FOLLOW [58] -> REDUCE extern_definition #10 CALL extern_funcdef_vararg
[375]
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" . "else" "{" codeblock "}", FOLLOW [97] -> SHIFT "else" GOTO 381
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" . (scope:69), FOLLOW [97] -> REDUCE statement #7 CALL conditional_if
[376]
	statement/L1 = "while" "(" expression ")" "{" codeblock "}" . (scope:71), FOLLOW [97] -> REDUCE statement #7 CALL conditional_while
[377]
	callablebody = "(" parameterlist ")" "const" "{" codeblock "}" . (scope:60), FOLLOW [244] -> REDUCE callablebody #7 CALL callablebody "const&"
[378]
	interface_definition = "function" typespec IDENT "(" parameterlist ")" ";" . (7), FOLLOW [169] -> REDUCE interface_definition #7 CALL interface_funcdef "&"
[379]
	interface_definition = "function" typespec IDENT "(" parameterlist ")" "const" . ";", FOLLOW [169] -> SHIFT ';' GOTO 382
[380]
	interface_definition = "procedure" IDENT "(" parameterlist ")" "const" ";" . (10), FOLLOW [169] -> REDUCE interface_definition #7 CALL interface_procdef "const&"
[381]
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" "else" . "{" codeblock "}", FOLLOW [97] -> SHIFT '{' GOTO 383
[382]
	interface_definition = "function" typespec IDENT "(" parameterlist ")" "const" ";" . (8), FOLLOW [169] -> REDUCE interface_definition #8 CALL interface_funcdef "const&"
[383]
	statement/L1 = . typedefinition ";", FOLLOW [97] -> GOTO 63
	functiondefinition = . linkage "function" typespec IDENT callablebody, FOLLOW [97] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [97] -> GOTO 14
	statement/L1 = . functiondefinition, FOLLOW [97] -> GOTO 64
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" "else" "{" . codeblock "}", FOLLOW [97] -> GOTO 384
	codeblock = . statementlist, FOLLOW [16] -> GOTO 66
	statementlist = . statement statementlist, FOLLOW [16] -> GOTO 67
	statement/L1 = . expression ";", FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "+=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "-=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "*=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "/=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "^=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "&=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "%=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "&&=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "||=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "&=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "|=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression "<<=" expression, FOLLOW [96] -> GOTO 68
	expression/L3 = . expression ">>=" expression, FOLLOW [96] -> GOTO 68
	expression/L4 = . expression "||" expression, FOLLOW [96] -> GOTO 68
	expression/L5 = . expression "&&" expression, FOLLOW [96] -> GOTO 68
	expression/L6 = . expression "|" expression, FOLLOW [96] -> GOTO 68
	expression/L7 = . expression "^" expression, FOLLOW [96] -> GOTO 68
	expression/L7 = . expression "&" expression, FOLLOW [96] -> GOTO 68
	expression/L8 = . expression "==" expression, FOLLOW [96] -> GOTO 68
	expression/L8 = . expression "!=" expression, FOLLOW [96] -> GOTO 68
	expression/L8 = . expression "<=" expression, FOLLOW [96] -> GOTO 68
	expression/L8 = . expression "<" expression, FOLLOW [96] -> GOTO 68
	expression/L8 = . expression ">=" expression, FOLLOW [96] -> GOTO 68
	expression/L8 = . expression ">" expression, FOLLOW [96] -> GOTO 68
	expression/L9 = . expression "+" expression, FOLLOW [96] -> GOTO 68
	expression/L9 = . expression "-" expression, FOLLOW [96] -> GOTO 68
	expression/L10 = . expression "*" expression, FOLLOW [96] -> GOTO 68
	expression/L10 = . expression "/" expression, FOLLOW [96] -> GOTO 68
	expression/L10 = . expression "%" expression, FOLLOW [96] -> GOTO 68
	expression/L11 = . expression "<<" expression, FOLLOW [96] -> GOTO 68
	expression/L11 = . expression ">>" expression, FOLLOW [96] -> GOTO 68
	expression/L12 = . expression "." IDENT, FOLLOW [96] -> GOTO 68
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [96] -> GOTO 68
	expression/L13 = . expression "(" ")", FOLLOW [96] -> GOTO 68
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [96] -> GOTO 68
	iexpression = . expression indirection IDENT, FOLLOW [96] -> GOTO 68
	expression/L12 = . iexpression, FOLLOW [96] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [96] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [96] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [96] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [96] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [96] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [96] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [96] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [96] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [96] -> SHIFT '&' GOTO 78
	typedefinition = . "typedef" typepath IDENT, FOLLOW [13] -> SHIFT "typedef" GOTO 19
	statement/L1 = . "{" codeblock "}", FOLLOW [97] -> SHIFT '{' GOTO 79
	expression/L1 = . "{" expressionlist "}", FOLLOW [96] -> SHIFT '{' GOTO 79
	expression/L1 = . "{" "}", FOLLOW [96] -> SHIFT '{' GOTO 79
	linkage = . "private", FOLLOW [60] -> SHIFT "private" GOTO 23
	linkage = . "public", FOLLOW [60] -> SHIFT "public" GOTO 24
	expression/L9 = . "+" expression, FOLLOW [96] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [96] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [96] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [96] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [96] -> SHIFT '!' GOTO 84
	statement/L1 = . "var" variabledefinition ";", FOLLOW [97] -> SHIFT "var" GOTO 85
	statement/L1 = . "return" expression ";", FOLLOW [97] -> SHIFT "return" GOTO 86
	statement/L1 = . "delete" expression ";", FOLLOW [97] -> SHIFT "delete" GOTO 87
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}", FOLLOW [97] -> SHIFT "if" GOTO 88
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}", FOLLOW [97] -> SHIFT "if" GOTO 88
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}", FOLLOW [97] -> SHIFT "while" GOTO 89
	expression/L1 = . "new" typespec ":" expression, FOLLOW [96] -> SHIFT "new" GOTO 90
	expression/L2 = . "null", FOLLOW [96] -> SHIFT "null" GOTO 91
	statementlist = ., FOLLOW [16] -> REDUCE statementlist #0
	linkage = . (30), FOLLOW [60] -> REDUCE linkage #0 CALL linkage {linkage="internal",attributes="#0 nounwind"}
[384]
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock . "}", FOLLOW [97] -> SHIFT '}' GOTO 385
[385]
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}" . (scope:70), FOLLOW [97] -> REDUCE statement #11 CALL conditional_if_else

-- Function calls:
(1) program
(2) extern_funcdef
(3) extern_procdef
(4) extern_funcdef_vararg
(5) extern_procdef_vararg
(6) extern_paramdeflist
(7) interface_funcdef, "&"
(8) interface_funcdef, "const&"
(9) interface_procdef, "&"
(10) interface_procdef, "const&"
(11) definition, 1
(12) definition, 2
(13) typespec, ""
(14) typespec, "const "
(15) typespec, "&"
(16) typespec, "const&"
(17) typespec, "^"
(18) typespec, "const^"
(19) typespec, "^&"
(20) typespec, "const^&"
(21) typespec, "^^"
(22) typespec, "const^^"
(23) typespec, "^^&"
(24) typespec, "const^^&"
(25) typedef
(26) structdef
(27) interfacedef
(28) inheritdef, 1
(29) classdef
(30) linkage, {linkage="internal",attributes="#0 nounwind"}
(31) linkage, {linkage="external",attributes="#0 noinline nounwind"}
(32) funcdef
(33) procdef
(34) constructordef
(35) destructordef
(36) operatordef, {name="->",minarg=0,maxarg=0}
(37) operatordef, {name="=",minarg=0,maxarg=0}
(38) operatordef, {name="+",minarg=0,maxarg=0}
(39) operatordef, {name="-",minarg=0,maxarg=0}
(40) operatordef, {name="*",minarg=0,maxarg=0}
(41) operatordef, {name="/",minarg=0,maxarg=0}
(42) operatordef, {name="%",minarg=0,maxarg=0}
(43) operatordef, {name="&&",minarg=0,maxarg=0}
(44) operatordef, {name="||",minarg=0,maxarg=0}
(45) operatordef, {name="&",minarg=0,maxarg=0}
(46) operatordef, {name="|",minarg=0,maxarg=0}
(47) operatordef, {name="<<",minarg=0,maxarg=0}
(48) operatordef, {name=">>",minarg=0,maxarg=0}
(49) operatordef, {name="~",minarg=0,maxarg=0}
(50) operatordef, {name="!",minarg=0,maxarg=0}
(51) operatordef, {name="()",minarg=0,maxarg=1024}
(52) operatordef, {name="[]",minarg=0,maxarg=1024}
(53) operatordef, {name="==",minarg=1,maxarg=1}
(54) operatordef, {name="!=",minarg=1,maxarg=1}
(55) operatordef, {name=">=",minarg=1,maxarg=1}
(56) operatordef, {name="<=",minarg=1,maxarg=1}
(57) operatordef, {name=">",minarg=1,maxarg=1}
(58) operatordef, {name="<",minarg=1,maxarg=1}
(59) callablebody, "&"
(60) callablebody, "const&"
(61) main_procdef
(62) paramdeflist
(63) paramdef
(64) codeblock
(65) definition
(66) free_expression
(67) return_value
(68) delete
(69) conditional_if
(70) conditional_if_else
(71) conditional_while
(72) vardef
(73) vardef_assign
(74) vardef_array_assign
(75) vardef_array
(76) structure
(77) allocate
(78) variable
(79) constant, "constexpr bool"
(80) constant, "constexpr uint"
(81) constant, "constexpr int"
(82) constant, "constexpr float"
(83) null, "constexpr float"
(84) string_constant, "constexpr float"
(85) char_constant, "constexpr float"
(86) operator, "="
(87) assign_operator, "+"
(88) assign_operator, "-"
(89) assign_operator, "*"
(90) assign_operator, "/"
(91) assign_operator, "^"
(92) assign_operator, "&"
(93) assign_operator, "%"
(94) assign_operator, "&&"
(95) assign_operator, "||"
(96) assign_operator, "|"
(97) assign_operator, "<<"
(98) assign_operator, ">>"
(99) operator, "||"
(100) operator, "&&"
(101) operator, "|"
(102) operator, "^"
(103) operator, "&"
(104) operator, "=="
(105) operator, "!="
(106) operator, "<="
(107) operator, "<"
(108) operator, ">="
(109) operator, ">"
(110) operator, "+"
(111) operator, "-"
(112) operator, "~"
(113) operator, "!"
(114) operator, "*"
(115) operator, "/"
(116) operator, "%"
(117) operator, "<<"
(118) operator, ">>"
(119) member
(120) operator, "->"
(121) operator, "()"
(122) operator, "[]"
(123) rep_operator, "->"
(124) count

-- Action table:
[1]
	$ => Reduce #0 extern_definitionlist
	IDENT => Reduce #0 extern_definitionlist
	"extern" => Shift goto 4
	"function" => Reduce #0 extern_definitionlist
	"procedure" => Reduce #0 extern_definitionlist
	"const" => Reduce #0 extern_definitionlist
	"typedef" => Reduce #0 extern_definitionlist
	"struct" => Reduce #0 extern_definitionlist
	"interface" => Reduce #0 extern_definitionlist
	"class" => Reduce #0 extern_definitionlist
	"private" => Reduce #0 extern_definitionlist
	"public" => Reduce #0 extern_definitionlist
	"main" => Reduce #0 extern_definitionlist
[2]
	$ => Reduce #0 free_definitionlist
	IDENT => Shift goto 17
	"function" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	"procedure" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	"const" => Shift goto 18
	"typedef" => Shift goto 19
	"struct" => Shift goto 20
	"interface" => Shift goto 21
	"class" => Shift goto 22
	"private" => Shift goto 23
	"public" => Shift goto 24
	"main" => Reduce #0 free_definitionlist
[3]
	$ => Reduce #0 extern_definitionlist
	IDENT => Reduce #0 extern_definitionlist
	"extern" => Shift goto 4
	"function" => Reduce #0 extern_definitionlist
	"procedure" => Reduce #0 extern_definitionlist
	"const" => Reduce #0 extern_definitionlist
	"typedef" => Reduce #0 extern_definitionlist
	"struct" => Reduce #0 extern_definitionlist
	"interface" => Reduce #0 extern_definitionlist
	"class" => Reduce #0 extern_definitionlist
	"private" => Reduce #0 extern_definitionlist
	"public" => Reduce #0 extern_definitionlist
	"main" => Reduce #0 extern_definitionlist
[4]
	DQSTRING => Shift goto 26
[5]
	$ => Reduce #0 main_procedure
	"main" => Shift goto 28
[6]
	$ => Reduce #1 free_definition
	IDENT => Reduce #1 free_definition
	"function" => Reduce #1 free_definition
	"procedure" => Reduce #1 free_definition
	"const" => Reduce #1 free_definition
	"typedef" => Reduce #1 free_definition
	"struct" => Reduce #1 free_definition
	"interface" => Reduce #1 free_definition
	"class" => Reduce #1 free_definition
	"private" => Reduce #1 free_definition
	"public" => Reduce #1 free_definition
	"main" => Reduce #1 free_definition
[7]
	$ => Reduce #0 free_definitionlist
	IDENT => Shift goto 17
	"function" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	"procedure" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	"const" => Shift goto 18
	"typedef" => Shift goto 19
	"struct" => Shift goto 20
	"interface" => Shift goto 21
	"class" => Shift goto 22
	"private" => Shift goto 23
	"public" => Shift goto 24
	"main" => Reduce #0 free_definitionlist
[8]
	IDENT => Reduce #1 typespec call typespec ""
	'(' => Reduce #1 typespec call typespec ""
	')' => Reduce #1 typespec call typespec ""
	"..." => Reduce #1 typespec call typespec ""
	',' => Reduce #1 typespec call typespec ""
	'&' => Shift goto 30
	'^' => Shift goto 31
	':' => Reduce #1 typespec call typespec ""
[9]
	IDENT => Shift goto 32
[10]
	';' => Shift goto 33
[11]
	$ => Reduce #1 struct_definition call definition 1
	IDENT => Reduce #1 struct_definition call definition 1
	"function" => Reduce #1 struct_definition call definition 1
	"procedure" => Reduce #1 struct_definition call definition 1
	"const" => Reduce #1 struct_definition call definition 1
	"typedef" => Reduce #1 struct_definition call definition 1
	"struct" => Reduce #1 struct_definition call definition 1
	'}' => Reduce #1 struct_definition call definition 1
	"interface" => Reduce #1 struct_definition call definition 1
	"class" => Reduce #1 struct_definition call definition 1
	"private" => Reduce #1 struct_definition call definition 1
	"public" => Reduce #1 struct_definition call definition 1
	"main" => Reduce #1 struct_definition call definition 1
[12]
	$ => Reduce #1 free_definition call definition 1
	IDENT => Reduce #1 free_definition call definition 1
	"function" => Reduce #1 free_definition call definition 1
	"procedure" => Reduce #1 free_definition call definition 1
	"const" => Reduce #1 free_definition call definition 1
	"typedef" => Reduce #1 free_definition call definition 1
	"struct" => Reduce #1 free_definition call definition 1
	"interface" => Reduce #1 free_definition call definition 1
	"class" => Reduce #1 free_definition call definition 1
	"private" => Reduce #1 free_definition call definition 1
	"public" => Reduce #1 free_definition call definition 1
	"main" => Reduce #1 free_definition call definition 1
[13]
	$ => Reduce #1 free_definition call definition 1
	IDENT => Reduce #1 free_definition call definition 1
	"function" => Reduce #1 free_definition call definition 1
	"procedure" => Reduce #1 free_definition call definition 1
	"const" => Reduce #1 free_definition call definition 1
	"typedef" => Reduce #1 free_definition call definition 1
	"struct" => Reduce #1 free_definition call definition 1
	"interface" => Reduce #1 free_definition call definition 1
	"class" => Reduce #1 free_definition call definition 1
	"private" => Reduce #1 free_definition call definition 1
	"public" => Reduce #1 free_definition call definition 1
	"main" => Reduce #1 free_definition call definition 1
[14]
	"function" => Shift goto 34
	"procedure" => Shift goto 35
[15]
	$ => Reduce #1 free_definition call definition 1
	IDENT => Reduce #1 free_definition call definition 1
	"function" => Reduce #1 free_definition call definition 1
	"procedure" => Reduce #1 free_definition call definition 1
	"const" => Reduce #1 free_definition call definition 1
	"typedef" => Reduce #1 free_definition call definition 1
	"struct" => Reduce #1 free_definition call definition 1
	"interface" => Reduce #1 free_definition call definition 1
	"class" => Reduce #1 free_definition call definition 1
	"private" => Reduce #1 free_definition call definition 1
	"public" => Reduce #1 free_definition call definition 1
	"main" => Reduce #1 free_definition call definition 1
[16]
	';' => Shift goto 36
[17]
	IDENT => Reduce #1 typename
	'(' => Reduce #1 typename
	')' => Reduce #1 typename
	"..." => Reduce #1 typename
	',' => Reduce #1 typename
	"::" => Shift goto 37
	'&' => Reduce #1 typename
	'^' => Reduce #1 typename
	'{' => Reduce #1 typename
	':' => Reduce #1 typename
[18]
	IDENT => Shift goto 17
[19]
	IDENT => Shift goto 17
[20]
	IDENT => Shift goto 41
[21]
	IDENT => Shift goto 42
[22]
	IDENT => Shift goto 43
[23]
	"function" => Reduce #1 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	"procedure" => Reduce #1 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	"constructor" => Reduce #1 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	"operator" => Reduce #1 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
[24]
	"function" => Reduce #1 linkage call linkage {linkage="external",attributes="#0 noinline nounwind"}
	"procedure" => Reduce #1 linkage call linkage {linkage="external",attributes="#0 noinline nounwind"}
	"constructor" => Reduce #1 linkage call linkage {linkage="external",attributes="#0 noinline nounwind"}
	"operator" => Reduce #1 linkage call linkage {linkage="external",attributes="#0 noinline nounwind"}
[25]
	$ => Reduce #2 extern_definitionlist
	IDENT => Reduce #2 extern_definitionlist
	"function" => Reduce #2 extern_definitionlist
	"procedure" => Reduce #2 extern_definitionlist
	"const" => Reduce #2 extern_definitionlist
	"typedef" => Reduce #2 extern_definitionlist
	"struct" => Reduce #2 extern_definitionlist
	"interface" => Reduce #2 extern_definitionlist
	"class" => Reduce #2 extern_definitionlist
	"private" => Reduce #2 extern_definitionlist
	"public" => Reduce #2 extern_definitionlist
	"main" => Reduce #2 extern_definitionlist
[26]
	"function" => Shift goto 44
	"procedure" => Shift goto 45
[27]
	$ => Accept
[28]
	'{' => Shift goto 46
[29]
	$ => Reduce #2 free_definitionlist
	"main" => Reduce #2 free_definitionlist
[30]
	IDENT => Reduce #2 typespec call typespec "&"
	'(' => Reduce #2 typespec call typespec "&"
	')' => Reduce #2 typespec call typespec "&"
	"..." => Reduce #2 typespec call typespec "&"
	',' => Reduce #2 typespec call typespec "&"
	':' => Reduce #2 typespec call typespec "&"
[31]
	IDENT => Reduce #2 typespec call typespec "^"
	'(' => Reduce #2 typespec call typespec "^"
	')' => Reduce #2 typespec call typespec "^"
	"..." => Reduce #2 typespec call typespec "^"
	',' => Reduce #2 typespec call typespec "^"
	'&' => Shift goto 47
	'^' => Shift goto 48
	':' => Reduce #2 typespec call typespec "^"
[32]
	';' => Reduce #2 variabledefinition call vardef
	'=' => Shift goto 49
	'[' => Shift goto 50
[33]
	$ => Reduce #2 struct_definition call definition 1
	IDENT => Reduce #2 struct_definition call definition 1
	"function" => Reduce #2 struct_definition call definition 1
	"procedure" => Reduce #2 struct_definition call definition 1
	"const" => Reduce #2 struct_definition call definition 1
	"typedef" => Reduce #2 struct_definition call definition 1
	"struct" => Reduce #2 struct_definition call definition 1
	'}' => Reduce #2 struct_definition call definition 1
	"interface" => Reduce #2 struct_definition call definition 1
	"class" => Reduce #2 struct_definition call definition 1
	"private" => Reduce #2 struct_definition call definition 1
	"public" => Reduce #2 struct_definition call definition 1
	"main" => Reduce #2 struct_definition call definition 1
[34]
	IDENT => Shift goto 17
	"const" => Shift goto 18
[35]
	IDENT => Shift goto 52
[36]
	$ => Reduce #2 struct_definition call definition 1
	IDENT => Reduce #2 struct_definition call definition 1
	"function" => Reduce #2 struct_definition call definition 1
	"procedure" => Reduce #2 struct_definition call definition 1
	"const" => Reduce #2 struct_definition call definition 1
	"typedef" => Reduce #2 struct_definition call definition 1
	"struct" => Reduce #2 struct_definition call definition 1
	'}' => Reduce #2 struct_definition call definition 1
	"interface" => Reduce #2 struct_definition call definition 1
	"class" => Reduce #2 struct_definition call definition 1
	"private" => Reduce #2 struct_definition call definition 1
	"public" => Reduce #2 struct_definition call definition 1
	"main" => Reduce #2 struct_definition call definition 1
[37]
	IDENT => Shift goto 17
[38]
	IDENT => Reduce #2 typespec call typespec "const "
	'(' => Reduce #2 typespec call typespec "const "
	')' => Reduce #2 typespec call typespec "const "
	"..." => Reduce #2 typespec call typespec "const "
	',' => Reduce #2 typespec call typespec "const "
	'&' => Shift goto 54
	'^' => Shift goto 55
	':' => Reduce #2 typespec call typespec "const "
[39]
	IDENT => Reduce #1 typepath call typespec ""
	',' => Reduce #1 typepath call typespec ""
	'{' => Reduce #1 typepath call typespec ""
[40]
	IDENT => Shift goto 56
[41]
	'{' => Shift goto 57
[42]
	'{' => Shift goto 58
[43]
	'{' => Shift goto 59
	':' => Shift goto 60
[44]
	IDENT => Shift goto 17
	"const" => Shift goto 18
[45]
	IDENT => Shift goto 62
[46]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	"function" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	'(' => Shift goto 77
	"procedure" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	'&' => Shift goto 78
	"typedef" => Shift goto 19
	'{' => Shift goto 79
	'}' => Reduce #0 statementlist
	"private" => Shift goto 23
	"public" => Shift goto 24
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"var" => Shift goto 85
	"return" => Shift goto 86
	"delete" => Shift goto 87
	"if" => Shift goto 88
	"while" => Shift goto 89
	"new" => Shift goto 90
	"null" => Shift goto 91
[47]
	IDENT => Reduce #3 typespec call typespec "^&"
	'(' => Reduce #3 typespec call typespec "^&"
	')' => Reduce #3 typespec call typespec "^&"
	"..." => Reduce #3 typespec call typespec "^&"
	',' => Reduce #3 typespec call typespec "^&"
	':' => Reduce #3 typespec call typespec "^&"
[48]
	IDENT => Reduce #3 typespec call typespec "^^"
	'(' => Reduce #3 typespec call typespec "^^"
	')' => Reduce #3 typespec call typespec "^^"
	"..." => Reduce #3 typespec call typespec "^^"
	',' => Reduce #3 typespec call typespec "^^"
	'&' => Shift goto 92
	':' => Reduce #3 typespec call typespec "^^"
[49]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 94
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"null" => Shift goto 91
[50]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 94
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"null" => Shift goto 91
[51]
	IDENT => Shift goto 96
[52]
	'(' => Shift goto 98
[53]
	IDENT => Reduce #3 typename
	'(' => Reduce #3 typename
	')' => Reduce #3 typename
	"..." => Reduce #3 typename
	',' => Reduce #3 typename
	'&' => Reduce #3 typename
	'^' => Reduce #3 typename
	'{' => Reduce #3 typename
	':' => Reduce #3 typename
[54]
	IDENT => Reduce #3 typespec call typespec "const&"
	'(' => Reduce #3 typespec call typespec "const&"
	')' => Reduce #3 typespec call typespec "const&"
	"..." => Reduce #3 typespec call typespec "const&"
	',' => Reduce #3 typespec call typespec "const&"
	':' => Reduce #3 typespec call typespec "const&"
[55]
	IDENT => Reduce #3 typespec call typespec "const^"
	'(' => Reduce #3 typespec call typespec "const^"
	')' => Reduce #3 typespec call typespec "const^"
	"..." => Reduce #3 typespec call typespec "const^"
	',' => Reduce #3 typespec call typespec "const^"
	'&' => Shift goto 99
	'^' => Shift goto 100
	':' => Reduce #3 typespec call typespec "const^"
[56]
	';' => Reduce #3 typedefinition call typedef
[57]
	IDENT => Shift goto 17
	"const" => Shift goto 18
	"typedef" => Shift goto 19
	"struct" => Shift goto 20
	'}' => Reduce #0 struct_definitionlist
[58]
	"function" => Shift goto 105
	"procedure" => Shift goto 106
	'}' => Reduce #0 interface_definitionlist
[59]
	IDENT => Shift goto 17
	"function" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	"procedure" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	"const" => Shift goto 18
	"typedef" => Shift goto 19
	"struct" => Shift goto 20
	'}' => Reduce #0 class_definitionlist
	"interface" => Shift goto 21
	"class" => Shift goto 22
	"private" => Shift goto 23
	"public" => Shift goto 24
	"constructor" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	"destructor" => Shift goto 118
	"operator" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
[60]
	IDENT => Shift goto 17
[61]
	IDENT => Shift goto 121
[62]
	'(' => Shift goto 122
[63]
	';' => Shift goto 123
[64]
	$ => Reduce #1 statement call definition
	BOOLEAN => Reduce #1 statement call definition
	IDENT => Reduce #1 statement call definition
	DQSTRING => Reduce #1 statement call definition
	SQSTRING => Reduce #1 statement call definition
	CARDINAL => Reduce #1 statement call definition
	INTEGER => Reduce #1 statement call definition
	FLOAT => Reduce #1 statement call definition
	"function" => Reduce #1 statement call definition
	'(' => Reduce #1 statement call definition
	"procedure" => Reduce #1 statement call definition
	'&' => Reduce #1 statement call definition
	"typedef" => Reduce #1 statement call definition
	'{' => Reduce #1 statement call definition
	'}' => Reduce #1 statement call definition
	"private" => Reduce #1 statement call definition
	"public" => Reduce #1 statement call definition
	'+' => Reduce #1 statement call definition
	'-' => Reduce #1 statement call definition
	'*' => Reduce #1 statement call definition
	'~' => Reduce #1 statement call definition
	'!' => Reduce #1 statement call definition
	"var" => Reduce #1 statement call definition
	"return" => Reduce #1 statement call definition
	"delete" => Reduce #1 statement call definition
	"if" => Reduce #1 statement call definition
	"while" => Reduce #1 statement call definition
	"new" => Reduce #1 statement call definition
	"null" => Reduce #1 statement call definition
[65]
	'}' => Shift goto 124
[66]
	'}' => Reduce #1 codeblock call codeblock
[67]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	"function" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	'(' => Shift goto 77
	"procedure" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	'&' => Shift goto 78
	"typedef" => Shift goto 19
	'{' => Shift goto 79
	'}' => Reduce #0 statementlist
	"private" => Shift goto 23
	"public" => Shift goto 24
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"var" => Shift goto 85
	"return" => Shift goto 86
	"delete" => Shift goto 87
	"if" => Shift goto 88
	"while" => Shift goto 89
	"new" => Shift goto 90
	"null" => Shift goto 91
[68]
	'(' => Shift goto 127
	';' => Shift goto 128
	'&' => Shift goto 129
	'^' => Shift goto 130
	"->" => Shift goto 131
	'=' => Shift goto 132
	'+' => Shift goto 133
	'-' => Shift goto 134
	'*' => Shift goto 135
	'/' => Shift goto 136
	'%' => Shift goto 137
	"&&" => Shift goto 138
	"||" => Shift goto 139
	'|' => Shift goto 140
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'[' => Shift goto 143
	"==" => Shift goto 144
	"!=" => Shift goto 145
	">=" => Shift goto 146
	"<=" => Shift goto 147
	'>' => Shift goto 148
	'<' => Shift goto 149
	"+=" => Shift goto 150
	"-=" => Shift goto 151
	"*=" => Shift goto 152
	"/=" => Shift goto 153
	"^=" => Shift goto 154
	"&=" => Shift goto 155
	"%=" => Shift goto 156
	"&&=" => Shift goto 157
	"||=" => Shift goto 158
	"|=" => Shift goto 159
	"<<=" => Shift goto 160
	">>=" => Shift goto 161
	'.' => Shift goto 162
[69]
	'(' => Reduce #1 expression
	')' => Reduce #1 expression
	';' => Reduce #1 expression
	',' => Reduce #1 expression
	'&' => Reduce #1 expression
	'^' => Reduce #1 expression
	'}' => Reduce #1 expression
	"->" => Reduce #1 expression
	'=' => Reduce #1 expression
	'+' => Reduce #1 expression
	'-' => Reduce #1 expression
	'*' => Reduce #1 expression
	'/' => Reduce #1 expression
	'%' => Reduce #1 expression
	"&&" => Reduce #1 expression
	"||" => Reduce #1 expression
	'|' => Reduce #1 expression
	"<<" => Reduce #1 expression
	">>" => Reduce #1 expression
	'[' => Reduce #1 expression
	']' => Reduce #1 expression
	"==" => Reduce #1 expression
	"!=" => Reduce #1 expression
	">=" => Reduce #1 expression
	"<=" => Reduce #1 expression
	'>' => Reduce #1 expression
	'<' => Reduce #1 expression
	"+=" => Reduce #1 expression
	"-=" => Reduce #1 expression
	"*=" => Reduce #1 expression
	"/=" => Reduce #1 expression
	"^=" => Reduce #1 expression
	"&=" => Reduce #1 expression
	"%=" => Reduce #1 expression
	"&&=" => Reduce #1 expression
	"||=" => Reduce #1 expression
	"|=" => Reduce #1 expression
	"<<=" => Reduce #1 expression
	">>=" => Reduce #1 expression
	'.' => Reduce #1 expression
[70]
	'(' => Reduce #1 expression call constant "constexpr bool"
	')' => Reduce #1 expression call constant "constexpr bool"
	';' => Reduce #1 expression call constant "constexpr bool"
	',' => Reduce #1 expression call constant "constexpr bool"
	'&' => Reduce #1 expression call constant "constexpr bool"
	'^' => Reduce #1 expression call constant "constexpr bool"
	'}' => Reduce #1 expression call constant "constexpr bool"
	"->" => Reduce #1 expression call constant "constexpr bool"
	'=' => Reduce #1 expression call constant "constexpr bool"
	'+' => Reduce #1 expression call constant "constexpr bool"
	'-' => Reduce #1 expression call constant "constexpr bool"
	'*' => Reduce #1 expression call constant "constexpr bool"
	'/' => Reduce #1 expression call constant "constexpr bool"
	'%' => Reduce #1 expression call constant "constexpr bool"
	"&&" => Reduce #1 expression call constant "constexpr bool"
	"||" => Reduce #1 expression call constant "constexpr bool"
	'|' => Reduce #1 expression call constant "constexpr bool"
	"<<" => Reduce #1 expression call constant "constexpr bool"
	">>" => Reduce #1 expression call constant "constexpr bool"
	'[' => Reduce #1 expression call constant "constexpr bool"
	']' => Reduce #1 expression call constant "constexpr bool"
	"==" => Reduce #1 expression call constant "constexpr bool"
	"!=" => Reduce #1 expression call constant "constexpr bool"
	">=" => Reduce #1 expression call constant "constexpr bool"
	"<=" => Reduce #1 expression call constant "constexpr bool"
	'>' => Reduce #1 expression call constant "constexpr bool"
	'<' => Reduce #1 expression call constant "constexpr bool"
	"+=" => Reduce #1 expression call constant "constexpr bool"
	"-=" => Reduce #1 expression call constant "constexpr bool"
	"*=" => Reduce #1 expression call constant "constexpr bool"
	"/=" => Reduce #1 expression call constant "constexpr bool"
	"^=" => Reduce #1 expression call constant "constexpr bool"
	"&=" => Reduce #1 expression call constant "constexpr bool"
	"%=" => Reduce #1 expression call constant "constexpr bool"
	"&&=" => Reduce #1 expression call constant "constexpr bool"
	"||=" => Reduce #1 expression call constant "constexpr bool"
	"|=" => Reduce #1 expression call constant "constexpr bool"
	"<<=" => Reduce #1 expression call constant "constexpr bool"
	">>=" => Reduce #1 expression call constant "constexpr bool"
	'.' => Reduce #1 expression call constant "constexpr bool"
[71]
	'(' => Reduce #1 expression call variable
	')' => Reduce #1 expression call variable
	';' => Reduce #1 expression call variable
	',' => Reduce #1 expression call variable
	'&' => Reduce #1 expression call variable
	'^' => Reduce #1 expression call variable
	'}' => Reduce #1 expression call variable
	"->" => Reduce #1 expression call variable
	'=' => Reduce #1 expression call variable
	'+' => Reduce #1 expression call variable
	'-' => Reduce #1 expression call variable
	'*' => Reduce #1 expression call variable
	'/' => Reduce #1 expression call variable
	'%' => Reduce #1 expression call variable
	"&&" => Reduce #1 expression call variable
	"||" => Reduce #1 expression call variable
	'|' => Reduce #1 expression call variable
	"<<" => Reduce #1 expression call variable
	">>" => Reduce #1 expression call variable
	'[' => Reduce #1 expression call variable
	']' => Reduce #1 expression call variable
	"==" => Reduce #1 expression call variable
	"!=" => Reduce #1 expression call variable
	">=" => Reduce #1 expression call variable
	"<=" => Reduce #1 expression call variable
	'>' => Reduce #1 expression call variable
	'<' => Reduce #1 expression call variable
	"+=" => Reduce #1 expression call variable
	"-=" => Reduce #1 expression call variable
	"*=" => Reduce #1 expression call variable
	"/=" => Reduce #1 expression call variable
	"^=" => Reduce #1 expression call variable
	"&=" => Reduce #1 expression call variable
	"%=" => Reduce #1 expression call variable
	"&&=" => Reduce #1 expression call variable
	"||=" => Reduce #1 expression call variable
	"|=" => Reduce #1 expression call variable
	"<<=" => Reduce #1 expression call variable
	">>=" => Reduce #1 expression call variable
	'.' => Reduce #1 expression call variable
[72]
	'(' => Reduce #1 expression call string_constant "constexpr float"
	')' => Reduce #1 expression call string_constant "constexpr float"
	';' => Reduce #1 expression call string_constant "constexpr float"
	',' => Reduce #1 expression call string_constant "constexpr float"
	'&' => Reduce #1 expression call string_constant "constexpr float"
	'^' => Reduce #1 expression call string_constant "constexpr float"
	'}' => Reduce #1 expression call string_constant "constexpr float"
	"->" => Reduce #1 expression call string_constant "constexpr float"
	'=' => Reduce #1 expression call string_constant "constexpr float"
	'+' => Reduce #1 expression call string_constant "constexpr float"
	'-' => Reduce #1 expression call string_constant "constexpr float"
	'*' => Reduce #1 expression call string_constant "constexpr float"
	'/' => Reduce #1 expression call string_constant "constexpr float"
	'%' => Reduce #1 expression call string_constant "constexpr float"
	"&&" => Reduce #1 expression call string_constant "constexpr float"
	"||" => Reduce #1 expression call string_constant "constexpr float"
	'|' => Reduce #1 expression call string_constant "constexpr float"
	"<<" => Reduce #1 expression call string_constant "constexpr float"
	">>" => Reduce #1 expression call string_constant "constexpr float"
	'[' => Reduce #1 expression call string_constant "constexpr float"
	']' => Reduce #1 expression call string_constant "constexpr float"
	"==" => Reduce #1 expression call string_constant "constexpr float"
	"!=" => Reduce #1 expression call string_constant "constexpr float"
	">=" => Reduce #1 expression call string_constant "constexpr float"
	"<=" => Reduce #1 expression call string_constant "constexpr float"
	'>' => Reduce #1 expression call string_constant "constexpr float"
	'<' => Reduce #1 expression call string_constant "constexpr float"
	"+=" => Reduce #1 expression call string_constant "constexpr float"
	"-=" => Reduce #1 expression call string_constant "constexpr float"
	"*=" => Reduce #1 expression call string_constant "constexpr float"
	"/=" => Reduce #1 expression call string_constant "constexpr float"
	"^=" => Reduce #1 expression call string_constant "constexpr float"
	"&=" => Reduce #1 expression call string_constant "constexpr float"
	"%=" => Reduce #1 expression call string_constant "constexpr float"
	"&&=" => Reduce #1 expression call string_constant "constexpr float"
	"||=" => Reduce #1 expression call string_constant "constexpr float"
	"|=" => Reduce #1 expression call string_constant "constexpr float"
	"<<=" => Reduce #1 expression call string_constant "constexpr float"
	">>=" => Reduce #1 expression call string_constant "constexpr float"
	'.' => Reduce #1 expression call string_constant "constexpr float"
[73]
	'(' => Reduce #1 expression call char_constant "constexpr float"
	')' => Reduce #1 expression call char_constant "constexpr float"
	';' => Reduce #1 expression call char_constant "constexpr float"
	',' => Reduce #1 expression call char_constant "constexpr float"
	'&' => Reduce #1 expression call char_constant "constexpr float"
	'^' => Reduce #1 expression call char_constant "constexpr float"
	'}' => Reduce #1 expression call char_constant "constexpr float"
	"->" => Reduce #1 expression call char_constant "constexpr float"
	'=' => Reduce #1 expression call char_constant "constexpr float"
	'+' => Reduce #1 expression call char_constant "constexpr float"
	'-' => Reduce #1 expression call char_constant "constexpr float"
	'*' => Reduce #1 expression call char_constant "constexpr float"
	'/' => Reduce #1 expression call char_constant "constexpr float"
	'%' => Reduce #1 expression call char_constant "constexpr float"
	"&&" => Reduce #1 expression call char_constant "constexpr float"
	"||" => Reduce #1 expression call char_constant "constexpr float"
	'|' => Reduce #1 expression call char_constant "constexpr float"
	"<<" => Reduce #1 expression call char_constant "constexpr float"
	">>" => Reduce #1 expression call char_constant "constexpr float"
	'[' => Reduce #1 expression call char_constant "constexpr float"
	']' => Reduce #1 expression call char_constant "constexpr float"
	"==" => Reduce #1 expression call char_constant "constexpr float"
	"!=" => Reduce #1 expression call char_constant "constexpr float"
	">=" => Reduce #1 expression call char_constant "constexpr float"
	"<=" => Reduce #1 expression call char_constant "constexpr float"
	'>' => Reduce #1 expression call char_constant "constexpr float"
	'<' => Reduce #1 expression call char_constant "constexpr float"
	"+=" => Reduce #1 expression call char_constant "constexpr float"
	"-=" => Reduce #1 expression call char_constant "constexpr float"
	"*=" => Reduce #1 expression call char_constant "constexpr float"
	"/=" => Reduce #1 expression call char_constant "constexpr float"
	"^=" => Reduce #1 expression call char_constant "constexpr float"
	"&=" => Reduce #1 expression call char_constant "constexpr float"
	"%=" => Reduce #1 expression call char_constant "constexpr float"
	"&&=" => Reduce #1 expression call char_constant "constexpr float"
	"||=" => Reduce #1 expression call char_constant "constexpr float"
	"|=" => Reduce #1 expression call char_constant "constexpr float"
	"<<=" => Reduce #1 expression call char_constant "constexpr float"
	">>=" => Reduce #1 expression call char_constant "constexpr float"
	'.' => Reduce #1 expression call char_constant "constexpr float"
[74]
	'(' => Reduce #1 expression call constant "constexpr uint"
	')' => Reduce #1 expression call constant "constexpr uint"
	';' => Reduce #1 expression call constant "constexpr uint"
	',' => Reduce #1 expression call constant "constexpr uint"
	'&' => Reduce #1 expression call constant "constexpr uint"
	'^' => Reduce #1 expression call constant "constexpr uint"
	'}' => Reduce #1 expression call constant "constexpr uint"
	"->" => Reduce #1 expression call constant "constexpr uint"
	'=' => Reduce #1 expression call constant "constexpr uint"
	'+' => Reduce #1 expression call constant "constexpr uint"
	'-' => Reduce #1 expression call constant "constexpr uint"
	'*' => Reduce #1 expression call constant "constexpr uint"
	'/' => Reduce #1 expression call constant "constexpr uint"
	'%' => Reduce #1 expression call constant "constexpr uint"
	"&&" => Reduce #1 expression call constant "constexpr uint"
	"||" => Reduce #1 expression call constant "constexpr uint"
	'|' => Reduce #1 expression call constant "constexpr uint"
	"<<" => Reduce #1 expression call constant "constexpr uint"
	">>" => Reduce #1 expression call constant "constexpr uint"
	'[' => Reduce #1 expression call constant "constexpr uint"
	']' => Reduce #1 expression call constant "constexpr uint"
	"==" => Reduce #1 expression call constant "constexpr uint"
	"!=" => Reduce #1 expression call constant "constexpr uint"
	">=" => Reduce #1 expression call constant "constexpr uint"
	"<=" => Reduce #1 expression call constant "constexpr uint"
	'>' => Reduce #1 expression call constant "constexpr uint"
	'<' => Reduce #1 expression call constant "constexpr uint"
	"+=" => Reduce #1 expression call constant "constexpr uint"
	"-=" => Reduce #1 expression call constant "constexpr uint"
	"*=" => Reduce #1 expression call constant "constexpr uint"
	"/=" => Reduce #1 expression call constant "constexpr uint"
	"^=" => Reduce #1 expression call constant "constexpr uint"
	"&=" => Reduce #1 expression call constant "constexpr uint"
	"%=" => Reduce #1 expression call constant "constexpr uint"
	"&&=" => Reduce #1 expression call constant "constexpr uint"
	"||=" => Reduce #1 expression call constant "constexpr uint"
	"|=" => Reduce #1 expression call constant "constexpr uint"
	"<<=" => Reduce #1 expression call constant "constexpr uint"
	">>=" => Reduce #1 expression call constant "constexpr uint"
	'.' => Reduce #1 expression call constant "constexpr uint"
[75]
	'(' => Reduce #1 expression call constant "constexpr int"
	')' => Reduce #1 expression call constant "constexpr int"
	';' => Reduce #1 expression call constant "constexpr int"
	',' => Reduce #1 expression call constant "constexpr int"
	'&' => Reduce #1 expression call constant "constexpr int"
	'^' => Reduce #1 expression call constant "constexpr int"
	'}' => Reduce #1 expression call constant "constexpr int"
	"->" => Reduce #1 expression call constant "constexpr int"
	'=' => Reduce #1 expression call constant "constexpr int"
	'+' => Reduce #1 expression call constant "constexpr int"
	'-' => Reduce #1 expression call constant "constexpr int"
	'*' => Reduce #1 expression call constant "constexpr int"
	'/' => Reduce #1 expression call constant "constexpr int"
	'%' => Reduce #1 expression call constant "constexpr int"
	"&&" => Reduce #1 expression call constant "constexpr int"
	"||" => Reduce #1 expression call constant "constexpr int"
	'|' => Reduce #1 expression call constant "constexpr int"
	"<<" => Reduce #1 expression call constant "constexpr int"
	">>" => Reduce #1 expression call constant "constexpr int"
	'[' => Reduce #1 expression call constant "constexpr int"
	']' => Reduce #1 expression call constant "constexpr int"
	"==" => Reduce #1 expression call constant "constexpr int"
	"!=" => Reduce #1 expression call constant "constexpr int"
	">=" => Reduce #1 expression call constant "constexpr int"
	"<=" => Reduce #1 expression call constant "constexpr int"
	'>' => Reduce #1 expression call constant "constexpr int"
	'<' => Reduce #1 expression call constant "constexpr int"
	"+=" => Reduce #1 expression call constant "constexpr int"
	"-=" => Reduce #1 expression call constant "constexpr int"
	"*=" => Reduce #1 expression call constant "constexpr int"
	"/=" => Reduce #1 expression call constant "constexpr int"
	"^=" => Reduce #1 expression call constant "constexpr int"
	"&=" => Reduce #1 expression call constant "constexpr int"
	"%=" => Reduce #1 expression call constant "constexpr int"
	"&&=" => Reduce #1 expression call constant "constexpr int"
	"||=" => Reduce #1 expression call constant "constexpr int"
	"|=" => Reduce #1 expression call constant "constexpr int"
	"<<=" => Reduce #1 expression call constant "constexpr int"
	">>=" => Reduce #1 expression call constant "constexpr int"
	'.' => Reduce #1 expression call constant "constexpr int"
[76]
	'(' => Reduce #1 expression call constant "constexpr float"
	')' => Reduce #1 expression call constant "constexpr float"
	';' => Reduce #1 expression call constant "constexpr float"
	',' => Reduce #1 expression call constant "constexpr float"
	'&' => Reduce #1 expression call constant "constexpr float"
	'^' => Reduce #1 expression call constant "constexpr float"
	'}' => Reduce #1 expression call constant "constexpr float"
	"->" => Reduce #1 expression call constant "constexpr float"
	'=' => Reduce #1 expression call constant "constexpr float"
	'+' => Reduce #1 expression call constant "constexpr float"
	'-' => Reduce #1 expression call constant "constexpr float"
	'*' => Reduce #1 expression call constant "constexpr float"
	'/' => Reduce #1 expression call constant "constexpr float"
	'%' => Reduce #1 expression call constant "constexpr float"
	"&&" => Reduce #1 expression call constant "constexpr float"
	"||" => Reduce #1 expression call constant "constexpr float"
	'|' => Reduce #1 expression call constant "constexpr float"
	"<<" => Reduce #1 expression call constant "constexpr float"
	">>" => Reduce #1 expression call constant "constexpr float"
	'[' => Reduce #1 expression call constant "constexpr float"
	']' => Reduce #1 expression call constant "constexpr float"
	"==" => Reduce #1 expression call constant "constexpr float"
	"!=" => Reduce #1 expression call constant "constexpr float"
	">=" => Reduce #1 expression call constant "constexpr float"
	"<=" => Reduce #1 expression call constant "constexpr float"
	'>' => Reduce #1 expression call constant "constexpr float"
	'<' => Reduce #1 expression call constant "constexpr float"
	"+=" => Reduce #1 expression call constant "constexpr float"
	"-=" => Reduce #1 expression call constant "constexpr float"
	"*=" => Reduce #1 expression call constant "constexpr float"
	"/=" => Reduce #1 expression call constant "constexpr float"
	"^=" => Reduce #1 expression call constant "constexpr float"
	"&=" => Reduce #1 expression call constant "constexpr float"
	"%=" => Reduce #1 expression call constant "constexpr float"
	"&&=" => Reduce #1 expression call constant "constexpr float"
	"||=" => Reduce #1 expression call constant "constexpr float"
	"|=" => Reduce #1 expression call constant "constexpr float"
	"<<=" => Reduce #1 expression call constant "constexpr float"
	">>=" => Reduce #1 expression call constant "constexpr float"
	'.' => Reduce #1 expression call constant "constexpr float"
[77]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 94
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"null" => Shift goto 91
[78]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 94
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"null" => Shift goto 91
[79]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	"function" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	'(' => Shift goto 77
	"procedure" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	'&' => Shift goto 78
	"typedef" => Shift goto 19
	'{' => Shift goto 79
	'}' => Shift goto 168
	"private" => Shift goto 23
	"public" => Shift goto 24
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"var" => Shift goto 85
	"return" => Shift goto 86
	"delete" => Shift goto 87
	"if" => Shift goto 88
	"while" => Shift goto 89
	"new" => Shift goto 90
	"null" => Shift goto 91
[80]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 94
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"null" => Shift goto 91
[81]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 94
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"null" => Shift goto 91
[82]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 94
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"null" => Shift goto 91
[83]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 94
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"null" => Shift goto 91
[84]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 94
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"null" => Shift goto 91
[85]
	IDENT => Shift goto 17
	"const" => Shift goto 18
[86]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 94
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"null" => Shift goto 91
[87]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 94
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"null" => Shift goto 91
[88]
	'(' => Shift goto 177
[89]
	'(' => Shift goto 178
[90]
	IDENT => Shift goto 17
	"const" => Shift goto 18
[91]
	'(' => Reduce #1 expression call null "constexpr float"
	')' => Reduce #1 expression call null "constexpr float"
	';' => Reduce #1 expression call null "constexpr float"
	',' => Reduce #1 expression call null "constexpr float"
	'&' => Reduce #1 expression call null "constexpr float"
	'^' => Reduce #1 expression call null "constexpr float"
	'}' => Reduce #1 expression call null "constexpr float"
	"->" => Reduce #1 expression call null "constexpr float"
	'=' => Reduce #1 expression call null "constexpr float"
	'+' => Reduce #1 expression call null "constexpr float"
	'-' => Reduce #1 expression call null "constexpr float"
	'*' => Reduce #1 expression call null "constexpr float"
	'/' => Reduce #1 expression call null "constexpr float"
	'%' => Reduce #1 expression call null "constexpr float"
	"&&" => Reduce #1 expression call null "constexpr float"
	"||" => Reduce #1 expression call null "constexpr float"
	'|' => Reduce #1 expression call null "constexpr float"
	"<<" => Reduce #1 expression call null "constexpr float"
	">>" => Reduce #1 expression call null "constexpr float"
	'[' => Reduce #1 expression call null "constexpr float"
	']' => Reduce #1 expression call null "constexpr float"
	"==" => Reduce #1 expression call null "constexpr float"
	"!=" => Reduce #1 expression call null "constexpr float"
	">=" => Reduce #1 expression call null "constexpr float"
	"<=" => Reduce #1 expression call null "constexpr float"
	'>' => Reduce #1 expression call null "constexpr float"
	'<' => Reduce #1 expression call null "constexpr float"
	"+=" => Reduce #1 expression call null "constexpr float"
	"-=" => Reduce #1 expression call null "constexpr float"
	"*=" => Reduce #1 expression call null "constexpr float"
	"/=" => Reduce #1 expression call null "constexpr float"
	"^=" => Reduce #1 expression call null "constexpr float"
	"&=" => Reduce #1 expression call null "constexpr float"
	"%=" => Reduce #1 expression call null "constexpr float"
	"&&=" => Reduce #1 expression call null "constexpr float"
	"||=" => Reduce #1 expression call null "constexpr float"
	"|=" => Reduce #1 expression call null "constexpr float"
	"<<=" => Reduce #1 expression call null "constexpr float"
	">>=" => Reduce #1 expression call null "constexpr float"
	'.' => Reduce #1 expression call null "constexpr float"
[92]
	IDENT => Reduce #4 typespec call typespec "^^&"
	'(' => Reduce #4 typespec call typespec "^^&"
	')' => Reduce #4 typespec call typespec "^^&"
	"..." => Reduce #4 typespec call typespec "^^&"
	',' => Reduce #4 typespec call typespec "^^&"
	':' => Reduce #4 typespec call typespec "^^&"
[93]
	'(' => Shift goto 127
	';' => Reduce #4 variabledefinition call vardef_assign
	'&' => Shift goto 129
	'^' => Shift goto 130
	"->" => Shift goto 131
	'=' => Shift goto 132
	'+' => Shift goto 133
	'-' => Shift goto 134
	'*' => Shift goto 135
	'/' => Shift goto 136
	'%' => Shift goto 137
	"&&" => Shift goto 138
	"||" => Shift goto 139
	'|' => Shift goto 140
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'[' => Shift goto 143
	"==" => Shift goto 144
	"!=" => Shift goto 145
	">=" => Shift goto 146
	"<=" => Shift goto 147
	'>' => Shift goto 148
	'<' => Shift goto 149
	"+=" => Shift goto 150
	"-=" => Shift goto 151
	"*=" => Shift goto 152
	"/=" => Shift goto 153
	"^=" => Shift goto 154
	"&=" => Shift goto 155
	"%=" => Shift goto 156
	"&&=" => Shift goto 157
	"||=" => Shift goto 158
	"|=" => Shift goto 159
	"<<=" => Shift goto 160
	">>=" => Shift goto 161
	'.' => Shift goto 162
[94]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 94
	'}' => Shift goto 168
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"null" => Shift goto 91
[95]
	'(' => Shift goto 127
	'&' => Shift goto 129
	'^' => Shift goto 130
	"->" => Shift goto 131
	'=' => Shift goto 132
	'+' => Shift goto 133
	'-' => Shift goto 134
	'*' => Shift goto 135
	'/' => Shift goto 136
	'%' => Shift goto 137
	"&&" => Shift goto 138
	"||" => Shift goto 139
	'|' => Shift goto 140
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'[' => Shift goto 143
	']' => Shift goto 181
	"==" => Shift goto 144
	"!=" => Shift goto 145
	">=" => Shift goto 146
	"<=" => Shift goto 147
	'>' => Shift goto 148
	'<' => Shift goto 149
	"+=" => Shift goto 150
	"-=" => Shift goto 151
	"*=" => Shift goto 152
	"/=" => Shift goto 153
	"^=" => Shift goto 154
	"&=" => Shift goto 155
	"%=" => Shift goto 156
	"&&=" => Shift goto 157
	"||=" => Shift goto 158
	"|=" => Shift goto 159
	"<<=" => Shift goto 160
	">>=" => Shift goto 161
	'.' => Shift goto 162
[96]
	'(' => Shift goto 98
[97]
	$ => Reduce #4 functiondefinition call procdef
	BOOLEAN => Reduce #4 functiondefinition call procdef
	IDENT => Reduce #4 functiondefinition call procdef
	DQSTRING => Reduce #4 functiondefinition call procdef
	SQSTRING => Reduce #4 functiondefinition call procdef
	CARDINAL => Reduce #4 functiondefinition call procdef
	INTEGER => Reduce #4 functiondefinition call procdef
	FLOAT => Reduce #4 functiondefinition call procdef
	"function" => Reduce #4 functiondefinition call procdef
	'(' => Reduce #4 functiondefinition call procdef
	"procedure" => Reduce #4 functiondefinition call procdef
	"const" => Reduce #4 functiondefinition call procdef
	'&' => Reduce #4 functiondefinition call procdef
	"typedef" => Reduce #4 functiondefinition call procdef
	"struct" => Reduce #4 functiondefinition call procdef
	'{' => Reduce #4 functiondefinition call procdef
	'}' => Reduce #4 functiondefinition call procdef
	"interface" => Reduce #4 functiondefinition call procdef
	"class" => Reduce #4 functiondefinition call procdef
	"private" => Reduce #4 functiondefinition call procdef
	"public" => Reduce #4 functiondefinition call procdef
	"constructor" => Reduce #4 functiondefinition call procdef
	"destructor" => Reduce #4 functiondefinition call procdef
	"operator" => Reduce #4 functiondefinition call procdef
	'+' => Reduce #4 functiondefinition call procdef
	'-' => Reduce #4 functiondefinition call procdef
	'*' => Reduce #4 functiondefinition call procdef
	'~' => Reduce #4 functiondefinition call procdef
	'!' => Reduce #4 functiondefinition call procdef
	"main" => Reduce #4 functiondefinition call procdef
	"var" => Reduce #4 functiondefinition call procdef
	"return" => Reduce #4 functiondefinition call procdef
	"delete" => Reduce #4 functiondefinition call procdef
	"if" => Reduce #4 functiondefinition call procdef
	"while" => Reduce #4 functiondefinition call procdef
	"new" => Reduce #4 functiondefinition call procdef
	"null" => Reduce #4 functiondefinition call procdef
[98]
	IDENT => Shift goto 17
	')' => Reduce #0 parameterlist call paramdeflist
	"const" => Shift goto 18
[99]
	IDENT => Reduce #4 typespec call typespec "const^&"
	'(' => Reduce #4 typespec call typespec "const^&"
	')' => Reduce #4 typespec call typespec "const^&"
	"..." => Reduce #4 typespec call typespec "const^&"
	',' => Reduce #4 typespec call typespec "const^&"
	':' => Reduce #4 typespec call typespec "const^&"
[100]
	IDENT => Reduce #4 typespec call typespec "const^^"
	'(' => Reduce #4 typespec call typespec "const^^"
	')' => Reduce #4 typespec call typespec "const^^"
	"..." => Reduce #4 typespec call typespec "const^^"
	',' => Reduce #4 typespec call typespec "const^^"
	'&' => Shift goto 187
	':' => Reduce #4 typespec call typespec "const^^"
[101]
	'}' => Shift goto 188
[102]
	IDENT => Shift goto 17
	"const" => Shift goto 18
	"typedef" => Shift goto 19
	"struct" => Shift goto 20
	'}' => Reduce #0 struct_definitionlist
[103]
	'}' => Shift goto 190
[104]
	"function" => Shift goto 105
	"procedure" => Shift goto 106
	'}' => Reduce #0 interface_definitionlist
[105]
	IDENT => Shift goto 17
	"const" => Shift goto 18
[106]
	IDENT => Shift goto 193
[107]
	'}' => Shift goto 194
[108]
	IDENT => Shift goto 17
	"function" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	"procedure" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	"const" => Shift goto 18
	"typedef" => Shift goto 19
	"struct" => Shift goto 20
	'}' => Reduce #0 class_definitionlist
	"interface" => Shift goto 21
	"class" => Shift goto 22
	"private" => Shift goto 23
	"public" => Shift goto 24
	"constructor" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	"destructor" => Shift goto 118
	"operator" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
[109]
	';' => Shift goto 196
[110]
	$ => Reduce #1 class_definition call definition 1
	IDENT => Reduce #1 class_definition call definition 1
	"function" => Reduce #1 class_definition call definition 1
	"procedure" => Reduce #1 class_definition call definition 1
	"const" => Reduce #1 class_definition call definition 1
	"typedef" => Reduce #1 class_definition call definition 1
	"struct" => Reduce #1 class_definition call definition 1
	'}' => Reduce #1 class_definition call definition 1
	"interface" => Reduce #1 class_definition call definition 1
	"class" => Reduce #1 class_definition call definition 1
	"private" => Reduce #1 class_definition call definition 1
	"public" => Reduce #1 class_definition call definition 1
	"constructor" => Reduce #1 class_definition call definition 1
	"destructor" => Reduce #1 class_definition call definition 1
	"operator" => Reduce #1 class_definition call definition 1
[111]
	$ => Reduce #1 class_definition call definition 1
	IDENT => Reduce #1 class_definition call definition 1
	"function" => Reduce #1 class_definition call definition 1
	"procedure" => Reduce #1 class_definition call definition 1
	"const" => Reduce #1 class_definition call definition 1
	"typedef" => Reduce #1 class_definition call definition 1
	"struct" => Reduce #1 class_definition call definition 1
	'}' => Reduce #1 class_definition call definition 1
	"interface" => Reduce #1 class_definition call definition 1
	"class" => Reduce #1 class_definition call definition 1
	"private" => Reduce #1 class_definition call definition 1
	"public" => Reduce #1 class_definition call definition 1
	"constructor" => Reduce #1 class_definition call definition 1
	"destructor" => Reduce #1 class_definition call definition 1
	"operator" => Reduce #1 class_definition call definition 1
[112]
	$ => Reduce #1 class_definition call definition 1
	IDENT => Reduce #1 class_definition call definition 1
	"function" => Reduce #1 class_definition call definition 1
	"procedure" => Reduce #1 class_definition call definition 1
	"const" => Reduce #1 class_definition call definition 1
	"typedef" => Reduce #1 class_definition call definition 1
	"struct" => Reduce #1 class_definition call definition 1
	'}' => Reduce #1 class_definition call definition 1
	"interface" => Reduce #1 class_definition call definition 1
	"class" => Reduce #1 class_definition call definition 1
	"private" => Reduce #1 class_definition call definition 1
	"public" => Reduce #1 class_definition call definition 1
	"constructor" => Reduce #1 class_definition call definition 1
	"destructor" => Reduce #1 class_definition call definition 1
	"operator" => Reduce #1 class_definition call definition 1
[113]
	"function" => Shift goto 34
	"procedure" => Shift goto 35
	"constructor" => Shift goto 197
	"operator" => Shift goto 198
[114]
	$ => Reduce #1 class_definition call definition 2
	IDENT => Reduce #1 class_definition call definition 2
	"function" => Reduce #1 class_definition call definition 2
	"procedure" => Reduce #1 class_definition call definition 2
	"const" => Reduce #1 class_definition call definition 2
	"typedef" => Reduce #1 class_definition call definition 2
	"struct" => Reduce #1 class_definition call definition 2
	'}' => Reduce #1 class_definition call definition 2
	"interface" => Reduce #1 class_definition call definition 2
	"class" => Reduce #1 class_definition call definition 2
	"private" => Reduce #1 class_definition call definition 2
	"public" => Reduce #1 class_definition call definition 2
	"constructor" => Reduce #1 class_definition call definition 2
	"destructor" => Reduce #1 class_definition call definition 2
	"operator" => Reduce #1 class_definition call definition 2
[115]
	$ => Reduce #1 class_definition call definition 2
	IDENT => Reduce #1 class_definition call definition 2
	"function" => Reduce #1 class_definition call definition 2
	"procedure" => Reduce #1 class_definition call definition 2
	"const" => Reduce #1 class_definition call definition 2
	"typedef" => Reduce #1 class_definition call definition 2
	"struct" => Reduce #1 class_definition call definition 2
	'}' => Reduce #1 class_definition call definition 2
	"interface" => Reduce #1 class_definition call definition 2
	"class" => Reduce #1 class_definition call definition 2
	"private" => Reduce #1 class_definition call definition 2
	"public" => Reduce #1 class_definition call definition 2
	"constructor" => Reduce #1 class_definition call definition 2
	"destructor" => Reduce #1 class_definition call definition 2
	"operator" => Reduce #1 class_definition call definition 2
[116]
	$ => Reduce #1 class_definition call definition 2
	IDENT => Reduce #1 class_definition call definition 2
	"function" => Reduce #1 class_definition call definition 2
	"procedure" => Reduce #1 class_definition call definition 2
	"const" => Reduce #1 class_definition call definition 2
	"typedef" => Reduce #1 class_definition call definition 2
	"struct" => Reduce #1 class_definition call definition 2
	'}' => Reduce #1 class_definition call definition 2
	"interface" => Reduce #1 class_definition call definition 2
	"class" => Reduce #1 class_definition call definition 2
	"private" => Reduce #1 class_definition call definition 2
	"public" => Reduce #1 class_definition call definition 2
	"constructor" => Reduce #1 class_definition call definition 2
	"destructor" => Reduce #1 class_definition call definition 2
	"operator" => Reduce #1 class_definition call definition 2
[117]
	';' => Shift goto 199
[118]
	'{' => Shift goto 200
[119]
	',' => Shift goto 201
	'{' => Reduce #1 inheritlist call inheritdef 1
[120]
	'{' => Shift goto 202
[121]
	'(' => Shift goto 203
[122]
	IDENT => Shift goto 17
	')' => Reduce #0 extern_paramlist call extern_paramdeflist
	"..." => Reduce #0 extern_paramlist call extern_paramdeflist
	"const" => Shift goto 18
[123]
	$ => Reduce #2 statement call definition
	BOOLEAN => Reduce #2 statement call definition
	IDENT => Reduce #2 statement call definition
	DQSTRING => Reduce #2 statement call definition
	SQSTRING => Reduce #2 statement call definition
	CARDINAL => Reduce #2 statement call definition
	INTEGER => Reduce #2 statement call definition
	FLOAT => Reduce #2 statement call definition
	"function" => Reduce #2 statement call definition
	'(' => Reduce #2 statement call definition
	"procedure" => Reduce #2 statement call definition
	'&' => Reduce #2 statement call definition
	"typedef" => Reduce #2 statement call definition
	'{' => Reduce #2 statement call definition
	'}' => Reduce #2 statement call definition
	"private" => Reduce #2 statement call definition
	"public" => Reduce #2 statement call definition
	'+' => Reduce #2 statement call definition
	'-' => Reduce #2 statement call definition
	'*' => Reduce #2 statement call definition
	'~' => Reduce #2 statement call definition
	'!' => Reduce #2 statement call definition
	"var" => Reduce #2 statement call definition
	"return" => Reduce #2 statement call definition
	"delete" => Reduce #2 statement call definition
	"if" => Reduce #2 statement call definition
	"while" => Reduce #2 statement call definition
	"new" => Reduce #2 statement call definition
	"null" => Reduce #2 statement call definition
[124]
	$ => Reduce #4 main_procedure call main_procdef
[125]
	'}' => Reduce #2 statementlist
[126]
	IDENT => Shift goto 207
[127]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	')' => Shift goto 209
	'&' => Shift goto 78
	'{' => Shift goto 94
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"null" => Shift goto 91
[128]
	$ => Reduce #2 statement call free_expression
	BOOLEAN => Reduce #2 statement call free_expression
	IDENT => Reduce #2 statement call free_expression
	DQSTRING => Reduce #2 statement call free_expression
	SQSTRING => Reduce #2 statement call free_expression
	CARDINAL => Reduce #2 statement call free_expression
	INTEGER => Reduce #2 statement call free_expression
	FLOAT => Reduce #2 statement call free_expression
	"function" => Reduce #2 statement call free_expression
	'(' => Reduce #2 statement call free_expression
	"procedure" => Reduce #2 statement call free_expression
	'&' => Reduce #2 statement call free_expression
	"typedef" => Reduce #2 statement call free_expression
	'{' => Reduce #2 statement call free_expression
	'}' => Reduce #2 statement call free_expression
	"private" => Reduce #2 statement call free_expression
	"public" => Reduce #2 statement call free_expression
	'+' => Reduce #2 statement call free_expression
	'-' => Reduce #2 statement call free_expression
	'*' => Reduce #2 statement call free_expression
	'~' => Reduce #2 statement call free_expression
	'!' => Reduce #2 statement call free_expression
	"var" => Reduce #2 statement call free_expression
	"return" => Reduce #2 statement call free_expression
	"delete" => Reduce #2 statement call free_expression
	"if" => Reduce #2 statement call free_expression
	"while" => Reduce #2 statement call free_expression
	"new" => Reduce #2 statement call free_expression
	"null" => Reduce #2 statement call free_expression
[129]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 94
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"null" => Shift goto 91
[130]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 94
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"null" => Shift goto 91
[131]
	IDENT => Reduce #1 indirection call count
	"->" => Shift goto 131
[132]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 94
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"null" => Shift goto 91
[133]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 94
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"null" => Shift goto 91
[134]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 94
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"null" => Shift goto 91
[135]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 94
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"null" => Shift goto 91
[136]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 94
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"null" => Shift goto 91
[137]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 94
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"null" => Shift goto 91
[138]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 94
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"null" => Shift goto 91
[139]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 94
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"null" => Shift goto 91
[140]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 94
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"null" => Shift goto 91
[141]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 94
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"null" => Shift goto 91
[142]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 94
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"null" => Shift goto 91
[143]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 94
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"null" => Shift goto 91
[144]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 94
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"null" => Shift goto 91
[145]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 94
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"null" => Shift goto 91
[146]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 94
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"null" => Shift goto 91
[147]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 94
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"null" => Shift goto 91
[148]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 94
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"null" => Shift goto 91
[149]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 94
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"null" => Shift goto 91
[150]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 94
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"null" => Shift goto 91
[151]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 94
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"null" => Shift goto 91
[152]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 94
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"null" => Shift goto 91
[153]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 94
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"null" => Shift goto 91
[154]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 94
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"null" => Shift goto 91
[155]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 94
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"null" => Shift goto 91
[156]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 94
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"null" => Shift goto 91
[157]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 94
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"null" => Shift goto 91
[158]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 94
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"null" => Shift goto 91
[159]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 94
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"null" => Shift goto 91
[160]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 94
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"null" => Shift goto 91
[161]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 94
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"null" => Shift goto 91
[162]
	IDENT => Shift goto 243
[163]
	'(' => Shift goto 127
	')' => Shift goto 244
	'&' => Shift goto 129
	'^' => Shift goto 130
	"->" => Shift goto 131
	'=' => Shift goto 132
	'+' => Shift goto 133
	'-' => Shift goto 134
	'*' => Shift goto 135
	'/' => Shift goto 136
	'%' => Shift goto 137
	"&&" => Shift goto 138
	"||" => Shift goto 139
	'|' => Shift goto 140
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'[' => Shift goto 143
	"==" => Shift goto 144
	"!=" => Shift goto 145
	">=" => Shift goto 146
	"<=" => Shift goto 147
	'>' => Shift goto 148
	'<' => Shift goto 149
	"+=" => Shift goto 150
	"-=" => Shift goto 151
	"*=" => Shift goto 152
	"/=" => Shift goto 153
	"^=" => Shift goto 154
	"&=" => Shift goto 155
	"%=" => Shift goto 156
	"&&=" => Shift goto 157
	"||=" => Shift goto 158
	"|=" => Shift goto 159
	"<<=" => Shift goto 160
	">>=" => Shift goto 161
	'.' => Shift goto 162
[164]
	'(' => Shift goto 127
	')' => Reduce #2 expression call operator "&"
	';' => Reduce #2 expression call operator "&"
	',' => Reduce #2 expression call operator "&"
	'&' => Reduce #2 expression call operator "&"
	'^' => Reduce #2 expression call operator "&"
	'}' => Reduce #2 expression call operator "&"
	"->" => Reduce #2 expression call operator "&"
	'=' => Reduce #2 expression call operator "&"
	'+' => Reduce #2 expression call operator "&"
	'-' => Reduce #2 expression call operator "&"
	'*' => Shift goto 135
	'/' => Shift goto 136
	'%' => Shift goto 137
	"&&" => Reduce #2 expression call operator "&"
	"||" => Reduce #2 expression call operator "&"
	'|' => Reduce #2 expression call operator "&"
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'[' => Shift goto 143
	']' => Reduce #2 expression call operator "&"
	"==" => Reduce #2 expression call operator "&"
	"!=" => Reduce #2 expression call operator "&"
	">=" => Reduce #2 expression call operator "&"
	"<=" => Reduce #2 expression call operator "&"
	'>' => Reduce #2 expression call operator "&"
	'<' => Reduce #2 expression call operator "&"
	"+=" => Reduce #2 expression call operator "&"
	"-=" => Reduce #2 expression call operator "&"
	"*=" => Reduce #2 expression call operator "&"
	"/=" => Reduce #2 expression call operator "&"
	"^=" => Reduce #2 expression call operator "&"
	"&=" => Reduce #2 expression call operator "&"
	"%=" => Reduce #2 expression call operator "&"
	"&&=" => Reduce #2 expression call operator "&"
	"||=" => Reduce #2 expression call operator "&"
	"|=" => Reduce #2 expression call operator "&"
	"<<=" => Reduce #2 expression call operator "&"
	">>=" => Reduce #2 expression call operator "&"
	'.' => Shift goto 162
[165]
	'}' => Shift goto 245
[166]
	'(' => Shift goto 127
	';' => Shift goto 128
	',' => Shift goto 246
	'&' => Shift goto 129
	'^' => Shift goto 130
	'}' => Reduce #1 expressionlist
	"->" => Shift goto 131
	'=' => Shift goto 132
	'+' => Shift goto 133
	'-' => Shift goto 134
	'*' => Shift goto 135
	'/' => Shift goto 136
	'%' => Shift goto 137
	"&&" => Shift goto 138
	"||" => Shift goto 139
	'|' => Shift goto 140
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'[' => Shift goto 143
	"==" => Shift goto 144
	"!=" => Shift goto 145
	">=" => Shift goto 146
	"<=" => Shift goto 147
	'>' => Shift goto 148
	'<' => Shift goto 149
	"+=" => Shift goto 150
	"-=" => Shift goto 151
	"*=" => Shift goto 152
	"/=" => Shift goto 153
	"^=" => Shift goto 154
	"&=" => Shift goto 155
	"%=" => Shift goto 156
	"&&=" => Shift goto 157
	"||=" => Shift goto 158
	"|=" => Shift goto 159
	"<<=" => Shift goto 160
	">>=" => Shift goto 161
	'.' => Shift goto 162
[167]
	'}' => Shift goto 247
[168]
	'(' => Reduce #2 expression call structure
	')' => Reduce #2 expression call structure
	';' => Reduce #2 expression call structure
	',' => Reduce #2 expression call structure
	'&' => Reduce #2 expression call structure
	'^' => Reduce #2 expression call structure
	'}' => Reduce #2 expression call structure
	"->" => Reduce #2 expression call structure
	'=' => Reduce #2 expression call structure
	'+' => Reduce #2 expression call structure
	'-' => Reduce #2 expression call structure
	'*' => Reduce #2 expression call structure
	'/' => Reduce #2 expression call structure
	'%' => Reduce #2 expression call structure
	"&&" => Reduce #2 expression call structure
	"||" => Reduce #2 expression call structure
	'|' => Reduce #2 expression call structure
	"<<" => Reduce #2 expression call structure
	">>" => Reduce #2 expression call structure
	'[' => Reduce #2 expression call structure
	']' => Reduce #2 expression call structure
	"==" => Reduce #2 expression call structure
	"!=" => Reduce #2 expression call structure
	">=" => Reduce #2 expression call structure
	"<=" => Reduce #2 expression call structure
	'>' => Reduce #2 expression call structure
	'<' => Reduce #2 expression call structure
	"+=" => Reduce #2 expression call structure
	"-=" => Reduce #2 expression call structure
	"*=" => Reduce #2 expression call structure
	"/=" => Reduce #2 expression call structure
	"^=" => Reduce #2 expression call structure
	"&=" => Reduce #2 expression call structure
	"%=" => Reduce #2 expression call structure
	"&&=" => Reduce #2 expression call structure
	"||=" => Reduce #2 expression call structure
	"|=" => Reduce #2 expression call structure
	"<<=" => Reduce #2 expression call structure
	">>=" => Reduce #2 expression call structure
	'.' => Reduce #2 expression call structure
[169]
	'(' => Shift goto 127
	')' => Reduce #2 expression call operator "+"
	';' => Reduce #2 expression call operator "+"
	',' => Reduce #2 expression call operator "+"
	'&' => Reduce #2 expression call operator "+"
	'^' => Reduce #2 expression call operator "+"
	'}' => Reduce #2 expression call operator "+"
	"->" => Reduce #2 expression call operator "+"
	'=' => Reduce #2 expression call operator "+"
	'+' => Reduce #2 expression call operator "+"
	'-' => Reduce #2 expression call operator "+"
	'*' => Shift goto 135
	'/' => Shift goto 136
	'%' => Shift goto 137
	"&&" => Reduce #2 expression call operator "+"
	"||" => Reduce #2 expression call operator "+"
	'|' => Reduce #2 expression call operator "+"
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'[' => Shift goto 143
	']' => Reduce #2 expression call operator "+"
	"==" => Reduce #2 expression call operator "+"
	"!=" => Reduce #2 expression call operator "+"
	">=" => Reduce #2 expression call operator "+"
	"<=" => Reduce #2 expression call operator "+"
	'>' => Reduce #2 expression call operator "+"
	'<' => Reduce #2 expression call operator "+"
	"+=" => Reduce #2 expression call operator "+"
	"-=" => Reduce #2 expression call operator "+"
	"*=" => Reduce #2 expression call operator "+"
	"/=" => Reduce #2 expression call operator "+"
	"^=" => Reduce #2 expression call operator "+"
	"&=" => Reduce #2 expression call operator "+"
	"%=" => Reduce #2 expression call operator "+"
	"&&=" => Reduce #2 expression call operator "+"
	"||=" => Reduce #2 expression call operator "+"
	"|=" => Reduce #2 expression call operator "+"
	"<<=" => Reduce #2 expression call operator "+"
	">>=" => Reduce #2 expression call operator "+"
	'.' => Shift goto 162
[170]
	'(' => Shift goto 127
	')' => Reduce #2 expression call operator "-"
	';' => Reduce #2 expression call operator "-"
	',' => Reduce #2 expression call operator "-"
	'&' => Reduce #2 expression call operator "-"
	'^' => Reduce #2 expression call operator "-"
	'}' => Reduce #2 expression call operator "-"
	"->" => Reduce #2 expression call operator "-"
	'=' => Reduce #2 expression call operator "-"
	'+' => Reduce #2 expression call operator "-"
	'-' => Reduce #2 expression call operator "-"
	'*' => Shift goto 135
	'/' => Shift goto 136
	'%' => Shift goto 137
	"&&" => Reduce #2 expression call operator "-"
	"||" => Reduce #2 expression call operator "-"
	'|' => Reduce #2 expression call operator "-"
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'[' => Shift goto 143
	']' => Reduce #2 expression call operator "-"
	"==" => Reduce #2 expression call operator "-"
	"!=" => Reduce #2 expression call operator "-"
	">=" => Reduce #2 expression call operator "-"
	"<=" => Reduce #2 expression call operator "-"
	'>' => Reduce #2 expression call operator "-"
	'<' => Reduce #2 expression call operator "-"
	"+=" => Reduce #2 expression call operator "-"
	"-=" => Reduce #2 expression call operator "-"
	"*=" => Reduce #2 expression call operator "-"
	"/=" => Reduce #2 expression call operator "-"
	"^=" => Reduce #2 expression call operator "-"
	"&=" => Reduce #2 expression call operator "-"
	"%=" => Reduce #2 expression call operator "-"
	"&&=" => Reduce #2 expression call operator "-"
	"||=" => Reduce #2 expression call operator "-"
	"|=" => Reduce #2 expression call operator "-"
	"<<=" => Reduce #2 expression call operator "-"
	">>=" => Reduce #2 expression call operator "-"
	'.' => Shift goto 162
[171]
	'(' => Shift goto 127
	')' => Reduce #2 expression call operator "->"
	';' => Reduce #2 expression call operator "->"
	',' => Reduce #2 expression call operator "->"
	'&' => Reduce #2 expression call operator "->"
	'^' => Reduce #2 expression call operator "->"
	'}' => Reduce #2 expression call operator "->"
	"->" => Reduce #2 expression call operator "->"
	'=' => Reduce #2 expression call operator "->"
	'+' => Reduce #2 expression call operator "->"
	'-' => Reduce #2 expression call operator "->"
	'*' => Reduce #2 expression call operator "->"
	'/' => Reduce #2 expression call operator "->"
	'%' => Reduce #2 expression call operator "->"
	"&&" => Reduce #2 expression call operator "->"
	"||" => Reduce #2 expression call operator "->"
	'|' => Reduce #2 expression call operator "->"
	"<<" => Reduce #2 expression call operator "->"
	">>" => Reduce #2 expression call operator "->"
	'[' => Shift goto 143
	']' => Reduce #2 expression call operator "->"
	"==" => Reduce #2 expression call operator "->"
	"!=" => Reduce #2 expression call operator "->"
	">=" => Reduce #2 expression call operator "->"
	"<=" => Reduce #2 expression call operator "->"
	'>' => Reduce #2 expression call operator "->"
	'<' => Reduce #2 expression call operator "->"
	"+=" => Reduce #2 expression call operator "->"
	"-=" => Reduce #2 expression call operator "->"
	"*=" => Reduce #2 expression call operator "->"
	"/=" => Reduce #2 expression call operator "->"
	"^=" => Reduce #2 expression call operator "->"
	"&=" => Reduce #2 expression call operator "->"
	"%=" => Reduce #2 expression call operator "->"
	"&&=" => Reduce #2 expression call operator "->"
	"||=" => Reduce #2 expression call operator "->"
	"|=" => Reduce #2 expression call operator "->"
	"<<=" => Reduce #2 expression call operator "->"
	">>=" => Reduce #2 expression call operator "->"
	'.' => Reduce #2 expression call operator "->"
[172]
	'(' => Shift goto 127
	')' => Reduce #2 expression call operator "~"
	';' => Reduce #2 expression call operator "~"
	',' => Reduce #2 expression call operator "~"
	'&' => Reduce #2 expression call operator "~"
	'^' => Reduce #2 expression call operator "~"
	'}' => Reduce #2 expression call operator "~"
	"->" => Reduce #2 expression call operator "~"
	'=' => Reduce #2 expression call operator "~"
	'+' => Reduce #2 expression call operator "~"
	'-' => Reduce #2 expression call operator "~"
	'*' => Shift goto 135
	'/' => Shift goto 136
	'%' => Shift goto 137
	"&&" => Reduce #2 expression call operator "~"
	"||" => Reduce #2 expression call operator "~"
	'|' => Reduce #2 expression call operator "~"
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'[' => Shift goto 143
	']' => Reduce #2 expression call operator "~"
	"==" => Reduce #2 expression call operator "~"
	"!=" => Reduce #2 expression call operator "~"
	">=" => Reduce #2 expression call operator "~"
	"<=" => Reduce #2 expression call operator "~"
	'>' => Reduce #2 expression call operator "~"
	'<' => Reduce #2 expression call operator "~"
	"+=" => Reduce #2 expression call operator "~"
	"-=" => Reduce #2 expression call operator "~"
	"*=" => Reduce #2 expression call operator "~"
	"/=" => Reduce #2 expression call operator "~"
	"^=" => Reduce #2 expression call operator "~"
	"&=" => Reduce #2 expression call operator "~"
	"%=" => Reduce #2 expression call operator "~"
	"&&=" => Reduce #2 expression call operator "~"
	"||=" => Reduce #2 expression call operator "~"
	"|=" => Reduce #2 expression call operator "~"
	"<<=" => Reduce #2 expression call operator "~"
	">>=" => Reduce #2 expression call operator "~"
	'.' => Shift goto 162
[173]
	'(' => Shift goto 127
	')' => Reduce #2 expression call operator "!"
	';' => Reduce #2 expression call operator "!"
	',' => Reduce #2 expression call operator "!"
	'&' => Reduce #2 expression call operator "!"
	'^' => Reduce #2 expression call operator "!"
	'}' => Reduce #2 expression call operator "!"
	"->" => Reduce #2 expression call operator "!"
	'=' => Reduce #2 expression call operator "!"
	'+' => Reduce #2 expression call operator "!"
	'-' => Reduce #2 expression call operator "!"
	'*' => Shift goto 135
	'/' => Shift goto 136
	'%' => Shift goto 137
	"&&" => Reduce #2 expression call operator "!"
	"||" => Reduce #2 expression call operator "!"
	'|' => Reduce #2 expression call operator "!"
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'[' => Shift goto 143
	']' => Reduce #2 expression call operator "!"
	"==" => Reduce #2 expression call operator "!"
	"!=" => Reduce #2 expression call operator "!"
	">=" => Reduce #2 expression call operator "!"
	"<=" => Reduce #2 expression call operator "!"
	'>' => Reduce #2 expression call operator "!"
	'<' => Reduce #2 expression call operator "!"
	"+=" => Reduce #2 expression call operator "!"
	"-=" => Reduce #2 expression call operator "!"
	"*=" => Reduce #2 expression call operator "!"
	"/=" => Reduce #2 expression call operator "!"
	"^=" => Reduce #2 expression call operator "!"
	"&=" => Reduce #2 expression call operator "!"
	"%=" => Reduce #2 expression call operator "!"
	"&&=" => Reduce #2 expression call operator "!"
	"||=" => Reduce #2 expression call operator "!"
	"|=" => Reduce #2 expression call operator "!"
	"<<=" => Reduce #2 expression call operator "!"
	">>=" => Reduce #2 expression call operator "!"
	'.' => Shift goto 162
[174]
	';' => Shift goto 248
[175]
	'(' => Shift goto 127
	';' => Shift goto 249
	'&' => Shift goto 129
	'^' => Shift goto 130
	"->" => Shift goto 131
	'=' => Shift goto 132
	'+' => Shift goto 133
	'-' => Shift goto 134
	'*' => Shift goto 135
	'/' => Shift goto 136
	'%' => Shift goto 137
	"&&" => Shift goto 138
	"||" => Shift goto 139
	'|' => Shift goto 140
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'[' => Shift goto 143
	"==" => Shift goto 144
	"!=" => Shift goto 145
	">=" => Shift goto 146
	"<=" => Shift goto 147
	'>' => Shift goto 148
	'<' => Shift goto 149
	"+=" => Shift goto 150
	"-=" => Shift goto 151
	"*=" => Shift goto 152
	"/=" => Shift goto 153
	"^=" => Shift goto 154
	"&=" => Shift goto 155
	"%=" => Shift goto 156
	"&&=" => Shift goto 157
	"||=" => Shift goto 158
	"|=" => Shift goto 159
	"<<=" => Shift goto 160
	">>=" => Shift goto 161
	'.' => Shift goto 162
[176]
	'(' => Shift goto 127
	';' => Shift goto 250
	'&' => Shift goto 129
	'^' => Shift goto 130
	"->" => Shift goto 131
	'=' => Shift goto 132
	'+' => Shift goto 133
	'-' => Shift goto 134
	'*' => Shift goto 135
	'/' => Shift goto 136
	'%' => Shift goto 137
	"&&" => Shift goto 138
	"||" => Shift goto 139
	'|' => Shift goto 140
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'[' => Shift goto 143
	"==" => Shift goto 144
	"!=" => Shift goto 145
	">=" => Shift goto 146
	"<=" => Shift goto 147
	'>' => Shift goto 148
	'<' => Shift goto 149
	"+=" => Shift goto 150
	"-=" => Shift goto 151
	"*=" => Shift goto 152
	"/=" => Shift goto 153
	"^=" => Shift goto 154
	"&=" => Shift goto 155
	"%=" => Shift goto 156
	"&&=" => Shift goto 157
	"||=" => Shift goto 158
	"|=" => Shift goto 159
	"<<=" => Shift goto 160
	">>=" => Shift goto 161
	'.' => Shift goto 162
[177]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 94
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"null" => Shift goto 91
[178]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 94
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"null" => Shift goto 91
[179]
	':' => Shift goto 253
[180]
	'(' => Shift goto 127
	')' => Reduce #1 expressionlist
	',' => Shift goto 246
	'&' => Shift goto 129
	'^' => Shift goto 130
	'}' => Reduce #1 expressionlist
	"->" => Shift goto 131
	'=' => Shift goto 132
	'+' => Shift goto 133
	'-' => Shift goto 134
	'*' => Shift goto 135
	'/' => Shift goto 136
	'%' => Shift goto 137
	"&&" => Shift goto 138
	"||" => Shift goto 139
	'|' => Shift goto 140
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'[' => Shift goto 143
	']' => Reduce #1 expressionlist
	"==" => Shift goto 144
	"!=" => Shift goto 145
	">=" => Shift goto 146
	"<=" => Shift goto 147
	'>' => Shift goto 148
	'<' => Shift goto 149
	"+=" => Shift goto 150
	"-=" => Shift goto 151
	"*=" => Shift goto 152
	"/=" => Shift goto 153
	"^=" => Shift goto 154
	"&=" => Shift goto 155
	"%=" => Shift goto 156
	"&&=" => Shift goto 157
	"||=" => Shift goto 158
	"|=" => Shift goto 159
	"<<=" => Shift goto 160
	">>=" => Shift goto 161
	'.' => Shift goto 162
[181]
	';' => Reduce #5 variabledefinition call vardef_array
	'=' => Shift goto 254
[182]
	$ => Reduce #5 functiondefinition call funcdef
	BOOLEAN => Reduce #5 functiondefinition call funcdef
	IDENT => Reduce #5 functiondefinition call funcdef
	DQSTRING => Reduce #5 functiondefinition call funcdef
	SQSTRING => Reduce #5 functiondefinition call funcdef
	CARDINAL => Reduce #5 functiondefinition call funcdef
	INTEGER => Reduce #5 functiondefinition call funcdef
	FLOAT => Reduce #5 functiondefinition call funcdef
	"function" => Reduce #5 functiondefinition call funcdef
	'(' => Reduce #5 functiondefinition call funcdef
	"procedure" => Reduce #5 functiondefinition call funcdef
	"const" => Reduce #5 functiondefinition call funcdef
	'&' => Reduce #5 functiondefinition call funcdef
	"typedef" => Reduce #5 functiondefinition call funcdef
	"struct" => Reduce #5 functiondefinition call funcdef
	'{' => Reduce #5 functiondefinition call funcdef
	'}' => Reduce #5 functiondefinition call funcdef
	"interface" => Reduce #5 functiondefinition call funcdef
	"class" => Reduce #5 functiondefinition call funcdef
	"private" => Reduce #5 functiondefinition call funcdef
	"public" => Reduce #5 functiondefinition call funcdef
	"constructor" => Reduce #5 functiondefinition call funcdef
	"destructor" => Reduce #5 functiondefinition call funcdef
	"operator" => Reduce #5 functiondefinition call funcdef
	'+' => Reduce #5 functiondefinition call funcdef
	'-' => Reduce #5 functiondefinition call funcdef
	'*' => Reduce #5 functiondefinition call funcdef
	'~' => Reduce #5 functiondefinition call funcdef
	'!' => Reduce #5 functiondefinition call funcdef
	"main" => Reduce #5 functiondefinition call funcdef
	"var" => Reduce #5 functiondefinition call funcdef
	"return" => Reduce #5 functiondefinition call funcdef
	"delete" => Reduce #5 functiondefinition call funcdef
	"if" => Reduce #5 functiondefinition call funcdef
	"while" => Reduce #5 functiondefinition call funcdef
	"new" => Reduce #5 functiondefinition call funcdef
	"null" => Reduce #5 functiondefinition call funcdef
[183]
	IDENT => Shift goto 255
[184]
	')' => Shift goto 256
[185]
	')' => Reduce #1 parameterlist call paramdeflist
[186]
	')' => Reduce #1 parameters
	',' => Shift goto 257
[187]
	IDENT => Reduce #5 typespec call typespec "const^^&"
	'(' => Reduce #5 typespec call typespec "const^^&"
	')' => Reduce #5 typespec call typespec "const^^&"
	"..." => Reduce #5 typespec call typespec "const^^&"
	',' => Reduce #5 typespec call typespec "const^^&"
	':' => Reduce #5 typespec call typespec "const^^&"
[188]
	$ => Reduce #5 structdefinition call structdef
	IDENT => Reduce #5 structdefinition call structdef
	"function" => Reduce #5 structdefinition call structdef
	"procedure" => Reduce #5 structdefinition call structdef
	"const" => Reduce #5 structdefinition call structdef
	"typedef" => Reduce #5 structdefinition call structdef
	"struct" => Reduce #5 structdefinition call structdef
	'}' => Reduce #5 structdefinition call structdef
	"interface" => Reduce #5 structdefinition call structdef
	"class" => Reduce #5 structdefinition call structdef
	"private" => Reduce #5 structdefinition call structdef
	"public" => Reduce #5 structdefinition call structdef
	"constructor" => Reduce #5 structdefinition call structdef
	"destructor" => Reduce #5 structdefinition call structdef
	"operator" => Reduce #5 structdefinition call structdef
	"main" => Reduce #5 structdefinition call structdef
[189]
	'}' => Reduce #2 struct_definitionlist
[190]
	$ => Reduce #5 interfacedefinition call interfacedef
	IDENT => Reduce #5 interfacedefinition call interfacedef
	"function" => Reduce #5 interfacedefinition call interfacedef
	"procedure" => Reduce #5 interfacedefinition call interfacedef
	"const" => Reduce #5 interfacedefinition call interfacedef
	"typedef" => Reduce #5 interfacedefinition call interfacedef
	"struct" => Reduce #5 interfacedefinition call interfacedef
	'}' => Reduce #5 interfacedefinition call interfacedef
	"interface" => Reduce #5 interfacedefinition call interfacedef
	"class" => Reduce #5 interfacedefinition call interfacedef
	"private" => Reduce #5 interfacedefinition call interfacedef
	"public" => Reduce #5 interfacedefinition call interfacedef
	"constructor" => Reduce #5 interfacedefinition call interfacedef
	"destructor" => Reduce #5 interfacedefinition call interfacedef
	"operator" => Reduce #5 interfacedefinition call interfacedef
	"main" => Reduce #5 interfacedefinition call interfacedef
[191]
	'}' => Reduce #2 interface_definitionlist
[192]
	IDENT => Shift goto 258
[193]
	'(' => Shift goto 259
[194]
	$ => Reduce #5 classdefinition call classdef
	IDENT => Reduce #5 classdefinition call classdef
	"function" => Reduce #5 classdefinition call classdef
	"procedure" => Reduce #5 classdefinition call classdef
	"const" => Reduce #5 classdefinition call classdef
	"typedef" => Reduce #5 classdefinition call classdef
	"struct" => Reduce #5 classdefinition call classdef
	'}' => Reduce #5 classdefinition call classdef
	"interface" => Reduce #5 classdefinition call classdef
	"class" => Reduce #5 classdefinition call classdef
	"private" => Reduce #5 classdefinition call classdef
	"public" => Reduce #5 classdefinition call classdef
	"constructor" => Reduce #5 classdefinition call classdef
	"destructor" => Reduce #5 classdefinition call classdef
	"operator" => Reduce #5 classdefinition call classdef
	"main" => Reduce #5 classdefinition call classdef
[195]
	'}' => Reduce #2 class_definitionlist
[196]
	$ => Reduce #2 class_definition call definition 1
	IDENT => Reduce #2 class_definition call definition 1
	"function" => Reduce #2 class_definition call definition 1
	"procedure" => Reduce #2 class_definition call definition 1
	"const" => Reduce #2 class_definition call definition 1
	"typedef" => Reduce #2 class_definition call definition 1
	"struct" => Reduce #2 class_definition call definition 1
	'}' => Reduce #2 class_definition call definition 1
	"interface" => Reduce #2 class_definition call definition 1
	"class" => Reduce #2 class_definition call definition 1
	"private" => Reduce #2 class_definition call definition 1
	"public" => Reduce #2 class_definition call definition 1
	"constructor" => Reduce #2 class_definition call definition 1
	"destructor" => Reduce #2 class_definition call definition 1
	"operator" => Reduce #2 class_definition call definition 1
[197]
	'(' => Shift goto 98
[198]
	'(' => Shift goto 261
	'&' => Shift goto 262
	"->" => Shift goto 263
	'=' => Shift goto 264
	'+' => Shift goto 265
	'-' => Shift goto 266
	'*' => Shift goto 267
	'/' => Shift goto 268
	'%' => Shift goto 269
	"&&" => Shift goto 270
	"||" => Shift goto 271
	'|' => Shift goto 272
	"<<" => Shift goto 273
	">>" => Shift goto 274
	'~' => Shift goto 275
	'!' => Shift goto 276
	'[' => Shift goto 277
	"==" => Shift goto 278
	"!=" => Shift goto 279
	">=" => Shift goto 280
	"<=" => Shift goto 281
	'>' => Shift goto 282
	'<' => Shift goto 283
[199]
	$ => Reduce #2 class_definition call definition 1
	IDENT => Reduce #2 class_definition call definition 1
	"function" => Reduce #2 class_definition call definition 1
	"procedure" => Reduce #2 class_definition call definition 1
	"const" => Reduce #2 class_definition call definition 1
	"typedef" => Reduce #2 class_definition call definition 1
	"struct" => Reduce #2 class_definition call definition 1
	'}' => Reduce #2 class_definition call definition 1
	"interface" => Reduce #2 class_definition call definition 1
	"class" => Reduce #2 class_definition call definition 1
	"private" => Reduce #2 class_definition call definition 1
	"public" => Reduce #2 class_definition call definition 1
	"constructor" => Reduce #2 class_definition call definition 1
	"destructor" => Reduce #2 class_definition call definition 1
	"operator" => Reduce #2 class_definition call definition 1
[200]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	"function" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	'(' => Shift goto 77
	"procedure" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	'&' => Shift goto 78
	"typedef" => Shift goto 19
	'{' => Shift goto 79
	'}' => Reduce #0 statementlist
	"private" => Shift goto 23
	"public" => Shift goto 24
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"var" => Shift goto 85
	"return" => Shift goto 86
	"delete" => Shift goto 87
	"if" => Shift goto 88
	"while" => Shift goto 89
	"new" => Shift goto 90
	"null" => Shift goto 91
[201]
	IDENT => Shift goto 17
[202]
	IDENT => Shift goto 17
	"function" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	"procedure" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	"const" => Shift goto 18
	"typedef" => Shift goto 19
	"struct" => Shift goto 20
	'}' => Reduce #0 class_definitionlist
	"interface" => Shift goto 21
	"class" => Shift goto 22
	"private" => Shift goto 23
	"public" => Shift goto 24
	"constructor" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	"destructor" => Shift goto 118
	"operator" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
[203]
	IDENT => Shift goto 17
	')' => Reduce #0 extern_paramlist call extern_paramdeflist
	"..." => Reduce #0 extern_paramlist call extern_paramdeflist
	"const" => Shift goto 18
[204]
	')' => Reduce #1 extern_paramlist call extern_paramdeflist
	"..." => Reduce #1 extern_paramlist call extern_paramdeflist
[205]
	')' => Shift goto 288
	"..." => Shift goto 289
[206]
	')' => Reduce #1 extern_parameters
	"..." => Reduce #1 extern_parameters
	',' => Shift goto 290
[207]
	'(' => Reduce #3 iexpression call rep_operator "->"
	')' => Reduce #3 iexpression call rep_operator "->"
	';' => Reduce #3 iexpression call rep_operator "->"
	',' => Reduce #3 iexpression call rep_operator "->"
	'&' => Reduce #3 iexpression call rep_operator "->"
	'^' => Reduce #3 iexpression call rep_operator "->"
	'}' => Reduce #3 iexpression call rep_operator "->"
	"->" => Reduce #3 iexpression call rep_operator "->"
	'=' => Reduce #3 iexpression call rep_operator "->"
	'+' => Reduce #3 iexpression call rep_operator "->"
	'-' => Reduce #3 iexpression call rep_operator "->"
	'*' => Reduce #3 iexpression call rep_operator "->"
	'/' => Reduce #3 iexpression call rep_operator "->"
	'%' => Reduce #3 iexpression call rep_operator "->"
	"&&" => Reduce #3 iexpression call rep_operator "->"
	"||" => Reduce #3 iexpression call rep_operator "->"
	'|' => Reduce #3 iexpression call rep_operator "->"
	"<<" => Reduce #3 iexpression call rep_operator "->"
	">>" => Reduce #3 iexpression call rep_operator "->"
	'[' => Reduce #3 iexpression call rep_operator "->"
	']' => Reduce #3 iexpression call rep_operator "->"
	"==" => Reduce #3 iexpression call rep_operator "->"
	"!=" => Reduce #3 iexpression call rep_operator "->"
	">=" => Reduce #3 iexpression call rep_operator "->"
	"<=" => Reduce #3 iexpression call rep_operator "->"
	'>' => Reduce #3 iexpression call rep_operator "->"
	'<' => Reduce #3 iexpression call rep_operator "->"
	"+=" => Reduce #3 iexpression call rep_operator "->"
	"-=" => Reduce #3 iexpression call rep_operator "->"
	"*=" => Reduce #3 iexpression call rep_operator "->"
	"/=" => Reduce #3 iexpression call rep_operator "->"
	"^=" => Reduce #3 iexpression call rep_operator "->"
	"&=" => Reduce #3 iexpression call rep_operator "->"
	"%=" => Reduce #3 iexpression call rep_operator "->"
	"&&=" => Reduce #3 iexpression call rep_operator "->"
	"||=" => Reduce #3 iexpression call rep_operator "->"
	"|=" => Reduce #3 iexpression call rep_operator "->"
	"<<=" => Reduce #3 iexpression call rep_operator "->"
	">>=" => Reduce #3 iexpression call rep_operator "->"
	'.' => Reduce #3 iexpression call rep_operator "->"
[208]
	')' => Shift goto 291
[209]
	'(' => Reduce #3 expression call operator "()"
	')' => Reduce #3 expression call operator "()"
	';' => Reduce #3 expression call operator "()"
	',' => Reduce #3 expression call operator "()"
	'&' => Reduce #3 expression call operator "()"
	'^' => Reduce #3 expression call operator "()"
	'}' => Reduce #3 expression call operator "()"
	"->" => Reduce #3 expression call operator "()"
	'=' => Reduce #3 expression call operator "()"
	'+' => Reduce #3 expression call operator "()"
	'-' => Reduce #3 expression call operator "()"
	'*' => Reduce #3 expression call operator "()"
	'/' => Reduce #3 expression call operator "()"
	'%' => Reduce #3 expression call operator "()"
	"&&" => Reduce #3 expression call operator "()"
	"||" => Reduce #3 expression call operator "()"
	'|' => Reduce #3 expression call operator "()"
	"<<" => Reduce #3 expression call operator "()"
	">>" => Reduce #3 expression call operator "()"
	'[' => Reduce #3 expression call operator "()"
	']' => Reduce #3 expression call operator "()"
	"==" => Reduce #3 expression call operator "()"
	"!=" => Reduce #3 expression call operator "()"
	">=" => Reduce #3 expression call operator "()"
	"<=" => Reduce #3 expression call operator "()"
	'>' => Reduce #3 expression call operator "()"
	'<' => Reduce #3 expression call operator "()"
	"+=" => Reduce #3 expression call operator "()"
	"-=" => Reduce #3 expression call operator "()"
	"*=" => Reduce #3 expression call operator "()"
	"/=" => Reduce #3 expression call operator "()"
	"^=" => Reduce #3 expression call operator "()"
	"&=" => Reduce #3 expression call operator "()"
	"%=" => Reduce #3 expression call operator "()"
	"&&=" => Reduce #3 expression call operator "()"
	"||=" => Reduce #3 expression call operator "()"
	"|=" => Reduce #3 expression call operator "()"
	"<<=" => Reduce #3 expression call operator "()"
	">>=" => Reduce #3 expression call operator "()"
	'.' => Reduce #3 expression call operator "()"
[210]
	'(' => Shift goto 127
	')' => Reduce #3 expression call operator "&"
	';' => Reduce #3 expression call operator "&"
	',' => Reduce #3 expression call operator "&"
	'&' => Reduce #3 expression call operator "&"
	'^' => Reduce #3 expression call operator "&"
	'}' => Reduce #3 expression call operator "&"
	"->" => Reduce #3 expression call operator "&"
	'=' => Reduce #3 expression call operator "&"
	'+' => Shift goto 133
	'-' => Shift goto 134
	'*' => Shift goto 135
	'/' => Shift goto 136
	'%' => Shift goto 137
	"&&" => Reduce #3 expression call operator "&"
	"||" => Reduce #3 expression call operator "&"
	'|' => Reduce #3 expression call operator "&"
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'[' => Shift goto 143
	']' => Reduce #3 expression call operator "&"
	"==" => Shift goto 144
	"!=" => Shift goto 145
	">=" => Shift goto 146
	"<=" => Shift goto 147
	'>' => Shift goto 148
	'<' => Shift goto 149
	"+=" => Reduce #3 expression call operator "&"
	"-=" => Reduce #3 expression call operator "&"
	"*=" => Reduce #3 expression call operator "&"
	"/=" => Reduce #3 expression call operator "&"
	"^=" => Reduce #3 expression call operator "&"
	"&=" => Reduce #3 expression call operator "&"
	"%=" => Reduce #3 expression call operator "&"
	"&&=" => Reduce #3 expression call operator "&"
	"||=" => Reduce #3 expression call operator "&"
	"|=" => Reduce #3 expression call operator "&"
	"<<=" => Reduce #3 expression call operator "&"
	">>=" => Reduce #3 expression call operator "&"
	'.' => Shift goto 162
[211]
	'(' => Shift goto 127
	')' => Reduce #3 expression call operator "^"
	';' => Reduce #3 expression call operator "^"
	',' => Reduce #3 expression call operator "^"
	'&' => Reduce #3 expression call operator "^"
	'^' => Reduce #3 expression call operator "^"
	'}' => Reduce #3 expression call operator "^"
	"->" => Reduce #3 expression call operator "^"
	'=' => Reduce #3 expression call operator "^"
	'+' => Shift goto 133
	'-' => Shift goto 134
	'*' => Shift goto 135
	'/' => Shift goto 136
	'%' => Shift goto 137
	"&&" => Reduce #3 expression call operator "^"
	"||" => Reduce #3 expression call operator "^"
	'|' => Reduce #3 expression call operator "^"
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'[' => Shift goto 143
	']' => Reduce #3 expression call operator "^"
	"==" => Shift goto 144
	"!=" => Shift goto 145
	">=" => Shift goto 146
	"<=" => Shift goto 147
	'>' => Shift goto 148
	'<' => Shift goto 149
	"+=" => Reduce #3 expression call operator "^"
	"-=" => Reduce #3 expression call operator "^"
	"*=" => Reduce #3 expression call operator "^"
	"/=" => Reduce #3 expression call operator "^"
	"^=" => Reduce #3 expression call operator "^"
	"&=" => Reduce #3 expression call operator "^"
	"%=" => Reduce #3 expression call operator "^"
	"&&=" => Reduce #3 expression call operator "^"
	"||=" => Reduce #3 expression call operator "^"
	"|=" => Reduce #3 expression call operator "^"
	"<<=" => Reduce #3 expression call operator "^"
	">>=" => Reduce #3 expression call operator "^"
	'.' => Shift goto 162
[212]
	IDENT => Reduce #2 indirection call count
[213]
	'(' => Shift goto 127
	')' => Reduce #3 expression call operator "="
	';' => Reduce #3 expression call operator "="
	',' => Reduce #3 expression call operator "="
	'&' => Shift goto 129
	'^' => Shift goto 130
	'}' => Reduce #3 expression call operator "="
	"->" => Reduce #3 expression call operator "="
	'=' => Reduce #3 expression call operator "="
	'+' => Shift goto 133
	'-' => Shift goto 134
	'*' => Shift goto 135
	'/' => Shift goto 136
	'%' => Shift goto 137
	"&&" => Shift goto 138
	"||" => Shift goto 139
	'|' => Shift goto 140
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'[' => Shift goto 143
	']' => Reduce #3 expression call operator "="
	"==" => Shift goto 144
	"!=" => Shift goto 145
	">=" => Shift goto 146
	"<=" => Shift goto 147
	'>' => Shift goto 148
	'<' => Shift goto 149
	"+=" => Reduce #3 expression call operator "="
	"-=" => Reduce #3 expression call operator "="
	"*=" => Reduce #3 expression call operator "="
	"/=" => Reduce #3 expression call operator "="
	"^=" => Reduce #3 expression call operator "="
	"&=" => Reduce #3 expression call operator "="
	"%=" => Reduce #3 expression call operator "="
	"&&=" => Reduce #3 expression call operator "="
	"||=" => Reduce #3 expression call operator "="
	"|=" => Reduce #3 expression call operator "="
	"<<=" => Reduce #3 expression call operator "="
	">>=" => Reduce #3 expression call operator "="
	'.' => Shift goto 162
[214]
	'(' => Shift goto 127
	')' => Reduce #3 expression call operator "+"
	';' => Reduce #3 expression call operator "+"
	',' => Reduce #3 expression call operator "+"
	'&' => Reduce #3 expression call operator "+"
	'^' => Reduce #3 expression call operator "+"
	'}' => Reduce #3 expression call operator "+"
	"->" => Reduce #3 expression call operator "+"
	'=' => Reduce #3 expression call operator "+"
	'+' => Reduce #3 expression call operator "+"
	'-' => Reduce #3 expression call operator "+"
	'*' => Shift goto 135
	'/' => Shift goto 136
	'%' => Shift goto 137
	"&&" => Reduce #3 expression call operator "+"
	"||" => Reduce #3 expression call operator "+"
	'|' => Reduce #3 expression call operator "+"
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'[' => Shift goto 143
	']' => Reduce #3 expression call operator "+"
	"==" => Reduce #3 expression call operator "+"
	"!=" => Reduce #3 expression call operator "+"
	">=" => Reduce #3 expression call operator "+"
	"<=" => Reduce #3 expression call operator "+"
	'>' => Reduce #3 expression call operator "+"
	'<' => Reduce #3 expression call operator "+"
	"+=" => Reduce #3 expression call operator "+"
	"-=" => Reduce #3 expression call operator "+"
	"*=" => Reduce #3 expression call operator "+"
	"/=" => Reduce #3 expression call operator "+"
	"^=" => Reduce #3 expression call operator "+"
	"&=" => Reduce #3 expression call operator "+"
	"%=" => Reduce #3 expression call operator "+"
	"&&=" => Reduce #3 expression call operator "+"
	"||=" => Reduce #3 expression call operator "+"
	"|=" => Reduce #3 expression call operator "+"
	"<<=" => Reduce #3 expression call operator "+"
	">>=" => Reduce #3 expression call operator "+"
	'.' => Shift goto 162
[215]
	'(' => Shift goto 127
	')' => Reduce #3 expression call operator "-"
	';' => Reduce #3 expression call operator "-"
	',' => Reduce #3 expression call operator "-"
	'&' => Reduce #3 expression call operator "-"
	'^' => Reduce #3 expression call operator "-"
	'}' => Reduce #3 expression call operator "-"
	"->" => Reduce #3 expression call operator "-"
	'=' => Reduce #3 expression call operator "-"
	'+' => Reduce #3 expression call operator "-"
	'-' => Reduce #3 expression call operator "-"
	'*' => Shift goto 135
	'/' => Shift goto 136
	'%' => Shift goto 137
	"&&" => Reduce #3 expression call operator "-"
	"||" => Reduce #3 expression call operator "-"
	'|' => Reduce #3 expression call operator "-"
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'[' => Shift goto 143
	']' => Reduce #3 expression call operator "-"
	"==" => Reduce #3 expression call operator "-"
	"!=" => Reduce #3 expression call operator "-"
	">=" => Reduce #3 expression call operator "-"
	"<=" => Reduce #3 expression call operator "-"
	'>' => Reduce #3 expression call operator "-"
	'<' => Reduce #3 expression call operator "-"
	"+=" => Reduce #3 expression call operator "-"
	"-=" => Reduce #3 expression call operator "-"
	"*=" => Reduce #3 expression call operator "-"
	"/=" => Reduce #3 expression call operator "-"
	"^=" => Reduce #3 expression call operator "-"
	"&=" => Reduce #3 expression call operator "-"
	"%=" => Reduce #3 expression call operator "-"
	"&&=" => Reduce #3 expression call operator "-"
	"||=" => Reduce #3 expression call operator "-"
	"|=" => Reduce #3 expression call operator "-"
	"<<=" => Reduce #3 expression call operator "-"
	">>=" => Reduce #3 expression call operator "-"
	'.' => Shift goto 162
[216]
	'(' => Shift goto 127
	')' => Reduce #3 expression call operator "*"
	';' => Reduce #3 expression call operator "*"
	',' => Reduce #3 expression call operator "*"
	'&' => Reduce #3 expression call operator "*"
	'^' => Reduce #3 expression call operator "*"
	'}' => Reduce #3 expression call operator "*"
	"->" => Reduce #3 expression call operator "*"
	'=' => Reduce #3 expression call operator "*"
	'+' => Reduce #3 expression call operator "*"
	'-' => Reduce #3 expression call operator "*"
	'*' => Reduce #3 expression call operator "*"
	'/' => Reduce #3 expression call operator "*"
	'%' => Reduce #3 expression call operator "*"
	"&&" => Reduce #3 expression call operator "*"
	"||" => Reduce #3 expression call operator "*"
	'|' => Reduce #3 expression call operator "*"
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'[' => Shift goto 143
	']' => Reduce #3 expression call operator "*"
	"==" => Reduce #3 expression call operator "*"
	"!=" => Reduce #3 expression call operator "*"
	">=" => Reduce #3 expression call operator "*"
	"<=" => Reduce #3 expression call operator "*"
	'>' => Reduce #3 expression call operator "*"
	'<' => Reduce #3 expression call operator "*"
	"+=" => Reduce #3 expression call operator "*"
	"-=" => Reduce #3 expression call operator "*"
	"*=" => Reduce #3 expression call operator "*"
	"/=" => Reduce #3 expression call operator "*"
	"^=" => Reduce #3 expression call operator "*"
	"&=" => Reduce #3 expression call operator "*"
	"%=" => Reduce #3 expression call operator "*"
	"&&=" => Reduce #3 expression call operator "*"
	"||=" => Reduce #3 expression call operator "*"
	"|=" => Reduce #3 expression call operator "*"
	"<<=" => Reduce #3 expression call operator "*"
	">>=" => Reduce #3 expression call operator "*"
	'.' => Shift goto 162
[217]
	'(' => Shift goto 127
	')' => Reduce #3 expression call operator "/"
	';' => Reduce #3 expression call operator "/"
	',' => Reduce #3 expression call operator "/"
	'&' => Reduce #3 expression call operator "/"
	'^' => Reduce #3 expression call operator "/"
	'}' => Reduce #3 expression call operator "/"
	"->" => Reduce #3 expression call operator "/"
	'=' => Reduce #3 expression call operator "/"
	'+' => Reduce #3 expression call operator "/"
	'-' => Reduce #3 expression call operator "/"
	'*' => Reduce #3 expression call operator "/"
	'/' => Reduce #3 expression call operator "/"
	'%' => Reduce #3 expression call operator "/"
	"&&" => Reduce #3 expression call operator "/"
	"||" => Reduce #3 expression call operator "/"
	'|' => Reduce #3 expression call operator "/"
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'[' => Shift goto 143
	']' => Reduce #3 expression call operator "/"
	"==" => Reduce #3 expression call operator "/"
	"!=" => Reduce #3 expression call operator "/"
	">=" => Reduce #3 expression call operator "/"
	"<=" => Reduce #3 expression call operator "/"
	'>' => Reduce #3 expression call operator "/"
	'<' => Reduce #3 expression call operator "/"
	"+=" => Reduce #3 expression call operator "/"
	"-=" => Reduce #3 expression call operator "/"
	"*=" => Reduce #3 expression call operator "/"
	"/=" => Reduce #3 expression call operator "/"
	"^=" => Reduce #3 expression call operator "/"
	"&=" => Reduce #3 expression call operator "/"
	"%=" => Reduce #3 expression call operator "/"
	"&&=" => Reduce #3 expression call operator "/"
	"||=" => Reduce #3 expression call operator "/"
	"|=" => Reduce #3 expression call operator "/"
	"<<=" => Reduce #3 expression call operator "/"
	">>=" => Reduce #3 expression call operator "/"
	'.' => Shift goto 162
[218]
	'(' => Shift goto 127
	')' => Reduce #3 expression call operator "%"
	';' => Reduce #3 expression call operator "%"
	',' => Reduce #3 expression call operator "%"
	'&' => Reduce #3 expression call operator "%"
	'^' => Reduce #3 expression call operator "%"
	'}' => Reduce #3 expression call operator "%"
	"->" => Reduce #3 expression call operator "%"
	'=' => Reduce #3 expression call operator "%"
	'+' => Reduce #3 expression call operator "%"
	'-' => Reduce #3 expression call operator "%"
	'*' => Reduce #3 expression call operator "%"
	'/' => Reduce #3 expression call operator "%"
	'%' => Reduce #3 expression call operator "%"
	"&&" => Reduce #3 expression call operator "%"
	"||" => Reduce #3 expression call operator "%"
	'|' => Reduce #3 expression call operator "%"
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'[' => Shift goto 143
	']' => Reduce #3 expression call operator "%"
	"==" => Reduce #3 expression call operator "%"
	"!=" => Reduce #3 expression call operator "%"
	">=" => Reduce #3 expression call operator "%"
	"<=" => Reduce #3 expression call operator "%"
	'>' => Reduce #3 expression call operator "%"
	'<' => Reduce #3 expression call operator "%"
	"+=" => Reduce #3 expression call operator "%"
	"-=" => Reduce #3 expression call operator "%"
	"*=" => Reduce #3 expression call operator "%"
	"/=" => Reduce #3 expression call operator "%"
	"^=" => Reduce #3 expression call operator "%"
	"&=" => Reduce #3 expression call operator "%"
	"%=" => Reduce #3 expression call operator "%"
	"&&=" => Reduce #3 expression call operator "%"
	"||=" => Reduce #3 expression call operator "%"
	"|=" => Reduce #3 expression call operator "%"
	"<<=" => Reduce #3 expression call operator "%"
	">>=" => Reduce #3 expression call operator "%"
	'.' => Shift goto 162
[219]
	'(' => Shift goto 127
	')' => Reduce #3 expression call operator "&&"
	';' => Reduce #3 expression call operator "&&"
	',' => Reduce #3 expression call operator "&&"
	'&' => Shift goto 129
	'^' => Shift goto 130
	'}' => Reduce #3 expression call operator "&&"
	"->" => Reduce #3 expression call operator "&&"
	'=' => Reduce #3 expression call operator "&&"
	'+' => Shift goto 133
	'-' => Shift goto 134
	'*' => Shift goto 135
	'/' => Shift goto 136
	'%' => Shift goto 137
	"&&" => Reduce #3 expression call operator "&&"
	"||" => Reduce #3 expression call operator "&&"
	'|' => Shift goto 140
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'[' => Shift goto 143
	']' => Reduce #3 expression call operator "&&"
	"==" => Shift goto 144
	"!=" => Shift goto 145
	">=" => Shift goto 146
	"<=" => Shift goto 147
	'>' => Shift goto 148
	'<' => Shift goto 149
	"+=" => Reduce #3 expression call operator "&&"
	"-=" => Reduce #3 expression call operator "&&"
	"*=" => Reduce #3 expression call operator "&&"
	"/=" => Reduce #3 expression call operator "&&"
	"^=" => Reduce #3 expression call operator "&&"
	"&=" => Reduce #3 expression call operator "&&"
	"%=" => Reduce #3 expression call operator "&&"
	"&&=" => Reduce #3 expression call operator "&&"
	"||=" => Reduce #3 expression call operator "&&"
	"|=" => Reduce #3 expression call operator "&&"
	"<<=" => Reduce #3 expression call operator "&&"
	">>=" => Reduce #3 expression call operator "&&"
	'.' => Shift goto 162
[220]
	'(' => Shift goto 127
	')' => Reduce #3 expression call operator "||"
	';' => Reduce #3 expression call operator "||"
	',' => Reduce #3 expression call operator "||"
	'&' => Shift goto 129
	'^' => Shift goto 130
	'}' => Reduce #3 expression call operator "||"
	"->" => Reduce #3 expression call operator "||"
	'=' => Reduce #3 expression call operator "||"
	'+' => Shift goto 133
	'-' => Shift goto 134
	'*' => Shift goto 135
	'/' => Shift goto 136
	'%' => Shift goto 137
	"&&" => Shift goto 138
	"||" => Reduce #3 expression call operator "||"
	'|' => Shift goto 140
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'[' => Shift goto 143
	']' => Reduce #3 expression call operator "||"
	"==" => Shift goto 144
	"!=" => Shift goto 145
	">=" => Shift goto 146
	"<=" => Shift goto 147
	'>' => Shift goto 148
	'<' => Shift goto 149
	"+=" => Reduce #3 expression call operator "||"
	"-=" => Reduce #3 expression call operator "||"
	"*=" => Reduce #3 expression call operator "||"
	"/=" => Reduce #3 expression call operator "||"
	"^=" => Reduce #3 expression call operator "||"
	"&=" => Reduce #3 expression call operator "||"
	"%=" => Reduce #3 expression call operator "||"
	"&&=" => Reduce #3 expression call operator "||"
	"||=" => Reduce #3 expression call operator "||"
	"|=" => Reduce #3 expression call operator "||"
	"<<=" => Reduce #3 expression call operator "||"
	">>=" => Reduce #3 expression call operator "||"
	'.' => Shift goto 162
[221]
	'(' => Shift goto 127
	')' => Reduce #3 expression call operator "|"
	';' => Reduce #3 expression call operator "|"
	',' => Reduce #3 expression call operator "|"
	'&' => Shift goto 129
	'^' => Shift goto 130
	'}' => Reduce #3 expression call operator "|"
	"->" => Reduce #3 expression call operator "|"
	'=' => Reduce #3 expression call operator "|"
	'+' => Shift goto 133
	'-' => Shift goto 134
	'*' => Shift goto 135
	'/' => Shift goto 136
	'%' => Shift goto 137
	"&&" => Reduce #3 expression call operator "|"
	"||" => Reduce #3 expression call operator "|"
	'|' => Reduce #3 expression call operator "|"
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'[' => Shift goto 143
	']' => Reduce #3 expression call operator "|"
	"==" => Shift goto 144
	"!=" => Shift goto 145
	">=" => Shift goto 146
	"<=" => Shift goto 147
	'>' => Shift goto 148
	'<' => Shift goto 149
	"+=" => Reduce #3 expression call operator "|"
	"-=" => Reduce #3 expression call operator "|"
	"*=" => Reduce #3 expression call operator "|"
	"/=" => Reduce #3 expression call operator "|"
	"^=" => Reduce #3 expression call operator "|"
	"&=" => Reduce #3 expression call operator "|"
	"%=" => Reduce #3 expression call operator "|"
	"&&=" => Reduce #3 expression call operator "|"
	"||=" => Reduce #3 expression call operator "|"
	"|=" => Reduce #3 expression call operator "|"
	"<<=" => Reduce #3 expression call operator "|"
	">>=" => Reduce #3 expression call operator "|"
	'.' => Shift goto 162
[222]
	'(' => Shift goto 127
	')' => Reduce #3 expression call operator "<<"
	';' => Reduce #3 expression call operator "<<"
	',' => Reduce #3 expression call operator "<<"
	'&' => Reduce #3 expression call operator "<<"
	'^' => Reduce #3 expression call operator "<<"
	'}' => Reduce #3 expression call operator "<<"
	"->" => Reduce #3 expression call operator "<<"
	'=' => Reduce #3 expression call operator "<<"
	'+' => Reduce #3 expression call operator "<<"
	'-' => Reduce #3 expression call operator "<<"
	'*' => Reduce #3 expression call operator "<<"
	'/' => Reduce #3 expression call operator "<<"
	'%' => Reduce #3 expression call operator "<<"
	"&&" => Reduce #3 expression call operator "<<"
	"||" => Reduce #3 expression call operator "<<"
	'|' => Reduce #3 expression call operator "<<"
	"<<" => Reduce #3 expression call operator "<<"
	">>" => Reduce #3 expression call operator "<<"
	'[' => Shift goto 143
	']' => Reduce #3 expression call operator "<<"
	"==" => Reduce #3 expression call operator "<<"
	"!=" => Reduce #3 expression call operator "<<"
	">=" => Reduce #3 expression call operator "<<"
	"<=" => Reduce #3 expression call operator "<<"
	'>' => Reduce #3 expression call operator "<<"
	'<' => Reduce #3 expression call operator "<<"
	"+=" => Reduce #3 expression call operator "<<"
	"-=" => Reduce #3 expression call operator "<<"
	"*=" => Reduce #3 expression call operator "<<"
	"/=" => Reduce #3 expression call operator "<<"
	"^=" => Reduce #3 expression call operator "<<"
	"&=" => Reduce #3 expression call operator "<<"
	"%=" => Reduce #3 expression call operator "<<"
	"&&=" => Reduce #3 expression call operator "<<"
	"||=" => Reduce #3 expression call operator "<<"
	"|=" => Reduce #3 expression call operator "<<"
	"<<=" => Reduce #3 expression call operator "<<"
	">>=" => Reduce #3 expression call operator "<<"
	'.' => Shift goto 162
[223]
	'(' => Shift goto 127
	')' => Reduce #3 expression call operator ">>"
	';' => Reduce #3 expression call operator ">>"
	',' => Reduce #3 expression call operator ">>"
	'&' => Reduce #3 expression call operator ">>"
	'^' => Reduce #3 expression call operator ">>"
	'}' => Reduce #3 expression call operator ">>"
	"->" => Reduce #3 expression call operator ">>"
	'=' => Reduce #3 expression call operator ">>"
	'+' => Reduce #3 expression call operator ">>"
	'-' => Reduce #3 expression call operator ">>"
	'*' => Reduce #3 expression call operator ">>"
	'/' => Reduce #3 expression call operator ">>"
	'%' => Reduce #3 expression call operator ">>"
	"&&" => Reduce #3 expression call operator ">>"
	"||" => Reduce #3 expression call operator ">>"
	'|' => Reduce #3 expression call operator ">>"
	"<<" => Reduce #3 expression call operator ">>"
	">>" => Reduce #3 expression call operator ">>"
	'[' => Shift goto 143
	']' => Reduce #3 expression call operator ">>"
	"==" => Reduce #3 expression call operator ">>"
	"!=" => Reduce #3 expression call operator ">>"
	">=" => Reduce #3 expression call operator ">>"
	"<=" => Reduce #3 expression call operator ">>"
	'>' => Reduce #3 expression call operator ">>"
	'<' => Reduce #3 expression call operator ">>"
	"+=" => Reduce #3 expression call operator ">>"
	"-=" => Reduce #3 expression call operator ">>"
	"*=" => Reduce #3 expression call operator ">>"
	"/=" => Reduce #3 expression call operator ">>"
	"^=" => Reduce #3 expression call operator ">>"
	"&=" => Reduce #3 expression call operator ">>"
	"%=" => Reduce #3 expression call operator ">>"
	"&&=" => Reduce #3 expression call operator ">>"
	"||=" => Reduce #3 expression call operator ">>"
	"|=" => Reduce #3 expression call operator ">>"
	"<<=" => Reduce #3 expression call operator ">>"
	">>=" => Reduce #3 expression call operator ">>"
	'.' => Shift goto 162
[224]
	']' => Shift goto 292
[225]
	'(' => Shift goto 127
	')' => Reduce #3 expression call operator "=="
	';' => Reduce #3 expression call operator "=="
	',' => Reduce #3 expression call operator "=="
	'&' => Reduce #3 expression call operator "=="
	'^' => Reduce #3 expression call operator "=="
	'}' => Reduce #3 expression call operator "=="
	"->" => Reduce #3 expression call operator "=="
	'=' => Reduce #3 expression call operator "=="
	'+' => Shift goto 133
	'-' => Shift goto 134
	'*' => Shift goto 135
	'/' => Shift goto 136
	'%' => Shift goto 137
	"&&" => Reduce #3 expression call operator "=="
	"||" => Reduce #3 expression call operator "=="
	'|' => Reduce #3 expression call operator "=="
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'[' => Shift goto 143
	']' => Reduce #3 expression call operator "=="
	"==" => Reduce #3 expression call operator "=="
	"!=" => Reduce #3 expression call operator "=="
	">=" => Reduce #3 expression call operator "=="
	"<=" => Reduce #3 expression call operator "=="
	'>' => Reduce #3 expression call operator "=="
	'<' => Reduce #3 expression call operator "=="
	"+=" => Reduce #3 expression call operator "=="
	"-=" => Reduce #3 expression call operator "=="
	"*=" => Reduce #3 expression call operator "=="
	"/=" => Reduce #3 expression call operator "=="
	"^=" => Reduce #3 expression call operator "=="
	"&=" => Reduce #3 expression call operator "=="
	"%=" => Reduce #3 expression call operator "=="
	"&&=" => Reduce #3 expression call operator "=="
	"||=" => Reduce #3 expression call operator "=="
	"|=" => Reduce #3 expression call operator "=="
	"<<=" => Reduce #3 expression call operator "=="
	">>=" => Reduce #3 expression call operator "=="
	'.' => Shift goto 162
[226]
	'(' => Shift goto 127
	')' => Reduce #3 expression call operator "!="
	';' => Reduce #3 expression call operator "!="
	',' => Reduce #3 expression call operator "!="
	'&' => Reduce #3 expression call operator "!="
	'^' => Reduce #3 expression call operator "!="
	'}' => Reduce #3 expression call operator "!="
	"->" => Reduce #3 expression call operator "!="
	'=' => Reduce #3 expression call operator "!="
	'+' => Shift goto 133
	'-' => Shift goto 134
	'*' => Shift goto 135
	'/' => Shift goto 136
	'%' => Shift goto 137
	"&&" => Reduce #3 expression call operator "!="
	"||" => Reduce #3 expression call operator "!="
	'|' => Reduce #3 expression call operator "!="
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'[' => Shift goto 143
	']' => Reduce #3 expression call operator "!="
	"==" => Reduce #3 expression call operator "!="
	"!=" => Reduce #3 expression call operator "!="
	">=" => Reduce #3 expression call operator "!="
	"<=" => Reduce #3 expression call operator "!="
	'>' => Reduce #3 expression call operator "!="
	'<' => Reduce #3 expression call operator "!="
	"+=" => Reduce #3 expression call operator "!="
	"-=" => Reduce #3 expression call operator "!="
	"*=" => Reduce #3 expression call operator "!="
	"/=" => Reduce #3 expression call operator "!="
	"^=" => Reduce #3 expression call operator "!="
	"&=" => Reduce #3 expression call operator "!="
	"%=" => Reduce #3 expression call operator "!="
	"&&=" => Reduce #3 expression call operator "!="
	"||=" => Reduce #3 expression call operator "!="
	"|=" => Reduce #3 expression call operator "!="
	"<<=" => Reduce #3 expression call operator "!="
	">>=" => Reduce #3 expression call operator "!="
	'.' => Shift goto 162
[227]
	'(' => Shift goto 127
	')' => Reduce #3 expression call operator ">="
	';' => Reduce #3 expression call operator ">="
	',' => Reduce #3 expression call operator ">="
	'&' => Reduce #3 expression call operator ">="
	'^' => Reduce #3 expression call operator ">="
	'}' => Reduce #3 expression call operator ">="
	"->" => Reduce #3 expression call operator ">="
	'=' => Reduce #3 expression call operator ">="
	'+' => Shift goto 133
	'-' => Shift goto 134
	'*' => Shift goto 135
	'/' => Shift goto 136
	'%' => Shift goto 137
	"&&" => Reduce #3 expression call operator ">="
	"||" => Reduce #3 expression call operator ">="
	'|' => Reduce #3 expression call operator ">="
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'[' => Shift goto 143
	']' => Reduce #3 expression call operator ">="
	"==" => Reduce #3 expression call operator ">="
	"!=" => Reduce #3 expression call operator ">="
	">=" => Reduce #3 expression call operator ">="
	"<=" => Reduce #3 expression call operator ">="
	'>' => Reduce #3 expression call operator ">="
	'<' => Reduce #3 expression call operator ">="
	"+=" => Reduce #3 expression call operator ">="
	"-=" => Reduce #3 expression call operator ">="
	"*=" => Reduce #3 expression call operator ">="
	"/=" => Reduce #3 expression call operator ">="
	"^=" => Reduce #3 expression call operator ">="
	"&=" => Reduce #3 expression call operator ">="
	"%=" => Reduce #3 expression call operator ">="
	"&&=" => Reduce #3 expression call operator ">="
	"||=" => Reduce #3 expression call operator ">="
	"|=" => Reduce #3 expression call operator ">="
	"<<=" => Reduce #3 expression call operator ">="
	">>=" => Reduce #3 expression call operator ">="
	'.' => Shift goto 162
[228]
	'(' => Shift goto 127
	')' => Reduce #3 expression call operator "<="
	';' => Reduce #3 expression call operator "<="
	',' => Reduce #3 expression call operator "<="
	'&' => Reduce #3 expression call operator "<="
	'^' => Reduce #3 expression call operator "<="
	'}' => Reduce #3 expression call operator "<="
	"->" => Reduce #3 expression call operator "<="
	'=' => Reduce #3 expression call operator "<="
	'+' => Shift goto 133
	'-' => Shift goto 134
	'*' => Shift goto 135
	'/' => Shift goto 136
	'%' => Shift goto 137
	"&&" => Reduce #3 expression call operator "<="
	"||" => Reduce #3 expression call operator "<="
	'|' => Reduce #3 expression call operator "<="
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'[' => Shift goto 143
	']' => Reduce #3 expression call operator "<="
	"==" => Reduce #3 expression call operator "<="
	"!=" => Reduce #3 expression call operator "<="
	">=" => Reduce #3 expression call operator "<="
	"<=" => Reduce #3 expression call operator "<="
	'>' => Reduce #3 expression call operator "<="
	'<' => Reduce #3 expression call operator "<="
	"+=" => Reduce #3 expression call operator "<="
	"-=" => Reduce #3 expression call operator "<="
	"*=" => Reduce #3 expression call operator "<="
	"/=" => Reduce #3 expression call operator "<="
	"^=" => Reduce #3 expression call operator "<="
	"&=" => Reduce #3 expression call operator "<="
	"%=" => Reduce #3 expression call operator "<="
	"&&=" => Reduce #3 expression call operator "<="
	"||=" => Reduce #3 expression call operator "<="
	"|=" => Reduce #3 expression call operator "<="
	"<<=" => Reduce #3 expression call operator "<="
	">>=" => Reduce #3 expression call operator "<="
	'.' => Shift goto 162
[229]
	'(' => Shift goto 127
	')' => Reduce #3 expression call operator ">"
	';' => Reduce #3 expression call operator ">"
	',' => Reduce #3 expression call operator ">"
	'&' => Reduce #3 expression call operator ">"
	'^' => Reduce #3 expression call operator ">"
	'}' => Reduce #3 expression call operator ">"
	"->" => Reduce #3 expression call operator ">"
	'=' => Reduce #3 expression call operator ">"
	'+' => Shift goto 133
	'-' => Shift goto 134
	'*' => Shift goto 135
	'/' => Shift goto 136
	'%' => Shift goto 137
	"&&" => Reduce #3 expression call operator ">"
	"||" => Reduce #3 expression call operator ">"
	'|' => Reduce #3 expression call operator ">"
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'[' => Shift goto 143
	']' => Reduce #3 expression call operator ">"
	"==" => Reduce #3 expression call operator ">"
	"!=" => Reduce #3 expression call operator ">"
	">=" => Reduce #3 expression call operator ">"
	"<=" => Reduce #3 expression call operator ">"
	'>' => Reduce #3 expression call operator ">"
	'<' => Reduce #3 expression call operator ">"
	"+=" => Reduce #3 expression call operator ">"
	"-=" => Reduce #3 expression call operator ">"
	"*=" => Reduce #3 expression call operator ">"
	"/=" => Reduce #3 expression call operator ">"
	"^=" => Reduce #3 expression call operator ">"
	"&=" => Reduce #3 expression call operator ">"
	"%=" => Reduce #3 expression call operator ">"
	"&&=" => Reduce #3 expression call operator ">"
	"||=" => Reduce #3 expression call operator ">"
	"|=" => Reduce #3 expression call operator ">"
	"<<=" => Reduce #3 expression call operator ">"
	">>=" => Reduce #3 expression call operator ">"
	'.' => Shift goto 162
[230]
	'(' => Shift goto 127
	')' => Reduce #3 expression call operator "<"
	';' => Reduce #3 expression call operator "<"
	',' => Reduce #3 expression call operator "<"
	'&' => Reduce #3 expression call operator "<"
	'^' => Reduce #3 expression call operator "<"
	'}' => Reduce #3 expression call operator "<"
	"->" => Reduce #3 expression call operator "<"
	'=' => Reduce #3 expression call operator "<"
	'+' => Shift goto 133
	'-' => Shift goto 134
	'*' => Shift goto 135
	'/' => Shift goto 136
	'%' => Shift goto 137
	"&&" => Reduce #3 expression call operator "<"
	"||" => Reduce #3 expression call operator "<"
	'|' => Reduce #3 expression call operator "<"
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'[' => Shift goto 143
	']' => Reduce #3 expression call operator "<"
	"==" => Reduce #3 expression call operator "<"
	"!=" => Reduce #3 expression call operator "<"
	">=" => Reduce #3 expression call operator "<"
	"<=" => Reduce #3 expression call operator "<"
	'>' => Reduce #3 expression call operator "<"
	'<' => Reduce #3 expression call operator "<"
	"+=" => Reduce #3 expression call operator "<"
	"-=" => Reduce #3 expression call operator "<"
	"*=" => Reduce #3 expression call operator "<"
	"/=" => Reduce #3 expression call operator "<"
	"^=" => Reduce #3 expression call operator "<"
	"&=" => Reduce #3 expression call operator "<"
	"%=" => Reduce #3 expression call operator "<"
	"&&=" => Reduce #3 expression call operator "<"
	"||=" => Reduce #3 expression call operator "<"
	"|=" => Reduce #3 expression call operator "<"
	"<<=" => Reduce #3 expression call operator "<"
	">>=" => Reduce #3 expression call operator "<"
	'.' => Shift goto 162
[231]
	'(' => Shift goto 127
	')' => Reduce #3 expression call assign_operator "+"
	';' => Reduce #3 expression call assign_operator "+"
	',' => Reduce #3 expression call assign_operator "+"
	'&' => Shift goto 129
	'^' => Shift goto 130
	'}' => Reduce #3 expression call assign_operator "+"
	"->" => Reduce #3 expression call assign_operator "+"
	'=' => Reduce #3 expression call assign_operator "+"
	'+' => Shift goto 133
	'-' => Shift goto 134
	'*' => Shift goto 135
	'/' => Shift goto 136
	'%' => Shift goto 137
	"&&" => Shift goto 138
	"||" => Shift goto 139
	'|' => Shift goto 140
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'[' => Shift goto 143
	']' => Reduce #3 expression call assign_operator "+"
	"==" => Shift goto 144
	"!=" => Shift goto 145
	">=" => Shift goto 146
	"<=" => Shift goto 147
	'>' => Shift goto 148
	'<' => Shift goto 149
	"+=" => Reduce #3 expression call assign_operator "+"
	"-=" => Reduce #3 expression call assign_operator "+"
	"*=" => Reduce #3 expression call assign_operator "+"
	"/=" => Reduce #3 expression call assign_operator "+"
	"^=" => Reduce #3 expression call assign_operator "+"
	"&=" => Reduce #3 expression call assign_operator "+"
	"%=" => Reduce #3 expression call assign_operator "+"
	"&&=" => Reduce #3 expression call assign_operator "+"
	"||=" => Reduce #3 expression call assign_operator "+"
	"|=" => Reduce #3 expression call assign_operator "+"
	"<<=" => Reduce #3 expression call assign_operator "+"
	">>=" => Reduce #3 expression call assign_operator "+"
	'.' => Shift goto 162
[232]
	'(' => Shift goto 127
	')' => Reduce #3 expression call assign_operator "-"
	';' => Reduce #3 expression call assign_operator "-"
	',' => Reduce #3 expression call assign_operator "-"
	'&' => Shift goto 129
	'^' => Shift goto 130
	'}' => Reduce #3 expression call assign_operator "-"
	"->" => Reduce #3 expression call assign_operator "-"
	'=' => Reduce #3 expression call assign_operator "-"
	'+' => Shift goto 133
	'-' => Shift goto 134
	'*' => Shift goto 135
	'/' => Shift goto 136
	'%' => Shift goto 137
	"&&" => Shift goto 138
	"||" => Shift goto 139
	'|' => Shift goto 140
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'[' => Shift goto 143
	']' => Reduce #3 expression call assign_operator "-"
	"==" => Shift goto 144
	"!=" => Shift goto 145
	">=" => Shift goto 146
	"<=" => Shift goto 147
	'>' => Shift goto 148
	'<' => Shift goto 149
	"+=" => Reduce #3 expression call assign_operator "-"
	"-=" => Reduce #3 expression call assign_operator "-"
	"*=" => Reduce #3 expression call assign_operator "-"
	"/=" => Reduce #3 expression call assign_operator "-"
	"^=" => Reduce #3 expression call assign_operator "-"
	"&=" => Reduce #3 expression call assign_operator "-"
	"%=" => Reduce #3 expression call assign_operator "-"
	"&&=" => Reduce #3 expression call assign_operator "-"
	"||=" => Reduce #3 expression call assign_operator "-"
	"|=" => Reduce #3 expression call assign_operator "-"
	"<<=" => Reduce #3 expression call assign_operator "-"
	">>=" => Reduce #3 expression call assign_operator "-"
	'.' => Shift goto 162
[233]
	'(' => Shift goto 127
	')' => Reduce #3 expression call assign_operator "*"
	';' => Reduce #3 expression call assign_operator "*"
	',' => Reduce #3 expression call assign_operator "*"
	'&' => Shift goto 129
	'^' => Shift goto 130
	'}' => Reduce #3 expression call assign_operator "*"
	"->" => Reduce #3 expression call assign_operator "*"
	'=' => Reduce #3 expression call assign_operator "*"
	'+' => Shift goto 133
	'-' => Shift goto 134
	'*' => Shift goto 135
	'/' => Shift goto 136
	'%' => Shift goto 137
	"&&" => Shift goto 138
	"||" => Shift goto 139
	'|' => Shift goto 140
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'[' => Shift goto 143
	']' => Reduce #3 expression call assign_operator "*"
	"==" => Shift goto 144
	"!=" => Shift goto 145
	">=" => Shift goto 146
	"<=" => Shift goto 147
	'>' => Shift goto 148
	'<' => Shift goto 149
	"+=" => Reduce #3 expression call assign_operator "*"
	"-=" => Reduce #3 expression call assign_operator "*"
	"*=" => Reduce #3 expression call assign_operator "*"
	"/=" => Reduce #3 expression call assign_operator "*"
	"^=" => Reduce #3 expression call assign_operator "*"
	"&=" => Reduce #3 expression call assign_operator "*"
	"%=" => Reduce #3 expression call assign_operator "*"
	"&&=" => Reduce #3 expression call assign_operator "*"
	"||=" => Reduce #3 expression call assign_operator "*"
	"|=" => Reduce #3 expression call assign_operator "*"
	"<<=" => Reduce #3 expression call assign_operator "*"
	">>=" => Reduce #3 expression call assign_operator "*"
	'.' => Shift goto 162
[234]
	'(' => Shift goto 127
	')' => Reduce #3 expression call assign_operator "/"
	';' => Reduce #3 expression call assign_operator "/"
	',' => Reduce #3 expression call assign_operator "/"
	'&' => Shift goto 129
	'^' => Shift goto 130
	'}' => Reduce #3 expression call assign_operator "/"
	"->" => Reduce #3 expression call assign_operator "/"
	'=' => Reduce #3 expression call assign_operator "/"
	'+' => Shift goto 133
	'-' => Shift goto 134
	'*' => Shift goto 135
	'/' => Shift goto 136
	'%' => Shift goto 137
	"&&" => Shift goto 138
	"||" => Shift goto 139
	'|' => Shift goto 140
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'[' => Shift goto 143
	']' => Reduce #3 expression call assign_operator "/"
	"==" => Shift goto 144
	"!=" => Shift goto 145
	">=" => Shift goto 146
	"<=" => Shift goto 147
	'>' => Shift goto 148
	'<' => Shift goto 149
	"+=" => Reduce #3 expression call assign_operator "/"
	"-=" => Reduce #3 expression call assign_operator "/"
	"*=" => Reduce #3 expression call assign_operator "/"
	"/=" => Reduce #3 expression call assign_operator "/"
	"^=" => Reduce #3 expression call assign_operator "/"
	"&=" => Reduce #3 expression call assign_operator "/"
	"%=" => Reduce #3 expression call assign_operator "/"
	"&&=" => Reduce #3 expression call assign_operator "/"
	"||=" => Reduce #3 expression call assign_operator "/"
	"|=" => Reduce #3 expression call assign_operator "/"
	"<<=" => Reduce #3 expression call assign_operator "/"
	">>=" => Reduce #3 expression call assign_operator "/"
	'.' => Shift goto 162
[235]
	'(' => Shift goto 127
	')' => Reduce #3 expression call assign_operator "^"
	';' => Reduce #3 expression call assign_operator "^"
	',' => Reduce #3 expression call assign_operator "^"
	'&' => Shift goto 129
	'^' => Shift goto 130
	'}' => Reduce #3 expression call assign_operator "^"
	"->" => Reduce #3 expression call assign_operator "^"
	'=' => Reduce #3 expression call assign_operator "^"
	'+' => Shift goto 133
	'-' => Shift goto 134
	'*' => Shift goto 135
	'/' => Shift goto 136
	'%' => Shift goto 137
	"&&" => Shift goto 138
	"||" => Shift goto 139
	'|' => Shift goto 140
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'[' => Shift goto 143
	']' => Reduce #3 expression call assign_operator "^"
	"==" => Shift goto 144
	"!=" => Shift goto 145
	">=" => Shift goto 146
	"<=" => Shift goto 147
	'>' => Shift goto 148
	'<' => Shift goto 149
	"+=" => Reduce #3 expression call assign_operator "^"
	"-=" => Reduce #3 expression call assign_operator "^"
	"*=" => Reduce #3 expression call assign_operator "^"
	"/=" => Reduce #3 expression call assign_operator "^"
	"^=" => Reduce #3 expression call assign_operator "^"
	"&=" => Reduce #3 expression call assign_operator "^"
	"%=" => Reduce #3 expression call assign_operator "^"
	"&&=" => Reduce #3 expression call assign_operator "^"
	"||=" => Reduce #3 expression call assign_operator "^"
	"|=" => Reduce #3 expression call assign_operator "^"
	"<<=" => Reduce #3 expression call assign_operator "^"
	">>=" => Reduce #3 expression call assign_operator "^"
	'.' => Shift goto 162
[236]
	'(' => Shift goto 127
	')' => Reduce #3 expression call assign_operator "&"
	';' => Reduce #3 expression call assign_operator "&"
	',' => Reduce #3 expression call assign_operator "&"
	'&' => Shift goto 129
	'^' => Shift goto 130
	'}' => Reduce #3 expression call assign_operator "&"
	"->" => Reduce #3 expression call assign_operator "&"
	'=' => Reduce #3 expression call assign_operator "&"
	'+' => Shift goto 133
	'-' => Shift goto 134
	'*' => Shift goto 135
	'/' => Shift goto 136
	'%' => Shift goto 137
	"&&" => Shift goto 138
	"||" => Shift goto 139
	'|' => Shift goto 140
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'[' => Shift goto 143
	']' => Reduce #3 expression call assign_operator "&"
	"==" => Shift goto 144
	"!=" => Shift goto 145
	">=" => Shift goto 146
	"<=" => Shift goto 147
	'>' => Shift goto 148
	'<' => Shift goto 149
	"+=" => Reduce #3 expression call assign_operator "&"
	"-=" => Reduce #3 expression call assign_operator "&"
	"*=" => Reduce #3 expression call assign_operator "&"
	"/=" => Reduce #3 expression call assign_operator "&"
	"^=" => Reduce #3 expression call assign_operator "&"
	"&=" => Reduce #3 expression call assign_operator "&"
	"%=" => Reduce #3 expression call assign_operator "&"
	"&&=" => Reduce #3 expression call assign_operator "&"
	"||=" => Reduce #3 expression call assign_operator "&"
	"|=" => Reduce #3 expression call assign_operator "&"
	"<<=" => Reduce #3 expression call assign_operator "&"
	">>=" => Reduce #3 expression call assign_operator "&"
	'.' => Shift goto 162
[237]
	'(' => Shift goto 127
	')' => Reduce #3 expression call assign_operator "%"
	';' => Reduce #3 expression call assign_operator "%"
	',' => Reduce #3 expression call assign_operator "%"
	'&' => Shift goto 129
	'^' => Shift goto 130
	'}' => Reduce #3 expression call assign_operator "%"
	"->" => Reduce #3 expression call assign_operator "%"
	'=' => Reduce #3 expression call assign_operator "%"
	'+' => Shift goto 133
	'-' => Shift goto 134
	'*' => Shift goto 135
	'/' => Shift goto 136
	'%' => Shift goto 137
	"&&" => Shift goto 138
	"||" => Shift goto 139
	'|' => Shift goto 140
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'[' => Shift goto 143
	']' => Reduce #3 expression call assign_operator "%"
	"==" => Shift goto 144
	"!=" => Shift goto 145
	">=" => Shift goto 146
	"<=" => Shift goto 147
	'>' => Shift goto 148
	'<' => Shift goto 149
	"+=" => Reduce #3 expression call assign_operator "%"
	"-=" => Reduce #3 expression call assign_operator "%"
	"*=" => Reduce #3 expression call assign_operator "%"
	"/=" => Reduce #3 expression call assign_operator "%"
	"^=" => Reduce #3 expression call assign_operator "%"
	"&=" => Reduce #3 expression call assign_operator "%"
	"%=" => Reduce #3 expression call assign_operator "%"
	"&&=" => Reduce #3 expression call assign_operator "%"
	"||=" => Reduce #3 expression call assign_operator "%"
	"|=" => Reduce #3 expression call assign_operator "%"
	"<<=" => Reduce #3 expression call assign_operator "%"
	">>=" => Reduce #3 expression call assign_operator "%"
	'.' => Shift goto 162
[238]
	'(' => Shift goto 127
	')' => Reduce #3 expression call assign_operator "&&"
	';' => Reduce #3 expression call assign_operator "&&"
	',' => Reduce #3 expression call assign_operator "&&"
	'&' => Shift goto 129
	'^' => Shift goto 130
	'}' => Reduce #3 expression call assign_operator "&&"
	"->" => Reduce #3 expression call assign_operator "&&"
	'=' => Reduce #3 expression call assign_operator "&&"
	'+' => Shift goto 133
	'-' => Shift goto 134
	'*' => Shift goto 135
	'/' => Shift goto 136
	'%' => Shift goto 137
	"&&" => Shift goto 138
	"||" => Shift goto 139
	'|' => Shift goto 140
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'[' => Shift goto 143
	']' => Reduce #3 expression call assign_operator "&&"
	"==" => Shift goto 144
	"!=" => Shift goto 145
	">=" => Shift goto 146
	"<=" => Shift goto 147
	'>' => Shift goto 148
	'<' => Shift goto 149
	"+=" => Reduce #3 expression call assign_operator "&&"
	"-=" => Reduce #3 expression call assign_operator "&&"
	"*=" => Reduce #3 expression call assign_operator "&&"
	"/=" => Reduce #3 expression call assign_operator "&&"
	"^=" => Reduce #3 expression call assign_operator "&&"
	"&=" => Reduce #3 expression call assign_operator "&&"
	"%=" => Reduce #3 expression call assign_operator "&&"
	"&&=" => Reduce #3 expression call assign_operator "&&"
	"||=" => Reduce #3 expression call assign_operator "&&"
	"|=" => Reduce #3 expression call assign_operator "&&"
	"<<=" => Reduce #3 expression call assign_operator "&&"
	">>=" => Reduce #3 expression call assign_operator "&&"
	'.' => Shift goto 162
[239]
	'(' => Shift goto 127
	')' => Reduce #3 expression call assign_operator "||"
	';' => Reduce #3 expression call assign_operator "||"
	',' => Reduce #3 expression call assign_operator "||"
	'&' => Shift goto 129
	'^' => Shift goto 130
	'}' => Reduce #3 expression call assign_operator "||"
	"->" => Reduce #3 expression call assign_operator "||"
	'=' => Reduce #3 expression call assign_operator "||"
	'+' => Shift goto 133
	'-' => Shift goto 134
	'*' => Shift goto 135
	'/' => Shift goto 136
	'%' => Shift goto 137
	"&&" => Shift goto 138
	"||" => Shift goto 139
	'|' => Shift goto 140
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'[' => Shift goto 143
	']' => Reduce #3 expression call assign_operator "||"
	"==" => Shift goto 144
	"!=" => Shift goto 145
	">=" => Shift goto 146
	"<=" => Shift goto 147
	'>' => Shift goto 148
	'<' => Shift goto 149
	"+=" => Reduce #3 expression call assign_operator "||"
	"-=" => Reduce #3 expression call assign_operator "||"
	"*=" => Reduce #3 expression call assign_operator "||"
	"/=" => Reduce #3 expression call assign_operator "||"
	"^=" => Reduce #3 expression call assign_operator "||"
	"&=" => Reduce #3 expression call assign_operator "||"
	"%=" => Reduce #3 expression call assign_operator "||"
	"&&=" => Reduce #3 expression call assign_operator "||"
	"||=" => Reduce #3 expression call assign_operator "||"
	"|=" => Reduce #3 expression call assign_operator "||"
	"<<=" => Reduce #3 expression call assign_operator "||"
	">>=" => Reduce #3 expression call assign_operator "||"
	'.' => Shift goto 162
[240]
	'(' => Shift goto 127
	')' => Reduce #3 expression call assign_operator "|"
	';' => Reduce #3 expression call assign_operator "|"
	',' => Reduce #3 expression call assign_operator "|"
	'&' => Shift goto 129
	'^' => Shift goto 130
	'}' => Reduce #3 expression call assign_operator "|"
	"->" => Reduce #3 expression call assign_operator "|"
	'=' => Reduce #3 expression call assign_operator "|"
	'+' => Shift goto 133
	'-' => Shift goto 134
	'*' => Shift goto 135
	'/' => Shift goto 136
	'%' => Shift goto 137
	"&&" => Shift goto 138
	"||" => Shift goto 139
	'|' => Shift goto 140
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'[' => Shift goto 143
	']' => Reduce #3 expression call assign_operator "|"
	"==" => Shift goto 144
	"!=" => Shift goto 145
	">=" => Shift goto 146
	"<=" => Shift goto 147
	'>' => Shift goto 148
	'<' => Shift goto 149
	"+=" => Reduce #3 expression call assign_operator "|"
	"-=" => Reduce #3 expression call assign_operator "|"
	"*=" => Reduce #3 expression call assign_operator "|"
	"/=" => Reduce #3 expression call assign_operator "|"
	"^=" => Reduce #3 expression call assign_operator "|"
	"&=" => Reduce #3 expression call assign_operator "|"
	"%=" => Reduce #3 expression call assign_operator "|"
	"&&=" => Reduce #3 expression call assign_operator "|"
	"||=" => Reduce #3 expression call assign_operator "|"
	"|=" => Reduce #3 expression call assign_operator "|"
	"<<=" => Reduce #3 expression call assign_operator "|"
	">>=" => Reduce #3 expression call assign_operator "|"
	'.' => Shift goto 162
[241]
	'(' => Shift goto 127
	')' => Reduce #3 expression call assign_operator "<<"
	';' => Reduce #3 expression call assign_operator "<<"
	',' => Reduce #3 expression call assign_operator "<<"
	'&' => Shift goto 129
	'^' => Shift goto 130
	'}' => Reduce #3 expression call assign_operator "<<"
	"->" => Reduce #3 expression call assign_operator "<<"
	'=' => Reduce #3 expression call assign_operator "<<"
	'+' => Shift goto 133
	'-' => Shift goto 134
	'*' => Shift goto 135
	'/' => Shift goto 136
	'%' => Shift goto 137
	"&&" => Shift goto 138
	"||" => Shift goto 139
	'|' => Shift goto 140
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'[' => Shift goto 143
	']' => Reduce #3 expression call assign_operator "<<"
	"==" => Shift goto 144
	"!=" => Shift goto 145
	">=" => Shift goto 146
	"<=" => Shift goto 147
	'>' => Shift goto 148
	'<' => Shift goto 149
	"+=" => Reduce #3 expression call assign_operator "<<"
	"-=" => Reduce #3 expression call assign_operator "<<"
	"*=" => Reduce #3 expression call assign_operator "<<"
	"/=" => Reduce #3 expression call assign_operator "<<"
	"^=" => Reduce #3 expression call assign_operator "<<"
	"&=" => Reduce #3 expression call assign_operator "<<"
	"%=" => Reduce #3 expression call assign_operator "<<"
	"&&=" => Reduce #3 expression call assign_operator "<<"
	"||=" => Reduce #3 expression call assign_operator "<<"
	"|=" => Reduce #3 expression call assign_operator "<<"
	"<<=" => Reduce #3 expression call assign_operator "<<"
	">>=" => Reduce #3 expression call assign_operator "<<"
	'.' => Shift goto 162
[242]
	'(' => Shift goto 127
	')' => Reduce #3 expression call assign_operator ">>"
	';' => Reduce #3 expression call assign_operator ">>"
	',' => Reduce #3 expression call assign_operator ">>"
	'&' => Shift goto 129
	'^' => Shift goto 130
	'}' => Reduce #3 expression call assign_operator ">>"
	"->" => Reduce #3 expression call assign_operator ">>"
	'=' => Reduce #3 expression call assign_operator ">>"
	'+' => Shift goto 133
	'-' => Shift goto 134
	'*' => Shift goto 135
	'/' => Shift goto 136
	'%' => Shift goto 137
	"&&" => Shift goto 138
	"||" => Shift goto 139
	'|' => Shift goto 140
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'[' => Shift goto 143
	']' => Reduce #3 expression call assign_operator ">>"
	"==" => Shift goto 144
	"!=" => Shift goto 145
	">=" => Shift goto 146
	"<=" => Shift goto 147
	'>' => Shift goto 148
	'<' => Shift goto 149
	"+=" => Reduce #3 expression call assign_operator ">>"
	"-=" => Reduce #3 expression call assign_operator ">>"
	"*=" => Reduce #3 expression call assign_operator ">>"
	"/=" => Reduce #3 expression call assign_operator ">>"
	"^=" => Reduce #3 expression call assign_operator ">>"
	"&=" => Reduce #3 expression call assign_operator ">>"
	"%=" => Reduce #3 expression call assign_operator ">>"
	"&&=" => Reduce #3 expression call assign_operator ">>"
	"||=" => Reduce #3 expression call assign_operator ">>"
	"|=" => Reduce #3 expression call assign_operator ">>"
	"<<=" => Reduce #3 expression call assign_operator ">>"
	">>=" => Reduce #3 expression call assign_operator ">>"
	'.' => Shift goto 162
[243]
	'(' => Reduce #3 expression call member
	')' => Reduce #3 expression call member
	';' => Reduce #3 expression call member
	',' => Reduce #3 expression call member
	'&' => Reduce #3 expression call member
	'^' => Reduce #3 expression call member
	'}' => Reduce #3 expression call member
	"->" => Reduce #3 expression call member
	'=' => Reduce #3 expression call member
	'+' => Reduce #3 expression call member
	'-' => Reduce #3 expression call member
	'*' => Reduce #3 expression call member
	'/' => Reduce #3 expression call member
	'%' => Reduce #3 expression call member
	"&&" => Reduce #3 expression call member
	"||" => Reduce #3 expression call member
	'|' => Reduce #3 expression call member
	"<<" => Reduce #3 expression call member
	">>" => Reduce #3 expression call member
	'[' => Reduce #3 expression call member
	']' => Reduce #3 expression call member
	"==" => Reduce #3 expression call member
	"!=" => Reduce #3 expression call member
	">=" => Reduce #3 expression call member
	"<=" => Reduce #3 expression call member
	'>' => Reduce #3 expression call member
	'<' => Reduce #3 expression call member
	"+=" => Reduce #3 expression call member
	"-=" => Reduce #3 expression call member
	"*=" => Reduce #3 expression call member
	"/=" => Reduce #3 expression call member
	"^=" => Reduce #3 expression call member
	"&=" => Reduce #3 expression call member
	"%=" => Reduce #3 expression call member
	"&&=" => Reduce #3 expression call member
	"||=" => Reduce #3 expression call member
	"|=" => Reduce #3 expression call member
	"<<=" => Reduce #3 expression call member
	">>=" => Reduce #3 expression call member
	'.' => Reduce #3 expression call member
[244]
	'(' => Reduce #3 expression
	')' => Reduce #3 expression
	';' => Reduce #3 expression
	',' => Reduce #3 expression
	'&' => Reduce #3 expression
	'^' => Reduce #3 expression
	'}' => Reduce #3 expression
	"->" => Reduce #3 expression
	'=' => Reduce #3 expression
	'+' => Reduce #3 expression
	'-' => Reduce #3 expression
	'*' => Reduce #3 expression
	'/' => Reduce #3 expression
	'%' => Reduce #3 expression
	"&&" => Reduce #3 expression
	"||" => Reduce #3 expression
	'|' => Reduce #3 expression
	"<<" => Reduce #3 expression
	">>" => Reduce #3 expression
	'[' => Reduce #3 expression
	']' => Reduce #3 expression
	"==" => Reduce #3 expression
	"!=" => Reduce #3 expression
	">=" => Reduce #3 expression
	"<=" => Reduce #3 expression
	'>' => Reduce #3 expression
	'<' => Reduce #3 expression
	"+=" => Reduce #3 expression
	"-=" => Reduce #3 expression
	"*=" => Reduce #3 expression
	"/=" => Reduce #3 expression
	"^=" => Reduce #3 expression
	"&=" => Reduce #3 expression
	"%=" => Reduce #3 expression
	"&&=" => Reduce #3 expression
	"||=" => Reduce #3 expression
	"|=" => Reduce #3 expression
	"<<=" => Reduce #3 expression
	">>=" => Reduce #3 expression
	'.' => Reduce #3 expression
[245]
	$ => Reduce #3 statement
	BOOLEAN => Reduce #3 statement
	IDENT => Reduce #3 statement
	DQSTRING => Reduce #3 statement
	SQSTRING => Reduce #3 statement
	CARDINAL => Reduce #3 statement
	INTEGER => Reduce #3 statement
	FLOAT => Reduce #3 statement
	"function" => Reduce #3 statement
	'(' => Reduce #3 statement
	"procedure" => Reduce #3 statement
	'&' => Reduce #3 statement
	"typedef" => Reduce #3 statement
	'{' => Reduce #3 statement
	'}' => Reduce #3 statement
	"private" => Reduce #3 statement
	"public" => Reduce #3 statement
	'+' => Reduce #3 statement
	'-' => Reduce #3 statement
	'*' => Reduce #3 statement
	'~' => Reduce #3 statement
	'!' => Reduce #3 statement
	"var" => Reduce #3 statement
	"return" => Reduce #3 statement
	"delete" => Reduce #3 statement
	"if" => Reduce #3 statement
	"while" => Reduce #3 statement
	"new" => Reduce #3 statement
	"null" => Reduce #3 statement
[246]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 94
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"null" => Shift goto 91
[247]
	'(' => Reduce #3 expression call structure
	')' => Reduce #3 expression call structure
	';' => Reduce #3 expression call structure
	',' => Reduce #3 expression call structure
	'&' => Reduce #3 expression call structure
	'^' => Reduce #3 expression call structure
	'}' => Reduce #3 expression call structure
	"->" => Reduce #3 expression call structure
	'=' => Reduce #3 expression call structure
	'+' => Reduce #3 expression call structure
	'-' => Reduce #3 expression call structure
	'*' => Reduce #3 expression call structure
	'/' => Reduce #3 expression call structure
	'%' => Reduce #3 expression call structure
	"&&" => Reduce #3 expression call structure
	"||" => Reduce #3 expression call structure
	'|' => Reduce #3 expression call structure
	"<<" => Reduce #3 expression call structure
	">>" => Reduce #3 expression call structure
	'[' => Reduce #3 expression call structure
	']' => Reduce #3 expression call structure
	"==" => Reduce #3 expression call structure
	"!=" => Reduce #3 expression call structure
	">=" => Reduce #3 expression call structure
	"<=" => Reduce #3 expression call structure
	'>' => Reduce #3 expression call structure
	'<' => Reduce #3 expression call structure
	"+=" => Reduce #3 expression call structure
	"-=" => Reduce #3 expression call structure
	"*=" => Reduce #3 expression call structure
	"/=" => Reduce #3 expression call structure
	"^=" => Reduce #3 expression call structure
	"&=" => Reduce #3 expression call structure
	"%=" => Reduce #3 expression call structure
	"&&=" => Reduce #3 expression call structure
	"||=" => Reduce #3 expression call structure
	"|=" => Reduce #3 expression call structure
	"<<=" => Reduce #3 expression call structure
	">>=" => Reduce #3 expression call structure
	'.' => Reduce #3 expression call structure
[248]
	$ => Reduce #3 statement call definition
	BOOLEAN => Reduce #3 statement call definition
	IDENT => Reduce #3 statement call definition
	DQSTRING => Reduce #3 statement call definition
	SQSTRING => Reduce #3 statement call definition
	CARDINAL => Reduce #3 statement call definition
	INTEGER => Reduce #3 statement call definition
	FLOAT => Reduce #3 statement call definition
	"function" => Reduce #3 statement call definition
	'(' => Reduce #3 statement call definition
	"procedure" => Reduce #3 statement call definition
	'&' => Reduce #3 statement call definition
	"typedef" => Reduce #3 statement call definition
	'{' => Reduce #3 statement call definition
	'}' => Reduce #3 statement call definition
	"private" => Reduce #3 statement call definition
	"public" => Reduce #3 statement call definition
	'+' => Reduce #3 statement call definition
	'-' => Reduce #3 statement call definition
	'*' => Reduce #3 statement call definition
	'~' => Reduce #3 statement call definition
	'!' => Reduce #3 statement call definition
	"var" => Reduce #3 statement call definition
	"return" => Reduce #3 statement call definition
	"delete" => Reduce #3 statement call definition
	"if" => Reduce #3 statement call definition
	"while" => Reduce #3 statement call definition
	"new" => Reduce #3 statement call definition
	"null" => Reduce #3 statement call definition
[249]
	$ => Reduce #3 statement call return_value
	BOOLEAN => Reduce #3 statement call return_value
	IDENT => Reduce #3 statement call return_value
	DQSTRING => Reduce #3 statement call return_value
	SQSTRING => Reduce #3 statement call return_value
	CARDINAL => Reduce #3 statement call return_value
	INTEGER => Reduce #3 statement call return_value
	FLOAT => Reduce #3 statement call return_value
	"function" => Reduce #3 statement call return_value
	'(' => Reduce #3 statement call return_value
	"procedure" => Reduce #3 statement call return_value
	'&' => Reduce #3 statement call return_value
	"typedef" => Reduce #3 statement call return_value
	'{' => Reduce #3 statement call return_value
	'}' => Reduce #3 statement call return_value
	"private" => Reduce #3 statement call return_value
	"public" => Reduce #3 statement call return_value
	'+' => Reduce #3 statement call return_value
	'-' => Reduce #3 statement call return_value
	'*' => Reduce #3 statement call return_value
	'~' => Reduce #3 statement call return_value
	'!' => Reduce #3 statement call return_value
	"var" => Reduce #3 statement call return_value
	"return" => Reduce #3 statement call return_value
	"delete" => Reduce #3 statement call return_value
	"if" => Reduce #3 statement call return_value
	"while" => Reduce #3 statement call return_value
	"new" => Reduce #3 statement call return_value
	"null" => Reduce #3 statement call return_value
[250]
	$ => Reduce #3 statement call delete
	BOOLEAN => Reduce #3 statement call delete
	IDENT => Reduce #3 statement call delete
	DQSTRING => Reduce #3 statement call delete
	SQSTRING => Reduce #3 statement call delete
	CARDINAL => Reduce #3 statement call delete
	INTEGER => Reduce #3 statement call delete
	FLOAT => Reduce #3 statement call delete
	"function" => Reduce #3 statement call delete
	'(' => Reduce #3 statement call delete
	"procedure" => Reduce #3 statement call delete
	'&' => Reduce #3 statement call delete
	"typedef" => Reduce #3 statement call delete
	'{' => Reduce #3 statement call delete
	'}' => Reduce #3 statement call delete
	"private" => Reduce #3 statement call delete
	"public" => Reduce #3 statement call delete
	'+' => Reduce #3 statement call delete
	'-' => Reduce #3 statement call delete
	'*' => Reduce #3 statement call delete
	'~' => Reduce #3 statement call delete
	'!' => Reduce #3 statement call delete
	"var" => Reduce #3 statement call delete
	"return" => Reduce #3 statement call delete
	"delete" => Reduce #3 statement call delete
	"if" => Reduce #3 statement call delete
	"while" => Reduce #3 statement call delete
	"new" => Reduce #3 statement call delete
	"null" => Reduce #3 statement call delete
[251]
	'(' => Shift goto 127
	')' => Shift goto 294
	'&' => Shift goto 129
	'^' => Shift goto 130
	"->" => Shift goto 131
	'=' => Shift goto 132
	'+' => Shift goto 133
	'-' => Shift goto 134
	'*' => Shift goto 135
	'/' => Shift goto 136
	'%' => Shift goto 137
	"&&" => Shift goto 138
	"||" => Shift goto 139
	'|' => Shift goto 140
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'[' => Shift goto 143
	"==" => Shift goto 144
	"!=" => Shift goto 145
	">=" => Shift goto 146
	"<=" => Shift goto 147
	'>' => Shift goto 148
	'<' => Shift goto 149
	"+=" => Shift goto 150
	"-=" => Shift goto 151
	"*=" => Shift goto 152
	"/=" => Shift goto 153
	"^=" => Shift goto 154
	"&=" => Shift goto 155
	"%=" => Shift goto 156
	"&&=" => Shift goto 157
	"||=" => Shift goto 158
	"|=" => Shift goto 159
	"<<=" => Shift goto 160
	">>=" => Shift goto 161
	'.' => Shift goto 162
[252]
	'(' => Shift goto 127
	')' => Shift goto 295
	'&' => Shift goto 129
	'^' => Shift goto 130
	"->" => Shift goto 131
	'=' => Shift goto 132
	'+' => Shift goto 133
	'-' => Shift goto 134
	'*' => Shift goto 135
	'/' => Shift goto 136
	'%' => Shift goto 137
	"&&" => Shift goto 138
	"||" => Shift goto 139
	'|' => Shift goto 140
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'[' => Shift goto 143
	"==" => Shift goto 144
	"!=" => Shift goto 145
	">=" => Shift goto 146
	"<=" => Shift goto 147
	'>' => Shift goto 148
	'<' => Shift goto 149
	"+=" => Shift goto 150
	"-=" => Shift goto 151
	"*=" => Shift goto 152
	"/=" => Shift goto 153
	"^=" => Shift goto 154
	"&=" => Shift goto 155
	"%=" => Shift goto 156
	"&&=" => Shift goto 157
	"||=" => Shift goto 158
	"|=" => Shift goto 159
	"<<=" => Shift goto 160
	">>=" => Shift goto 161
	'.' => Shift goto 162
[253]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 94
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"null" => Shift goto 91
[254]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 94
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"null" => Shift goto 91
[255]
	')' => Reduce #2 paramdecl call paramdef
	',' => Reduce #2 paramdecl call paramdef
[256]
	"const" => Shift goto 298
	'{' => Shift goto 299
[257]
	IDENT => Shift goto 17
	"const" => Shift goto 18
[258]
	'(' => Shift goto 301
[259]
	IDENT => Shift goto 17
	')' => Reduce #0 parameterlist call paramdeflist
	"const" => Shift goto 18
[260]
	$ => Reduce #3 constructordefinition call constructordef
	IDENT => Reduce #3 constructordefinition call constructordef
	"function" => Reduce #3 constructordefinition call constructordef
	"procedure" => Reduce #3 constructordefinition call constructordef
	"const" => Reduce #3 constructordefinition call constructordef
	"typedef" => Reduce #3 constructordefinition call constructordef
	"struct" => Reduce #3 constructordefinition call constructordef
	'}' => Reduce #3 constructordefinition call constructordef
	"interface" => Reduce #3 constructordefinition call constructordef
	"class" => Reduce #3 constructordefinition call constructordef
	"private" => Reduce #3 constructordefinition call constructordef
	"public" => Reduce #3 constructordefinition call constructordef
	"constructor" => Reduce #3 constructordefinition call constructordef
	"destructor" => Reduce #3 constructordefinition call constructordef
	"operator" => Reduce #3 constructordefinition call constructordef
[261]
	')' => Shift goto 303
[262]
	IDENT => Shift goto 17
	"const" => Shift goto 18
[263]
	IDENT => Shift goto 17
	"const" => Shift goto 18
[264]
	IDENT => Shift goto 17
	"const" => Shift goto 18
[265]
	IDENT => Shift goto 17
	"const" => Shift goto 18
[266]
	IDENT => Shift goto 17
	"const" => Shift goto 18
[267]
	IDENT => Shift goto 17
	"const" => Shift goto 18
[268]
	IDENT => Shift goto 17
	"const" => Shift goto 18
[269]
	IDENT => Shift goto 17
	"const" => Shift goto 18
[270]
	IDENT => Shift goto 17
	"const" => Shift goto 18
[271]
	IDENT => Shift goto 17
	"const" => Shift goto 18
[272]
	IDENT => Shift goto 17
	"const" => Shift goto 18
[273]
	IDENT => Shift goto 17
	"const" => Shift goto 18
[274]
	IDENT => Shift goto 17
	"const" => Shift goto 18
[275]
	IDENT => Shift goto 17
	"const" => Shift goto 18
[276]
	IDENT => Shift goto 17
	"const" => Shift goto 18
[277]
	']' => Shift goto 319
[278]
	IDENT => Shift goto 17
	"const" => Shift goto 18
[279]
	IDENT => Shift goto 17
	"const" => Shift goto 18
[280]
	IDENT => Shift goto 17
	"const" => Shift goto 18
[281]
	IDENT => Shift goto 17
	"const" => Shift goto 18
[282]
	IDENT => Shift goto 17
	"const" => Shift goto 18
[283]
	IDENT => Shift goto 17
	"const" => Shift goto 18
[284]
	'}' => Shift goto 326
[285]
	'{' => Reduce #3 inheritlist call inheritdef 1
[286]
	'}' => Shift goto 327
[287]
	')' => Shift goto 328
	"..." => Shift goto 329
[288]
	';' => Shift goto 330
[289]
	')' => Shift goto 331
[290]
	IDENT => Shift goto 17
	"const" => Shift goto 18
[291]
	'(' => Reduce #4 expression call operator "()"
	')' => Reduce #4 expression call operator "()"
	';' => Reduce #4 expression call operator "()"
	',' => Reduce #4 expression call operator "()"
	'&' => Reduce #4 expression call operator "()"
	'^' => Reduce #4 expression call operator "()"
	'}' => Reduce #4 expression call operator "()"
	"->" => Reduce #4 expression call operator "()"
	'=' => Reduce #4 expression call operator "()"
	'+' => Reduce #4 expression call operator "()"
	'-' => Reduce #4 expression call operator "()"
	'*' => Reduce #4 expression call operator "()"
	'/' => Reduce #4 expression call operator "()"
	'%' => Reduce #4 expression call operator "()"
	"&&" => Reduce #4 expression call operator "()"
	"||" => Reduce #4 expression call operator "()"
	'|' => Reduce #4 expression call operator "()"
	"<<" => Reduce #4 expression call operator "()"
	">>" => Reduce #4 expression call operator "()"
	'[' => Reduce #4 expression call operator "()"
	']' => Reduce #4 expression call operator "()"
	"==" => Reduce #4 expression call operator "()"
	"!=" => Reduce #4 expression call operator "()"
	">=" => Reduce #4 expression call operator "()"
	"<=" => Reduce #4 expression call operator "()"
	'>' => Reduce #4 expression call operator "()"
	'<' => Reduce #4 expression call operator "()"
	"+=" => Reduce #4 expression call operator "()"
	"-=" => Reduce #4 expression call operator "()"
	"*=" => Reduce #4 expression call operator "()"
	"/=" => Reduce #4 expression call operator "()"
	"^=" => Reduce #4 expression call operator "()"
	"&=" => Reduce #4 expression call operator "()"
	"%=" => Reduce #4 expression call operator "()"
	"&&=" => Reduce #4 expression call operator "()"
	"||=" => Reduce #4 expression call operator "()"
	"|=" => Reduce #4 expression call operator "()"
	"<<=" => Reduce #4 expression call operator "()"
	">>=" => Reduce #4 expression call operator "()"
	'.' => Reduce #4 expression call operator "()"
[292]
	'(' => Reduce #4 expression call operator "[]"
	')' => Reduce #4 expression call operator "[]"
	';' => Reduce #4 expression call operator "[]"
	',' => Reduce #4 expression call operator "[]"
	'&' => Reduce #4 expression call operator "[]"
	'^' => Reduce #4 expression call operator "[]"
	'}' => Reduce #4 expression call operator "[]"
	"->" => Reduce #4 expression call operator "[]"
	'=' => Reduce #4 expression call operator "[]"
	'+' => Reduce #4 expression call operator "[]"
	'-' => Reduce #4 expression call operator "[]"
	'*' => Reduce #4 expression call operator "[]"
	'/' => Reduce #4 expression call operator "[]"
	'%' => Reduce #4 expression call operator "[]"
	"&&" => Reduce #4 expression call operator "[]"
	"||" => Reduce #4 expression call operator "[]"
	'|' => Reduce #4 expression call operator "[]"
	"<<" => Reduce #4 expression call operator "[]"
	">>" => Reduce #4 expression call operator "[]"
	'[' => Reduce #4 expression call operator "[]"
	']' => Reduce #4 expression call operator "[]"
	"==" => Reduce #4 expression call operator "[]"
	"!=" => Reduce #4 expression call operator "[]"
	">=" => Reduce #4 expression call operator "[]"
	"<=" => Reduce #4 expression call operator "[]"
	'>' => Reduce #4 expression call operator "[]"
	'<' => Reduce #4 expression call operator "[]"
	"+=" => Reduce #4 expression call operator "[]"
	"-=" => Reduce #4 expression call operator "[]"
	"*=" => Reduce #4 expression call operator "[]"
	"/=" => Reduce #4 expression call operator "[]"
	"^=" => Reduce #4 expression call operator "[]"
	"&=" => Reduce #4 expression call operator "[]"
	"%=" => Reduce #4 expression call operator "[]"
	"&&=" => Reduce #4 expression call operator "[]"
	"||=" => Reduce #4 expression call operator "[]"
	"|=" => Reduce #4 expression call operator "[]"
	"<<=" => Reduce #4 expression call operator "[]"
	">>=" => Reduce #4 expression call operator "[]"
	'.' => Reduce #4 expression call operator "[]"
[293]
	')' => Reduce #3 expressionlist
	'}' => Reduce #3 expressionlist
	']' => Reduce #3 expressionlist
[294]
	'{' => Shift goto 333
[295]
	'{' => Shift goto 334
[296]
	'(' => Shift goto 127
	')' => Reduce #4 expression call allocate
	';' => Reduce #4 expression call allocate
	',' => Reduce #4 expression call allocate
	'&' => Shift goto 129
	'^' => Shift goto 130
	'}' => Reduce #4 expression call allocate
	"->" => Reduce #4 expression call allocate
	'=' => Shift goto 132
	'+' => Shift goto 133
	'-' => Shift goto 134
	'*' => Shift goto 135
	'/' => Shift goto 136
	'%' => Shift goto 137
	"&&" => Shift goto 138
	"||" => Shift goto 139
	'|' => Shift goto 140
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'[' => Shift goto 143
	']' => Reduce #4 expression call allocate
	"==" => Shift goto 144
	"!=" => Shift goto 145
	">=" => Shift goto 146
	"<=" => Shift goto 147
	'>' => Shift goto 148
	'<' => Shift goto 149
	"+=" => Shift goto 150
	"-=" => Shift goto 151
	"*=" => Shift goto 152
	"/=" => Shift goto 153
	"^=" => Shift goto 154
	"&=" => Shift goto 155
	"%=" => Shift goto 156
	"&&=" => Shift goto 157
	"||=" => Shift goto 158
	"|=" => Shift goto 159
	"<<=" => Shift goto 160
	">>=" => Shift goto 161
	'.' => Shift goto 162
[297]
	'(' => Shift goto 127
	';' => Reduce #7 variabledefinition call vardef_array_assign
	'&' => Shift goto 129
	'^' => Shift goto 130
	"->" => Shift goto 131
	'=' => Shift goto 132
	'+' => Shift goto 133
	'-' => Shift goto 134
	'*' => Shift goto 135
	'/' => Shift goto 136
	'%' => Shift goto 137
	"&&" => Shift goto 138
	"||" => Shift goto 139
	'|' => Shift goto 140
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'[' => Shift goto 143
	"==" => Shift goto 144
	"!=" => Shift goto 145
	">=" => Shift goto 146
	"<=" => Shift goto 147
	'>' => Shift goto 148
	'<' => Shift goto 149
	"+=" => Shift goto 150
	"-=" => Shift goto 151
	"*=" => Shift goto 152
	"/=" => Shift goto 153
	"^=" => Shift goto 154
	"&=" => Shift goto 155
	"%=" => Shift goto 156
	"&&=" => Shift goto 157
	"||=" => Shift goto 158
	"|=" => Shift goto 159
	"<<=" => Shift goto 160
	">>=" => Shift goto 161
	'.' => Shift goto 162
[298]
	'{' => Shift goto 335
[299]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	"function" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	'(' => Shift goto 77
	"procedure" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	'&' => Shift goto 78
	"typedef" => Shift goto 19
	'{' => Shift goto 79
	'}' => Reduce #0 statementlist
	"private" => Shift goto 23
	"public" => Shift goto 24
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"var" => Shift goto 85
	"return" => Shift goto 86
	"delete" => Shift goto 87
	"if" => Shift goto 88
	"while" => Shift goto 89
	"new" => Shift goto 90
	"null" => Shift goto 91
[300]
	')' => Reduce #3 parameters
[301]
	IDENT => Shift goto 17
	')' => Reduce #0 parameterlist call paramdeflist
	"const" => Shift goto 18
[302]
	')' => Shift goto 338
[303]
	IDENT => Shift goto 17
	"const" => Shift goto 18
[304]
	'(' => Shift goto 98
[305]
	'(' => Shift goto 98
[306]
	'(' => Shift goto 98
[307]
	'(' => Shift goto 98
[308]
	'(' => Shift goto 98
[309]
	'(' => Shift goto 98
[310]
	'(' => Shift goto 98
[311]
	'(' => Shift goto 98
[312]
	'(' => Shift goto 98
[313]
	'(' => Shift goto 98
[314]
	'(' => Shift goto 98
[315]
	'(' => Shift goto 98
[316]
	'(' => Shift goto 98
[317]
	'(' => Shift goto 98
[318]
	'(' => Shift goto 98
[319]
	IDENT => Shift goto 17
	"const" => Shift goto 18
[320]
	'(' => Shift goto 98
[321]
	'(' => Shift goto 98
[322]
	'(' => Shift goto 98
[323]
	'(' => Shift goto 98
[324]
	'(' => Shift goto 98
[325]
	'(' => Shift goto 98
[326]
	$ => Reduce #4 constructordefinition call destructordef
	IDENT => Reduce #4 constructordefinition call destructordef
	"function" => Reduce #4 constructordefinition call destructordef
	"procedure" => Reduce #4 constructordefinition call destructordef
	"const" => Reduce #4 constructordefinition call destructordef
	"typedef" => Reduce #4 constructordefinition call destructordef
	"struct" => Reduce #4 constructordefinition call destructordef
	'}' => Reduce #4 constructordefinition call destructordef
	"interface" => Reduce #4 constructordefinition call destructordef
	"class" => Reduce #4 constructordefinition call destructordef
	"private" => Reduce #4 constructordefinition call destructordef
	"public" => Reduce #4 constructordefinition call destructordef
	"constructor" => Reduce #4 constructordefinition call destructordef
	"destructor" => Reduce #4 constructordefinition call destructordef
	"operator" => Reduce #4 constructordefinition call destructordef
[327]
	$ => Reduce #7 classdefinition call classdef
	IDENT => Reduce #7 classdefinition call classdef
	"function" => Reduce #7 classdefinition call classdef
	"procedure" => Reduce #7 classdefinition call classdef
	"const" => Reduce #7 classdefinition call classdef
	"typedef" => Reduce #7 classdefinition call classdef
	"struct" => Reduce #7 classdefinition call classdef
	'}' => Reduce #7 classdefinition call classdef
	"interface" => Reduce #7 classdefinition call classdef
	"class" => Reduce #7 classdefinition call classdef
	"private" => Reduce #7 classdefinition call classdef
	"public" => Reduce #7 classdefinition call classdef
	"constructor" => Reduce #7 classdefinition call classdef
	"destructor" => Reduce #7 classdefinition call classdef
	"operator" => Reduce #7 classdefinition call classdef
	"main" => Reduce #7 classdefinition call classdef
[328]
	';' => Shift goto 362
[329]
	')' => Shift goto 363
[330]
	$ => Reduce #8 extern_definition call extern_procdef
	IDENT => Reduce #8 extern_definition call extern_procdef
	"extern" => Reduce #8 extern_definition call extern_procdef
	"function" => Reduce #8 extern_definition call extern_procdef
	"procedure" => Reduce #8 extern_definition call extern_procdef
	"const" => Reduce #8 extern_definition call extern_procdef
	"typedef" => Reduce #8 extern_definition call extern_procdef
	"struct" => Reduce #8 extern_definition call extern_procdef
	"interface" => Reduce #8 extern_definition call extern_procdef
	"class" => Reduce #8 extern_definition call extern_procdef
	"private" => Reduce #8 extern_definition call extern_procdef
	"public" => Reduce #8 extern_definition call extern_procdef
	"main" => Reduce #8 extern_definition call extern_procdef
[331]
	';' => Shift goto 364
[332]
	')' => Reduce #3 extern_parameters
	"..." => Reduce #3 extern_parameters
[333]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	"function" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	'(' => Shift goto 77
	"procedure" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	'&' => Shift goto 78
	"typedef" => Shift goto 19
	'{' => Shift goto 79
	'}' => Reduce #0 statementlist
	"private" => Shift goto 23
	"public" => Shift goto 24
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"var" => Shift goto 85
	"return" => Shift goto 86
	"delete" => Shift goto 87
	"if" => Shift goto 88
	"while" => Shift goto 89
	"new" => Shift goto 90
	"null" => Shift goto 91
[334]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	"function" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	'(' => Shift goto 77
	"procedure" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	'&' => Shift goto 78
	"typedef" => Shift goto 19
	'{' => Shift goto 79
	'}' => Reduce #0 statementlist
	"private" => Shift goto 23
	"public" => Shift goto 24
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"var" => Shift goto 85
	"return" => Shift goto 86
	"delete" => Shift goto 87
	"if" => Shift goto 88
	"while" => Shift goto 89
	"new" => Shift goto 90
	"null" => Shift goto 91
[335]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	"function" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	'(' => Shift goto 77
	"procedure" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	'&' => Shift goto 78
	"typedef" => Shift goto 19
	'{' => Shift goto 79
	'}' => Reduce #0 statementlist
	"private" => Shift goto 23
	"public" => Shift goto 24
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"var" => Shift goto 85
	"return" => Shift goto 86
	"delete" => Shift goto 87
	"if" => Shift goto 88
	"while" => Shift goto 89
	"new" => Shift goto 90
	"null" => Shift goto 91
[336]
	'}' => Shift goto 368
[337]
	')' => Shift goto 369
[338]
	';' => Shift goto 370
	"const" => Shift goto 371
[339]
	'(' => Shift goto 98
[340]
	$ => Reduce #5 operatordefinition call operatordef {name="&",minarg=0,maxarg=0}
	IDENT => Reduce #5 operatordefinition call operatordef {name="&",minarg=0,maxarg=0}
	"function" => Reduce #5 operatordefinition call operatordef {name="&",minarg=0,maxarg=0}
	"procedure" => Reduce #5 operatordefinition call operatordef {name="&",minarg=0,maxarg=0}
	"const" => Reduce #5 operatordefinition call operatordef {name="&",minarg=0,maxarg=0}
	"typedef" => Reduce #5 operatordefinition call operatordef {name="&",minarg=0,maxarg=0}
	"struct" => Reduce #5 operatordefinition call operatordef {name="&",minarg=0,maxarg=0}
	'}' => Reduce #5 operatordefinition call operatordef {name="&",minarg=0,maxarg=0}
	"interface" => Reduce #5 operatordefinition call operatordef {name="&",minarg=0,maxarg=0}
	"class" => Reduce #5 operatordefinition call operatordef {name="&",minarg=0,maxarg=0}
	"private" => Reduce #5 operatordefinition call operatordef {name="&",minarg=0,maxarg=0}
	"public" => Reduce #5 operatordefinition call operatordef {name="&",minarg=0,maxarg=0}
	"constructor" => Reduce #5 operatordefinition call operatordef {name="&",minarg=0,maxarg=0}
	"destructor" => Reduce #5 operatordefinition call operatordef {name="&",minarg=0,maxarg=0}
	"operator" => Reduce #5 operatordefinition call operatordef {name="&",minarg=0,maxarg=0}
[341]
	$ => Reduce #5 operatordefinition call operatordef {name="->",minarg=0,maxarg=0}
	IDENT => Reduce #5 operatordefinition call operatordef {name="->",minarg=0,maxarg=0}
	"function" => Reduce #5 operatordefinition call operatordef {name="->",minarg=0,maxarg=0}
	"procedure" => Reduce #5 operatordefinition call operatordef {name="->",minarg=0,maxarg=0}
	"const" => Reduce #5 operatordefinition call operatordef {name="->",minarg=0,maxarg=0}
	"typedef" => Reduce #5 operatordefinition call operatordef {name="->",minarg=0,maxarg=0}
	"struct" => Reduce #5 operatordefinition call operatordef {name="->",minarg=0,maxarg=0}
	'}' => Reduce #5 operatordefinition call operatordef {name="->",minarg=0,maxarg=0}
	"interface" => Reduce #5 operatordefinition call operatordef {name="->",minarg=0,maxarg=0}
	"class" => Reduce #5 operatordefinition call operatordef {name="->",minarg=0,maxarg=0}
	"private" => Reduce #5 operatordefinition call operatordef {name="->",minarg=0,maxarg=0}
	"public" => Reduce #5 operatordefinition call operatordef {name="->",minarg=0,maxarg=0}
	"constructor" => Reduce #5 operatordefinition call operatordef {name="->",minarg=0,maxarg=0}
	"destructor" => Reduce #5 operatordefinition call operatordef {name="->",minarg=0,maxarg=0}
	"operator" => Reduce #5 operatordefinition call operatordef {name="->",minarg=0,maxarg=0}
[342]
	$ => Reduce #5 operatordefinition call operatordef {name="=",minarg=0,maxarg=0}
	IDENT => Reduce #5 operatordefinition call operatordef {name="=",minarg=0,maxarg=0}
	"function" => Reduce #5 operatordefinition call operatordef {name="=",minarg=0,maxarg=0}
	"procedure" => Reduce #5 operatordefinition call operatordef {name="=",minarg=0,maxarg=0}
	"const" => Reduce #5 operatordefinition call operatordef {name="=",minarg=0,maxarg=0}
	"typedef" => Reduce #5 operatordefinition call operatordef {name="=",minarg=0,maxarg=0}
	"struct" => Reduce #5 operatordefinition call operatordef {name="=",minarg=0,maxarg=0}
	'}' => Reduce #5 operatordefinition call operatordef {name="=",minarg=0,maxarg=0}
	"interface" => Reduce #5 operatordefinition call operatordef {name="=",minarg=0,maxarg=0}
	"class" => Reduce #5 operatordefinition call operatordef {name="=",minarg=0,maxarg=0}
	"private" => Reduce #5 operatordefinition call operatordef {name="=",minarg=0,maxarg=0}
	"public" => Reduce #5 operatordefinition call operatordef {name="=",minarg=0,maxarg=0}
	"constructor" => Reduce #5 operatordefinition call operatordef {name="=",minarg=0,maxarg=0}
	"destructor" => Reduce #5 operatordefinition call operatordef {name="=",minarg=0,maxarg=0}
	"operator" => Reduce #5 operatordefinition call operatordef {name="=",minarg=0,maxarg=0}
[343]
	$ => Reduce #5 operatordefinition call operatordef {name="+",minarg=0,maxarg=0}
	IDENT => Reduce #5 operatordefinition call operatordef {name="+",minarg=0,maxarg=0}
	"function" => Reduce #5 operatordefinition call operatordef {name="+",minarg=0,maxarg=0}
	"procedure" => Reduce #5 operatordefinition call operatordef {name="+",minarg=0,maxarg=0}
	"const" => Reduce #5 operatordefinition call operatordef {name="+",minarg=0,maxarg=0}
	"typedef" => Reduce #5 operatordefinition call operatordef {name="+",minarg=0,maxarg=0}
	"struct" => Reduce #5 operatordefinition call operatordef {name="+",minarg=0,maxarg=0}
	'}' => Reduce #5 operatordefinition call operatordef {name="+",minarg=0,maxarg=0}
	"interface" => Reduce #5 operatordefinition call operatordef {name="+",minarg=0,maxarg=0}
	"class" => Reduce #5 operatordefinition call operatordef {name="+",minarg=0,maxarg=0}
	"private" => Reduce #5 operatordefinition call operatordef {name="+",minarg=0,maxarg=0}
	"public" => Reduce #5 operatordefinition call operatordef {name="+",minarg=0,maxarg=0}
	"constructor" => Reduce #5 operatordefinition call operatordef {name="+",minarg=0,maxarg=0}
	"destructor" => Reduce #5 operatordefinition call operatordef {name="+",minarg=0,maxarg=0}
	"operator" => Reduce #5 operatordefinition call operatordef {name="+",minarg=0,maxarg=0}
[344]
	$ => Reduce #5 operatordefinition call operatordef {name="-",minarg=0,maxarg=0}
	IDENT => Reduce #5 operatordefinition call operatordef {name="-",minarg=0,maxarg=0}
	"function" => Reduce #5 operatordefinition call operatordef {name="-",minarg=0,maxarg=0}
	"procedure" => Reduce #5 operatordefinition call operatordef {name="-",minarg=0,maxarg=0}
	"const" => Reduce #5 operatordefinition call operatordef {name="-",minarg=0,maxarg=0}
	"typedef" => Reduce #5 operatordefinition call operatordef {name="-",minarg=0,maxarg=0}
	"struct" => Reduce #5 operatordefinition call operatordef {name="-",minarg=0,maxarg=0}
	'}' => Reduce #5 operatordefinition call operatordef {name="-",minarg=0,maxarg=0}
	"interface" => Reduce #5 operatordefinition call operatordef {name="-",minarg=0,maxarg=0}
	"class" => Reduce #5 operatordefinition call operatordef {name="-",minarg=0,maxarg=0}
	"private" => Reduce #5 operatordefinition call operatordef {name="-",minarg=0,maxarg=0}
	"public" => Reduce #5 operatordefinition call operatordef {name="-",minarg=0,maxarg=0}
	"constructor" => Reduce #5 operatordefinition call operatordef {name="-",minarg=0,maxarg=0}
	"destructor" => Reduce #5 operatordefinition call operatordef {name="-",minarg=0,maxarg=0}
	"operator" => Reduce #5 operatordefinition call operatordef {name="-",minarg=0,maxarg=0}
[345]
	$ => Reduce #5 operatordefinition call operatordef {name="*",minarg=0,maxarg=0}
	IDENT => Reduce #5 operatordefinition call operatordef {name="*",minarg=0,maxarg=0}
	"function" => Reduce #5 operatordefinition call operatordef {name="*",minarg=0,maxarg=0}
	"procedure" => Reduce #5 operatordefinition call operatordef {name="*",minarg=0,maxarg=0}
	"const" => Reduce #5 operatordefinition call operatordef {name="*",minarg=0,maxarg=0}
	"typedef" => Reduce #5 operatordefinition call operatordef {name="*",minarg=0,maxarg=0}
	"struct" => Reduce #5 operatordefinition call operatordef {name="*",minarg=0,maxarg=0}
	'}' => Reduce #5 operatordefinition call operatordef {name="*",minarg=0,maxarg=0}
	"interface" => Reduce #5 operatordefinition call operatordef {name="*",minarg=0,maxarg=0}
	"class" => Reduce #5 operatordefinition call operatordef {name="*",minarg=0,maxarg=0}
	"private" => Reduce #5 operatordefinition call operatordef {name="*",minarg=0,maxarg=0}
	"public" => Reduce #5 operatordefinition call operatordef {name="*",minarg=0,maxarg=0}
	"constructor" => Reduce #5 operatordefinition call operatordef {name="*",minarg=0,maxarg=0}
	"destructor" => Reduce #5 operatordefinition call operatordef {name="*",minarg=0,maxarg=0}
	"operator" => Reduce #5 operatordefinition call operatordef {name="*",minarg=0,maxarg=0}
[346]
	$ => Reduce #5 operatordefinition call operatordef {name="/",minarg=0,maxarg=0}
	IDENT => Reduce #5 operatordefinition call operatordef {name="/",minarg=0,maxarg=0}
	"function" => Reduce #5 operatordefinition call operatordef {name="/",minarg=0,maxarg=0}
	"procedure" => Reduce #5 operatordefinition call operatordef {name="/",minarg=0,maxarg=0}
	"const" => Reduce #5 operatordefinition call operatordef {name="/",minarg=0,maxarg=0}
	"typedef" => Reduce #5 operatordefinition call operatordef {name="/",minarg=0,maxarg=0}
	"struct" => Reduce #5 operatordefinition call operatordef {name="/",minarg=0,maxarg=0}
	'}' => Reduce #5 operatordefinition call operatordef {name="/",minarg=0,maxarg=0}
	"interface" => Reduce #5 operatordefinition call operatordef {name="/",minarg=0,maxarg=0}
	"class" => Reduce #5 operatordefinition call operatordef {name="/",minarg=0,maxarg=0}
	"private" => Reduce #5 operatordefinition call operatordef {name="/",minarg=0,maxarg=0}
	"public" => Reduce #5 operatordefinition call operatordef {name="/",minarg=0,maxarg=0}
	"constructor" => Reduce #5 operatordefinition call operatordef {name="/",minarg=0,maxarg=0}
	"destructor" => Reduce #5 operatordefinition call operatordef {name="/",minarg=0,maxarg=0}
	"operator" => Reduce #5 operatordefinition call operatordef {name="/",minarg=0,maxarg=0}
[347]
	$ => Reduce #5 operatordefinition call operatordef {name="%",minarg=0,maxarg=0}
	IDENT => Reduce #5 operatordefinition call operatordef {name="%",minarg=0,maxarg=0}
	"function" => Reduce #5 operatordefinition call operatordef {name="%",minarg=0,maxarg=0}
	"procedure" => Reduce #5 operatordefinition call operatordef {name="%",minarg=0,maxarg=0}
	"const" => Reduce #5 operatordefinition call operatordef {name="%",minarg=0,maxarg=0}
	"typedef" => Reduce #5 operatordefinition call operatordef {name="%",minarg=0,maxarg=0}
	"struct" => Reduce #5 operatordefinition call operatordef {name="%",minarg=0,maxarg=0}
	'}' => Reduce #5 operatordefinition call operatordef {name="%",minarg=0,maxarg=0}
	"interface" => Reduce #5 operatordefinition call operatordef {name="%",minarg=0,maxarg=0}
	"class" => Reduce #5 operatordefinition call operatordef {name="%",minarg=0,maxarg=0}
	"private" => Reduce #5 operatordefinition call operatordef {name="%",minarg=0,maxarg=0}
	"public" => Reduce #5 operatordefinition call operatordef {name="%",minarg=0,maxarg=0}
	"constructor" => Reduce #5 operatordefinition call operatordef {name="%",minarg=0,maxarg=0}
	"destructor" => Reduce #5 operatordefinition call operatordef {name="%",minarg=0,maxarg=0}
	"operator" => Reduce #5 operatordefinition call operatordef {name="%",minarg=0,maxarg=0}
[348]
	$ => Reduce #5 operatordefinition call operatordef {name="&&",minarg=0,maxarg=0}
	IDENT => Reduce #5 operatordefinition call operatordef {name="&&",minarg=0,maxarg=0}
	"function" => Reduce #5 operatordefinition call operatordef {name="&&",minarg=0,maxarg=0}
	"procedure" => Reduce #5 operatordefinition call operatordef {name="&&",minarg=0,maxarg=0}
	"const" => Reduce #5 operatordefinition call operatordef {name="&&",minarg=0,maxarg=0}
	"typedef" => Reduce #5 operatordefinition call operatordef {name="&&",minarg=0,maxarg=0}
	"struct" => Reduce #5 operatordefinition call operatordef {name="&&",minarg=0,maxarg=0}
	'}' => Reduce #5 operatordefinition call operatordef {name="&&",minarg=0,maxarg=0}
	"interface" => Reduce #5 operatordefinition call operatordef {name="&&",minarg=0,maxarg=0}
	"class" => Reduce #5 operatordefinition call operatordef {name="&&",minarg=0,maxarg=0}
	"private" => Reduce #5 operatordefinition call operatordef {name="&&",minarg=0,maxarg=0}
	"public" => Reduce #5 operatordefinition call operatordef {name="&&",minarg=0,maxarg=0}
	"constructor" => Reduce #5 operatordefinition call operatordef {name="&&",minarg=0,maxarg=0}
	"destructor" => Reduce #5 operatordefinition call operatordef {name="&&",minarg=0,maxarg=0}
	"operator" => Reduce #5 operatordefinition call operatordef {name="&&",minarg=0,maxarg=0}
[349]
	$ => Reduce #5 operatordefinition call operatordef {name="||",minarg=0,maxarg=0}
	IDENT => Reduce #5 operatordefinition call operatordef {name="||",minarg=0,maxarg=0}
	"function" => Reduce #5 operatordefinition call operatordef {name="||",minarg=0,maxarg=0}
	"procedure" => Reduce #5 operatordefinition call operatordef {name="||",minarg=0,maxarg=0}
	"const" => Reduce #5 operatordefinition call operatordef {name="||",minarg=0,maxarg=0}
	"typedef" => Reduce #5 operatordefinition call operatordef {name="||",minarg=0,maxarg=0}
	"struct" => Reduce #5 operatordefinition call operatordef {name="||",minarg=0,maxarg=0}
	'}' => Reduce #5 operatordefinition call operatordef {name="||",minarg=0,maxarg=0}
	"interface" => Reduce #5 operatordefinition call operatordef {name="||",minarg=0,maxarg=0}
	"class" => Reduce #5 operatordefinition call operatordef {name="||",minarg=0,maxarg=0}
	"private" => Reduce #5 operatordefinition call operatordef {name="||",minarg=0,maxarg=0}
	"public" => Reduce #5 operatordefinition call operatordef {name="||",minarg=0,maxarg=0}
	"constructor" => Reduce #5 operatordefinition call operatordef {name="||",minarg=0,maxarg=0}
	"destructor" => Reduce #5 operatordefinition call operatordef {name="||",minarg=0,maxarg=0}
	"operator" => Reduce #5 operatordefinition call operatordef {name="||",minarg=0,maxarg=0}
[350]
	$ => Reduce #5 operatordefinition call operatordef {name="|",minarg=0,maxarg=0}
	IDENT => Reduce #5 operatordefinition call operatordef {name="|",minarg=0,maxarg=0}
	"function" => Reduce #5 operatordefinition call operatordef {name="|",minarg=0,maxarg=0}
	"procedure" => Reduce #5 operatordefinition call operatordef {name="|",minarg=0,maxarg=0}
	"const" => Reduce #5 operatordefinition call operatordef {name="|",minarg=0,maxarg=0}
	"typedef" => Reduce #5 operatordefinition call operatordef {name="|",minarg=0,maxarg=0}
	"struct" => Reduce #5 operatordefinition call operatordef {name="|",minarg=0,maxarg=0}
	'}' => Reduce #5 operatordefinition call operatordef {name="|",minarg=0,maxarg=0}
	"interface" => Reduce #5 operatordefinition call operatordef {name="|",minarg=0,maxarg=0}
	"class" => Reduce #5 operatordefinition call operatordef {name="|",minarg=0,maxarg=0}
	"private" => Reduce #5 operatordefinition call operatordef {name="|",minarg=0,maxarg=0}
	"public" => Reduce #5 operatordefinition call operatordef {name="|",minarg=0,maxarg=0}
	"constructor" => Reduce #5 operatordefinition call operatordef {name="|",minarg=0,maxarg=0}
	"destructor" => Reduce #5 operatordefinition call operatordef {name="|",minarg=0,maxarg=0}
	"operator" => Reduce #5 operatordefinition call operatordef {name="|",minarg=0,maxarg=0}
[351]
	$ => Reduce #5 operatordefinition call operatordef {name="<<",minarg=0,maxarg=0}
	IDENT => Reduce #5 operatordefinition call operatordef {name="<<",minarg=0,maxarg=0}
	"function" => Reduce #5 operatordefinition call operatordef {name="<<",minarg=0,maxarg=0}
	"procedure" => Reduce #5 operatordefinition call operatordef {name="<<",minarg=0,maxarg=0}
	"const" => Reduce #5 operatordefinition call operatordef {name="<<",minarg=0,maxarg=0}
	"typedef" => Reduce #5 operatordefinition call operatordef {name="<<",minarg=0,maxarg=0}
	"struct" => Reduce #5 operatordefinition call operatordef {name="<<",minarg=0,maxarg=0}
	'}' => Reduce #5 operatordefinition call operatordef {name="<<",minarg=0,maxarg=0}
	"interface" => Reduce #5 operatordefinition call operatordef {name="<<",minarg=0,maxarg=0}
	"class" => Reduce #5 operatordefinition call operatordef {name="<<",minarg=0,maxarg=0}
	"private" => Reduce #5 operatordefinition call operatordef {name="<<",minarg=0,maxarg=0}
	"public" => Reduce #5 operatordefinition call operatordef {name="<<",minarg=0,maxarg=0}
	"constructor" => Reduce #5 operatordefinition call operatordef {name="<<",minarg=0,maxarg=0}
	"destructor" => Reduce #5 operatordefinition call operatordef {name="<<",minarg=0,maxarg=0}
	"operator" => Reduce #5 operatordefinition call operatordef {name="<<",minarg=0,maxarg=0}
[352]
	$ => Reduce #5 operatordefinition call operatordef {name=">>",minarg=0,maxarg=0}
	IDENT => Reduce #5 operatordefinition call operatordef {name=">>",minarg=0,maxarg=0}
	"function" => Reduce #5 operatordefinition call operatordef {name=">>",minarg=0,maxarg=0}
	"procedure" => Reduce #5 operatordefinition call operatordef {name=">>",minarg=0,maxarg=0}
	"const" => Reduce #5 operatordefinition call operatordef {name=">>",minarg=0,maxarg=0}
	"typedef" => Reduce #5 operatordefinition call operatordef {name=">>",minarg=0,maxarg=0}
	"struct" => Reduce #5 operatordefinition call operatordef {name=">>",minarg=0,maxarg=0}
	'}' => Reduce #5 operatordefinition call operatordef {name=">>",minarg=0,maxarg=0}
	"interface" => Reduce #5 operatordefinition call operatordef {name=">>",minarg=0,maxarg=0}
	"class" => Reduce #5 operatordefinition call operatordef {name=">>",minarg=0,maxarg=0}
	"private" => Reduce #5 operatordefinition call operatordef {name=">>",minarg=0,maxarg=0}
	"public" => Reduce #5 operatordefinition call operatordef {name=">>",minarg=0,maxarg=0}
	"constructor" => Reduce #5 operatordefinition call operatordef {name=">>",minarg=0,maxarg=0}
	"destructor" => Reduce #5 operatordefinition call operatordef {name=">>",minarg=0,maxarg=0}
	"operator" => Reduce #5 operatordefinition call operatordef {name=">>",minarg=0,maxarg=0}
[353]
	$ => Reduce #5 operatordefinition call operatordef {name="~",minarg=0,maxarg=0}
	IDENT => Reduce #5 operatordefinition call operatordef {name="~",minarg=0,maxarg=0}
	"function" => Reduce #5 operatordefinition call operatordef {name="~",minarg=0,maxarg=0}
	"procedure" => Reduce #5 operatordefinition call operatordef {name="~",minarg=0,maxarg=0}
	"const" => Reduce #5 operatordefinition call operatordef {name="~",minarg=0,maxarg=0}
	"typedef" => Reduce #5 operatordefinition call operatordef {name="~",minarg=0,maxarg=0}
	"struct" => Reduce #5 operatordefinition call operatordef {name="~",minarg=0,maxarg=0}
	'}' => Reduce #5 operatordefinition call operatordef {name="~",minarg=0,maxarg=0}
	"interface" => Reduce #5 operatordefinition call operatordef {name="~",minarg=0,maxarg=0}
	"class" => Reduce #5 operatordefinition call operatordef {name="~",minarg=0,maxarg=0}
	"private" => Reduce #5 operatordefinition call operatordef {name="~",minarg=0,maxarg=0}
	"public" => Reduce #5 operatordefinition call operatordef {name="~",minarg=0,maxarg=0}
	"constructor" => Reduce #5 operatordefinition call operatordef {name="~",minarg=0,maxarg=0}
	"destructor" => Reduce #5 operatordefinition call operatordef {name="~",minarg=0,maxarg=0}
	"operator" => Reduce #5 operatordefinition call operatordef {name="~",minarg=0,maxarg=0}
[354]
	$ => Reduce #5 operatordefinition call operatordef {name="!",minarg=0,maxarg=0}
	IDENT => Reduce #5 operatordefinition call operatordef {name="!",minarg=0,maxarg=0}
	"function" => Reduce #5 operatordefinition call operatordef {name="!",minarg=0,maxarg=0}
	"procedure" => Reduce #5 operatordefinition call operatordef {name="!",minarg=0,maxarg=0}
	"const" => Reduce #5 operatordefinition call operatordef {name="!",minarg=0,maxarg=0}
	"typedef" => Reduce #5 operatordefinition call operatordef {name="!",minarg=0,maxarg=0}
	"struct" => Reduce #5 operatordefinition call operatordef {name="!",minarg=0,maxarg=0}
	'}' => Reduce #5 operatordefinition call operatordef {name="!",minarg=0,maxarg=0}
	"interface" => Reduce #5 operatordefinition call operatordef {name="!",minarg=0,maxarg=0}
	"class" => Reduce #5 operatordefinition call operatordef {name="!",minarg=0,maxarg=0}
	"private" => Reduce #5 operatordefinition call operatordef {name="!",minarg=0,maxarg=0}
	"public" => Reduce #5 operatordefinition call operatordef {name="!",minarg=0,maxarg=0}
	"constructor" => Reduce #5 operatordefinition call operatordef {name="!",minarg=0,maxarg=0}
	"destructor" => Reduce #5 operatordefinition call operatordef {name="!",minarg=0,maxarg=0}
	"operator" => Reduce #5 operatordefinition call operatordef {name="!",minarg=0,maxarg=0}
[355]
	'(' => Shift goto 98
[356]
	$ => Reduce #5 operatordefinition call operatordef {name="==",minarg=1,maxarg=1}
	IDENT => Reduce #5 operatordefinition call operatordef {name="==",minarg=1,maxarg=1}
	"function" => Reduce #5 operatordefinition call operatordef {name="==",minarg=1,maxarg=1}
	"procedure" => Reduce #5 operatordefinition call operatordef {name="==",minarg=1,maxarg=1}
	"const" => Reduce #5 operatordefinition call operatordef {name="==",minarg=1,maxarg=1}
	"typedef" => Reduce #5 operatordefinition call operatordef {name="==",minarg=1,maxarg=1}
	"struct" => Reduce #5 operatordefinition call operatordef {name="==",minarg=1,maxarg=1}
	'}' => Reduce #5 operatordefinition call operatordef {name="==",minarg=1,maxarg=1}
	"interface" => Reduce #5 operatordefinition call operatordef {name="==",minarg=1,maxarg=1}
	"class" => Reduce #5 operatordefinition call operatordef {name="==",minarg=1,maxarg=1}
	"private" => Reduce #5 operatordefinition call operatordef {name="==",minarg=1,maxarg=1}
	"public" => Reduce #5 operatordefinition call operatordef {name="==",minarg=1,maxarg=1}
	"constructor" => Reduce #5 operatordefinition call operatordef {name="==",minarg=1,maxarg=1}
	"destructor" => Reduce #5 operatordefinition call operatordef {name="==",minarg=1,maxarg=1}
	"operator" => Reduce #5 operatordefinition call operatordef {name="==",minarg=1,maxarg=1}
[357]
	$ => Reduce #5 operatordefinition call operatordef {name="!=",minarg=1,maxarg=1}
	IDENT => Reduce #5 operatordefinition call operatordef {name="!=",minarg=1,maxarg=1}
	"function" => Reduce #5 operatordefinition call operatordef {name="!=",minarg=1,maxarg=1}
	"procedure" => Reduce #5 operatordefinition call operatordef {name="!=",minarg=1,maxarg=1}
	"const" => Reduce #5 operatordefinition call operatordef {name="!=",minarg=1,maxarg=1}
	"typedef" => Reduce #5 operatordefinition call operatordef {name="!=",minarg=1,maxarg=1}
	"struct" => Reduce #5 operatordefinition call operatordef {name="!=",minarg=1,maxarg=1}
	'}' => Reduce #5 operatordefinition call operatordef {name="!=",minarg=1,maxarg=1}
	"interface" => Reduce #5 operatordefinition call operatordef {name="!=",minarg=1,maxarg=1}
	"class" => Reduce #5 operatordefinition call operatordef {name="!=",minarg=1,maxarg=1}
	"private" => Reduce #5 operatordefinition call operatordef {name="!=",minarg=1,maxarg=1}
	"public" => Reduce #5 operatordefinition call operatordef {name="!=",minarg=1,maxarg=1}
	"constructor" => Reduce #5 operatordefinition call operatordef {name="!=",minarg=1,maxarg=1}
	"destructor" => Reduce #5 operatordefinition call operatordef {name="!=",minarg=1,maxarg=1}
	"operator" => Reduce #5 operatordefinition call operatordef {name="!=",minarg=1,maxarg=1}
[358]
	$ => Reduce #5 operatordefinition call operatordef {name=">=",minarg=1,maxarg=1}
	IDENT => Reduce #5 operatordefinition call operatordef {name=">=",minarg=1,maxarg=1}
	"function" => Reduce #5 operatordefinition call operatordef {name=">=",minarg=1,maxarg=1}
	"procedure" => Reduce #5 operatordefinition call operatordef {name=">=",minarg=1,maxarg=1}
	"const" => Reduce #5 operatordefinition call operatordef {name=">=",minarg=1,maxarg=1}
	"typedef" => Reduce #5 operatordefinition call operatordef {name=">=",minarg=1,maxarg=1}
	"struct" => Reduce #5 operatordefinition call operatordef {name=">=",minarg=1,maxarg=1}
	'}' => Reduce #5 operatordefinition call operatordef {name=">=",minarg=1,maxarg=1}
	"interface" => Reduce #5 operatordefinition call operatordef {name=">=",minarg=1,maxarg=1}
	"class" => Reduce #5 operatordefinition call operatordef {name=">=",minarg=1,maxarg=1}
	"private" => Reduce #5 operatordefinition call operatordef {name=">=",minarg=1,maxarg=1}
	"public" => Reduce #5 operatordefinition call operatordef {name=">=",minarg=1,maxarg=1}
	"constructor" => Reduce #5 operatordefinition call operatordef {name=">=",minarg=1,maxarg=1}
	"destructor" => Reduce #5 operatordefinition call operatordef {name=">=",minarg=1,maxarg=1}
	"operator" => Reduce #5 operatordefinition call operatordef {name=">=",minarg=1,maxarg=1}
[359]
	$ => Reduce #5 operatordefinition call operatordef {name="<=",minarg=1,maxarg=1}
	IDENT => Reduce #5 operatordefinition call operatordef {name="<=",minarg=1,maxarg=1}
	"function" => Reduce #5 operatordefinition call operatordef {name="<=",minarg=1,maxarg=1}
	"procedure" => Reduce #5 operatordefinition call operatordef {name="<=",minarg=1,maxarg=1}
	"const" => Reduce #5 operatordefinition call operatordef {name="<=",minarg=1,maxarg=1}
	"typedef" => Reduce #5 operatordefinition call operatordef {name="<=",minarg=1,maxarg=1}
	"struct" => Reduce #5 operatordefinition call operatordef {name="<=",minarg=1,maxarg=1}
	'}' => Reduce #5 operatordefinition call operatordef {name="<=",minarg=1,maxarg=1}
	"interface" => Reduce #5 operatordefinition call operatordef {name="<=",minarg=1,maxarg=1}
	"class" => Reduce #5 operatordefinition call operatordef {name="<=",minarg=1,maxarg=1}
	"private" => Reduce #5 operatordefinition call operatordef {name="<=",minarg=1,maxarg=1}
	"public" => Reduce #5 operatordefinition call operatordef {name="<=",minarg=1,maxarg=1}
	"constructor" => Reduce #5 operatordefinition call operatordef {name="<=",minarg=1,maxarg=1}
	"destructor" => Reduce #5 operatordefinition call operatordef {name="<=",minarg=1,maxarg=1}
	"operator" => Reduce #5 operatordefinition call operatordef {name="<=",minarg=1,maxarg=1}
[360]
	$ => Reduce #5 operatordefinition call operatordef {name=">",minarg=1,maxarg=1}
	IDENT => Reduce #5 operatordefinition call operatordef {name=">",minarg=1,maxarg=1}
	"function" => Reduce #5 operatordefinition call operatordef {name=">",minarg=1,maxarg=1}
	"procedure" => Reduce #5 operatordefinition call operatordef {name=">",minarg=1,maxarg=1}
	"const" => Reduce #5 operatordefinition call operatordef {name=">",minarg=1,maxarg=1}
	"typedef" => Reduce #5 operatordefinition call operatordef {name=">",minarg=1,maxarg=1}
	"struct" => Reduce #5 operatordefinition call operatordef {name=">",minarg=1,maxarg=1}
	'}' => Reduce #5 operatordefinition call operatordef {name=">",minarg=1,maxarg=1}
	"interface" => Reduce #5 operatordefinition call operatordef {name=">",minarg=1,maxarg=1}
	"class" => Reduce #5 operatordefinition call operatordef {name=">",minarg=1,maxarg=1}
	"private" => Reduce #5 operatordefinition call operatordef {name=">",minarg=1,maxarg=1}
	"public" => Reduce #5 operatordefinition call operatordef {name=">",minarg=1,maxarg=1}
	"constructor" => Reduce #5 operatordefinition call operatordef {name=">",minarg=1,maxarg=1}
	"destructor" => Reduce #5 operatordefinition call operatordef {name=">",minarg=1,maxarg=1}
	"operator" => Reduce #5 operatordefinition call operatordef {name=">",minarg=1,maxarg=1}
[361]
	$ => Reduce #5 operatordefinition call operatordef {name="<",minarg=1,maxarg=1}
	IDENT => Reduce #5 operatordefinition call operatordef {name="<",minarg=1,maxarg=1}
	"function" => Reduce #5 operatordefinition call operatordef {name="<",minarg=1,maxarg=1}
	"procedure" => Reduce #5 operatordefinition call operatordef {name="<",minarg=1,maxarg=1}
	"const" => Reduce #5 operatordefinition call operatordef {name="<",minarg=1,maxarg=1}
	"typedef" => Reduce #5 operatordefinition call operatordef {name="<",minarg=1,maxarg=1}
	"struct" => Reduce #5 operatordefinition call operatordef {name="<",minarg=1,maxarg=1}
	'}' => Reduce #5 operatordefinition call operatordef {name="<",minarg=1,maxarg=1}
	"interface" => Reduce #5 operatordefinition call operatordef {name="<",minarg=1,maxarg=1}
	"class" => Reduce #5 operatordefinition call operatordef {name="<",minarg=1,maxarg=1}
	"private" => Reduce #5 operatordefinition call operatordef {name="<",minarg=1,maxarg=1}
	"public" => Reduce #5 operatordefinition call operatordef {name="<",minarg=1,maxarg=1}
	"constructor" => Reduce #5 operatordefinition call operatordef {name="<",minarg=1,maxarg=1}
	"destructor" => Reduce #5 operatordefinition call operatordef {name="<",minarg=1,maxarg=1}
	"operator" => Reduce #5 operatordefinition call operatordef {name="<",minarg=1,maxarg=1}
[362]
	$ => Reduce #9 extern_definition call extern_funcdef
	IDENT => Reduce #9 extern_definition call extern_funcdef
	"extern" => Reduce #9 extern_definition call extern_funcdef
	"function" => Reduce #9 extern_definition call extern_funcdef
	"procedure" => Reduce #9 extern_definition call extern_funcdef
	"const" => Reduce #9 extern_definition call extern_funcdef
	"typedef" => Reduce #9 extern_definition call extern_funcdef
	"struct" => Reduce #9 extern_definition call extern_funcdef
	"interface" => Reduce #9 extern_definition call extern_funcdef
	"class" => Reduce #9 extern_definition call extern_funcdef
	"private" => Reduce #9 extern_definition call extern_funcdef
	"public" => Reduce #9 extern_definition call extern_funcdef
	"main" => Reduce #9 extern_definition call extern_funcdef
[363]
	';' => Shift goto 374
[364]
	$ => Reduce #9 extern_definition call extern_procdef_vararg
	IDENT => Reduce #9 extern_definition call extern_procdef_vararg
	"extern" => Reduce #9 extern_definition call extern_procdef_vararg
	"function" => Reduce #9 extern_definition call extern_procdef_vararg
	"procedure" => Reduce #9 extern_definition call extern_procdef_vararg
	"const" => Reduce #9 extern_definition call extern_procdef_vararg
	"typedef" => Reduce #9 extern_definition call extern_procdef_vararg
	"struct" => Reduce #9 extern_definition call extern_procdef_vararg
	"interface" => Reduce #9 extern_definition call extern_procdef_vararg
	"class" => Reduce #9 extern_definition call extern_procdef_vararg
	"private" => Reduce #9 extern_definition call extern_procdef_vararg
	"public" => Reduce #9 extern_definition call extern_procdef_vararg
	"main" => Reduce #9 extern_definition call extern_procdef_vararg
[365]
	'}' => Shift goto 375
[366]
	'}' => Shift goto 376
[367]
	'}' => Shift goto 377
[368]
	$ => Reduce #6 callablebody call callablebody "&"
	BOOLEAN => Reduce #6 callablebody call callablebody "&"
	IDENT => Reduce #6 callablebody call callablebody "&"
	DQSTRING => Reduce #6 callablebody call callablebody "&"
	SQSTRING => Reduce #6 callablebody call callablebody "&"
	CARDINAL => Reduce #6 callablebody call callablebody "&"
	INTEGER => Reduce #6 callablebody call callablebody "&"
	FLOAT => Reduce #6 callablebody call callablebody "&"
	"function" => Reduce #6 callablebody call callablebody "&"
	'(' => Reduce #6 callablebody call callablebody "&"
	"procedure" => Reduce #6 callablebody call callablebody "&"
	"const" => Reduce #6 callablebody call callablebody "&"
	'&' => Reduce #6 callablebody call callablebody "&"
	"typedef" => Reduce #6 callablebody call callablebody "&"
	"struct" => Reduce #6 callablebody call callablebody "&"
	'{' => Reduce #6 callablebody call callablebody "&"
	'}' => Reduce #6 callablebody call callablebody "&"
	"interface" => Reduce #6 callablebody call callablebody "&"
	"class" => Reduce #6 callablebody call callablebody "&"
	"private" => Reduce #6 callablebody call callablebody "&"
	"public" => Reduce #6 callablebody call callablebody "&"
	"constructor" => Reduce #6 callablebody call callablebody "&"
	"destructor" => Reduce #6 callablebody call callablebody "&"
	"operator" => Reduce #6 callablebody call callablebody "&"
	'+' => Reduce #6 callablebody call callablebody "&"
	'-' => Reduce #6 callablebody call callablebody "&"
	'*' => Reduce #6 callablebody call callablebody "&"
	'~' => Reduce #6 callablebody call callablebody "&"
	'!' => Reduce #6 callablebody call callablebody "&"
	"main" => Reduce #6 callablebody call callablebody "&"
	"var" => Reduce #6 callablebody call callablebody "&"
	"return" => Reduce #6 callablebody call callablebody "&"
	"delete" => Reduce #6 callablebody call callablebody "&"
	"if" => Reduce #6 callablebody call callablebody "&"
	"while" => Reduce #6 callablebody call callablebody "&"
	"new" => Reduce #6 callablebody call callablebody "&"
	"null" => Reduce #6 callablebody call callablebody "&"
[369]
	';' => Shift goto 378
	"const" => Shift goto 379
[370]
	$ => Reduce #6 interface_definition call interface_procdef "&"
	"function" => Reduce #6 interface_definition call interface_procdef "&"
	"procedure" => Reduce #6 interface_definition call interface_procdef "&"
	'}' => Reduce #6 interface_definition call interface_procdef "&"
[371]
	';' => Shift goto 380
[372]
	$ => Reduce #6 operatordefinition call operatordef {name="()",minarg=0,maxarg=1024}
	IDENT => Reduce #6 operatordefinition call operatordef {name="()",minarg=0,maxarg=1024}
	"function" => Reduce #6 operatordefinition call operatordef {name="()",minarg=0,maxarg=1024}
	"procedure" => Reduce #6 operatordefinition call operatordef {name="()",minarg=0,maxarg=1024}
	"const" => Reduce #6 operatordefinition call operatordef {name="()",minarg=0,maxarg=1024}
	"typedef" => Reduce #6 operatordefinition call operatordef {name="()",minarg=0,maxarg=1024}
	"struct" => Reduce #6 operatordefinition call operatordef {name="()",minarg=0,maxarg=1024}
	'}' => Reduce #6 operatordefinition call operatordef {name="()",minarg=0,maxarg=1024}
	"interface" => Reduce #6 operatordefinition call operatordef {name="()",minarg=0,maxarg=1024}
	"class" => Reduce #6 operatordefinition call operatordef {name="()",minarg=0,maxarg=1024}
	"private" => Reduce #6 operatordefinition call operatordef {name="()",minarg=0,maxarg=1024}
	"public" => Reduce #6 operatordefinition call operatordef {name="()",minarg=0,maxarg=1024}
	"constructor" => Reduce #6 operatordefinition call operatordef {name="()",minarg=0,maxarg=1024}
	"destructor" => Reduce #6 operatordefinition call operatordef {name="()",minarg=0,maxarg=1024}
	"operator" => Reduce #6 operatordefinition call operatordef {name="()",minarg=0,maxarg=1024}
[373]
	$ => Reduce #6 operatordefinition call operatordef {name="[]",minarg=0,maxarg=1024}
	IDENT => Reduce #6 operatordefinition call operatordef {name="[]",minarg=0,maxarg=1024}
	"function" => Reduce #6 operatordefinition call operatordef {name="[]",minarg=0,maxarg=1024}
	"procedure" => Reduce #6 operatordefinition call operatordef {name="[]",minarg=0,maxarg=1024}
	"const" => Reduce #6 operatordefinition call operatordef {name="[]",minarg=0,maxarg=1024}
	"typedef" => Reduce #6 operatordefinition call operatordef {name="[]",minarg=0,maxarg=1024}
	"struct" => Reduce #6 operatordefinition call operatordef {name="[]",minarg=0,maxarg=1024}
	'}' => Reduce #6 operatordefinition call operatordef {name="[]",minarg=0,maxarg=1024}
	"interface" => Reduce #6 operatordefinition call operatordef {name="[]",minarg=0,maxarg=1024}
	"class" => Reduce #6 operatordefinition call operatordef {name="[]",minarg=0,maxarg=1024}
	"private" => Reduce #6 operatordefinition call operatordef {name="[]",minarg=0,maxarg=1024}
	"public" => Reduce #6 operatordefinition call operatordef {name="[]",minarg=0,maxarg=1024}
	"constructor" => Reduce #6 operatordefinition call operatordef {name="[]",minarg=0,maxarg=1024}
	"destructor" => Reduce #6 operatordefinition call operatordef {name="[]",minarg=0,maxarg=1024}
	"operator" => Reduce #6 operatordefinition call operatordef {name="[]",minarg=0,maxarg=1024}
[374]
	$ => Reduce #10 extern_definition call extern_funcdef_vararg
	IDENT => Reduce #10 extern_definition call extern_funcdef_vararg
	"extern" => Reduce #10 extern_definition call extern_funcdef_vararg
	"function" => Reduce #10 extern_definition call extern_funcdef_vararg
	"procedure" => Reduce #10 extern_definition call extern_funcdef_vararg
	"const" => Reduce #10 extern_definition call extern_funcdef_vararg
	"typedef" => Reduce #10 extern_definition call extern_funcdef_vararg
	"struct" => Reduce #10 extern_definition call extern_funcdef_vararg
	"interface" => Reduce #10 extern_definition call extern_funcdef_vararg
	"class" => Reduce #10 extern_definition call extern_funcdef_vararg
	"private" => Reduce #10 extern_definition call extern_funcdef_vararg
	"public" => Reduce #10 extern_definition call extern_funcdef_vararg
	"main" => Reduce #10 extern_definition call extern_funcdef_vararg
[375]
	$ => Reduce #7 statement call conditional_if
	BOOLEAN => Reduce #7 statement call conditional_if
	IDENT => Reduce #7 statement call conditional_if
	DQSTRING => Reduce #7 statement call conditional_if
	SQSTRING => Reduce #7 statement call conditional_if
	CARDINAL => Reduce #7 statement call conditional_if
	INTEGER => Reduce #7 statement call conditional_if
	FLOAT => Reduce #7 statement call conditional_if
	"function" => Reduce #7 statement call conditional_if
	'(' => Reduce #7 statement call conditional_if
	"procedure" => Reduce #7 statement call conditional_if
	'&' => Reduce #7 statement call conditional_if
	"typedef" => Reduce #7 statement call conditional_if
	'{' => Reduce #7 statement call conditional_if
	'}' => Reduce #7 statement call conditional_if
	"private" => Reduce #7 statement call conditional_if
	"public" => Reduce #7 statement call conditional_if
	'+' => Reduce #7 statement call conditional_if
	'-' => Reduce #7 statement call conditional_if
	'*' => Reduce #7 statement call conditional_if
	'~' => Reduce #7 statement call conditional_if
	'!' => Reduce #7 statement call conditional_if
	"var" => Reduce #7 statement call conditional_if
	"return" => Reduce #7 statement call conditional_if
	"delete" => Reduce #7 statement call conditional_if
	"if" => Reduce #7 statement call conditional_if
	"else" => Shift goto 381
	"while" => Reduce #7 statement call conditional_if
	"new" => Reduce #7 statement call conditional_if
	"null" => Reduce #7 statement call conditional_if
[376]
	$ => Reduce #7 statement call conditional_while
	BOOLEAN => Reduce #7 statement call conditional_while
	IDENT => Reduce #7 statement call conditional_while
	DQSTRING => Reduce #7 statement call conditional_while
	SQSTRING => Reduce #7 statement call conditional_while
	CARDINAL => Reduce #7 statement call conditional_while
	INTEGER => Reduce #7 statement call conditional_while
	FLOAT => Reduce #7 statement call conditional_while
	"function" => Reduce #7 statement call conditional_while
	'(' => Reduce #7 statement call conditional_while
	"procedure" => Reduce #7 statement call conditional_while
	'&' => Reduce #7 statement call conditional_while
	"typedef" => Reduce #7 statement call conditional_while
	'{' => Reduce #7 statement call conditional_while
	'}' => Reduce #7 statement call conditional_while
	"private" => Reduce #7 statement call conditional_while
	"public" => Reduce #7 statement call conditional_while
	'+' => Reduce #7 statement call conditional_while
	'-' => Reduce #7 statement call conditional_while
	'*' => Reduce #7 statement call conditional_while
	'~' => Reduce #7 statement call conditional_while
	'!' => Reduce #7 statement call conditional_while
	"var" => Reduce #7 statement call conditional_while
	"return" => Reduce #7 statement call conditional_while
	"delete" => Reduce #7 statement call conditional_while
	"if" => Reduce #7 statement call conditional_while
	"while" => Reduce #7 statement call conditional_while
	"new" => Reduce #7 statement call conditional_while
	"null" => Reduce #7 statement call conditional_while
[377]
	$ => Reduce #7 callablebody call callablebody "const&"
	BOOLEAN => Reduce #7 callablebody call callablebody "const&"
	IDENT => Reduce #7 callablebody call callablebody "const&"
	DQSTRING => Reduce #7 callablebody call callablebody "const&"
	SQSTRING => Reduce #7 callablebody call callablebody "const&"
	CARDINAL => Reduce #7 callablebody call callablebody "const&"
	INTEGER => Reduce #7 callablebody call callablebody "const&"
	FLOAT => Reduce #7 callablebody call callablebody "const&"
	"function" => Reduce #7 callablebody call callablebody "const&"
	'(' => Reduce #7 callablebody call callablebody "const&"
	"procedure" => Reduce #7 callablebody call callablebody "const&"
	"const" => Reduce #7 callablebody call callablebody "const&"
	'&' => Reduce #7 callablebody call callablebody "const&"
	"typedef" => Reduce #7 callablebody call callablebody "const&"
	"struct" => Reduce #7 callablebody call callablebody "const&"
	'{' => Reduce #7 callablebody call callablebody "const&"
	'}' => Reduce #7 callablebody call callablebody "const&"
	"interface" => Reduce #7 callablebody call callablebody "const&"
	"class" => Reduce #7 callablebody call callablebody "const&"
	"private" => Reduce #7 callablebody call callablebody "const&"
	"public" => Reduce #7 callablebody call callablebody "const&"
	"constructor" => Reduce #7 callablebody call callablebody "const&"
	"destructor" => Reduce #7 callablebody call callablebody "const&"
	"operator" => Reduce #7 callablebody call callablebody "const&"
	'+' => Reduce #7 callablebody call callablebody "const&"
	'-' => Reduce #7 callablebody call callablebody "const&"
	'*' => Reduce #7 callablebody call callablebody "const&"
	'~' => Reduce #7 callablebody call callablebody "const&"
	'!' => Reduce #7 callablebody call callablebody "const&"
	"main" => Reduce #7 callablebody call callablebody "const&"
	"var" => Reduce #7 callablebody call callablebody "const&"
	"return" => Reduce #7 callablebody call callablebody "const&"
	"delete" => Reduce #7 callablebody call callablebody "const&"
	"if" => Reduce #7 callablebody call callablebody "const&"
	"while" => Reduce #7 callablebody call callablebody "const&"
	"new" => Reduce #7 callablebody call callablebody "const&"
	"null" => Reduce #7 callablebody call callablebody "const&"
[378]
	$ => Reduce #7 interface_definition call interface_funcdef "&"
	"function" => Reduce #7 interface_definition call interface_funcdef "&"
	"procedure" => Reduce #7 interface_definition call interface_funcdef "&"
	'}' => Reduce #7 interface_definition call interface_funcdef "&"
[379]
	';' => Shift goto 382
[380]
	$ => Reduce #7 interface_definition call interface_procdef "const&"
	"function" => Reduce #7 interface_definition call interface_procdef "const&"
	"procedure" => Reduce #7 interface_definition call interface_procdef "const&"
	'}' => Reduce #7 interface_definition call interface_procdef "const&"
[381]
	'{' => Shift goto 383
[382]
	$ => Reduce #8 interface_definition call interface_funcdef "const&"
	"function" => Reduce #8 interface_definition call interface_funcdef "const&"
	"procedure" => Reduce #8 interface_definition call interface_funcdef "const&"
	'}' => Reduce #8 interface_definition call interface_funcdef "const&"
[383]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	"function" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	'(' => Shift goto 77
	"procedure" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	'&' => Shift goto 78
	"typedef" => Shift goto 19
	'{' => Shift goto 79
	'}' => Reduce #0 statementlist
	"private" => Shift goto 23
	"public" => Shift goto 24
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"var" => Shift goto 85
	"return" => Shift goto 86
	"delete" => Shift goto 87
	"if" => Shift goto 88
	"while" => Shift goto 89
	"new" => Shift goto 90
	"null" => Shift goto 91
[384]
	'}' => Shift goto 385
[385]
	$ => Reduce #11 statement call conditional_if_else
	BOOLEAN => Reduce #11 statement call conditional_if_else
	IDENT => Reduce #11 statement call conditional_if_else
	DQSTRING => Reduce #11 statement call conditional_if_else
	SQSTRING => Reduce #11 statement call conditional_if_else
	CARDINAL => Reduce #11 statement call conditional_if_else
	INTEGER => Reduce #11 statement call conditional_if_else
	FLOAT => Reduce #11 statement call conditional_if_else
	"function" => Reduce #11 statement call conditional_if_else
	'(' => Reduce #11 statement call conditional_if_else
	"procedure" => Reduce #11 statement call conditional_if_else
	'&' => Reduce #11 statement call conditional_if_else
	"typedef" => Reduce #11 statement call conditional_if_else
	'{' => Reduce #11 statement call conditional_if_else
	'}' => Reduce #11 statement call conditional_if_else
	"private" => Reduce #11 statement call conditional_if_else
	"public" => Reduce #11 statement call conditional_if_else
	'+' => Reduce #11 statement call conditional_if_else
	'-' => Reduce #11 statement call conditional_if_else
	'*' => Reduce #11 statement call conditional_if_else
	'~' => Reduce #11 statement call conditional_if_else
	'!' => Reduce #11 statement call conditional_if_else
	"var" => Reduce #11 statement call conditional_if_else
	"return" => Reduce #11 statement call conditional_if_else
	"delete" => Reduce #11 statement call conditional_if_else
	"if" => Reduce #11 statement call conditional_if_else
	"while" => Reduce #11 statement call conditional_if_else
	"new" => Reduce #11 statement call conditional_if_else
	"null" => Reduce #11 statement call conditional_if_else

-- Goto table:
[1]
	extern_definitionlist => 2
	extern_definition => 3
[2]
	free_definitionlist => 5
	struct_definition => 6
	free_definition => 7
	typename => 8
	typespec => 9
	typedefinition => 10
	structdefinition => 11
	interfacedefinition => 12
	classdefinition => 13
	linkage => 14
	functiondefinition => 15
	variabledefinition => 16
[3]
	extern_definitionlist => 25
	extern_definition => 3
[5]
	main_procedure => 27
[7]
	free_definitionlist => 29
	struct_definition => 6
	free_definition => 7
	typename => 8
	typespec => 9
	typedefinition => 10
	structdefinition => 11
	interfacedefinition => 12
	classdefinition => 13
	linkage => 14
	functiondefinition => 15
	variabledefinition => 16
[18]
	typename => 38
[19]
	typename => 39
	typepath => 40
[34]
	typename => 8
	typespec => 51
[37]
	typename => 53
[44]
	typename => 8
	typespec => 61
[46]
	typedefinition => 63
	linkage => 14
	functiondefinition => 64
	codeblock => 65
	statementlist => 66
	statement => 67
	expression => 68
	iexpression => 69
[49]
	expression => 93
	iexpression => 69
[50]
	expression => 95
	iexpression => 69
[52]
	callablebody => 97
[57]
	struct_definitionlist => 101
	struct_definition => 102
	typename => 8
	typespec => 9
	typedefinition => 10
	structdefinition => 11
	variabledefinition => 16
[58]
	interface_definitionlist => 103
	interface_definition => 104
[59]
	class_definitionlist => 107
	class_definition => 108
	typename => 8
	typespec => 9
	typedefinition => 109
	structdefinition => 110
	interfacedefinition => 111
	classdefinition => 112
	linkage => 113
	functiondefinition => 114
	constructordefinition => 115
	operatordefinition => 116
	variabledefinition => 117
[60]
	typename => 39
	typepath => 119
	inheritlist => 120
[67]
	typedefinition => 63
	linkage => 14
	functiondefinition => 64
	statementlist => 125
	statement => 67
	expression => 68
	iexpression => 69
[68]
	indirection => 126
[77]
	expression => 163
	iexpression => 69
[78]
	expression => 164
	iexpression => 69
[79]
	typedefinition => 63
	linkage => 14
	functiondefinition => 64
	codeblock => 165
	statementlist => 66
	statement => 67
	expression => 166
	iexpression => 69
	expressionlist => 167
[80]
	expression => 169
	iexpression => 69
[81]
	expression => 170
	iexpression => 69
[82]
	expression => 171
	iexpression => 69
[83]
	expression => 172
	iexpression => 69
[84]
	expression => 173
	iexpression => 69
[85]
	typename => 8
	typespec => 9
	variabledefinition => 174
[86]
	expression => 175
	iexpression => 69
[87]
	expression => 176
	iexpression => 69
[90]
	typename => 8
	typespec => 179
[93]
	indirection => 126
[94]
	expression => 180
	iexpression => 69
	expressionlist => 167
[95]
	indirection => 126
[96]
	callablebody => 182
[98]
	typename => 8
	typespec => 183
	parameterlist => 184
	parameters => 185
	paramdecl => 186
[102]
	struct_definitionlist => 189
	struct_definition => 102
	typename => 8
	typespec => 9
	typedefinition => 10
	structdefinition => 11
	variabledefinition => 16
[104]
	interface_definitionlist => 191
	interface_definition => 104
[105]
	typename => 8
	typespec => 192
[108]
	class_definitionlist => 195
	class_definition => 108
	typename => 8
	typespec => 9
	typedefinition => 109
	structdefinition => 110
	interfacedefinition => 111
	classdefinition => 112
	linkage => 113
	functiondefinition => 114
	constructordefinition => 115
	operatordefinition => 116
	variabledefinition => 117
[122]
	extern_parameters => 204
	extern_paramlist => 205
	typename => 8
	typespec => 206
[127]
	expression => 180
	iexpression => 69
	expressionlist => 208
[129]
	expression => 210
	iexpression => 69
[130]
	expression => 211
	iexpression => 69
[131]
	indirection => 212
[132]
	expression => 213
	iexpression => 69
[133]
	expression => 214
	iexpression => 69
[134]
	expression => 215
	iexpression => 69
[135]
	expression => 216
	iexpression => 69
[136]
	expression => 217
	iexpression => 69
[137]
	expression => 218
	iexpression => 69
[138]
	expression => 219
	iexpression => 69
[139]
	expression => 220
	iexpression => 69
[140]
	expression => 221
	iexpression => 69
[141]
	expression => 222
	iexpression => 69
[142]
	expression => 223
	iexpression => 69
[143]
	expression => 180
	iexpression => 69
	expressionlist => 224
[144]
	expression => 225
	iexpression => 69
[145]
	expression => 226
	iexpression => 69
[146]
	expression => 227
	iexpression => 69
[147]
	expression => 228
	iexpression => 69
[148]
	expression => 229
	iexpression => 69
[149]
	expression => 230
	iexpression => 69
[150]
	expression => 231
	iexpression => 69
[151]
	expression => 232
	iexpression => 69
[152]
	expression => 233
	iexpression => 69
[153]
	expression => 234
	iexpression => 69
[154]
	expression => 235
	iexpression => 69
[155]
	expression => 236
	iexpression => 69
[156]
	expression => 237
	iexpression => 69
[157]
	expression => 238
	iexpression => 69
[158]
	expression => 239
	iexpression => 69
[159]
	expression => 240
	iexpression => 69
[160]
	expression => 241
	iexpression => 69
[161]
	expression => 242
	iexpression => 69
[163]
	indirection => 126
[164]
	indirection => 126
[166]
	indirection => 126
[169]
	indirection => 126
[170]
	indirection => 126
[171]
	indirection => 126
[172]
	indirection => 126
[173]
	indirection => 126
[175]
	indirection => 126
[176]
	indirection => 126
[177]
	expression => 251
	iexpression => 69
[178]
	expression => 252
	iexpression => 69
[180]
	indirection => 126
[197]
	callablebody => 260
[200]
	typedefinition => 63
	linkage => 14
	functiondefinition => 64
	codeblock => 284
	statementlist => 66
	statement => 67
	expression => 68
	iexpression => 69
[201]
	typename => 39
	typepath => 119
	inheritlist => 285
[202]
	class_definitionlist => 286
	class_definition => 108
	typename => 8
	typespec => 9
	typedefinition => 109
	structdefinition => 110
	interfacedefinition => 111
	classdefinition => 112
	linkage => 113
	functiondefinition => 114
	constructordefinition => 115
	operatordefinition => 116
	variabledefinition => 117
[203]
	extern_parameters => 204
	extern_paramlist => 287
	typename => 8
	typespec => 206
[210]
	indirection => 126
[211]
	indirection => 126
[213]
	indirection => 126
[214]
	indirection => 126
[215]
	indirection => 126
[216]
	indirection => 126
[217]
	indirection => 126
[218]
	indirection => 126
[219]
	indirection => 126
[220]
	indirection => 126
[221]
	indirection => 126
[222]
	indirection => 126
[223]
	indirection => 126
[225]
	indirection => 126
[226]
	indirection => 126
[227]
	indirection => 126
[228]
	indirection => 126
[229]
	indirection => 126
[230]
	indirection => 126
[231]
	indirection => 126
[232]
	indirection => 126
[233]
	indirection => 126
[234]
	indirection => 126
[235]
	indirection => 126
[236]
	indirection => 126
[237]
	indirection => 126
[238]
	indirection => 126
[239]
	indirection => 126
[240]
	indirection => 126
[241]
	indirection => 126
[242]
	indirection => 126
[246]
	expression => 180
	iexpression => 69
	expressionlist => 293
[251]
	indirection => 126
[252]
	indirection => 126
[253]
	expression => 296
	iexpression => 69
[254]
	expression => 297
	iexpression => 69
[257]
	typename => 8
	typespec => 183
	parameters => 300
	paramdecl => 186
[259]
	typename => 8
	typespec => 183
	parameterlist => 302
	parameters => 185
	paramdecl => 186
[262]
	typename => 8
	typespec => 304
[263]
	typename => 8
	typespec => 305
[264]
	typename => 8
	typespec => 306
[265]
	typename => 8
	typespec => 307
[266]
	typename => 8
	typespec => 308
[267]
	typename => 8
	typespec => 309
[268]
	typename => 8
	typespec => 310
[269]
	typename => 8
	typespec => 311
[270]
	typename => 8
	typespec => 312
[271]
	typename => 8
	typespec => 313
[272]
	typename => 8
	typespec => 314
[273]
	typename => 8
	typespec => 315
[274]
	typename => 8
	typespec => 316
[275]
	typename => 8
	typespec => 317
[276]
	typename => 8
	typespec => 318
[278]
	typename => 8
	typespec => 320
[279]
	typename => 8
	typespec => 321
[280]
	typename => 8
	typespec => 322
[281]
	typename => 8
	typespec => 323
[282]
	typename => 8
	typespec => 324
[283]
	typename => 8
	typespec => 325
[290]
	extern_parameters => 332
	typename => 8
	typespec => 206
[296]
	indirection => 126
[297]
	indirection => 126
[299]
	typedefinition => 63
	linkage => 14
	functiondefinition => 64
	codeblock => 336
	statementlist => 66
	statement => 67
	expression => 68
	iexpression => 69
[301]
	typename => 8
	typespec => 183
	parameterlist => 337
	parameters => 185
	paramdecl => 186
[303]
	typename => 8
	typespec => 339
[304]
	callablebody => 340
[305]
	callablebody => 341
[306]
	callablebody => 342
[307]
	callablebody => 343
[308]
	callablebody => 344
[309]
	callablebody => 345
[310]
	callablebody => 346
[311]
	callablebody => 347
[312]
	callablebody => 348
[313]
	callablebody => 349
[314]
	callablebody => 350
[315]
	callablebody => 351
[316]
	callablebody => 352
[317]
	callablebody => 353
[318]
	callablebody => 354
[319]
	typename => 8
	typespec => 355
[320]
	callablebody => 356
[321]
	callablebody => 357
[322]
	callablebody => 358
[323]
	callablebody => 359
[324]
	callablebody => 360
[325]
	callablebody => 361
[333]
	typedefinition => 63
	linkage => 14
	functiondefinition => 64
	codeblock => 365
	statementlist => 66
	statement => 67
	expression => 68
	iexpression => 69
[334]
	typedefinition => 63
	linkage => 14
	functiondefinition => 64
	codeblock => 366
	statementlist => 66
	statement => 67
	expression => 68
	iexpression => 69
[335]
	typedefinition => 63
	linkage => 14
	functiondefinition => 64
	codeblock => 367
	statementlist => 66
	statement => 67
	expression => 68
	iexpression => 69
[339]
	callablebody => 372
[355]
	callablebody => 373
[383]
	typedefinition => 63
	linkage => 14
	functiondefinition => 64
	codeblock => 384
	statementlist => 66
	statement => 67
	expression => 68
	iexpression => 69

