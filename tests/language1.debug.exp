== Language 'test', type system 'language1/typesystem' ==
-- Lexems:
TOKEN BOOLEAN ((true)|(false)) 0 [tf]  ~ 1
TOKEN IDENT [a-zA-Z_]+[a-zA-Z_0-9]* 0 [abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_]  ~ 2
TOKEN DQSTRING ["]((([^\\"\n]+)|([\\][^"\n]))*)["] 1 ["]  ~ 3
TOKEN SQSTRING [']((([^\\'\n]+)|([\\][^'\n]))*)['] 1 [']  ~ 4
TOKEN CARDINAL [0123456789]+ 0 [0123456789]  ~ 5
TOKEN INTEGER [-][0123456789]+ 0 [-]  ~ 6
TOKEN FLOAT [-]{0,1}[0123456789]+[.][0123456789]+ 0 [-]  ~ 7
TOKEN FLOAT [-]{0,1}[0123456789]+[.][0123456789]+[Ee][+-]{0,1}[0123456789]+ 0 [-]  ~ 7
KEYWORD extern [e] ~ 8
KEYWORD function [f] ~ 9
KEYWORD ( [(] ~ 10
KEYWORD ) [)] ~ 11
KEYWORD ; [;] ~ 12
KEYWORD procedure [p] ~ 13
KEYWORD , [,] ~ 14
KEYWORD main [m] ~ 15
KEYWORD { [{] ~ 16
KEYWORD } [}] ~ 17
KEYWORD :: [:] ~ 18
KEYWORD const [c] ~ 19
KEYWORD & [&] ~ 20
KEYWORD ^ [^] ~ 21
KEYWORD typedef [t] ~ 22
KEYWORD struct [s] ~ 23
KEYWORD interface [i] ~ 24
KEYWORD class [c] ~ 25
KEYWORD private [p] ~ 26
KEYWORD public [p] ~ 27
KEYWORD var [v] ~ 28
KEYWORD return [r] ~ 29
KEYWORD if [i] ~ 30
KEYWORD else [e] ~ 31
KEYWORD while [w] ~ 32
KEYWORD = [=] ~ 33
KEYWORD [ [[] ~ 34
KEYWORD ] []] ~ 35
KEYWORD += [+] ~ 36
KEYWORD -= [-] ~ 37
KEYWORD *= [*] ~ 38
KEYWORD /= [/] ~ 39
KEYWORD %= [%] ~ 40
KEYWORD &&= [&] ~ 41
KEYWORD ||= [|] ~ 42
KEYWORD &= [&] ~ 43
KEYWORD |= [|] ~ 44
KEYWORD <<= [<] ~ 45
KEYWORD >>= [>] ~ 46
KEYWORD || [|] ~ 47
KEYWORD && [&] ~ 48
KEYWORD | [|] ~ 49
KEYWORD == [=] ~ 50
KEYWORD != [!] ~ 51
KEYWORD <= [<] ~ 52
KEYWORD < [<] ~ 53
KEYWORD >= [>] ~ 54
KEYWORD > [>] ~ 55
KEYWORD + [+] ~ 56
KEYWORD - [-] ~ 57
KEYWORD ~ [~] ~ 58
KEYWORD ! [!] ~ 59
KEYWORD * [*] ~ 60
KEYWORD / [/] ~ 61
KEYWORD % [%] ~ 62
KEYWORD << [<] ~ 63
KEYWORD >> [>] ~ 64
KEYWORD . [.] ~ 65
KEYWORD -> [-] ~ 66
COMMENT /* */ [/]
COMMENT // [/]

-- Nonterminals:
(1) program
(2) externlist
(3) definitionlist
(4) datadefinitionlist
(5) methoddefinitionlist
(6) externdefinition
(7) externparameterlist
(8) externparameters
(9) methoddefinition
(10) mainproc
(11) datadefinition
(12) definition
(13) typename
(14) typespec
(15) typedefinition
(16) structdefinition
(17) interfacedefinition
(18) classdefinition
(19) linkage
(20) functiondefinition
(21) callablebody
(22) parameterlist
(23) parameters
(24) paramdecl
(25) statementlist
(26) statement
(27) variabledefinition
(28) expression
(29) iexpression
(30) indirection
(31) expressionlist

-- Productions:
program = externlist definitionlist mainproc (1)
externlist = externdefinition externlist
externlist = 
definitionlist = definition definitionlist
definitionlist = 
datadefinitionlist = datadefinition datadefinitionlist
datadefinitionlist = 
methoddefinitionlist = methoddefinition methoddefinitionlist
methoddefinitionlist = 
externdefinition = "extern" DQSTRING "function" typespec IDENT "(" externparameterlist ")" ";" (2)
externdefinition = "extern" DQSTRING "procedure" IDENT "(" externparameterlist ")" ";" (3)
externparameterlist = externparameters (4)
externparameters = typespec "," externparameters
externparameters = typespec
externparameters = 
methoddefinition = "function" typespec IDENT "(" parameterlist ")" ";" (5)
methoddefinition = "procedure" IDENT "(" parameterlist ")" ";" (6)
externparameterlist = externparameters (4)
mainproc = "main" "{" statementlist "}" (scope:7)
mainproc = 
datadefinition = typedefinition ";" (8)
datadefinition = variabledefinition ";" (8)
datadefinition = structdefinition ";" (8)
definition = datadefinition
definition = functiondefinition (8)
definition = classdefinition ";" (8)
definition = interfacedefinition ";" (8)
typename/L1 = IDENT
typename/L1 = IDENT "::" typename
typespec/L1 = typename (9)
typespec/L1 = "const" typename (10)
typespec/L1 = typename "&" (11)
typespec/L1 = "const" typename "&" (12)
typespec/L1 = typename "^" (13)
typespec/L1 = "const" typename "^" (14)
typespec/L1 = typename "^" "&" (15)
typespec/L1 = "const" typename "^" "&" (16)
typespec/L1 = typename "^" "^" (17)
typespec/L1 = "const" typename "^" "^" (18)
typespec/L1 = typename "^" "^" "&" (19)
typespec/L1 = "const" typename "^" "^" "&" (20)
typedefinition = "typedef" typename IDENT (step:21)
structdefinition = "struct" IDENT "{" datadefinitionlist "}" (step:22)
interfacedefinition = "interface" IDENT "{" methoddefinitionlist "}" (step:23)
classdefinition = "class" IDENT "{" definitionlist "}" (step:24)
linkage = "private" (25)
linkage = "public" (26)
linkage =  (25)
functiondefinition = linkage "function" typespec IDENT callablebody (27)
functiondefinition = linkage "procedure" IDENT callablebody (28)
callablebody = "(" parameterlist ")" "{" statementlist "}" (scope:29)
parameterlist = parameters (30)
parameters = paramdecl "," parameters
parameters = paramdecl
parameters = 
paramdecl = typespec IDENT (31)
statementlist = statement statementlist (step:32)
statementlist = 
statement = functiondefinition (8)
statement = typedefinition ";" (8)
statement = "var" variabledefinition ";" (8)
statement = expression ";" (33)
statement = "return" expression ";" (step:34)
statement = "if" "(" expression ")" "{" statementlist "}" (scope:35)
statement = "if" "(" expression ")" "{" statementlist "}" "else" "{" statementlist "}" (scope:36)
statement = "while" "(" expression ")" "{" statementlist "}" (scope:37)
statement = "{" statementlist "}" (scope)
variabledefinition = typespec IDENT (step:38)
variabledefinition = typespec IDENT "=" expression (step:39)
variabledefinition = typespec IDENT "[" expression "]" "=" expression (step:40)
variabledefinition = typespec IDENT "[" expression "]" (step:41)
expression/L1 = IDENT (42)
expression/L1 = BOOLEAN (43)
expression/L1 = CARDINAL (44)
expression/L1 = INTEGER (45)
expression/L1 = FLOAT (46)
expression/L1 = DQSTRING (47)
expression/L1 = SQSTRING (48)
expression/L1 = "(" expression ")"
expression/L2 = expression "=" expression (49)
expression/L2 = expression "+=" expression (50)
expression/L2 = expression "-=" expression (51)
expression/L2 = expression "*=" expression (52)
expression/L2 = expression "/=" expression (53)
expression/L2 = expression "%=" expression (54)
expression/L2 = expression "&&=" expression (55)
expression/L2 = expression "||=" expression (56)
expression/L2 = expression "&=" expression (57)
expression/L2 = expression "|=" expression (58)
expression/L2 = expression "<<=" expression (59)
expression/L2 = expression ">>=" expression (60)
expression/L3 = expression "||" expression (61)
expression/L4 = expression "&&" expression (62)
expression/L5 = expression "|" expression (63)
expression/L6 = expression "^" expression (64)
expression/L6 = expression "&" expression (65)
expression/L7 = expression "==" expression (66)
expression/L7 = expression "!=" expression (67)
expression/L7 = expression "<=" expression (68)
expression/L7 = expression "<" expression (69)
expression/L7 = expression ">=" expression (70)
expression/L7 = expression ">" expression (71)
expression/L8 = expression "+" expression (72)
expression/L8 = expression "-" expression (73)
expression/L8 = "&" expression (65)
expression/L8 = "-" expression (73)
expression/L8 = "+" expression (72)
expression/L8 = "~" expression (74)
expression/L8 = "!" expression (75)
expression/L9 = expression "*" expression (76)
expression/L9 = expression "/" expression (77)
expression/L9 = expression "%" expression (78)
expression/L10 = expression "<<" expression (79)
expression/L10 = expression ">>" expression (80)
expression/L11 = iexpression
expression/L11 = expression "." IDENT (81)
expression/L11 = "*" expression (82)
expression/L12 = expression "(" expressionlist ")" (83)
expression/L12 = expression "(" ")" (83)
expression/L12 = expression "[" expressionlist "]" (84)
iexpression = expression indirection IDENT (85)
indirection = "->" indirection (86)
indirection = "->" (86)
expressionlist = expression "," expressionlist
expressionlist = expression
expressionlist = 

-- LR(0) states:
[1]
	program = . externlist definitionlist mainproc
	externlist = . externdefinition externlist
	externlist = .
	externdefinition = . "extern" DQSTRING "function" typespec IDENT "(" externparameterlist ")" ";"
	externdefinition = . "extern" DQSTRING "procedure" IDENT "(" externparameterlist ")" ";"
[2]
	program = externlist . definitionlist mainproc
	definitionlist = . definition definitionlist
	definitionlist = .
	datadefinition = . typedefinition ";"
	datadefinition = . variabledefinition ";"
	datadefinition = . structdefinition ";"
	definition = . datadefinition
	definition = . functiondefinition
	definition = . classdefinition ";"
	definition = . interfacedefinition ";"
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	typedefinition = . "typedef" typename IDENT
	structdefinition = . "struct" IDENT "{" datadefinitionlist "}"
	interfacedefinition = . "interface" IDENT "{" methoddefinitionlist "}"
	classdefinition = . "class" IDENT "{" definitionlist "}"
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" typespec IDENT callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody
	variabledefinition = . typespec IDENT
	variabledefinition = . typespec IDENT "=" expression
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression
	variabledefinition = . typespec IDENT "[" expression "]"
[3]
	externlist = . externdefinition externlist
	externlist = externdefinition . externlist
	externlist = .
	externdefinition = . "extern" DQSTRING "function" typespec IDENT "(" externparameterlist ")" ";"
	externdefinition = . "extern" DQSTRING "procedure" IDENT "(" externparameterlist ")" ";"
[4]
	externdefinition = "extern" . DQSTRING "function" typespec IDENT "(" externparameterlist ")" ";"
	externdefinition = "extern" . DQSTRING "procedure" IDENT "(" externparameterlist ")" ";"
[5]
	program = externlist definitionlist . mainproc
	mainproc = . "main" "{" statementlist "}"
	mainproc = .
[6]
	definition = datadefinition .
[7]
	definitionlist = . definition definitionlist
	definitionlist = definition . definitionlist
	definitionlist = .
	datadefinition = . typedefinition ";"
	datadefinition = . variabledefinition ";"
	datadefinition = . structdefinition ";"
	definition = . datadefinition
	definition = . functiondefinition
	definition = . classdefinition ";"
	definition = . interfacedefinition ";"
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	typedefinition = . "typedef" typename IDENT
	structdefinition = . "struct" IDENT "{" datadefinitionlist "}"
	interfacedefinition = . "interface" IDENT "{" methoddefinitionlist "}"
	classdefinition = . "class" IDENT "{" definitionlist "}"
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" typespec IDENT callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody
	variabledefinition = . typespec IDENT
	variabledefinition = . typespec IDENT "=" expression
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression
	variabledefinition = . typespec IDENT "[" expression "]"
[8]
	typespec/L1 = typename .
	typespec/L1 = typename . "&"
	typespec/L1 = typename . "^"
	typespec/L1 = typename . "^" "&"
	typespec/L1 = typename . "^" "^"
	typespec/L1 = typename . "^" "^" "&"
[9]
	variabledefinition = typespec . IDENT
	variabledefinition = typespec . IDENT "=" expression
	variabledefinition = typespec . IDENT "[" expression "]" "=" expression
	variabledefinition = typespec . IDENT "[" expression "]"
[10]
	datadefinition = typedefinition . ";"
[11]
	datadefinition = structdefinition . ";"
[12]
	definition = interfacedefinition . ";"
[13]
	definition = classdefinition . ";"
[14]
	functiondefinition = linkage . "function" typespec IDENT callablebody
	functiondefinition = linkage . "procedure" IDENT callablebody
[15]
	definition = functiondefinition .
[16]
	datadefinition = variabledefinition . ";"
[17]
	typename/L1 = IDENT .
	typename/L1 = IDENT . "::" typename
[18]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = "const" . typename
	typespec/L1 = "const" . typename "&"
	typespec/L1 = "const" . typename "^"
	typespec/L1 = "const" . typename "^" "&"
	typespec/L1 = "const" . typename "^" "^"
	typespec/L1 = "const" . typename "^" "^" "&"
[19]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typedefinition = "typedef" . typename IDENT
[20]
	structdefinition = "struct" . IDENT "{" datadefinitionlist "}"
[21]
	interfacedefinition = "interface" . IDENT "{" methoddefinitionlist "}"
[22]
	classdefinition = "class" . IDENT "{" definitionlist "}"
[23]
	linkage = "private" .
[24]
	linkage = "public" .
[25]
	externlist = externdefinition externlist .
[26]
	externdefinition = "extern" DQSTRING . "function" typespec IDENT "(" externparameterlist ")" ";"
	externdefinition = "extern" DQSTRING . "procedure" IDENT "(" externparameterlist ")" ";"
[27]
	program = externlist definitionlist mainproc .
[28]
	mainproc = "main" . "{" statementlist "}"
[29]
	definitionlist = definition definitionlist .
[30]
	typespec/L1 = typename "&" .
[31]
	typespec/L1 = typename "^" .
	typespec/L1 = typename "^" . "&"
	typespec/L1 = typename "^" . "^"
	typespec/L1 = typename "^" . "^" "&"
[32]
	variabledefinition = typespec IDENT .
	variabledefinition = typespec IDENT . "=" expression
	variabledefinition = typespec IDENT . "[" expression "]" "=" expression
	variabledefinition = typespec IDENT . "[" expression "]"
[33]
	datadefinition = typedefinition ";" .
[34]
	datadefinition = structdefinition ";" .
[35]
	definition = interfacedefinition ";" .
[36]
	definition = classdefinition ";" .
[37]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	functiondefinition = linkage "function" . typespec IDENT callablebody
[38]
	functiondefinition = linkage "procedure" . IDENT callablebody
[39]
	datadefinition = variabledefinition ";" .
[40]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typename/L1 = IDENT "::" . typename
[41]
	typespec/L1 = "const" typename .
	typespec/L1 = "const" typename . "&"
	typespec/L1 = "const" typename . "^"
	typespec/L1 = "const" typename . "^" "&"
	typespec/L1 = "const" typename . "^" "^"
	typespec/L1 = "const" typename . "^" "^" "&"
[42]
	typedefinition = "typedef" typename . IDENT
[43]
	structdefinition = "struct" IDENT . "{" datadefinitionlist "}"
[44]
	interfacedefinition = "interface" IDENT . "{" methoddefinitionlist "}"
[45]
	classdefinition = "class" IDENT . "{" definitionlist "}"
[46]
	externdefinition = "extern" DQSTRING "function" . typespec IDENT "(" externparameterlist ")" ";"
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
[47]
	externdefinition = "extern" DQSTRING "procedure" . IDENT "(" externparameterlist ")" ";"
[48]
	mainproc = "main" "{" . statementlist "}"
	typedefinition = . "typedef" typename IDENT
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" typespec IDENT callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody
	statementlist = . statement statementlist
	statementlist = .
	statement = . functiondefinition
	statement = . typedefinition ";"
	statement = . "var" variabledefinition ";"
	statement = . expression ";"
	statement = . "return" expression ";"
	statement = . "if" "(" expression ")" "{" statementlist "}"
	statement = . "if" "(" expression ")" "{" statementlist "}" "else" "{" statementlist "}"
	statement = . "while" "(" expression ")" "{" statementlist "}"
	statement = . "{" statementlist "}"
	expression/L1 = . IDENT
	expression/L1 = . BOOLEAN
	expression/L1 = . CARDINAL
	expression/L1 = . INTEGER
	expression/L1 = . FLOAT
	expression/L1 = . DQSTRING
	expression/L1 = . SQSTRING
	expression/L1 = . "(" expression ")"
	expression/L2 = . expression "=" expression
	expression/L2 = . expression "+=" expression
	expression/L2 = . expression "-=" expression
	expression/L2 = . expression "*=" expression
	expression/L2 = . expression "/=" expression
	expression/L2 = . expression "%=" expression
	expression/L2 = . expression "&&=" expression
	expression/L2 = . expression "||=" expression
	expression/L2 = . expression "&=" expression
	expression/L2 = . expression "|=" expression
	expression/L2 = . expression "<<=" expression
	expression/L2 = . expression ">>=" expression
	expression/L3 = . expression "||" expression
	expression/L4 = . expression "&&" expression
	expression/L5 = . expression "|" expression
	expression/L6 = . expression "^" expression
	expression/L6 = . expression "&" expression
	expression/L7 = . expression "==" expression
	expression/L7 = . expression "!=" expression
	expression/L7 = . expression "<=" expression
	expression/L7 = . expression "<" expression
	expression/L7 = . expression ">=" expression
	expression/L7 = . expression ">" expression
	expression/L8 = . expression "+" expression
	expression/L8 = . expression "-" expression
	expression/L8 = . "&" expression
	expression/L8 = . "-" expression
	expression/L8 = . "+" expression
	expression/L8 = . "~" expression
	expression/L8 = . "!" expression
	expression/L9 = . expression "*" expression
	expression/L9 = . expression "/" expression
	expression/L9 = . expression "%" expression
	expression/L10 = . expression "<<" expression
	expression/L10 = . expression ">>" expression
	expression/L11 = . iexpression
	expression/L11 = . expression "." IDENT
	expression/L11 = . "*" expression
	expression/L12 = . expression "(" expressionlist ")"
	expression/L12 = . expression "(" ")"
	expression/L12 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[49]
	typespec/L1 = typename "^" "&" .
[50]
	typespec/L1 = typename "^" "^" .
	typespec/L1 = typename "^" "^" . "&"
[51]
	variabledefinition = typespec IDENT "=" . expression
	expression/L1 = . IDENT
	expression/L1 = . BOOLEAN
	expression/L1 = . CARDINAL
	expression/L1 = . INTEGER
	expression/L1 = . FLOAT
	expression/L1 = . DQSTRING
	expression/L1 = . SQSTRING
	expression/L1 = . "(" expression ")"
	expression/L2 = . expression "=" expression
	expression/L2 = . expression "+=" expression
	expression/L2 = . expression "-=" expression
	expression/L2 = . expression "*=" expression
	expression/L2 = . expression "/=" expression
	expression/L2 = . expression "%=" expression
	expression/L2 = . expression "&&=" expression
	expression/L2 = . expression "||=" expression
	expression/L2 = . expression "&=" expression
	expression/L2 = . expression "|=" expression
	expression/L2 = . expression "<<=" expression
	expression/L2 = . expression ">>=" expression
	expression/L3 = . expression "||" expression
	expression/L4 = . expression "&&" expression
	expression/L5 = . expression "|" expression
	expression/L6 = . expression "^" expression
	expression/L6 = . expression "&" expression
	expression/L7 = . expression "==" expression
	expression/L7 = . expression "!=" expression
	expression/L7 = . expression "<=" expression
	expression/L7 = . expression "<" expression
	expression/L7 = . expression ">=" expression
	expression/L7 = . expression ">" expression
	expression/L8 = . expression "+" expression
	expression/L8 = . expression "-" expression
	expression/L8 = . "&" expression
	expression/L8 = . "-" expression
	expression/L8 = . "+" expression
	expression/L8 = . "~" expression
	expression/L8 = . "!" expression
	expression/L9 = . expression "*" expression
	expression/L9 = . expression "/" expression
	expression/L9 = . expression "%" expression
	expression/L10 = . expression "<<" expression
	expression/L10 = . expression ">>" expression
	expression/L11 = . iexpression
	expression/L11 = . expression "." IDENT
	expression/L11 = . "*" expression
	expression/L12 = . expression "(" expressionlist ")"
	expression/L12 = . expression "(" ")"
	expression/L12 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[52]
	variabledefinition = typespec IDENT "[" . expression "]" "=" expression
	variabledefinition = typespec IDENT "[" . expression "]"
	expression/L1 = . IDENT
	expression/L1 = . BOOLEAN
	expression/L1 = . CARDINAL
	expression/L1 = . INTEGER
	expression/L1 = . FLOAT
	expression/L1 = . DQSTRING
	expression/L1 = . SQSTRING
	expression/L1 = . "(" expression ")"
	expression/L2 = . expression "=" expression
	expression/L2 = . expression "+=" expression
	expression/L2 = . expression "-=" expression
	expression/L2 = . expression "*=" expression
	expression/L2 = . expression "/=" expression
	expression/L2 = . expression "%=" expression
	expression/L2 = . expression "&&=" expression
	expression/L2 = . expression "||=" expression
	expression/L2 = . expression "&=" expression
	expression/L2 = . expression "|=" expression
	expression/L2 = . expression "<<=" expression
	expression/L2 = . expression ">>=" expression
	expression/L3 = . expression "||" expression
	expression/L4 = . expression "&&" expression
	expression/L5 = . expression "|" expression
	expression/L6 = . expression "^" expression
	expression/L6 = . expression "&" expression
	expression/L7 = . expression "==" expression
	expression/L7 = . expression "!=" expression
	expression/L7 = . expression "<=" expression
	expression/L7 = . expression "<" expression
	expression/L7 = . expression ">=" expression
	expression/L7 = . expression ">" expression
	expression/L8 = . expression "+" expression
	expression/L8 = . expression "-" expression
	expression/L8 = . "&" expression
	expression/L8 = . "-" expression
	expression/L8 = . "+" expression
	expression/L8 = . "~" expression
	expression/L8 = . "!" expression
	expression/L9 = . expression "*" expression
	expression/L9 = . expression "/" expression
	expression/L9 = . expression "%" expression
	expression/L10 = . expression "<<" expression
	expression/L10 = . expression ">>" expression
	expression/L11 = . iexpression
	expression/L11 = . expression "." IDENT
	expression/L11 = . "*" expression
	expression/L12 = . expression "(" expressionlist ")"
	expression/L12 = . expression "(" ")"
	expression/L12 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[53]
	functiondefinition = linkage "function" typespec . IDENT callablebody
[54]
	functiondefinition = linkage "procedure" IDENT . callablebody
	callablebody = . "(" parameterlist ")" "{" statementlist "}"
[55]
	typename/L1 = IDENT "::" typename .
[56]
	typespec/L1 = "const" typename "&" .
[57]
	typespec/L1 = "const" typename "^" .
	typespec/L1 = "const" typename "^" . "&"
	typespec/L1 = "const" typename "^" . "^"
	typespec/L1 = "const" typename "^" . "^" "&"
[58]
	typedefinition = "typedef" typename IDENT .
[59]
	datadefinitionlist = . datadefinition datadefinitionlist
	datadefinitionlist = .
	datadefinition = . typedefinition ";"
	datadefinition = . variabledefinition ";"
	datadefinition = . structdefinition ";"
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	typedefinition = . "typedef" typename IDENT
	structdefinition = . "struct" IDENT "{" datadefinitionlist "}"
	structdefinition = "struct" IDENT "{" . datadefinitionlist "}"
	variabledefinition = . typespec IDENT
	variabledefinition = . typespec IDENT "=" expression
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression
	variabledefinition = . typespec IDENT "[" expression "]"
[60]
	methoddefinitionlist = . methoddefinition methoddefinitionlist
	methoddefinitionlist = .
	methoddefinition = . "function" typespec IDENT "(" parameterlist ")" ";"
	methoddefinition = . "procedure" IDENT "(" parameterlist ")" ";"
	interfacedefinition = "interface" IDENT "{" . methoddefinitionlist "}"
[61]
	definitionlist = . definition definitionlist
	definitionlist = .
	datadefinition = . typedefinition ";"
	datadefinition = . variabledefinition ";"
	datadefinition = . structdefinition ";"
	definition = . datadefinition
	definition = . functiondefinition
	definition = . classdefinition ";"
	definition = . interfacedefinition ";"
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	typedefinition = . "typedef" typename IDENT
	structdefinition = . "struct" IDENT "{" datadefinitionlist "}"
	interfacedefinition = . "interface" IDENT "{" methoddefinitionlist "}"
	classdefinition = . "class" IDENT "{" definitionlist "}"
	classdefinition = "class" IDENT "{" . definitionlist "}"
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" typespec IDENT callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody
	variabledefinition = . typespec IDENT
	variabledefinition = . typespec IDENT "=" expression
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression
	variabledefinition = . typespec IDENT "[" expression "]"
[62]
	externdefinition = "extern" DQSTRING "function" typespec . IDENT "(" externparameterlist ")" ";"
[63]
	externdefinition = "extern" DQSTRING "procedure" IDENT . "(" externparameterlist ")" ";"
[64]
	statement = typedefinition . ";"
[65]
	statement = functiondefinition .
[66]
	mainproc = "main" "{" statementlist . "}"
[67]
	typedefinition = . "typedef" typename IDENT
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" typespec IDENT callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody
	statementlist = . statement statementlist
	statementlist = statement . statementlist
	statementlist = .
	statement = . functiondefinition
	statement = . typedefinition ";"
	statement = . "var" variabledefinition ";"
	statement = . expression ";"
	statement = . "return" expression ";"
	statement = . "if" "(" expression ")" "{" statementlist "}"
	statement = . "if" "(" expression ")" "{" statementlist "}" "else" "{" statementlist "}"
	statement = . "while" "(" expression ")" "{" statementlist "}"
	statement = . "{" statementlist "}"
	expression/L1 = . IDENT
	expression/L1 = . BOOLEAN
	expression/L1 = . CARDINAL
	expression/L1 = . INTEGER
	expression/L1 = . FLOAT
	expression/L1 = . DQSTRING
	expression/L1 = . SQSTRING
	expression/L1 = . "(" expression ")"
	expression/L2 = . expression "=" expression
	expression/L2 = . expression "+=" expression
	expression/L2 = . expression "-=" expression
	expression/L2 = . expression "*=" expression
	expression/L2 = . expression "/=" expression
	expression/L2 = . expression "%=" expression
	expression/L2 = . expression "&&=" expression
	expression/L2 = . expression "||=" expression
	expression/L2 = . expression "&=" expression
	expression/L2 = . expression "|=" expression
	expression/L2 = . expression "<<=" expression
	expression/L2 = . expression ">>=" expression
	expression/L3 = . expression "||" expression
	expression/L4 = . expression "&&" expression
	expression/L5 = . expression "|" expression
	expression/L6 = . expression "^" expression
	expression/L6 = . expression "&" expression
	expression/L7 = . expression "==" expression
	expression/L7 = . expression "!=" expression
	expression/L7 = . expression "<=" expression
	expression/L7 = . expression "<" expression
	expression/L7 = . expression ">=" expression
	expression/L7 = . expression ">" expression
	expression/L8 = . expression "+" expression
	expression/L8 = . expression "-" expression
	expression/L8 = . "&" expression
	expression/L8 = . "-" expression
	expression/L8 = . "+" expression
	expression/L8 = . "~" expression
	expression/L8 = . "!" expression
	expression/L9 = . expression "*" expression
	expression/L9 = . expression "/" expression
	expression/L9 = . expression "%" expression
	expression/L10 = . expression "<<" expression
	expression/L10 = . expression ">>" expression
	expression/L11 = . iexpression
	expression/L11 = . expression "." IDENT
	expression/L11 = . "*" expression
	expression/L12 = . expression "(" expressionlist ")"
	expression/L12 = . expression "(" ")"
	expression/L12 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[68]
	statement = expression . ";"
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[69]
	expression/L11 = iexpression .
[70]
	expression/L1 = BOOLEAN .
[71]
	expression/L1 = IDENT .
[72]
	expression/L1 = DQSTRING .
[73]
	expression/L1 = SQSTRING .
[74]
	expression/L1 = CARDINAL .
[75]
	expression/L1 = INTEGER .
[76]
	expression/L1 = FLOAT .
[77]
	expression/L1 = . IDENT
	expression/L1 = . BOOLEAN
	expression/L1 = . CARDINAL
	expression/L1 = . INTEGER
	expression/L1 = . FLOAT
	expression/L1 = . DQSTRING
	expression/L1 = . SQSTRING
	expression/L1 = . "(" expression ")"
	expression/L1 = "(" . expression ")"
	expression/L2 = . expression "=" expression
	expression/L2 = . expression "+=" expression
	expression/L2 = . expression "-=" expression
	expression/L2 = . expression "*=" expression
	expression/L2 = . expression "/=" expression
	expression/L2 = . expression "%=" expression
	expression/L2 = . expression "&&=" expression
	expression/L2 = . expression "||=" expression
	expression/L2 = . expression "&=" expression
	expression/L2 = . expression "|=" expression
	expression/L2 = . expression "<<=" expression
	expression/L2 = . expression ">>=" expression
	expression/L3 = . expression "||" expression
	expression/L4 = . expression "&&" expression
	expression/L5 = . expression "|" expression
	expression/L6 = . expression "^" expression
	expression/L6 = . expression "&" expression
	expression/L7 = . expression "==" expression
	expression/L7 = . expression "!=" expression
	expression/L7 = . expression "<=" expression
	expression/L7 = . expression "<" expression
	expression/L7 = . expression ">=" expression
	expression/L7 = . expression ">" expression
	expression/L8 = . expression "+" expression
	expression/L8 = . expression "-" expression
	expression/L8 = . "&" expression
	expression/L8 = . "-" expression
	expression/L8 = . "+" expression
	expression/L8 = . "~" expression
	expression/L8 = . "!" expression
	expression/L9 = . expression "*" expression
	expression/L9 = . expression "/" expression
	expression/L9 = . expression "%" expression
	expression/L10 = . expression "<<" expression
	expression/L10 = . expression ">>" expression
	expression/L11 = . iexpression
	expression/L11 = . expression "." IDENT
	expression/L11 = . "*" expression
	expression/L12 = . expression "(" expressionlist ")"
	expression/L12 = . expression "(" ")"
	expression/L12 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[78]
	typedefinition = . "typedef" typename IDENT
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" typespec IDENT callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody
	statementlist = . statement statementlist
	statementlist = .
	statement = . functiondefinition
	statement = . typedefinition ";"
	statement = . "var" variabledefinition ";"
	statement = . expression ";"
	statement = . "return" expression ";"
	statement = . "if" "(" expression ")" "{" statementlist "}"
	statement = . "if" "(" expression ")" "{" statementlist "}" "else" "{" statementlist "}"
	statement = . "while" "(" expression ")" "{" statementlist "}"
	statement = . "{" statementlist "}"
	statement = "{" . statementlist "}"
	expression/L1 = . IDENT
	expression/L1 = . BOOLEAN
	expression/L1 = . CARDINAL
	expression/L1 = . INTEGER
	expression/L1 = . FLOAT
	expression/L1 = . DQSTRING
	expression/L1 = . SQSTRING
	expression/L1 = . "(" expression ")"
	expression/L2 = . expression "=" expression
	expression/L2 = . expression "+=" expression
	expression/L2 = . expression "-=" expression
	expression/L2 = . expression "*=" expression
	expression/L2 = . expression "/=" expression
	expression/L2 = . expression "%=" expression
	expression/L2 = . expression "&&=" expression
	expression/L2 = . expression "||=" expression
	expression/L2 = . expression "&=" expression
	expression/L2 = . expression "|=" expression
	expression/L2 = . expression "<<=" expression
	expression/L2 = . expression ">>=" expression
	expression/L3 = . expression "||" expression
	expression/L4 = . expression "&&" expression
	expression/L5 = . expression "|" expression
	expression/L6 = . expression "^" expression
	expression/L6 = . expression "&" expression
	expression/L7 = . expression "==" expression
	expression/L7 = . expression "!=" expression
	expression/L7 = . expression "<=" expression
	expression/L7 = . expression "<" expression
	expression/L7 = . expression ">=" expression
	expression/L7 = . expression ">" expression
	expression/L8 = . expression "+" expression
	expression/L8 = . expression "-" expression
	expression/L8 = . "&" expression
	expression/L8 = . "-" expression
	expression/L8 = . "+" expression
	expression/L8 = . "~" expression
	expression/L8 = . "!" expression
	expression/L9 = . expression "*" expression
	expression/L9 = . expression "/" expression
	expression/L9 = . expression "%" expression
	expression/L10 = . expression "<<" expression
	expression/L10 = . expression ">>" expression
	expression/L11 = . iexpression
	expression/L11 = . expression "." IDENT
	expression/L11 = . "*" expression
	expression/L12 = . expression "(" expressionlist ")"
	expression/L12 = . expression "(" ")"
	expression/L12 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[79]
	expression/L1 = . IDENT
	expression/L1 = . BOOLEAN
	expression/L1 = . CARDINAL
	expression/L1 = . INTEGER
	expression/L1 = . FLOAT
	expression/L1 = . DQSTRING
	expression/L1 = . SQSTRING
	expression/L1 = . "(" expression ")"
	expression/L2 = . expression "=" expression
	expression/L2 = . expression "+=" expression
	expression/L2 = . expression "-=" expression
	expression/L2 = . expression "*=" expression
	expression/L2 = . expression "/=" expression
	expression/L2 = . expression "%=" expression
	expression/L2 = . expression "&&=" expression
	expression/L2 = . expression "||=" expression
	expression/L2 = . expression "&=" expression
	expression/L2 = . expression "|=" expression
	expression/L2 = . expression "<<=" expression
	expression/L2 = . expression ">>=" expression
	expression/L3 = . expression "||" expression
	expression/L4 = . expression "&&" expression
	expression/L5 = . expression "|" expression
	expression/L6 = . expression "^" expression
	expression/L6 = . expression "&" expression
	expression/L7 = . expression "==" expression
	expression/L7 = . expression "!=" expression
	expression/L7 = . expression "<=" expression
	expression/L7 = . expression "<" expression
	expression/L7 = . expression ">=" expression
	expression/L7 = . expression ">" expression
	expression/L8 = . expression "+" expression
	expression/L8 = . expression "-" expression
	expression/L8 = . "&" expression
	expression/L8 = "&" . expression
	expression/L8 = . "-" expression
	expression/L8 = . "+" expression
	expression/L8 = . "~" expression
	expression/L8 = . "!" expression
	expression/L9 = . expression "*" expression
	expression/L9 = . expression "/" expression
	expression/L9 = . expression "%" expression
	expression/L10 = . expression "<<" expression
	expression/L10 = . expression ">>" expression
	expression/L11 = . iexpression
	expression/L11 = . expression "." IDENT
	expression/L11 = . "*" expression
	expression/L12 = . expression "(" expressionlist ")"
	expression/L12 = . expression "(" ")"
	expression/L12 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[80]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	statement = "var" . variabledefinition ";"
	variabledefinition = . typespec IDENT
	variabledefinition = . typespec IDENT "=" expression
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression
	variabledefinition = . typespec IDENT "[" expression "]"
[81]
	statement = "return" . expression ";"
	expression/L1 = . IDENT
	expression/L1 = . BOOLEAN
	expression/L1 = . CARDINAL
	expression/L1 = . INTEGER
	expression/L1 = . FLOAT
	expression/L1 = . DQSTRING
	expression/L1 = . SQSTRING
	expression/L1 = . "(" expression ")"
	expression/L2 = . expression "=" expression
	expression/L2 = . expression "+=" expression
	expression/L2 = . expression "-=" expression
	expression/L2 = . expression "*=" expression
	expression/L2 = . expression "/=" expression
	expression/L2 = . expression "%=" expression
	expression/L2 = . expression "&&=" expression
	expression/L2 = . expression "||=" expression
	expression/L2 = . expression "&=" expression
	expression/L2 = . expression "|=" expression
	expression/L2 = . expression "<<=" expression
	expression/L2 = . expression ">>=" expression
	expression/L3 = . expression "||" expression
	expression/L4 = . expression "&&" expression
	expression/L5 = . expression "|" expression
	expression/L6 = . expression "^" expression
	expression/L6 = . expression "&" expression
	expression/L7 = . expression "==" expression
	expression/L7 = . expression "!=" expression
	expression/L7 = . expression "<=" expression
	expression/L7 = . expression "<" expression
	expression/L7 = . expression ">=" expression
	expression/L7 = . expression ">" expression
	expression/L8 = . expression "+" expression
	expression/L8 = . expression "-" expression
	expression/L8 = . "&" expression
	expression/L8 = . "-" expression
	expression/L8 = . "+" expression
	expression/L8 = . "~" expression
	expression/L8 = . "!" expression
	expression/L9 = . expression "*" expression
	expression/L9 = . expression "/" expression
	expression/L9 = . expression "%" expression
	expression/L10 = . expression "<<" expression
	expression/L10 = . expression ">>" expression
	expression/L11 = . iexpression
	expression/L11 = . expression "." IDENT
	expression/L11 = . "*" expression
	expression/L12 = . expression "(" expressionlist ")"
	expression/L12 = . expression "(" ")"
	expression/L12 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[82]
	statement = "if" . "(" expression ")" "{" statementlist "}"
	statement = "if" . "(" expression ")" "{" statementlist "}" "else" "{" statementlist "}"
[83]
	statement = "while" . "(" expression ")" "{" statementlist "}"
[84]
	expression/L1 = . IDENT
	expression/L1 = . BOOLEAN
	expression/L1 = . CARDINAL
	expression/L1 = . INTEGER
	expression/L1 = . FLOAT
	expression/L1 = . DQSTRING
	expression/L1 = . SQSTRING
	expression/L1 = . "(" expression ")"
	expression/L2 = . expression "=" expression
	expression/L2 = . expression "+=" expression
	expression/L2 = . expression "-=" expression
	expression/L2 = . expression "*=" expression
	expression/L2 = . expression "/=" expression
	expression/L2 = . expression "%=" expression
	expression/L2 = . expression "&&=" expression
	expression/L2 = . expression "||=" expression
	expression/L2 = . expression "&=" expression
	expression/L2 = . expression "|=" expression
	expression/L2 = . expression "<<=" expression
	expression/L2 = . expression ">>=" expression
	expression/L3 = . expression "||" expression
	expression/L4 = . expression "&&" expression
	expression/L5 = . expression "|" expression
	expression/L6 = . expression "^" expression
	expression/L6 = . expression "&" expression
	expression/L7 = . expression "==" expression
	expression/L7 = . expression "!=" expression
	expression/L7 = . expression "<=" expression
	expression/L7 = . expression "<" expression
	expression/L7 = . expression ">=" expression
	expression/L7 = . expression ">" expression
	expression/L8 = . expression "+" expression
	expression/L8 = . expression "-" expression
	expression/L8 = . "&" expression
	expression/L8 = . "-" expression
	expression/L8 = . "+" expression
	expression/L8 = "+" . expression
	expression/L8 = . "~" expression
	expression/L8 = . "!" expression
	expression/L9 = . expression "*" expression
	expression/L9 = . expression "/" expression
	expression/L9 = . expression "%" expression
	expression/L10 = . expression "<<" expression
	expression/L10 = . expression ">>" expression
	expression/L11 = . iexpression
	expression/L11 = . expression "." IDENT
	expression/L11 = . "*" expression
	expression/L12 = . expression "(" expressionlist ")"
	expression/L12 = . expression "(" ")"
	expression/L12 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[85]
	expression/L1 = . IDENT
	expression/L1 = . BOOLEAN
	expression/L1 = . CARDINAL
	expression/L1 = . INTEGER
	expression/L1 = . FLOAT
	expression/L1 = . DQSTRING
	expression/L1 = . SQSTRING
	expression/L1 = . "(" expression ")"
	expression/L2 = . expression "=" expression
	expression/L2 = . expression "+=" expression
	expression/L2 = . expression "-=" expression
	expression/L2 = . expression "*=" expression
	expression/L2 = . expression "/=" expression
	expression/L2 = . expression "%=" expression
	expression/L2 = . expression "&&=" expression
	expression/L2 = . expression "||=" expression
	expression/L2 = . expression "&=" expression
	expression/L2 = . expression "|=" expression
	expression/L2 = . expression "<<=" expression
	expression/L2 = . expression ">>=" expression
	expression/L3 = . expression "||" expression
	expression/L4 = . expression "&&" expression
	expression/L5 = . expression "|" expression
	expression/L6 = . expression "^" expression
	expression/L6 = . expression "&" expression
	expression/L7 = . expression "==" expression
	expression/L7 = . expression "!=" expression
	expression/L7 = . expression "<=" expression
	expression/L7 = . expression "<" expression
	expression/L7 = . expression ">=" expression
	expression/L7 = . expression ">" expression
	expression/L8 = . expression "+" expression
	expression/L8 = . expression "-" expression
	expression/L8 = . "&" expression
	expression/L8 = . "-" expression
	expression/L8 = "-" . expression
	expression/L8 = . "+" expression
	expression/L8 = . "~" expression
	expression/L8 = . "!" expression
	expression/L9 = . expression "*" expression
	expression/L9 = . expression "/" expression
	expression/L9 = . expression "%" expression
	expression/L10 = . expression "<<" expression
	expression/L10 = . expression ">>" expression
	expression/L11 = . iexpression
	expression/L11 = . expression "." IDENT
	expression/L11 = . "*" expression
	expression/L12 = . expression "(" expressionlist ")"
	expression/L12 = . expression "(" ")"
	expression/L12 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[86]
	expression/L1 = . IDENT
	expression/L1 = . BOOLEAN
	expression/L1 = . CARDINAL
	expression/L1 = . INTEGER
	expression/L1 = . FLOAT
	expression/L1 = . DQSTRING
	expression/L1 = . SQSTRING
	expression/L1 = . "(" expression ")"
	expression/L2 = . expression "=" expression
	expression/L2 = . expression "+=" expression
	expression/L2 = . expression "-=" expression
	expression/L2 = . expression "*=" expression
	expression/L2 = . expression "/=" expression
	expression/L2 = . expression "%=" expression
	expression/L2 = . expression "&&=" expression
	expression/L2 = . expression "||=" expression
	expression/L2 = . expression "&=" expression
	expression/L2 = . expression "|=" expression
	expression/L2 = . expression "<<=" expression
	expression/L2 = . expression ">>=" expression
	expression/L3 = . expression "||" expression
	expression/L4 = . expression "&&" expression
	expression/L5 = . expression "|" expression
	expression/L6 = . expression "^" expression
	expression/L6 = . expression "&" expression
	expression/L7 = . expression "==" expression
	expression/L7 = . expression "!=" expression
	expression/L7 = . expression "<=" expression
	expression/L7 = . expression "<" expression
	expression/L7 = . expression ">=" expression
	expression/L7 = . expression ">" expression
	expression/L8 = . expression "+" expression
	expression/L8 = . expression "-" expression
	expression/L8 = . "&" expression
	expression/L8 = . "-" expression
	expression/L8 = . "+" expression
	expression/L8 = . "~" expression
	expression/L8 = "~" . expression
	expression/L8 = . "!" expression
	expression/L9 = . expression "*" expression
	expression/L9 = . expression "/" expression
	expression/L9 = . expression "%" expression
	expression/L10 = . expression "<<" expression
	expression/L10 = . expression ">>" expression
	expression/L11 = . iexpression
	expression/L11 = . expression "." IDENT
	expression/L11 = . "*" expression
	expression/L12 = . expression "(" expressionlist ")"
	expression/L12 = . expression "(" ")"
	expression/L12 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[87]
	expression/L1 = . IDENT
	expression/L1 = . BOOLEAN
	expression/L1 = . CARDINAL
	expression/L1 = . INTEGER
	expression/L1 = . FLOAT
	expression/L1 = . DQSTRING
	expression/L1 = . SQSTRING
	expression/L1 = . "(" expression ")"
	expression/L2 = . expression "=" expression
	expression/L2 = . expression "+=" expression
	expression/L2 = . expression "-=" expression
	expression/L2 = . expression "*=" expression
	expression/L2 = . expression "/=" expression
	expression/L2 = . expression "%=" expression
	expression/L2 = . expression "&&=" expression
	expression/L2 = . expression "||=" expression
	expression/L2 = . expression "&=" expression
	expression/L2 = . expression "|=" expression
	expression/L2 = . expression "<<=" expression
	expression/L2 = . expression ">>=" expression
	expression/L3 = . expression "||" expression
	expression/L4 = . expression "&&" expression
	expression/L5 = . expression "|" expression
	expression/L6 = . expression "^" expression
	expression/L6 = . expression "&" expression
	expression/L7 = . expression "==" expression
	expression/L7 = . expression "!=" expression
	expression/L7 = . expression "<=" expression
	expression/L7 = . expression "<" expression
	expression/L7 = . expression ">=" expression
	expression/L7 = . expression ">" expression
	expression/L8 = . expression "+" expression
	expression/L8 = . expression "-" expression
	expression/L8 = . "&" expression
	expression/L8 = . "-" expression
	expression/L8 = . "+" expression
	expression/L8 = . "~" expression
	expression/L8 = . "!" expression
	expression/L8 = "!" . expression
	expression/L9 = . expression "*" expression
	expression/L9 = . expression "/" expression
	expression/L9 = . expression "%" expression
	expression/L10 = . expression "<<" expression
	expression/L10 = . expression ">>" expression
	expression/L11 = . iexpression
	expression/L11 = . expression "." IDENT
	expression/L11 = . "*" expression
	expression/L12 = . expression "(" expressionlist ")"
	expression/L12 = . expression "(" ")"
	expression/L12 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[88]
	expression/L1 = . IDENT
	expression/L1 = . BOOLEAN
	expression/L1 = . CARDINAL
	expression/L1 = . INTEGER
	expression/L1 = . FLOAT
	expression/L1 = . DQSTRING
	expression/L1 = . SQSTRING
	expression/L1 = . "(" expression ")"
	expression/L2 = . expression "=" expression
	expression/L2 = . expression "+=" expression
	expression/L2 = . expression "-=" expression
	expression/L2 = . expression "*=" expression
	expression/L2 = . expression "/=" expression
	expression/L2 = . expression "%=" expression
	expression/L2 = . expression "&&=" expression
	expression/L2 = . expression "||=" expression
	expression/L2 = . expression "&=" expression
	expression/L2 = . expression "|=" expression
	expression/L2 = . expression "<<=" expression
	expression/L2 = . expression ">>=" expression
	expression/L3 = . expression "||" expression
	expression/L4 = . expression "&&" expression
	expression/L5 = . expression "|" expression
	expression/L6 = . expression "^" expression
	expression/L6 = . expression "&" expression
	expression/L7 = . expression "==" expression
	expression/L7 = . expression "!=" expression
	expression/L7 = . expression "<=" expression
	expression/L7 = . expression "<" expression
	expression/L7 = . expression ">=" expression
	expression/L7 = . expression ">" expression
	expression/L8 = . expression "+" expression
	expression/L8 = . expression "-" expression
	expression/L8 = . "&" expression
	expression/L8 = . "-" expression
	expression/L8 = . "+" expression
	expression/L8 = . "~" expression
	expression/L8 = . "!" expression
	expression/L9 = . expression "*" expression
	expression/L9 = . expression "/" expression
	expression/L9 = . expression "%" expression
	expression/L10 = . expression "<<" expression
	expression/L10 = . expression ">>" expression
	expression/L11 = . iexpression
	expression/L11 = . expression "." IDENT
	expression/L11 = . "*" expression
	expression/L11 = "*" . expression
	expression/L12 = . expression "(" expressionlist ")"
	expression/L12 = . expression "(" ")"
	expression/L12 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[89]
	typespec/L1 = typename "^" "^" "&" .
[90]
	variabledefinition = typespec IDENT "=" expression .
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[91]
	variabledefinition = typespec IDENT "[" expression . "]" "=" expression
	variabledefinition = typespec IDENT "[" expression . "]"
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[92]
	functiondefinition = linkage "function" typespec IDENT . callablebody
	callablebody = . "(" parameterlist ")" "{" statementlist "}"
[93]
	functiondefinition = linkage "procedure" IDENT callablebody .
[94]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	callablebody = "(" . parameterlist ")" "{" statementlist "}"
	parameterlist = . parameters
	parameters = . paramdecl "," parameters
	parameters = . paramdecl
	parameters = .
	paramdecl = . typespec IDENT
[95]
	typespec/L1 = "const" typename "^" "&" .
[96]
	typespec/L1 = "const" typename "^" "^" .
	typespec/L1 = "const" typename "^" "^" . "&"
[97]
	structdefinition = "struct" IDENT "{" datadefinitionlist . "}"
[98]
	datadefinitionlist = . datadefinition datadefinitionlist
	datadefinitionlist = datadefinition . datadefinitionlist
	datadefinitionlist = .
	datadefinition = . typedefinition ";"
	datadefinition = . variabledefinition ";"
	datadefinition = . structdefinition ";"
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	typedefinition = . "typedef" typename IDENT
	structdefinition = . "struct" IDENT "{" datadefinitionlist "}"
	variabledefinition = . typespec IDENT
	variabledefinition = . typespec IDENT "=" expression
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression
	variabledefinition = . typespec IDENT "[" expression "]"
[99]
	interfacedefinition = "interface" IDENT "{" methoddefinitionlist . "}"
[100]
	methoddefinitionlist = . methoddefinition methoddefinitionlist
	methoddefinitionlist = methoddefinition . methoddefinitionlist
	methoddefinitionlist = .
	methoddefinition = . "function" typespec IDENT "(" parameterlist ")" ";"
	methoddefinition = . "procedure" IDENT "(" parameterlist ")" ";"
[101]
	methoddefinition = "function" . typespec IDENT "(" parameterlist ")" ";"
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
[102]
	methoddefinition = "procedure" . IDENT "(" parameterlist ")" ";"
[103]
	classdefinition = "class" IDENT "{" definitionlist . "}"
[104]
	externdefinition = "extern" DQSTRING "function" typespec IDENT . "(" externparameterlist ")" ";"
[105]
	externdefinition = "extern" DQSTRING "procedure" IDENT "(" . externparameterlist ")" ";"
	externparameterlist = . externparameters
	externparameters = . typespec "," externparameters
	externparameters = . typespec
	externparameters = .
	externparameterlist = . externparameters
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
[106]
	statement = typedefinition ";" .
[107]
	mainproc = "main" "{" statementlist "}" .
[108]
	statementlist = statement statementlist .
[109]
	iexpression = expression indirection . IDENT
[110]
	expression/L1 = . IDENT
	expression/L1 = . BOOLEAN
	expression/L1 = . CARDINAL
	expression/L1 = . INTEGER
	expression/L1 = . FLOAT
	expression/L1 = . DQSTRING
	expression/L1 = . SQSTRING
	expression/L1 = . "(" expression ")"
	expression/L2 = . expression "=" expression
	expression/L2 = . expression "+=" expression
	expression/L2 = . expression "-=" expression
	expression/L2 = . expression "*=" expression
	expression/L2 = . expression "/=" expression
	expression/L2 = . expression "%=" expression
	expression/L2 = . expression "&&=" expression
	expression/L2 = . expression "||=" expression
	expression/L2 = . expression "&=" expression
	expression/L2 = . expression "|=" expression
	expression/L2 = . expression "<<=" expression
	expression/L2 = . expression ">>=" expression
	expression/L3 = . expression "||" expression
	expression/L4 = . expression "&&" expression
	expression/L5 = . expression "|" expression
	expression/L6 = . expression "^" expression
	expression/L6 = . expression "&" expression
	expression/L7 = . expression "==" expression
	expression/L7 = . expression "!=" expression
	expression/L7 = . expression "<=" expression
	expression/L7 = . expression "<" expression
	expression/L7 = . expression ">=" expression
	expression/L7 = . expression ">" expression
	expression/L8 = . expression "+" expression
	expression/L8 = . expression "-" expression
	expression/L8 = . "&" expression
	expression/L8 = . "-" expression
	expression/L8 = . "+" expression
	expression/L8 = . "~" expression
	expression/L8 = . "!" expression
	expression/L9 = . expression "*" expression
	expression/L9 = . expression "/" expression
	expression/L9 = . expression "%" expression
	expression/L10 = . expression "<<" expression
	expression/L10 = . expression ">>" expression
	expression/L11 = . iexpression
	expression/L11 = . expression "." IDENT
	expression/L11 = . "*" expression
	expression/L12 = . expression "(" expressionlist ")"
	expression/L12 = expression "(" . expressionlist ")"
	expression/L12 = . expression "(" ")"
	expression/L12 = expression "(" . ")"
	expression/L12 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
	expressionlist = . expression "," expressionlist
	expressionlist = . expression
	expressionlist = .
[111]
	statement = expression ";" .
[112]
	expression/L1 = . IDENT
	expression/L1 = . BOOLEAN
	expression/L1 = . CARDINAL
	expression/L1 = . INTEGER
	expression/L1 = . FLOAT
	expression/L1 = . DQSTRING
	expression/L1 = . SQSTRING
	expression/L1 = . "(" expression ")"
	expression/L2 = . expression "=" expression
	expression/L2 = . expression "+=" expression
	expression/L2 = . expression "-=" expression
	expression/L2 = . expression "*=" expression
	expression/L2 = . expression "/=" expression
	expression/L2 = . expression "%=" expression
	expression/L2 = . expression "&&=" expression
	expression/L2 = . expression "||=" expression
	expression/L2 = . expression "&=" expression
	expression/L2 = . expression "|=" expression
	expression/L2 = . expression "<<=" expression
	expression/L2 = . expression ">>=" expression
	expression/L3 = . expression "||" expression
	expression/L4 = . expression "&&" expression
	expression/L5 = . expression "|" expression
	expression/L6 = . expression "^" expression
	expression/L6 = . expression "&" expression
	expression/L6 = expression "&" . expression
	expression/L7 = . expression "==" expression
	expression/L7 = . expression "!=" expression
	expression/L7 = . expression "<=" expression
	expression/L7 = . expression "<" expression
	expression/L7 = . expression ">=" expression
	expression/L7 = . expression ">" expression
	expression/L8 = . expression "+" expression
	expression/L8 = . expression "-" expression
	expression/L8 = . "&" expression
	expression/L8 = . "-" expression
	expression/L8 = . "+" expression
	expression/L8 = . "~" expression
	expression/L8 = . "!" expression
	expression/L9 = . expression "*" expression
	expression/L9 = . expression "/" expression
	expression/L9 = . expression "%" expression
	expression/L10 = . expression "<<" expression
	expression/L10 = . expression ">>" expression
	expression/L11 = . iexpression
	expression/L11 = . expression "." IDENT
	expression/L11 = . "*" expression
	expression/L12 = . expression "(" expressionlist ")"
	expression/L12 = . expression "(" ")"
	expression/L12 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[113]
	expression/L1 = . IDENT
	expression/L1 = . BOOLEAN
	expression/L1 = . CARDINAL
	expression/L1 = . INTEGER
	expression/L1 = . FLOAT
	expression/L1 = . DQSTRING
	expression/L1 = . SQSTRING
	expression/L1 = . "(" expression ")"
	expression/L2 = . expression "=" expression
	expression/L2 = . expression "+=" expression
	expression/L2 = . expression "-=" expression
	expression/L2 = . expression "*=" expression
	expression/L2 = . expression "/=" expression
	expression/L2 = . expression "%=" expression
	expression/L2 = . expression "&&=" expression
	expression/L2 = . expression "||=" expression
	expression/L2 = . expression "&=" expression
	expression/L2 = . expression "|=" expression
	expression/L2 = . expression "<<=" expression
	expression/L2 = . expression ">>=" expression
	expression/L3 = . expression "||" expression
	expression/L4 = . expression "&&" expression
	expression/L5 = . expression "|" expression
	expression/L6 = . expression "^" expression
	expression/L6 = expression "^" . expression
	expression/L6 = . expression "&" expression
	expression/L7 = . expression "==" expression
	expression/L7 = . expression "!=" expression
	expression/L7 = . expression "<=" expression
	expression/L7 = . expression "<" expression
	expression/L7 = . expression ">=" expression
	expression/L7 = . expression ">" expression
	expression/L8 = . expression "+" expression
	expression/L8 = . expression "-" expression
	expression/L8 = . "&" expression
	expression/L8 = . "-" expression
	expression/L8 = . "+" expression
	expression/L8 = . "~" expression
	expression/L8 = . "!" expression
	expression/L9 = . expression "*" expression
	expression/L9 = . expression "/" expression
	expression/L9 = . expression "%" expression
	expression/L10 = . expression "<<" expression
	expression/L10 = . expression ">>" expression
	expression/L11 = . iexpression
	expression/L11 = . expression "." IDENT
	expression/L11 = . "*" expression
	expression/L12 = . expression "(" expressionlist ")"
	expression/L12 = . expression "(" ")"
	expression/L12 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[114]
	expression/L1 = . IDENT
	expression/L1 = . BOOLEAN
	expression/L1 = . CARDINAL
	expression/L1 = . INTEGER
	expression/L1 = . FLOAT
	expression/L1 = . DQSTRING
	expression/L1 = . SQSTRING
	expression/L1 = . "(" expression ")"
	expression/L2 = . expression "=" expression
	expression/L2 = expression "=" . expression
	expression/L2 = . expression "+=" expression
	expression/L2 = . expression "-=" expression
	expression/L2 = . expression "*=" expression
	expression/L2 = . expression "/=" expression
	expression/L2 = . expression "%=" expression
	expression/L2 = . expression "&&=" expression
	expression/L2 = . expression "||=" expression
	expression/L2 = . expression "&=" expression
	expression/L2 = . expression "|=" expression
	expression/L2 = . expression "<<=" expression
	expression/L2 = . expression ">>=" expression
	expression/L3 = . expression "||" expression
	expression/L4 = . expression "&&" expression
	expression/L5 = . expression "|" expression
	expression/L6 = . expression "^" expression
	expression/L6 = . expression "&" expression
	expression/L7 = . expression "==" expression
	expression/L7 = . expression "!=" expression
	expression/L7 = . expression "<=" expression
	expression/L7 = . expression "<" expression
	expression/L7 = . expression ">=" expression
	expression/L7 = . expression ">" expression
	expression/L8 = . expression "+" expression
	expression/L8 = . expression "-" expression
	expression/L8 = . "&" expression
	expression/L8 = . "-" expression
	expression/L8 = . "+" expression
	expression/L8 = . "~" expression
	expression/L8 = . "!" expression
	expression/L9 = . expression "*" expression
	expression/L9 = . expression "/" expression
	expression/L9 = . expression "%" expression
	expression/L10 = . expression "<<" expression
	expression/L10 = . expression ">>" expression
	expression/L11 = . iexpression
	expression/L11 = . expression "." IDENT
	expression/L11 = . "*" expression
	expression/L12 = . expression "(" expressionlist ")"
	expression/L12 = . expression "(" ")"
	expression/L12 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[115]
	expression/L1 = . IDENT
	expression/L1 = . BOOLEAN
	expression/L1 = . CARDINAL
	expression/L1 = . INTEGER
	expression/L1 = . FLOAT
	expression/L1 = . DQSTRING
	expression/L1 = . SQSTRING
	expression/L1 = . "(" expression ")"
	expression/L2 = . expression "=" expression
	expression/L2 = . expression "+=" expression
	expression/L2 = . expression "-=" expression
	expression/L2 = . expression "*=" expression
	expression/L2 = . expression "/=" expression
	expression/L2 = . expression "%=" expression
	expression/L2 = . expression "&&=" expression
	expression/L2 = . expression "||=" expression
	expression/L2 = . expression "&=" expression
	expression/L2 = . expression "|=" expression
	expression/L2 = . expression "<<=" expression
	expression/L2 = . expression ">>=" expression
	expression/L3 = . expression "||" expression
	expression/L4 = . expression "&&" expression
	expression/L5 = . expression "|" expression
	expression/L6 = . expression "^" expression
	expression/L6 = . expression "&" expression
	expression/L7 = . expression "==" expression
	expression/L7 = . expression "!=" expression
	expression/L7 = . expression "<=" expression
	expression/L7 = . expression "<" expression
	expression/L7 = . expression ">=" expression
	expression/L7 = . expression ">" expression
	expression/L8 = . expression "+" expression
	expression/L8 = . expression "-" expression
	expression/L8 = . "&" expression
	expression/L8 = . "-" expression
	expression/L8 = . "+" expression
	expression/L8 = . "~" expression
	expression/L8 = . "!" expression
	expression/L9 = . expression "*" expression
	expression/L9 = . expression "/" expression
	expression/L9 = . expression "%" expression
	expression/L10 = . expression "<<" expression
	expression/L10 = . expression ">>" expression
	expression/L11 = . iexpression
	expression/L11 = . expression "." IDENT
	expression/L11 = . "*" expression
	expression/L12 = . expression "(" expressionlist ")"
	expression/L12 = . expression "(" ")"
	expression/L12 = . expression "[" expressionlist "]"
	expression/L12 = expression "[" . expressionlist "]"
	iexpression = . expression indirection IDENT
	expressionlist = . expression "," expressionlist
	expressionlist = . expression
	expressionlist = .
[116]
	expression/L1 = . IDENT
	expression/L1 = . BOOLEAN
	expression/L1 = . CARDINAL
	expression/L1 = . INTEGER
	expression/L1 = . FLOAT
	expression/L1 = . DQSTRING
	expression/L1 = . SQSTRING
	expression/L1 = . "(" expression ")"
	expression/L2 = . expression "=" expression
	expression/L2 = . expression "+=" expression
	expression/L2 = expression "+=" . expression
	expression/L2 = . expression "-=" expression
	expression/L2 = . expression "*=" expression
	expression/L2 = . expression "/=" expression
	expression/L2 = . expression "%=" expression
	expression/L2 = . expression "&&=" expression
	expression/L2 = . expression "||=" expression
	expression/L2 = . expression "&=" expression
	expression/L2 = . expression "|=" expression
	expression/L2 = . expression "<<=" expression
	expression/L2 = . expression ">>=" expression
	expression/L3 = . expression "||" expression
	expression/L4 = . expression "&&" expression
	expression/L5 = . expression "|" expression
	expression/L6 = . expression "^" expression
	expression/L6 = . expression "&" expression
	expression/L7 = . expression "==" expression
	expression/L7 = . expression "!=" expression
	expression/L7 = . expression "<=" expression
	expression/L7 = . expression "<" expression
	expression/L7 = . expression ">=" expression
	expression/L7 = . expression ">" expression
	expression/L8 = . expression "+" expression
	expression/L8 = . expression "-" expression
	expression/L8 = . "&" expression
	expression/L8 = . "-" expression
	expression/L8 = . "+" expression
	expression/L8 = . "~" expression
	expression/L8 = . "!" expression
	expression/L9 = . expression "*" expression
	expression/L9 = . expression "/" expression
	expression/L9 = . expression "%" expression
	expression/L10 = . expression "<<" expression
	expression/L10 = . expression ">>" expression
	expression/L11 = . iexpression
	expression/L11 = . expression "." IDENT
	expression/L11 = . "*" expression
	expression/L12 = . expression "(" expressionlist ")"
	expression/L12 = . expression "(" ")"
	expression/L12 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[117]
	expression/L1 = . IDENT
	expression/L1 = . BOOLEAN
	expression/L1 = . CARDINAL
	expression/L1 = . INTEGER
	expression/L1 = . FLOAT
	expression/L1 = . DQSTRING
	expression/L1 = . SQSTRING
	expression/L1 = . "(" expression ")"
	expression/L2 = . expression "=" expression
	expression/L2 = . expression "+=" expression
	expression/L2 = . expression "-=" expression
	expression/L2 = expression "-=" . expression
	expression/L2 = . expression "*=" expression
	expression/L2 = . expression "/=" expression
	expression/L2 = . expression "%=" expression
	expression/L2 = . expression "&&=" expression
	expression/L2 = . expression "||=" expression
	expression/L2 = . expression "&=" expression
	expression/L2 = . expression "|=" expression
	expression/L2 = . expression "<<=" expression
	expression/L2 = . expression ">>=" expression
	expression/L3 = . expression "||" expression
	expression/L4 = . expression "&&" expression
	expression/L5 = . expression "|" expression
	expression/L6 = . expression "^" expression
	expression/L6 = . expression "&" expression
	expression/L7 = . expression "==" expression
	expression/L7 = . expression "!=" expression
	expression/L7 = . expression "<=" expression
	expression/L7 = . expression "<" expression
	expression/L7 = . expression ">=" expression
	expression/L7 = . expression ">" expression
	expression/L8 = . expression "+" expression
	expression/L8 = . expression "-" expression
	expression/L8 = . "&" expression
	expression/L8 = . "-" expression
	expression/L8 = . "+" expression
	expression/L8 = . "~" expression
	expression/L8 = . "!" expression
	expression/L9 = . expression "*" expression
	expression/L9 = . expression "/" expression
	expression/L9 = . expression "%" expression
	expression/L10 = . expression "<<" expression
	expression/L10 = . expression ">>" expression
	expression/L11 = . iexpression
	expression/L11 = . expression "." IDENT
	expression/L11 = . "*" expression
	expression/L12 = . expression "(" expressionlist ")"
	expression/L12 = . expression "(" ")"
	expression/L12 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[118]
	expression/L1 = . IDENT
	expression/L1 = . BOOLEAN
	expression/L1 = . CARDINAL
	expression/L1 = . INTEGER
	expression/L1 = . FLOAT
	expression/L1 = . DQSTRING
	expression/L1 = . SQSTRING
	expression/L1 = . "(" expression ")"
	expression/L2 = . expression "=" expression
	expression/L2 = . expression "+=" expression
	expression/L2 = . expression "-=" expression
	expression/L2 = . expression "*=" expression
	expression/L2 = expression "*=" . expression
	expression/L2 = . expression "/=" expression
	expression/L2 = . expression "%=" expression
	expression/L2 = . expression "&&=" expression
	expression/L2 = . expression "||=" expression
	expression/L2 = . expression "&=" expression
	expression/L2 = . expression "|=" expression
	expression/L2 = . expression "<<=" expression
	expression/L2 = . expression ">>=" expression
	expression/L3 = . expression "||" expression
	expression/L4 = . expression "&&" expression
	expression/L5 = . expression "|" expression
	expression/L6 = . expression "^" expression
	expression/L6 = . expression "&" expression
	expression/L7 = . expression "==" expression
	expression/L7 = . expression "!=" expression
	expression/L7 = . expression "<=" expression
	expression/L7 = . expression "<" expression
	expression/L7 = . expression ">=" expression
	expression/L7 = . expression ">" expression
	expression/L8 = . expression "+" expression
	expression/L8 = . expression "-" expression
	expression/L8 = . "&" expression
	expression/L8 = . "-" expression
	expression/L8 = . "+" expression
	expression/L8 = . "~" expression
	expression/L8 = . "!" expression
	expression/L9 = . expression "*" expression
	expression/L9 = . expression "/" expression
	expression/L9 = . expression "%" expression
	expression/L10 = . expression "<<" expression
	expression/L10 = . expression ">>" expression
	expression/L11 = . iexpression
	expression/L11 = . expression "." IDENT
	expression/L11 = . "*" expression
	expression/L12 = . expression "(" expressionlist ")"
	expression/L12 = . expression "(" ")"
	expression/L12 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[119]
	expression/L1 = . IDENT
	expression/L1 = . BOOLEAN
	expression/L1 = . CARDINAL
	expression/L1 = . INTEGER
	expression/L1 = . FLOAT
	expression/L1 = . DQSTRING
	expression/L1 = . SQSTRING
	expression/L1 = . "(" expression ")"
	expression/L2 = . expression "=" expression
	expression/L2 = . expression "+=" expression
	expression/L2 = . expression "-=" expression
	expression/L2 = . expression "*=" expression
	expression/L2 = . expression "/=" expression
	expression/L2 = expression "/=" . expression
	expression/L2 = . expression "%=" expression
	expression/L2 = . expression "&&=" expression
	expression/L2 = . expression "||=" expression
	expression/L2 = . expression "&=" expression
	expression/L2 = . expression "|=" expression
	expression/L2 = . expression "<<=" expression
	expression/L2 = . expression ">>=" expression
	expression/L3 = . expression "||" expression
	expression/L4 = . expression "&&" expression
	expression/L5 = . expression "|" expression
	expression/L6 = . expression "^" expression
	expression/L6 = . expression "&" expression
	expression/L7 = . expression "==" expression
	expression/L7 = . expression "!=" expression
	expression/L7 = . expression "<=" expression
	expression/L7 = . expression "<" expression
	expression/L7 = . expression ">=" expression
	expression/L7 = . expression ">" expression
	expression/L8 = . expression "+" expression
	expression/L8 = . expression "-" expression
	expression/L8 = . "&" expression
	expression/L8 = . "-" expression
	expression/L8 = . "+" expression
	expression/L8 = . "~" expression
	expression/L8 = . "!" expression
	expression/L9 = . expression "*" expression
	expression/L9 = . expression "/" expression
	expression/L9 = . expression "%" expression
	expression/L10 = . expression "<<" expression
	expression/L10 = . expression ">>" expression
	expression/L11 = . iexpression
	expression/L11 = . expression "." IDENT
	expression/L11 = . "*" expression
	expression/L12 = . expression "(" expressionlist ")"
	expression/L12 = . expression "(" ")"
	expression/L12 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[120]
	expression/L1 = . IDENT
	expression/L1 = . BOOLEAN
	expression/L1 = . CARDINAL
	expression/L1 = . INTEGER
	expression/L1 = . FLOAT
	expression/L1 = . DQSTRING
	expression/L1 = . SQSTRING
	expression/L1 = . "(" expression ")"
	expression/L2 = . expression "=" expression
	expression/L2 = . expression "+=" expression
	expression/L2 = . expression "-=" expression
	expression/L2 = . expression "*=" expression
	expression/L2 = . expression "/=" expression
	expression/L2 = . expression "%=" expression
	expression/L2 = expression "%=" . expression
	expression/L2 = . expression "&&=" expression
	expression/L2 = . expression "||=" expression
	expression/L2 = . expression "&=" expression
	expression/L2 = . expression "|=" expression
	expression/L2 = . expression "<<=" expression
	expression/L2 = . expression ">>=" expression
	expression/L3 = . expression "||" expression
	expression/L4 = . expression "&&" expression
	expression/L5 = . expression "|" expression
	expression/L6 = . expression "^" expression
	expression/L6 = . expression "&" expression
	expression/L7 = . expression "==" expression
	expression/L7 = . expression "!=" expression
	expression/L7 = . expression "<=" expression
	expression/L7 = . expression "<" expression
	expression/L7 = . expression ">=" expression
	expression/L7 = . expression ">" expression
	expression/L8 = . expression "+" expression
	expression/L8 = . expression "-" expression
	expression/L8 = . "&" expression
	expression/L8 = . "-" expression
	expression/L8 = . "+" expression
	expression/L8 = . "~" expression
	expression/L8 = . "!" expression
	expression/L9 = . expression "*" expression
	expression/L9 = . expression "/" expression
	expression/L9 = . expression "%" expression
	expression/L10 = . expression "<<" expression
	expression/L10 = . expression ">>" expression
	expression/L11 = . iexpression
	expression/L11 = . expression "." IDENT
	expression/L11 = . "*" expression
	expression/L12 = . expression "(" expressionlist ")"
	expression/L12 = . expression "(" ")"
	expression/L12 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[121]
	expression/L1 = . IDENT
	expression/L1 = . BOOLEAN
	expression/L1 = . CARDINAL
	expression/L1 = . INTEGER
	expression/L1 = . FLOAT
	expression/L1 = . DQSTRING
	expression/L1 = . SQSTRING
	expression/L1 = . "(" expression ")"
	expression/L2 = . expression "=" expression
	expression/L2 = . expression "+=" expression
	expression/L2 = . expression "-=" expression
	expression/L2 = . expression "*=" expression
	expression/L2 = . expression "/=" expression
	expression/L2 = . expression "%=" expression
	expression/L2 = . expression "&&=" expression
	expression/L2 = expression "&&=" . expression
	expression/L2 = . expression "||=" expression
	expression/L2 = . expression "&=" expression
	expression/L2 = . expression "|=" expression
	expression/L2 = . expression "<<=" expression
	expression/L2 = . expression ">>=" expression
	expression/L3 = . expression "||" expression
	expression/L4 = . expression "&&" expression
	expression/L5 = . expression "|" expression
	expression/L6 = . expression "^" expression
	expression/L6 = . expression "&" expression
	expression/L7 = . expression "==" expression
	expression/L7 = . expression "!=" expression
	expression/L7 = . expression "<=" expression
	expression/L7 = . expression "<" expression
	expression/L7 = . expression ">=" expression
	expression/L7 = . expression ">" expression
	expression/L8 = . expression "+" expression
	expression/L8 = . expression "-" expression
	expression/L8 = . "&" expression
	expression/L8 = . "-" expression
	expression/L8 = . "+" expression
	expression/L8 = . "~" expression
	expression/L8 = . "!" expression
	expression/L9 = . expression "*" expression
	expression/L9 = . expression "/" expression
	expression/L9 = . expression "%" expression
	expression/L10 = . expression "<<" expression
	expression/L10 = . expression ">>" expression
	expression/L11 = . iexpression
	expression/L11 = . expression "." IDENT
	expression/L11 = . "*" expression
	expression/L12 = . expression "(" expressionlist ")"
	expression/L12 = . expression "(" ")"
	expression/L12 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[122]
	expression/L1 = . IDENT
	expression/L1 = . BOOLEAN
	expression/L1 = . CARDINAL
	expression/L1 = . INTEGER
	expression/L1 = . FLOAT
	expression/L1 = . DQSTRING
	expression/L1 = . SQSTRING
	expression/L1 = . "(" expression ")"
	expression/L2 = . expression "=" expression
	expression/L2 = . expression "+=" expression
	expression/L2 = . expression "-=" expression
	expression/L2 = . expression "*=" expression
	expression/L2 = . expression "/=" expression
	expression/L2 = . expression "%=" expression
	expression/L2 = . expression "&&=" expression
	expression/L2 = . expression "||=" expression
	expression/L2 = expression "||=" . expression
	expression/L2 = . expression "&=" expression
	expression/L2 = . expression "|=" expression
	expression/L2 = . expression "<<=" expression
	expression/L2 = . expression ">>=" expression
	expression/L3 = . expression "||" expression
	expression/L4 = . expression "&&" expression
	expression/L5 = . expression "|" expression
	expression/L6 = . expression "^" expression
	expression/L6 = . expression "&" expression
	expression/L7 = . expression "==" expression
	expression/L7 = . expression "!=" expression
	expression/L7 = . expression "<=" expression
	expression/L7 = . expression "<" expression
	expression/L7 = . expression ">=" expression
	expression/L7 = . expression ">" expression
	expression/L8 = . expression "+" expression
	expression/L8 = . expression "-" expression
	expression/L8 = . "&" expression
	expression/L8 = . "-" expression
	expression/L8 = . "+" expression
	expression/L8 = . "~" expression
	expression/L8 = . "!" expression
	expression/L9 = . expression "*" expression
	expression/L9 = . expression "/" expression
	expression/L9 = . expression "%" expression
	expression/L10 = . expression "<<" expression
	expression/L10 = . expression ">>" expression
	expression/L11 = . iexpression
	expression/L11 = . expression "." IDENT
	expression/L11 = . "*" expression
	expression/L12 = . expression "(" expressionlist ")"
	expression/L12 = . expression "(" ")"
	expression/L12 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[123]
	expression/L1 = . IDENT
	expression/L1 = . BOOLEAN
	expression/L1 = . CARDINAL
	expression/L1 = . INTEGER
	expression/L1 = . FLOAT
	expression/L1 = . DQSTRING
	expression/L1 = . SQSTRING
	expression/L1 = . "(" expression ")"
	expression/L2 = . expression "=" expression
	expression/L2 = . expression "+=" expression
	expression/L2 = . expression "-=" expression
	expression/L2 = . expression "*=" expression
	expression/L2 = . expression "/=" expression
	expression/L2 = . expression "%=" expression
	expression/L2 = . expression "&&=" expression
	expression/L2 = . expression "||=" expression
	expression/L2 = . expression "&=" expression
	expression/L2 = expression "&=" . expression
	expression/L2 = . expression "|=" expression
	expression/L2 = . expression "<<=" expression
	expression/L2 = . expression ">>=" expression
	expression/L3 = . expression "||" expression
	expression/L4 = . expression "&&" expression
	expression/L5 = . expression "|" expression
	expression/L6 = . expression "^" expression
	expression/L6 = . expression "&" expression
	expression/L7 = . expression "==" expression
	expression/L7 = . expression "!=" expression
	expression/L7 = . expression "<=" expression
	expression/L7 = . expression "<" expression
	expression/L7 = . expression ">=" expression
	expression/L7 = . expression ">" expression
	expression/L8 = . expression "+" expression
	expression/L8 = . expression "-" expression
	expression/L8 = . "&" expression
	expression/L8 = . "-" expression
	expression/L8 = . "+" expression
	expression/L8 = . "~" expression
	expression/L8 = . "!" expression
	expression/L9 = . expression "*" expression
	expression/L9 = . expression "/" expression
	expression/L9 = . expression "%" expression
	expression/L10 = . expression "<<" expression
	expression/L10 = . expression ">>" expression
	expression/L11 = . iexpression
	expression/L11 = . expression "." IDENT
	expression/L11 = . "*" expression
	expression/L12 = . expression "(" expressionlist ")"
	expression/L12 = . expression "(" ")"
	expression/L12 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[124]
	expression/L1 = . IDENT
	expression/L1 = . BOOLEAN
	expression/L1 = . CARDINAL
	expression/L1 = . INTEGER
	expression/L1 = . FLOAT
	expression/L1 = . DQSTRING
	expression/L1 = . SQSTRING
	expression/L1 = . "(" expression ")"
	expression/L2 = . expression "=" expression
	expression/L2 = . expression "+=" expression
	expression/L2 = . expression "-=" expression
	expression/L2 = . expression "*=" expression
	expression/L2 = . expression "/=" expression
	expression/L2 = . expression "%=" expression
	expression/L2 = . expression "&&=" expression
	expression/L2 = . expression "||=" expression
	expression/L2 = . expression "&=" expression
	expression/L2 = . expression "|=" expression
	expression/L2 = expression "|=" . expression
	expression/L2 = . expression "<<=" expression
	expression/L2 = . expression ">>=" expression
	expression/L3 = . expression "||" expression
	expression/L4 = . expression "&&" expression
	expression/L5 = . expression "|" expression
	expression/L6 = . expression "^" expression
	expression/L6 = . expression "&" expression
	expression/L7 = . expression "==" expression
	expression/L7 = . expression "!=" expression
	expression/L7 = . expression "<=" expression
	expression/L7 = . expression "<" expression
	expression/L7 = . expression ">=" expression
	expression/L7 = . expression ">" expression
	expression/L8 = . expression "+" expression
	expression/L8 = . expression "-" expression
	expression/L8 = . "&" expression
	expression/L8 = . "-" expression
	expression/L8 = . "+" expression
	expression/L8 = . "~" expression
	expression/L8 = . "!" expression
	expression/L9 = . expression "*" expression
	expression/L9 = . expression "/" expression
	expression/L9 = . expression "%" expression
	expression/L10 = . expression "<<" expression
	expression/L10 = . expression ">>" expression
	expression/L11 = . iexpression
	expression/L11 = . expression "." IDENT
	expression/L11 = . "*" expression
	expression/L12 = . expression "(" expressionlist ")"
	expression/L12 = . expression "(" ")"
	expression/L12 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[125]
	expression/L1 = . IDENT
	expression/L1 = . BOOLEAN
	expression/L1 = . CARDINAL
	expression/L1 = . INTEGER
	expression/L1 = . FLOAT
	expression/L1 = . DQSTRING
	expression/L1 = . SQSTRING
	expression/L1 = . "(" expression ")"
	expression/L2 = . expression "=" expression
	expression/L2 = . expression "+=" expression
	expression/L2 = . expression "-=" expression
	expression/L2 = . expression "*=" expression
	expression/L2 = . expression "/=" expression
	expression/L2 = . expression "%=" expression
	expression/L2 = . expression "&&=" expression
	expression/L2 = . expression "||=" expression
	expression/L2 = . expression "&=" expression
	expression/L2 = . expression "|=" expression
	expression/L2 = . expression "<<=" expression
	expression/L2 = expression "<<=" . expression
	expression/L2 = . expression ">>=" expression
	expression/L3 = . expression "||" expression
	expression/L4 = . expression "&&" expression
	expression/L5 = . expression "|" expression
	expression/L6 = . expression "^" expression
	expression/L6 = . expression "&" expression
	expression/L7 = . expression "==" expression
	expression/L7 = . expression "!=" expression
	expression/L7 = . expression "<=" expression
	expression/L7 = . expression "<" expression
	expression/L7 = . expression ">=" expression
	expression/L7 = . expression ">" expression
	expression/L8 = . expression "+" expression
	expression/L8 = . expression "-" expression
	expression/L8 = . "&" expression
	expression/L8 = . "-" expression
	expression/L8 = . "+" expression
	expression/L8 = . "~" expression
	expression/L8 = . "!" expression
	expression/L9 = . expression "*" expression
	expression/L9 = . expression "/" expression
	expression/L9 = . expression "%" expression
	expression/L10 = . expression "<<" expression
	expression/L10 = . expression ">>" expression
	expression/L11 = . iexpression
	expression/L11 = . expression "." IDENT
	expression/L11 = . "*" expression
	expression/L12 = . expression "(" expressionlist ")"
	expression/L12 = . expression "(" ")"
	expression/L12 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[126]
	expression/L1 = . IDENT
	expression/L1 = . BOOLEAN
	expression/L1 = . CARDINAL
	expression/L1 = . INTEGER
	expression/L1 = . FLOAT
	expression/L1 = . DQSTRING
	expression/L1 = . SQSTRING
	expression/L1 = . "(" expression ")"
	expression/L2 = . expression "=" expression
	expression/L2 = . expression "+=" expression
	expression/L2 = . expression "-=" expression
	expression/L2 = . expression "*=" expression
	expression/L2 = . expression "/=" expression
	expression/L2 = . expression "%=" expression
	expression/L2 = . expression "&&=" expression
	expression/L2 = . expression "||=" expression
	expression/L2 = . expression "&=" expression
	expression/L2 = . expression "|=" expression
	expression/L2 = . expression "<<=" expression
	expression/L2 = . expression ">>=" expression
	expression/L2 = expression ">>=" . expression
	expression/L3 = . expression "||" expression
	expression/L4 = . expression "&&" expression
	expression/L5 = . expression "|" expression
	expression/L6 = . expression "^" expression
	expression/L6 = . expression "&" expression
	expression/L7 = . expression "==" expression
	expression/L7 = . expression "!=" expression
	expression/L7 = . expression "<=" expression
	expression/L7 = . expression "<" expression
	expression/L7 = . expression ">=" expression
	expression/L7 = . expression ">" expression
	expression/L8 = . expression "+" expression
	expression/L8 = . expression "-" expression
	expression/L8 = . "&" expression
	expression/L8 = . "-" expression
	expression/L8 = . "+" expression
	expression/L8 = . "~" expression
	expression/L8 = . "!" expression
	expression/L9 = . expression "*" expression
	expression/L9 = . expression "/" expression
	expression/L9 = . expression "%" expression
	expression/L10 = . expression "<<" expression
	expression/L10 = . expression ">>" expression
	expression/L11 = . iexpression
	expression/L11 = . expression "." IDENT
	expression/L11 = . "*" expression
	expression/L12 = . expression "(" expressionlist ")"
	expression/L12 = . expression "(" ")"
	expression/L12 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[127]
	expression/L1 = . IDENT
	expression/L1 = . BOOLEAN
	expression/L1 = . CARDINAL
	expression/L1 = . INTEGER
	expression/L1 = . FLOAT
	expression/L1 = . DQSTRING
	expression/L1 = . SQSTRING
	expression/L1 = . "(" expression ")"
	expression/L2 = . expression "=" expression
	expression/L2 = . expression "+=" expression
	expression/L2 = . expression "-=" expression
	expression/L2 = . expression "*=" expression
	expression/L2 = . expression "/=" expression
	expression/L2 = . expression "%=" expression
	expression/L2 = . expression "&&=" expression
	expression/L2 = . expression "||=" expression
	expression/L2 = . expression "&=" expression
	expression/L2 = . expression "|=" expression
	expression/L2 = . expression "<<=" expression
	expression/L2 = . expression ">>=" expression
	expression/L3 = . expression "||" expression
	expression/L3 = expression "||" . expression
	expression/L4 = . expression "&&" expression
	expression/L5 = . expression "|" expression
	expression/L6 = . expression "^" expression
	expression/L6 = . expression "&" expression
	expression/L7 = . expression "==" expression
	expression/L7 = . expression "!=" expression
	expression/L7 = . expression "<=" expression
	expression/L7 = . expression "<" expression
	expression/L7 = . expression ">=" expression
	expression/L7 = . expression ">" expression
	expression/L8 = . expression "+" expression
	expression/L8 = . expression "-" expression
	expression/L8 = . "&" expression
	expression/L8 = . "-" expression
	expression/L8 = . "+" expression
	expression/L8 = . "~" expression
	expression/L8 = . "!" expression
	expression/L9 = . expression "*" expression
	expression/L9 = . expression "/" expression
	expression/L9 = . expression "%" expression
	expression/L10 = . expression "<<" expression
	expression/L10 = . expression ">>" expression
	expression/L11 = . iexpression
	expression/L11 = . expression "." IDENT
	expression/L11 = . "*" expression
	expression/L12 = . expression "(" expressionlist ")"
	expression/L12 = . expression "(" ")"
	expression/L12 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[128]
	expression/L1 = . IDENT
	expression/L1 = . BOOLEAN
	expression/L1 = . CARDINAL
	expression/L1 = . INTEGER
	expression/L1 = . FLOAT
	expression/L1 = . DQSTRING
	expression/L1 = . SQSTRING
	expression/L1 = . "(" expression ")"
	expression/L2 = . expression "=" expression
	expression/L2 = . expression "+=" expression
	expression/L2 = . expression "-=" expression
	expression/L2 = . expression "*=" expression
	expression/L2 = . expression "/=" expression
	expression/L2 = . expression "%=" expression
	expression/L2 = . expression "&&=" expression
	expression/L2 = . expression "||=" expression
	expression/L2 = . expression "&=" expression
	expression/L2 = . expression "|=" expression
	expression/L2 = . expression "<<=" expression
	expression/L2 = . expression ">>=" expression
	expression/L3 = . expression "||" expression
	expression/L4 = . expression "&&" expression
	expression/L4 = expression "&&" . expression
	expression/L5 = . expression "|" expression
	expression/L6 = . expression "^" expression
	expression/L6 = . expression "&" expression
	expression/L7 = . expression "==" expression
	expression/L7 = . expression "!=" expression
	expression/L7 = . expression "<=" expression
	expression/L7 = . expression "<" expression
	expression/L7 = . expression ">=" expression
	expression/L7 = . expression ">" expression
	expression/L8 = . expression "+" expression
	expression/L8 = . expression "-" expression
	expression/L8 = . "&" expression
	expression/L8 = . "-" expression
	expression/L8 = . "+" expression
	expression/L8 = . "~" expression
	expression/L8 = . "!" expression
	expression/L9 = . expression "*" expression
	expression/L9 = . expression "/" expression
	expression/L9 = . expression "%" expression
	expression/L10 = . expression "<<" expression
	expression/L10 = . expression ">>" expression
	expression/L11 = . iexpression
	expression/L11 = . expression "." IDENT
	expression/L11 = . "*" expression
	expression/L12 = . expression "(" expressionlist ")"
	expression/L12 = . expression "(" ")"
	expression/L12 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[129]
	expression/L1 = . IDENT
	expression/L1 = . BOOLEAN
	expression/L1 = . CARDINAL
	expression/L1 = . INTEGER
	expression/L1 = . FLOAT
	expression/L1 = . DQSTRING
	expression/L1 = . SQSTRING
	expression/L1 = . "(" expression ")"
	expression/L2 = . expression "=" expression
	expression/L2 = . expression "+=" expression
	expression/L2 = . expression "-=" expression
	expression/L2 = . expression "*=" expression
	expression/L2 = . expression "/=" expression
	expression/L2 = . expression "%=" expression
	expression/L2 = . expression "&&=" expression
	expression/L2 = . expression "||=" expression
	expression/L2 = . expression "&=" expression
	expression/L2 = . expression "|=" expression
	expression/L2 = . expression "<<=" expression
	expression/L2 = . expression ">>=" expression
	expression/L3 = . expression "||" expression
	expression/L4 = . expression "&&" expression
	expression/L5 = . expression "|" expression
	expression/L5 = expression "|" . expression
	expression/L6 = . expression "^" expression
	expression/L6 = . expression "&" expression
	expression/L7 = . expression "==" expression
	expression/L7 = . expression "!=" expression
	expression/L7 = . expression "<=" expression
	expression/L7 = . expression "<" expression
	expression/L7 = . expression ">=" expression
	expression/L7 = . expression ">" expression
	expression/L8 = . expression "+" expression
	expression/L8 = . expression "-" expression
	expression/L8 = . "&" expression
	expression/L8 = . "-" expression
	expression/L8 = . "+" expression
	expression/L8 = . "~" expression
	expression/L8 = . "!" expression
	expression/L9 = . expression "*" expression
	expression/L9 = . expression "/" expression
	expression/L9 = . expression "%" expression
	expression/L10 = . expression "<<" expression
	expression/L10 = . expression ">>" expression
	expression/L11 = . iexpression
	expression/L11 = . expression "." IDENT
	expression/L11 = . "*" expression
	expression/L12 = . expression "(" expressionlist ")"
	expression/L12 = . expression "(" ")"
	expression/L12 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[130]
	expression/L1 = . IDENT
	expression/L1 = . BOOLEAN
	expression/L1 = . CARDINAL
	expression/L1 = . INTEGER
	expression/L1 = . FLOAT
	expression/L1 = . DQSTRING
	expression/L1 = . SQSTRING
	expression/L1 = . "(" expression ")"
	expression/L2 = . expression "=" expression
	expression/L2 = . expression "+=" expression
	expression/L2 = . expression "-=" expression
	expression/L2 = . expression "*=" expression
	expression/L2 = . expression "/=" expression
	expression/L2 = . expression "%=" expression
	expression/L2 = . expression "&&=" expression
	expression/L2 = . expression "||=" expression
	expression/L2 = . expression "&=" expression
	expression/L2 = . expression "|=" expression
	expression/L2 = . expression "<<=" expression
	expression/L2 = . expression ">>=" expression
	expression/L3 = . expression "||" expression
	expression/L4 = . expression "&&" expression
	expression/L5 = . expression "|" expression
	expression/L6 = . expression "^" expression
	expression/L6 = . expression "&" expression
	expression/L7 = . expression "==" expression
	expression/L7 = expression "==" . expression
	expression/L7 = . expression "!=" expression
	expression/L7 = . expression "<=" expression
	expression/L7 = . expression "<" expression
	expression/L7 = . expression ">=" expression
	expression/L7 = . expression ">" expression
	expression/L8 = . expression "+" expression
	expression/L8 = . expression "-" expression
	expression/L8 = . "&" expression
	expression/L8 = . "-" expression
	expression/L8 = . "+" expression
	expression/L8 = . "~" expression
	expression/L8 = . "!" expression
	expression/L9 = . expression "*" expression
	expression/L9 = . expression "/" expression
	expression/L9 = . expression "%" expression
	expression/L10 = . expression "<<" expression
	expression/L10 = . expression ">>" expression
	expression/L11 = . iexpression
	expression/L11 = . expression "." IDENT
	expression/L11 = . "*" expression
	expression/L12 = . expression "(" expressionlist ")"
	expression/L12 = . expression "(" ")"
	expression/L12 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[131]
	expression/L1 = . IDENT
	expression/L1 = . BOOLEAN
	expression/L1 = . CARDINAL
	expression/L1 = . INTEGER
	expression/L1 = . FLOAT
	expression/L1 = . DQSTRING
	expression/L1 = . SQSTRING
	expression/L1 = . "(" expression ")"
	expression/L2 = . expression "=" expression
	expression/L2 = . expression "+=" expression
	expression/L2 = . expression "-=" expression
	expression/L2 = . expression "*=" expression
	expression/L2 = . expression "/=" expression
	expression/L2 = . expression "%=" expression
	expression/L2 = . expression "&&=" expression
	expression/L2 = . expression "||=" expression
	expression/L2 = . expression "&=" expression
	expression/L2 = . expression "|=" expression
	expression/L2 = . expression "<<=" expression
	expression/L2 = . expression ">>=" expression
	expression/L3 = . expression "||" expression
	expression/L4 = . expression "&&" expression
	expression/L5 = . expression "|" expression
	expression/L6 = . expression "^" expression
	expression/L6 = . expression "&" expression
	expression/L7 = . expression "==" expression
	expression/L7 = . expression "!=" expression
	expression/L7 = expression "!=" . expression
	expression/L7 = . expression "<=" expression
	expression/L7 = . expression "<" expression
	expression/L7 = . expression ">=" expression
	expression/L7 = . expression ">" expression
	expression/L8 = . expression "+" expression
	expression/L8 = . expression "-" expression
	expression/L8 = . "&" expression
	expression/L8 = . "-" expression
	expression/L8 = . "+" expression
	expression/L8 = . "~" expression
	expression/L8 = . "!" expression
	expression/L9 = . expression "*" expression
	expression/L9 = . expression "/" expression
	expression/L9 = . expression "%" expression
	expression/L10 = . expression "<<" expression
	expression/L10 = . expression ">>" expression
	expression/L11 = . iexpression
	expression/L11 = . expression "." IDENT
	expression/L11 = . "*" expression
	expression/L12 = . expression "(" expressionlist ")"
	expression/L12 = . expression "(" ")"
	expression/L12 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[132]
	expression/L1 = . IDENT
	expression/L1 = . BOOLEAN
	expression/L1 = . CARDINAL
	expression/L1 = . INTEGER
	expression/L1 = . FLOAT
	expression/L1 = . DQSTRING
	expression/L1 = . SQSTRING
	expression/L1 = . "(" expression ")"
	expression/L2 = . expression "=" expression
	expression/L2 = . expression "+=" expression
	expression/L2 = . expression "-=" expression
	expression/L2 = . expression "*=" expression
	expression/L2 = . expression "/=" expression
	expression/L2 = . expression "%=" expression
	expression/L2 = . expression "&&=" expression
	expression/L2 = . expression "||=" expression
	expression/L2 = . expression "&=" expression
	expression/L2 = . expression "|=" expression
	expression/L2 = . expression "<<=" expression
	expression/L2 = . expression ">>=" expression
	expression/L3 = . expression "||" expression
	expression/L4 = . expression "&&" expression
	expression/L5 = . expression "|" expression
	expression/L6 = . expression "^" expression
	expression/L6 = . expression "&" expression
	expression/L7 = . expression "==" expression
	expression/L7 = . expression "!=" expression
	expression/L7 = . expression "<=" expression
	expression/L7 = expression "<=" . expression
	expression/L7 = . expression "<" expression
	expression/L7 = . expression ">=" expression
	expression/L7 = . expression ">" expression
	expression/L8 = . expression "+" expression
	expression/L8 = . expression "-" expression
	expression/L8 = . "&" expression
	expression/L8 = . "-" expression
	expression/L8 = . "+" expression
	expression/L8 = . "~" expression
	expression/L8 = . "!" expression
	expression/L9 = . expression "*" expression
	expression/L9 = . expression "/" expression
	expression/L9 = . expression "%" expression
	expression/L10 = . expression "<<" expression
	expression/L10 = . expression ">>" expression
	expression/L11 = . iexpression
	expression/L11 = . expression "." IDENT
	expression/L11 = . "*" expression
	expression/L12 = . expression "(" expressionlist ")"
	expression/L12 = . expression "(" ")"
	expression/L12 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[133]
	expression/L1 = . IDENT
	expression/L1 = . BOOLEAN
	expression/L1 = . CARDINAL
	expression/L1 = . INTEGER
	expression/L1 = . FLOAT
	expression/L1 = . DQSTRING
	expression/L1 = . SQSTRING
	expression/L1 = . "(" expression ")"
	expression/L2 = . expression "=" expression
	expression/L2 = . expression "+=" expression
	expression/L2 = . expression "-=" expression
	expression/L2 = . expression "*=" expression
	expression/L2 = . expression "/=" expression
	expression/L2 = . expression "%=" expression
	expression/L2 = . expression "&&=" expression
	expression/L2 = . expression "||=" expression
	expression/L2 = . expression "&=" expression
	expression/L2 = . expression "|=" expression
	expression/L2 = . expression "<<=" expression
	expression/L2 = . expression ">>=" expression
	expression/L3 = . expression "||" expression
	expression/L4 = . expression "&&" expression
	expression/L5 = . expression "|" expression
	expression/L6 = . expression "^" expression
	expression/L6 = . expression "&" expression
	expression/L7 = . expression "==" expression
	expression/L7 = . expression "!=" expression
	expression/L7 = . expression "<=" expression
	expression/L7 = . expression "<" expression
	expression/L7 = expression "<" . expression
	expression/L7 = . expression ">=" expression
	expression/L7 = . expression ">" expression
	expression/L8 = . expression "+" expression
	expression/L8 = . expression "-" expression
	expression/L8 = . "&" expression
	expression/L8 = . "-" expression
	expression/L8 = . "+" expression
	expression/L8 = . "~" expression
	expression/L8 = . "!" expression
	expression/L9 = . expression "*" expression
	expression/L9 = . expression "/" expression
	expression/L9 = . expression "%" expression
	expression/L10 = . expression "<<" expression
	expression/L10 = . expression ">>" expression
	expression/L11 = . iexpression
	expression/L11 = . expression "." IDENT
	expression/L11 = . "*" expression
	expression/L12 = . expression "(" expressionlist ")"
	expression/L12 = . expression "(" ")"
	expression/L12 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[134]
	expression/L1 = . IDENT
	expression/L1 = . BOOLEAN
	expression/L1 = . CARDINAL
	expression/L1 = . INTEGER
	expression/L1 = . FLOAT
	expression/L1 = . DQSTRING
	expression/L1 = . SQSTRING
	expression/L1 = . "(" expression ")"
	expression/L2 = . expression "=" expression
	expression/L2 = . expression "+=" expression
	expression/L2 = . expression "-=" expression
	expression/L2 = . expression "*=" expression
	expression/L2 = . expression "/=" expression
	expression/L2 = . expression "%=" expression
	expression/L2 = . expression "&&=" expression
	expression/L2 = . expression "||=" expression
	expression/L2 = . expression "&=" expression
	expression/L2 = . expression "|=" expression
	expression/L2 = . expression "<<=" expression
	expression/L2 = . expression ">>=" expression
	expression/L3 = . expression "||" expression
	expression/L4 = . expression "&&" expression
	expression/L5 = . expression "|" expression
	expression/L6 = . expression "^" expression
	expression/L6 = . expression "&" expression
	expression/L7 = . expression "==" expression
	expression/L7 = . expression "!=" expression
	expression/L7 = . expression "<=" expression
	expression/L7 = . expression "<" expression
	expression/L7 = . expression ">=" expression
	expression/L7 = expression ">=" . expression
	expression/L7 = . expression ">" expression
	expression/L8 = . expression "+" expression
	expression/L8 = . expression "-" expression
	expression/L8 = . "&" expression
	expression/L8 = . "-" expression
	expression/L8 = . "+" expression
	expression/L8 = . "~" expression
	expression/L8 = . "!" expression
	expression/L9 = . expression "*" expression
	expression/L9 = . expression "/" expression
	expression/L9 = . expression "%" expression
	expression/L10 = . expression "<<" expression
	expression/L10 = . expression ">>" expression
	expression/L11 = . iexpression
	expression/L11 = . expression "." IDENT
	expression/L11 = . "*" expression
	expression/L12 = . expression "(" expressionlist ")"
	expression/L12 = . expression "(" ")"
	expression/L12 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[135]
	expression/L1 = . IDENT
	expression/L1 = . BOOLEAN
	expression/L1 = . CARDINAL
	expression/L1 = . INTEGER
	expression/L1 = . FLOAT
	expression/L1 = . DQSTRING
	expression/L1 = . SQSTRING
	expression/L1 = . "(" expression ")"
	expression/L2 = . expression "=" expression
	expression/L2 = . expression "+=" expression
	expression/L2 = . expression "-=" expression
	expression/L2 = . expression "*=" expression
	expression/L2 = . expression "/=" expression
	expression/L2 = . expression "%=" expression
	expression/L2 = . expression "&&=" expression
	expression/L2 = . expression "||=" expression
	expression/L2 = . expression "&=" expression
	expression/L2 = . expression "|=" expression
	expression/L2 = . expression "<<=" expression
	expression/L2 = . expression ">>=" expression
	expression/L3 = . expression "||" expression
	expression/L4 = . expression "&&" expression
	expression/L5 = . expression "|" expression
	expression/L6 = . expression "^" expression
	expression/L6 = . expression "&" expression
	expression/L7 = . expression "==" expression
	expression/L7 = . expression "!=" expression
	expression/L7 = . expression "<=" expression
	expression/L7 = . expression "<" expression
	expression/L7 = . expression ">=" expression
	expression/L7 = . expression ">" expression
	expression/L7 = expression ">" . expression
	expression/L8 = . expression "+" expression
	expression/L8 = . expression "-" expression
	expression/L8 = . "&" expression
	expression/L8 = . "-" expression
	expression/L8 = . "+" expression
	expression/L8 = . "~" expression
	expression/L8 = . "!" expression
	expression/L9 = . expression "*" expression
	expression/L9 = . expression "/" expression
	expression/L9 = . expression "%" expression
	expression/L10 = . expression "<<" expression
	expression/L10 = . expression ">>" expression
	expression/L11 = . iexpression
	expression/L11 = . expression "." IDENT
	expression/L11 = . "*" expression
	expression/L12 = . expression "(" expressionlist ")"
	expression/L12 = . expression "(" ")"
	expression/L12 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[136]
	expression/L1 = . IDENT
	expression/L1 = . BOOLEAN
	expression/L1 = . CARDINAL
	expression/L1 = . INTEGER
	expression/L1 = . FLOAT
	expression/L1 = . DQSTRING
	expression/L1 = . SQSTRING
	expression/L1 = . "(" expression ")"
	expression/L2 = . expression "=" expression
	expression/L2 = . expression "+=" expression
	expression/L2 = . expression "-=" expression
	expression/L2 = . expression "*=" expression
	expression/L2 = . expression "/=" expression
	expression/L2 = . expression "%=" expression
	expression/L2 = . expression "&&=" expression
	expression/L2 = . expression "||=" expression
	expression/L2 = . expression "&=" expression
	expression/L2 = . expression "|=" expression
	expression/L2 = . expression "<<=" expression
	expression/L2 = . expression ">>=" expression
	expression/L3 = . expression "||" expression
	expression/L4 = . expression "&&" expression
	expression/L5 = . expression "|" expression
	expression/L6 = . expression "^" expression
	expression/L6 = . expression "&" expression
	expression/L7 = . expression "==" expression
	expression/L7 = . expression "!=" expression
	expression/L7 = . expression "<=" expression
	expression/L7 = . expression "<" expression
	expression/L7 = . expression ">=" expression
	expression/L7 = . expression ">" expression
	expression/L8 = . expression "+" expression
	expression/L8 = expression "+" . expression
	expression/L8 = . expression "-" expression
	expression/L8 = . "&" expression
	expression/L8 = . "-" expression
	expression/L8 = . "+" expression
	expression/L8 = . "~" expression
	expression/L8 = . "!" expression
	expression/L9 = . expression "*" expression
	expression/L9 = . expression "/" expression
	expression/L9 = . expression "%" expression
	expression/L10 = . expression "<<" expression
	expression/L10 = . expression ">>" expression
	expression/L11 = . iexpression
	expression/L11 = . expression "." IDENT
	expression/L11 = . "*" expression
	expression/L12 = . expression "(" expressionlist ")"
	expression/L12 = . expression "(" ")"
	expression/L12 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[137]
	expression/L1 = . IDENT
	expression/L1 = . BOOLEAN
	expression/L1 = . CARDINAL
	expression/L1 = . INTEGER
	expression/L1 = . FLOAT
	expression/L1 = . DQSTRING
	expression/L1 = . SQSTRING
	expression/L1 = . "(" expression ")"
	expression/L2 = . expression "=" expression
	expression/L2 = . expression "+=" expression
	expression/L2 = . expression "-=" expression
	expression/L2 = . expression "*=" expression
	expression/L2 = . expression "/=" expression
	expression/L2 = . expression "%=" expression
	expression/L2 = . expression "&&=" expression
	expression/L2 = . expression "||=" expression
	expression/L2 = . expression "&=" expression
	expression/L2 = . expression "|=" expression
	expression/L2 = . expression "<<=" expression
	expression/L2 = . expression ">>=" expression
	expression/L3 = . expression "||" expression
	expression/L4 = . expression "&&" expression
	expression/L5 = . expression "|" expression
	expression/L6 = . expression "^" expression
	expression/L6 = . expression "&" expression
	expression/L7 = . expression "==" expression
	expression/L7 = . expression "!=" expression
	expression/L7 = . expression "<=" expression
	expression/L7 = . expression "<" expression
	expression/L7 = . expression ">=" expression
	expression/L7 = . expression ">" expression
	expression/L8 = . expression "+" expression
	expression/L8 = . expression "-" expression
	expression/L8 = expression "-" . expression
	expression/L8 = . "&" expression
	expression/L8 = . "-" expression
	expression/L8 = . "+" expression
	expression/L8 = . "~" expression
	expression/L8 = . "!" expression
	expression/L9 = . expression "*" expression
	expression/L9 = . expression "/" expression
	expression/L9 = . expression "%" expression
	expression/L10 = . expression "<<" expression
	expression/L10 = . expression ">>" expression
	expression/L11 = . iexpression
	expression/L11 = . expression "." IDENT
	expression/L11 = . "*" expression
	expression/L12 = . expression "(" expressionlist ")"
	expression/L12 = . expression "(" ")"
	expression/L12 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[138]
	expression/L1 = . IDENT
	expression/L1 = . BOOLEAN
	expression/L1 = . CARDINAL
	expression/L1 = . INTEGER
	expression/L1 = . FLOAT
	expression/L1 = . DQSTRING
	expression/L1 = . SQSTRING
	expression/L1 = . "(" expression ")"
	expression/L2 = . expression "=" expression
	expression/L2 = . expression "+=" expression
	expression/L2 = . expression "-=" expression
	expression/L2 = . expression "*=" expression
	expression/L2 = . expression "/=" expression
	expression/L2 = . expression "%=" expression
	expression/L2 = . expression "&&=" expression
	expression/L2 = . expression "||=" expression
	expression/L2 = . expression "&=" expression
	expression/L2 = . expression "|=" expression
	expression/L2 = . expression "<<=" expression
	expression/L2 = . expression ">>=" expression
	expression/L3 = . expression "||" expression
	expression/L4 = . expression "&&" expression
	expression/L5 = . expression "|" expression
	expression/L6 = . expression "^" expression
	expression/L6 = . expression "&" expression
	expression/L7 = . expression "==" expression
	expression/L7 = . expression "!=" expression
	expression/L7 = . expression "<=" expression
	expression/L7 = . expression "<" expression
	expression/L7 = . expression ">=" expression
	expression/L7 = . expression ">" expression
	expression/L8 = . expression "+" expression
	expression/L8 = . expression "-" expression
	expression/L8 = . "&" expression
	expression/L8 = . "-" expression
	expression/L8 = . "+" expression
	expression/L8 = . "~" expression
	expression/L8 = . "!" expression
	expression/L9 = . expression "*" expression
	expression/L9 = expression "*" . expression
	expression/L9 = . expression "/" expression
	expression/L9 = . expression "%" expression
	expression/L10 = . expression "<<" expression
	expression/L10 = . expression ">>" expression
	expression/L11 = . iexpression
	expression/L11 = . expression "." IDENT
	expression/L11 = . "*" expression
	expression/L12 = . expression "(" expressionlist ")"
	expression/L12 = . expression "(" ")"
	expression/L12 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[139]
	expression/L1 = . IDENT
	expression/L1 = . BOOLEAN
	expression/L1 = . CARDINAL
	expression/L1 = . INTEGER
	expression/L1 = . FLOAT
	expression/L1 = . DQSTRING
	expression/L1 = . SQSTRING
	expression/L1 = . "(" expression ")"
	expression/L2 = . expression "=" expression
	expression/L2 = . expression "+=" expression
	expression/L2 = . expression "-=" expression
	expression/L2 = . expression "*=" expression
	expression/L2 = . expression "/=" expression
	expression/L2 = . expression "%=" expression
	expression/L2 = . expression "&&=" expression
	expression/L2 = . expression "||=" expression
	expression/L2 = . expression "&=" expression
	expression/L2 = . expression "|=" expression
	expression/L2 = . expression "<<=" expression
	expression/L2 = . expression ">>=" expression
	expression/L3 = . expression "||" expression
	expression/L4 = . expression "&&" expression
	expression/L5 = . expression "|" expression
	expression/L6 = . expression "^" expression
	expression/L6 = . expression "&" expression
	expression/L7 = . expression "==" expression
	expression/L7 = . expression "!=" expression
	expression/L7 = . expression "<=" expression
	expression/L7 = . expression "<" expression
	expression/L7 = . expression ">=" expression
	expression/L7 = . expression ">" expression
	expression/L8 = . expression "+" expression
	expression/L8 = . expression "-" expression
	expression/L8 = . "&" expression
	expression/L8 = . "-" expression
	expression/L8 = . "+" expression
	expression/L8 = . "~" expression
	expression/L8 = . "!" expression
	expression/L9 = . expression "*" expression
	expression/L9 = . expression "/" expression
	expression/L9 = expression "/" . expression
	expression/L9 = . expression "%" expression
	expression/L10 = . expression "<<" expression
	expression/L10 = . expression ">>" expression
	expression/L11 = . iexpression
	expression/L11 = . expression "." IDENT
	expression/L11 = . "*" expression
	expression/L12 = . expression "(" expressionlist ")"
	expression/L12 = . expression "(" ")"
	expression/L12 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[140]
	expression/L1 = . IDENT
	expression/L1 = . BOOLEAN
	expression/L1 = . CARDINAL
	expression/L1 = . INTEGER
	expression/L1 = . FLOAT
	expression/L1 = . DQSTRING
	expression/L1 = . SQSTRING
	expression/L1 = . "(" expression ")"
	expression/L2 = . expression "=" expression
	expression/L2 = . expression "+=" expression
	expression/L2 = . expression "-=" expression
	expression/L2 = . expression "*=" expression
	expression/L2 = . expression "/=" expression
	expression/L2 = . expression "%=" expression
	expression/L2 = . expression "&&=" expression
	expression/L2 = . expression "||=" expression
	expression/L2 = . expression "&=" expression
	expression/L2 = . expression "|=" expression
	expression/L2 = . expression "<<=" expression
	expression/L2 = . expression ">>=" expression
	expression/L3 = . expression "||" expression
	expression/L4 = . expression "&&" expression
	expression/L5 = . expression "|" expression
	expression/L6 = . expression "^" expression
	expression/L6 = . expression "&" expression
	expression/L7 = . expression "==" expression
	expression/L7 = . expression "!=" expression
	expression/L7 = . expression "<=" expression
	expression/L7 = . expression "<" expression
	expression/L7 = . expression ">=" expression
	expression/L7 = . expression ">" expression
	expression/L8 = . expression "+" expression
	expression/L8 = . expression "-" expression
	expression/L8 = . "&" expression
	expression/L8 = . "-" expression
	expression/L8 = . "+" expression
	expression/L8 = . "~" expression
	expression/L8 = . "!" expression
	expression/L9 = . expression "*" expression
	expression/L9 = . expression "/" expression
	expression/L9 = . expression "%" expression
	expression/L9 = expression "%" . expression
	expression/L10 = . expression "<<" expression
	expression/L10 = . expression ">>" expression
	expression/L11 = . iexpression
	expression/L11 = . expression "." IDENT
	expression/L11 = . "*" expression
	expression/L12 = . expression "(" expressionlist ")"
	expression/L12 = . expression "(" ")"
	expression/L12 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[141]
	expression/L1 = . IDENT
	expression/L1 = . BOOLEAN
	expression/L1 = . CARDINAL
	expression/L1 = . INTEGER
	expression/L1 = . FLOAT
	expression/L1 = . DQSTRING
	expression/L1 = . SQSTRING
	expression/L1 = . "(" expression ")"
	expression/L2 = . expression "=" expression
	expression/L2 = . expression "+=" expression
	expression/L2 = . expression "-=" expression
	expression/L2 = . expression "*=" expression
	expression/L2 = . expression "/=" expression
	expression/L2 = . expression "%=" expression
	expression/L2 = . expression "&&=" expression
	expression/L2 = . expression "||=" expression
	expression/L2 = . expression "&=" expression
	expression/L2 = . expression "|=" expression
	expression/L2 = . expression "<<=" expression
	expression/L2 = . expression ">>=" expression
	expression/L3 = . expression "||" expression
	expression/L4 = . expression "&&" expression
	expression/L5 = . expression "|" expression
	expression/L6 = . expression "^" expression
	expression/L6 = . expression "&" expression
	expression/L7 = . expression "==" expression
	expression/L7 = . expression "!=" expression
	expression/L7 = . expression "<=" expression
	expression/L7 = . expression "<" expression
	expression/L7 = . expression ">=" expression
	expression/L7 = . expression ">" expression
	expression/L8 = . expression "+" expression
	expression/L8 = . expression "-" expression
	expression/L8 = . "&" expression
	expression/L8 = . "-" expression
	expression/L8 = . "+" expression
	expression/L8 = . "~" expression
	expression/L8 = . "!" expression
	expression/L9 = . expression "*" expression
	expression/L9 = . expression "/" expression
	expression/L9 = . expression "%" expression
	expression/L10 = . expression "<<" expression
	expression/L10 = expression "<<" . expression
	expression/L10 = . expression ">>" expression
	expression/L11 = . iexpression
	expression/L11 = . expression "." IDENT
	expression/L11 = . "*" expression
	expression/L12 = . expression "(" expressionlist ")"
	expression/L12 = . expression "(" ")"
	expression/L12 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[142]
	expression/L1 = . IDENT
	expression/L1 = . BOOLEAN
	expression/L1 = . CARDINAL
	expression/L1 = . INTEGER
	expression/L1 = . FLOAT
	expression/L1 = . DQSTRING
	expression/L1 = . SQSTRING
	expression/L1 = . "(" expression ")"
	expression/L2 = . expression "=" expression
	expression/L2 = . expression "+=" expression
	expression/L2 = . expression "-=" expression
	expression/L2 = . expression "*=" expression
	expression/L2 = . expression "/=" expression
	expression/L2 = . expression "%=" expression
	expression/L2 = . expression "&&=" expression
	expression/L2 = . expression "||=" expression
	expression/L2 = . expression "&=" expression
	expression/L2 = . expression "|=" expression
	expression/L2 = . expression "<<=" expression
	expression/L2 = . expression ">>=" expression
	expression/L3 = . expression "||" expression
	expression/L4 = . expression "&&" expression
	expression/L5 = . expression "|" expression
	expression/L6 = . expression "^" expression
	expression/L6 = . expression "&" expression
	expression/L7 = . expression "==" expression
	expression/L7 = . expression "!=" expression
	expression/L7 = . expression "<=" expression
	expression/L7 = . expression "<" expression
	expression/L7 = . expression ">=" expression
	expression/L7 = . expression ">" expression
	expression/L8 = . expression "+" expression
	expression/L8 = . expression "-" expression
	expression/L8 = . "&" expression
	expression/L8 = . "-" expression
	expression/L8 = . "+" expression
	expression/L8 = . "~" expression
	expression/L8 = . "!" expression
	expression/L9 = . expression "*" expression
	expression/L9 = . expression "/" expression
	expression/L9 = . expression "%" expression
	expression/L10 = . expression "<<" expression
	expression/L10 = . expression ">>" expression
	expression/L10 = expression ">>" . expression
	expression/L11 = . iexpression
	expression/L11 = . expression "." IDENT
	expression/L11 = . "*" expression
	expression/L12 = . expression "(" expressionlist ")"
	expression/L12 = . expression "(" ")"
	expression/L12 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[143]
	expression/L11 = expression "." . IDENT
[144]
	indirection = . "->" indirection
	indirection = "->" . indirection
	indirection = . "->"
	indirection = "->" .
[145]
	expression/L1 = "(" expression . ")"
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[146]
	statement = "{" statementlist . "}"
[147]
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L8 = "&" expression .
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[148]
	statement = "var" variabledefinition . ";"
[149]
	statement = "return" expression . ";"
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[150]
	statement = "if" "(" . expression ")" "{" statementlist "}"
	statement = "if" "(" . expression ")" "{" statementlist "}" "else" "{" statementlist "}"
	expression/L1 = . IDENT
	expression/L1 = . BOOLEAN
	expression/L1 = . CARDINAL
	expression/L1 = . INTEGER
	expression/L1 = . FLOAT
	expression/L1 = . DQSTRING
	expression/L1 = . SQSTRING
	expression/L1 = . "(" expression ")"
	expression/L2 = . expression "=" expression
	expression/L2 = . expression "+=" expression
	expression/L2 = . expression "-=" expression
	expression/L2 = . expression "*=" expression
	expression/L2 = . expression "/=" expression
	expression/L2 = . expression "%=" expression
	expression/L2 = . expression "&&=" expression
	expression/L2 = . expression "||=" expression
	expression/L2 = . expression "&=" expression
	expression/L2 = . expression "|=" expression
	expression/L2 = . expression "<<=" expression
	expression/L2 = . expression ">>=" expression
	expression/L3 = . expression "||" expression
	expression/L4 = . expression "&&" expression
	expression/L5 = . expression "|" expression
	expression/L6 = . expression "^" expression
	expression/L6 = . expression "&" expression
	expression/L7 = . expression "==" expression
	expression/L7 = . expression "!=" expression
	expression/L7 = . expression "<=" expression
	expression/L7 = . expression "<" expression
	expression/L7 = . expression ">=" expression
	expression/L7 = . expression ">" expression
	expression/L8 = . expression "+" expression
	expression/L8 = . expression "-" expression
	expression/L8 = . "&" expression
	expression/L8 = . "-" expression
	expression/L8 = . "+" expression
	expression/L8 = . "~" expression
	expression/L8 = . "!" expression
	expression/L9 = . expression "*" expression
	expression/L9 = . expression "/" expression
	expression/L9 = . expression "%" expression
	expression/L10 = . expression "<<" expression
	expression/L10 = . expression ">>" expression
	expression/L11 = . iexpression
	expression/L11 = . expression "." IDENT
	expression/L11 = . "*" expression
	expression/L12 = . expression "(" expressionlist ")"
	expression/L12 = . expression "(" ")"
	expression/L12 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[151]
	statement = "while" "(" . expression ")" "{" statementlist "}"
	expression/L1 = . IDENT
	expression/L1 = . BOOLEAN
	expression/L1 = . CARDINAL
	expression/L1 = . INTEGER
	expression/L1 = . FLOAT
	expression/L1 = . DQSTRING
	expression/L1 = . SQSTRING
	expression/L1 = . "(" expression ")"
	expression/L2 = . expression "=" expression
	expression/L2 = . expression "+=" expression
	expression/L2 = . expression "-=" expression
	expression/L2 = . expression "*=" expression
	expression/L2 = . expression "/=" expression
	expression/L2 = . expression "%=" expression
	expression/L2 = . expression "&&=" expression
	expression/L2 = . expression "||=" expression
	expression/L2 = . expression "&=" expression
	expression/L2 = . expression "|=" expression
	expression/L2 = . expression "<<=" expression
	expression/L2 = . expression ">>=" expression
	expression/L3 = . expression "||" expression
	expression/L4 = . expression "&&" expression
	expression/L5 = . expression "|" expression
	expression/L6 = . expression "^" expression
	expression/L6 = . expression "&" expression
	expression/L7 = . expression "==" expression
	expression/L7 = . expression "!=" expression
	expression/L7 = . expression "<=" expression
	expression/L7 = . expression "<" expression
	expression/L7 = . expression ">=" expression
	expression/L7 = . expression ">" expression
	expression/L8 = . expression "+" expression
	expression/L8 = . expression "-" expression
	expression/L8 = . "&" expression
	expression/L8 = . "-" expression
	expression/L8 = . "+" expression
	expression/L8 = . "~" expression
	expression/L8 = . "!" expression
	expression/L9 = . expression "*" expression
	expression/L9 = . expression "/" expression
	expression/L9 = . expression "%" expression
	expression/L10 = . expression "<<" expression
	expression/L10 = . expression ">>" expression
	expression/L11 = . iexpression
	expression/L11 = . expression "." IDENT
	expression/L11 = . "*" expression
	expression/L12 = . expression "(" expressionlist ")"
	expression/L12 = . expression "(" ")"
	expression/L12 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[152]
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L8 = "+" expression .
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[153]
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L8 = "-" expression .
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[154]
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L8 = "~" expression .
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[155]
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L8 = "!" expression .
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[156]
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L11 = "*" expression .
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[157]
	variabledefinition = typespec IDENT "[" expression "]" . "=" expression
	variabledefinition = typespec IDENT "[" expression "]" .
[158]
	functiondefinition = linkage "function" typespec IDENT callablebody .
[159]
	paramdecl = typespec . IDENT
[160]
	callablebody = "(" parameterlist . ")" "{" statementlist "}"
[161]
	parameterlist = parameters .
[162]
	parameters = paramdecl . "," parameters
	parameters = paramdecl .
[163]
	typespec/L1 = "const" typename "^" "^" "&" .
[164]
	structdefinition = "struct" IDENT "{" datadefinitionlist "}" .
[165]
	datadefinitionlist = datadefinition datadefinitionlist .
[166]
	interfacedefinition = "interface" IDENT "{" methoddefinitionlist "}" .
[167]
	methoddefinitionlist = methoddefinition methoddefinitionlist .
[168]
	methoddefinition = "function" typespec . IDENT "(" parameterlist ")" ";"
[169]
	methoddefinition = "procedure" IDENT . "(" parameterlist ")" ";"
[170]
	classdefinition = "class" IDENT "{" definitionlist "}" .
[171]
	externdefinition = "extern" DQSTRING "function" typespec IDENT "(" . externparameterlist ")" ";"
	externparameterlist = . externparameters
	externparameters = . typespec "," externparameters
	externparameters = . typespec
	externparameters = .
	externparameterlist = . externparameters
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
[172]
	externdefinition = "extern" DQSTRING "procedure" IDENT "(" externparameterlist . ")" ";"
[173]
	externparameterlist = externparameters .
	externparameterlist = externparameters .
[174]
	externparameters = typespec . "," externparameters
	externparameters = typespec .
[175]
	iexpression = expression indirection IDENT .
[176]
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
	expressionlist = expression . "," expressionlist
	expressionlist = expression .
[177]
	expression/L12 = expression "(" expressionlist . ")"
[178]
	expression/L12 = expression "(" ")" .
[179]
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L6 = expression "&" expression .
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[180]
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression "^" expression .
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[181]
	expression/L2 = expression . "=" expression
	expression/L2 = expression "=" expression .
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[182]
	expression/L12 = expression "[" expressionlist . "]"
[183]
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression "+=" expression .
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[184]
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression "-=" expression .
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[185]
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression "*=" expression .
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[186]
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression "/=" expression .
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[187]
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression "%=" expression .
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[188]
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression "&&=" expression .
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[189]
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression "||=" expression .
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[190]
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression "&=" expression .
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[191]
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression "|=" expression .
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[192]
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression "<<=" expression .
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[193]
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L2 = expression ">>=" expression .
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[194]
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L3 = expression "||" expression .
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[195]
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L4 = expression "&&" expression .
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[196]
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L5 = expression "|" expression .
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[197]
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression "==" expression .
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[198]
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression "!=" expression .
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[199]
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression "<=" expression .
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[200]
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression "<" expression .
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[201]
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression ">=" expression .
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[202]
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L7 = expression ">" expression .
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[203]
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression "+" expression .
	expression/L8 = expression . "-" expression
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[204]
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L8 = expression "-" expression .
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[205]
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L9 = expression . "*" expression
	expression/L9 = expression "*" expression .
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[206]
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression "/" expression .
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[207]
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L9 = expression "%" expression .
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[208]
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression "<<" expression .
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[209]
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L10 = expression ">>" expression .
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[210]
	expression/L11 = expression "." IDENT .
[211]
	indirection = "->" indirection .
[212]
	expression/L1 = "(" expression ")" .
[213]
	statement = "{" statementlist "}" .
[214]
	statement = "var" variabledefinition ";" .
[215]
	statement = "return" expression ";" .
[216]
	statement = "if" "(" expression . ")" "{" statementlist "}"
	statement = "if" "(" expression . ")" "{" statementlist "}" "else" "{" statementlist "}"
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[217]
	statement = "while" "(" expression . ")" "{" statementlist "}"
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[218]
	variabledefinition = typespec IDENT "[" expression "]" "=" . expression
	expression/L1 = . IDENT
	expression/L1 = . BOOLEAN
	expression/L1 = . CARDINAL
	expression/L1 = . INTEGER
	expression/L1 = . FLOAT
	expression/L1 = . DQSTRING
	expression/L1 = . SQSTRING
	expression/L1 = . "(" expression ")"
	expression/L2 = . expression "=" expression
	expression/L2 = . expression "+=" expression
	expression/L2 = . expression "-=" expression
	expression/L2 = . expression "*=" expression
	expression/L2 = . expression "/=" expression
	expression/L2 = . expression "%=" expression
	expression/L2 = . expression "&&=" expression
	expression/L2 = . expression "||=" expression
	expression/L2 = . expression "&=" expression
	expression/L2 = . expression "|=" expression
	expression/L2 = . expression "<<=" expression
	expression/L2 = . expression ">>=" expression
	expression/L3 = . expression "||" expression
	expression/L4 = . expression "&&" expression
	expression/L5 = . expression "|" expression
	expression/L6 = . expression "^" expression
	expression/L6 = . expression "&" expression
	expression/L7 = . expression "==" expression
	expression/L7 = . expression "!=" expression
	expression/L7 = . expression "<=" expression
	expression/L7 = . expression "<" expression
	expression/L7 = . expression ">=" expression
	expression/L7 = . expression ">" expression
	expression/L8 = . expression "+" expression
	expression/L8 = . expression "-" expression
	expression/L8 = . "&" expression
	expression/L8 = . "-" expression
	expression/L8 = . "+" expression
	expression/L8 = . "~" expression
	expression/L8 = . "!" expression
	expression/L9 = . expression "*" expression
	expression/L9 = . expression "/" expression
	expression/L9 = . expression "%" expression
	expression/L10 = . expression "<<" expression
	expression/L10 = . expression ">>" expression
	expression/L11 = . iexpression
	expression/L11 = . expression "." IDENT
	expression/L11 = . "*" expression
	expression/L12 = . expression "(" expressionlist ")"
	expression/L12 = . expression "(" ")"
	expression/L12 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[219]
	paramdecl = typespec IDENT .
[220]
	callablebody = "(" parameterlist ")" . "{" statementlist "}"
[221]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	parameters = . paramdecl "," parameters
	parameters = paramdecl "," . parameters
	parameters = . paramdecl
	parameters = .
	paramdecl = . typespec IDENT
[222]
	methoddefinition = "function" typespec IDENT . "(" parameterlist ")" ";"
[223]
	methoddefinition = "procedure" IDENT "(" . parameterlist ")" ";"
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	parameterlist = . parameters
	parameters = . paramdecl "," parameters
	parameters = . paramdecl
	parameters = .
	paramdecl = . typespec IDENT
[224]
	externdefinition = "extern" DQSTRING "function" typespec IDENT "(" externparameterlist . ")" ";"
[225]
	externdefinition = "extern" DQSTRING "procedure" IDENT "(" externparameterlist ")" . ";"
[226]
	externparameters = . typespec "," externparameters
	externparameters = typespec "," . externparameters
	externparameters = . typespec
	externparameters = .
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
[227]
	expression/L1 = . IDENT
	expression/L1 = . BOOLEAN
	expression/L1 = . CARDINAL
	expression/L1 = . INTEGER
	expression/L1 = . FLOAT
	expression/L1 = . DQSTRING
	expression/L1 = . SQSTRING
	expression/L1 = . "(" expression ")"
	expression/L2 = . expression "=" expression
	expression/L2 = . expression "+=" expression
	expression/L2 = . expression "-=" expression
	expression/L2 = . expression "*=" expression
	expression/L2 = . expression "/=" expression
	expression/L2 = . expression "%=" expression
	expression/L2 = . expression "&&=" expression
	expression/L2 = . expression "||=" expression
	expression/L2 = . expression "&=" expression
	expression/L2 = . expression "|=" expression
	expression/L2 = . expression "<<=" expression
	expression/L2 = . expression ">>=" expression
	expression/L3 = . expression "||" expression
	expression/L4 = . expression "&&" expression
	expression/L5 = . expression "|" expression
	expression/L6 = . expression "^" expression
	expression/L6 = . expression "&" expression
	expression/L7 = . expression "==" expression
	expression/L7 = . expression "!=" expression
	expression/L7 = . expression "<=" expression
	expression/L7 = . expression "<" expression
	expression/L7 = . expression ">=" expression
	expression/L7 = . expression ">" expression
	expression/L8 = . expression "+" expression
	expression/L8 = . expression "-" expression
	expression/L8 = . "&" expression
	expression/L8 = . "-" expression
	expression/L8 = . "+" expression
	expression/L8 = . "~" expression
	expression/L8 = . "!" expression
	expression/L9 = . expression "*" expression
	expression/L9 = . expression "/" expression
	expression/L9 = . expression "%" expression
	expression/L10 = . expression "<<" expression
	expression/L10 = . expression ">>" expression
	expression/L11 = . iexpression
	expression/L11 = . expression "." IDENT
	expression/L11 = . "*" expression
	expression/L12 = . expression "(" expressionlist ")"
	expression/L12 = . expression "(" ")"
	expression/L12 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
	expressionlist = . expression "," expressionlist
	expressionlist = expression "," . expressionlist
	expressionlist = . expression
	expressionlist = .
[228]
	expression/L12 = expression "(" expressionlist ")" .
[229]
	expression/L12 = expression "[" expressionlist "]" .
[230]
	statement = "if" "(" expression ")" . "{" statementlist "}"
	statement = "if" "(" expression ")" . "{" statementlist "}" "else" "{" statementlist "}"
[231]
	statement = "while" "(" expression ")" . "{" statementlist "}"
[232]
	variabledefinition = typespec IDENT "[" expression "]" "=" expression .
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[233]
	typedefinition = . "typedef" typename IDENT
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" typespec IDENT callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody
	callablebody = "(" parameterlist ")" "{" . statementlist "}"
	statementlist = . statement statementlist
	statementlist = .
	statement = . functiondefinition
	statement = . typedefinition ";"
	statement = . "var" variabledefinition ";"
	statement = . expression ";"
	statement = . "return" expression ";"
	statement = . "if" "(" expression ")" "{" statementlist "}"
	statement = . "if" "(" expression ")" "{" statementlist "}" "else" "{" statementlist "}"
	statement = . "while" "(" expression ")" "{" statementlist "}"
	statement = . "{" statementlist "}"
	expression/L1 = . IDENT
	expression/L1 = . BOOLEAN
	expression/L1 = . CARDINAL
	expression/L1 = . INTEGER
	expression/L1 = . FLOAT
	expression/L1 = . DQSTRING
	expression/L1 = . SQSTRING
	expression/L1 = . "(" expression ")"
	expression/L2 = . expression "=" expression
	expression/L2 = . expression "+=" expression
	expression/L2 = . expression "-=" expression
	expression/L2 = . expression "*=" expression
	expression/L2 = . expression "/=" expression
	expression/L2 = . expression "%=" expression
	expression/L2 = . expression "&&=" expression
	expression/L2 = . expression "||=" expression
	expression/L2 = . expression "&=" expression
	expression/L2 = . expression "|=" expression
	expression/L2 = . expression "<<=" expression
	expression/L2 = . expression ">>=" expression
	expression/L3 = . expression "||" expression
	expression/L4 = . expression "&&" expression
	expression/L5 = . expression "|" expression
	expression/L6 = . expression "^" expression
	expression/L6 = . expression "&" expression
	expression/L7 = . expression "==" expression
	expression/L7 = . expression "!=" expression
	expression/L7 = . expression "<=" expression
	expression/L7 = . expression "<" expression
	expression/L7 = . expression ">=" expression
	expression/L7 = . expression ">" expression
	expression/L8 = . expression "+" expression
	expression/L8 = . expression "-" expression
	expression/L8 = . "&" expression
	expression/L8 = . "-" expression
	expression/L8 = . "+" expression
	expression/L8 = . "~" expression
	expression/L8 = . "!" expression
	expression/L9 = . expression "*" expression
	expression/L9 = . expression "/" expression
	expression/L9 = . expression "%" expression
	expression/L10 = . expression "<<" expression
	expression/L10 = . expression ">>" expression
	expression/L11 = . iexpression
	expression/L11 = . expression "." IDENT
	expression/L11 = . "*" expression
	expression/L12 = . expression "(" expressionlist ")"
	expression/L12 = . expression "(" ")"
	expression/L12 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[234]
	parameters = paramdecl "," parameters .
[235]
	methoddefinition = "function" typespec IDENT "(" . parameterlist ")" ";"
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	parameterlist = . parameters
	parameters = . paramdecl "," parameters
	parameters = . paramdecl
	parameters = .
	paramdecl = . typespec IDENT
[236]
	methoddefinition = "procedure" IDENT "(" parameterlist . ")" ";"
[237]
	externdefinition = "extern" DQSTRING "function" typespec IDENT "(" externparameterlist ")" . ";"
[238]
	externdefinition = "extern" DQSTRING "procedure" IDENT "(" externparameterlist ")" ";" .
[239]
	externparameters = typespec "," externparameters .
[240]
	expressionlist = expression "," expressionlist .
[241]
	typedefinition = . "typedef" typename IDENT
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" typespec IDENT callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody
	statementlist = . statement statementlist
	statementlist = .
	statement = . functiondefinition
	statement = . typedefinition ";"
	statement = . "var" variabledefinition ";"
	statement = . expression ";"
	statement = . "return" expression ";"
	statement = . "if" "(" expression ")" "{" statementlist "}"
	statement = "if" "(" expression ")" "{" . statementlist "}"
	statement = . "if" "(" expression ")" "{" statementlist "}" "else" "{" statementlist "}"
	statement = "if" "(" expression ")" "{" . statementlist "}" "else" "{" statementlist "}"
	statement = . "while" "(" expression ")" "{" statementlist "}"
	statement = . "{" statementlist "}"
	expression/L1 = . IDENT
	expression/L1 = . BOOLEAN
	expression/L1 = . CARDINAL
	expression/L1 = . INTEGER
	expression/L1 = . FLOAT
	expression/L1 = . DQSTRING
	expression/L1 = . SQSTRING
	expression/L1 = . "(" expression ")"
	expression/L2 = . expression "=" expression
	expression/L2 = . expression "+=" expression
	expression/L2 = . expression "-=" expression
	expression/L2 = . expression "*=" expression
	expression/L2 = . expression "/=" expression
	expression/L2 = . expression "%=" expression
	expression/L2 = . expression "&&=" expression
	expression/L2 = . expression "||=" expression
	expression/L2 = . expression "&=" expression
	expression/L2 = . expression "|=" expression
	expression/L2 = . expression "<<=" expression
	expression/L2 = . expression ">>=" expression
	expression/L3 = . expression "||" expression
	expression/L4 = . expression "&&" expression
	expression/L5 = . expression "|" expression
	expression/L6 = . expression "^" expression
	expression/L6 = . expression "&" expression
	expression/L7 = . expression "==" expression
	expression/L7 = . expression "!=" expression
	expression/L7 = . expression "<=" expression
	expression/L7 = . expression "<" expression
	expression/L7 = . expression ">=" expression
	expression/L7 = . expression ">" expression
	expression/L8 = . expression "+" expression
	expression/L8 = . expression "-" expression
	expression/L8 = . "&" expression
	expression/L8 = . "-" expression
	expression/L8 = . "+" expression
	expression/L8 = . "~" expression
	expression/L8 = . "!" expression
	expression/L9 = . expression "*" expression
	expression/L9 = . expression "/" expression
	expression/L9 = . expression "%" expression
	expression/L10 = . expression "<<" expression
	expression/L10 = . expression ">>" expression
	expression/L11 = . iexpression
	expression/L11 = . expression "." IDENT
	expression/L11 = . "*" expression
	expression/L12 = . expression "(" expressionlist ")"
	expression/L12 = . expression "(" ")"
	expression/L12 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[242]
	typedefinition = . "typedef" typename IDENT
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" typespec IDENT callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody
	statementlist = . statement statementlist
	statementlist = .
	statement = . functiondefinition
	statement = . typedefinition ";"
	statement = . "var" variabledefinition ";"
	statement = . expression ";"
	statement = . "return" expression ";"
	statement = . "if" "(" expression ")" "{" statementlist "}"
	statement = . "if" "(" expression ")" "{" statementlist "}" "else" "{" statementlist "}"
	statement = . "while" "(" expression ")" "{" statementlist "}"
	statement = "while" "(" expression ")" "{" . statementlist "}"
	statement = . "{" statementlist "}"
	expression/L1 = . IDENT
	expression/L1 = . BOOLEAN
	expression/L1 = . CARDINAL
	expression/L1 = . INTEGER
	expression/L1 = . FLOAT
	expression/L1 = . DQSTRING
	expression/L1 = . SQSTRING
	expression/L1 = . "(" expression ")"
	expression/L2 = . expression "=" expression
	expression/L2 = . expression "+=" expression
	expression/L2 = . expression "-=" expression
	expression/L2 = . expression "*=" expression
	expression/L2 = . expression "/=" expression
	expression/L2 = . expression "%=" expression
	expression/L2 = . expression "&&=" expression
	expression/L2 = . expression "||=" expression
	expression/L2 = . expression "&=" expression
	expression/L2 = . expression "|=" expression
	expression/L2 = . expression "<<=" expression
	expression/L2 = . expression ">>=" expression
	expression/L3 = . expression "||" expression
	expression/L4 = . expression "&&" expression
	expression/L5 = . expression "|" expression
	expression/L6 = . expression "^" expression
	expression/L6 = . expression "&" expression
	expression/L7 = . expression "==" expression
	expression/L7 = . expression "!=" expression
	expression/L7 = . expression "<=" expression
	expression/L7 = . expression "<" expression
	expression/L7 = . expression ">=" expression
	expression/L7 = . expression ">" expression
	expression/L8 = . expression "+" expression
	expression/L8 = . expression "-" expression
	expression/L8 = . "&" expression
	expression/L8 = . "-" expression
	expression/L8 = . "+" expression
	expression/L8 = . "~" expression
	expression/L8 = . "!" expression
	expression/L9 = . expression "*" expression
	expression/L9 = . expression "/" expression
	expression/L9 = . expression "%" expression
	expression/L10 = . expression "<<" expression
	expression/L10 = . expression ">>" expression
	expression/L11 = . iexpression
	expression/L11 = . expression "." IDENT
	expression/L11 = . "*" expression
	expression/L12 = . expression "(" expressionlist ")"
	expression/L12 = . expression "(" ")"
	expression/L12 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[243]
	callablebody = "(" parameterlist ")" "{" statementlist . "}"
[244]
	methoddefinition = "function" typespec IDENT "(" parameterlist . ")" ";"
[245]
	methoddefinition = "procedure" IDENT "(" parameterlist ")" . ";"
[246]
	externdefinition = "extern" DQSTRING "function" typespec IDENT "(" externparameterlist ")" ";" .
[247]
	statement = "if" "(" expression ")" "{" statementlist . "}"
	statement = "if" "(" expression ")" "{" statementlist . "}" "else" "{" statementlist "}"
[248]
	statement = "while" "(" expression ")" "{" statementlist . "}"
[249]
	callablebody = "(" parameterlist ")" "{" statementlist "}" .
[250]
	methoddefinition = "function" typespec IDENT "(" parameterlist ")" . ";"
[251]
	methoddefinition = "procedure" IDENT "(" parameterlist ")" ";" .
[252]
	statement = "if" "(" expression ")" "{" statementlist "}" .
	statement = "if" "(" expression ")" "{" statementlist "}" . "else" "{" statementlist "}"
[253]
	statement = "while" "(" expression ")" "{" statementlist "}" .
[254]
	methoddefinition = "function" typespec IDENT "(" parameterlist ")" ";" .
[255]
	statement = "if" "(" expression ")" "{" statementlist "}" "else" . "{" statementlist "}"
[256]
	typedefinition = . "typedef" typename IDENT
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" typespec IDENT callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody
	statementlist = . statement statementlist
	statementlist = .
	statement = . functiondefinition
	statement = . typedefinition ";"
	statement = . "var" variabledefinition ";"
	statement = . expression ";"
	statement = . "return" expression ";"
	statement = . "if" "(" expression ")" "{" statementlist "}"
	statement = . "if" "(" expression ")" "{" statementlist "}" "else" "{" statementlist "}"
	statement = "if" "(" expression ")" "{" statementlist "}" "else" "{" . statementlist "}"
	statement = . "while" "(" expression ")" "{" statementlist "}"
	statement = . "{" statementlist "}"
	expression/L1 = . IDENT
	expression/L1 = . BOOLEAN
	expression/L1 = . CARDINAL
	expression/L1 = . INTEGER
	expression/L1 = . FLOAT
	expression/L1 = . DQSTRING
	expression/L1 = . SQSTRING
	expression/L1 = . "(" expression ")"
	expression/L2 = . expression "=" expression
	expression/L2 = . expression "+=" expression
	expression/L2 = . expression "-=" expression
	expression/L2 = . expression "*=" expression
	expression/L2 = . expression "/=" expression
	expression/L2 = . expression "%=" expression
	expression/L2 = . expression "&&=" expression
	expression/L2 = . expression "||=" expression
	expression/L2 = . expression "&=" expression
	expression/L2 = . expression "|=" expression
	expression/L2 = . expression "<<=" expression
	expression/L2 = . expression ">>=" expression
	expression/L3 = . expression "||" expression
	expression/L4 = . expression "&&" expression
	expression/L5 = . expression "|" expression
	expression/L6 = . expression "^" expression
	expression/L6 = . expression "&" expression
	expression/L7 = . expression "==" expression
	expression/L7 = . expression "!=" expression
	expression/L7 = . expression "<=" expression
	expression/L7 = . expression "<" expression
	expression/L7 = . expression ">=" expression
	expression/L7 = . expression ">" expression
	expression/L8 = . expression "+" expression
	expression/L8 = . expression "-" expression
	expression/L8 = . "&" expression
	expression/L8 = . "-" expression
	expression/L8 = . "+" expression
	expression/L8 = . "~" expression
	expression/L8 = . "!" expression
	expression/L9 = . expression "*" expression
	expression/L9 = . expression "/" expression
	expression/L9 = . expression "%" expression
	expression/L10 = . expression "<<" expression
	expression/L10 = . expression ">>" expression
	expression/L11 = . iexpression
	expression/L11 = . expression "." IDENT
	expression/L11 = . "*" expression
	expression/L12 = . expression "(" expressionlist ")"
	expression/L12 = . expression "(" ")"
	expression/L12 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[257]
	statement = "if" "(" expression ")" "{" statementlist "}" "else" "{" statementlist . "}"
[258]
	statement = "if" "(" expression ")" "{" statementlist "}" "else" "{" statementlist "}" .

-- LR(0) state cores (for calculation of SHIFT follow state):
[2]
	program = externlist . definitionlist mainproc
[3]
	externlist = externdefinition . externlist
[4]
	externdefinition = "extern" . DQSTRING "function" typespec IDENT "(" externparameterlist ")" ";"
	externdefinition = "extern" . DQSTRING "procedure" IDENT "(" externparameterlist ")" ";"
[5]
	program = externlist definitionlist . mainproc
[6]
	definition = datadefinition .
[7]
	definitionlist = definition . definitionlist
[8]
	typespec/L1 = typename .
	typespec/L1 = typename . "&"
	typespec/L1 = typename . "^"
	typespec/L1 = typename . "^" "&"
	typespec/L1 = typename . "^" "^"
	typespec/L1 = typename . "^" "^" "&"
[9]
	variabledefinition = typespec . IDENT
	variabledefinition = typespec . IDENT "=" expression
	variabledefinition = typespec . IDENT "[" expression "]" "=" expression
	variabledefinition = typespec . IDENT "[" expression "]"
[10]
	datadefinition = typedefinition . ";"
[11]
	datadefinition = structdefinition . ";"
[12]
	definition = interfacedefinition . ";"
[13]
	definition = classdefinition . ";"
[14]
	functiondefinition = linkage . "function" typespec IDENT callablebody
	functiondefinition = linkage . "procedure" IDENT callablebody
[15]
	definition = functiondefinition .
[16]
	datadefinition = variabledefinition . ";"
[17]
	typename/L1 = IDENT .
	typename/L1 = IDENT . "::" typename
[18]
	typespec/L1 = "const" . typename
	typespec/L1 = "const" . typename "&"
	typespec/L1 = "const" . typename "^"
	typespec/L1 = "const" . typename "^" "&"
	typespec/L1 = "const" . typename "^" "^"
	typespec/L1 = "const" . typename "^" "^" "&"
[19]
	typedefinition = "typedef" . typename IDENT
[20]
	structdefinition = "struct" . IDENT "{" datadefinitionlist "}"
[21]
	interfacedefinition = "interface" . IDENT "{" methoddefinitionlist "}"
[22]
	classdefinition = "class" . IDENT "{" definitionlist "}"
[23]
	linkage = "private" .
[24]
	linkage = "public" .
[25]
	externlist = externdefinition externlist .
[26]
	externdefinition = "extern" DQSTRING . "function" typespec IDENT "(" externparameterlist ")" ";"
	externdefinition = "extern" DQSTRING . "procedure" IDENT "(" externparameterlist ")" ";"
[27]
	program = externlist definitionlist mainproc .
[28]
	mainproc = "main" . "{" statementlist "}"
[29]
	definitionlist = definition definitionlist .
[30]
	typespec/L1 = typename "&" .
[31]
	typespec/L1 = typename "^" .
	typespec/L1 = typename "^" . "&"
	typespec/L1 = typename "^" . "^"
	typespec/L1 = typename "^" . "^" "&"
[32]
	variabledefinition = typespec IDENT .
	variabledefinition = typespec IDENT . "=" expression
	variabledefinition = typespec IDENT . "[" expression "]" "=" expression
	variabledefinition = typespec IDENT . "[" expression "]"
[33]
	datadefinition = typedefinition ";" .
[34]
	datadefinition = structdefinition ";" .
[35]
	definition = interfacedefinition ";" .
[36]
	definition = classdefinition ";" .
[37]
	functiondefinition = linkage "function" . typespec IDENT callablebody
[38]
	functiondefinition = linkage "procedure" . IDENT callablebody
[39]
	datadefinition = variabledefinition ";" .
[40]
	typename/L1 = IDENT "::" . typename
[41]
	typespec/L1 = "const" typename .
	typespec/L1 = "const" typename . "&"
	typespec/L1 = "const" typename . "^"
	typespec/L1 = "const" typename . "^" "&"
	typespec/L1 = "const" typename . "^" "^"
	typespec/L1 = "const" typename . "^" "^" "&"
[42]
	typedefinition = "typedef" typename . IDENT
[43]
	structdefinition = "struct" IDENT . "{" datadefinitionlist "}"
[44]
	interfacedefinition = "interface" IDENT . "{" methoddefinitionlist "}"
[45]
	classdefinition = "class" IDENT . "{" definitionlist "}"
[46]
	externdefinition = "extern" DQSTRING "function" . typespec IDENT "(" externparameterlist ")" ";"
[47]
	externdefinition = "extern" DQSTRING "procedure" . IDENT "(" externparameterlist ")" ";"
[48]
	mainproc = "main" "{" . statementlist "}"
[49]
	typespec/L1 = typename "^" "&" .
[50]
	typespec/L1 = typename "^" "^" .
	typespec/L1 = typename "^" "^" . "&"
[51]
	variabledefinition = typespec IDENT "=" . expression
[52]
	variabledefinition = typespec IDENT "[" . expression "]" "=" expression
	variabledefinition = typespec IDENT "[" . expression "]"
[53]
	functiondefinition = linkage "function" typespec . IDENT callablebody
[54]
	functiondefinition = linkage "procedure" IDENT . callablebody
[55]
	typename/L1 = IDENT "::" typename .
[56]
	typespec/L1 = "const" typename "&" .
[57]
	typespec/L1 = "const" typename "^" .
	typespec/L1 = "const" typename "^" . "&"
	typespec/L1 = "const" typename "^" . "^"
	typespec/L1 = "const" typename "^" . "^" "&"
[58]
	typedefinition = "typedef" typename IDENT .
[59]
	structdefinition = "struct" IDENT "{" . datadefinitionlist "}"
[60]
	interfacedefinition = "interface" IDENT "{" . methoddefinitionlist "}"
[61]
	classdefinition = "class" IDENT "{" . definitionlist "}"
[62]
	externdefinition = "extern" DQSTRING "function" typespec . IDENT "(" externparameterlist ")" ";"
[63]
	externdefinition = "extern" DQSTRING "procedure" IDENT . "(" externparameterlist ")" ";"
[64]
	statement = typedefinition . ";"
[65]
	statement = functiondefinition .
[66]
	mainproc = "main" "{" statementlist . "}"
[67]
	statementlist = statement . statementlist
[68]
	statement = expression . ";"
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[69]
	expression/L11 = iexpression .
[70]
	expression/L1 = BOOLEAN .
[71]
	expression/L1 = IDENT .
[72]
	expression/L1 = DQSTRING .
[73]
	expression/L1 = SQSTRING .
[74]
	expression/L1 = CARDINAL .
[75]
	expression/L1 = INTEGER .
[76]
	expression/L1 = FLOAT .
[77]
	expression/L1 = "(" . expression ")"
[78]
	statement = "{" . statementlist "}"
[79]
	expression/L8 = "&" . expression
[80]
	statement = "var" . variabledefinition ";"
[81]
	statement = "return" . expression ";"
[82]
	statement = "if" . "(" expression ")" "{" statementlist "}"
	statement = "if" . "(" expression ")" "{" statementlist "}" "else" "{" statementlist "}"
[83]
	statement = "while" . "(" expression ")" "{" statementlist "}"
[84]
	expression/L8 = "+" . expression
[85]
	expression/L8 = "-" . expression
[86]
	expression/L8 = "~" . expression
[87]
	expression/L8 = "!" . expression
[88]
	expression/L11 = "*" . expression
[89]
	typespec/L1 = typename "^" "^" "&" .
[90]
	variabledefinition = typespec IDENT "=" expression .
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[91]
	variabledefinition = typespec IDENT "[" expression . "]" "=" expression
	variabledefinition = typespec IDENT "[" expression . "]"
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[92]
	functiondefinition = linkage "function" typespec IDENT . callablebody
[93]
	functiondefinition = linkage "procedure" IDENT callablebody .
[94]
	callablebody = "(" . parameterlist ")" "{" statementlist "}"
[95]
	typespec/L1 = "const" typename "^" "&" .
[96]
	typespec/L1 = "const" typename "^" "^" .
	typespec/L1 = "const" typename "^" "^" . "&"
[97]
	structdefinition = "struct" IDENT "{" datadefinitionlist . "}"
[98]
	datadefinitionlist = datadefinition . datadefinitionlist
[99]
	interfacedefinition = "interface" IDENT "{" methoddefinitionlist . "}"
[100]
	methoddefinitionlist = methoddefinition . methoddefinitionlist
[101]
	methoddefinition = "function" . typespec IDENT "(" parameterlist ")" ";"
[102]
	methoddefinition = "procedure" . IDENT "(" parameterlist ")" ";"
[103]
	classdefinition = "class" IDENT "{" definitionlist . "}"
[104]
	externdefinition = "extern" DQSTRING "function" typespec IDENT . "(" externparameterlist ")" ";"
[105]
	externdefinition = "extern" DQSTRING "procedure" IDENT "(" . externparameterlist ")" ";"
[106]
	statement = typedefinition ";" .
[107]
	mainproc = "main" "{" statementlist "}" .
[108]
	statementlist = statement statementlist .
[109]
	iexpression = expression indirection . IDENT
[110]
	expression/L12 = expression "(" . expressionlist ")"
	expression/L12 = expression "(" . ")"
[111]
	statement = expression ";" .
[112]
	expression/L6 = expression "&" . expression
[113]
	expression/L6 = expression "^" . expression
[114]
	expression/L2 = expression "=" . expression
[115]
	expression/L12 = expression "[" . expressionlist "]"
[116]
	expression/L2 = expression "+=" . expression
[117]
	expression/L2 = expression "-=" . expression
[118]
	expression/L2 = expression "*=" . expression
[119]
	expression/L2 = expression "/=" . expression
[120]
	expression/L2 = expression "%=" . expression
[121]
	expression/L2 = expression "&&=" . expression
[122]
	expression/L2 = expression "||=" . expression
[123]
	expression/L2 = expression "&=" . expression
[124]
	expression/L2 = expression "|=" . expression
[125]
	expression/L2 = expression "<<=" . expression
[126]
	expression/L2 = expression ">>=" . expression
[127]
	expression/L3 = expression "||" . expression
[128]
	expression/L4 = expression "&&" . expression
[129]
	expression/L5 = expression "|" . expression
[130]
	expression/L7 = expression "==" . expression
[131]
	expression/L7 = expression "!=" . expression
[132]
	expression/L7 = expression "<=" . expression
[133]
	expression/L7 = expression "<" . expression
[134]
	expression/L7 = expression ">=" . expression
[135]
	expression/L7 = expression ">" . expression
[136]
	expression/L8 = expression "+" . expression
[137]
	expression/L8 = expression "-" . expression
[138]
	expression/L9 = expression "*" . expression
[139]
	expression/L9 = expression "/" . expression
[140]
	expression/L9 = expression "%" . expression
[141]
	expression/L10 = expression "<<" . expression
[142]
	expression/L10 = expression ">>" . expression
[143]
	expression/L11 = expression "." . IDENT
[144]
	indirection = "->" . indirection
	indirection = "->" .
[145]
	expression/L1 = "(" expression . ")"
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[146]
	statement = "{" statementlist . "}"
[147]
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L8 = "&" expression .
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[148]
	statement = "var" variabledefinition . ";"
[149]
	statement = "return" expression . ";"
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[150]
	statement = "if" "(" . expression ")" "{" statementlist "}"
	statement = "if" "(" . expression ")" "{" statementlist "}" "else" "{" statementlist "}"
[151]
	statement = "while" "(" . expression ")" "{" statementlist "}"
[152]
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L8 = "+" expression .
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[153]
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L8 = "-" expression .
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[154]
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L8 = "~" expression .
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[155]
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L8 = "!" expression .
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[156]
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L11 = "*" expression .
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[157]
	variabledefinition = typespec IDENT "[" expression "]" . "=" expression
	variabledefinition = typespec IDENT "[" expression "]" .
[158]
	functiondefinition = linkage "function" typespec IDENT callablebody .
[159]
	paramdecl = typespec . IDENT
[160]
	callablebody = "(" parameterlist . ")" "{" statementlist "}"
[161]
	parameterlist = parameters .
[162]
	parameters = paramdecl . "," parameters
	parameters = paramdecl .
[163]
	typespec/L1 = "const" typename "^" "^" "&" .
[164]
	structdefinition = "struct" IDENT "{" datadefinitionlist "}" .
[165]
	datadefinitionlist = datadefinition datadefinitionlist .
[166]
	interfacedefinition = "interface" IDENT "{" methoddefinitionlist "}" .
[167]
	methoddefinitionlist = methoddefinition methoddefinitionlist .
[168]
	methoddefinition = "function" typespec . IDENT "(" parameterlist ")" ";"
[169]
	methoddefinition = "procedure" IDENT . "(" parameterlist ")" ";"
[170]
	classdefinition = "class" IDENT "{" definitionlist "}" .
[171]
	externdefinition = "extern" DQSTRING "function" typespec IDENT "(" . externparameterlist ")" ";"
[172]
	externdefinition = "extern" DQSTRING "procedure" IDENT "(" externparameterlist . ")" ";"
[173]
	externparameterlist = externparameters .
	externparameterlist = externparameters .
[174]
	externparameters = typespec . "," externparameters
	externparameters = typespec .
[175]
	iexpression = expression indirection IDENT .
[176]
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	expressionlist = expression . "," expressionlist
	expressionlist = expression .
[177]
	expression/L12 = expression "(" expressionlist . ")"
[178]
	expression/L12 = expression "(" ")" .
[179]
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L6 = expression "&" expression .
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[180]
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression "^" expression .
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[181]
	expression/L2 = expression . "=" expression
	expression/L2 = expression "=" expression .
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[182]
	expression/L12 = expression "[" expressionlist . "]"
[183]
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression "+=" expression .
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[184]
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression "-=" expression .
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[185]
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression "*=" expression .
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[186]
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression "/=" expression .
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[187]
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression "%=" expression .
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[188]
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression "&&=" expression .
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[189]
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression "||=" expression .
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[190]
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression "&=" expression .
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[191]
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression "|=" expression .
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[192]
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression "<<=" expression .
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[193]
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L2 = expression ">>=" expression .
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[194]
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L3 = expression "||" expression .
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[195]
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L4 = expression "&&" expression .
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[196]
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L5 = expression "|" expression .
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[197]
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression "==" expression .
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[198]
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression "!=" expression .
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[199]
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression "<=" expression .
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[200]
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression "<" expression .
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[201]
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression ">=" expression .
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[202]
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L7 = expression ">" expression .
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[203]
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression "+" expression .
	expression/L8 = expression . "-" expression
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[204]
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L8 = expression "-" expression .
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[205]
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L9 = expression . "*" expression
	expression/L9 = expression "*" expression .
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[206]
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression "/" expression .
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[207]
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L9 = expression "%" expression .
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[208]
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression "<<" expression .
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[209]
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L10 = expression ">>" expression .
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[210]
	expression/L11 = expression "." IDENT .
[211]
	indirection = "->" indirection .
[212]
	expression/L1 = "(" expression ")" .
[213]
	statement = "{" statementlist "}" .
[214]
	statement = "var" variabledefinition ";" .
[215]
	statement = "return" expression ";" .
[216]
	statement = "if" "(" expression . ")" "{" statementlist "}"
	statement = "if" "(" expression . ")" "{" statementlist "}" "else" "{" statementlist "}"
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[217]
	statement = "while" "(" expression . ")" "{" statementlist "}"
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[218]
	variabledefinition = typespec IDENT "[" expression "]" "=" . expression
[219]
	paramdecl = typespec IDENT .
[220]
	callablebody = "(" parameterlist ")" . "{" statementlist "}"
[221]
	parameters = paramdecl "," . parameters
[222]
	methoddefinition = "function" typespec IDENT . "(" parameterlist ")" ";"
[223]
	methoddefinition = "procedure" IDENT "(" . parameterlist ")" ";"
[224]
	externdefinition = "extern" DQSTRING "function" typespec IDENT "(" externparameterlist . ")" ";"
[225]
	externdefinition = "extern" DQSTRING "procedure" IDENT "(" externparameterlist ")" . ";"
[226]
	externparameters = typespec "," . externparameters
[227]
	expressionlist = expression "," . expressionlist
[228]
	expression/L12 = expression "(" expressionlist ")" .
[229]
	expression/L12 = expression "[" expressionlist "]" .
[230]
	statement = "if" "(" expression ")" . "{" statementlist "}"
	statement = "if" "(" expression ")" . "{" statementlist "}" "else" "{" statementlist "}"
[231]
	statement = "while" "(" expression ")" . "{" statementlist "}"
[232]
	variabledefinition = typespec IDENT "[" expression "]" "=" expression .
	expression/L2 = expression . "=" expression
	expression/L2 = expression . "+=" expression
	expression/L2 = expression . "-=" expression
	expression/L2 = expression . "*=" expression
	expression/L2 = expression . "/=" expression
	expression/L2 = expression . "%=" expression
	expression/L2 = expression . "&&=" expression
	expression/L2 = expression . "||=" expression
	expression/L2 = expression . "&=" expression
	expression/L2 = expression . "|=" expression
	expression/L2 = expression . "<<=" expression
	expression/L2 = expression . ">>=" expression
	expression/L3 = expression . "||" expression
	expression/L4 = expression . "&&" expression
	expression/L5 = expression . "|" expression
	expression/L6 = expression . "^" expression
	expression/L6 = expression . "&" expression
	expression/L7 = expression . "==" expression
	expression/L7 = expression . "!=" expression
	expression/L7 = expression . "<=" expression
	expression/L7 = expression . "<" expression
	expression/L7 = expression . ">=" expression
	expression/L7 = expression . ">" expression
	expression/L8 = expression . "+" expression
	expression/L8 = expression . "-" expression
	expression/L9 = expression . "*" expression
	expression/L9 = expression . "/" expression
	expression/L9 = expression . "%" expression
	expression/L10 = expression . "<<" expression
	expression/L10 = expression . ">>" expression
	expression/L11 = expression . "." IDENT
	expression/L12 = expression . "(" expressionlist ")"
	expression/L12 = expression . "(" ")"
	expression/L12 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[233]
	callablebody = "(" parameterlist ")" "{" . statementlist "}"
[234]
	parameters = paramdecl "," parameters .
[235]
	methoddefinition = "function" typespec IDENT "(" . parameterlist ")" ";"
[236]
	methoddefinition = "procedure" IDENT "(" parameterlist . ")" ";"
[237]
	externdefinition = "extern" DQSTRING "function" typespec IDENT "(" externparameterlist ")" . ";"
[238]
	externdefinition = "extern" DQSTRING "procedure" IDENT "(" externparameterlist ")" ";" .
[239]
	externparameters = typespec "," externparameters .
[240]
	expressionlist = expression "," expressionlist .
[241]
	statement = "if" "(" expression ")" "{" . statementlist "}"
	statement = "if" "(" expression ")" "{" . statementlist "}" "else" "{" statementlist "}"
[242]
	statement = "while" "(" expression ")" "{" . statementlist "}"
[243]
	callablebody = "(" parameterlist ")" "{" statementlist . "}"
[244]
	methoddefinition = "function" typespec IDENT "(" parameterlist . ")" ";"
[245]
	methoddefinition = "procedure" IDENT "(" parameterlist ")" . ";"
[246]
	externdefinition = "extern" DQSTRING "function" typespec IDENT "(" externparameterlist ")" ";" .
[247]
	statement = "if" "(" expression ")" "{" statementlist . "}"
	statement = "if" "(" expression ")" "{" statementlist . "}" "else" "{" statementlist "}"
[248]
	statement = "while" "(" expression ")" "{" statementlist . "}"
[249]
	callablebody = "(" parameterlist ")" "{" statementlist "}" .
[250]
	methoddefinition = "function" typespec IDENT "(" parameterlist ")" . ";"
[251]
	methoddefinition = "procedure" IDENT "(" parameterlist ")" ";" .
[252]
	statement = "if" "(" expression ")" "{" statementlist "}" .
	statement = "if" "(" expression ")" "{" statementlist "}" . "else" "{" statementlist "}"
[253]
	statement = "while" "(" expression ")" "{" statementlist "}" .
[254]
	methoddefinition = "function" typespec IDENT "(" parameterlist ")" ";" .
[255]
	statement = "if" "(" expression ")" "{" statementlist "}" "else" . "{" statementlist "}"
[256]
	statement = "if" "(" expression ")" "{" statementlist "}" "else" "{" . statementlist "}"
[257]
	statement = "if" "(" expression ")" "{" statementlist "}" "else" "{" statementlist . "}"
[258]
	statement = "if" "(" expression ")" "{" statementlist "}" "else" "{" statementlist "}" .

-- LR(1) used FOLLOW sets labeled:
[0]: {$}
[1]: {$ IDENT "function" "procedure" "main" "const" "typedef" "struct" "interface" "class" "private" "public"}
[2]: {$ "main"}
[8]: {IDENT}
[9]: {')'}
[11]: {'}'}
[12]: {';'}
[18]: {']'}
[51]: {$ IDENT "extern" "function" "procedure" "main" "const" "typedef" "struct" "interface" "class" "private" "public"}
[53]: {"function" "procedure"}
[54]: {IDENT '&' '^'}
[88]: {'(' ';' '&' '^' '=' '[' "+=" "-=" "*=" "/=" "%=" "&&=" "||=" "&=" "|=" "<<=" ">>=" "||" "&&" '|' "==" "!=" "<=" '<' ">=" '>' '+' '-' '*' '/' '%' "<<" ">>" '.' "->"}
[89]: {$ BOOLEAN IDENT DQSTRING SQSTRING CARDINAL INTEGER FLOAT "function" '(' "procedure" '{' '}' '&' "typedef" "private" "public" "var" "return" "if" "while" '+' '-' '~' '!' '*'}
[156]: {'(' '&' '^' '=' '[' ']' "+=" "-=" "*=" "/=" "%=" "&&=" "||=" "&=" "|=" "<<=" ">>=" "||" "&&" '|' "==" "!=" "<=" '<' ">=" '>' '+' '-' '*' '/' '%' "<<" ">>" '.' "->"}
[157]: {$ IDENT '}' "const" "typedef" "struct"}
[158]: {$ "function" "procedure" '}'}
[159]: {$ IDENT "function" "procedure" '}' "const" "typedef" "struct" "interface" "class" "private" "public"}
[162]: {')' ','}
[163]: {')' ',' '&' '^'}
[200]: {'(' ')' '&' '^' '=' '[' "+=" "-=" "*=" "/=" "%=" "&&=" "||=" "&=" "|=" "<<=" ">>=" "||" "&&" '|' "==" "!=" "<=" '<' ">=" '>' '+' '-' '*' '/' '%' "<<" ">>" '.' "->"}
[202]: {'(' ')' ',' '&' '^' '=' '[' ']' "+=" "-=" "*=" "/=" "%=" "&&=" "||=" "&=" "|=" "<<=" ">>=" "||" "&&" '|' "==" "!=" "<=" '<' ">=" '>' '+' '-' '*' '/' '%' "<<" ">>" '.' "->"}
[203]: {'(' ')' ';' ',' '&' '^' '=' '[' ']' "+=" "-=" "*=" "/=" "%=" "&&=" "||=" "&=" "|=" "<<=" ">>=" "||" "&&" '|' "==" "!=" "<=" '<' ">=" '>' '+' '-' '*' '/' '%' "<<" ">>" '.' "->"}
[206]: {$ IDENT "function" "procedure" "main" '}' "const" "typedef" "struct" "interface" "class" "private" "public"}
[210]: {IDENT ')' ','}
[211]: {')' ']'}
[212]: {$ "main" '}'}
[213]: {$ BOOLEAN IDENT DQSTRING SQSTRING CARDINAL INTEGER FLOAT "function" '(' "procedure" "main" '{' '}' "const" '&' "typedef" "struct" "interface" "class" "private" "public" "var" "return" "if" "while" '+' '-' '~' '!' '*'}
[214]: {IDENT ')' ',' '&' '^'}

-- LALR(1) states (merged LR(1) elements assigned to LR(0) states):
[1]
	program = . externlist definitionlist mainproc, FOLLOW [0] -> GOTO 2
	externlist = . externdefinition externlist, FOLLOW [1] -> GOTO 3
	externdefinition = . "extern" DQSTRING "function" typespec IDENT "(" externparameterlist ")" ";", FOLLOW [51] -> SHIFT "extern" GOTO 4
	externdefinition = . "extern" DQSTRING "procedure" IDENT "(" externparameterlist ")" ";", FOLLOW [51] -> SHIFT "extern" GOTO 4
	externlist = ., FOLLOW [1] -> REDUCE externlist #0
[2]
	program = externlist . definitionlist mainproc, FOLLOW [0] -> GOTO 5
	definition = . datadefinition, FOLLOW [1] -> GOTO 6
	definitionlist = . definition definitionlist, FOLLOW [2] -> GOTO 7
	typespec/L1 = . typename, FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [8] -> GOTO 8
	variabledefinition = . typespec IDENT, FOLLOW [12] -> GOTO 9
	variabledefinition = . typespec IDENT "=" expression, FOLLOW [12] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression, FOLLOW [12] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]", FOLLOW [12] -> GOTO 9
	datadefinition = . typedefinition ";", FOLLOW [1] -> GOTO 10
	datadefinition = . structdefinition ";", FOLLOW [1] -> GOTO 11
	definition = . interfacedefinition ";", FOLLOW [1] -> GOTO 12
	definition = . classdefinition ";", FOLLOW [1] -> GOTO 13
	functiondefinition = . linkage "function" typespec IDENT callablebody, FOLLOW [1] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [1] -> GOTO 14
	definition = . functiondefinition, FOLLOW [1] -> GOTO 15
	datadefinition = . variabledefinition ";", FOLLOW [1] -> GOTO 16
	typename/L1 = . IDENT, FOLLOW [54] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [54] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [8] -> SHIFT "const" GOTO 18
	typedefinition = . "typedef" typename IDENT, FOLLOW [12] -> SHIFT "typedef" GOTO 19
	structdefinition = . "struct" IDENT "{" datadefinitionlist "}", FOLLOW [12] -> SHIFT "struct" GOTO 20
	interfacedefinition = . "interface" IDENT "{" methoddefinitionlist "}", FOLLOW [12] -> SHIFT "interface" GOTO 21
	classdefinition = . "class" IDENT "{" definitionlist "}", FOLLOW [12] -> SHIFT "class" GOTO 22
	linkage = . "private", FOLLOW [53] -> SHIFT "private" GOTO 23
	linkage = . "public", FOLLOW [53] -> SHIFT "public" GOTO 24
	definitionlist = ., FOLLOW [2] -> REDUCE definitionlist #0
	linkage = . (25), FOLLOW [53] -> REDUCE linkage #0 CALL linkage {linkage="internal",attributes="#0 nounwind"}
[3]
	externlist = externdefinition . externlist, FOLLOW [1] -> GOTO 25
	externlist = . externdefinition externlist, FOLLOW [1] -> GOTO 3
	externdefinition = . "extern" DQSTRING "function" typespec IDENT "(" externparameterlist ")" ";", FOLLOW [51] -> SHIFT "extern" GOTO 4
	externdefinition = . "extern" DQSTRING "procedure" IDENT "(" externparameterlist ")" ";", FOLLOW [51] -> SHIFT "extern" GOTO 4
	externlist = ., FOLLOW [1] -> REDUCE externlist #0
[4]
	externdefinition = "extern" . DQSTRING "function" typespec IDENT "(" externparameterlist ")" ";", FOLLOW [51] -> SHIFT DQSTRING GOTO 26
	externdefinition = "extern" . DQSTRING "procedure" IDENT "(" externparameterlist ")" ";", FOLLOW [51] -> SHIFT DQSTRING GOTO 26
[5]
	program = externlist definitionlist . mainproc, FOLLOW [0] -> GOTO 27
	mainproc = . "main" "{" statementlist "}", FOLLOW [0] -> SHIFT "main" GOTO 28
	mainproc = ., FOLLOW [0] -> REDUCE mainproc #0
[6]
	definition = datadefinition ., FOLLOW [206] -> REDUCE definition #1
[7]
	definitionlist = definition . definitionlist, FOLLOW [212] -> GOTO 29
	definition = . datadefinition, FOLLOW [206] -> GOTO 6
	definitionlist = . definition definitionlist, FOLLOW [212] -> GOTO 7
	typespec/L1 = . typename, FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [8] -> GOTO 8
	variabledefinition = . typespec IDENT, FOLLOW [12] -> GOTO 9
	variabledefinition = . typespec IDENT "=" expression, FOLLOW [12] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression, FOLLOW [12] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]", FOLLOW [12] -> GOTO 9
	datadefinition = . typedefinition ";", FOLLOW [206] -> GOTO 10
	datadefinition = . structdefinition ";", FOLLOW [206] -> GOTO 11
	definition = . interfacedefinition ";", FOLLOW [206] -> GOTO 12
	definition = . classdefinition ";", FOLLOW [206] -> GOTO 13
	functiondefinition = . linkage "function" typespec IDENT callablebody, FOLLOW [206] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [206] -> GOTO 14
	definition = . functiondefinition, FOLLOW [206] -> GOTO 15
	datadefinition = . variabledefinition ";", FOLLOW [206] -> GOTO 16
	typename/L1 = . IDENT, FOLLOW [54] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [54] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [8] -> SHIFT "const" GOTO 18
	typedefinition = . "typedef" typename IDENT, FOLLOW [12] -> SHIFT "typedef" GOTO 19
	structdefinition = . "struct" IDENT "{" datadefinitionlist "}", FOLLOW [12] -> SHIFT "struct" GOTO 20
	interfacedefinition = . "interface" IDENT "{" methoddefinitionlist "}", FOLLOW [12] -> SHIFT "interface" GOTO 21
	classdefinition = . "class" IDENT "{" definitionlist "}", FOLLOW [12] -> SHIFT "class" GOTO 22
	linkage = . "private", FOLLOW [53] -> SHIFT "private" GOTO 23
	linkage = . "public", FOLLOW [53] -> SHIFT "public" GOTO 24
	linkage = . (25), FOLLOW [53] -> REDUCE linkage #0 CALL linkage {linkage="internal",attributes="#0 nounwind"}
	definitionlist = ., FOLLOW [212] -> REDUCE definitionlist #0
[8]
	typespec/L1 = typename . "&", FOLLOW [210] -> SHIFT '&' GOTO 30
	typespec/L1 = typename . "^", FOLLOW [210] -> SHIFT '^' GOTO 31
	typespec/L1 = typename . "^" "&", FOLLOW [210] -> SHIFT '^' GOTO 31
	typespec/L1 = typename . "^" "^", FOLLOW [210] -> SHIFT '^' GOTO 31
	typespec/L1 = typename . "^" "^" "&", FOLLOW [210] -> SHIFT '^' GOTO 31
	typespec/L1 = typename . (9), FOLLOW [210] -> REDUCE typespec #1 CALL typespec ""
[9]
	variabledefinition = typespec . IDENT, FOLLOW [12] -> SHIFT IDENT GOTO 32
	variabledefinition = typespec . IDENT "=" expression, FOLLOW [12] -> SHIFT IDENT GOTO 32
	variabledefinition = typespec . IDENT "[" expression "]" "=" expression, FOLLOW [12] -> SHIFT IDENT GOTO 32
	variabledefinition = typespec . IDENT "[" expression "]", FOLLOW [12] -> SHIFT IDENT GOTO 32
[10]
	datadefinition = typedefinition . ";", FOLLOW [206] -> SHIFT ';' GOTO 33
[11]
	datadefinition = structdefinition . ";", FOLLOW [206] -> SHIFT ';' GOTO 34
[12]
	definition = interfacedefinition . ";", FOLLOW [206] -> SHIFT ';' GOTO 35
[13]
	definition = classdefinition . ";", FOLLOW [206] -> SHIFT ';' GOTO 36
[14]
	functiondefinition = linkage . "function" typespec IDENT callablebody, FOLLOW [213] -> SHIFT "function" GOTO 37
	functiondefinition = linkage . "procedure" IDENT callablebody, FOLLOW [213] -> SHIFT "procedure" GOTO 38
[15]
	definition = functiondefinition . (8), FOLLOW [206] -> REDUCE definition #1 CALL definition
[16]
	datadefinition = variabledefinition . ";", FOLLOW [206] -> SHIFT ';' GOTO 39
[17]
	typename/L1 = IDENT . "::" typename, FOLLOW [214] -> SHIFT "::" GOTO 40
	typename/L1 = IDENT ., FOLLOW [214] -> REDUCE typename #1
[18]
	typespec/L1 = "const" . typename, FOLLOW [210] -> GOTO 41
	typespec/L1 = "const" . typename "&", FOLLOW [210] -> GOTO 41
	typespec/L1 = "const" . typename "^", FOLLOW [210] -> GOTO 41
	typespec/L1 = "const" . typename "^" "&", FOLLOW [210] -> GOTO 41
	typespec/L1 = "const" . typename "^" "^", FOLLOW [210] -> GOTO 41
	typespec/L1 = "const" . typename "^" "^" "&", FOLLOW [210] -> GOTO 41
	typename/L1 = . IDENT, FOLLOW [214] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [214] -> SHIFT IDENT GOTO 17
[19]
	typedefinition = "typedef" . typename IDENT, FOLLOW [12] -> GOTO 42
	typename/L1 = . IDENT, FOLLOW [8] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [8] -> SHIFT IDENT GOTO 17
[20]
	structdefinition = "struct" . IDENT "{" datadefinitionlist "}", FOLLOW [12] -> SHIFT IDENT GOTO 43
[21]
	interfacedefinition = "interface" . IDENT "{" methoddefinitionlist "}", FOLLOW [12] -> SHIFT IDENT GOTO 44
[22]
	classdefinition = "class" . IDENT "{" definitionlist "}", FOLLOW [12] -> SHIFT IDENT GOTO 45
[23]
	linkage = "private" . (25), FOLLOW [53] -> REDUCE linkage #1 CALL linkage {linkage="internal",attributes="#0 nounwind"}
[24]
	linkage = "public" . (26), FOLLOW [53] -> REDUCE linkage #1 CALL linkage {linkage="external",attributes="#0 noinline nounwind"}
[25]
	externlist = externdefinition externlist ., FOLLOW [1] -> REDUCE externlist #2
[26]
	externdefinition = "extern" DQSTRING . "function" typespec IDENT "(" externparameterlist ")" ";", FOLLOW [51] -> SHIFT "function" GOTO 46
	externdefinition = "extern" DQSTRING . "procedure" IDENT "(" externparameterlist ")" ";", FOLLOW [51] -> SHIFT "procedure" GOTO 47
[27]
	program = externlist definitionlist mainproc . (1) -> ACCEPT
	program = externlist definitionlist mainproc . (1), FOLLOW [0] -> REDUCE program #3 CALL program
[28]
	mainproc = "main" . "{" statementlist "}", FOLLOW [0] -> SHIFT '{' GOTO 48
[29]
	definitionlist = definition definitionlist ., FOLLOW [212] -> REDUCE definitionlist #2
[30]
	typespec/L1 = typename "&" . (11), FOLLOW [210] -> REDUCE typespec #2 CALL typespec "&"
[31]
	typespec/L1 = typename "^" . "&", FOLLOW [210] -> SHIFT '&' GOTO 49
	typespec/L1 = typename "^" . "^", FOLLOW [210] -> SHIFT '^' GOTO 50
	typespec/L1 = typename "^" . "^" "&", FOLLOW [210] -> SHIFT '^' GOTO 50
	typespec/L1 = typename "^" . (13), FOLLOW [210] -> REDUCE typespec #2 CALL typespec "^"
[32]
	variabledefinition = typespec IDENT . "=" expression, FOLLOW [12] -> SHIFT '=' GOTO 51
	variabledefinition = typespec IDENT . "[" expression "]" "=" expression, FOLLOW [12] -> SHIFT '[' GOTO 52
	variabledefinition = typespec IDENT . "[" expression "]", FOLLOW [12] -> SHIFT '[' GOTO 52
	variabledefinition = typespec IDENT . (step:38), FOLLOW [12] -> REDUCE variabledefinition #2 CALL vardef
[33]
	datadefinition = typedefinition ";" . (8), FOLLOW [206] -> REDUCE datadefinition #2 CALL definition
[34]
	datadefinition = structdefinition ";" . (8), FOLLOW [206] -> REDUCE datadefinition #2 CALL definition
[35]
	definition = interfacedefinition ";" . (8), FOLLOW [206] -> REDUCE definition #2 CALL definition
[36]
	definition = classdefinition ";" . (8), FOLLOW [206] -> REDUCE definition #2 CALL definition
[37]
	typespec/L1 = . typename, FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [8] -> GOTO 8
	functiondefinition = linkage "function" . typespec IDENT callablebody, FOLLOW [213] -> GOTO 53
	typename/L1 = . IDENT, FOLLOW [54] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [54] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [8] -> SHIFT "const" GOTO 18
[38]
	functiondefinition = linkage "procedure" . IDENT callablebody, FOLLOW [213] -> SHIFT IDENT GOTO 54
[39]
	datadefinition = variabledefinition ";" . (8), FOLLOW [206] -> REDUCE datadefinition #2 CALL definition
[40]
	typename/L1 = IDENT "::" . typename, FOLLOW [214] -> GOTO 55
	typename/L1 = . IDENT, FOLLOW [214] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [214] -> SHIFT IDENT GOTO 17
[41]
	typespec/L1 = "const" typename . "&", FOLLOW [210] -> SHIFT '&' GOTO 56
	typespec/L1 = "const" typename . "^", FOLLOW [210] -> SHIFT '^' GOTO 57
	typespec/L1 = "const" typename . "^" "&", FOLLOW [210] -> SHIFT '^' GOTO 57
	typespec/L1 = "const" typename . "^" "^", FOLLOW [210] -> SHIFT '^' GOTO 57
	typespec/L1 = "const" typename . "^" "^" "&", FOLLOW [210] -> SHIFT '^' GOTO 57
	typespec/L1 = "const" typename . (10), FOLLOW [210] -> REDUCE typespec #2 CALL typespec "const "
[42]
	typedefinition = "typedef" typename . IDENT, FOLLOW [12] -> SHIFT IDENT GOTO 58
[43]
	structdefinition = "struct" IDENT . "{" datadefinitionlist "}", FOLLOW [12] -> SHIFT '{' GOTO 59
[44]
	interfacedefinition = "interface" IDENT . "{" methoddefinitionlist "}", FOLLOW [12] -> SHIFT '{' GOTO 60
[45]
	classdefinition = "class" IDENT . "{" definitionlist "}", FOLLOW [12] -> SHIFT '{' GOTO 61
[46]
	typespec/L1 = . typename, FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [8] -> GOTO 8
	externdefinition = "extern" DQSTRING "function" . typespec IDENT "(" externparameterlist ")" ";", FOLLOW [51] -> GOTO 62
	typename/L1 = . IDENT, FOLLOW [54] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [54] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [8] -> SHIFT "const" GOTO 18
[47]
	externdefinition = "extern" DQSTRING "procedure" . IDENT "(" externparameterlist ")" ";", FOLLOW [51] -> SHIFT IDENT GOTO 63
[48]
	statement = . typedefinition ";", FOLLOW [89] -> GOTO 64
	functiondefinition = . linkage "function" typespec IDENT callablebody, FOLLOW [89] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [89] -> GOTO 14
	statement = . functiondefinition, FOLLOW [89] -> GOTO 65
	mainproc = "main" "{" . statementlist "}", FOLLOW [0] -> GOTO 66
	statementlist = . statement statementlist, FOLLOW [11] -> GOTO 67
	statement = . expression ";", FOLLOW [89] -> GOTO 68
	expression/L2 = . expression "=" expression, FOLLOW [88] -> GOTO 68
	expression/L2 = . expression "+=" expression, FOLLOW [88] -> GOTO 68
	expression/L2 = . expression "-=" expression, FOLLOW [88] -> GOTO 68
	expression/L2 = . expression "*=" expression, FOLLOW [88] -> GOTO 68
	expression/L2 = . expression "/=" expression, FOLLOW [88] -> GOTO 68
	expression/L2 = . expression "%=" expression, FOLLOW [88] -> GOTO 68
	expression/L2 = . expression "&&=" expression, FOLLOW [88] -> GOTO 68
	expression/L2 = . expression "||=" expression, FOLLOW [88] -> GOTO 68
	expression/L2 = . expression "&=" expression, FOLLOW [88] -> GOTO 68
	expression/L2 = . expression "|=" expression, FOLLOW [88] -> GOTO 68
	expression/L2 = . expression "<<=" expression, FOLLOW [88] -> GOTO 68
	expression/L2 = . expression ">>=" expression, FOLLOW [88] -> GOTO 68
	expression/L3 = . expression "||" expression, FOLLOW [88] -> GOTO 68
	expression/L4 = . expression "&&" expression, FOLLOW [88] -> GOTO 68
	expression/L5 = . expression "|" expression, FOLLOW [88] -> GOTO 68
	expression/L6 = . expression "^" expression, FOLLOW [88] -> GOTO 68
	expression/L6 = . expression "&" expression, FOLLOW [88] -> GOTO 68
	expression/L7 = . expression "==" expression, FOLLOW [88] -> GOTO 68
	expression/L7 = . expression "!=" expression, FOLLOW [88] -> GOTO 68
	expression/L7 = . expression "<=" expression, FOLLOW [88] -> GOTO 68
	expression/L7 = . expression "<" expression, FOLLOW [88] -> GOTO 68
	expression/L7 = . expression ">=" expression, FOLLOW [88] -> GOTO 68
	expression/L7 = . expression ">" expression, FOLLOW [88] -> GOTO 68
	expression/L8 = . expression "+" expression, FOLLOW [88] -> GOTO 68
	expression/L8 = . expression "-" expression, FOLLOW [88] -> GOTO 68
	expression/L9 = . expression "*" expression, FOLLOW [88] -> GOTO 68
	expression/L9 = . expression "/" expression, FOLLOW [88] -> GOTO 68
	expression/L9 = . expression "%" expression, FOLLOW [88] -> GOTO 68
	expression/L10 = . expression "<<" expression, FOLLOW [88] -> GOTO 68
	expression/L10 = . expression ">>" expression, FOLLOW [88] -> GOTO 68
	expression/L11 = . expression "." IDENT, FOLLOW [88] -> GOTO 68
	expression/L12 = . expression "(" expressionlist ")", FOLLOW [88] -> GOTO 68
	expression/L12 = . expression "(" ")", FOLLOW [88] -> GOTO 68
	expression/L12 = . expression "[" expressionlist "]", FOLLOW [88] -> GOTO 68
	iexpression = . expression indirection IDENT, FOLLOW [88] -> GOTO 68
	expression/L11 = . iexpression, FOLLOW [88] -> GOTO 69
	expression/L1 = . BOOLEAN, FOLLOW [88] -> SHIFT BOOLEAN GOTO 70
	expression/L1 = . IDENT, FOLLOW [88] -> SHIFT IDENT GOTO 71
	expression/L1 = . DQSTRING, FOLLOW [88] -> SHIFT DQSTRING GOTO 72
	expression/L1 = . SQSTRING, FOLLOW [88] -> SHIFT SQSTRING GOTO 73
	expression/L1 = . CARDINAL, FOLLOW [88] -> SHIFT CARDINAL GOTO 74
	expression/L1 = . INTEGER, FOLLOW [88] -> SHIFT INTEGER GOTO 75
	expression/L1 = . FLOAT, FOLLOW [88] -> SHIFT FLOAT GOTO 76
	expression/L1 = . "(" expression ")", FOLLOW [88] -> SHIFT '(' GOTO 77
	statement = . "{" statementlist "}", FOLLOW [89] -> SHIFT '{' GOTO 78
	expression/L8 = . "&" expression, FOLLOW [88] -> SHIFT '&' GOTO 79
	typedefinition = . "typedef" typename IDENT, FOLLOW [12] -> SHIFT "typedef" GOTO 19
	linkage = . "private", FOLLOW [53] -> SHIFT "private" GOTO 23
	linkage = . "public", FOLLOW [53] -> SHIFT "public" GOTO 24
	statement = . "var" variabledefinition ";", FOLLOW [89] -> SHIFT "var" GOTO 80
	statement = . "return" expression ";", FOLLOW [89] -> SHIFT "return" GOTO 81
	statement = . "if" "(" expression ")" "{" statementlist "}", FOLLOW [89] -> SHIFT "if" GOTO 82
	statement = . "if" "(" expression ")" "{" statementlist "}" "else" "{" statementlist "}", FOLLOW [89] -> SHIFT "if" GOTO 82
	statement = . "while" "(" expression ")" "{" statementlist "}", FOLLOW [89] -> SHIFT "while" GOTO 83
	expression/L8 = . "+" expression, FOLLOW [88] -> SHIFT '+' GOTO 84
	expression/L8 = . "-" expression, FOLLOW [88] -> SHIFT '-' GOTO 85
	expression/L8 = . "~" expression, FOLLOW [88] -> SHIFT '~' GOTO 86
	expression/L8 = . "!" expression, FOLLOW [88] -> SHIFT '!' GOTO 87
	expression/L11 = . "*" expression, FOLLOW [88] -> SHIFT '*' GOTO 88
	statementlist = ., FOLLOW [11] -> REDUCE statementlist #0
	linkage = . (25), FOLLOW [53] -> REDUCE linkage #0 CALL linkage {linkage="internal",attributes="#0 nounwind"}
[49]
	typespec/L1 = typename "^" "&" . (15), FOLLOW [210] -> REDUCE typespec #3 CALL typespec "^&"
[50]
	typespec/L1 = typename "^" "^" . "&", FOLLOW [210] -> SHIFT '&' GOTO 89
	typespec/L1 = typename "^" "^" . (17), FOLLOW [210] -> REDUCE typespec #3 CALL typespec "^^"
[51]
	variabledefinition = typespec IDENT "=" . expression, FOLLOW [12] -> GOTO 90
	expression/L2 = . expression "=" expression, FOLLOW [88] -> GOTO 90
	expression/L2 = . expression "+=" expression, FOLLOW [88] -> GOTO 90
	expression/L2 = . expression "-=" expression, FOLLOW [88] -> GOTO 90
	expression/L2 = . expression "*=" expression, FOLLOW [88] -> GOTO 90
	expression/L2 = . expression "/=" expression, FOLLOW [88] -> GOTO 90
	expression/L2 = . expression "%=" expression, FOLLOW [88] -> GOTO 90
	expression/L2 = . expression "&&=" expression, FOLLOW [88] -> GOTO 90
	expression/L2 = . expression "||=" expression, FOLLOW [88] -> GOTO 90
	expression/L2 = . expression "&=" expression, FOLLOW [88] -> GOTO 90
	expression/L2 = . expression "|=" expression, FOLLOW [88] -> GOTO 90
	expression/L2 = . expression "<<=" expression, FOLLOW [88] -> GOTO 90
	expression/L2 = . expression ">>=" expression, FOLLOW [88] -> GOTO 90
	expression/L3 = . expression "||" expression, FOLLOW [88] -> GOTO 90
	expression/L4 = . expression "&&" expression, FOLLOW [88] -> GOTO 90
	expression/L5 = . expression "|" expression, FOLLOW [88] -> GOTO 90
	expression/L6 = . expression "^" expression, FOLLOW [88] -> GOTO 90
	expression/L6 = . expression "&" expression, FOLLOW [88] -> GOTO 90
	expression/L7 = . expression "==" expression, FOLLOW [88] -> GOTO 90
	expression/L7 = . expression "!=" expression, FOLLOW [88] -> GOTO 90
	expression/L7 = . expression "<=" expression, FOLLOW [88] -> GOTO 90
	expression/L7 = . expression "<" expression, FOLLOW [88] -> GOTO 90
	expression/L7 = . expression ">=" expression, FOLLOW [88] -> GOTO 90
	expression/L7 = . expression ">" expression, FOLLOW [88] -> GOTO 90
	expression/L8 = . expression "+" expression, FOLLOW [88] -> GOTO 90
	expression/L8 = . expression "-" expression, FOLLOW [88] -> GOTO 90
	expression/L9 = . expression "*" expression, FOLLOW [88] -> GOTO 90
	expression/L9 = . expression "/" expression, FOLLOW [88] -> GOTO 90
	expression/L9 = . expression "%" expression, FOLLOW [88] -> GOTO 90
	expression/L10 = . expression "<<" expression, FOLLOW [88] -> GOTO 90
	expression/L10 = . expression ">>" expression, FOLLOW [88] -> GOTO 90
	expression/L11 = . expression "." IDENT, FOLLOW [88] -> GOTO 90
	expression/L12 = . expression "(" expressionlist ")", FOLLOW [88] -> GOTO 90
	expression/L12 = . expression "(" ")", FOLLOW [88] -> GOTO 90
	expression/L12 = . expression "[" expressionlist "]", FOLLOW [88] -> GOTO 90
	iexpression = . expression indirection IDENT, FOLLOW [88] -> GOTO 90
	expression/L11 = . iexpression, FOLLOW [88] -> GOTO 69
	expression/L1 = . BOOLEAN, FOLLOW [88] -> SHIFT BOOLEAN GOTO 70
	expression/L1 = . IDENT, FOLLOW [88] -> SHIFT IDENT GOTO 71
	expression/L1 = . DQSTRING, FOLLOW [88] -> SHIFT DQSTRING GOTO 72
	expression/L1 = . SQSTRING, FOLLOW [88] -> SHIFT SQSTRING GOTO 73
	expression/L1 = . CARDINAL, FOLLOW [88] -> SHIFT CARDINAL GOTO 74
	expression/L1 = . INTEGER, FOLLOW [88] -> SHIFT INTEGER GOTO 75
	expression/L1 = . FLOAT, FOLLOW [88] -> SHIFT FLOAT GOTO 76
	expression/L1 = . "(" expression ")", FOLLOW [88] -> SHIFT '(' GOTO 77
	expression/L8 = . "&" expression, FOLLOW [88] -> SHIFT '&' GOTO 79
	expression/L8 = . "+" expression, FOLLOW [88] -> SHIFT '+' GOTO 84
	expression/L8 = . "-" expression, FOLLOW [88] -> SHIFT '-' GOTO 85
	expression/L8 = . "~" expression, FOLLOW [88] -> SHIFT '~' GOTO 86
	expression/L8 = . "!" expression, FOLLOW [88] -> SHIFT '!' GOTO 87
	expression/L11 = . "*" expression, FOLLOW [88] -> SHIFT '*' GOTO 88
[52]
	variabledefinition = typespec IDENT "[" . expression "]" "=" expression, FOLLOW [12] -> GOTO 91
	variabledefinition = typespec IDENT "[" . expression "]", FOLLOW [12] -> GOTO 91
	expression/L2 = . expression "=" expression, FOLLOW [156] -> GOTO 91
	expression/L2 = . expression "+=" expression, FOLLOW [156] -> GOTO 91
	expression/L2 = . expression "-=" expression, FOLLOW [156] -> GOTO 91
	expression/L2 = . expression "*=" expression, FOLLOW [156] -> GOTO 91
	expression/L2 = . expression "/=" expression, FOLLOW [156] -> GOTO 91
	expression/L2 = . expression "%=" expression, FOLLOW [156] -> GOTO 91
	expression/L2 = . expression "&&=" expression, FOLLOW [156] -> GOTO 91
	expression/L2 = . expression "||=" expression, FOLLOW [156] -> GOTO 91
	expression/L2 = . expression "&=" expression, FOLLOW [156] -> GOTO 91
	expression/L2 = . expression "|=" expression, FOLLOW [156] -> GOTO 91
	expression/L2 = . expression "<<=" expression, FOLLOW [156] -> GOTO 91
	expression/L2 = . expression ">>=" expression, FOLLOW [156] -> GOTO 91
	expression/L3 = . expression "||" expression, FOLLOW [156] -> GOTO 91
	expression/L4 = . expression "&&" expression, FOLLOW [156] -> GOTO 91
	expression/L5 = . expression "|" expression, FOLLOW [156] -> GOTO 91
	expression/L6 = . expression "^" expression, FOLLOW [156] -> GOTO 91
	expression/L6 = . expression "&" expression, FOLLOW [156] -> GOTO 91
	expression/L7 = . expression "==" expression, FOLLOW [156] -> GOTO 91
	expression/L7 = . expression "!=" expression, FOLLOW [156] -> GOTO 91
	expression/L7 = . expression "<=" expression, FOLLOW [156] -> GOTO 91
	expression/L7 = . expression "<" expression, FOLLOW [156] -> GOTO 91
	expression/L7 = . expression ">=" expression, FOLLOW [156] -> GOTO 91
	expression/L7 = . expression ">" expression, FOLLOW [156] -> GOTO 91
	expression/L8 = . expression "+" expression, FOLLOW [156] -> GOTO 91
	expression/L8 = . expression "-" expression, FOLLOW [156] -> GOTO 91
	expression/L9 = . expression "*" expression, FOLLOW [156] -> GOTO 91
	expression/L9 = . expression "/" expression, FOLLOW [156] -> GOTO 91
	expression/L9 = . expression "%" expression, FOLLOW [156] -> GOTO 91
	expression/L10 = . expression "<<" expression, FOLLOW [156] -> GOTO 91
	expression/L10 = . expression ">>" expression, FOLLOW [156] -> GOTO 91
	expression/L11 = . expression "." IDENT, FOLLOW [156] -> GOTO 91
	expression/L12 = . expression "(" expressionlist ")", FOLLOW [156] -> GOTO 91
	expression/L12 = . expression "(" ")", FOLLOW [156] -> GOTO 91
	expression/L12 = . expression "[" expressionlist "]", FOLLOW [156] -> GOTO 91
	iexpression = . expression indirection IDENT, FOLLOW [156] -> GOTO 91
	expression/L11 = . iexpression, FOLLOW [156] -> GOTO 69
	expression/L1 = . BOOLEAN, FOLLOW [156] -> SHIFT BOOLEAN GOTO 70
	expression/L1 = . IDENT, FOLLOW [156] -> SHIFT IDENT GOTO 71
	expression/L1 = . DQSTRING, FOLLOW [156] -> SHIFT DQSTRING GOTO 72
	expression/L1 = . SQSTRING, FOLLOW [156] -> SHIFT SQSTRING GOTO 73
	expression/L1 = . CARDINAL, FOLLOW [156] -> SHIFT CARDINAL GOTO 74
	expression/L1 = . INTEGER, FOLLOW [156] -> SHIFT INTEGER GOTO 75
	expression/L1 = . FLOAT, FOLLOW [156] -> SHIFT FLOAT GOTO 76
	expression/L1 = . "(" expression ")", FOLLOW [156] -> SHIFT '(' GOTO 77
	expression/L8 = . "&" expression, FOLLOW [156] -> SHIFT '&' GOTO 79
	expression/L8 = . "+" expression, FOLLOW [156] -> SHIFT '+' GOTO 84
	expression/L8 = . "-" expression, FOLLOW [156] -> SHIFT '-' GOTO 85
	expression/L8 = . "~" expression, FOLLOW [156] -> SHIFT '~' GOTO 86
	expression/L8 = . "!" expression, FOLLOW [156] -> SHIFT '!' GOTO 87
	expression/L11 = . "*" expression, FOLLOW [156] -> SHIFT '*' GOTO 88
[53]
	functiondefinition = linkage "function" typespec . IDENT callablebody, FOLLOW [213] -> SHIFT IDENT GOTO 92
[54]
	functiondefinition = linkage "procedure" IDENT . callablebody, FOLLOW [213] -> GOTO 93
	callablebody = . "(" parameterlist ")" "{" statementlist "}", FOLLOW [213] -> SHIFT '(' GOTO 94
[55]
	typename/L1 = IDENT "::" typename ., FOLLOW [214] -> REDUCE typename #3
[56]
	typespec/L1 = "const" typename "&" . (12), FOLLOW [210] -> REDUCE typespec #3 CALL typespec "const&"
[57]
	typespec/L1 = "const" typename "^" . "&", FOLLOW [210] -> SHIFT '&' GOTO 95
	typespec/L1 = "const" typename "^" . "^", FOLLOW [210] -> SHIFT '^' GOTO 96
	typespec/L1 = "const" typename "^" . "^" "&", FOLLOW [210] -> SHIFT '^' GOTO 96
	typespec/L1 = "const" typename "^" . (14), FOLLOW [210] -> REDUCE typespec #3 CALL typespec "const^"
[58]
	typedefinition = "typedef" typename IDENT . (step:21), FOLLOW [12] -> REDUCE typedefinition #3 CALL typedef
[59]
	structdefinition = "struct" IDENT "{" . datadefinitionlist "}", FOLLOW [12] -> GOTO 97
	datadefinitionlist = . datadefinition datadefinitionlist, FOLLOW [11] -> GOTO 98
	typespec/L1 = . typename, FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [8] -> GOTO 8
	variabledefinition = . typespec IDENT, FOLLOW [12] -> GOTO 9
	variabledefinition = . typespec IDENT "=" expression, FOLLOW [12] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression, FOLLOW [12] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]", FOLLOW [12] -> GOTO 9
	datadefinition = . typedefinition ";", FOLLOW [157] -> GOTO 10
	datadefinition = . structdefinition ";", FOLLOW [157] -> GOTO 11
	datadefinition = . variabledefinition ";", FOLLOW [157] -> GOTO 16
	typename/L1 = . IDENT, FOLLOW [54] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [54] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [8] -> SHIFT "const" GOTO 18
	typedefinition = . "typedef" typename IDENT, FOLLOW [12] -> SHIFT "typedef" GOTO 19
	structdefinition = . "struct" IDENT "{" datadefinitionlist "}", FOLLOW [12] -> SHIFT "struct" GOTO 20
	datadefinitionlist = ., FOLLOW [11] -> REDUCE datadefinitionlist #0
[60]
	interfacedefinition = "interface" IDENT "{" . methoddefinitionlist "}", FOLLOW [12] -> GOTO 99
	methoddefinitionlist = . methoddefinition methoddefinitionlist, FOLLOW [11] -> GOTO 100
	methoddefinition = . "function" typespec IDENT "(" parameterlist ")" ";", FOLLOW [158] -> SHIFT "function" GOTO 101
	methoddefinition = . "procedure" IDENT "(" parameterlist ")" ";", FOLLOW [158] -> SHIFT "procedure" GOTO 102
	methoddefinitionlist = ., FOLLOW [11] -> REDUCE methoddefinitionlist #0
[61]
	classdefinition = "class" IDENT "{" . definitionlist "}", FOLLOW [12] -> GOTO 103
	definition = . datadefinition, FOLLOW [159] -> GOTO 6
	definitionlist = . definition definitionlist, FOLLOW [11] -> GOTO 7
	typespec/L1 = . typename, FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [8] -> GOTO 8
	variabledefinition = . typespec IDENT, FOLLOW [12] -> GOTO 9
	variabledefinition = . typespec IDENT "=" expression, FOLLOW [12] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression, FOLLOW [12] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]", FOLLOW [12] -> GOTO 9
	datadefinition = . typedefinition ";", FOLLOW [159] -> GOTO 10
	datadefinition = . structdefinition ";", FOLLOW [159] -> GOTO 11
	definition = . interfacedefinition ";", FOLLOW [159] -> GOTO 12
	definition = . classdefinition ";", FOLLOW [159] -> GOTO 13
	functiondefinition = . linkage "function" typespec IDENT callablebody, FOLLOW [159] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [159] -> GOTO 14
	definition = . functiondefinition, FOLLOW [159] -> GOTO 15
	datadefinition = . variabledefinition ";", FOLLOW [159] -> GOTO 16
	typename/L1 = . IDENT, FOLLOW [54] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [54] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [8] -> SHIFT "const" GOTO 18
	typedefinition = . "typedef" typename IDENT, FOLLOW [12] -> SHIFT "typedef" GOTO 19
	structdefinition = . "struct" IDENT "{" datadefinitionlist "}", FOLLOW [12] -> SHIFT "struct" GOTO 20
	interfacedefinition = . "interface" IDENT "{" methoddefinitionlist "}", FOLLOW [12] -> SHIFT "interface" GOTO 21
	classdefinition = . "class" IDENT "{" definitionlist "}", FOLLOW [12] -> SHIFT "class" GOTO 22
	linkage = . "private", FOLLOW [53] -> SHIFT "private" GOTO 23
	linkage = . "public", FOLLOW [53] -> SHIFT "public" GOTO 24
	definitionlist = ., FOLLOW [11] -> REDUCE definitionlist #0
	linkage = . (25), FOLLOW [53] -> REDUCE linkage #0 CALL linkage {linkage="internal",attributes="#0 nounwind"}
[62]
	externdefinition = "extern" DQSTRING "function" typespec . IDENT "(" externparameterlist ")" ";", FOLLOW [51] -> SHIFT IDENT GOTO 104
[63]
	externdefinition = "extern" DQSTRING "procedure" IDENT . "(" externparameterlist ")" ";", FOLLOW [51] -> SHIFT '(' GOTO 105
[64]
	statement = typedefinition . ";", FOLLOW [89] -> SHIFT ';' GOTO 106
[65]
	statement = functiondefinition . (8), FOLLOW [89] -> REDUCE statement #1 CALL definition
[66]
	mainproc = "main" "{" statementlist . "}", FOLLOW [0] -> SHIFT '}' GOTO 107
[67]
	statement = . typedefinition ";", FOLLOW [89] -> GOTO 64
	functiondefinition = . linkage "function" typespec IDENT callablebody, FOLLOW [89] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [89] -> GOTO 14
	statement = . functiondefinition, FOLLOW [89] -> GOTO 65
	statementlist = statement . statementlist, FOLLOW [11] -> GOTO 108
	statementlist = . statement statementlist, FOLLOW [11] -> GOTO 67
	statement = . expression ";", FOLLOW [89] -> GOTO 68
	expression/L2 = . expression "=" expression, FOLLOW [88] -> GOTO 68
	expression/L2 = . expression "+=" expression, FOLLOW [88] -> GOTO 68
	expression/L2 = . expression "-=" expression, FOLLOW [88] -> GOTO 68
	expression/L2 = . expression "*=" expression, FOLLOW [88] -> GOTO 68
	expression/L2 = . expression "/=" expression, FOLLOW [88] -> GOTO 68
	expression/L2 = . expression "%=" expression, FOLLOW [88] -> GOTO 68
	expression/L2 = . expression "&&=" expression, FOLLOW [88] -> GOTO 68
	expression/L2 = . expression "||=" expression, FOLLOW [88] -> GOTO 68
	expression/L2 = . expression "&=" expression, FOLLOW [88] -> GOTO 68
	expression/L2 = . expression "|=" expression, FOLLOW [88] -> GOTO 68
	expression/L2 = . expression "<<=" expression, FOLLOW [88] -> GOTO 68
	expression/L2 = . expression ">>=" expression, FOLLOW [88] -> GOTO 68
	expression/L3 = . expression "||" expression, FOLLOW [88] -> GOTO 68
	expression/L4 = . expression "&&" expression, FOLLOW [88] -> GOTO 68
	expression/L5 = . expression "|" expression, FOLLOW [88] -> GOTO 68
	expression/L6 = . expression "^" expression, FOLLOW [88] -> GOTO 68
	expression/L6 = . expression "&" expression, FOLLOW [88] -> GOTO 68
	expression/L7 = . expression "==" expression, FOLLOW [88] -> GOTO 68
	expression/L7 = . expression "!=" expression, FOLLOW [88] -> GOTO 68
	expression/L7 = . expression "<=" expression, FOLLOW [88] -> GOTO 68
	expression/L7 = . expression "<" expression, FOLLOW [88] -> GOTO 68
	expression/L7 = . expression ">=" expression, FOLLOW [88] -> GOTO 68
	expression/L7 = . expression ">" expression, FOLLOW [88] -> GOTO 68
	expression/L8 = . expression "+" expression, FOLLOW [88] -> GOTO 68
	expression/L8 = . expression "-" expression, FOLLOW [88] -> GOTO 68
	expression/L9 = . expression "*" expression, FOLLOW [88] -> GOTO 68
	expression/L9 = . expression "/" expression, FOLLOW [88] -> GOTO 68
	expression/L9 = . expression "%" expression, FOLLOW [88] -> GOTO 68
	expression/L10 = . expression "<<" expression, FOLLOW [88] -> GOTO 68
	expression/L10 = . expression ">>" expression, FOLLOW [88] -> GOTO 68
	expression/L11 = . expression "." IDENT, FOLLOW [88] -> GOTO 68
	expression/L12 = . expression "(" expressionlist ")", FOLLOW [88] -> GOTO 68
	expression/L12 = . expression "(" ")", FOLLOW [88] -> GOTO 68
	expression/L12 = . expression "[" expressionlist "]", FOLLOW [88] -> GOTO 68
	iexpression = . expression indirection IDENT, FOLLOW [88] -> GOTO 68
	expression/L11 = . iexpression, FOLLOW [88] -> GOTO 69
	expression/L1 = . BOOLEAN, FOLLOW [88] -> SHIFT BOOLEAN GOTO 70
	expression/L1 = . IDENT, FOLLOW [88] -> SHIFT IDENT GOTO 71
	expression/L1 = . DQSTRING, FOLLOW [88] -> SHIFT DQSTRING GOTO 72
	expression/L1 = . SQSTRING, FOLLOW [88] -> SHIFT SQSTRING GOTO 73
	expression/L1 = . CARDINAL, FOLLOW [88] -> SHIFT CARDINAL GOTO 74
	expression/L1 = . INTEGER, FOLLOW [88] -> SHIFT INTEGER GOTO 75
	expression/L1 = . FLOAT, FOLLOW [88] -> SHIFT FLOAT GOTO 76
	expression/L1 = . "(" expression ")", FOLLOW [88] -> SHIFT '(' GOTO 77
	statement = . "{" statementlist "}", FOLLOW [89] -> SHIFT '{' GOTO 78
	expression/L8 = . "&" expression, FOLLOW [88] -> SHIFT '&' GOTO 79
	typedefinition = . "typedef" typename IDENT, FOLLOW [12] -> SHIFT "typedef" GOTO 19
	linkage = . "private", FOLLOW [53] -> SHIFT "private" GOTO 23
	linkage = . "public", FOLLOW [53] -> SHIFT "public" GOTO 24
	statement = . "var" variabledefinition ";", FOLLOW [89] -> SHIFT "var" GOTO 80
	statement = . "return" expression ";", FOLLOW [89] -> SHIFT "return" GOTO 81
	statement = . "if" "(" expression ")" "{" statementlist "}", FOLLOW [89] -> SHIFT "if" GOTO 82
	statement = . "if" "(" expression ")" "{" statementlist "}" "else" "{" statementlist "}", FOLLOW [89] -> SHIFT "if" GOTO 82
	statement = . "while" "(" expression ")" "{" statementlist "}", FOLLOW [89] -> SHIFT "while" GOTO 83
	expression/L8 = . "+" expression, FOLLOW [88] -> SHIFT '+' GOTO 84
	expression/L8 = . "-" expression, FOLLOW [88] -> SHIFT '-' GOTO 85
	expression/L8 = . "~" expression, FOLLOW [88] -> SHIFT '~' GOTO 86
	expression/L8 = . "!" expression, FOLLOW [88] -> SHIFT '!' GOTO 87
	expression/L11 = . "*" expression, FOLLOW [88] -> SHIFT '*' GOTO 88
	statementlist = ., FOLLOW [11] -> REDUCE statementlist #0
	linkage = . (25), FOLLOW [53] -> REDUCE linkage #0 CALL linkage {linkage="internal",attributes="#0 nounwind"}
[68]
	iexpression = expression . indirection IDENT, FOLLOW [88] -> GOTO 109
	expression/L12 = expression . "(" expressionlist ")", FOLLOW [88] -> SHIFT '(' GOTO 110
	expression/L12 = expression . "(" ")", FOLLOW [88] -> SHIFT '(' GOTO 110
	statement = expression . ";", FOLLOW [89] -> SHIFT ';' GOTO 111
	expression/L6 = expression . "&" expression, FOLLOW [88] -> SHIFT '&' GOTO 112
	expression/L6 = expression . "^" expression, FOLLOW [88] -> SHIFT '^' GOTO 113
	expression/L2 = expression . "=" expression, FOLLOW [88] -> SHIFT '=' GOTO 114
	expression/L12 = expression . "[" expressionlist "]", FOLLOW [88] -> SHIFT '[' GOTO 115
	expression/L2 = expression . "+=" expression, FOLLOW [88] -> SHIFT "+=" GOTO 116
	expression/L2 = expression . "-=" expression, FOLLOW [88] -> SHIFT "-=" GOTO 117
	expression/L2 = expression . "*=" expression, FOLLOW [88] -> SHIFT "*=" GOTO 118
	expression/L2 = expression . "/=" expression, FOLLOW [88] -> SHIFT "/=" GOTO 119
	expression/L2 = expression . "%=" expression, FOLLOW [88] -> SHIFT "%=" GOTO 120
	expression/L2 = expression . "&&=" expression, FOLLOW [88] -> SHIFT "&&=" GOTO 121
	expression/L2 = expression . "||=" expression, FOLLOW [88] -> SHIFT "||=" GOTO 122
	expression/L2 = expression . "&=" expression, FOLLOW [88] -> SHIFT "&=" GOTO 123
	expression/L2 = expression . "|=" expression, FOLLOW [88] -> SHIFT "|=" GOTO 124
	expression/L2 = expression . "<<=" expression, FOLLOW [88] -> SHIFT "<<=" GOTO 125
	expression/L2 = expression . ">>=" expression, FOLLOW [88] -> SHIFT ">>=" GOTO 126
	expression/L3 = expression . "||" expression, FOLLOW [88] -> SHIFT "||" GOTO 127
	expression/L4 = expression . "&&" expression, FOLLOW [88] -> SHIFT "&&" GOTO 128
	expression/L5 = expression . "|" expression, FOLLOW [88] -> SHIFT '|' GOTO 129
	expression/L7 = expression . "==" expression, FOLLOW [88] -> SHIFT "==" GOTO 130
	expression/L7 = expression . "!=" expression, FOLLOW [88] -> SHIFT "!=" GOTO 131
	expression/L7 = expression . "<=" expression, FOLLOW [88] -> SHIFT "<=" GOTO 132
	expression/L7 = expression . "<" expression, FOLLOW [88] -> SHIFT '<' GOTO 133
	expression/L7 = expression . ">=" expression, FOLLOW [88] -> SHIFT ">=" GOTO 134
	expression/L7 = expression . ">" expression, FOLLOW [88] -> SHIFT '>' GOTO 135
	expression/L8 = expression . "+" expression, FOLLOW [88] -> SHIFT '+' GOTO 136
	expression/L8 = expression . "-" expression, FOLLOW [88] -> SHIFT '-' GOTO 137
	expression/L9 = expression . "*" expression, FOLLOW [88] -> SHIFT '*' GOTO 138
	expression/L9 = expression . "/" expression, FOLLOW [88] -> SHIFT '/' GOTO 139
	expression/L9 = expression . "%" expression, FOLLOW [88] -> SHIFT '%' GOTO 140
	expression/L10 = expression . "<<" expression, FOLLOW [88] -> SHIFT "<<" GOTO 141
	expression/L10 = expression . ">>" expression, FOLLOW [88] -> SHIFT ">>" GOTO 142
	expression/L11 = expression . "." IDENT, FOLLOW [88] -> SHIFT '.' GOTO 143
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 144
[69]
	expression/L11 = iexpression ., FOLLOW [203] -> REDUCE expression #1
[70]
	expression/L1 = BOOLEAN . (43), FOLLOW [203] -> REDUCE expression #1 CALL constant "constexpr bool"
[71]
	expression/L1 = IDENT . (42), FOLLOW [203] -> REDUCE expression #1 CALL variable
[72]
	expression/L1 = DQSTRING . (47), FOLLOW [203] -> REDUCE expression #1 CALL string_constant "constexpr float"
[73]
	expression/L1 = SQSTRING . (48), FOLLOW [203] -> REDUCE expression #1 CALL char_constant "constexpr float"
[74]
	expression/L1 = CARDINAL . (44), FOLLOW [203] -> REDUCE expression #1 CALL constant "constexpr uint"
[75]
	expression/L1 = INTEGER . (45), FOLLOW [203] -> REDUCE expression #1 CALL constant "constexpr int"
[76]
	expression/L1 = FLOAT . (46), FOLLOW [203] -> REDUCE expression #1 CALL constant "constexpr float"
[77]
	expression/L1 = "(" . expression ")", FOLLOW [203] -> GOTO 145
	expression/L2 = . expression "=" expression, FOLLOW [203] -> GOTO 145
	expression/L2 = . expression "+=" expression, FOLLOW [203] -> GOTO 145
	expression/L2 = . expression "-=" expression, FOLLOW [203] -> GOTO 145
	expression/L2 = . expression "*=" expression, FOLLOW [203] -> GOTO 145
	expression/L2 = . expression "/=" expression, FOLLOW [203] -> GOTO 145
	expression/L2 = . expression "%=" expression, FOLLOW [203] -> GOTO 145
	expression/L2 = . expression "&&=" expression, FOLLOW [203] -> GOTO 145
	expression/L2 = . expression "||=" expression, FOLLOW [203] -> GOTO 145
	expression/L2 = . expression "&=" expression, FOLLOW [203] -> GOTO 145
	expression/L2 = . expression "|=" expression, FOLLOW [203] -> GOTO 145
	expression/L2 = . expression "<<=" expression, FOLLOW [203] -> GOTO 145
	expression/L2 = . expression ">>=" expression, FOLLOW [203] -> GOTO 145
	expression/L3 = . expression "||" expression, FOLLOW [203] -> GOTO 145
	expression/L4 = . expression "&&" expression, FOLLOW [203] -> GOTO 145
	expression/L5 = . expression "|" expression, FOLLOW [203] -> GOTO 145
	expression/L6 = . expression "^" expression, FOLLOW [203] -> GOTO 145
	expression/L6 = . expression "&" expression, FOLLOW [203] -> GOTO 145
	expression/L7 = . expression "==" expression, FOLLOW [203] -> GOTO 145
	expression/L7 = . expression "!=" expression, FOLLOW [203] -> GOTO 145
	expression/L7 = . expression "<=" expression, FOLLOW [203] -> GOTO 145
	expression/L7 = . expression "<" expression, FOLLOW [203] -> GOTO 145
	expression/L7 = . expression ">=" expression, FOLLOW [203] -> GOTO 145
	expression/L7 = . expression ">" expression, FOLLOW [203] -> GOTO 145
	expression/L8 = . expression "+" expression, FOLLOW [203] -> GOTO 145
	expression/L8 = . expression "-" expression, FOLLOW [203] -> GOTO 145
	expression/L9 = . expression "*" expression, FOLLOW [203] -> GOTO 145
	expression/L9 = . expression "/" expression, FOLLOW [203] -> GOTO 145
	expression/L9 = . expression "%" expression, FOLLOW [203] -> GOTO 145
	expression/L10 = . expression "<<" expression, FOLLOW [203] -> GOTO 145
	expression/L10 = . expression ">>" expression, FOLLOW [203] -> GOTO 145
	expression/L11 = . expression "." IDENT, FOLLOW [203] -> GOTO 145
	expression/L12 = . expression "(" expressionlist ")", FOLLOW [203] -> GOTO 145
	expression/L12 = . expression "(" ")", FOLLOW [203] -> GOTO 145
	expression/L12 = . expression "[" expressionlist "]", FOLLOW [203] -> GOTO 145
	iexpression = . expression indirection IDENT, FOLLOW [203] -> GOTO 145
	expression/L11 = . iexpression, FOLLOW [203] -> GOTO 69
	expression/L1 = . BOOLEAN, FOLLOW [203] -> SHIFT BOOLEAN GOTO 70
	expression/L1 = . IDENT, FOLLOW [203] -> SHIFT IDENT GOTO 71
	expression/L1 = . DQSTRING, FOLLOW [203] -> SHIFT DQSTRING GOTO 72
	expression/L1 = . SQSTRING, FOLLOW [203] -> SHIFT SQSTRING GOTO 73
	expression/L1 = . CARDINAL, FOLLOW [203] -> SHIFT CARDINAL GOTO 74
	expression/L1 = . INTEGER, FOLLOW [203] -> SHIFT INTEGER GOTO 75
	expression/L1 = . FLOAT, FOLLOW [203] -> SHIFT FLOAT GOTO 76
	expression/L1 = . "(" expression ")", FOLLOW [203] -> SHIFT '(' GOTO 77
	expression/L8 = . "&" expression, FOLLOW [203] -> SHIFT '&' GOTO 79
	expression/L8 = . "+" expression, FOLLOW [203] -> SHIFT '+' GOTO 84
	expression/L8 = . "-" expression, FOLLOW [203] -> SHIFT '-' GOTO 85
	expression/L8 = . "~" expression, FOLLOW [203] -> SHIFT '~' GOTO 86
	expression/L8 = . "!" expression, FOLLOW [203] -> SHIFT '!' GOTO 87
	expression/L11 = . "*" expression, FOLLOW [203] -> SHIFT '*' GOTO 88
[78]
	statement = . typedefinition ";", FOLLOW [89] -> GOTO 64
	functiondefinition = . linkage "function" typespec IDENT callablebody, FOLLOW [89] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [89] -> GOTO 14
	statement = . functiondefinition, FOLLOW [89] -> GOTO 65
	statement = "{" . statementlist "}", FOLLOW [89] -> GOTO 146
	statementlist = . statement statementlist, FOLLOW [11] -> GOTO 67
	statement = . expression ";", FOLLOW [89] -> GOTO 68
	expression/L2 = . expression "=" expression, FOLLOW [88] -> GOTO 68
	expression/L2 = . expression "+=" expression, FOLLOW [88] -> GOTO 68
	expression/L2 = . expression "-=" expression, FOLLOW [88] -> GOTO 68
	expression/L2 = . expression "*=" expression, FOLLOW [88] -> GOTO 68
	expression/L2 = . expression "/=" expression, FOLLOW [88] -> GOTO 68
	expression/L2 = . expression "%=" expression, FOLLOW [88] -> GOTO 68
	expression/L2 = . expression "&&=" expression, FOLLOW [88] -> GOTO 68
	expression/L2 = . expression "||=" expression, FOLLOW [88] -> GOTO 68
	expression/L2 = . expression "&=" expression, FOLLOW [88] -> GOTO 68
	expression/L2 = . expression "|=" expression, FOLLOW [88] -> GOTO 68
	expression/L2 = . expression "<<=" expression, FOLLOW [88] -> GOTO 68
	expression/L2 = . expression ">>=" expression, FOLLOW [88] -> GOTO 68
	expression/L3 = . expression "||" expression, FOLLOW [88] -> GOTO 68
	expression/L4 = . expression "&&" expression, FOLLOW [88] -> GOTO 68
	expression/L5 = . expression "|" expression, FOLLOW [88] -> GOTO 68
	expression/L6 = . expression "^" expression, FOLLOW [88] -> GOTO 68
	expression/L6 = . expression "&" expression, FOLLOW [88] -> GOTO 68
	expression/L7 = . expression "==" expression, FOLLOW [88] -> GOTO 68
	expression/L7 = . expression "!=" expression, FOLLOW [88] -> GOTO 68
	expression/L7 = . expression "<=" expression, FOLLOW [88] -> GOTO 68
	expression/L7 = . expression "<" expression, FOLLOW [88] -> GOTO 68
	expression/L7 = . expression ">=" expression, FOLLOW [88] -> GOTO 68
	expression/L7 = . expression ">" expression, FOLLOW [88] -> GOTO 68
	expression/L8 = . expression "+" expression, FOLLOW [88] -> GOTO 68
	expression/L8 = . expression "-" expression, FOLLOW [88] -> GOTO 68
	expression/L9 = . expression "*" expression, FOLLOW [88] -> GOTO 68
	expression/L9 = . expression "/" expression, FOLLOW [88] -> GOTO 68
	expression/L9 = . expression "%" expression, FOLLOW [88] -> GOTO 68
	expression/L10 = . expression "<<" expression, FOLLOW [88] -> GOTO 68
	expression/L10 = . expression ">>" expression, FOLLOW [88] -> GOTO 68
	expression/L11 = . expression "." IDENT, FOLLOW [88] -> GOTO 68
	expression/L12 = . expression "(" expressionlist ")", FOLLOW [88] -> GOTO 68
	expression/L12 = . expression "(" ")", FOLLOW [88] -> GOTO 68
	expression/L12 = . expression "[" expressionlist "]", FOLLOW [88] -> GOTO 68
	iexpression = . expression indirection IDENT, FOLLOW [88] -> GOTO 68
	expression/L11 = . iexpression, FOLLOW [88] -> GOTO 69
	expression/L1 = . BOOLEAN, FOLLOW [88] -> SHIFT BOOLEAN GOTO 70
	expression/L1 = . IDENT, FOLLOW [88] -> SHIFT IDENT GOTO 71
	expression/L1 = . DQSTRING, FOLLOW [88] -> SHIFT DQSTRING GOTO 72
	expression/L1 = . SQSTRING, FOLLOW [88] -> SHIFT SQSTRING GOTO 73
	expression/L1 = . CARDINAL, FOLLOW [88] -> SHIFT CARDINAL GOTO 74
	expression/L1 = . INTEGER, FOLLOW [88] -> SHIFT INTEGER GOTO 75
	expression/L1 = . FLOAT, FOLLOW [88] -> SHIFT FLOAT GOTO 76
	expression/L1 = . "(" expression ")", FOLLOW [88] -> SHIFT '(' GOTO 77
	statement = . "{" statementlist "}", FOLLOW [89] -> SHIFT '{' GOTO 78
	expression/L8 = . "&" expression, FOLLOW [88] -> SHIFT '&' GOTO 79
	typedefinition = . "typedef" typename IDENT, FOLLOW [12] -> SHIFT "typedef" GOTO 19
	linkage = . "private", FOLLOW [53] -> SHIFT "private" GOTO 23
	linkage = . "public", FOLLOW [53] -> SHIFT "public" GOTO 24
	statement = . "var" variabledefinition ";", FOLLOW [89] -> SHIFT "var" GOTO 80
	statement = . "return" expression ";", FOLLOW [89] -> SHIFT "return" GOTO 81
	statement = . "if" "(" expression ")" "{" statementlist "}", FOLLOW [89] -> SHIFT "if" GOTO 82
	statement = . "if" "(" expression ")" "{" statementlist "}" "else" "{" statementlist "}", FOLLOW [89] -> SHIFT "if" GOTO 82
	statement = . "while" "(" expression ")" "{" statementlist "}", FOLLOW [89] -> SHIFT "while" GOTO 83
	expression/L8 = . "+" expression, FOLLOW [88] -> SHIFT '+' GOTO 84
	expression/L8 = . "-" expression, FOLLOW [88] -> SHIFT '-' GOTO 85
	expression/L8 = . "~" expression, FOLLOW [88] -> SHIFT '~' GOTO 86
	expression/L8 = . "!" expression, FOLLOW [88] -> SHIFT '!' GOTO 87
	expression/L11 = . "*" expression, FOLLOW [88] -> SHIFT '*' GOTO 88
	statementlist = ., FOLLOW [11] -> REDUCE statementlist #0
	linkage = . (25), FOLLOW [53] -> REDUCE linkage #0 CALL linkage {linkage="internal",attributes="#0 nounwind"}
[79]
	expression/L2 = . expression "=" expression, FOLLOW [203] -> GOTO 147
	expression/L2 = . expression "+=" expression, FOLLOW [203] -> GOTO 147
	expression/L2 = . expression "-=" expression, FOLLOW [203] -> GOTO 147
	expression/L2 = . expression "*=" expression, FOLLOW [203] -> GOTO 147
	expression/L2 = . expression "/=" expression, FOLLOW [203] -> GOTO 147
	expression/L2 = . expression "%=" expression, FOLLOW [203] -> GOTO 147
	expression/L2 = . expression "&&=" expression, FOLLOW [203] -> GOTO 147
	expression/L2 = . expression "||=" expression, FOLLOW [203] -> GOTO 147
	expression/L2 = . expression "&=" expression, FOLLOW [203] -> GOTO 147
	expression/L2 = . expression "|=" expression, FOLLOW [203] -> GOTO 147
	expression/L2 = . expression "<<=" expression, FOLLOW [203] -> GOTO 147
	expression/L2 = . expression ">>=" expression, FOLLOW [203] -> GOTO 147
	expression/L3 = . expression "||" expression, FOLLOW [203] -> GOTO 147
	expression/L4 = . expression "&&" expression, FOLLOW [203] -> GOTO 147
	expression/L5 = . expression "|" expression, FOLLOW [203] -> GOTO 147
	expression/L6 = . expression "^" expression, FOLLOW [203] -> GOTO 147
	expression/L6 = . expression "&" expression, FOLLOW [203] -> GOTO 147
	expression/L7 = . expression "==" expression, FOLLOW [203] -> GOTO 147
	expression/L7 = . expression "!=" expression, FOLLOW [203] -> GOTO 147
	expression/L7 = . expression "<=" expression, FOLLOW [203] -> GOTO 147
	expression/L7 = . expression "<" expression, FOLLOW [203] -> GOTO 147
	expression/L7 = . expression ">=" expression, FOLLOW [203] -> GOTO 147
	expression/L7 = . expression ">" expression, FOLLOW [203] -> GOTO 147
	expression/L8 = . expression "+" expression, FOLLOW [203] -> GOTO 147
	expression/L8 = . expression "-" expression, FOLLOW [203] -> GOTO 147
	expression/L8 = "&" . expression, FOLLOW [203] -> GOTO 147
	expression/L9 = . expression "*" expression, FOLLOW [203] -> GOTO 147
	expression/L9 = . expression "/" expression, FOLLOW [203] -> GOTO 147
	expression/L9 = . expression "%" expression, FOLLOW [203] -> GOTO 147
	expression/L10 = . expression "<<" expression, FOLLOW [203] -> GOTO 147
	expression/L10 = . expression ">>" expression, FOLLOW [203] -> GOTO 147
	expression/L11 = . expression "." IDENT, FOLLOW [203] -> GOTO 147
	expression/L12 = . expression "(" expressionlist ")", FOLLOW [203] -> GOTO 147
	expression/L12 = . expression "(" ")", FOLLOW [203] -> GOTO 147
	expression/L12 = . expression "[" expressionlist "]", FOLLOW [203] -> GOTO 147
	iexpression = . expression indirection IDENT, FOLLOW [203] -> GOTO 147
	expression/L11 = . iexpression, FOLLOW [203] -> GOTO 69
	expression/L1 = . BOOLEAN, FOLLOW [203] -> SHIFT BOOLEAN GOTO 70
	expression/L1 = . IDENT, FOLLOW [203] -> SHIFT IDENT GOTO 71
	expression/L1 = . DQSTRING, FOLLOW [203] -> SHIFT DQSTRING GOTO 72
	expression/L1 = . SQSTRING, FOLLOW [203] -> SHIFT SQSTRING GOTO 73
	expression/L1 = . CARDINAL, FOLLOW [203] -> SHIFT CARDINAL GOTO 74
	expression/L1 = . INTEGER, FOLLOW [203] -> SHIFT INTEGER GOTO 75
	expression/L1 = . FLOAT, FOLLOW [203] -> SHIFT FLOAT GOTO 76
	expression/L1 = . "(" expression ")", FOLLOW [203] -> SHIFT '(' GOTO 77
	expression/L8 = . "&" expression, FOLLOW [203] -> SHIFT '&' GOTO 79
	expression/L8 = . "+" expression, FOLLOW [203] -> SHIFT '+' GOTO 84
	expression/L8 = . "-" expression, FOLLOW [203] -> SHIFT '-' GOTO 85
	expression/L8 = . "~" expression, FOLLOW [203] -> SHIFT '~' GOTO 86
	expression/L8 = . "!" expression, FOLLOW [203] -> SHIFT '!' GOTO 87
	expression/L11 = . "*" expression, FOLLOW [203] -> SHIFT '*' GOTO 88
[80]
	typespec/L1 = . typename, FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [8] -> GOTO 8
	variabledefinition = . typespec IDENT, FOLLOW [12] -> GOTO 9
	variabledefinition = . typespec IDENT "=" expression, FOLLOW [12] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression, FOLLOW [12] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]", FOLLOW [12] -> GOTO 9
	statement = "var" . variabledefinition ";", FOLLOW [89] -> GOTO 148
	typename/L1 = . IDENT, FOLLOW [54] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [54] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [8] -> SHIFT "const" GOTO 18
[81]
	statement = "return" . expression ";", FOLLOW [89] -> GOTO 149
	expression/L2 = . expression "=" expression, FOLLOW [88] -> GOTO 149
	expression/L2 = . expression "+=" expression, FOLLOW [88] -> GOTO 149
	expression/L2 = . expression "-=" expression, FOLLOW [88] -> GOTO 149
	expression/L2 = . expression "*=" expression, FOLLOW [88] -> GOTO 149
	expression/L2 = . expression "/=" expression, FOLLOW [88] -> GOTO 149
	expression/L2 = . expression "%=" expression, FOLLOW [88] -> GOTO 149
	expression/L2 = . expression "&&=" expression, FOLLOW [88] -> GOTO 149
	expression/L2 = . expression "||=" expression, FOLLOW [88] -> GOTO 149
	expression/L2 = . expression "&=" expression, FOLLOW [88] -> GOTO 149
	expression/L2 = . expression "|=" expression, FOLLOW [88] -> GOTO 149
	expression/L2 = . expression "<<=" expression, FOLLOW [88] -> GOTO 149
	expression/L2 = . expression ">>=" expression, FOLLOW [88] -> GOTO 149
	expression/L3 = . expression "||" expression, FOLLOW [88] -> GOTO 149
	expression/L4 = . expression "&&" expression, FOLLOW [88] -> GOTO 149
	expression/L5 = . expression "|" expression, FOLLOW [88] -> GOTO 149
	expression/L6 = . expression "^" expression, FOLLOW [88] -> GOTO 149
	expression/L6 = . expression "&" expression, FOLLOW [88] -> GOTO 149
	expression/L7 = . expression "==" expression, FOLLOW [88] -> GOTO 149
	expression/L7 = . expression "!=" expression, FOLLOW [88] -> GOTO 149
	expression/L7 = . expression "<=" expression, FOLLOW [88] -> GOTO 149
	expression/L7 = . expression "<" expression, FOLLOW [88] -> GOTO 149
	expression/L7 = . expression ">=" expression, FOLLOW [88] -> GOTO 149
	expression/L7 = . expression ">" expression, FOLLOW [88] -> GOTO 149
	expression/L8 = . expression "+" expression, FOLLOW [88] -> GOTO 149
	expression/L8 = . expression "-" expression, FOLLOW [88] -> GOTO 149
	expression/L9 = . expression "*" expression, FOLLOW [88] -> GOTO 149
	expression/L9 = . expression "/" expression, FOLLOW [88] -> GOTO 149
	expression/L9 = . expression "%" expression, FOLLOW [88] -> GOTO 149
	expression/L10 = . expression "<<" expression, FOLLOW [88] -> GOTO 149
	expression/L10 = . expression ">>" expression, FOLLOW [88] -> GOTO 149
	expression/L11 = . expression "." IDENT, FOLLOW [88] -> GOTO 149
	expression/L12 = . expression "(" expressionlist ")", FOLLOW [88] -> GOTO 149
	expression/L12 = . expression "(" ")", FOLLOW [88] -> GOTO 149
	expression/L12 = . expression "[" expressionlist "]", FOLLOW [88] -> GOTO 149
	iexpression = . expression indirection IDENT, FOLLOW [88] -> GOTO 149
	expression/L11 = . iexpression, FOLLOW [88] -> GOTO 69
	expression/L1 = . BOOLEAN, FOLLOW [88] -> SHIFT BOOLEAN GOTO 70
	expression/L1 = . IDENT, FOLLOW [88] -> SHIFT IDENT GOTO 71
	expression/L1 = . DQSTRING, FOLLOW [88] -> SHIFT DQSTRING GOTO 72
	expression/L1 = . SQSTRING, FOLLOW [88] -> SHIFT SQSTRING GOTO 73
	expression/L1 = . CARDINAL, FOLLOW [88] -> SHIFT CARDINAL GOTO 74
	expression/L1 = . INTEGER, FOLLOW [88] -> SHIFT INTEGER GOTO 75
	expression/L1 = . FLOAT, FOLLOW [88] -> SHIFT FLOAT GOTO 76
	expression/L1 = . "(" expression ")", FOLLOW [88] -> SHIFT '(' GOTO 77
	expression/L8 = . "&" expression, FOLLOW [88] -> SHIFT '&' GOTO 79
	expression/L8 = . "+" expression, FOLLOW [88] -> SHIFT '+' GOTO 84
	expression/L8 = . "-" expression, FOLLOW [88] -> SHIFT '-' GOTO 85
	expression/L8 = . "~" expression, FOLLOW [88] -> SHIFT '~' GOTO 86
	expression/L8 = . "!" expression, FOLLOW [88] -> SHIFT '!' GOTO 87
	expression/L11 = . "*" expression, FOLLOW [88] -> SHIFT '*' GOTO 88
[82]
	statement = "if" . "(" expression ")" "{" statementlist "}", FOLLOW [89] -> SHIFT '(' GOTO 150
	statement = "if" . "(" expression ")" "{" statementlist "}" "else" "{" statementlist "}", FOLLOW [89] -> SHIFT '(' GOTO 150
[83]
	statement = "while" . "(" expression ")" "{" statementlist "}", FOLLOW [89] -> SHIFT '(' GOTO 151
[84]
	expression/L2 = . expression "=" expression, FOLLOW [203] -> GOTO 152
	expression/L2 = . expression "+=" expression, FOLLOW [203] -> GOTO 152
	expression/L2 = . expression "-=" expression, FOLLOW [203] -> GOTO 152
	expression/L2 = . expression "*=" expression, FOLLOW [203] -> GOTO 152
	expression/L2 = . expression "/=" expression, FOLLOW [203] -> GOTO 152
	expression/L2 = . expression "%=" expression, FOLLOW [203] -> GOTO 152
	expression/L2 = . expression "&&=" expression, FOLLOW [203] -> GOTO 152
	expression/L2 = . expression "||=" expression, FOLLOW [203] -> GOTO 152
	expression/L2 = . expression "&=" expression, FOLLOW [203] -> GOTO 152
	expression/L2 = . expression "|=" expression, FOLLOW [203] -> GOTO 152
	expression/L2 = . expression "<<=" expression, FOLLOW [203] -> GOTO 152
	expression/L2 = . expression ">>=" expression, FOLLOW [203] -> GOTO 152
	expression/L3 = . expression "||" expression, FOLLOW [203] -> GOTO 152
	expression/L4 = . expression "&&" expression, FOLLOW [203] -> GOTO 152
	expression/L5 = . expression "|" expression, FOLLOW [203] -> GOTO 152
	expression/L6 = . expression "^" expression, FOLLOW [203] -> GOTO 152
	expression/L6 = . expression "&" expression, FOLLOW [203] -> GOTO 152
	expression/L7 = . expression "==" expression, FOLLOW [203] -> GOTO 152
	expression/L7 = . expression "!=" expression, FOLLOW [203] -> GOTO 152
	expression/L7 = . expression "<=" expression, FOLLOW [203] -> GOTO 152
	expression/L7 = . expression "<" expression, FOLLOW [203] -> GOTO 152
	expression/L7 = . expression ">=" expression, FOLLOW [203] -> GOTO 152
	expression/L7 = . expression ">" expression, FOLLOW [203] -> GOTO 152
	expression/L8 = . expression "+" expression, FOLLOW [203] -> GOTO 152
	expression/L8 = . expression "-" expression, FOLLOW [203] -> GOTO 152
	expression/L8 = "+" . expression, FOLLOW [203] -> GOTO 152
	expression/L9 = . expression "*" expression, FOLLOW [203] -> GOTO 152
	expression/L9 = . expression "/" expression, FOLLOW [203] -> GOTO 152
	expression/L9 = . expression "%" expression, FOLLOW [203] -> GOTO 152
	expression/L10 = . expression "<<" expression, FOLLOW [203] -> GOTO 152
	expression/L10 = . expression ">>" expression, FOLLOW [203] -> GOTO 152
	expression/L11 = . expression "." IDENT, FOLLOW [203] -> GOTO 152
	expression/L12 = . expression "(" expressionlist ")", FOLLOW [203] -> GOTO 152
	expression/L12 = . expression "(" ")", FOLLOW [203] -> GOTO 152
	expression/L12 = . expression "[" expressionlist "]", FOLLOW [203] -> GOTO 152
	iexpression = . expression indirection IDENT, FOLLOW [203] -> GOTO 152
	expression/L11 = . iexpression, FOLLOW [203] -> GOTO 69
	expression/L1 = . BOOLEAN, FOLLOW [203] -> SHIFT BOOLEAN GOTO 70
	expression/L1 = . IDENT, FOLLOW [203] -> SHIFT IDENT GOTO 71
	expression/L1 = . DQSTRING, FOLLOW [203] -> SHIFT DQSTRING GOTO 72
	expression/L1 = . SQSTRING, FOLLOW [203] -> SHIFT SQSTRING GOTO 73
	expression/L1 = . CARDINAL, FOLLOW [203] -> SHIFT CARDINAL GOTO 74
	expression/L1 = . INTEGER, FOLLOW [203] -> SHIFT INTEGER GOTO 75
	expression/L1 = . FLOAT, FOLLOW [203] -> SHIFT FLOAT GOTO 76
	expression/L1 = . "(" expression ")", FOLLOW [203] -> SHIFT '(' GOTO 77
	expression/L8 = . "&" expression, FOLLOW [203] -> SHIFT '&' GOTO 79
	expression/L8 = . "+" expression, FOLLOW [203] -> SHIFT '+' GOTO 84
	expression/L8 = . "-" expression, FOLLOW [203] -> SHIFT '-' GOTO 85
	expression/L8 = . "~" expression, FOLLOW [203] -> SHIFT '~' GOTO 86
	expression/L8 = . "!" expression, FOLLOW [203] -> SHIFT '!' GOTO 87
	expression/L11 = . "*" expression, FOLLOW [203] -> SHIFT '*' GOTO 88
[85]
	expression/L2 = . expression "=" expression, FOLLOW [203] -> GOTO 153
	expression/L2 = . expression "+=" expression, FOLLOW [203] -> GOTO 153
	expression/L2 = . expression "-=" expression, FOLLOW [203] -> GOTO 153
	expression/L2 = . expression "*=" expression, FOLLOW [203] -> GOTO 153
	expression/L2 = . expression "/=" expression, FOLLOW [203] -> GOTO 153
	expression/L2 = . expression "%=" expression, FOLLOW [203] -> GOTO 153
	expression/L2 = . expression "&&=" expression, FOLLOW [203] -> GOTO 153
	expression/L2 = . expression "||=" expression, FOLLOW [203] -> GOTO 153
	expression/L2 = . expression "&=" expression, FOLLOW [203] -> GOTO 153
	expression/L2 = . expression "|=" expression, FOLLOW [203] -> GOTO 153
	expression/L2 = . expression "<<=" expression, FOLLOW [203] -> GOTO 153
	expression/L2 = . expression ">>=" expression, FOLLOW [203] -> GOTO 153
	expression/L3 = . expression "||" expression, FOLLOW [203] -> GOTO 153
	expression/L4 = . expression "&&" expression, FOLLOW [203] -> GOTO 153
	expression/L5 = . expression "|" expression, FOLLOW [203] -> GOTO 153
	expression/L6 = . expression "^" expression, FOLLOW [203] -> GOTO 153
	expression/L6 = . expression "&" expression, FOLLOW [203] -> GOTO 153
	expression/L7 = . expression "==" expression, FOLLOW [203] -> GOTO 153
	expression/L7 = . expression "!=" expression, FOLLOW [203] -> GOTO 153
	expression/L7 = . expression "<=" expression, FOLLOW [203] -> GOTO 153
	expression/L7 = . expression "<" expression, FOLLOW [203] -> GOTO 153
	expression/L7 = . expression ">=" expression, FOLLOW [203] -> GOTO 153
	expression/L7 = . expression ">" expression, FOLLOW [203] -> GOTO 153
	expression/L8 = . expression "+" expression, FOLLOW [203] -> GOTO 153
	expression/L8 = . expression "-" expression, FOLLOW [203] -> GOTO 153
	expression/L8 = "-" . expression, FOLLOW [203] -> GOTO 153
	expression/L9 = . expression "*" expression, FOLLOW [203] -> GOTO 153
	expression/L9 = . expression "/" expression, FOLLOW [203] -> GOTO 153
	expression/L9 = . expression "%" expression, FOLLOW [203] -> GOTO 153
	expression/L10 = . expression "<<" expression, FOLLOW [203] -> GOTO 153
	expression/L10 = . expression ">>" expression, FOLLOW [203] -> GOTO 153
	expression/L11 = . expression "." IDENT, FOLLOW [203] -> GOTO 153
	expression/L12 = . expression "(" expressionlist ")", FOLLOW [203] -> GOTO 153
	expression/L12 = . expression "(" ")", FOLLOW [203] -> GOTO 153
	expression/L12 = . expression "[" expressionlist "]", FOLLOW [203] -> GOTO 153
	iexpression = . expression indirection IDENT, FOLLOW [203] -> GOTO 153
	expression/L11 = . iexpression, FOLLOW [203] -> GOTO 69
	expression/L1 = . BOOLEAN, FOLLOW [203] -> SHIFT BOOLEAN GOTO 70
	expression/L1 = . IDENT, FOLLOW [203] -> SHIFT IDENT GOTO 71
	expression/L1 = . DQSTRING, FOLLOW [203] -> SHIFT DQSTRING GOTO 72
	expression/L1 = . SQSTRING, FOLLOW [203] -> SHIFT SQSTRING GOTO 73
	expression/L1 = . CARDINAL, FOLLOW [203] -> SHIFT CARDINAL GOTO 74
	expression/L1 = . INTEGER, FOLLOW [203] -> SHIFT INTEGER GOTO 75
	expression/L1 = . FLOAT, FOLLOW [203] -> SHIFT FLOAT GOTO 76
	expression/L1 = . "(" expression ")", FOLLOW [203] -> SHIFT '(' GOTO 77
	expression/L8 = . "&" expression, FOLLOW [203] -> SHIFT '&' GOTO 79
	expression/L8 = . "+" expression, FOLLOW [203] -> SHIFT '+' GOTO 84
	expression/L8 = . "-" expression, FOLLOW [203] -> SHIFT '-' GOTO 85
	expression/L8 = . "~" expression, FOLLOW [203] -> SHIFT '~' GOTO 86
	expression/L8 = . "!" expression, FOLLOW [203] -> SHIFT '!' GOTO 87
	expression/L11 = . "*" expression, FOLLOW [203] -> SHIFT '*' GOTO 88
[86]
	expression/L2 = . expression "=" expression, FOLLOW [203] -> GOTO 154
	expression/L2 = . expression "+=" expression, FOLLOW [203] -> GOTO 154
	expression/L2 = . expression "-=" expression, FOLLOW [203] -> GOTO 154
	expression/L2 = . expression "*=" expression, FOLLOW [203] -> GOTO 154
	expression/L2 = . expression "/=" expression, FOLLOW [203] -> GOTO 154
	expression/L2 = . expression "%=" expression, FOLLOW [203] -> GOTO 154
	expression/L2 = . expression "&&=" expression, FOLLOW [203] -> GOTO 154
	expression/L2 = . expression "||=" expression, FOLLOW [203] -> GOTO 154
	expression/L2 = . expression "&=" expression, FOLLOW [203] -> GOTO 154
	expression/L2 = . expression "|=" expression, FOLLOW [203] -> GOTO 154
	expression/L2 = . expression "<<=" expression, FOLLOW [203] -> GOTO 154
	expression/L2 = . expression ">>=" expression, FOLLOW [203] -> GOTO 154
	expression/L3 = . expression "||" expression, FOLLOW [203] -> GOTO 154
	expression/L4 = . expression "&&" expression, FOLLOW [203] -> GOTO 154
	expression/L5 = . expression "|" expression, FOLLOW [203] -> GOTO 154
	expression/L6 = . expression "^" expression, FOLLOW [203] -> GOTO 154
	expression/L6 = . expression "&" expression, FOLLOW [203] -> GOTO 154
	expression/L7 = . expression "==" expression, FOLLOW [203] -> GOTO 154
	expression/L7 = . expression "!=" expression, FOLLOW [203] -> GOTO 154
	expression/L7 = . expression "<=" expression, FOLLOW [203] -> GOTO 154
	expression/L7 = . expression "<" expression, FOLLOW [203] -> GOTO 154
	expression/L7 = . expression ">=" expression, FOLLOW [203] -> GOTO 154
	expression/L7 = . expression ">" expression, FOLLOW [203] -> GOTO 154
	expression/L8 = . expression "+" expression, FOLLOW [203] -> GOTO 154
	expression/L8 = . expression "-" expression, FOLLOW [203] -> GOTO 154
	expression/L8 = "~" . expression, FOLLOW [203] -> GOTO 154
	expression/L9 = . expression "*" expression, FOLLOW [203] -> GOTO 154
	expression/L9 = . expression "/" expression, FOLLOW [203] -> GOTO 154
	expression/L9 = . expression "%" expression, FOLLOW [203] -> GOTO 154
	expression/L10 = . expression "<<" expression, FOLLOW [203] -> GOTO 154
	expression/L10 = . expression ">>" expression, FOLLOW [203] -> GOTO 154
	expression/L11 = . expression "." IDENT, FOLLOW [203] -> GOTO 154
	expression/L12 = . expression "(" expressionlist ")", FOLLOW [203] -> GOTO 154
	expression/L12 = . expression "(" ")", FOLLOW [203] -> GOTO 154
	expression/L12 = . expression "[" expressionlist "]", FOLLOW [203] -> GOTO 154
	iexpression = . expression indirection IDENT, FOLLOW [203] -> GOTO 154
	expression/L11 = . iexpression, FOLLOW [203] -> GOTO 69
	expression/L1 = . BOOLEAN, FOLLOW [203] -> SHIFT BOOLEAN GOTO 70
	expression/L1 = . IDENT, FOLLOW [203] -> SHIFT IDENT GOTO 71
	expression/L1 = . DQSTRING, FOLLOW [203] -> SHIFT DQSTRING GOTO 72
	expression/L1 = . SQSTRING, FOLLOW [203] -> SHIFT SQSTRING GOTO 73
	expression/L1 = . CARDINAL, FOLLOW [203] -> SHIFT CARDINAL GOTO 74
	expression/L1 = . INTEGER, FOLLOW [203] -> SHIFT INTEGER GOTO 75
	expression/L1 = . FLOAT, FOLLOW [203] -> SHIFT FLOAT GOTO 76
	expression/L1 = . "(" expression ")", FOLLOW [203] -> SHIFT '(' GOTO 77
	expression/L8 = . "&" expression, FOLLOW [203] -> SHIFT '&' GOTO 79
	expression/L8 = . "+" expression, FOLLOW [203] -> SHIFT '+' GOTO 84
	expression/L8 = . "-" expression, FOLLOW [203] -> SHIFT '-' GOTO 85
	expression/L8 = . "~" expression, FOLLOW [203] -> SHIFT '~' GOTO 86
	expression/L8 = . "!" expression, FOLLOW [203] -> SHIFT '!' GOTO 87
	expression/L11 = . "*" expression, FOLLOW [203] -> SHIFT '*' GOTO 88
[87]
	expression/L2 = . expression "=" expression, FOLLOW [203] -> GOTO 155
	expression/L2 = . expression "+=" expression, FOLLOW [203] -> GOTO 155
	expression/L2 = . expression "-=" expression, FOLLOW [203] -> GOTO 155
	expression/L2 = . expression "*=" expression, FOLLOW [203] -> GOTO 155
	expression/L2 = . expression "/=" expression, FOLLOW [203] -> GOTO 155
	expression/L2 = . expression "%=" expression, FOLLOW [203] -> GOTO 155
	expression/L2 = . expression "&&=" expression, FOLLOW [203] -> GOTO 155
	expression/L2 = . expression "||=" expression, FOLLOW [203] -> GOTO 155
	expression/L2 = . expression "&=" expression, FOLLOW [203] -> GOTO 155
	expression/L2 = . expression "|=" expression, FOLLOW [203] -> GOTO 155
	expression/L2 = . expression "<<=" expression, FOLLOW [203] -> GOTO 155
	expression/L2 = . expression ">>=" expression, FOLLOW [203] -> GOTO 155
	expression/L3 = . expression "||" expression, FOLLOW [203] -> GOTO 155
	expression/L4 = . expression "&&" expression, FOLLOW [203] -> GOTO 155
	expression/L5 = . expression "|" expression, FOLLOW [203] -> GOTO 155
	expression/L6 = . expression "^" expression, FOLLOW [203] -> GOTO 155
	expression/L6 = . expression "&" expression, FOLLOW [203] -> GOTO 155
	expression/L7 = . expression "==" expression, FOLLOW [203] -> GOTO 155
	expression/L7 = . expression "!=" expression, FOLLOW [203] -> GOTO 155
	expression/L7 = . expression "<=" expression, FOLLOW [203] -> GOTO 155
	expression/L7 = . expression "<" expression, FOLLOW [203] -> GOTO 155
	expression/L7 = . expression ">=" expression, FOLLOW [203] -> GOTO 155
	expression/L7 = . expression ">" expression, FOLLOW [203] -> GOTO 155
	expression/L8 = . expression "+" expression, FOLLOW [203] -> GOTO 155
	expression/L8 = . expression "-" expression, FOLLOW [203] -> GOTO 155
	expression/L8 = "!" . expression, FOLLOW [203] -> GOTO 155
	expression/L9 = . expression "*" expression, FOLLOW [203] -> GOTO 155
	expression/L9 = . expression "/" expression, FOLLOW [203] -> GOTO 155
	expression/L9 = . expression "%" expression, FOLLOW [203] -> GOTO 155
	expression/L10 = . expression "<<" expression, FOLLOW [203] -> GOTO 155
	expression/L10 = . expression ">>" expression, FOLLOW [203] -> GOTO 155
	expression/L11 = . expression "." IDENT, FOLLOW [203] -> GOTO 155
	expression/L12 = . expression "(" expressionlist ")", FOLLOW [203] -> GOTO 155
	expression/L12 = . expression "(" ")", FOLLOW [203] -> GOTO 155
	expression/L12 = . expression "[" expressionlist "]", FOLLOW [203] -> GOTO 155
	iexpression = . expression indirection IDENT, FOLLOW [203] -> GOTO 155
	expression/L11 = . iexpression, FOLLOW [203] -> GOTO 69
	expression/L1 = . BOOLEAN, FOLLOW [203] -> SHIFT BOOLEAN GOTO 70
	expression/L1 = . IDENT, FOLLOW [203] -> SHIFT IDENT GOTO 71
	expression/L1 = . DQSTRING, FOLLOW [203] -> SHIFT DQSTRING GOTO 72
	expression/L1 = . SQSTRING, FOLLOW [203] -> SHIFT SQSTRING GOTO 73
	expression/L1 = . CARDINAL, FOLLOW [203] -> SHIFT CARDINAL GOTO 74
	expression/L1 = . INTEGER, FOLLOW [203] -> SHIFT INTEGER GOTO 75
	expression/L1 = . FLOAT, FOLLOW [203] -> SHIFT FLOAT GOTO 76
	expression/L1 = . "(" expression ")", FOLLOW [203] -> SHIFT '(' GOTO 77
	expression/L8 = . "&" expression, FOLLOW [203] -> SHIFT '&' GOTO 79
	expression/L8 = . "+" expression, FOLLOW [203] -> SHIFT '+' GOTO 84
	expression/L8 = . "-" expression, FOLLOW [203] -> SHIFT '-' GOTO 85
	expression/L8 = . "~" expression, FOLLOW [203] -> SHIFT '~' GOTO 86
	expression/L8 = . "!" expression, FOLLOW [203] -> SHIFT '!' GOTO 87
	expression/L11 = . "*" expression, FOLLOW [203] -> SHIFT '*' GOTO 88
[88]
	expression/L2 = . expression "=" expression, FOLLOW [203] -> GOTO 156
	expression/L2 = . expression "+=" expression, FOLLOW [203] -> GOTO 156
	expression/L2 = . expression "-=" expression, FOLLOW [203] -> GOTO 156
	expression/L2 = . expression "*=" expression, FOLLOW [203] -> GOTO 156
	expression/L2 = . expression "/=" expression, FOLLOW [203] -> GOTO 156
	expression/L2 = . expression "%=" expression, FOLLOW [203] -> GOTO 156
	expression/L2 = . expression "&&=" expression, FOLLOW [203] -> GOTO 156
	expression/L2 = . expression "||=" expression, FOLLOW [203] -> GOTO 156
	expression/L2 = . expression "&=" expression, FOLLOW [203] -> GOTO 156
	expression/L2 = . expression "|=" expression, FOLLOW [203] -> GOTO 156
	expression/L2 = . expression "<<=" expression, FOLLOW [203] -> GOTO 156
	expression/L2 = . expression ">>=" expression, FOLLOW [203] -> GOTO 156
	expression/L3 = . expression "||" expression, FOLLOW [203] -> GOTO 156
	expression/L4 = . expression "&&" expression, FOLLOW [203] -> GOTO 156
	expression/L5 = . expression "|" expression, FOLLOW [203] -> GOTO 156
	expression/L6 = . expression "^" expression, FOLLOW [203] -> GOTO 156
	expression/L6 = . expression "&" expression, FOLLOW [203] -> GOTO 156
	expression/L7 = . expression "==" expression, FOLLOW [203] -> GOTO 156
	expression/L7 = . expression "!=" expression, FOLLOW [203] -> GOTO 156
	expression/L7 = . expression "<=" expression, FOLLOW [203] -> GOTO 156
	expression/L7 = . expression "<" expression, FOLLOW [203] -> GOTO 156
	expression/L7 = . expression ">=" expression, FOLLOW [203] -> GOTO 156
	expression/L7 = . expression ">" expression, FOLLOW [203] -> GOTO 156
	expression/L8 = . expression "+" expression, FOLLOW [203] -> GOTO 156
	expression/L8 = . expression "-" expression, FOLLOW [203] -> GOTO 156
	expression/L9 = . expression "*" expression, FOLLOW [203] -> GOTO 156
	expression/L9 = . expression "/" expression, FOLLOW [203] -> GOTO 156
	expression/L9 = . expression "%" expression, FOLLOW [203] -> GOTO 156
	expression/L10 = . expression "<<" expression, FOLLOW [203] -> GOTO 156
	expression/L10 = . expression ">>" expression, FOLLOW [203] -> GOTO 156
	expression/L11 = . expression "." IDENT, FOLLOW [203] -> GOTO 156
	expression/L11 = "*" . expression, FOLLOW [203] -> GOTO 156
	expression/L12 = . expression "(" expressionlist ")", FOLLOW [203] -> GOTO 156
	expression/L12 = . expression "(" ")", FOLLOW [203] -> GOTO 156
	expression/L12 = . expression "[" expressionlist "]", FOLLOW [203] -> GOTO 156
	iexpression = . expression indirection IDENT, FOLLOW [203] -> GOTO 156
	expression/L11 = . iexpression, FOLLOW [203] -> GOTO 69
	expression/L1 = . BOOLEAN, FOLLOW [203] -> SHIFT BOOLEAN GOTO 70
	expression/L1 = . IDENT, FOLLOW [203] -> SHIFT IDENT GOTO 71
	expression/L1 = . DQSTRING, FOLLOW [203] -> SHIFT DQSTRING GOTO 72
	expression/L1 = . SQSTRING, FOLLOW [203] -> SHIFT SQSTRING GOTO 73
	expression/L1 = . CARDINAL, FOLLOW [203] -> SHIFT CARDINAL GOTO 74
	expression/L1 = . INTEGER, FOLLOW [203] -> SHIFT INTEGER GOTO 75
	expression/L1 = . FLOAT, FOLLOW [203] -> SHIFT FLOAT GOTO 76
	expression/L1 = . "(" expression ")", FOLLOW [203] -> SHIFT '(' GOTO 77
	expression/L8 = . "&" expression, FOLLOW [203] -> SHIFT '&' GOTO 79
	expression/L8 = . "+" expression, FOLLOW [203] -> SHIFT '+' GOTO 84
	expression/L8 = . "-" expression, FOLLOW [203] -> SHIFT '-' GOTO 85
	expression/L8 = . "~" expression, FOLLOW [203] -> SHIFT '~' GOTO 86
	expression/L8 = . "!" expression, FOLLOW [203] -> SHIFT '!' GOTO 87
	expression/L11 = . "*" expression, FOLLOW [203] -> SHIFT '*' GOTO 88
[89]
	typespec/L1 = typename "^" "^" "&" . (19), FOLLOW [210] -> REDUCE typespec #4 CALL typespec "^^&"
[90]
	iexpression = expression . indirection IDENT, FOLLOW [88] -> GOTO 109
	expression/L12 = expression . "(" expressionlist ")", FOLLOW [88] -> SHIFT '(' GOTO 110
	expression/L12 = expression . "(" ")", FOLLOW [88] -> SHIFT '(' GOTO 110
	expression/L6 = expression . "&" expression, FOLLOW [88] -> SHIFT '&' GOTO 112
	expression/L6 = expression . "^" expression, FOLLOW [88] -> SHIFT '^' GOTO 113
	expression/L2 = expression . "=" expression, FOLLOW [88] -> SHIFT '=' GOTO 114
	expression/L12 = expression . "[" expressionlist "]", FOLLOW [88] -> SHIFT '[' GOTO 115
	expression/L2 = expression . "+=" expression, FOLLOW [88] -> SHIFT "+=" GOTO 116
	expression/L2 = expression . "-=" expression, FOLLOW [88] -> SHIFT "-=" GOTO 117
	expression/L2 = expression . "*=" expression, FOLLOW [88] -> SHIFT "*=" GOTO 118
	expression/L2 = expression . "/=" expression, FOLLOW [88] -> SHIFT "/=" GOTO 119
	expression/L2 = expression . "%=" expression, FOLLOW [88] -> SHIFT "%=" GOTO 120
	expression/L2 = expression . "&&=" expression, FOLLOW [88] -> SHIFT "&&=" GOTO 121
	expression/L2 = expression . "||=" expression, FOLLOW [88] -> SHIFT "||=" GOTO 122
	expression/L2 = expression . "&=" expression, FOLLOW [88] -> SHIFT "&=" GOTO 123
	expression/L2 = expression . "|=" expression, FOLLOW [88] -> SHIFT "|=" GOTO 124
	expression/L2 = expression . "<<=" expression, FOLLOW [88] -> SHIFT "<<=" GOTO 125
	expression/L2 = expression . ">>=" expression, FOLLOW [88] -> SHIFT ">>=" GOTO 126
	expression/L3 = expression . "||" expression, FOLLOW [88] -> SHIFT "||" GOTO 127
	expression/L4 = expression . "&&" expression, FOLLOW [88] -> SHIFT "&&" GOTO 128
	expression/L5 = expression . "|" expression, FOLLOW [88] -> SHIFT '|' GOTO 129
	expression/L7 = expression . "==" expression, FOLLOW [88] -> SHIFT "==" GOTO 130
	expression/L7 = expression . "!=" expression, FOLLOW [88] -> SHIFT "!=" GOTO 131
	expression/L7 = expression . "<=" expression, FOLLOW [88] -> SHIFT "<=" GOTO 132
	expression/L7 = expression . "<" expression, FOLLOW [88] -> SHIFT '<' GOTO 133
	expression/L7 = expression . ">=" expression, FOLLOW [88] -> SHIFT ">=" GOTO 134
	expression/L7 = expression . ">" expression, FOLLOW [88] -> SHIFT '>' GOTO 135
	expression/L8 = expression . "+" expression, FOLLOW [88] -> SHIFT '+' GOTO 136
	expression/L8 = expression . "-" expression, FOLLOW [88] -> SHIFT '-' GOTO 137
	expression/L9 = expression . "*" expression, FOLLOW [88] -> SHIFT '*' GOTO 138
	expression/L9 = expression . "/" expression, FOLLOW [88] -> SHIFT '/' GOTO 139
	expression/L9 = expression . "%" expression, FOLLOW [88] -> SHIFT '%' GOTO 140
	expression/L10 = expression . "<<" expression, FOLLOW [88] -> SHIFT "<<" GOTO 141
	expression/L10 = expression . ">>" expression, FOLLOW [88] -> SHIFT ">>" GOTO 142
	expression/L11 = expression . "." IDENT, FOLLOW [88] -> SHIFT '.' GOTO 143
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 144
	variabledefinition = typespec IDENT "=" expression . (step:39), FOLLOW [12] -> REDUCE variabledefinition #4 CALL vardef_assign
[91]
	iexpression = expression . indirection IDENT, FOLLOW [156] -> GOTO 109
	expression/L12 = expression . "(" expressionlist ")", FOLLOW [156] -> SHIFT '(' GOTO 110
	expression/L12 = expression . "(" ")", FOLLOW [156] -> SHIFT '(' GOTO 110
	expression/L6 = expression . "&" expression, FOLLOW [156] -> SHIFT '&' GOTO 112
	expression/L6 = expression . "^" expression, FOLLOW [156] -> SHIFT '^' GOTO 113
	expression/L2 = expression . "=" expression, FOLLOW [156] -> SHIFT '=' GOTO 114
	expression/L12 = expression . "[" expressionlist "]", FOLLOW [156] -> SHIFT '[' GOTO 115
	variabledefinition = typespec IDENT "[" expression . "]" "=" expression, FOLLOW [12] -> SHIFT ']' GOTO 157
	variabledefinition = typespec IDENT "[" expression . "]", FOLLOW [12] -> SHIFT ']' GOTO 157
	expression/L2 = expression . "+=" expression, FOLLOW [156] -> SHIFT "+=" GOTO 116
	expression/L2 = expression . "-=" expression, FOLLOW [156] -> SHIFT "-=" GOTO 117
	expression/L2 = expression . "*=" expression, FOLLOW [156] -> SHIFT "*=" GOTO 118
	expression/L2 = expression . "/=" expression, FOLLOW [156] -> SHIFT "/=" GOTO 119
	expression/L2 = expression . "%=" expression, FOLLOW [156] -> SHIFT "%=" GOTO 120
	expression/L2 = expression . "&&=" expression, FOLLOW [156] -> SHIFT "&&=" GOTO 121
	expression/L2 = expression . "||=" expression, FOLLOW [156] -> SHIFT "||=" GOTO 122
	expression/L2 = expression . "&=" expression, FOLLOW [156] -> SHIFT "&=" GOTO 123
	expression/L2 = expression . "|=" expression, FOLLOW [156] -> SHIFT "|=" GOTO 124
	expression/L2 = expression . "<<=" expression, FOLLOW [156] -> SHIFT "<<=" GOTO 125
	expression/L2 = expression . ">>=" expression, FOLLOW [156] -> SHIFT ">>=" GOTO 126
	expression/L3 = expression . "||" expression, FOLLOW [156] -> SHIFT "||" GOTO 127
	expression/L4 = expression . "&&" expression, FOLLOW [156] -> SHIFT "&&" GOTO 128
	expression/L5 = expression . "|" expression, FOLLOW [156] -> SHIFT '|' GOTO 129
	expression/L7 = expression . "==" expression, FOLLOW [156] -> SHIFT "==" GOTO 130
	expression/L7 = expression . "!=" expression, FOLLOW [156] -> SHIFT "!=" GOTO 131
	expression/L7 = expression . "<=" expression, FOLLOW [156] -> SHIFT "<=" GOTO 132
	expression/L7 = expression . "<" expression, FOLLOW [156] -> SHIFT '<' GOTO 133
	expression/L7 = expression . ">=" expression, FOLLOW [156] -> SHIFT ">=" GOTO 134
	expression/L7 = expression . ">" expression, FOLLOW [156] -> SHIFT '>' GOTO 135
	expression/L8 = expression . "+" expression, FOLLOW [156] -> SHIFT '+' GOTO 136
	expression/L8 = expression . "-" expression, FOLLOW [156] -> SHIFT '-' GOTO 137
	expression/L9 = expression . "*" expression, FOLLOW [156] -> SHIFT '*' GOTO 138
	expression/L9 = expression . "/" expression, FOLLOW [156] -> SHIFT '/' GOTO 139
	expression/L9 = expression . "%" expression, FOLLOW [156] -> SHIFT '%' GOTO 140
	expression/L10 = expression . "<<" expression, FOLLOW [156] -> SHIFT "<<" GOTO 141
	expression/L10 = expression . ">>" expression, FOLLOW [156] -> SHIFT ">>" GOTO 142
	expression/L11 = expression . "." IDENT, FOLLOW [156] -> SHIFT '.' GOTO 143
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 144
[92]
	functiondefinition = linkage "function" typespec IDENT . callablebody, FOLLOW [213] -> GOTO 158
	callablebody = . "(" parameterlist ")" "{" statementlist "}", FOLLOW [213] -> SHIFT '(' GOTO 94
[93]
	functiondefinition = linkage "procedure" IDENT callablebody . (28), FOLLOW [213] -> REDUCE functiondefinition #4 CALL procdef
[94]
	typespec/L1 = . typename, FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [8] -> GOTO 8
	paramdecl = . typespec IDENT, FOLLOW [162] -> GOTO 159
	callablebody = "(" . parameterlist ")" "{" statementlist "}", FOLLOW [213] -> GOTO 160
	parameterlist = . parameters, FOLLOW [9] -> GOTO 161
	parameters = . paramdecl "," parameters, FOLLOW [9] -> GOTO 162
	parameters = . paramdecl, FOLLOW [9] -> GOTO 162
	typename/L1 = . IDENT, FOLLOW [54] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [54] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [8] -> SHIFT "const" GOTO 18
	parameters = ., FOLLOW [9] -> REDUCE parameters #0
[95]
	typespec/L1 = "const" typename "^" "&" . (16), FOLLOW [210] -> REDUCE typespec #4 CALL typespec "const^&"
[96]
	typespec/L1 = "const" typename "^" "^" . "&", FOLLOW [210] -> SHIFT '&' GOTO 163
	typespec/L1 = "const" typename "^" "^" . (18), FOLLOW [210] -> REDUCE typespec #4 CALL typespec "const^^"
[97]
	structdefinition = "struct" IDENT "{" datadefinitionlist . "}", FOLLOW [12] -> SHIFT '}' GOTO 164
[98]
	datadefinitionlist = datadefinition . datadefinitionlist, FOLLOW [11] -> GOTO 165
	datadefinitionlist = . datadefinition datadefinitionlist, FOLLOW [11] -> GOTO 98
	typespec/L1 = . typename, FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [8] -> GOTO 8
	variabledefinition = . typespec IDENT, FOLLOW [12] -> GOTO 9
	variabledefinition = . typespec IDENT "=" expression, FOLLOW [12] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression, FOLLOW [12] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]", FOLLOW [12] -> GOTO 9
	datadefinition = . typedefinition ";", FOLLOW [157] -> GOTO 10
	datadefinition = . structdefinition ";", FOLLOW [157] -> GOTO 11
	datadefinition = . variabledefinition ";", FOLLOW [157] -> GOTO 16
	typename/L1 = . IDENT, FOLLOW [54] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [54] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [8] -> SHIFT "const" GOTO 18
	typedefinition = . "typedef" typename IDENT, FOLLOW [12] -> SHIFT "typedef" GOTO 19
	structdefinition = . "struct" IDENT "{" datadefinitionlist "}", FOLLOW [12] -> SHIFT "struct" GOTO 20
	datadefinitionlist = ., FOLLOW [11] -> REDUCE datadefinitionlist #0
[99]
	interfacedefinition = "interface" IDENT "{" methoddefinitionlist . "}", FOLLOW [12] -> SHIFT '}' GOTO 166
[100]
	methoddefinitionlist = methoddefinition . methoddefinitionlist, FOLLOW [11] -> GOTO 167
	methoddefinitionlist = . methoddefinition methoddefinitionlist, FOLLOW [11] -> GOTO 100
	methoddefinition = . "function" typespec IDENT "(" parameterlist ")" ";", FOLLOW [158] -> SHIFT "function" GOTO 101
	methoddefinition = . "procedure" IDENT "(" parameterlist ")" ";", FOLLOW [158] -> SHIFT "procedure" GOTO 102
	methoddefinitionlist = ., FOLLOW [11] -> REDUCE methoddefinitionlist #0
[101]
	typespec/L1 = . typename, FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [8] -> GOTO 8
	methoddefinition = "function" . typespec IDENT "(" parameterlist ")" ";", FOLLOW [158] -> GOTO 168
	typename/L1 = . IDENT, FOLLOW [54] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [54] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [8] -> SHIFT "const" GOTO 18
[102]
	methoddefinition = "procedure" . IDENT "(" parameterlist ")" ";", FOLLOW [158] -> SHIFT IDENT GOTO 169
[103]
	classdefinition = "class" IDENT "{" definitionlist . "}", FOLLOW [12] -> SHIFT '}' GOTO 170
[104]
	externdefinition = "extern" DQSTRING "function" typespec IDENT . "(" externparameterlist ")" ";", FOLLOW [51] -> SHIFT '(' GOTO 171
[105]
	externdefinition = "extern" DQSTRING "procedure" IDENT "(" . externparameterlist ")" ";", FOLLOW [51] -> GOTO 172
	externparameterlist = . externparameters, FOLLOW [9] -> GOTO 173
	externparameterlist = . externparameters, FOLLOW [9] -> GOTO 173
	typespec/L1 = . typename, FOLLOW [162] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [162] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [162] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [162] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [162] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [162] -> GOTO 8
	externparameters = . typespec "," externparameters, FOLLOW [9] -> GOTO 174
	externparameters = . typespec, FOLLOW [9] -> GOTO 174
	typename/L1 = . IDENT, FOLLOW [163] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [163] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [162] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [162] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [162] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [162] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [162] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [162] -> SHIFT "const" GOTO 18
	externparameters = ., FOLLOW [9] -> REDUCE externparameters #0
[106]
	statement = typedefinition ";" . (8), FOLLOW [89] -> REDUCE statement #2 CALL definition
[107]
	mainproc = "main" "{" statementlist "}" . (scope:7), FOLLOW [0] -> REDUCE mainproc #4 CALL main_procdef
[108]
	statementlist = statement statementlist . (step:32), FOLLOW [11] -> REDUCE statementlist #2 CALL statement
[109]
	iexpression = expression indirection . IDENT, FOLLOW [203] -> SHIFT IDENT GOTO 175
[110]
	expression/L2 = . expression "=" expression, FOLLOW [203] -> GOTO 176
	expression/L2 = . expression "+=" expression, FOLLOW [203] -> GOTO 176
	expression/L2 = . expression "-=" expression, FOLLOW [203] -> GOTO 176
	expression/L2 = . expression "*=" expression, FOLLOW [203] -> GOTO 176
	expression/L2 = . expression "/=" expression, FOLLOW [203] -> GOTO 176
	expression/L2 = . expression "%=" expression, FOLLOW [203] -> GOTO 176
	expression/L2 = . expression "&&=" expression, FOLLOW [203] -> GOTO 176
	expression/L2 = . expression "||=" expression, FOLLOW [203] -> GOTO 176
	expression/L2 = . expression "&=" expression, FOLLOW [203] -> GOTO 176
	expression/L2 = . expression "|=" expression, FOLLOW [203] -> GOTO 176
	expression/L2 = . expression "<<=" expression, FOLLOW [203] -> GOTO 176
	expression/L2 = . expression ">>=" expression, FOLLOW [203] -> GOTO 176
	expression/L3 = . expression "||" expression, FOLLOW [203] -> GOTO 176
	expression/L4 = . expression "&&" expression, FOLLOW [203] -> GOTO 176
	expression/L5 = . expression "|" expression, FOLLOW [203] -> GOTO 176
	expression/L6 = . expression "^" expression, FOLLOW [203] -> GOTO 176
	expression/L6 = . expression "&" expression, FOLLOW [203] -> GOTO 176
	expression/L7 = . expression "==" expression, FOLLOW [203] -> GOTO 176
	expression/L7 = . expression "!=" expression, FOLLOW [203] -> GOTO 176
	expression/L7 = . expression "<=" expression, FOLLOW [203] -> GOTO 176
	expression/L7 = . expression "<" expression, FOLLOW [203] -> GOTO 176
	expression/L7 = . expression ">=" expression, FOLLOW [203] -> GOTO 176
	expression/L7 = . expression ">" expression, FOLLOW [203] -> GOTO 176
	expression/L8 = . expression "+" expression, FOLLOW [203] -> GOTO 176
	expression/L8 = . expression "-" expression, FOLLOW [203] -> GOTO 176
	expression/L9 = . expression "*" expression, FOLLOW [203] -> GOTO 176
	expression/L9 = . expression "/" expression, FOLLOW [203] -> GOTO 176
	expression/L9 = . expression "%" expression, FOLLOW [203] -> GOTO 176
	expression/L10 = . expression "<<" expression, FOLLOW [203] -> GOTO 176
	expression/L10 = . expression ">>" expression, FOLLOW [203] -> GOTO 176
	expression/L11 = . expression "." IDENT, FOLLOW [203] -> GOTO 176
	expression/L12 = . expression "(" expressionlist ")", FOLLOW [203] -> GOTO 176
	expression/L12 = . expression "(" ")", FOLLOW [203] -> GOTO 176
	expression/L12 = . expression "[" expressionlist "]", FOLLOW [203] -> GOTO 176
	iexpression = . expression indirection IDENT, FOLLOW [203] -> GOTO 176
	expressionlist = . expression "," expressionlist, FOLLOW [9] -> GOTO 176
	expressionlist = . expression, FOLLOW [9] -> GOTO 176
	expression/L11 = . iexpression, FOLLOW [203] -> GOTO 69
	expression/L12 = expression "(" . expressionlist ")", FOLLOW [203] -> GOTO 177
	expression/L1 = . BOOLEAN, FOLLOW [203] -> SHIFT BOOLEAN GOTO 70
	expression/L1 = . IDENT, FOLLOW [203] -> SHIFT IDENT GOTO 71
	expression/L1 = . DQSTRING, FOLLOW [203] -> SHIFT DQSTRING GOTO 72
	expression/L1 = . SQSTRING, FOLLOW [203] -> SHIFT SQSTRING GOTO 73
	expression/L1 = . CARDINAL, FOLLOW [203] -> SHIFT CARDINAL GOTO 74
	expression/L1 = . INTEGER, FOLLOW [203] -> SHIFT INTEGER GOTO 75
	expression/L1 = . FLOAT, FOLLOW [203] -> SHIFT FLOAT GOTO 76
	expression/L1 = . "(" expression ")", FOLLOW [203] -> SHIFT '(' GOTO 77
	expression/L12 = expression "(" . ")", FOLLOW [203] -> SHIFT ')' GOTO 178
	expression/L8 = . "&" expression, FOLLOW [203] -> SHIFT '&' GOTO 79
	expression/L8 = . "+" expression, FOLLOW [203] -> SHIFT '+' GOTO 84
	expression/L8 = . "-" expression, FOLLOW [203] -> SHIFT '-' GOTO 85
	expression/L8 = . "~" expression, FOLLOW [203] -> SHIFT '~' GOTO 86
	expression/L8 = . "!" expression, FOLLOW [203] -> SHIFT '!' GOTO 87
	expression/L11 = . "*" expression, FOLLOW [203] -> SHIFT '*' GOTO 88
	expressionlist = ., FOLLOW [9] -> REDUCE expressionlist #0
[111]
	statement = expression ";" . (33), FOLLOW [89] -> REDUCE statement #2 CALL free_expression
[112]
	expression/L2 = . expression "=" expression, FOLLOW [203] -> GOTO 179
	expression/L2 = . expression "+=" expression, FOLLOW [203] -> GOTO 179
	expression/L2 = . expression "-=" expression, FOLLOW [203] -> GOTO 179
	expression/L2 = . expression "*=" expression, FOLLOW [203] -> GOTO 179
	expression/L2 = . expression "/=" expression, FOLLOW [203] -> GOTO 179
	expression/L2 = . expression "%=" expression, FOLLOW [203] -> GOTO 179
	expression/L2 = . expression "&&=" expression, FOLLOW [203] -> GOTO 179
	expression/L2 = . expression "||=" expression, FOLLOW [203] -> GOTO 179
	expression/L2 = . expression "&=" expression, FOLLOW [203] -> GOTO 179
	expression/L2 = . expression "|=" expression, FOLLOW [203] -> GOTO 179
	expression/L2 = . expression "<<=" expression, FOLLOW [203] -> GOTO 179
	expression/L2 = . expression ">>=" expression, FOLLOW [203] -> GOTO 179
	expression/L3 = . expression "||" expression, FOLLOW [203] -> GOTO 179
	expression/L4 = . expression "&&" expression, FOLLOW [203] -> GOTO 179
	expression/L5 = . expression "|" expression, FOLLOW [203] -> GOTO 179
	expression/L6 = . expression "^" expression, FOLLOW [203] -> GOTO 179
	expression/L6 = . expression "&" expression, FOLLOW [203] -> GOTO 179
	expression/L6 = expression "&" . expression, FOLLOW [203] -> GOTO 179
	expression/L7 = . expression "==" expression, FOLLOW [203] -> GOTO 179
	expression/L7 = . expression "!=" expression, FOLLOW [203] -> GOTO 179
	expression/L7 = . expression "<=" expression, FOLLOW [203] -> GOTO 179
	expression/L7 = . expression "<" expression, FOLLOW [203] -> GOTO 179
	expression/L7 = . expression ">=" expression, FOLLOW [203] -> GOTO 179
	expression/L7 = . expression ">" expression, FOLLOW [203] -> GOTO 179
	expression/L8 = . expression "+" expression, FOLLOW [203] -> GOTO 179
	expression/L8 = . expression "-" expression, FOLLOW [203] -> GOTO 179
	expression/L9 = . expression "*" expression, FOLLOW [203] -> GOTO 179
	expression/L9 = . expression "/" expression, FOLLOW [203] -> GOTO 179
	expression/L9 = . expression "%" expression, FOLLOW [203] -> GOTO 179
	expression/L10 = . expression "<<" expression, FOLLOW [203] -> GOTO 179
	expression/L10 = . expression ">>" expression, FOLLOW [203] -> GOTO 179
	expression/L11 = . expression "." IDENT, FOLLOW [203] -> GOTO 179
	expression/L12 = . expression "(" expressionlist ")", FOLLOW [203] -> GOTO 179
	expression/L12 = . expression "(" ")", FOLLOW [203] -> GOTO 179
	expression/L12 = . expression "[" expressionlist "]", FOLLOW [203] -> GOTO 179
	iexpression = . expression indirection IDENT, FOLLOW [203] -> GOTO 179
	expression/L11 = . iexpression, FOLLOW [203] -> GOTO 69
	expression/L1 = . BOOLEAN, FOLLOW [203] -> SHIFT BOOLEAN GOTO 70
	expression/L1 = . IDENT, FOLLOW [203] -> SHIFT IDENT GOTO 71
	expression/L1 = . DQSTRING, FOLLOW [203] -> SHIFT DQSTRING GOTO 72
	expression/L1 = . SQSTRING, FOLLOW [203] -> SHIFT SQSTRING GOTO 73
	expression/L1 = . CARDINAL, FOLLOW [203] -> SHIFT CARDINAL GOTO 74
	expression/L1 = . INTEGER, FOLLOW [203] -> SHIFT INTEGER GOTO 75
	expression/L1 = . FLOAT, FOLLOW [203] -> SHIFT FLOAT GOTO 76
	expression/L1 = . "(" expression ")", FOLLOW [203] -> SHIFT '(' GOTO 77
	expression/L8 = . "&" expression, FOLLOW [203] -> SHIFT '&' GOTO 79
	expression/L8 = . "+" expression, FOLLOW [203] -> SHIFT '+' GOTO 84
	expression/L8 = . "-" expression, FOLLOW [203] -> SHIFT '-' GOTO 85
	expression/L8 = . "~" expression, FOLLOW [203] -> SHIFT '~' GOTO 86
	expression/L8 = . "!" expression, FOLLOW [203] -> SHIFT '!' GOTO 87
	expression/L11 = . "*" expression, FOLLOW [203] -> SHIFT '*' GOTO 88
[113]
	expression/L2 = . expression "=" expression, FOLLOW [203] -> GOTO 180
	expression/L2 = . expression "+=" expression, FOLLOW [203] -> GOTO 180
	expression/L2 = . expression "-=" expression, FOLLOW [203] -> GOTO 180
	expression/L2 = . expression "*=" expression, FOLLOW [203] -> GOTO 180
	expression/L2 = . expression "/=" expression, FOLLOW [203] -> GOTO 180
	expression/L2 = . expression "%=" expression, FOLLOW [203] -> GOTO 180
	expression/L2 = . expression "&&=" expression, FOLLOW [203] -> GOTO 180
	expression/L2 = . expression "||=" expression, FOLLOW [203] -> GOTO 180
	expression/L2 = . expression "&=" expression, FOLLOW [203] -> GOTO 180
	expression/L2 = . expression "|=" expression, FOLLOW [203] -> GOTO 180
	expression/L2 = . expression "<<=" expression, FOLLOW [203] -> GOTO 180
	expression/L2 = . expression ">>=" expression, FOLLOW [203] -> GOTO 180
	expression/L3 = . expression "||" expression, FOLLOW [203] -> GOTO 180
	expression/L4 = . expression "&&" expression, FOLLOW [203] -> GOTO 180
	expression/L5 = . expression "|" expression, FOLLOW [203] -> GOTO 180
	expression/L6 = . expression "^" expression, FOLLOW [203] -> GOTO 180
	expression/L6 = expression "^" . expression, FOLLOW [203] -> GOTO 180
	expression/L6 = . expression "&" expression, FOLLOW [203] -> GOTO 180
	expression/L7 = . expression "==" expression, FOLLOW [203] -> GOTO 180
	expression/L7 = . expression "!=" expression, FOLLOW [203] -> GOTO 180
	expression/L7 = . expression "<=" expression, FOLLOW [203] -> GOTO 180
	expression/L7 = . expression "<" expression, FOLLOW [203] -> GOTO 180
	expression/L7 = . expression ">=" expression, FOLLOW [203] -> GOTO 180
	expression/L7 = . expression ">" expression, FOLLOW [203] -> GOTO 180
	expression/L8 = . expression "+" expression, FOLLOW [203] -> GOTO 180
	expression/L8 = . expression "-" expression, FOLLOW [203] -> GOTO 180
	expression/L9 = . expression "*" expression, FOLLOW [203] -> GOTO 180
	expression/L9 = . expression "/" expression, FOLLOW [203] -> GOTO 180
	expression/L9 = . expression "%" expression, FOLLOW [203] -> GOTO 180
	expression/L10 = . expression "<<" expression, FOLLOW [203] -> GOTO 180
	expression/L10 = . expression ">>" expression, FOLLOW [203] -> GOTO 180
	expression/L11 = . expression "." IDENT, FOLLOW [203] -> GOTO 180
	expression/L12 = . expression "(" expressionlist ")", FOLLOW [203] -> GOTO 180
	expression/L12 = . expression "(" ")", FOLLOW [203] -> GOTO 180
	expression/L12 = . expression "[" expressionlist "]", FOLLOW [203] -> GOTO 180
	iexpression = . expression indirection IDENT, FOLLOW [203] -> GOTO 180
	expression/L11 = . iexpression, FOLLOW [203] -> GOTO 69
	expression/L1 = . BOOLEAN, FOLLOW [203] -> SHIFT BOOLEAN GOTO 70
	expression/L1 = . IDENT, FOLLOW [203] -> SHIFT IDENT GOTO 71
	expression/L1 = . DQSTRING, FOLLOW [203] -> SHIFT DQSTRING GOTO 72
	expression/L1 = . SQSTRING, FOLLOW [203] -> SHIFT SQSTRING GOTO 73
	expression/L1 = . CARDINAL, FOLLOW [203] -> SHIFT CARDINAL GOTO 74
	expression/L1 = . INTEGER, FOLLOW [203] -> SHIFT INTEGER GOTO 75
	expression/L1 = . FLOAT, FOLLOW [203] -> SHIFT FLOAT GOTO 76
	expression/L1 = . "(" expression ")", FOLLOW [203] -> SHIFT '(' GOTO 77
	expression/L8 = . "&" expression, FOLLOW [203] -> SHIFT '&' GOTO 79
	expression/L8 = . "+" expression, FOLLOW [203] -> SHIFT '+' GOTO 84
	expression/L8 = . "-" expression, FOLLOW [203] -> SHIFT '-' GOTO 85
	expression/L8 = . "~" expression, FOLLOW [203] -> SHIFT '~' GOTO 86
	expression/L8 = . "!" expression, FOLLOW [203] -> SHIFT '!' GOTO 87
	expression/L11 = . "*" expression, FOLLOW [203] -> SHIFT '*' GOTO 88
[114]
	expression/L2 = . expression "=" expression, FOLLOW [203] -> GOTO 181
	expression/L2 = expression "=" . expression, FOLLOW [203] -> GOTO 181
	expression/L2 = . expression "+=" expression, FOLLOW [203] -> GOTO 181
	expression/L2 = . expression "-=" expression, FOLLOW [203] -> GOTO 181
	expression/L2 = . expression "*=" expression, FOLLOW [203] -> GOTO 181
	expression/L2 = . expression "/=" expression, FOLLOW [203] -> GOTO 181
	expression/L2 = . expression "%=" expression, FOLLOW [203] -> GOTO 181
	expression/L2 = . expression "&&=" expression, FOLLOW [203] -> GOTO 181
	expression/L2 = . expression "||=" expression, FOLLOW [203] -> GOTO 181
	expression/L2 = . expression "&=" expression, FOLLOW [203] -> GOTO 181
	expression/L2 = . expression "|=" expression, FOLLOW [203] -> GOTO 181
	expression/L2 = . expression "<<=" expression, FOLLOW [203] -> GOTO 181
	expression/L2 = . expression ">>=" expression, FOLLOW [203] -> GOTO 181
	expression/L3 = . expression "||" expression, FOLLOW [203] -> GOTO 181
	expression/L4 = . expression "&&" expression, FOLLOW [203] -> GOTO 181
	expression/L5 = . expression "|" expression, FOLLOW [203] -> GOTO 181
	expression/L6 = . expression "^" expression, FOLLOW [203] -> GOTO 181
	expression/L6 = . expression "&" expression, FOLLOW [203] -> GOTO 181
	expression/L7 = . expression "==" expression, FOLLOW [203] -> GOTO 181
	expression/L7 = . expression "!=" expression, FOLLOW [203] -> GOTO 181
	expression/L7 = . expression "<=" expression, FOLLOW [203] -> GOTO 181
	expression/L7 = . expression "<" expression, FOLLOW [203] -> GOTO 181
	expression/L7 = . expression ">=" expression, FOLLOW [203] -> GOTO 181
	expression/L7 = . expression ">" expression, FOLLOW [203] -> GOTO 181
	expression/L8 = . expression "+" expression, FOLLOW [203] -> GOTO 181
	expression/L8 = . expression "-" expression, FOLLOW [203] -> GOTO 181
	expression/L9 = . expression "*" expression, FOLLOW [203] -> GOTO 181
	expression/L9 = . expression "/" expression, FOLLOW [203] -> GOTO 181
	expression/L9 = . expression "%" expression, FOLLOW [203] -> GOTO 181
	expression/L10 = . expression "<<" expression, FOLLOW [203] -> GOTO 181
	expression/L10 = . expression ">>" expression, FOLLOW [203] -> GOTO 181
	expression/L11 = . expression "." IDENT, FOLLOW [203] -> GOTO 181
	expression/L12 = . expression "(" expressionlist ")", FOLLOW [203] -> GOTO 181
	expression/L12 = . expression "(" ")", FOLLOW [203] -> GOTO 181
	expression/L12 = . expression "[" expressionlist "]", FOLLOW [203] -> GOTO 181
	iexpression = . expression indirection IDENT, FOLLOW [203] -> GOTO 181
	expression/L11 = . iexpression, FOLLOW [203] -> GOTO 69
	expression/L1 = . BOOLEAN, FOLLOW [203] -> SHIFT BOOLEAN GOTO 70
	expression/L1 = . IDENT, FOLLOW [203] -> SHIFT IDENT GOTO 71
	expression/L1 = . DQSTRING, FOLLOW [203] -> SHIFT DQSTRING GOTO 72
	expression/L1 = . SQSTRING, FOLLOW [203] -> SHIFT SQSTRING GOTO 73
	expression/L1 = . CARDINAL, FOLLOW [203] -> SHIFT CARDINAL GOTO 74
	expression/L1 = . INTEGER, FOLLOW [203] -> SHIFT INTEGER GOTO 75
	expression/L1 = . FLOAT, FOLLOW [203] -> SHIFT FLOAT GOTO 76
	expression/L1 = . "(" expression ")", FOLLOW [203] -> SHIFT '(' GOTO 77
	expression/L8 = . "&" expression, FOLLOW [203] -> SHIFT '&' GOTO 79
	expression/L8 = . "+" expression, FOLLOW [203] -> SHIFT '+' GOTO 84
	expression/L8 = . "-" expression, FOLLOW [203] -> SHIFT '-' GOTO 85
	expression/L8 = . "~" expression, FOLLOW [203] -> SHIFT '~' GOTO 86
	expression/L8 = . "!" expression, FOLLOW [203] -> SHIFT '!' GOTO 87
	expression/L11 = . "*" expression, FOLLOW [203] -> SHIFT '*' GOTO 88
[115]
	expression/L2 = . expression "=" expression, FOLLOW [203] -> GOTO 176
	expression/L2 = . expression "+=" expression, FOLLOW [203] -> GOTO 176
	expression/L2 = . expression "-=" expression, FOLLOW [203] -> GOTO 176
	expression/L2 = . expression "*=" expression, FOLLOW [203] -> GOTO 176
	expression/L2 = . expression "/=" expression, FOLLOW [203] -> GOTO 176
	expression/L2 = . expression "%=" expression, FOLLOW [203] -> GOTO 176
	expression/L2 = . expression "&&=" expression, FOLLOW [203] -> GOTO 176
	expression/L2 = . expression "||=" expression, FOLLOW [203] -> GOTO 176
	expression/L2 = . expression "&=" expression, FOLLOW [203] -> GOTO 176
	expression/L2 = . expression "|=" expression, FOLLOW [203] -> GOTO 176
	expression/L2 = . expression "<<=" expression, FOLLOW [203] -> GOTO 176
	expression/L2 = . expression ">>=" expression, FOLLOW [203] -> GOTO 176
	expression/L3 = . expression "||" expression, FOLLOW [203] -> GOTO 176
	expression/L4 = . expression "&&" expression, FOLLOW [203] -> GOTO 176
	expression/L5 = . expression "|" expression, FOLLOW [203] -> GOTO 176
	expression/L6 = . expression "^" expression, FOLLOW [203] -> GOTO 176
	expression/L6 = . expression "&" expression, FOLLOW [203] -> GOTO 176
	expression/L7 = . expression "==" expression, FOLLOW [203] -> GOTO 176
	expression/L7 = . expression "!=" expression, FOLLOW [203] -> GOTO 176
	expression/L7 = . expression "<=" expression, FOLLOW [203] -> GOTO 176
	expression/L7 = . expression "<" expression, FOLLOW [203] -> GOTO 176
	expression/L7 = . expression ">=" expression, FOLLOW [203] -> GOTO 176
	expression/L7 = . expression ">" expression, FOLLOW [203] -> GOTO 176
	expression/L8 = . expression "+" expression, FOLLOW [203] -> GOTO 176
	expression/L8 = . expression "-" expression, FOLLOW [203] -> GOTO 176
	expression/L9 = . expression "*" expression, FOLLOW [203] -> GOTO 176
	expression/L9 = . expression "/" expression, FOLLOW [203] -> GOTO 176
	expression/L9 = . expression "%" expression, FOLLOW [203] -> GOTO 176
	expression/L10 = . expression "<<" expression, FOLLOW [203] -> GOTO 176
	expression/L10 = . expression ">>" expression, FOLLOW [203] -> GOTO 176
	expression/L11 = . expression "." IDENT, FOLLOW [203] -> GOTO 176
	expression/L12 = . expression "(" expressionlist ")", FOLLOW [203] -> GOTO 176
	expression/L12 = . expression "(" ")", FOLLOW [203] -> GOTO 176
	expression/L12 = . expression "[" expressionlist "]", FOLLOW [203] -> GOTO 176
	iexpression = . expression indirection IDENT, FOLLOW [203] -> GOTO 176
	expressionlist = . expression "," expressionlist, FOLLOW [18] -> GOTO 176
	expressionlist = . expression, FOLLOW [18] -> GOTO 176
	expression/L11 = . iexpression, FOLLOW [203] -> GOTO 69
	expression/L12 = expression "[" . expressionlist "]", FOLLOW [203] -> GOTO 182
	expression/L1 = . BOOLEAN, FOLLOW [203] -> SHIFT BOOLEAN GOTO 70
	expression/L1 = . IDENT, FOLLOW [203] -> SHIFT IDENT GOTO 71
	expression/L1 = . DQSTRING, FOLLOW [203] -> SHIFT DQSTRING GOTO 72
	expression/L1 = . SQSTRING, FOLLOW [203] -> SHIFT SQSTRING GOTO 73
	expression/L1 = . CARDINAL, FOLLOW [203] -> SHIFT CARDINAL GOTO 74
	expression/L1 = . INTEGER, FOLLOW [203] -> SHIFT INTEGER GOTO 75
	expression/L1 = . FLOAT, FOLLOW [203] -> SHIFT FLOAT GOTO 76
	expression/L1 = . "(" expression ")", FOLLOW [203] -> SHIFT '(' GOTO 77
	expression/L8 = . "&" expression, FOLLOW [203] -> SHIFT '&' GOTO 79
	expression/L8 = . "+" expression, FOLLOW [203] -> SHIFT '+' GOTO 84
	expression/L8 = . "-" expression, FOLLOW [203] -> SHIFT '-' GOTO 85
	expression/L8 = . "~" expression, FOLLOW [203] -> SHIFT '~' GOTO 86
	expression/L8 = . "!" expression, FOLLOW [203] -> SHIFT '!' GOTO 87
	expression/L11 = . "*" expression, FOLLOW [203] -> SHIFT '*' GOTO 88
	expressionlist = ., FOLLOW [18] -> REDUCE expressionlist #0
[116]
	expression/L2 = . expression "=" expression, FOLLOW [203] -> GOTO 183
	expression/L2 = . expression "+=" expression, FOLLOW [203] -> GOTO 183
	expression/L2 = expression "+=" . expression, FOLLOW [203] -> GOTO 183
	expression/L2 = . expression "-=" expression, FOLLOW [203] -> GOTO 183
	expression/L2 = . expression "*=" expression, FOLLOW [203] -> GOTO 183
	expression/L2 = . expression "/=" expression, FOLLOW [203] -> GOTO 183
	expression/L2 = . expression "%=" expression, FOLLOW [203] -> GOTO 183
	expression/L2 = . expression "&&=" expression, FOLLOW [203] -> GOTO 183
	expression/L2 = . expression "||=" expression, FOLLOW [203] -> GOTO 183
	expression/L2 = . expression "&=" expression, FOLLOW [203] -> GOTO 183
	expression/L2 = . expression "|=" expression, FOLLOW [203] -> GOTO 183
	expression/L2 = . expression "<<=" expression, FOLLOW [203] -> GOTO 183
	expression/L2 = . expression ">>=" expression, FOLLOW [203] -> GOTO 183
	expression/L3 = . expression "||" expression, FOLLOW [203] -> GOTO 183
	expression/L4 = . expression "&&" expression, FOLLOW [203] -> GOTO 183
	expression/L5 = . expression "|" expression, FOLLOW [203] -> GOTO 183
	expression/L6 = . expression "^" expression, FOLLOW [203] -> GOTO 183
	expression/L6 = . expression "&" expression, FOLLOW [203] -> GOTO 183
	expression/L7 = . expression "==" expression, FOLLOW [203] -> GOTO 183
	expression/L7 = . expression "!=" expression, FOLLOW [203] -> GOTO 183
	expression/L7 = . expression "<=" expression, FOLLOW [203] -> GOTO 183
	expression/L7 = . expression "<" expression, FOLLOW [203] -> GOTO 183
	expression/L7 = . expression ">=" expression, FOLLOW [203] -> GOTO 183
	expression/L7 = . expression ">" expression, FOLLOW [203] -> GOTO 183
	expression/L8 = . expression "+" expression, FOLLOW [203] -> GOTO 183
	expression/L8 = . expression "-" expression, FOLLOW [203] -> GOTO 183
	expression/L9 = . expression "*" expression, FOLLOW [203] -> GOTO 183
	expression/L9 = . expression "/" expression, FOLLOW [203] -> GOTO 183
	expression/L9 = . expression "%" expression, FOLLOW [203] -> GOTO 183
	expression/L10 = . expression "<<" expression, FOLLOW [203] -> GOTO 183
	expression/L10 = . expression ">>" expression, FOLLOW [203] -> GOTO 183
	expression/L11 = . expression "." IDENT, FOLLOW [203] -> GOTO 183
	expression/L12 = . expression "(" expressionlist ")", FOLLOW [203] -> GOTO 183
	expression/L12 = . expression "(" ")", FOLLOW [203] -> GOTO 183
	expression/L12 = . expression "[" expressionlist "]", FOLLOW [203] -> GOTO 183
	iexpression = . expression indirection IDENT, FOLLOW [203] -> GOTO 183
	expression/L11 = . iexpression, FOLLOW [203] -> GOTO 69
	expression/L1 = . BOOLEAN, FOLLOW [203] -> SHIFT BOOLEAN GOTO 70
	expression/L1 = . IDENT, FOLLOW [203] -> SHIFT IDENT GOTO 71
	expression/L1 = . DQSTRING, FOLLOW [203] -> SHIFT DQSTRING GOTO 72
	expression/L1 = . SQSTRING, FOLLOW [203] -> SHIFT SQSTRING GOTO 73
	expression/L1 = . CARDINAL, FOLLOW [203] -> SHIFT CARDINAL GOTO 74
	expression/L1 = . INTEGER, FOLLOW [203] -> SHIFT INTEGER GOTO 75
	expression/L1 = . FLOAT, FOLLOW [203] -> SHIFT FLOAT GOTO 76
	expression/L1 = . "(" expression ")", FOLLOW [203] -> SHIFT '(' GOTO 77
	expression/L8 = . "&" expression, FOLLOW [203] -> SHIFT '&' GOTO 79
	expression/L8 = . "+" expression, FOLLOW [203] -> SHIFT '+' GOTO 84
	expression/L8 = . "-" expression, FOLLOW [203] -> SHIFT '-' GOTO 85
	expression/L8 = . "~" expression, FOLLOW [203] -> SHIFT '~' GOTO 86
	expression/L8 = . "!" expression, FOLLOW [203] -> SHIFT '!' GOTO 87
	expression/L11 = . "*" expression, FOLLOW [203] -> SHIFT '*' GOTO 88
[117]
	expression/L2 = . expression "=" expression, FOLLOW [203] -> GOTO 184
	expression/L2 = . expression "+=" expression, FOLLOW [203] -> GOTO 184
	expression/L2 = . expression "-=" expression, FOLLOW [203] -> GOTO 184
	expression/L2 = expression "-=" . expression, FOLLOW [203] -> GOTO 184
	expression/L2 = . expression "*=" expression, FOLLOW [203] -> GOTO 184
	expression/L2 = . expression "/=" expression, FOLLOW [203] -> GOTO 184
	expression/L2 = . expression "%=" expression, FOLLOW [203] -> GOTO 184
	expression/L2 = . expression "&&=" expression, FOLLOW [203] -> GOTO 184
	expression/L2 = . expression "||=" expression, FOLLOW [203] -> GOTO 184
	expression/L2 = . expression "&=" expression, FOLLOW [203] -> GOTO 184
	expression/L2 = . expression "|=" expression, FOLLOW [203] -> GOTO 184
	expression/L2 = . expression "<<=" expression, FOLLOW [203] -> GOTO 184
	expression/L2 = . expression ">>=" expression, FOLLOW [203] -> GOTO 184
	expression/L3 = . expression "||" expression, FOLLOW [203] -> GOTO 184
	expression/L4 = . expression "&&" expression, FOLLOW [203] -> GOTO 184
	expression/L5 = . expression "|" expression, FOLLOW [203] -> GOTO 184
	expression/L6 = . expression "^" expression, FOLLOW [203] -> GOTO 184
	expression/L6 = . expression "&" expression, FOLLOW [203] -> GOTO 184
	expression/L7 = . expression "==" expression, FOLLOW [203] -> GOTO 184
	expression/L7 = . expression "!=" expression, FOLLOW [203] -> GOTO 184
	expression/L7 = . expression "<=" expression, FOLLOW [203] -> GOTO 184
	expression/L7 = . expression "<" expression, FOLLOW [203] -> GOTO 184
	expression/L7 = . expression ">=" expression, FOLLOW [203] -> GOTO 184
	expression/L7 = . expression ">" expression, FOLLOW [203] -> GOTO 184
	expression/L8 = . expression "+" expression, FOLLOW [203] -> GOTO 184
	expression/L8 = . expression "-" expression, FOLLOW [203] -> GOTO 184
	expression/L9 = . expression "*" expression, FOLLOW [203] -> GOTO 184
	expression/L9 = . expression "/" expression, FOLLOW [203] -> GOTO 184
	expression/L9 = . expression "%" expression, FOLLOW [203] -> GOTO 184
	expression/L10 = . expression "<<" expression, FOLLOW [203] -> GOTO 184
	expression/L10 = . expression ">>" expression, FOLLOW [203] -> GOTO 184
	expression/L11 = . expression "." IDENT, FOLLOW [203] -> GOTO 184
	expression/L12 = . expression "(" expressionlist ")", FOLLOW [203] -> GOTO 184
	expression/L12 = . expression "(" ")", FOLLOW [203] -> GOTO 184
	expression/L12 = . expression "[" expressionlist "]", FOLLOW [203] -> GOTO 184
	iexpression = . expression indirection IDENT, FOLLOW [203] -> GOTO 184
	expression/L11 = . iexpression, FOLLOW [203] -> GOTO 69
	expression/L1 = . BOOLEAN, FOLLOW [203] -> SHIFT BOOLEAN GOTO 70
	expression/L1 = . IDENT, FOLLOW [203] -> SHIFT IDENT GOTO 71
	expression/L1 = . DQSTRING, FOLLOW [203] -> SHIFT DQSTRING GOTO 72
	expression/L1 = . SQSTRING, FOLLOW [203] -> SHIFT SQSTRING GOTO 73
	expression/L1 = . CARDINAL, FOLLOW [203] -> SHIFT CARDINAL GOTO 74
	expression/L1 = . INTEGER, FOLLOW [203] -> SHIFT INTEGER GOTO 75
	expression/L1 = . FLOAT, FOLLOW [203] -> SHIFT FLOAT GOTO 76
	expression/L1 = . "(" expression ")", FOLLOW [203] -> SHIFT '(' GOTO 77
	expression/L8 = . "&" expression, FOLLOW [203] -> SHIFT '&' GOTO 79
	expression/L8 = . "+" expression, FOLLOW [203] -> SHIFT '+' GOTO 84
	expression/L8 = . "-" expression, FOLLOW [203] -> SHIFT '-' GOTO 85
	expression/L8 = . "~" expression, FOLLOW [203] -> SHIFT '~' GOTO 86
	expression/L8 = . "!" expression, FOLLOW [203] -> SHIFT '!' GOTO 87
	expression/L11 = . "*" expression, FOLLOW [203] -> SHIFT '*' GOTO 88
[118]
	expression/L2 = . expression "=" expression, FOLLOW [203] -> GOTO 185
	expression/L2 = . expression "+=" expression, FOLLOW [203] -> GOTO 185
	expression/L2 = . expression "-=" expression, FOLLOW [203] -> GOTO 185
	expression/L2 = . expression "*=" expression, FOLLOW [203] -> GOTO 185
	expression/L2 = expression "*=" . expression, FOLLOW [203] -> GOTO 185
	expression/L2 = . expression "/=" expression, FOLLOW [203] -> GOTO 185
	expression/L2 = . expression "%=" expression, FOLLOW [203] -> GOTO 185
	expression/L2 = . expression "&&=" expression, FOLLOW [203] -> GOTO 185
	expression/L2 = . expression "||=" expression, FOLLOW [203] -> GOTO 185
	expression/L2 = . expression "&=" expression, FOLLOW [203] -> GOTO 185
	expression/L2 = . expression "|=" expression, FOLLOW [203] -> GOTO 185
	expression/L2 = . expression "<<=" expression, FOLLOW [203] -> GOTO 185
	expression/L2 = . expression ">>=" expression, FOLLOW [203] -> GOTO 185
	expression/L3 = . expression "||" expression, FOLLOW [203] -> GOTO 185
	expression/L4 = . expression "&&" expression, FOLLOW [203] -> GOTO 185
	expression/L5 = . expression "|" expression, FOLLOW [203] -> GOTO 185
	expression/L6 = . expression "^" expression, FOLLOW [203] -> GOTO 185
	expression/L6 = . expression "&" expression, FOLLOW [203] -> GOTO 185
	expression/L7 = . expression "==" expression, FOLLOW [203] -> GOTO 185
	expression/L7 = . expression "!=" expression, FOLLOW [203] -> GOTO 185
	expression/L7 = . expression "<=" expression, FOLLOW [203] -> GOTO 185
	expression/L7 = . expression "<" expression, FOLLOW [203] -> GOTO 185
	expression/L7 = . expression ">=" expression, FOLLOW [203] -> GOTO 185
	expression/L7 = . expression ">" expression, FOLLOW [203] -> GOTO 185
	expression/L8 = . expression "+" expression, FOLLOW [203] -> GOTO 185
	expression/L8 = . expression "-" expression, FOLLOW [203] -> GOTO 185
	expression/L9 = . expression "*" expression, FOLLOW [203] -> GOTO 185
	expression/L9 = . expression "/" expression, FOLLOW [203] -> GOTO 185
	expression/L9 = . expression "%" expression, FOLLOW [203] -> GOTO 185
	expression/L10 = . expression "<<" expression, FOLLOW [203] -> GOTO 185
	expression/L10 = . expression ">>" expression, FOLLOW [203] -> GOTO 185
	expression/L11 = . expression "." IDENT, FOLLOW [203] -> GOTO 185
	expression/L12 = . expression "(" expressionlist ")", FOLLOW [203] -> GOTO 185
	expression/L12 = . expression "(" ")", FOLLOW [203] -> GOTO 185
	expression/L12 = . expression "[" expressionlist "]", FOLLOW [203] -> GOTO 185
	iexpression = . expression indirection IDENT, FOLLOW [203] -> GOTO 185
	expression/L11 = . iexpression, FOLLOW [203] -> GOTO 69
	expression/L1 = . BOOLEAN, FOLLOW [203] -> SHIFT BOOLEAN GOTO 70
	expression/L1 = . IDENT, FOLLOW [203] -> SHIFT IDENT GOTO 71
	expression/L1 = . DQSTRING, FOLLOW [203] -> SHIFT DQSTRING GOTO 72
	expression/L1 = . SQSTRING, FOLLOW [203] -> SHIFT SQSTRING GOTO 73
	expression/L1 = . CARDINAL, FOLLOW [203] -> SHIFT CARDINAL GOTO 74
	expression/L1 = . INTEGER, FOLLOW [203] -> SHIFT INTEGER GOTO 75
	expression/L1 = . FLOAT, FOLLOW [203] -> SHIFT FLOAT GOTO 76
	expression/L1 = . "(" expression ")", FOLLOW [203] -> SHIFT '(' GOTO 77
	expression/L8 = . "&" expression, FOLLOW [203] -> SHIFT '&' GOTO 79
	expression/L8 = . "+" expression, FOLLOW [203] -> SHIFT '+' GOTO 84
	expression/L8 = . "-" expression, FOLLOW [203] -> SHIFT '-' GOTO 85
	expression/L8 = . "~" expression, FOLLOW [203] -> SHIFT '~' GOTO 86
	expression/L8 = . "!" expression, FOLLOW [203] -> SHIFT '!' GOTO 87
	expression/L11 = . "*" expression, FOLLOW [203] -> SHIFT '*' GOTO 88
[119]
	expression/L2 = . expression "=" expression, FOLLOW [203] -> GOTO 186
	expression/L2 = . expression "+=" expression, FOLLOW [203] -> GOTO 186
	expression/L2 = . expression "-=" expression, FOLLOW [203] -> GOTO 186
	expression/L2 = . expression "*=" expression, FOLLOW [203] -> GOTO 186
	expression/L2 = . expression "/=" expression, FOLLOW [203] -> GOTO 186
	expression/L2 = expression "/=" . expression, FOLLOW [203] -> GOTO 186
	expression/L2 = . expression "%=" expression, FOLLOW [203] -> GOTO 186
	expression/L2 = . expression "&&=" expression, FOLLOW [203] -> GOTO 186
	expression/L2 = . expression "||=" expression, FOLLOW [203] -> GOTO 186
	expression/L2 = . expression "&=" expression, FOLLOW [203] -> GOTO 186
	expression/L2 = . expression "|=" expression, FOLLOW [203] -> GOTO 186
	expression/L2 = . expression "<<=" expression, FOLLOW [203] -> GOTO 186
	expression/L2 = . expression ">>=" expression, FOLLOW [203] -> GOTO 186
	expression/L3 = . expression "||" expression, FOLLOW [203] -> GOTO 186
	expression/L4 = . expression "&&" expression, FOLLOW [203] -> GOTO 186
	expression/L5 = . expression "|" expression, FOLLOW [203] -> GOTO 186
	expression/L6 = . expression "^" expression, FOLLOW [203] -> GOTO 186
	expression/L6 = . expression "&" expression, FOLLOW [203] -> GOTO 186
	expression/L7 = . expression "==" expression, FOLLOW [203] -> GOTO 186
	expression/L7 = . expression "!=" expression, FOLLOW [203] -> GOTO 186
	expression/L7 = . expression "<=" expression, FOLLOW [203] -> GOTO 186
	expression/L7 = . expression "<" expression, FOLLOW [203] -> GOTO 186
	expression/L7 = . expression ">=" expression, FOLLOW [203] -> GOTO 186
	expression/L7 = . expression ">" expression, FOLLOW [203] -> GOTO 186
	expression/L8 = . expression "+" expression, FOLLOW [203] -> GOTO 186
	expression/L8 = . expression "-" expression, FOLLOW [203] -> GOTO 186
	expression/L9 = . expression "*" expression, FOLLOW [203] -> GOTO 186
	expression/L9 = . expression "/" expression, FOLLOW [203] -> GOTO 186
	expression/L9 = . expression "%" expression, FOLLOW [203] -> GOTO 186
	expression/L10 = . expression "<<" expression, FOLLOW [203] -> GOTO 186
	expression/L10 = . expression ">>" expression, FOLLOW [203] -> GOTO 186
	expression/L11 = . expression "." IDENT, FOLLOW [203] -> GOTO 186
	expression/L12 = . expression "(" expressionlist ")", FOLLOW [203] -> GOTO 186
	expression/L12 = . expression "(" ")", FOLLOW [203] -> GOTO 186
	expression/L12 = . expression "[" expressionlist "]", FOLLOW [203] -> GOTO 186
	iexpression = . expression indirection IDENT, FOLLOW [203] -> GOTO 186
	expression/L11 = . iexpression, FOLLOW [203] -> GOTO 69
	expression/L1 = . BOOLEAN, FOLLOW [203] -> SHIFT BOOLEAN GOTO 70
	expression/L1 = . IDENT, FOLLOW [203] -> SHIFT IDENT GOTO 71
	expression/L1 = . DQSTRING, FOLLOW [203] -> SHIFT DQSTRING GOTO 72
	expression/L1 = . SQSTRING, FOLLOW [203] -> SHIFT SQSTRING GOTO 73
	expression/L1 = . CARDINAL, FOLLOW [203] -> SHIFT CARDINAL GOTO 74
	expression/L1 = . INTEGER, FOLLOW [203] -> SHIFT INTEGER GOTO 75
	expression/L1 = . FLOAT, FOLLOW [203] -> SHIFT FLOAT GOTO 76
	expression/L1 = . "(" expression ")", FOLLOW [203] -> SHIFT '(' GOTO 77
	expression/L8 = . "&" expression, FOLLOW [203] -> SHIFT '&' GOTO 79
	expression/L8 = . "+" expression, FOLLOW [203] -> SHIFT '+' GOTO 84
	expression/L8 = . "-" expression, FOLLOW [203] -> SHIFT '-' GOTO 85
	expression/L8 = . "~" expression, FOLLOW [203] -> SHIFT '~' GOTO 86
	expression/L8 = . "!" expression, FOLLOW [203] -> SHIFT '!' GOTO 87
	expression/L11 = . "*" expression, FOLLOW [203] -> SHIFT '*' GOTO 88
[120]
	expression/L2 = . expression "=" expression, FOLLOW [203] -> GOTO 187
	expression/L2 = . expression "+=" expression, FOLLOW [203] -> GOTO 187
	expression/L2 = . expression "-=" expression, FOLLOW [203] -> GOTO 187
	expression/L2 = . expression "*=" expression, FOLLOW [203] -> GOTO 187
	expression/L2 = . expression "/=" expression, FOLLOW [203] -> GOTO 187
	expression/L2 = . expression "%=" expression, FOLLOW [203] -> GOTO 187
	expression/L2 = expression "%=" . expression, FOLLOW [203] -> GOTO 187
	expression/L2 = . expression "&&=" expression, FOLLOW [203] -> GOTO 187
	expression/L2 = . expression "||=" expression, FOLLOW [203] -> GOTO 187
	expression/L2 = . expression "&=" expression, FOLLOW [203] -> GOTO 187
	expression/L2 = . expression "|=" expression, FOLLOW [203] -> GOTO 187
	expression/L2 = . expression "<<=" expression, FOLLOW [203] -> GOTO 187
	expression/L2 = . expression ">>=" expression, FOLLOW [203] -> GOTO 187
	expression/L3 = . expression "||" expression, FOLLOW [203] -> GOTO 187
	expression/L4 = . expression "&&" expression, FOLLOW [203] -> GOTO 187
	expression/L5 = . expression "|" expression, FOLLOW [203] -> GOTO 187
	expression/L6 = . expression "^" expression, FOLLOW [203] -> GOTO 187
	expression/L6 = . expression "&" expression, FOLLOW [203] -> GOTO 187
	expression/L7 = . expression "==" expression, FOLLOW [203] -> GOTO 187
	expression/L7 = . expression "!=" expression, FOLLOW [203] -> GOTO 187
	expression/L7 = . expression "<=" expression, FOLLOW [203] -> GOTO 187
	expression/L7 = . expression "<" expression, FOLLOW [203] -> GOTO 187
	expression/L7 = . expression ">=" expression, FOLLOW [203] -> GOTO 187
	expression/L7 = . expression ">" expression, FOLLOW [203] -> GOTO 187
	expression/L8 = . expression "+" expression, FOLLOW [203] -> GOTO 187
	expression/L8 = . expression "-" expression, FOLLOW [203] -> GOTO 187
	expression/L9 = . expression "*" expression, FOLLOW [203] -> GOTO 187
	expression/L9 = . expression "/" expression, FOLLOW [203] -> GOTO 187
	expression/L9 = . expression "%" expression, FOLLOW [203] -> GOTO 187
	expression/L10 = . expression "<<" expression, FOLLOW [203] -> GOTO 187
	expression/L10 = . expression ">>" expression, FOLLOW [203] -> GOTO 187
	expression/L11 = . expression "." IDENT, FOLLOW [203] -> GOTO 187
	expression/L12 = . expression "(" expressionlist ")", FOLLOW [203] -> GOTO 187
	expression/L12 = . expression "(" ")", FOLLOW [203] -> GOTO 187
	expression/L12 = . expression "[" expressionlist "]", FOLLOW [203] -> GOTO 187
	iexpression = . expression indirection IDENT, FOLLOW [203] -> GOTO 187
	expression/L11 = . iexpression, FOLLOW [203] -> GOTO 69
	expression/L1 = . BOOLEAN, FOLLOW [203] -> SHIFT BOOLEAN GOTO 70
	expression/L1 = . IDENT, FOLLOW [203] -> SHIFT IDENT GOTO 71
	expression/L1 = . DQSTRING, FOLLOW [203] -> SHIFT DQSTRING GOTO 72
	expression/L1 = . SQSTRING, FOLLOW [203] -> SHIFT SQSTRING GOTO 73
	expression/L1 = . CARDINAL, FOLLOW [203] -> SHIFT CARDINAL GOTO 74
	expression/L1 = . INTEGER, FOLLOW [203] -> SHIFT INTEGER GOTO 75
	expression/L1 = . FLOAT, FOLLOW [203] -> SHIFT FLOAT GOTO 76
	expression/L1 = . "(" expression ")", FOLLOW [203] -> SHIFT '(' GOTO 77
	expression/L8 = . "&" expression, FOLLOW [203] -> SHIFT '&' GOTO 79
	expression/L8 = . "+" expression, FOLLOW [203] -> SHIFT '+' GOTO 84
	expression/L8 = . "-" expression, FOLLOW [203] -> SHIFT '-' GOTO 85
	expression/L8 = . "~" expression, FOLLOW [203] -> SHIFT '~' GOTO 86
	expression/L8 = . "!" expression, FOLLOW [203] -> SHIFT '!' GOTO 87
	expression/L11 = . "*" expression, FOLLOW [203] -> SHIFT '*' GOTO 88
[121]
	expression/L2 = . expression "=" expression, FOLLOW [203] -> GOTO 188
	expression/L2 = . expression "+=" expression, FOLLOW [203] -> GOTO 188
	expression/L2 = . expression "-=" expression, FOLLOW [203] -> GOTO 188
	expression/L2 = . expression "*=" expression, FOLLOW [203] -> GOTO 188
	expression/L2 = . expression "/=" expression, FOLLOW [203] -> GOTO 188
	expression/L2 = . expression "%=" expression, FOLLOW [203] -> GOTO 188
	expression/L2 = . expression "&&=" expression, FOLLOW [203] -> GOTO 188
	expression/L2 = expression "&&=" . expression, FOLLOW [203] -> GOTO 188
	expression/L2 = . expression "||=" expression, FOLLOW [203] -> GOTO 188
	expression/L2 = . expression "&=" expression, FOLLOW [203] -> GOTO 188
	expression/L2 = . expression "|=" expression, FOLLOW [203] -> GOTO 188
	expression/L2 = . expression "<<=" expression, FOLLOW [203] -> GOTO 188
	expression/L2 = . expression ">>=" expression, FOLLOW [203] -> GOTO 188
	expression/L3 = . expression "||" expression, FOLLOW [203] -> GOTO 188
	expression/L4 = . expression "&&" expression, FOLLOW [203] -> GOTO 188
	expression/L5 = . expression "|" expression, FOLLOW [203] -> GOTO 188
	expression/L6 = . expression "^" expression, FOLLOW [203] -> GOTO 188
	expression/L6 = . expression "&" expression, FOLLOW [203] -> GOTO 188
	expression/L7 = . expression "==" expression, FOLLOW [203] -> GOTO 188
	expression/L7 = . expression "!=" expression, FOLLOW [203] -> GOTO 188
	expression/L7 = . expression "<=" expression, FOLLOW [203] -> GOTO 188
	expression/L7 = . expression "<" expression, FOLLOW [203] -> GOTO 188
	expression/L7 = . expression ">=" expression, FOLLOW [203] -> GOTO 188
	expression/L7 = . expression ">" expression, FOLLOW [203] -> GOTO 188
	expression/L8 = . expression "+" expression, FOLLOW [203] -> GOTO 188
	expression/L8 = . expression "-" expression, FOLLOW [203] -> GOTO 188
	expression/L9 = . expression "*" expression, FOLLOW [203] -> GOTO 188
	expression/L9 = . expression "/" expression, FOLLOW [203] -> GOTO 188
	expression/L9 = . expression "%" expression, FOLLOW [203] -> GOTO 188
	expression/L10 = . expression "<<" expression, FOLLOW [203] -> GOTO 188
	expression/L10 = . expression ">>" expression, FOLLOW [203] -> GOTO 188
	expression/L11 = . expression "." IDENT, FOLLOW [203] -> GOTO 188
	expression/L12 = . expression "(" expressionlist ")", FOLLOW [203] -> GOTO 188
	expression/L12 = . expression "(" ")", FOLLOW [203] -> GOTO 188
	expression/L12 = . expression "[" expressionlist "]", FOLLOW [203] -> GOTO 188
	iexpression = . expression indirection IDENT, FOLLOW [203] -> GOTO 188
	expression/L11 = . iexpression, FOLLOW [203] -> GOTO 69
	expression/L1 = . BOOLEAN, FOLLOW [203] -> SHIFT BOOLEAN GOTO 70
	expression/L1 = . IDENT, FOLLOW [203] -> SHIFT IDENT GOTO 71
	expression/L1 = . DQSTRING, FOLLOW [203] -> SHIFT DQSTRING GOTO 72
	expression/L1 = . SQSTRING, FOLLOW [203] -> SHIFT SQSTRING GOTO 73
	expression/L1 = . CARDINAL, FOLLOW [203] -> SHIFT CARDINAL GOTO 74
	expression/L1 = . INTEGER, FOLLOW [203] -> SHIFT INTEGER GOTO 75
	expression/L1 = . FLOAT, FOLLOW [203] -> SHIFT FLOAT GOTO 76
	expression/L1 = . "(" expression ")", FOLLOW [203] -> SHIFT '(' GOTO 77
	expression/L8 = . "&" expression, FOLLOW [203] -> SHIFT '&' GOTO 79
	expression/L8 = . "+" expression, FOLLOW [203] -> SHIFT '+' GOTO 84
	expression/L8 = . "-" expression, FOLLOW [203] -> SHIFT '-' GOTO 85
	expression/L8 = . "~" expression, FOLLOW [203] -> SHIFT '~' GOTO 86
	expression/L8 = . "!" expression, FOLLOW [203] -> SHIFT '!' GOTO 87
	expression/L11 = . "*" expression, FOLLOW [203] -> SHIFT '*' GOTO 88
[122]
	expression/L2 = . expression "=" expression, FOLLOW [203] -> GOTO 189
	expression/L2 = . expression "+=" expression, FOLLOW [203] -> GOTO 189
	expression/L2 = . expression "-=" expression, FOLLOW [203] -> GOTO 189
	expression/L2 = . expression "*=" expression, FOLLOW [203] -> GOTO 189
	expression/L2 = . expression "/=" expression, FOLLOW [203] -> GOTO 189
	expression/L2 = . expression "%=" expression, FOLLOW [203] -> GOTO 189
	expression/L2 = . expression "&&=" expression, FOLLOW [203] -> GOTO 189
	expression/L2 = . expression "||=" expression, FOLLOW [203] -> GOTO 189
	expression/L2 = expression "||=" . expression, FOLLOW [203] -> GOTO 189
	expression/L2 = . expression "&=" expression, FOLLOW [203] -> GOTO 189
	expression/L2 = . expression "|=" expression, FOLLOW [203] -> GOTO 189
	expression/L2 = . expression "<<=" expression, FOLLOW [203] -> GOTO 189
	expression/L2 = . expression ">>=" expression, FOLLOW [203] -> GOTO 189
	expression/L3 = . expression "||" expression, FOLLOW [203] -> GOTO 189
	expression/L4 = . expression "&&" expression, FOLLOW [203] -> GOTO 189
	expression/L5 = . expression "|" expression, FOLLOW [203] -> GOTO 189
	expression/L6 = . expression "^" expression, FOLLOW [203] -> GOTO 189
	expression/L6 = . expression "&" expression, FOLLOW [203] -> GOTO 189
	expression/L7 = . expression "==" expression, FOLLOW [203] -> GOTO 189
	expression/L7 = . expression "!=" expression, FOLLOW [203] -> GOTO 189
	expression/L7 = . expression "<=" expression, FOLLOW [203] -> GOTO 189
	expression/L7 = . expression "<" expression, FOLLOW [203] -> GOTO 189
	expression/L7 = . expression ">=" expression, FOLLOW [203] -> GOTO 189
	expression/L7 = . expression ">" expression, FOLLOW [203] -> GOTO 189
	expression/L8 = . expression "+" expression, FOLLOW [203] -> GOTO 189
	expression/L8 = . expression "-" expression, FOLLOW [203] -> GOTO 189
	expression/L9 = . expression "*" expression, FOLLOW [203] -> GOTO 189
	expression/L9 = . expression "/" expression, FOLLOW [203] -> GOTO 189
	expression/L9 = . expression "%" expression, FOLLOW [203] -> GOTO 189
	expression/L10 = . expression "<<" expression, FOLLOW [203] -> GOTO 189
	expression/L10 = . expression ">>" expression, FOLLOW [203] -> GOTO 189
	expression/L11 = . expression "." IDENT, FOLLOW [203] -> GOTO 189
	expression/L12 = . expression "(" expressionlist ")", FOLLOW [203] -> GOTO 189
	expression/L12 = . expression "(" ")", FOLLOW [203] -> GOTO 189
	expression/L12 = . expression "[" expressionlist "]", FOLLOW [203] -> GOTO 189
	iexpression = . expression indirection IDENT, FOLLOW [203] -> GOTO 189
	expression/L11 = . iexpression, FOLLOW [203] -> GOTO 69
	expression/L1 = . BOOLEAN, FOLLOW [203] -> SHIFT BOOLEAN GOTO 70
	expression/L1 = . IDENT, FOLLOW [203] -> SHIFT IDENT GOTO 71
	expression/L1 = . DQSTRING, FOLLOW [203] -> SHIFT DQSTRING GOTO 72
	expression/L1 = . SQSTRING, FOLLOW [203] -> SHIFT SQSTRING GOTO 73
	expression/L1 = . CARDINAL, FOLLOW [203] -> SHIFT CARDINAL GOTO 74
	expression/L1 = . INTEGER, FOLLOW [203] -> SHIFT INTEGER GOTO 75
	expression/L1 = . FLOAT, FOLLOW [203] -> SHIFT FLOAT GOTO 76
	expression/L1 = . "(" expression ")", FOLLOW [203] -> SHIFT '(' GOTO 77
	expression/L8 = . "&" expression, FOLLOW [203] -> SHIFT '&' GOTO 79
	expression/L8 = . "+" expression, FOLLOW [203] -> SHIFT '+' GOTO 84
	expression/L8 = . "-" expression, FOLLOW [203] -> SHIFT '-' GOTO 85
	expression/L8 = . "~" expression, FOLLOW [203] -> SHIFT '~' GOTO 86
	expression/L8 = . "!" expression, FOLLOW [203] -> SHIFT '!' GOTO 87
	expression/L11 = . "*" expression, FOLLOW [203] -> SHIFT '*' GOTO 88
[123]
	expression/L2 = . expression "=" expression, FOLLOW [203] -> GOTO 190
	expression/L2 = . expression "+=" expression, FOLLOW [203] -> GOTO 190
	expression/L2 = . expression "-=" expression, FOLLOW [203] -> GOTO 190
	expression/L2 = . expression "*=" expression, FOLLOW [203] -> GOTO 190
	expression/L2 = . expression "/=" expression, FOLLOW [203] -> GOTO 190
	expression/L2 = . expression "%=" expression, FOLLOW [203] -> GOTO 190
	expression/L2 = . expression "&&=" expression, FOLLOW [203] -> GOTO 190
	expression/L2 = . expression "||=" expression, FOLLOW [203] -> GOTO 190
	expression/L2 = . expression "&=" expression, FOLLOW [203] -> GOTO 190
	expression/L2 = expression "&=" . expression, FOLLOW [203] -> GOTO 190
	expression/L2 = . expression "|=" expression, FOLLOW [203] -> GOTO 190
	expression/L2 = . expression "<<=" expression, FOLLOW [203] -> GOTO 190
	expression/L2 = . expression ">>=" expression, FOLLOW [203] -> GOTO 190
	expression/L3 = . expression "||" expression, FOLLOW [203] -> GOTO 190
	expression/L4 = . expression "&&" expression, FOLLOW [203] -> GOTO 190
	expression/L5 = . expression "|" expression, FOLLOW [203] -> GOTO 190
	expression/L6 = . expression "^" expression, FOLLOW [203] -> GOTO 190
	expression/L6 = . expression "&" expression, FOLLOW [203] -> GOTO 190
	expression/L7 = . expression "==" expression, FOLLOW [203] -> GOTO 190
	expression/L7 = . expression "!=" expression, FOLLOW [203] -> GOTO 190
	expression/L7 = . expression "<=" expression, FOLLOW [203] -> GOTO 190
	expression/L7 = . expression "<" expression, FOLLOW [203] -> GOTO 190
	expression/L7 = . expression ">=" expression, FOLLOW [203] -> GOTO 190
	expression/L7 = . expression ">" expression, FOLLOW [203] -> GOTO 190
	expression/L8 = . expression "+" expression, FOLLOW [203] -> GOTO 190
	expression/L8 = . expression "-" expression, FOLLOW [203] -> GOTO 190
	expression/L9 = . expression "*" expression, FOLLOW [203] -> GOTO 190
	expression/L9 = . expression "/" expression, FOLLOW [203] -> GOTO 190
	expression/L9 = . expression "%" expression, FOLLOW [203] -> GOTO 190
	expression/L10 = . expression "<<" expression, FOLLOW [203] -> GOTO 190
	expression/L10 = . expression ">>" expression, FOLLOW [203] -> GOTO 190
	expression/L11 = . expression "." IDENT, FOLLOW [203] -> GOTO 190
	expression/L12 = . expression "(" expressionlist ")", FOLLOW [203] -> GOTO 190
	expression/L12 = . expression "(" ")", FOLLOW [203] -> GOTO 190
	expression/L12 = . expression "[" expressionlist "]", FOLLOW [203] -> GOTO 190
	iexpression = . expression indirection IDENT, FOLLOW [203] -> GOTO 190
	expression/L11 = . iexpression, FOLLOW [203] -> GOTO 69
	expression/L1 = . BOOLEAN, FOLLOW [203] -> SHIFT BOOLEAN GOTO 70
	expression/L1 = . IDENT, FOLLOW [203] -> SHIFT IDENT GOTO 71
	expression/L1 = . DQSTRING, FOLLOW [203] -> SHIFT DQSTRING GOTO 72
	expression/L1 = . SQSTRING, FOLLOW [203] -> SHIFT SQSTRING GOTO 73
	expression/L1 = . CARDINAL, FOLLOW [203] -> SHIFT CARDINAL GOTO 74
	expression/L1 = . INTEGER, FOLLOW [203] -> SHIFT INTEGER GOTO 75
	expression/L1 = . FLOAT, FOLLOW [203] -> SHIFT FLOAT GOTO 76
	expression/L1 = . "(" expression ")", FOLLOW [203] -> SHIFT '(' GOTO 77
	expression/L8 = . "&" expression, FOLLOW [203] -> SHIFT '&' GOTO 79
	expression/L8 = . "+" expression, FOLLOW [203] -> SHIFT '+' GOTO 84
	expression/L8 = . "-" expression, FOLLOW [203] -> SHIFT '-' GOTO 85
	expression/L8 = . "~" expression, FOLLOW [203] -> SHIFT '~' GOTO 86
	expression/L8 = . "!" expression, FOLLOW [203] -> SHIFT '!' GOTO 87
	expression/L11 = . "*" expression, FOLLOW [203] -> SHIFT '*' GOTO 88
[124]
	expression/L2 = . expression "=" expression, FOLLOW [203] -> GOTO 191
	expression/L2 = . expression "+=" expression, FOLLOW [203] -> GOTO 191
	expression/L2 = . expression "-=" expression, FOLLOW [203] -> GOTO 191
	expression/L2 = . expression "*=" expression, FOLLOW [203] -> GOTO 191
	expression/L2 = . expression "/=" expression, FOLLOW [203] -> GOTO 191
	expression/L2 = . expression "%=" expression, FOLLOW [203] -> GOTO 191
	expression/L2 = . expression "&&=" expression, FOLLOW [203] -> GOTO 191
	expression/L2 = . expression "||=" expression, FOLLOW [203] -> GOTO 191
	expression/L2 = . expression "&=" expression, FOLLOW [203] -> GOTO 191
	expression/L2 = . expression "|=" expression, FOLLOW [203] -> GOTO 191
	expression/L2 = expression "|=" . expression, FOLLOW [203] -> GOTO 191
	expression/L2 = . expression "<<=" expression, FOLLOW [203] -> GOTO 191
	expression/L2 = . expression ">>=" expression, FOLLOW [203] -> GOTO 191
	expression/L3 = . expression "||" expression, FOLLOW [203] -> GOTO 191
	expression/L4 = . expression "&&" expression, FOLLOW [203] -> GOTO 191
	expression/L5 = . expression "|" expression, FOLLOW [203] -> GOTO 191
	expression/L6 = . expression "^" expression, FOLLOW [203] -> GOTO 191
	expression/L6 = . expression "&" expression, FOLLOW [203] -> GOTO 191
	expression/L7 = . expression "==" expression, FOLLOW [203] -> GOTO 191
	expression/L7 = . expression "!=" expression, FOLLOW [203] -> GOTO 191
	expression/L7 = . expression "<=" expression, FOLLOW [203] -> GOTO 191
	expression/L7 = . expression "<" expression, FOLLOW [203] -> GOTO 191
	expression/L7 = . expression ">=" expression, FOLLOW [203] -> GOTO 191
	expression/L7 = . expression ">" expression, FOLLOW [203] -> GOTO 191
	expression/L8 = . expression "+" expression, FOLLOW [203] -> GOTO 191
	expression/L8 = . expression "-" expression, FOLLOW [203] -> GOTO 191
	expression/L9 = . expression "*" expression, FOLLOW [203] -> GOTO 191
	expression/L9 = . expression "/" expression, FOLLOW [203] -> GOTO 191
	expression/L9 = . expression "%" expression, FOLLOW [203] -> GOTO 191
	expression/L10 = . expression "<<" expression, FOLLOW [203] -> GOTO 191
	expression/L10 = . expression ">>" expression, FOLLOW [203] -> GOTO 191
	expression/L11 = . expression "." IDENT, FOLLOW [203] -> GOTO 191
	expression/L12 = . expression "(" expressionlist ")", FOLLOW [203] -> GOTO 191
	expression/L12 = . expression "(" ")", FOLLOW [203] -> GOTO 191
	expression/L12 = . expression "[" expressionlist "]", FOLLOW [203] -> GOTO 191
	iexpression = . expression indirection IDENT, FOLLOW [203] -> GOTO 191
	expression/L11 = . iexpression, FOLLOW [203] -> GOTO 69
	expression/L1 = . BOOLEAN, FOLLOW [203] -> SHIFT BOOLEAN GOTO 70
	expression/L1 = . IDENT, FOLLOW [203] -> SHIFT IDENT GOTO 71
	expression/L1 = . DQSTRING, FOLLOW [203] -> SHIFT DQSTRING GOTO 72
	expression/L1 = . SQSTRING, FOLLOW [203] -> SHIFT SQSTRING GOTO 73
	expression/L1 = . CARDINAL, FOLLOW [203] -> SHIFT CARDINAL GOTO 74
	expression/L1 = . INTEGER, FOLLOW [203] -> SHIFT INTEGER GOTO 75
	expression/L1 = . FLOAT, FOLLOW [203] -> SHIFT FLOAT GOTO 76
	expression/L1 = . "(" expression ")", FOLLOW [203] -> SHIFT '(' GOTO 77
	expression/L8 = . "&" expression, FOLLOW [203] -> SHIFT '&' GOTO 79
	expression/L8 = . "+" expression, FOLLOW [203] -> SHIFT '+' GOTO 84
	expression/L8 = . "-" expression, FOLLOW [203] -> SHIFT '-' GOTO 85
	expression/L8 = . "~" expression, FOLLOW [203] -> SHIFT '~' GOTO 86
	expression/L8 = . "!" expression, FOLLOW [203] -> SHIFT '!' GOTO 87
	expression/L11 = . "*" expression, FOLLOW [203] -> SHIFT '*' GOTO 88
[125]
	expression/L2 = . expression "=" expression, FOLLOW [203] -> GOTO 192
	expression/L2 = . expression "+=" expression, FOLLOW [203] -> GOTO 192
	expression/L2 = . expression "-=" expression, FOLLOW [203] -> GOTO 192
	expression/L2 = . expression "*=" expression, FOLLOW [203] -> GOTO 192
	expression/L2 = . expression "/=" expression, FOLLOW [203] -> GOTO 192
	expression/L2 = . expression "%=" expression, FOLLOW [203] -> GOTO 192
	expression/L2 = . expression "&&=" expression, FOLLOW [203] -> GOTO 192
	expression/L2 = . expression "||=" expression, FOLLOW [203] -> GOTO 192
	expression/L2 = . expression "&=" expression, FOLLOW [203] -> GOTO 192
	expression/L2 = . expression "|=" expression, FOLLOW [203] -> GOTO 192
	expression/L2 = . expression "<<=" expression, FOLLOW [203] -> GOTO 192
	expression/L2 = expression "<<=" . expression, FOLLOW [203] -> GOTO 192
	expression/L2 = . expression ">>=" expression, FOLLOW [203] -> GOTO 192
	expression/L3 = . expression "||" expression, FOLLOW [203] -> GOTO 192
	expression/L4 = . expression "&&" expression, FOLLOW [203] -> GOTO 192
	expression/L5 = . expression "|" expression, FOLLOW [203] -> GOTO 192
	expression/L6 = . expression "^" expression, FOLLOW [203] -> GOTO 192
	expression/L6 = . expression "&" expression, FOLLOW [203] -> GOTO 192
	expression/L7 = . expression "==" expression, FOLLOW [203] -> GOTO 192
	expression/L7 = . expression "!=" expression, FOLLOW [203] -> GOTO 192
	expression/L7 = . expression "<=" expression, FOLLOW [203] -> GOTO 192
	expression/L7 = . expression "<" expression, FOLLOW [203] -> GOTO 192
	expression/L7 = . expression ">=" expression, FOLLOW [203] -> GOTO 192
	expression/L7 = . expression ">" expression, FOLLOW [203] -> GOTO 192
	expression/L8 = . expression "+" expression, FOLLOW [203] -> GOTO 192
	expression/L8 = . expression "-" expression, FOLLOW [203] -> GOTO 192
	expression/L9 = . expression "*" expression, FOLLOW [203] -> GOTO 192
	expression/L9 = . expression "/" expression, FOLLOW [203] -> GOTO 192
	expression/L9 = . expression "%" expression, FOLLOW [203] -> GOTO 192
	expression/L10 = . expression "<<" expression, FOLLOW [203] -> GOTO 192
	expression/L10 = . expression ">>" expression, FOLLOW [203] -> GOTO 192
	expression/L11 = . expression "." IDENT, FOLLOW [203] -> GOTO 192
	expression/L12 = . expression "(" expressionlist ")", FOLLOW [203] -> GOTO 192
	expression/L12 = . expression "(" ")", FOLLOW [203] -> GOTO 192
	expression/L12 = . expression "[" expressionlist "]", FOLLOW [203] -> GOTO 192
	iexpression = . expression indirection IDENT, FOLLOW [203] -> GOTO 192
	expression/L11 = . iexpression, FOLLOW [203] -> GOTO 69
	expression/L1 = . BOOLEAN, FOLLOW [203] -> SHIFT BOOLEAN GOTO 70
	expression/L1 = . IDENT, FOLLOW [203] -> SHIFT IDENT GOTO 71
	expression/L1 = . DQSTRING, FOLLOW [203] -> SHIFT DQSTRING GOTO 72
	expression/L1 = . SQSTRING, FOLLOW [203] -> SHIFT SQSTRING GOTO 73
	expression/L1 = . CARDINAL, FOLLOW [203] -> SHIFT CARDINAL GOTO 74
	expression/L1 = . INTEGER, FOLLOW [203] -> SHIFT INTEGER GOTO 75
	expression/L1 = . FLOAT, FOLLOW [203] -> SHIFT FLOAT GOTO 76
	expression/L1 = . "(" expression ")", FOLLOW [203] -> SHIFT '(' GOTO 77
	expression/L8 = . "&" expression, FOLLOW [203] -> SHIFT '&' GOTO 79
	expression/L8 = . "+" expression, FOLLOW [203] -> SHIFT '+' GOTO 84
	expression/L8 = . "-" expression, FOLLOW [203] -> SHIFT '-' GOTO 85
	expression/L8 = . "~" expression, FOLLOW [203] -> SHIFT '~' GOTO 86
	expression/L8 = . "!" expression, FOLLOW [203] -> SHIFT '!' GOTO 87
	expression/L11 = . "*" expression, FOLLOW [203] -> SHIFT '*' GOTO 88
[126]
	expression/L2 = . expression "=" expression, FOLLOW [203] -> GOTO 193
	expression/L2 = . expression "+=" expression, FOLLOW [203] -> GOTO 193
	expression/L2 = . expression "-=" expression, FOLLOW [203] -> GOTO 193
	expression/L2 = . expression "*=" expression, FOLLOW [203] -> GOTO 193
	expression/L2 = . expression "/=" expression, FOLLOW [203] -> GOTO 193
	expression/L2 = . expression "%=" expression, FOLLOW [203] -> GOTO 193
	expression/L2 = . expression "&&=" expression, FOLLOW [203] -> GOTO 193
	expression/L2 = . expression "||=" expression, FOLLOW [203] -> GOTO 193
	expression/L2 = . expression "&=" expression, FOLLOW [203] -> GOTO 193
	expression/L2 = . expression "|=" expression, FOLLOW [203] -> GOTO 193
	expression/L2 = . expression "<<=" expression, FOLLOW [203] -> GOTO 193
	expression/L2 = . expression ">>=" expression, FOLLOW [203] -> GOTO 193
	expression/L2 = expression ">>=" . expression, FOLLOW [203] -> GOTO 193
	expression/L3 = . expression "||" expression, FOLLOW [203] -> GOTO 193
	expression/L4 = . expression "&&" expression, FOLLOW [203] -> GOTO 193
	expression/L5 = . expression "|" expression, FOLLOW [203] -> GOTO 193
	expression/L6 = . expression "^" expression, FOLLOW [203] -> GOTO 193
	expression/L6 = . expression "&" expression, FOLLOW [203] -> GOTO 193
	expression/L7 = . expression "==" expression, FOLLOW [203] -> GOTO 193
	expression/L7 = . expression "!=" expression, FOLLOW [203] -> GOTO 193
	expression/L7 = . expression "<=" expression, FOLLOW [203] -> GOTO 193
	expression/L7 = . expression "<" expression, FOLLOW [203] -> GOTO 193
	expression/L7 = . expression ">=" expression, FOLLOW [203] -> GOTO 193
	expression/L7 = . expression ">" expression, FOLLOW [203] -> GOTO 193
	expression/L8 = . expression "+" expression, FOLLOW [203] -> GOTO 193
	expression/L8 = . expression "-" expression, FOLLOW [203] -> GOTO 193
	expression/L9 = . expression "*" expression, FOLLOW [203] -> GOTO 193
	expression/L9 = . expression "/" expression, FOLLOW [203] -> GOTO 193
	expression/L9 = . expression "%" expression, FOLLOW [203] -> GOTO 193
	expression/L10 = . expression "<<" expression, FOLLOW [203] -> GOTO 193
	expression/L10 = . expression ">>" expression, FOLLOW [203] -> GOTO 193
	expression/L11 = . expression "." IDENT, FOLLOW [203] -> GOTO 193
	expression/L12 = . expression "(" expressionlist ")", FOLLOW [203] -> GOTO 193
	expression/L12 = . expression "(" ")", FOLLOW [203] -> GOTO 193
	expression/L12 = . expression "[" expressionlist "]", FOLLOW [203] -> GOTO 193
	iexpression = . expression indirection IDENT, FOLLOW [203] -> GOTO 193
	expression/L11 = . iexpression, FOLLOW [203] -> GOTO 69
	expression/L1 = . BOOLEAN, FOLLOW [203] -> SHIFT BOOLEAN GOTO 70
	expression/L1 = . IDENT, FOLLOW [203] -> SHIFT IDENT GOTO 71
	expression/L1 = . DQSTRING, FOLLOW [203] -> SHIFT DQSTRING GOTO 72
	expression/L1 = . SQSTRING, FOLLOW [203] -> SHIFT SQSTRING GOTO 73
	expression/L1 = . CARDINAL, FOLLOW [203] -> SHIFT CARDINAL GOTO 74
	expression/L1 = . INTEGER, FOLLOW [203] -> SHIFT INTEGER GOTO 75
	expression/L1 = . FLOAT, FOLLOW [203] -> SHIFT FLOAT GOTO 76
	expression/L1 = . "(" expression ")", FOLLOW [203] -> SHIFT '(' GOTO 77
	expression/L8 = . "&" expression, FOLLOW [203] -> SHIFT '&' GOTO 79
	expression/L8 = . "+" expression, FOLLOW [203] -> SHIFT '+' GOTO 84
	expression/L8 = . "-" expression, FOLLOW [203] -> SHIFT '-' GOTO 85
	expression/L8 = . "~" expression, FOLLOW [203] -> SHIFT '~' GOTO 86
	expression/L8 = . "!" expression, FOLLOW [203] -> SHIFT '!' GOTO 87
	expression/L11 = . "*" expression, FOLLOW [203] -> SHIFT '*' GOTO 88
[127]
	expression/L2 = . expression "=" expression, FOLLOW [203] -> GOTO 194
	expression/L2 = . expression "+=" expression, FOLLOW [203] -> GOTO 194
	expression/L2 = . expression "-=" expression, FOLLOW [203] -> GOTO 194
	expression/L2 = . expression "*=" expression, FOLLOW [203] -> GOTO 194
	expression/L2 = . expression "/=" expression, FOLLOW [203] -> GOTO 194
	expression/L2 = . expression "%=" expression, FOLLOW [203] -> GOTO 194
	expression/L2 = . expression "&&=" expression, FOLLOW [203] -> GOTO 194
	expression/L2 = . expression "||=" expression, FOLLOW [203] -> GOTO 194
	expression/L2 = . expression "&=" expression, FOLLOW [203] -> GOTO 194
	expression/L2 = . expression "|=" expression, FOLLOW [203] -> GOTO 194
	expression/L2 = . expression "<<=" expression, FOLLOW [203] -> GOTO 194
	expression/L2 = . expression ">>=" expression, FOLLOW [203] -> GOTO 194
	expression/L3 = . expression "||" expression, FOLLOW [203] -> GOTO 194
	expression/L3 = expression "||" . expression, FOLLOW [203] -> GOTO 194
	expression/L4 = . expression "&&" expression, FOLLOW [203] -> GOTO 194
	expression/L5 = . expression "|" expression, FOLLOW [203] -> GOTO 194
	expression/L6 = . expression "^" expression, FOLLOW [203] -> GOTO 194
	expression/L6 = . expression "&" expression, FOLLOW [203] -> GOTO 194
	expression/L7 = . expression "==" expression, FOLLOW [203] -> GOTO 194
	expression/L7 = . expression "!=" expression, FOLLOW [203] -> GOTO 194
	expression/L7 = . expression "<=" expression, FOLLOW [203] -> GOTO 194
	expression/L7 = . expression "<" expression, FOLLOW [203] -> GOTO 194
	expression/L7 = . expression ">=" expression, FOLLOW [203] -> GOTO 194
	expression/L7 = . expression ">" expression, FOLLOW [203] -> GOTO 194
	expression/L8 = . expression "+" expression, FOLLOW [203] -> GOTO 194
	expression/L8 = . expression "-" expression, FOLLOW [203] -> GOTO 194
	expression/L9 = . expression "*" expression, FOLLOW [203] -> GOTO 194
	expression/L9 = . expression "/" expression, FOLLOW [203] -> GOTO 194
	expression/L9 = . expression "%" expression, FOLLOW [203] -> GOTO 194
	expression/L10 = . expression "<<" expression, FOLLOW [203] -> GOTO 194
	expression/L10 = . expression ">>" expression, FOLLOW [203] -> GOTO 194
	expression/L11 = . expression "." IDENT, FOLLOW [203] -> GOTO 194
	expression/L12 = . expression "(" expressionlist ")", FOLLOW [203] -> GOTO 194
	expression/L12 = . expression "(" ")", FOLLOW [203] -> GOTO 194
	expression/L12 = . expression "[" expressionlist "]", FOLLOW [203] -> GOTO 194
	iexpression = . expression indirection IDENT, FOLLOW [203] -> GOTO 194
	expression/L11 = . iexpression, FOLLOW [203] -> GOTO 69
	expression/L1 = . BOOLEAN, FOLLOW [203] -> SHIFT BOOLEAN GOTO 70
	expression/L1 = . IDENT, FOLLOW [203] -> SHIFT IDENT GOTO 71
	expression/L1 = . DQSTRING, FOLLOW [203] -> SHIFT DQSTRING GOTO 72
	expression/L1 = . SQSTRING, FOLLOW [203] -> SHIFT SQSTRING GOTO 73
	expression/L1 = . CARDINAL, FOLLOW [203] -> SHIFT CARDINAL GOTO 74
	expression/L1 = . INTEGER, FOLLOW [203] -> SHIFT INTEGER GOTO 75
	expression/L1 = . FLOAT, FOLLOW [203] -> SHIFT FLOAT GOTO 76
	expression/L1 = . "(" expression ")", FOLLOW [203] -> SHIFT '(' GOTO 77
	expression/L8 = . "&" expression, FOLLOW [203] -> SHIFT '&' GOTO 79
	expression/L8 = . "+" expression, FOLLOW [203] -> SHIFT '+' GOTO 84
	expression/L8 = . "-" expression, FOLLOW [203] -> SHIFT '-' GOTO 85
	expression/L8 = . "~" expression, FOLLOW [203] -> SHIFT '~' GOTO 86
	expression/L8 = . "!" expression, FOLLOW [203] -> SHIFT '!' GOTO 87
	expression/L11 = . "*" expression, FOLLOW [203] -> SHIFT '*' GOTO 88
[128]
	expression/L2 = . expression "=" expression, FOLLOW [203] -> GOTO 195
	expression/L2 = . expression "+=" expression, FOLLOW [203] -> GOTO 195
	expression/L2 = . expression "-=" expression, FOLLOW [203] -> GOTO 195
	expression/L2 = . expression "*=" expression, FOLLOW [203] -> GOTO 195
	expression/L2 = . expression "/=" expression, FOLLOW [203] -> GOTO 195
	expression/L2 = . expression "%=" expression, FOLLOW [203] -> GOTO 195
	expression/L2 = . expression "&&=" expression, FOLLOW [203] -> GOTO 195
	expression/L2 = . expression "||=" expression, FOLLOW [203] -> GOTO 195
	expression/L2 = . expression "&=" expression, FOLLOW [203] -> GOTO 195
	expression/L2 = . expression "|=" expression, FOLLOW [203] -> GOTO 195
	expression/L2 = . expression "<<=" expression, FOLLOW [203] -> GOTO 195
	expression/L2 = . expression ">>=" expression, FOLLOW [203] -> GOTO 195
	expression/L3 = . expression "||" expression, FOLLOW [203] -> GOTO 195
	expression/L4 = . expression "&&" expression, FOLLOW [203] -> GOTO 195
	expression/L4 = expression "&&" . expression, FOLLOW [203] -> GOTO 195
	expression/L5 = . expression "|" expression, FOLLOW [203] -> GOTO 195
	expression/L6 = . expression "^" expression, FOLLOW [203] -> GOTO 195
	expression/L6 = . expression "&" expression, FOLLOW [203] -> GOTO 195
	expression/L7 = . expression "==" expression, FOLLOW [203] -> GOTO 195
	expression/L7 = . expression "!=" expression, FOLLOW [203] -> GOTO 195
	expression/L7 = . expression "<=" expression, FOLLOW [203] -> GOTO 195
	expression/L7 = . expression "<" expression, FOLLOW [203] -> GOTO 195
	expression/L7 = . expression ">=" expression, FOLLOW [203] -> GOTO 195
	expression/L7 = . expression ">" expression, FOLLOW [203] -> GOTO 195
	expression/L8 = . expression "+" expression, FOLLOW [203] -> GOTO 195
	expression/L8 = . expression "-" expression, FOLLOW [203] -> GOTO 195
	expression/L9 = . expression "*" expression, FOLLOW [203] -> GOTO 195
	expression/L9 = . expression "/" expression, FOLLOW [203] -> GOTO 195
	expression/L9 = . expression "%" expression, FOLLOW [203] -> GOTO 195
	expression/L10 = . expression "<<" expression, FOLLOW [203] -> GOTO 195
	expression/L10 = . expression ">>" expression, FOLLOW [203] -> GOTO 195
	expression/L11 = . expression "." IDENT, FOLLOW [203] -> GOTO 195
	expression/L12 = . expression "(" expressionlist ")", FOLLOW [203] -> GOTO 195
	expression/L12 = . expression "(" ")", FOLLOW [203] -> GOTO 195
	expression/L12 = . expression "[" expressionlist "]", FOLLOW [203] -> GOTO 195
	iexpression = . expression indirection IDENT, FOLLOW [203] -> GOTO 195
	expression/L11 = . iexpression, FOLLOW [203] -> GOTO 69
	expression/L1 = . BOOLEAN, FOLLOW [203] -> SHIFT BOOLEAN GOTO 70
	expression/L1 = . IDENT, FOLLOW [203] -> SHIFT IDENT GOTO 71
	expression/L1 = . DQSTRING, FOLLOW [203] -> SHIFT DQSTRING GOTO 72
	expression/L1 = . SQSTRING, FOLLOW [203] -> SHIFT SQSTRING GOTO 73
	expression/L1 = . CARDINAL, FOLLOW [203] -> SHIFT CARDINAL GOTO 74
	expression/L1 = . INTEGER, FOLLOW [203] -> SHIFT INTEGER GOTO 75
	expression/L1 = . FLOAT, FOLLOW [203] -> SHIFT FLOAT GOTO 76
	expression/L1 = . "(" expression ")", FOLLOW [203] -> SHIFT '(' GOTO 77
	expression/L8 = . "&" expression, FOLLOW [203] -> SHIFT '&' GOTO 79
	expression/L8 = . "+" expression, FOLLOW [203] -> SHIFT '+' GOTO 84
	expression/L8 = . "-" expression, FOLLOW [203] -> SHIFT '-' GOTO 85
	expression/L8 = . "~" expression, FOLLOW [203] -> SHIFT '~' GOTO 86
	expression/L8 = . "!" expression, FOLLOW [203] -> SHIFT '!' GOTO 87
	expression/L11 = . "*" expression, FOLLOW [203] -> SHIFT '*' GOTO 88
[129]
	expression/L2 = . expression "=" expression, FOLLOW [203] -> GOTO 196
	expression/L2 = . expression "+=" expression, FOLLOW [203] -> GOTO 196
	expression/L2 = . expression "-=" expression, FOLLOW [203] -> GOTO 196
	expression/L2 = . expression "*=" expression, FOLLOW [203] -> GOTO 196
	expression/L2 = . expression "/=" expression, FOLLOW [203] -> GOTO 196
	expression/L2 = . expression "%=" expression, FOLLOW [203] -> GOTO 196
	expression/L2 = . expression "&&=" expression, FOLLOW [203] -> GOTO 196
	expression/L2 = . expression "||=" expression, FOLLOW [203] -> GOTO 196
	expression/L2 = . expression "&=" expression, FOLLOW [203] -> GOTO 196
	expression/L2 = . expression "|=" expression, FOLLOW [203] -> GOTO 196
	expression/L2 = . expression "<<=" expression, FOLLOW [203] -> GOTO 196
	expression/L2 = . expression ">>=" expression, FOLLOW [203] -> GOTO 196
	expression/L3 = . expression "||" expression, FOLLOW [203] -> GOTO 196
	expression/L4 = . expression "&&" expression, FOLLOW [203] -> GOTO 196
	expression/L5 = . expression "|" expression, FOLLOW [203] -> GOTO 196
	expression/L5 = expression "|" . expression, FOLLOW [203] -> GOTO 196
	expression/L6 = . expression "^" expression, FOLLOW [203] -> GOTO 196
	expression/L6 = . expression "&" expression, FOLLOW [203] -> GOTO 196
	expression/L7 = . expression "==" expression, FOLLOW [203] -> GOTO 196
	expression/L7 = . expression "!=" expression, FOLLOW [203] -> GOTO 196
	expression/L7 = . expression "<=" expression, FOLLOW [203] -> GOTO 196
	expression/L7 = . expression "<" expression, FOLLOW [203] -> GOTO 196
	expression/L7 = . expression ">=" expression, FOLLOW [203] -> GOTO 196
	expression/L7 = . expression ">" expression, FOLLOW [203] -> GOTO 196
	expression/L8 = . expression "+" expression, FOLLOW [203] -> GOTO 196
	expression/L8 = . expression "-" expression, FOLLOW [203] -> GOTO 196
	expression/L9 = . expression "*" expression, FOLLOW [203] -> GOTO 196
	expression/L9 = . expression "/" expression, FOLLOW [203] -> GOTO 196
	expression/L9 = . expression "%" expression, FOLLOW [203] -> GOTO 196
	expression/L10 = . expression "<<" expression, FOLLOW [203] -> GOTO 196
	expression/L10 = . expression ">>" expression, FOLLOW [203] -> GOTO 196
	expression/L11 = . expression "." IDENT, FOLLOW [203] -> GOTO 196
	expression/L12 = . expression "(" expressionlist ")", FOLLOW [203] -> GOTO 196
	expression/L12 = . expression "(" ")", FOLLOW [203] -> GOTO 196
	expression/L12 = . expression "[" expressionlist "]", FOLLOW [203] -> GOTO 196
	iexpression = . expression indirection IDENT, FOLLOW [203] -> GOTO 196
	expression/L11 = . iexpression, FOLLOW [203] -> GOTO 69
	expression/L1 = . BOOLEAN, FOLLOW [203] -> SHIFT BOOLEAN GOTO 70
	expression/L1 = . IDENT, FOLLOW [203] -> SHIFT IDENT GOTO 71
	expression/L1 = . DQSTRING, FOLLOW [203] -> SHIFT DQSTRING GOTO 72
	expression/L1 = . SQSTRING, FOLLOW [203] -> SHIFT SQSTRING GOTO 73
	expression/L1 = . CARDINAL, FOLLOW [203] -> SHIFT CARDINAL GOTO 74
	expression/L1 = . INTEGER, FOLLOW [203] -> SHIFT INTEGER GOTO 75
	expression/L1 = . FLOAT, FOLLOW [203] -> SHIFT FLOAT GOTO 76
	expression/L1 = . "(" expression ")", FOLLOW [203] -> SHIFT '(' GOTO 77
	expression/L8 = . "&" expression, FOLLOW [203] -> SHIFT '&' GOTO 79
	expression/L8 = . "+" expression, FOLLOW [203] -> SHIFT '+' GOTO 84
	expression/L8 = . "-" expression, FOLLOW [203] -> SHIFT '-' GOTO 85
	expression/L8 = . "~" expression, FOLLOW [203] -> SHIFT '~' GOTO 86
	expression/L8 = . "!" expression, FOLLOW [203] -> SHIFT '!' GOTO 87
	expression/L11 = . "*" expression, FOLLOW [203] -> SHIFT '*' GOTO 88
[130]
	expression/L2 = . expression "=" expression, FOLLOW [203] -> GOTO 197
	expression/L2 = . expression "+=" expression, FOLLOW [203] -> GOTO 197
	expression/L2 = . expression "-=" expression, FOLLOW [203] -> GOTO 197
	expression/L2 = . expression "*=" expression, FOLLOW [203] -> GOTO 197
	expression/L2 = . expression "/=" expression, FOLLOW [203] -> GOTO 197
	expression/L2 = . expression "%=" expression, FOLLOW [203] -> GOTO 197
	expression/L2 = . expression "&&=" expression, FOLLOW [203] -> GOTO 197
	expression/L2 = . expression "||=" expression, FOLLOW [203] -> GOTO 197
	expression/L2 = . expression "&=" expression, FOLLOW [203] -> GOTO 197
	expression/L2 = . expression "|=" expression, FOLLOW [203] -> GOTO 197
	expression/L2 = . expression "<<=" expression, FOLLOW [203] -> GOTO 197
	expression/L2 = . expression ">>=" expression, FOLLOW [203] -> GOTO 197
	expression/L3 = . expression "||" expression, FOLLOW [203] -> GOTO 197
	expression/L4 = . expression "&&" expression, FOLLOW [203] -> GOTO 197
	expression/L5 = . expression "|" expression, FOLLOW [203] -> GOTO 197
	expression/L6 = . expression "^" expression, FOLLOW [203] -> GOTO 197
	expression/L6 = . expression "&" expression, FOLLOW [203] -> GOTO 197
	expression/L7 = . expression "==" expression, FOLLOW [203] -> GOTO 197
	expression/L7 = expression "==" . expression, FOLLOW [203] -> GOTO 197
	expression/L7 = . expression "!=" expression, FOLLOW [203] -> GOTO 197
	expression/L7 = . expression "<=" expression, FOLLOW [203] -> GOTO 197
	expression/L7 = . expression "<" expression, FOLLOW [203] -> GOTO 197
	expression/L7 = . expression ">=" expression, FOLLOW [203] -> GOTO 197
	expression/L7 = . expression ">" expression, FOLLOW [203] -> GOTO 197
	expression/L8 = . expression "+" expression, FOLLOW [203] -> GOTO 197
	expression/L8 = . expression "-" expression, FOLLOW [203] -> GOTO 197
	expression/L9 = . expression "*" expression, FOLLOW [203] -> GOTO 197
	expression/L9 = . expression "/" expression, FOLLOW [203] -> GOTO 197
	expression/L9 = . expression "%" expression, FOLLOW [203] -> GOTO 197
	expression/L10 = . expression "<<" expression, FOLLOW [203] -> GOTO 197
	expression/L10 = . expression ">>" expression, FOLLOW [203] -> GOTO 197
	expression/L11 = . expression "." IDENT, FOLLOW [203] -> GOTO 197
	expression/L12 = . expression "(" expressionlist ")", FOLLOW [203] -> GOTO 197
	expression/L12 = . expression "(" ")", FOLLOW [203] -> GOTO 197
	expression/L12 = . expression "[" expressionlist "]", FOLLOW [203] -> GOTO 197
	iexpression = . expression indirection IDENT, FOLLOW [203] -> GOTO 197
	expression/L11 = . iexpression, FOLLOW [203] -> GOTO 69
	expression/L1 = . BOOLEAN, FOLLOW [203] -> SHIFT BOOLEAN GOTO 70
	expression/L1 = . IDENT, FOLLOW [203] -> SHIFT IDENT GOTO 71
	expression/L1 = . DQSTRING, FOLLOW [203] -> SHIFT DQSTRING GOTO 72
	expression/L1 = . SQSTRING, FOLLOW [203] -> SHIFT SQSTRING GOTO 73
	expression/L1 = . CARDINAL, FOLLOW [203] -> SHIFT CARDINAL GOTO 74
	expression/L1 = . INTEGER, FOLLOW [203] -> SHIFT INTEGER GOTO 75
	expression/L1 = . FLOAT, FOLLOW [203] -> SHIFT FLOAT GOTO 76
	expression/L1 = . "(" expression ")", FOLLOW [203] -> SHIFT '(' GOTO 77
	expression/L8 = . "&" expression, FOLLOW [203] -> SHIFT '&' GOTO 79
	expression/L8 = . "+" expression, FOLLOW [203] -> SHIFT '+' GOTO 84
	expression/L8 = . "-" expression, FOLLOW [203] -> SHIFT '-' GOTO 85
	expression/L8 = . "~" expression, FOLLOW [203] -> SHIFT '~' GOTO 86
	expression/L8 = . "!" expression, FOLLOW [203] -> SHIFT '!' GOTO 87
	expression/L11 = . "*" expression, FOLLOW [203] -> SHIFT '*' GOTO 88
[131]
	expression/L2 = . expression "=" expression, FOLLOW [203] -> GOTO 198
	expression/L2 = . expression "+=" expression, FOLLOW [203] -> GOTO 198
	expression/L2 = . expression "-=" expression, FOLLOW [203] -> GOTO 198
	expression/L2 = . expression "*=" expression, FOLLOW [203] -> GOTO 198
	expression/L2 = . expression "/=" expression, FOLLOW [203] -> GOTO 198
	expression/L2 = . expression "%=" expression, FOLLOW [203] -> GOTO 198
	expression/L2 = . expression "&&=" expression, FOLLOW [203] -> GOTO 198
	expression/L2 = . expression "||=" expression, FOLLOW [203] -> GOTO 198
	expression/L2 = . expression "&=" expression, FOLLOW [203] -> GOTO 198
	expression/L2 = . expression "|=" expression, FOLLOW [203] -> GOTO 198
	expression/L2 = . expression "<<=" expression, FOLLOW [203] -> GOTO 198
	expression/L2 = . expression ">>=" expression, FOLLOW [203] -> GOTO 198
	expression/L3 = . expression "||" expression, FOLLOW [203] -> GOTO 198
	expression/L4 = . expression "&&" expression, FOLLOW [203] -> GOTO 198
	expression/L5 = . expression "|" expression, FOLLOW [203] -> GOTO 198
	expression/L6 = . expression "^" expression, FOLLOW [203] -> GOTO 198
	expression/L6 = . expression "&" expression, FOLLOW [203] -> GOTO 198
	expression/L7 = . expression "==" expression, FOLLOW [203] -> GOTO 198
	expression/L7 = . expression "!=" expression, FOLLOW [203] -> GOTO 198
	expression/L7 = expression "!=" . expression, FOLLOW [203] -> GOTO 198
	expression/L7 = . expression "<=" expression, FOLLOW [203] -> GOTO 198
	expression/L7 = . expression "<" expression, FOLLOW [203] -> GOTO 198
	expression/L7 = . expression ">=" expression, FOLLOW [203] -> GOTO 198
	expression/L7 = . expression ">" expression, FOLLOW [203] -> GOTO 198
	expression/L8 = . expression "+" expression, FOLLOW [203] -> GOTO 198
	expression/L8 = . expression "-" expression, FOLLOW [203] -> GOTO 198
	expression/L9 = . expression "*" expression, FOLLOW [203] -> GOTO 198
	expression/L9 = . expression "/" expression, FOLLOW [203] -> GOTO 198
	expression/L9 = . expression "%" expression, FOLLOW [203] -> GOTO 198
	expression/L10 = . expression "<<" expression, FOLLOW [203] -> GOTO 198
	expression/L10 = . expression ">>" expression, FOLLOW [203] -> GOTO 198
	expression/L11 = . expression "." IDENT, FOLLOW [203] -> GOTO 198
	expression/L12 = . expression "(" expressionlist ")", FOLLOW [203] -> GOTO 198
	expression/L12 = . expression "(" ")", FOLLOW [203] -> GOTO 198
	expression/L12 = . expression "[" expressionlist "]", FOLLOW [203] -> GOTO 198
	iexpression = . expression indirection IDENT, FOLLOW [203] -> GOTO 198
	expression/L11 = . iexpression, FOLLOW [203] -> GOTO 69
	expression/L1 = . BOOLEAN, FOLLOW [203] -> SHIFT BOOLEAN GOTO 70
	expression/L1 = . IDENT, FOLLOW [203] -> SHIFT IDENT GOTO 71
	expression/L1 = . DQSTRING, FOLLOW [203] -> SHIFT DQSTRING GOTO 72
	expression/L1 = . SQSTRING, FOLLOW [203] -> SHIFT SQSTRING GOTO 73
	expression/L1 = . CARDINAL, FOLLOW [203] -> SHIFT CARDINAL GOTO 74
	expression/L1 = . INTEGER, FOLLOW [203] -> SHIFT INTEGER GOTO 75
	expression/L1 = . FLOAT, FOLLOW [203] -> SHIFT FLOAT GOTO 76
	expression/L1 = . "(" expression ")", FOLLOW [203] -> SHIFT '(' GOTO 77
	expression/L8 = . "&" expression, FOLLOW [203] -> SHIFT '&' GOTO 79
	expression/L8 = . "+" expression, FOLLOW [203] -> SHIFT '+' GOTO 84
	expression/L8 = . "-" expression, FOLLOW [203] -> SHIFT '-' GOTO 85
	expression/L8 = . "~" expression, FOLLOW [203] -> SHIFT '~' GOTO 86
	expression/L8 = . "!" expression, FOLLOW [203] -> SHIFT '!' GOTO 87
	expression/L11 = . "*" expression, FOLLOW [203] -> SHIFT '*' GOTO 88
[132]
	expression/L2 = . expression "=" expression, FOLLOW [203] -> GOTO 199
	expression/L2 = . expression "+=" expression, FOLLOW [203] -> GOTO 199
	expression/L2 = . expression "-=" expression, FOLLOW [203] -> GOTO 199
	expression/L2 = . expression "*=" expression, FOLLOW [203] -> GOTO 199
	expression/L2 = . expression "/=" expression, FOLLOW [203] -> GOTO 199
	expression/L2 = . expression "%=" expression, FOLLOW [203] -> GOTO 199
	expression/L2 = . expression "&&=" expression, FOLLOW [203] -> GOTO 199
	expression/L2 = . expression "||=" expression, FOLLOW [203] -> GOTO 199
	expression/L2 = . expression "&=" expression, FOLLOW [203] -> GOTO 199
	expression/L2 = . expression "|=" expression, FOLLOW [203] -> GOTO 199
	expression/L2 = . expression "<<=" expression, FOLLOW [203] -> GOTO 199
	expression/L2 = . expression ">>=" expression, FOLLOW [203] -> GOTO 199
	expression/L3 = . expression "||" expression, FOLLOW [203] -> GOTO 199
	expression/L4 = . expression "&&" expression, FOLLOW [203] -> GOTO 199
	expression/L5 = . expression "|" expression, FOLLOW [203] -> GOTO 199
	expression/L6 = . expression "^" expression, FOLLOW [203] -> GOTO 199
	expression/L6 = . expression "&" expression, FOLLOW [203] -> GOTO 199
	expression/L7 = . expression "==" expression, FOLLOW [203] -> GOTO 199
	expression/L7 = . expression "!=" expression, FOLLOW [203] -> GOTO 199
	expression/L7 = . expression "<=" expression, FOLLOW [203] -> GOTO 199
	expression/L7 = expression "<=" . expression, FOLLOW [203] -> GOTO 199
	expression/L7 = . expression "<" expression, FOLLOW [203] -> GOTO 199
	expression/L7 = . expression ">=" expression, FOLLOW [203] -> GOTO 199
	expression/L7 = . expression ">" expression, FOLLOW [203] -> GOTO 199
	expression/L8 = . expression "+" expression, FOLLOW [203] -> GOTO 199
	expression/L8 = . expression "-" expression, FOLLOW [203] -> GOTO 199
	expression/L9 = . expression "*" expression, FOLLOW [203] -> GOTO 199
	expression/L9 = . expression "/" expression, FOLLOW [203] -> GOTO 199
	expression/L9 = . expression "%" expression, FOLLOW [203] -> GOTO 199
	expression/L10 = . expression "<<" expression, FOLLOW [203] -> GOTO 199
	expression/L10 = . expression ">>" expression, FOLLOW [203] -> GOTO 199
	expression/L11 = . expression "." IDENT, FOLLOW [203] -> GOTO 199
	expression/L12 = . expression "(" expressionlist ")", FOLLOW [203] -> GOTO 199
	expression/L12 = . expression "(" ")", FOLLOW [203] -> GOTO 199
	expression/L12 = . expression "[" expressionlist "]", FOLLOW [203] -> GOTO 199
	iexpression = . expression indirection IDENT, FOLLOW [203] -> GOTO 199
	expression/L11 = . iexpression, FOLLOW [203] -> GOTO 69
	expression/L1 = . BOOLEAN, FOLLOW [203] -> SHIFT BOOLEAN GOTO 70
	expression/L1 = . IDENT, FOLLOW [203] -> SHIFT IDENT GOTO 71
	expression/L1 = . DQSTRING, FOLLOW [203] -> SHIFT DQSTRING GOTO 72
	expression/L1 = . SQSTRING, FOLLOW [203] -> SHIFT SQSTRING GOTO 73
	expression/L1 = . CARDINAL, FOLLOW [203] -> SHIFT CARDINAL GOTO 74
	expression/L1 = . INTEGER, FOLLOW [203] -> SHIFT INTEGER GOTO 75
	expression/L1 = . FLOAT, FOLLOW [203] -> SHIFT FLOAT GOTO 76
	expression/L1 = . "(" expression ")", FOLLOW [203] -> SHIFT '(' GOTO 77
	expression/L8 = . "&" expression, FOLLOW [203] -> SHIFT '&' GOTO 79
	expression/L8 = . "+" expression, FOLLOW [203] -> SHIFT '+' GOTO 84
	expression/L8 = . "-" expression, FOLLOW [203] -> SHIFT '-' GOTO 85
	expression/L8 = . "~" expression, FOLLOW [203] -> SHIFT '~' GOTO 86
	expression/L8 = . "!" expression, FOLLOW [203] -> SHIFT '!' GOTO 87
	expression/L11 = . "*" expression, FOLLOW [203] -> SHIFT '*' GOTO 88
[133]
	expression/L2 = . expression "=" expression, FOLLOW [203] -> GOTO 200
	expression/L2 = . expression "+=" expression, FOLLOW [203] -> GOTO 200
	expression/L2 = . expression "-=" expression, FOLLOW [203] -> GOTO 200
	expression/L2 = . expression "*=" expression, FOLLOW [203] -> GOTO 200
	expression/L2 = . expression "/=" expression, FOLLOW [203] -> GOTO 200
	expression/L2 = . expression "%=" expression, FOLLOW [203] -> GOTO 200
	expression/L2 = . expression "&&=" expression, FOLLOW [203] -> GOTO 200
	expression/L2 = . expression "||=" expression, FOLLOW [203] -> GOTO 200
	expression/L2 = . expression "&=" expression, FOLLOW [203] -> GOTO 200
	expression/L2 = . expression "|=" expression, FOLLOW [203] -> GOTO 200
	expression/L2 = . expression "<<=" expression, FOLLOW [203] -> GOTO 200
	expression/L2 = . expression ">>=" expression, FOLLOW [203] -> GOTO 200
	expression/L3 = . expression "||" expression, FOLLOW [203] -> GOTO 200
	expression/L4 = . expression "&&" expression, FOLLOW [203] -> GOTO 200
	expression/L5 = . expression "|" expression, FOLLOW [203] -> GOTO 200
	expression/L6 = . expression "^" expression, FOLLOW [203] -> GOTO 200
	expression/L6 = . expression "&" expression, FOLLOW [203] -> GOTO 200
	expression/L7 = . expression "==" expression, FOLLOW [203] -> GOTO 200
	expression/L7 = . expression "!=" expression, FOLLOW [203] -> GOTO 200
	expression/L7 = . expression "<=" expression, FOLLOW [203] -> GOTO 200
	expression/L7 = . expression "<" expression, FOLLOW [203] -> GOTO 200
	expression/L7 = expression "<" . expression, FOLLOW [203] -> GOTO 200
	expression/L7 = . expression ">=" expression, FOLLOW [203] -> GOTO 200
	expression/L7 = . expression ">" expression, FOLLOW [203] -> GOTO 200
	expression/L8 = . expression "+" expression, FOLLOW [203] -> GOTO 200
	expression/L8 = . expression "-" expression, FOLLOW [203] -> GOTO 200
	expression/L9 = . expression "*" expression, FOLLOW [203] -> GOTO 200
	expression/L9 = . expression "/" expression, FOLLOW [203] -> GOTO 200
	expression/L9 = . expression "%" expression, FOLLOW [203] -> GOTO 200
	expression/L10 = . expression "<<" expression, FOLLOW [203] -> GOTO 200
	expression/L10 = . expression ">>" expression, FOLLOW [203] -> GOTO 200
	expression/L11 = . expression "." IDENT, FOLLOW [203] -> GOTO 200
	expression/L12 = . expression "(" expressionlist ")", FOLLOW [203] -> GOTO 200
	expression/L12 = . expression "(" ")", FOLLOW [203] -> GOTO 200
	expression/L12 = . expression "[" expressionlist "]", FOLLOW [203] -> GOTO 200
	iexpression = . expression indirection IDENT, FOLLOW [203] -> GOTO 200
	expression/L11 = . iexpression, FOLLOW [203] -> GOTO 69
	expression/L1 = . BOOLEAN, FOLLOW [203] -> SHIFT BOOLEAN GOTO 70
	expression/L1 = . IDENT, FOLLOW [203] -> SHIFT IDENT GOTO 71
	expression/L1 = . DQSTRING, FOLLOW [203] -> SHIFT DQSTRING GOTO 72
	expression/L1 = . SQSTRING, FOLLOW [203] -> SHIFT SQSTRING GOTO 73
	expression/L1 = . CARDINAL, FOLLOW [203] -> SHIFT CARDINAL GOTO 74
	expression/L1 = . INTEGER, FOLLOW [203] -> SHIFT INTEGER GOTO 75
	expression/L1 = . FLOAT, FOLLOW [203] -> SHIFT FLOAT GOTO 76
	expression/L1 = . "(" expression ")", FOLLOW [203] -> SHIFT '(' GOTO 77
	expression/L8 = . "&" expression, FOLLOW [203] -> SHIFT '&' GOTO 79
	expression/L8 = . "+" expression, FOLLOW [203] -> SHIFT '+' GOTO 84
	expression/L8 = . "-" expression, FOLLOW [203] -> SHIFT '-' GOTO 85
	expression/L8 = . "~" expression, FOLLOW [203] -> SHIFT '~' GOTO 86
	expression/L8 = . "!" expression, FOLLOW [203] -> SHIFT '!' GOTO 87
	expression/L11 = . "*" expression, FOLLOW [203] -> SHIFT '*' GOTO 88
[134]
	expression/L2 = . expression "=" expression, FOLLOW [203] -> GOTO 201
	expression/L2 = . expression "+=" expression, FOLLOW [203] -> GOTO 201
	expression/L2 = . expression "-=" expression, FOLLOW [203] -> GOTO 201
	expression/L2 = . expression "*=" expression, FOLLOW [203] -> GOTO 201
	expression/L2 = . expression "/=" expression, FOLLOW [203] -> GOTO 201
	expression/L2 = . expression "%=" expression, FOLLOW [203] -> GOTO 201
	expression/L2 = . expression "&&=" expression, FOLLOW [203] -> GOTO 201
	expression/L2 = . expression "||=" expression, FOLLOW [203] -> GOTO 201
	expression/L2 = . expression "&=" expression, FOLLOW [203] -> GOTO 201
	expression/L2 = . expression "|=" expression, FOLLOW [203] -> GOTO 201
	expression/L2 = . expression "<<=" expression, FOLLOW [203] -> GOTO 201
	expression/L2 = . expression ">>=" expression, FOLLOW [203] -> GOTO 201
	expression/L3 = . expression "||" expression, FOLLOW [203] -> GOTO 201
	expression/L4 = . expression "&&" expression, FOLLOW [203] -> GOTO 201
	expression/L5 = . expression "|" expression, FOLLOW [203] -> GOTO 201
	expression/L6 = . expression "^" expression, FOLLOW [203] -> GOTO 201
	expression/L6 = . expression "&" expression, FOLLOW [203] -> GOTO 201
	expression/L7 = . expression "==" expression, FOLLOW [203] -> GOTO 201
	expression/L7 = . expression "!=" expression, FOLLOW [203] -> GOTO 201
	expression/L7 = . expression "<=" expression, FOLLOW [203] -> GOTO 201
	expression/L7 = . expression "<" expression, FOLLOW [203] -> GOTO 201
	expression/L7 = . expression ">=" expression, FOLLOW [203] -> GOTO 201
	expression/L7 = expression ">=" . expression, FOLLOW [203] -> GOTO 201
	expression/L7 = . expression ">" expression, FOLLOW [203] -> GOTO 201
	expression/L8 = . expression "+" expression, FOLLOW [203] -> GOTO 201
	expression/L8 = . expression "-" expression, FOLLOW [203] -> GOTO 201
	expression/L9 = . expression "*" expression, FOLLOW [203] -> GOTO 201
	expression/L9 = . expression "/" expression, FOLLOW [203] -> GOTO 201
	expression/L9 = . expression "%" expression, FOLLOW [203] -> GOTO 201
	expression/L10 = . expression "<<" expression, FOLLOW [203] -> GOTO 201
	expression/L10 = . expression ">>" expression, FOLLOW [203] -> GOTO 201
	expression/L11 = . expression "." IDENT, FOLLOW [203] -> GOTO 201
	expression/L12 = . expression "(" expressionlist ")", FOLLOW [203] -> GOTO 201
	expression/L12 = . expression "(" ")", FOLLOW [203] -> GOTO 201
	expression/L12 = . expression "[" expressionlist "]", FOLLOW [203] -> GOTO 201
	iexpression = . expression indirection IDENT, FOLLOW [203] -> GOTO 201
	expression/L11 = . iexpression, FOLLOW [203] -> GOTO 69
	expression/L1 = . BOOLEAN, FOLLOW [203] -> SHIFT BOOLEAN GOTO 70
	expression/L1 = . IDENT, FOLLOW [203] -> SHIFT IDENT GOTO 71
	expression/L1 = . DQSTRING, FOLLOW [203] -> SHIFT DQSTRING GOTO 72
	expression/L1 = . SQSTRING, FOLLOW [203] -> SHIFT SQSTRING GOTO 73
	expression/L1 = . CARDINAL, FOLLOW [203] -> SHIFT CARDINAL GOTO 74
	expression/L1 = . INTEGER, FOLLOW [203] -> SHIFT INTEGER GOTO 75
	expression/L1 = . FLOAT, FOLLOW [203] -> SHIFT FLOAT GOTO 76
	expression/L1 = . "(" expression ")", FOLLOW [203] -> SHIFT '(' GOTO 77
	expression/L8 = . "&" expression, FOLLOW [203] -> SHIFT '&' GOTO 79
	expression/L8 = . "+" expression, FOLLOW [203] -> SHIFT '+' GOTO 84
	expression/L8 = . "-" expression, FOLLOW [203] -> SHIFT '-' GOTO 85
	expression/L8 = . "~" expression, FOLLOW [203] -> SHIFT '~' GOTO 86
	expression/L8 = . "!" expression, FOLLOW [203] -> SHIFT '!' GOTO 87
	expression/L11 = . "*" expression, FOLLOW [203] -> SHIFT '*' GOTO 88
[135]
	expression/L2 = . expression "=" expression, FOLLOW [203] -> GOTO 202
	expression/L2 = . expression "+=" expression, FOLLOW [203] -> GOTO 202
	expression/L2 = . expression "-=" expression, FOLLOW [203] -> GOTO 202
	expression/L2 = . expression "*=" expression, FOLLOW [203] -> GOTO 202
	expression/L2 = . expression "/=" expression, FOLLOW [203] -> GOTO 202
	expression/L2 = . expression "%=" expression, FOLLOW [203] -> GOTO 202
	expression/L2 = . expression "&&=" expression, FOLLOW [203] -> GOTO 202
	expression/L2 = . expression "||=" expression, FOLLOW [203] -> GOTO 202
	expression/L2 = . expression "&=" expression, FOLLOW [203] -> GOTO 202
	expression/L2 = . expression "|=" expression, FOLLOW [203] -> GOTO 202
	expression/L2 = . expression "<<=" expression, FOLLOW [203] -> GOTO 202
	expression/L2 = . expression ">>=" expression, FOLLOW [203] -> GOTO 202
	expression/L3 = . expression "||" expression, FOLLOW [203] -> GOTO 202
	expression/L4 = . expression "&&" expression, FOLLOW [203] -> GOTO 202
	expression/L5 = . expression "|" expression, FOLLOW [203] -> GOTO 202
	expression/L6 = . expression "^" expression, FOLLOW [203] -> GOTO 202
	expression/L6 = . expression "&" expression, FOLLOW [203] -> GOTO 202
	expression/L7 = . expression "==" expression, FOLLOW [203] -> GOTO 202
	expression/L7 = . expression "!=" expression, FOLLOW [203] -> GOTO 202
	expression/L7 = . expression "<=" expression, FOLLOW [203] -> GOTO 202
	expression/L7 = . expression "<" expression, FOLLOW [203] -> GOTO 202
	expression/L7 = . expression ">=" expression, FOLLOW [203] -> GOTO 202
	expression/L7 = . expression ">" expression, FOLLOW [203] -> GOTO 202
	expression/L7 = expression ">" . expression, FOLLOW [203] -> GOTO 202
	expression/L8 = . expression "+" expression, FOLLOW [203] -> GOTO 202
	expression/L8 = . expression "-" expression, FOLLOW [203] -> GOTO 202
	expression/L9 = . expression "*" expression, FOLLOW [203] -> GOTO 202
	expression/L9 = . expression "/" expression, FOLLOW [203] -> GOTO 202
	expression/L9 = . expression "%" expression, FOLLOW [203] -> GOTO 202
	expression/L10 = . expression "<<" expression, FOLLOW [203] -> GOTO 202
	expression/L10 = . expression ">>" expression, FOLLOW [203] -> GOTO 202
	expression/L11 = . expression "." IDENT, FOLLOW [203] -> GOTO 202
	expression/L12 = . expression "(" expressionlist ")", FOLLOW [203] -> GOTO 202
	expression/L12 = . expression "(" ")", FOLLOW [203] -> GOTO 202
	expression/L12 = . expression "[" expressionlist "]", FOLLOW [203] -> GOTO 202
	iexpression = . expression indirection IDENT, FOLLOW [203] -> GOTO 202
	expression/L11 = . iexpression, FOLLOW [203] -> GOTO 69
	expression/L1 = . BOOLEAN, FOLLOW [203] -> SHIFT BOOLEAN GOTO 70
	expression/L1 = . IDENT, FOLLOW [203] -> SHIFT IDENT GOTO 71
	expression/L1 = . DQSTRING, FOLLOW [203] -> SHIFT DQSTRING GOTO 72
	expression/L1 = . SQSTRING, FOLLOW [203] -> SHIFT SQSTRING GOTO 73
	expression/L1 = . CARDINAL, FOLLOW [203] -> SHIFT CARDINAL GOTO 74
	expression/L1 = . INTEGER, FOLLOW [203] -> SHIFT INTEGER GOTO 75
	expression/L1 = . FLOAT, FOLLOW [203] -> SHIFT FLOAT GOTO 76
	expression/L1 = . "(" expression ")", FOLLOW [203] -> SHIFT '(' GOTO 77
	expression/L8 = . "&" expression, FOLLOW [203] -> SHIFT '&' GOTO 79
	expression/L8 = . "+" expression, FOLLOW [203] -> SHIFT '+' GOTO 84
	expression/L8 = . "-" expression, FOLLOW [203] -> SHIFT '-' GOTO 85
	expression/L8 = . "~" expression, FOLLOW [203] -> SHIFT '~' GOTO 86
	expression/L8 = . "!" expression, FOLLOW [203] -> SHIFT '!' GOTO 87
	expression/L11 = . "*" expression, FOLLOW [203] -> SHIFT '*' GOTO 88
[136]
	expression/L2 = . expression "=" expression, FOLLOW [203] -> GOTO 203
	expression/L2 = . expression "+=" expression, FOLLOW [203] -> GOTO 203
	expression/L2 = . expression "-=" expression, FOLLOW [203] -> GOTO 203
	expression/L2 = . expression "*=" expression, FOLLOW [203] -> GOTO 203
	expression/L2 = . expression "/=" expression, FOLLOW [203] -> GOTO 203
	expression/L2 = . expression "%=" expression, FOLLOW [203] -> GOTO 203
	expression/L2 = . expression "&&=" expression, FOLLOW [203] -> GOTO 203
	expression/L2 = . expression "||=" expression, FOLLOW [203] -> GOTO 203
	expression/L2 = . expression "&=" expression, FOLLOW [203] -> GOTO 203
	expression/L2 = . expression "|=" expression, FOLLOW [203] -> GOTO 203
	expression/L2 = . expression "<<=" expression, FOLLOW [203] -> GOTO 203
	expression/L2 = . expression ">>=" expression, FOLLOW [203] -> GOTO 203
	expression/L3 = . expression "||" expression, FOLLOW [203] -> GOTO 203
	expression/L4 = . expression "&&" expression, FOLLOW [203] -> GOTO 203
	expression/L5 = . expression "|" expression, FOLLOW [203] -> GOTO 203
	expression/L6 = . expression "^" expression, FOLLOW [203] -> GOTO 203
	expression/L6 = . expression "&" expression, FOLLOW [203] -> GOTO 203
	expression/L7 = . expression "==" expression, FOLLOW [203] -> GOTO 203
	expression/L7 = . expression "!=" expression, FOLLOW [203] -> GOTO 203
	expression/L7 = . expression "<=" expression, FOLLOW [203] -> GOTO 203
	expression/L7 = . expression "<" expression, FOLLOW [203] -> GOTO 203
	expression/L7 = . expression ">=" expression, FOLLOW [203] -> GOTO 203
	expression/L7 = . expression ">" expression, FOLLOW [203] -> GOTO 203
	expression/L8 = . expression "+" expression, FOLLOW [203] -> GOTO 203
	expression/L8 = expression "+" . expression, FOLLOW [203] -> GOTO 203
	expression/L8 = . expression "-" expression, FOLLOW [203] -> GOTO 203
	expression/L9 = . expression "*" expression, FOLLOW [203] -> GOTO 203
	expression/L9 = . expression "/" expression, FOLLOW [203] -> GOTO 203
	expression/L9 = . expression "%" expression, FOLLOW [203] -> GOTO 203
	expression/L10 = . expression "<<" expression, FOLLOW [203] -> GOTO 203
	expression/L10 = . expression ">>" expression, FOLLOW [203] -> GOTO 203
	expression/L11 = . expression "." IDENT, FOLLOW [203] -> GOTO 203
	expression/L12 = . expression "(" expressionlist ")", FOLLOW [203] -> GOTO 203
	expression/L12 = . expression "(" ")", FOLLOW [203] -> GOTO 203
	expression/L12 = . expression "[" expressionlist "]", FOLLOW [203] -> GOTO 203
	iexpression = . expression indirection IDENT, FOLLOW [203] -> GOTO 203
	expression/L11 = . iexpression, FOLLOW [203] -> GOTO 69
	expression/L1 = . BOOLEAN, FOLLOW [203] -> SHIFT BOOLEAN GOTO 70
	expression/L1 = . IDENT, FOLLOW [203] -> SHIFT IDENT GOTO 71
	expression/L1 = . DQSTRING, FOLLOW [203] -> SHIFT DQSTRING GOTO 72
	expression/L1 = . SQSTRING, FOLLOW [203] -> SHIFT SQSTRING GOTO 73
	expression/L1 = . CARDINAL, FOLLOW [203] -> SHIFT CARDINAL GOTO 74
	expression/L1 = . INTEGER, FOLLOW [203] -> SHIFT INTEGER GOTO 75
	expression/L1 = . FLOAT, FOLLOW [203] -> SHIFT FLOAT GOTO 76
	expression/L1 = . "(" expression ")", FOLLOW [203] -> SHIFT '(' GOTO 77
	expression/L8 = . "&" expression, FOLLOW [203] -> SHIFT '&' GOTO 79
	expression/L8 = . "+" expression, FOLLOW [203] -> SHIFT '+' GOTO 84
	expression/L8 = . "-" expression, FOLLOW [203] -> SHIFT '-' GOTO 85
	expression/L8 = . "~" expression, FOLLOW [203] -> SHIFT '~' GOTO 86
	expression/L8 = . "!" expression, FOLLOW [203] -> SHIFT '!' GOTO 87
	expression/L11 = . "*" expression, FOLLOW [203] -> SHIFT '*' GOTO 88
[137]
	expression/L2 = . expression "=" expression, FOLLOW [203] -> GOTO 204
	expression/L2 = . expression "+=" expression, FOLLOW [203] -> GOTO 204
	expression/L2 = . expression "-=" expression, FOLLOW [203] -> GOTO 204
	expression/L2 = . expression "*=" expression, FOLLOW [203] -> GOTO 204
	expression/L2 = . expression "/=" expression, FOLLOW [203] -> GOTO 204
	expression/L2 = . expression "%=" expression, FOLLOW [203] -> GOTO 204
	expression/L2 = . expression "&&=" expression, FOLLOW [203] -> GOTO 204
	expression/L2 = . expression "||=" expression, FOLLOW [203] -> GOTO 204
	expression/L2 = . expression "&=" expression, FOLLOW [203] -> GOTO 204
	expression/L2 = . expression "|=" expression, FOLLOW [203] -> GOTO 204
	expression/L2 = . expression "<<=" expression, FOLLOW [203] -> GOTO 204
	expression/L2 = . expression ">>=" expression, FOLLOW [203] -> GOTO 204
	expression/L3 = . expression "||" expression, FOLLOW [203] -> GOTO 204
	expression/L4 = . expression "&&" expression, FOLLOW [203] -> GOTO 204
	expression/L5 = . expression "|" expression, FOLLOW [203] -> GOTO 204
	expression/L6 = . expression "^" expression, FOLLOW [203] -> GOTO 204
	expression/L6 = . expression "&" expression, FOLLOW [203] -> GOTO 204
	expression/L7 = . expression "==" expression, FOLLOW [203] -> GOTO 204
	expression/L7 = . expression "!=" expression, FOLLOW [203] -> GOTO 204
	expression/L7 = . expression "<=" expression, FOLLOW [203] -> GOTO 204
	expression/L7 = . expression "<" expression, FOLLOW [203] -> GOTO 204
	expression/L7 = . expression ">=" expression, FOLLOW [203] -> GOTO 204
	expression/L7 = . expression ">" expression, FOLLOW [203] -> GOTO 204
	expression/L8 = . expression "+" expression, FOLLOW [203] -> GOTO 204
	expression/L8 = . expression "-" expression, FOLLOW [203] -> GOTO 204
	expression/L8 = expression "-" . expression, FOLLOW [203] -> GOTO 204
	expression/L9 = . expression "*" expression, FOLLOW [203] -> GOTO 204
	expression/L9 = . expression "/" expression, FOLLOW [203] -> GOTO 204
	expression/L9 = . expression "%" expression, FOLLOW [203] -> GOTO 204
	expression/L10 = . expression "<<" expression, FOLLOW [203] -> GOTO 204
	expression/L10 = . expression ">>" expression, FOLLOW [203] -> GOTO 204
	expression/L11 = . expression "." IDENT, FOLLOW [203] -> GOTO 204
	expression/L12 = . expression "(" expressionlist ")", FOLLOW [203] -> GOTO 204
	expression/L12 = . expression "(" ")", FOLLOW [203] -> GOTO 204
	expression/L12 = . expression "[" expressionlist "]", FOLLOW [203] -> GOTO 204
	iexpression = . expression indirection IDENT, FOLLOW [203] -> GOTO 204
	expression/L11 = . iexpression, FOLLOW [203] -> GOTO 69
	expression/L1 = . BOOLEAN, FOLLOW [203] -> SHIFT BOOLEAN GOTO 70
	expression/L1 = . IDENT, FOLLOW [203] -> SHIFT IDENT GOTO 71
	expression/L1 = . DQSTRING, FOLLOW [203] -> SHIFT DQSTRING GOTO 72
	expression/L1 = . SQSTRING, FOLLOW [203] -> SHIFT SQSTRING GOTO 73
	expression/L1 = . CARDINAL, FOLLOW [203] -> SHIFT CARDINAL GOTO 74
	expression/L1 = . INTEGER, FOLLOW [203] -> SHIFT INTEGER GOTO 75
	expression/L1 = . FLOAT, FOLLOW [203] -> SHIFT FLOAT GOTO 76
	expression/L1 = . "(" expression ")", FOLLOW [203] -> SHIFT '(' GOTO 77
	expression/L8 = . "&" expression, FOLLOW [203] -> SHIFT '&' GOTO 79
	expression/L8 = . "+" expression, FOLLOW [203] -> SHIFT '+' GOTO 84
	expression/L8 = . "-" expression, FOLLOW [203] -> SHIFT '-' GOTO 85
	expression/L8 = . "~" expression, FOLLOW [203] -> SHIFT '~' GOTO 86
	expression/L8 = . "!" expression, FOLLOW [203] -> SHIFT '!' GOTO 87
	expression/L11 = . "*" expression, FOLLOW [203] -> SHIFT '*' GOTO 88
[138]
	expression/L2 = . expression "=" expression, FOLLOW [203] -> GOTO 205
	expression/L2 = . expression "+=" expression, FOLLOW [203] -> GOTO 205
	expression/L2 = . expression "-=" expression, FOLLOW [203] -> GOTO 205
	expression/L2 = . expression "*=" expression, FOLLOW [203] -> GOTO 205
	expression/L2 = . expression "/=" expression, FOLLOW [203] -> GOTO 205
	expression/L2 = . expression "%=" expression, FOLLOW [203] -> GOTO 205
	expression/L2 = . expression "&&=" expression, FOLLOW [203] -> GOTO 205
	expression/L2 = . expression "||=" expression, FOLLOW [203] -> GOTO 205
	expression/L2 = . expression "&=" expression, FOLLOW [203] -> GOTO 205
	expression/L2 = . expression "|=" expression, FOLLOW [203] -> GOTO 205
	expression/L2 = . expression "<<=" expression, FOLLOW [203] -> GOTO 205
	expression/L2 = . expression ">>=" expression, FOLLOW [203] -> GOTO 205
	expression/L3 = . expression "||" expression, FOLLOW [203] -> GOTO 205
	expression/L4 = . expression "&&" expression, FOLLOW [203] -> GOTO 205
	expression/L5 = . expression "|" expression, FOLLOW [203] -> GOTO 205
	expression/L6 = . expression "^" expression, FOLLOW [203] -> GOTO 205
	expression/L6 = . expression "&" expression, FOLLOW [203] -> GOTO 205
	expression/L7 = . expression "==" expression, FOLLOW [203] -> GOTO 205
	expression/L7 = . expression "!=" expression, FOLLOW [203] -> GOTO 205
	expression/L7 = . expression "<=" expression, FOLLOW [203] -> GOTO 205
	expression/L7 = . expression "<" expression, FOLLOW [203] -> GOTO 205
	expression/L7 = . expression ">=" expression, FOLLOW [203] -> GOTO 205
	expression/L7 = . expression ">" expression, FOLLOW [203] -> GOTO 205
	expression/L8 = . expression "+" expression, FOLLOW [203] -> GOTO 205
	expression/L8 = . expression "-" expression, FOLLOW [203] -> GOTO 205
	expression/L9 = . expression "*" expression, FOLLOW [203] -> GOTO 205
	expression/L9 = expression "*" . expression, FOLLOW [203] -> GOTO 205
	expression/L9 = . expression "/" expression, FOLLOW [203] -> GOTO 205
	expression/L9 = . expression "%" expression, FOLLOW [203] -> GOTO 205
	expression/L10 = . expression "<<" expression, FOLLOW [203] -> GOTO 205
	expression/L10 = . expression ">>" expression, FOLLOW [203] -> GOTO 205
	expression/L11 = . expression "." IDENT, FOLLOW [203] -> GOTO 205
	expression/L12 = . expression "(" expressionlist ")", FOLLOW [203] -> GOTO 205
	expression/L12 = . expression "(" ")", FOLLOW [203] -> GOTO 205
	expression/L12 = . expression "[" expressionlist "]", FOLLOW [203] -> GOTO 205
	iexpression = . expression indirection IDENT, FOLLOW [203] -> GOTO 205
	expression/L11 = . iexpression, FOLLOW [203] -> GOTO 69
	expression/L1 = . BOOLEAN, FOLLOW [203] -> SHIFT BOOLEAN GOTO 70
	expression/L1 = . IDENT, FOLLOW [203] -> SHIFT IDENT GOTO 71
	expression/L1 = . DQSTRING, FOLLOW [203] -> SHIFT DQSTRING GOTO 72
	expression/L1 = . SQSTRING, FOLLOW [203] -> SHIFT SQSTRING GOTO 73
	expression/L1 = . CARDINAL, FOLLOW [203] -> SHIFT CARDINAL GOTO 74
	expression/L1 = . INTEGER, FOLLOW [203] -> SHIFT INTEGER GOTO 75
	expression/L1 = . FLOAT, FOLLOW [203] -> SHIFT FLOAT GOTO 76
	expression/L1 = . "(" expression ")", FOLLOW [203] -> SHIFT '(' GOTO 77
	expression/L8 = . "&" expression, FOLLOW [203] -> SHIFT '&' GOTO 79
	expression/L8 = . "+" expression, FOLLOW [203] -> SHIFT '+' GOTO 84
	expression/L8 = . "-" expression, FOLLOW [203] -> SHIFT '-' GOTO 85
	expression/L8 = . "~" expression, FOLLOW [203] -> SHIFT '~' GOTO 86
	expression/L8 = . "!" expression, FOLLOW [203] -> SHIFT '!' GOTO 87
	expression/L11 = . "*" expression, FOLLOW [203] -> SHIFT '*' GOTO 88
[139]
	expression/L2 = . expression "=" expression, FOLLOW [203] -> GOTO 206
	expression/L2 = . expression "+=" expression, FOLLOW [203] -> GOTO 206
	expression/L2 = . expression "-=" expression, FOLLOW [203] -> GOTO 206
	expression/L2 = . expression "*=" expression, FOLLOW [203] -> GOTO 206
	expression/L2 = . expression "/=" expression, FOLLOW [203] -> GOTO 206
	expression/L2 = . expression "%=" expression, FOLLOW [203] -> GOTO 206
	expression/L2 = . expression "&&=" expression, FOLLOW [203] -> GOTO 206
	expression/L2 = . expression "||=" expression, FOLLOW [203] -> GOTO 206
	expression/L2 = . expression "&=" expression, FOLLOW [203] -> GOTO 206
	expression/L2 = . expression "|=" expression, FOLLOW [203] -> GOTO 206
	expression/L2 = . expression "<<=" expression, FOLLOW [203] -> GOTO 206
	expression/L2 = . expression ">>=" expression, FOLLOW [203] -> GOTO 206
	expression/L3 = . expression "||" expression, FOLLOW [203] -> GOTO 206
	expression/L4 = . expression "&&" expression, FOLLOW [203] -> GOTO 206
	expression/L5 = . expression "|" expression, FOLLOW [203] -> GOTO 206
	expression/L6 = . expression "^" expression, FOLLOW [203] -> GOTO 206
	expression/L6 = . expression "&" expression, FOLLOW [203] -> GOTO 206
	expression/L7 = . expression "==" expression, FOLLOW [203] -> GOTO 206
	expression/L7 = . expression "!=" expression, FOLLOW [203] -> GOTO 206
	expression/L7 = . expression "<=" expression, FOLLOW [203] -> GOTO 206
	expression/L7 = . expression "<" expression, FOLLOW [203] -> GOTO 206
	expression/L7 = . expression ">=" expression, FOLLOW [203] -> GOTO 206
	expression/L7 = . expression ">" expression, FOLLOW [203] -> GOTO 206
	expression/L8 = . expression "+" expression, FOLLOW [203] -> GOTO 206
	expression/L8 = . expression "-" expression, FOLLOW [203] -> GOTO 206
	expression/L9 = . expression "*" expression, FOLLOW [203] -> GOTO 206
	expression/L9 = . expression "/" expression, FOLLOW [203] -> GOTO 206
	expression/L9 = expression "/" . expression, FOLLOW [203] -> GOTO 206
	expression/L9 = . expression "%" expression, FOLLOW [203] -> GOTO 206
	expression/L10 = . expression "<<" expression, FOLLOW [203] -> GOTO 206
	expression/L10 = . expression ">>" expression, FOLLOW [203] -> GOTO 206
	expression/L11 = . expression "." IDENT, FOLLOW [203] -> GOTO 206
	expression/L12 = . expression "(" expressionlist ")", FOLLOW [203] -> GOTO 206
	expression/L12 = . expression "(" ")", FOLLOW [203] -> GOTO 206
	expression/L12 = . expression "[" expressionlist "]", FOLLOW [203] -> GOTO 206
	iexpression = . expression indirection IDENT, FOLLOW [203] -> GOTO 206
	expression/L11 = . iexpression, FOLLOW [203] -> GOTO 69
	expression/L1 = . BOOLEAN, FOLLOW [203] -> SHIFT BOOLEAN GOTO 70
	expression/L1 = . IDENT, FOLLOW [203] -> SHIFT IDENT GOTO 71
	expression/L1 = . DQSTRING, FOLLOW [203] -> SHIFT DQSTRING GOTO 72
	expression/L1 = . SQSTRING, FOLLOW [203] -> SHIFT SQSTRING GOTO 73
	expression/L1 = . CARDINAL, FOLLOW [203] -> SHIFT CARDINAL GOTO 74
	expression/L1 = . INTEGER, FOLLOW [203] -> SHIFT INTEGER GOTO 75
	expression/L1 = . FLOAT, FOLLOW [203] -> SHIFT FLOAT GOTO 76
	expression/L1 = . "(" expression ")", FOLLOW [203] -> SHIFT '(' GOTO 77
	expression/L8 = . "&" expression, FOLLOW [203] -> SHIFT '&' GOTO 79
	expression/L8 = . "+" expression, FOLLOW [203] -> SHIFT '+' GOTO 84
	expression/L8 = . "-" expression, FOLLOW [203] -> SHIFT '-' GOTO 85
	expression/L8 = . "~" expression, FOLLOW [203] -> SHIFT '~' GOTO 86
	expression/L8 = . "!" expression, FOLLOW [203] -> SHIFT '!' GOTO 87
	expression/L11 = . "*" expression, FOLLOW [203] -> SHIFT '*' GOTO 88
[140]
	expression/L2 = . expression "=" expression, FOLLOW [203] -> GOTO 207
	expression/L2 = . expression "+=" expression, FOLLOW [203] -> GOTO 207
	expression/L2 = . expression "-=" expression, FOLLOW [203] -> GOTO 207
	expression/L2 = . expression "*=" expression, FOLLOW [203] -> GOTO 207
	expression/L2 = . expression "/=" expression, FOLLOW [203] -> GOTO 207
	expression/L2 = . expression "%=" expression, FOLLOW [203] -> GOTO 207
	expression/L2 = . expression "&&=" expression, FOLLOW [203] -> GOTO 207
	expression/L2 = . expression "||=" expression, FOLLOW [203] -> GOTO 207
	expression/L2 = . expression "&=" expression, FOLLOW [203] -> GOTO 207
	expression/L2 = . expression "|=" expression, FOLLOW [203] -> GOTO 207
	expression/L2 = . expression "<<=" expression, FOLLOW [203] -> GOTO 207
	expression/L2 = . expression ">>=" expression, FOLLOW [203] -> GOTO 207
	expression/L3 = . expression "||" expression, FOLLOW [203] -> GOTO 207
	expression/L4 = . expression "&&" expression, FOLLOW [203] -> GOTO 207
	expression/L5 = . expression "|" expression, FOLLOW [203] -> GOTO 207
	expression/L6 = . expression "^" expression, FOLLOW [203] -> GOTO 207
	expression/L6 = . expression "&" expression, FOLLOW [203] -> GOTO 207
	expression/L7 = . expression "==" expression, FOLLOW [203] -> GOTO 207
	expression/L7 = . expression "!=" expression, FOLLOW [203] -> GOTO 207
	expression/L7 = . expression "<=" expression, FOLLOW [203] -> GOTO 207
	expression/L7 = . expression "<" expression, FOLLOW [203] -> GOTO 207
	expression/L7 = . expression ">=" expression, FOLLOW [203] -> GOTO 207
	expression/L7 = . expression ">" expression, FOLLOW [203] -> GOTO 207
	expression/L8 = . expression "+" expression, FOLLOW [203] -> GOTO 207
	expression/L8 = . expression "-" expression, FOLLOW [203] -> GOTO 207
	expression/L9 = . expression "*" expression, FOLLOW [203] -> GOTO 207
	expression/L9 = . expression "/" expression, FOLLOW [203] -> GOTO 207
	expression/L9 = . expression "%" expression, FOLLOW [203] -> GOTO 207
	expression/L9 = expression "%" . expression, FOLLOW [203] -> GOTO 207
	expression/L10 = . expression "<<" expression, FOLLOW [203] -> GOTO 207
	expression/L10 = . expression ">>" expression, FOLLOW [203] -> GOTO 207
	expression/L11 = . expression "." IDENT, FOLLOW [203] -> GOTO 207
	expression/L12 = . expression "(" expressionlist ")", FOLLOW [203] -> GOTO 207
	expression/L12 = . expression "(" ")", FOLLOW [203] -> GOTO 207
	expression/L12 = . expression "[" expressionlist "]", FOLLOW [203] -> GOTO 207
	iexpression = . expression indirection IDENT, FOLLOW [203] -> GOTO 207
	expression/L11 = . iexpression, FOLLOW [203] -> GOTO 69
	expression/L1 = . BOOLEAN, FOLLOW [203] -> SHIFT BOOLEAN GOTO 70
	expression/L1 = . IDENT, FOLLOW [203] -> SHIFT IDENT GOTO 71
	expression/L1 = . DQSTRING, FOLLOW [203] -> SHIFT DQSTRING GOTO 72
	expression/L1 = . SQSTRING, FOLLOW [203] -> SHIFT SQSTRING GOTO 73
	expression/L1 = . CARDINAL, FOLLOW [203] -> SHIFT CARDINAL GOTO 74
	expression/L1 = . INTEGER, FOLLOW [203] -> SHIFT INTEGER GOTO 75
	expression/L1 = . FLOAT, FOLLOW [203] -> SHIFT FLOAT GOTO 76
	expression/L1 = . "(" expression ")", FOLLOW [203] -> SHIFT '(' GOTO 77
	expression/L8 = . "&" expression, FOLLOW [203] -> SHIFT '&' GOTO 79
	expression/L8 = . "+" expression, FOLLOW [203] -> SHIFT '+' GOTO 84
	expression/L8 = . "-" expression, FOLLOW [203] -> SHIFT '-' GOTO 85
	expression/L8 = . "~" expression, FOLLOW [203] -> SHIFT '~' GOTO 86
	expression/L8 = . "!" expression, FOLLOW [203] -> SHIFT '!' GOTO 87
	expression/L11 = . "*" expression, FOLLOW [203] -> SHIFT '*' GOTO 88
[141]
	expression/L2 = . expression "=" expression, FOLLOW [203] -> GOTO 208
	expression/L2 = . expression "+=" expression, FOLLOW [203] -> GOTO 208
	expression/L2 = . expression "-=" expression, FOLLOW [203] -> GOTO 208
	expression/L2 = . expression "*=" expression, FOLLOW [203] -> GOTO 208
	expression/L2 = . expression "/=" expression, FOLLOW [203] -> GOTO 208
	expression/L2 = . expression "%=" expression, FOLLOW [203] -> GOTO 208
	expression/L2 = . expression "&&=" expression, FOLLOW [203] -> GOTO 208
	expression/L2 = . expression "||=" expression, FOLLOW [203] -> GOTO 208
	expression/L2 = . expression "&=" expression, FOLLOW [203] -> GOTO 208
	expression/L2 = . expression "|=" expression, FOLLOW [203] -> GOTO 208
	expression/L2 = . expression "<<=" expression, FOLLOW [203] -> GOTO 208
	expression/L2 = . expression ">>=" expression, FOLLOW [203] -> GOTO 208
	expression/L3 = . expression "||" expression, FOLLOW [203] -> GOTO 208
	expression/L4 = . expression "&&" expression, FOLLOW [203] -> GOTO 208
	expression/L5 = . expression "|" expression, FOLLOW [203] -> GOTO 208
	expression/L6 = . expression "^" expression, FOLLOW [203] -> GOTO 208
	expression/L6 = . expression "&" expression, FOLLOW [203] -> GOTO 208
	expression/L7 = . expression "==" expression, FOLLOW [203] -> GOTO 208
	expression/L7 = . expression "!=" expression, FOLLOW [203] -> GOTO 208
	expression/L7 = . expression "<=" expression, FOLLOW [203] -> GOTO 208
	expression/L7 = . expression "<" expression, FOLLOW [203] -> GOTO 208
	expression/L7 = . expression ">=" expression, FOLLOW [203] -> GOTO 208
	expression/L7 = . expression ">" expression, FOLLOW [203] -> GOTO 208
	expression/L8 = . expression "+" expression, FOLLOW [203] -> GOTO 208
	expression/L8 = . expression "-" expression, FOLLOW [203] -> GOTO 208
	expression/L9 = . expression "*" expression, FOLLOW [203] -> GOTO 208
	expression/L9 = . expression "/" expression, FOLLOW [203] -> GOTO 208
	expression/L9 = . expression "%" expression, FOLLOW [203] -> GOTO 208
	expression/L10 = . expression "<<" expression, FOLLOW [203] -> GOTO 208
	expression/L10 = expression "<<" . expression, FOLLOW [203] -> GOTO 208
	expression/L10 = . expression ">>" expression, FOLLOW [203] -> GOTO 208
	expression/L11 = . expression "." IDENT, FOLLOW [203] -> GOTO 208
	expression/L12 = . expression "(" expressionlist ")", FOLLOW [203] -> GOTO 208
	expression/L12 = . expression "(" ")", FOLLOW [203] -> GOTO 208
	expression/L12 = . expression "[" expressionlist "]", FOLLOW [203] -> GOTO 208
	iexpression = . expression indirection IDENT, FOLLOW [203] -> GOTO 208
	expression/L11 = . iexpression, FOLLOW [203] -> GOTO 69
	expression/L1 = . BOOLEAN, FOLLOW [203] -> SHIFT BOOLEAN GOTO 70
	expression/L1 = . IDENT, FOLLOW [203] -> SHIFT IDENT GOTO 71
	expression/L1 = . DQSTRING, FOLLOW [203] -> SHIFT DQSTRING GOTO 72
	expression/L1 = . SQSTRING, FOLLOW [203] -> SHIFT SQSTRING GOTO 73
	expression/L1 = . CARDINAL, FOLLOW [203] -> SHIFT CARDINAL GOTO 74
	expression/L1 = . INTEGER, FOLLOW [203] -> SHIFT INTEGER GOTO 75
	expression/L1 = . FLOAT, FOLLOW [203] -> SHIFT FLOAT GOTO 76
	expression/L1 = . "(" expression ")", FOLLOW [203] -> SHIFT '(' GOTO 77
	expression/L8 = . "&" expression, FOLLOW [203] -> SHIFT '&' GOTO 79
	expression/L8 = . "+" expression, FOLLOW [203] -> SHIFT '+' GOTO 84
	expression/L8 = . "-" expression, FOLLOW [203] -> SHIFT '-' GOTO 85
	expression/L8 = . "~" expression, FOLLOW [203] -> SHIFT '~' GOTO 86
	expression/L8 = . "!" expression, FOLLOW [203] -> SHIFT '!' GOTO 87
	expression/L11 = . "*" expression, FOLLOW [203] -> SHIFT '*' GOTO 88
[142]
	expression/L2 = . expression "=" expression, FOLLOW [203] -> GOTO 209
	expression/L2 = . expression "+=" expression, FOLLOW [203] -> GOTO 209
	expression/L2 = . expression "-=" expression, FOLLOW [203] -> GOTO 209
	expression/L2 = . expression "*=" expression, FOLLOW [203] -> GOTO 209
	expression/L2 = . expression "/=" expression, FOLLOW [203] -> GOTO 209
	expression/L2 = . expression "%=" expression, FOLLOW [203] -> GOTO 209
	expression/L2 = . expression "&&=" expression, FOLLOW [203] -> GOTO 209
	expression/L2 = . expression "||=" expression, FOLLOW [203] -> GOTO 209
	expression/L2 = . expression "&=" expression, FOLLOW [203] -> GOTO 209
	expression/L2 = . expression "|=" expression, FOLLOW [203] -> GOTO 209
	expression/L2 = . expression "<<=" expression, FOLLOW [203] -> GOTO 209
	expression/L2 = . expression ">>=" expression, FOLLOW [203] -> GOTO 209
	expression/L3 = . expression "||" expression, FOLLOW [203] -> GOTO 209
	expression/L4 = . expression "&&" expression, FOLLOW [203] -> GOTO 209
	expression/L5 = . expression "|" expression, FOLLOW [203] -> GOTO 209
	expression/L6 = . expression "^" expression, FOLLOW [203] -> GOTO 209
	expression/L6 = . expression "&" expression, FOLLOW [203] -> GOTO 209
	expression/L7 = . expression "==" expression, FOLLOW [203] -> GOTO 209
	expression/L7 = . expression "!=" expression, FOLLOW [203] -> GOTO 209
	expression/L7 = . expression "<=" expression, FOLLOW [203] -> GOTO 209
	expression/L7 = . expression "<" expression, FOLLOW [203] -> GOTO 209
	expression/L7 = . expression ">=" expression, FOLLOW [203] -> GOTO 209
	expression/L7 = . expression ">" expression, FOLLOW [203] -> GOTO 209
	expression/L8 = . expression "+" expression, FOLLOW [203] -> GOTO 209
	expression/L8 = . expression "-" expression, FOLLOW [203] -> GOTO 209
	expression/L9 = . expression "*" expression, FOLLOW [203] -> GOTO 209
	expression/L9 = . expression "/" expression, FOLLOW [203] -> GOTO 209
	expression/L9 = . expression "%" expression, FOLLOW [203] -> GOTO 209
	expression/L10 = . expression "<<" expression, FOLLOW [203] -> GOTO 209
	expression/L10 = . expression ">>" expression, FOLLOW [203] -> GOTO 209
	expression/L10 = expression ">>" . expression, FOLLOW [203] -> GOTO 209
	expression/L11 = . expression "." IDENT, FOLLOW [203] -> GOTO 209
	expression/L12 = . expression "(" expressionlist ")", FOLLOW [203] -> GOTO 209
	expression/L12 = . expression "(" ")", FOLLOW [203] -> GOTO 209
	expression/L12 = . expression "[" expressionlist "]", FOLLOW [203] -> GOTO 209
	iexpression = . expression indirection IDENT, FOLLOW [203] -> GOTO 209
	expression/L11 = . iexpression, FOLLOW [203] -> GOTO 69
	expression/L1 = . BOOLEAN, FOLLOW [203] -> SHIFT BOOLEAN GOTO 70
	expression/L1 = . IDENT, FOLLOW [203] -> SHIFT IDENT GOTO 71
	expression/L1 = . DQSTRING, FOLLOW [203] -> SHIFT DQSTRING GOTO 72
	expression/L1 = . SQSTRING, FOLLOW [203] -> SHIFT SQSTRING GOTO 73
	expression/L1 = . CARDINAL, FOLLOW [203] -> SHIFT CARDINAL GOTO 74
	expression/L1 = . INTEGER, FOLLOW [203] -> SHIFT INTEGER GOTO 75
	expression/L1 = . FLOAT, FOLLOW [203] -> SHIFT FLOAT GOTO 76
	expression/L1 = . "(" expression ")", FOLLOW [203] -> SHIFT '(' GOTO 77
	expression/L8 = . "&" expression, FOLLOW [203] -> SHIFT '&' GOTO 79
	expression/L8 = . "+" expression, FOLLOW [203] -> SHIFT '+' GOTO 84
	expression/L8 = . "-" expression, FOLLOW [203] -> SHIFT '-' GOTO 85
	expression/L8 = . "~" expression, FOLLOW [203] -> SHIFT '~' GOTO 86
	expression/L8 = . "!" expression, FOLLOW [203] -> SHIFT '!' GOTO 87
	expression/L11 = . "*" expression, FOLLOW [203] -> SHIFT '*' GOTO 88
[143]
	expression/L11 = expression "." . IDENT, FOLLOW [203] -> SHIFT IDENT GOTO 210
[144]
	indirection = "->" . indirection, FOLLOW [8] -> GOTO 211
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 144
	indirection = "->" . (86), FOLLOW [8] -> REDUCE indirection #1 CALL count
[145]
	iexpression = expression . indirection IDENT, FOLLOW [203] -> GOTO 109
	expression/L12 = expression . "(" expressionlist ")", FOLLOW [203] -> SHIFT '(' GOTO 110
	expression/L12 = expression . "(" ")", FOLLOW [203] -> SHIFT '(' GOTO 110
	expression/L1 = "(" expression . ")", FOLLOW [203] -> SHIFT ')' GOTO 212
	expression/L6 = expression . "&" expression, FOLLOW [203] -> SHIFT '&' GOTO 112
	expression/L6 = expression . "^" expression, FOLLOW [203] -> SHIFT '^' GOTO 113
	expression/L2 = expression . "=" expression, FOLLOW [203] -> SHIFT '=' GOTO 114
	expression/L12 = expression . "[" expressionlist "]", FOLLOW [203] -> SHIFT '[' GOTO 115
	expression/L2 = expression . "+=" expression, FOLLOW [203] -> SHIFT "+=" GOTO 116
	expression/L2 = expression . "-=" expression, FOLLOW [203] -> SHIFT "-=" GOTO 117
	expression/L2 = expression . "*=" expression, FOLLOW [203] -> SHIFT "*=" GOTO 118
	expression/L2 = expression . "/=" expression, FOLLOW [203] -> SHIFT "/=" GOTO 119
	expression/L2 = expression . "%=" expression, FOLLOW [203] -> SHIFT "%=" GOTO 120
	expression/L2 = expression . "&&=" expression, FOLLOW [203] -> SHIFT "&&=" GOTO 121
	expression/L2 = expression . "||=" expression, FOLLOW [203] -> SHIFT "||=" GOTO 122
	expression/L2 = expression . "&=" expression, FOLLOW [203] -> SHIFT "&=" GOTO 123
	expression/L2 = expression . "|=" expression, FOLLOW [203] -> SHIFT "|=" GOTO 124
	expression/L2 = expression . "<<=" expression, FOLLOW [203] -> SHIFT "<<=" GOTO 125
	expression/L2 = expression . ">>=" expression, FOLLOW [203] -> SHIFT ">>=" GOTO 126
	expression/L3 = expression . "||" expression, FOLLOW [203] -> SHIFT "||" GOTO 127
	expression/L4 = expression . "&&" expression, FOLLOW [203] -> SHIFT "&&" GOTO 128
	expression/L5 = expression . "|" expression, FOLLOW [203] -> SHIFT '|' GOTO 129
	expression/L7 = expression . "==" expression, FOLLOW [203] -> SHIFT "==" GOTO 130
	expression/L7 = expression . "!=" expression, FOLLOW [203] -> SHIFT "!=" GOTO 131
	expression/L7 = expression . "<=" expression, FOLLOW [203] -> SHIFT "<=" GOTO 132
	expression/L7 = expression . "<" expression, FOLLOW [203] -> SHIFT '<' GOTO 133
	expression/L7 = expression . ">=" expression, FOLLOW [203] -> SHIFT ">=" GOTO 134
	expression/L7 = expression . ">" expression, FOLLOW [203] -> SHIFT '>' GOTO 135
	expression/L8 = expression . "+" expression, FOLLOW [203] -> SHIFT '+' GOTO 136
	expression/L8 = expression . "-" expression, FOLLOW [203] -> SHIFT '-' GOTO 137
	expression/L9 = expression . "*" expression, FOLLOW [203] -> SHIFT '*' GOTO 138
	expression/L9 = expression . "/" expression, FOLLOW [203] -> SHIFT '/' GOTO 139
	expression/L9 = expression . "%" expression, FOLLOW [203] -> SHIFT '%' GOTO 140
	expression/L10 = expression . "<<" expression, FOLLOW [203] -> SHIFT "<<" GOTO 141
	expression/L10 = expression . ">>" expression, FOLLOW [203] -> SHIFT ">>" GOTO 142
	expression/L11 = expression . "." IDENT, FOLLOW [203] -> SHIFT '.' GOTO 143
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 144
[146]
	statement = "{" statementlist . "}", FOLLOW [89] -> SHIFT '}' GOTO 213
[147]
	iexpression = expression . indirection IDENT, FOLLOW [203] -> GOTO 109
	expression/L12 = expression . "(" expressionlist ")", FOLLOW [203] -> SHIFT '(' GOTO 110
	expression/L12 = expression . "(" ")", FOLLOW [203] -> SHIFT '(' GOTO 110
	expression/L6 = expression . "&" expression, FOLLOW [203] -> SHIFT '&' GOTO 112
	expression/L6 = expression . "^" expression, FOLLOW [203] -> SHIFT '^' GOTO 113
	expression/L2 = expression . "=" expression, FOLLOW [203] -> SHIFT '=' GOTO 114
	expression/L12 = expression . "[" expressionlist "]", FOLLOW [203] -> SHIFT '[' GOTO 115
	expression/L2 = expression . "+=" expression, FOLLOW [203] -> SHIFT "+=" GOTO 116
	expression/L2 = expression . "-=" expression, FOLLOW [203] -> SHIFT "-=" GOTO 117
	expression/L2 = expression . "*=" expression, FOLLOW [203] -> SHIFT "*=" GOTO 118
	expression/L2 = expression . "/=" expression, FOLLOW [203] -> SHIFT "/=" GOTO 119
	expression/L2 = expression . "%=" expression, FOLLOW [203] -> SHIFT "%=" GOTO 120
	expression/L2 = expression . "&&=" expression, FOLLOW [203] -> SHIFT "&&=" GOTO 121
	expression/L2 = expression . "||=" expression, FOLLOW [203] -> SHIFT "||=" GOTO 122
	expression/L2 = expression . "&=" expression, FOLLOW [203] -> SHIFT "&=" GOTO 123
	expression/L2 = expression . "|=" expression, FOLLOW [203] -> SHIFT "|=" GOTO 124
	expression/L2 = expression . "<<=" expression, FOLLOW [203] -> SHIFT "<<=" GOTO 125
	expression/L2 = expression . ">>=" expression, FOLLOW [203] -> SHIFT ">>=" GOTO 126
	expression/L3 = expression . "||" expression, FOLLOW [203] -> SHIFT "||" GOTO 127
	expression/L4 = expression . "&&" expression, FOLLOW [203] -> SHIFT "&&" GOTO 128
	expression/L5 = expression . "|" expression, FOLLOW [203] -> SHIFT '|' GOTO 129
	expression/L7 = expression . "==" expression, FOLLOW [203] -> SHIFT "==" GOTO 130
	expression/L7 = expression . "!=" expression, FOLLOW [203] -> SHIFT "!=" GOTO 131
	expression/L7 = expression . "<=" expression, FOLLOW [203] -> SHIFT "<=" GOTO 132
	expression/L7 = expression . "<" expression, FOLLOW [203] -> SHIFT '<' GOTO 133
	expression/L7 = expression . ">=" expression, FOLLOW [203] -> SHIFT ">=" GOTO 134
	expression/L7 = expression . ">" expression, FOLLOW [203] -> SHIFT '>' GOTO 135
	expression/L8 = expression . "+" expression, FOLLOW [203] -> SHIFT '+' GOTO 136
	expression/L8 = expression . "-" expression, FOLLOW [203] -> SHIFT '-' GOTO 137
	expression/L9 = expression . "*" expression, FOLLOW [203] -> SHIFT '*' GOTO 138
	expression/L9 = expression . "/" expression, FOLLOW [203] -> SHIFT '/' GOTO 139
	expression/L9 = expression . "%" expression, FOLLOW [203] -> SHIFT '%' GOTO 140
	expression/L10 = expression . "<<" expression, FOLLOW [203] -> SHIFT "<<" GOTO 141
	expression/L10 = expression . ">>" expression, FOLLOW [203] -> SHIFT ">>" GOTO 142
	expression/L11 = expression . "." IDENT, FOLLOW [203] -> SHIFT '.' GOTO 143
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 144
	expression/L8 = "&" expression . (65), FOLLOW [203] -> REDUCE expression #2 CALL operator "&"
[148]
	statement = "var" variabledefinition . ";", FOLLOW [89] -> SHIFT ';' GOTO 214
[149]
	iexpression = expression . indirection IDENT, FOLLOW [88] -> GOTO 109
	expression/L12 = expression . "(" expressionlist ")", FOLLOW [88] -> SHIFT '(' GOTO 110
	expression/L12 = expression . "(" ")", FOLLOW [88] -> SHIFT '(' GOTO 110
	statement = "return" expression . ";", FOLLOW [89] -> SHIFT ';' GOTO 215
	expression/L6 = expression . "&" expression, FOLLOW [88] -> SHIFT '&' GOTO 112
	expression/L6 = expression . "^" expression, FOLLOW [88] -> SHIFT '^' GOTO 113
	expression/L2 = expression . "=" expression, FOLLOW [88] -> SHIFT '=' GOTO 114
	expression/L12 = expression . "[" expressionlist "]", FOLLOW [88] -> SHIFT '[' GOTO 115
	expression/L2 = expression . "+=" expression, FOLLOW [88] -> SHIFT "+=" GOTO 116
	expression/L2 = expression . "-=" expression, FOLLOW [88] -> SHIFT "-=" GOTO 117
	expression/L2 = expression . "*=" expression, FOLLOW [88] -> SHIFT "*=" GOTO 118
	expression/L2 = expression . "/=" expression, FOLLOW [88] -> SHIFT "/=" GOTO 119
	expression/L2 = expression . "%=" expression, FOLLOW [88] -> SHIFT "%=" GOTO 120
	expression/L2 = expression . "&&=" expression, FOLLOW [88] -> SHIFT "&&=" GOTO 121
	expression/L2 = expression . "||=" expression, FOLLOW [88] -> SHIFT "||=" GOTO 122
	expression/L2 = expression . "&=" expression, FOLLOW [88] -> SHIFT "&=" GOTO 123
	expression/L2 = expression . "|=" expression, FOLLOW [88] -> SHIFT "|=" GOTO 124
	expression/L2 = expression . "<<=" expression, FOLLOW [88] -> SHIFT "<<=" GOTO 125
	expression/L2 = expression . ">>=" expression, FOLLOW [88] -> SHIFT ">>=" GOTO 126
	expression/L3 = expression . "||" expression, FOLLOW [88] -> SHIFT "||" GOTO 127
	expression/L4 = expression . "&&" expression, FOLLOW [88] -> SHIFT "&&" GOTO 128
	expression/L5 = expression . "|" expression, FOLLOW [88] -> SHIFT '|' GOTO 129
	expression/L7 = expression . "==" expression, FOLLOW [88] -> SHIFT "==" GOTO 130
	expression/L7 = expression . "!=" expression, FOLLOW [88] -> SHIFT "!=" GOTO 131
	expression/L7 = expression . "<=" expression, FOLLOW [88] -> SHIFT "<=" GOTO 132
	expression/L7 = expression . "<" expression, FOLLOW [88] -> SHIFT '<' GOTO 133
	expression/L7 = expression . ">=" expression, FOLLOW [88] -> SHIFT ">=" GOTO 134
	expression/L7 = expression . ">" expression, FOLLOW [88] -> SHIFT '>' GOTO 135
	expression/L8 = expression . "+" expression, FOLLOW [88] -> SHIFT '+' GOTO 136
	expression/L8 = expression . "-" expression, FOLLOW [88] -> SHIFT '-' GOTO 137
	expression/L9 = expression . "*" expression, FOLLOW [88] -> SHIFT '*' GOTO 138
	expression/L9 = expression . "/" expression, FOLLOW [88] -> SHIFT '/' GOTO 139
	expression/L9 = expression . "%" expression, FOLLOW [88] -> SHIFT '%' GOTO 140
	expression/L10 = expression . "<<" expression, FOLLOW [88] -> SHIFT "<<" GOTO 141
	expression/L10 = expression . ">>" expression, FOLLOW [88] -> SHIFT ">>" GOTO 142
	expression/L11 = expression . "." IDENT, FOLLOW [88] -> SHIFT '.' GOTO 143
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 144
[150]
	statement = "if" "(" . expression ")" "{" statementlist "}", FOLLOW [89] -> GOTO 216
	statement = "if" "(" . expression ")" "{" statementlist "}" "else" "{" statementlist "}", FOLLOW [89] -> GOTO 216
	expression/L2 = . expression "=" expression, FOLLOW [200] -> GOTO 216
	expression/L2 = . expression "+=" expression, FOLLOW [200] -> GOTO 216
	expression/L2 = . expression "-=" expression, FOLLOW [200] -> GOTO 216
	expression/L2 = . expression "*=" expression, FOLLOW [200] -> GOTO 216
	expression/L2 = . expression "/=" expression, FOLLOW [200] -> GOTO 216
	expression/L2 = . expression "%=" expression, FOLLOW [200] -> GOTO 216
	expression/L2 = . expression "&&=" expression, FOLLOW [200] -> GOTO 216
	expression/L2 = . expression "||=" expression, FOLLOW [200] -> GOTO 216
	expression/L2 = . expression "&=" expression, FOLLOW [200] -> GOTO 216
	expression/L2 = . expression "|=" expression, FOLLOW [200] -> GOTO 216
	expression/L2 = . expression "<<=" expression, FOLLOW [200] -> GOTO 216
	expression/L2 = . expression ">>=" expression, FOLLOW [200] -> GOTO 216
	expression/L3 = . expression "||" expression, FOLLOW [200] -> GOTO 216
	expression/L4 = . expression "&&" expression, FOLLOW [200] -> GOTO 216
	expression/L5 = . expression "|" expression, FOLLOW [200] -> GOTO 216
	expression/L6 = . expression "^" expression, FOLLOW [200] -> GOTO 216
	expression/L6 = . expression "&" expression, FOLLOW [200] -> GOTO 216
	expression/L7 = . expression "==" expression, FOLLOW [200] -> GOTO 216
	expression/L7 = . expression "!=" expression, FOLLOW [200] -> GOTO 216
	expression/L7 = . expression "<=" expression, FOLLOW [200] -> GOTO 216
	expression/L7 = . expression "<" expression, FOLLOW [200] -> GOTO 216
	expression/L7 = . expression ">=" expression, FOLLOW [200] -> GOTO 216
	expression/L7 = . expression ">" expression, FOLLOW [200] -> GOTO 216
	expression/L8 = . expression "+" expression, FOLLOW [200] -> GOTO 216
	expression/L8 = . expression "-" expression, FOLLOW [200] -> GOTO 216
	expression/L9 = . expression "*" expression, FOLLOW [200] -> GOTO 216
	expression/L9 = . expression "/" expression, FOLLOW [200] -> GOTO 216
	expression/L9 = . expression "%" expression, FOLLOW [200] -> GOTO 216
	expression/L10 = . expression "<<" expression, FOLLOW [200] -> GOTO 216
	expression/L10 = . expression ">>" expression, FOLLOW [200] -> GOTO 216
	expression/L11 = . expression "." IDENT, FOLLOW [200] -> GOTO 216
	expression/L12 = . expression "(" expressionlist ")", FOLLOW [200] -> GOTO 216
	expression/L12 = . expression "(" ")", FOLLOW [200] -> GOTO 216
	expression/L12 = . expression "[" expressionlist "]", FOLLOW [200] -> GOTO 216
	iexpression = . expression indirection IDENT, FOLLOW [200] -> GOTO 216
	expression/L11 = . iexpression, FOLLOW [200] -> GOTO 69
	expression/L1 = . BOOLEAN, FOLLOW [200] -> SHIFT BOOLEAN GOTO 70
	expression/L1 = . IDENT, FOLLOW [200] -> SHIFT IDENT GOTO 71
	expression/L1 = . DQSTRING, FOLLOW [200] -> SHIFT DQSTRING GOTO 72
	expression/L1 = . SQSTRING, FOLLOW [200] -> SHIFT SQSTRING GOTO 73
	expression/L1 = . CARDINAL, FOLLOW [200] -> SHIFT CARDINAL GOTO 74
	expression/L1 = . INTEGER, FOLLOW [200] -> SHIFT INTEGER GOTO 75
	expression/L1 = . FLOAT, FOLLOW [200] -> SHIFT FLOAT GOTO 76
	expression/L1 = . "(" expression ")", FOLLOW [200] -> SHIFT '(' GOTO 77
	expression/L8 = . "&" expression, FOLLOW [200] -> SHIFT '&' GOTO 79
	expression/L8 = . "+" expression, FOLLOW [200] -> SHIFT '+' GOTO 84
	expression/L8 = . "-" expression, FOLLOW [200] -> SHIFT '-' GOTO 85
	expression/L8 = . "~" expression, FOLLOW [200] -> SHIFT '~' GOTO 86
	expression/L8 = . "!" expression, FOLLOW [200] -> SHIFT '!' GOTO 87
	expression/L11 = . "*" expression, FOLLOW [200] -> SHIFT '*' GOTO 88
[151]
	statement = "while" "(" . expression ")" "{" statementlist "}", FOLLOW [89] -> GOTO 217
	expression/L2 = . expression "=" expression, FOLLOW [200] -> GOTO 217
	expression/L2 = . expression "+=" expression, FOLLOW [200] -> GOTO 217
	expression/L2 = . expression "-=" expression, FOLLOW [200] -> GOTO 217
	expression/L2 = . expression "*=" expression, FOLLOW [200] -> GOTO 217
	expression/L2 = . expression "/=" expression, FOLLOW [200] -> GOTO 217
	expression/L2 = . expression "%=" expression, FOLLOW [200] -> GOTO 217
	expression/L2 = . expression "&&=" expression, FOLLOW [200] -> GOTO 217
	expression/L2 = . expression "||=" expression, FOLLOW [200] -> GOTO 217
	expression/L2 = . expression "&=" expression, FOLLOW [200] -> GOTO 217
	expression/L2 = . expression "|=" expression, FOLLOW [200] -> GOTO 217
	expression/L2 = . expression "<<=" expression, FOLLOW [200] -> GOTO 217
	expression/L2 = . expression ">>=" expression, FOLLOW [200] -> GOTO 217
	expression/L3 = . expression "||" expression, FOLLOW [200] -> GOTO 217
	expression/L4 = . expression "&&" expression, FOLLOW [200] -> GOTO 217
	expression/L5 = . expression "|" expression, FOLLOW [200] -> GOTO 217
	expression/L6 = . expression "^" expression, FOLLOW [200] -> GOTO 217
	expression/L6 = . expression "&" expression, FOLLOW [200] -> GOTO 217
	expression/L7 = . expression "==" expression, FOLLOW [200] -> GOTO 217
	expression/L7 = . expression "!=" expression, FOLLOW [200] -> GOTO 217
	expression/L7 = . expression "<=" expression, FOLLOW [200] -> GOTO 217
	expression/L7 = . expression "<" expression, FOLLOW [200] -> GOTO 217
	expression/L7 = . expression ">=" expression, FOLLOW [200] -> GOTO 217
	expression/L7 = . expression ">" expression, FOLLOW [200] -> GOTO 217
	expression/L8 = . expression "+" expression, FOLLOW [200] -> GOTO 217
	expression/L8 = . expression "-" expression, FOLLOW [200] -> GOTO 217
	expression/L9 = . expression "*" expression, FOLLOW [200] -> GOTO 217
	expression/L9 = . expression "/" expression, FOLLOW [200] -> GOTO 217
	expression/L9 = . expression "%" expression, FOLLOW [200] -> GOTO 217
	expression/L10 = . expression "<<" expression, FOLLOW [200] -> GOTO 217
	expression/L10 = . expression ">>" expression, FOLLOW [200] -> GOTO 217
	expression/L11 = . expression "." IDENT, FOLLOW [200] -> GOTO 217
	expression/L12 = . expression "(" expressionlist ")", FOLLOW [200] -> GOTO 217
	expression/L12 = . expression "(" ")", FOLLOW [200] -> GOTO 217
	expression/L12 = . expression "[" expressionlist "]", FOLLOW [200] -> GOTO 217
	iexpression = . expression indirection IDENT, FOLLOW [200] -> GOTO 217
	expression/L11 = . iexpression, FOLLOW [200] -> GOTO 69
	expression/L1 = . BOOLEAN, FOLLOW [200] -> SHIFT BOOLEAN GOTO 70
	expression/L1 = . IDENT, FOLLOW [200] -> SHIFT IDENT GOTO 71
	expression/L1 = . DQSTRING, FOLLOW [200] -> SHIFT DQSTRING GOTO 72
	expression/L1 = . SQSTRING, FOLLOW [200] -> SHIFT SQSTRING GOTO 73
	expression/L1 = . CARDINAL, FOLLOW [200] -> SHIFT CARDINAL GOTO 74
	expression/L1 = . INTEGER, FOLLOW [200] -> SHIFT INTEGER GOTO 75
	expression/L1 = . FLOAT, FOLLOW [200] -> SHIFT FLOAT GOTO 76
	expression/L1 = . "(" expression ")", FOLLOW [200] -> SHIFT '(' GOTO 77
	expression/L8 = . "&" expression, FOLLOW [200] -> SHIFT '&' GOTO 79
	expression/L8 = . "+" expression, FOLLOW [200] -> SHIFT '+' GOTO 84
	expression/L8 = . "-" expression, FOLLOW [200] -> SHIFT '-' GOTO 85
	expression/L8 = . "~" expression, FOLLOW [200] -> SHIFT '~' GOTO 86
	expression/L8 = . "!" expression, FOLLOW [200] -> SHIFT '!' GOTO 87
	expression/L11 = . "*" expression, FOLLOW [200] -> SHIFT '*' GOTO 88
[152]
	iexpression = expression . indirection IDENT, FOLLOW [203] -> GOTO 109
	expression/L12 = expression . "(" expressionlist ")", FOLLOW [203] -> SHIFT '(' GOTO 110
	expression/L12 = expression . "(" ")", FOLLOW [203] -> SHIFT '(' GOTO 110
	expression/L6 = expression . "&" expression, FOLLOW [203] -> SHIFT '&' GOTO 112
	expression/L6 = expression . "^" expression, FOLLOW [203] -> SHIFT '^' GOTO 113
	expression/L2 = expression . "=" expression, FOLLOW [203] -> SHIFT '=' GOTO 114
	expression/L12 = expression . "[" expressionlist "]", FOLLOW [203] -> SHIFT '[' GOTO 115
	expression/L2 = expression . "+=" expression, FOLLOW [203] -> SHIFT "+=" GOTO 116
	expression/L2 = expression . "-=" expression, FOLLOW [203] -> SHIFT "-=" GOTO 117
	expression/L2 = expression . "*=" expression, FOLLOW [203] -> SHIFT "*=" GOTO 118
	expression/L2 = expression . "/=" expression, FOLLOW [203] -> SHIFT "/=" GOTO 119
	expression/L2 = expression . "%=" expression, FOLLOW [203] -> SHIFT "%=" GOTO 120
	expression/L2 = expression . "&&=" expression, FOLLOW [203] -> SHIFT "&&=" GOTO 121
	expression/L2 = expression . "||=" expression, FOLLOW [203] -> SHIFT "||=" GOTO 122
	expression/L2 = expression . "&=" expression, FOLLOW [203] -> SHIFT "&=" GOTO 123
	expression/L2 = expression . "|=" expression, FOLLOW [203] -> SHIFT "|=" GOTO 124
	expression/L2 = expression . "<<=" expression, FOLLOW [203] -> SHIFT "<<=" GOTO 125
	expression/L2 = expression . ">>=" expression, FOLLOW [203] -> SHIFT ">>=" GOTO 126
	expression/L3 = expression . "||" expression, FOLLOW [203] -> SHIFT "||" GOTO 127
	expression/L4 = expression . "&&" expression, FOLLOW [203] -> SHIFT "&&" GOTO 128
	expression/L5 = expression . "|" expression, FOLLOW [203] -> SHIFT '|' GOTO 129
	expression/L7 = expression . "==" expression, FOLLOW [203] -> SHIFT "==" GOTO 130
	expression/L7 = expression . "!=" expression, FOLLOW [203] -> SHIFT "!=" GOTO 131
	expression/L7 = expression . "<=" expression, FOLLOW [203] -> SHIFT "<=" GOTO 132
	expression/L7 = expression . "<" expression, FOLLOW [203] -> SHIFT '<' GOTO 133
	expression/L7 = expression . ">=" expression, FOLLOW [203] -> SHIFT ">=" GOTO 134
	expression/L7 = expression . ">" expression, FOLLOW [203] -> SHIFT '>' GOTO 135
	expression/L8 = expression . "+" expression, FOLLOW [203] -> SHIFT '+' GOTO 136
	expression/L8 = expression . "-" expression, FOLLOW [203] -> SHIFT '-' GOTO 137
	expression/L9 = expression . "*" expression, FOLLOW [203] -> SHIFT '*' GOTO 138
	expression/L9 = expression . "/" expression, FOLLOW [203] -> SHIFT '/' GOTO 139
	expression/L9 = expression . "%" expression, FOLLOW [203] -> SHIFT '%' GOTO 140
	expression/L10 = expression . "<<" expression, FOLLOW [203] -> SHIFT "<<" GOTO 141
	expression/L10 = expression . ">>" expression, FOLLOW [203] -> SHIFT ">>" GOTO 142
	expression/L11 = expression . "." IDENT, FOLLOW [203] -> SHIFT '.' GOTO 143
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 144
	expression/L8 = "+" expression . (72), FOLLOW [203] -> REDUCE expression #2 CALL operator "+"
[153]
	iexpression = expression . indirection IDENT, FOLLOW [203] -> GOTO 109
	expression/L12 = expression . "(" expressionlist ")", FOLLOW [203] -> SHIFT '(' GOTO 110
	expression/L12 = expression . "(" ")", FOLLOW [203] -> SHIFT '(' GOTO 110
	expression/L6 = expression . "&" expression, FOLLOW [203] -> SHIFT '&' GOTO 112
	expression/L6 = expression . "^" expression, FOLLOW [203] -> SHIFT '^' GOTO 113
	expression/L2 = expression . "=" expression, FOLLOW [203] -> SHIFT '=' GOTO 114
	expression/L12 = expression . "[" expressionlist "]", FOLLOW [203] -> SHIFT '[' GOTO 115
	expression/L2 = expression . "+=" expression, FOLLOW [203] -> SHIFT "+=" GOTO 116
	expression/L2 = expression . "-=" expression, FOLLOW [203] -> SHIFT "-=" GOTO 117
	expression/L2 = expression . "*=" expression, FOLLOW [203] -> SHIFT "*=" GOTO 118
	expression/L2 = expression . "/=" expression, FOLLOW [203] -> SHIFT "/=" GOTO 119
	expression/L2 = expression . "%=" expression, FOLLOW [203] -> SHIFT "%=" GOTO 120
	expression/L2 = expression . "&&=" expression, FOLLOW [203] -> SHIFT "&&=" GOTO 121
	expression/L2 = expression . "||=" expression, FOLLOW [203] -> SHIFT "||=" GOTO 122
	expression/L2 = expression . "&=" expression, FOLLOW [203] -> SHIFT "&=" GOTO 123
	expression/L2 = expression . "|=" expression, FOLLOW [203] -> SHIFT "|=" GOTO 124
	expression/L2 = expression . "<<=" expression, FOLLOW [203] -> SHIFT "<<=" GOTO 125
	expression/L2 = expression . ">>=" expression, FOLLOW [203] -> SHIFT ">>=" GOTO 126
	expression/L3 = expression . "||" expression, FOLLOW [203] -> SHIFT "||" GOTO 127
	expression/L4 = expression . "&&" expression, FOLLOW [203] -> SHIFT "&&" GOTO 128
	expression/L5 = expression . "|" expression, FOLLOW [203] -> SHIFT '|' GOTO 129
	expression/L7 = expression . "==" expression, FOLLOW [203] -> SHIFT "==" GOTO 130
	expression/L7 = expression . "!=" expression, FOLLOW [203] -> SHIFT "!=" GOTO 131
	expression/L7 = expression . "<=" expression, FOLLOW [203] -> SHIFT "<=" GOTO 132
	expression/L7 = expression . "<" expression, FOLLOW [203] -> SHIFT '<' GOTO 133
	expression/L7 = expression . ">=" expression, FOLLOW [203] -> SHIFT ">=" GOTO 134
	expression/L7 = expression . ">" expression, FOLLOW [203] -> SHIFT '>' GOTO 135
	expression/L8 = expression . "+" expression, FOLLOW [203] -> SHIFT '+' GOTO 136
	expression/L8 = expression . "-" expression, FOLLOW [203] -> SHIFT '-' GOTO 137
	expression/L9 = expression . "*" expression, FOLLOW [203] -> SHIFT '*' GOTO 138
	expression/L9 = expression . "/" expression, FOLLOW [203] -> SHIFT '/' GOTO 139
	expression/L9 = expression . "%" expression, FOLLOW [203] -> SHIFT '%' GOTO 140
	expression/L10 = expression . "<<" expression, FOLLOW [203] -> SHIFT "<<" GOTO 141
	expression/L10 = expression . ">>" expression, FOLLOW [203] -> SHIFT ">>" GOTO 142
	expression/L11 = expression . "." IDENT, FOLLOW [203] -> SHIFT '.' GOTO 143
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 144
	expression/L8 = "-" expression . (73), FOLLOW [203] -> REDUCE expression #2 CALL operator "-"
[154]
	iexpression = expression . indirection IDENT, FOLLOW [203] -> GOTO 109
	expression/L12 = expression . "(" expressionlist ")", FOLLOW [203] -> SHIFT '(' GOTO 110
	expression/L12 = expression . "(" ")", FOLLOW [203] -> SHIFT '(' GOTO 110
	expression/L6 = expression . "&" expression, FOLLOW [203] -> SHIFT '&' GOTO 112
	expression/L6 = expression . "^" expression, FOLLOW [203] -> SHIFT '^' GOTO 113
	expression/L2 = expression . "=" expression, FOLLOW [203] -> SHIFT '=' GOTO 114
	expression/L12 = expression . "[" expressionlist "]", FOLLOW [203] -> SHIFT '[' GOTO 115
	expression/L2 = expression . "+=" expression, FOLLOW [203] -> SHIFT "+=" GOTO 116
	expression/L2 = expression . "-=" expression, FOLLOW [203] -> SHIFT "-=" GOTO 117
	expression/L2 = expression . "*=" expression, FOLLOW [203] -> SHIFT "*=" GOTO 118
	expression/L2 = expression . "/=" expression, FOLLOW [203] -> SHIFT "/=" GOTO 119
	expression/L2 = expression . "%=" expression, FOLLOW [203] -> SHIFT "%=" GOTO 120
	expression/L2 = expression . "&&=" expression, FOLLOW [203] -> SHIFT "&&=" GOTO 121
	expression/L2 = expression . "||=" expression, FOLLOW [203] -> SHIFT "||=" GOTO 122
	expression/L2 = expression . "&=" expression, FOLLOW [203] -> SHIFT "&=" GOTO 123
	expression/L2 = expression . "|=" expression, FOLLOW [203] -> SHIFT "|=" GOTO 124
	expression/L2 = expression . "<<=" expression, FOLLOW [203] -> SHIFT "<<=" GOTO 125
	expression/L2 = expression . ">>=" expression, FOLLOW [203] -> SHIFT ">>=" GOTO 126
	expression/L3 = expression . "||" expression, FOLLOW [203] -> SHIFT "||" GOTO 127
	expression/L4 = expression . "&&" expression, FOLLOW [203] -> SHIFT "&&" GOTO 128
	expression/L5 = expression . "|" expression, FOLLOW [203] -> SHIFT '|' GOTO 129
	expression/L7 = expression . "==" expression, FOLLOW [203] -> SHIFT "==" GOTO 130
	expression/L7 = expression . "!=" expression, FOLLOW [203] -> SHIFT "!=" GOTO 131
	expression/L7 = expression . "<=" expression, FOLLOW [203] -> SHIFT "<=" GOTO 132
	expression/L7 = expression . "<" expression, FOLLOW [203] -> SHIFT '<' GOTO 133
	expression/L7 = expression . ">=" expression, FOLLOW [203] -> SHIFT ">=" GOTO 134
	expression/L7 = expression . ">" expression, FOLLOW [203] -> SHIFT '>' GOTO 135
	expression/L8 = expression . "+" expression, FOLLOW [203] -> SHIFT '+' GOTO 136
	expression/L8 = expression . "-" expression, FOLLOW [203] -> SHIFT '-' GOTO 137
	expression/L9 = expression . "*" expression, FOLLOW [203] -> SHIFT '*' GOTO 138
	expression/L9 = expression . "/" expression, FOLLOW [203] -> SHIFT '/' GOTO 139
	expression/L9 = expression . "%" expression, FOLLOW [203] -> SHIFT '%' GOTO 140
	expression/L10 = expression . "<<" expression, FOLLOW [203] -> SHIFT "<<" GOTO 141
	expression/L10 = expression . ">>" expression, FOLLOW [203] -> SHIFT ">>" GOTO 142
	expression/L11 = expression . "." IDENT, FOLLOW [203] -> SHIFT '.' GOTO 143
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 144
	expression/L8 = "~" expression . (74), FOLLOW [203] -> REDUCE expression #2 CALL operator "~"
[155]
	iexpression = expression . indirection IDENT, FOLLOW [203] -> GOTO 109
	expression/L12 = expression . "(" expressionlist ")", FOLLOW [203] -> SHIFT '(' GOTO 110
	expression/L12 = expression . "(" ")", FOLLOW [203] -> SHIFT '(' GOTO 110
	expression/L6 = expression . "&" expression, FOLLOW [203] -> SHIFT '&' GOTO 112
	expression/L6 = expression . "^" expression, FOLLOW [203] -> SHIFT '^' GOTO 113
	expression/L2 = expression . "=" expression, FOLLOW [203] -> SHIFT '=' GOTO 114
	expression/L12 = expression . "[" expressionlist "]", FOLLOW [203] -> SHIFT '[' GOTO 115
	expression/L2 = expression . "+=" expression, FOLLOW [203] -> SHIFT "+=" GOTO 116
	expression/L2 = expression . "-=" expression, FOLLOW [203] -> SHIFT "-=" GOTO 117
	expression/L2 = expression . "*=" expression, FOLLOW [203] -> SHIFT "*=" GOTO 118
	expression/L2 = expression . "/=" expression, FOLLOW [203] -> SHIFT "/=" GOTO 119
	expression/L2 = expression . "%=" expression, FOLLOW [203] -> SHIFT "%=" GOTO 120
	expression/L2 = expression . "&&=" expression, FOLLOW [203] -> SHIFT "&&=" GOTO 121
	expression/L2 = expression . "||=" expression, FOLLOW [203] -> SHIFT "||=" GOTO 122
	expression/L2 = expression . "&=" expression, FOLLOW [203] -> SHIFT "&=" GOTO 123
	expression/L2 = expression . "|=" expression, FOLLOW [203] -> SHIFT "|=" GOTO 124
	expression/L2 = expression . "<<=" expression, FOLLOW [203] -> SHIFT "<<=" GOTO 125
	expression/L2 = expression . ">>=" expression, FOLLOW [203] -> SHIFT ">>=" GOTO 126
	expression/L3 = expression . "||" expression, FOLLOW [203] -> SHIFT "||" GOTO 127
	expression/L4 = expression . "&&" expression, FOLLOW [203] -> SHIFT "&&" GOTO 128
	expression/L5 = expression . "|" expression, FOLLOW [203] -> SHIFT '|' GOTO 129
	expression/L7 = expression . "==" expression, FOLLOW [203] -> SHIFT "==" GOTO 130
	expression/L7 = expression . "!=" expression, FOLLOW [203] -> SHIFT "!=" GOTO 131
	expression/L7 = expression . "<=" expression, FOLLOW [203] -> SHIFT "<=" GOTO 132
	expression/L7 = expression . "<" expression, FOLLOW [203] -> SHIFT '<' GOTO 133
	expression/L7 = expression . ">=" expression, FOLLOW [203] -> SHIFT ">=" GOTO 134
	expression/L7 = expression . ">" expression, FOLLOW [203] -> SHIFT '>' GOTO 135
	expression/L8 = expression . "+" expression, FOLLOW [203] -> SHIFT '+' GOTO 136
	expression/L8 = expression . "-" expression, FOLLOW [203] -> SHIFT '-' GOTO 137
	expression/L9 = expression . "*" expression, FOLLOW [203] -> SHIFT '*' GOTO 138
	expression/L9 = expression . "/" expression, FOLLOW [203] -> SHIFT '/' GOTO 139
	expression/L9 = expression . "%" expression, FOLLOW [203] -> SHIFT '%' GOTO 140
	expression/L10 = expression . "<<" expression, FOLLOW [203] -> SHIFT "<<" GOTO 141
	expression/L10 = expression . ">>" expression, FOLLOW [203] -> SHIFT ">>" GOTO 142
	expression/L11 = expression . "." IDENT, FOLLOW [203] -> SHIFT '.' GOTO 143
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 144
	expression/L8 = "!" expression . (75), FOLLOW [203] -> REDUCE expression #2 CALL operator "!"
[156]
	iexpression = expression . indirection IDENT, FOLLOW [203] -> GOTO 109
	expression/L12 = expression . "(" expressionlist ")", FOLLOW [203] -> SHIFT '(' GOTO 110
	expression/L12 = expression . "(" ")", FOLLOW [203] -> SHIFT '(' GOTO 110
	expression/L6 = expression . "&" expression, FOLLOW [203] -> SHIFT '&' GOTO 112
	expression/L6 = expression . "^" expression, FOLLOW [203] -> SHIFT '^' GOTO 113
	expression/L2 = expression . "=" expression, FOLLOW [203] -> SHIFT '=' GOTO 114
	expression/L12 = expression . "[" expressionlist "]", FOLLOW [203] -> SHIFT '[' GOTO 115
	expression/L2 = expression . "+=" expression, FOLLOW [203] -> SHIFT "+=" GOTO 116
	expression/L2 = expression . "-=" expression, FOLLOW [203] -> SHIFT "-=" GOTO 117
	expression/L2 = expression . "*=" expression, FOLLOW [203] -> SHIFT "*=" GOTO 118
	expression/L2 = expression . "/=" expression, FOLLOW [203] -> SHIFT "/=" GOTO 119
	expression/L2 = expression . "%=" expression, FOLLOW [203] -> SHIFT "%=" GOTO 120
	expression/L2 = expression . "&&=" expression, FOLLOW [203] -> SHIFT "&&=" GOTO 121
	expression/L2 = expression . "||=" expression, FOLLOW [203] -> SHIFT "||=" GOTO 122
	expression/L2 = expression . "&=" expression, FOLLOW [203] -> SHIFT "&=" GOTO 123
	expression/L2 = expression . "|=" expression, FOLLOW [203] -> SHIFT "|=" GOTO 124
	expression/L2 = expression . "<<=" expression, FOLLOW [203] -> SHIFT "<<=" GOTO 125
	expression/L2 = expression . ">>=" expression, FOLLOW [203] -> SHIFT ">>=" GOTO 126
	expression/L3 = expression . "||" expression, FOLLOW [203] -> SHIFT "||" GOTO 127
	expression/L4 = expression . "&&" expression, FOLLOW [203] -> SHIFT "&&" GOTO 128
	expression/L5 = expression . "|" expression, FOLLOW [203] -> SHIFT '|' GOTO 129
	expression/L7 = expression . "==" expression, FOLLOW [203] -> SHIFT "==" GOTO 130
	expression/L7 = expression . "!=" expression, FOLLOW [203] -> SHIFT "!=" GOTO 131
	expression/L7 = expression . "<=" expression, FOLLOW [203] -> SHIFT "<=" GOTO 132
	expression/L7 = expression . "<" expression, FOLLOW [203] -> SHIFT '<' GOTO 133
	expression/L7 = expression . ">=" expression, FOLLOW [203] -> SHIFT ">=" GOTO 134
	expression/L7 = expression . ">" expression, FOLLOW [203] -> SHIFT '>' GOTO 135
	expression/L8 = expression . "+" expression, FOLLOW [203] -> SHIFT '+' GOTO 136
	expression/L8 = expression . "-" expression, FOLLOW [203] -> SHIFT '-' GOTO 137
	expression/L9 = expression . "*" expression, FOLLOW [203] -> SHIFT '*' GOTO 138
	expression/L9 = expression . "/" expression, FOLLOW [203] -> SHIFT '/' GOTO 139
	expression/L9 = expression . "%" expression, FOLLOW [203] -> SHIFT '%' GOTO 140
	expression/L10 = expression . "<<" expression, FOLLOW [203] -> SHIFT "<<" GOTO 141
	expression/L10 = expression . ">>" expression, FOLLOW [203] -> SHIFT ">>" GOTO 142
	expression/L11 = expression . "." IDENT, FOLLOW [203] -> SHIFT '.' GOTO 143
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 144
	expression/L11 = "*" expression . (82), FOLLOW [203] -> REDUCE expression #2 CALL operator "->"
[157]
	variabledefinition = typespec IDENT "[" expression "]" . "=" expression, FOLLOW [12] -> SHIFT '=' GOTO 218
	variabledefinition = typespec IDENT "[" expression "]" . (step:41), FOLLOW [12] -> REDUCE variabledefinition #5 CALL vardef_array
[158]
	functiondefinition = linkage "function" typespec IDENT callablebody . (27), FOLLOW [213] -> REDUCE functiondefinition #5 CALL funcdef
[159]
	paramdecl = typespec . IDENT, FOLLOW [162] -> SHIFT IDENT GOTO 219
[160]
	callablebody = "(" parameterlist . ")" "{" statementlist "}", FOLLOW [213] -> SHIFT ')' GOTO 220
[161]
	parameterlist = parameters . (30), FOLLOW [9] -> REDUCE parameterlist #1 CALL paramdeflist
[162]
	parameters = paramdecl . "," parameters, FOLLOW [9] -> SHIFT ',' GOTO 221
	parameters = paramdecl ., FOLLOW [9] -> REDUCE parameters #1
[163]
	typespec/L1 = "const" typename "^" "^" "&" . (20), FOLLOW [210] -> REDUCE typespec #5 CALL typespec "const^^&"
[164]
	structdefinition = "struct" IDENT "{" datadefinitionlist "}" . (step:22), FOLLOW [12] -> REDUCE structdefinition #5 CALL structdef
[165]
	datadefinitionlist = datadefinition datadefinitionlist ., FOLLOW [11] -> REDUCE datadefinitionlist #2
[166]
	interfacedefinition = "interface" IDENT "{" methoddefinitionlist "}" . (step:23), FOLLOW [12] -> REDUCE interfacedefinition #5 CALL interfacedef
[167]
	methoddefinitionlist = methoddefinition methoddefinitionlist ., FOLLOW [11] -> REDUCE methoddefinitionlist #2
[168]
	methoddefinition = "function" typespec . IDENT "(" parameterlist ")" ";", FOLLOW [158] -> SHIFT IDENT GOTO 222
[169]
	methoddefinition = "procedure" IDENT . "(" parameterlist ")" ";", FOLLOW [158] -> SHIFT '(' GOTO 223
[170]
	classdefinition = "class" IDENT "{" definitionlist "}" . (step:24), FOLLOW [12] -> REDUCE classdefinition #5 CALL classdef
[171]
	externdefinition = "extern" DQSTRING "function" typespec IDENT "(" . externparameterlist ")" ";", FOLLOW [51] -> GOTO 224
	externparameterlist = . externparameters, FOLLOW [9] -> GOTO 173
	externparameterlist = . externparameters, FOLLOW [9] -> GOTO 173
	typespec/L1 = . typename, FOLLOW [162] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [162] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [162] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [162] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [162] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [162] -> GOTO 8
	externparameters = . typespec "," externparameters, FOLLOW [9] -> GOTO 174
	externparameters = . typespec, FOLLOW [9] -> GOTO 174
	typename/L1 = . IDENT, FOLLOW [163] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [163] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [162] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [162] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [162] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [162] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [162] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [162] -> SHIFT "const" GOTO 18
	externparameters = ., FOLLOW [9] -> REDUCE externparameters #0
[172]
	externdefinition = "extern" DQSTRING "procedure" IDENT "(" externparameterlist . ")" ";", FOLLOW [51] -> SHIFT ')' GOTO 225
[173]
	externparameterlist = externparameters . (4), FOLLOW [9] -> REDUCE externparameterlist #1 CALL extern_paramdeflist
[174]
	externparameters = typespec . "," externparameters, FOLLOW [9] -> SHIFT ',' GOTO 226
	externparameters = typespec ., FOLLOW [9] -> REDUCE externparameters #1
[175]
	iexpression = expression indirection IDENT . (85), FOLLOW [203] -> REDUCE iexpression #3 CALL rep_operator "->"
[176]
	iexpression = expression . indirection IDENT, FOLLOW [203] -> GOTO 109
	expression/L12 = expression . "(" expressionlist ")", FOLLOW [203] -> SHIFT '(' GOTO 110
	expression/L12 = expression . "(" ")", FOLLOW [203] -> SHIFT '(' GOTO 110
	expressionlist = expression . "," expressionlist, FOLLOW [211] -> SHIFT ',' GOTO 227
	expression/L6 = expression . "&" expression, FOLLOW [203] -> SHIFT '&' GOTO 112
	expression/L6 = expression . "^" expression, FOLLOW [203] -> SHIFT '^' GOTO 113
	expression/L2 = expression . "=" expression, FOLLOW [203] -> SHIFT '=' GOTO 114
	expression/L12 = expression . "[" expressionlist "]", FOLLOW [203] -> SHIFT '[' GOTO 115
	expression/L2 = expression . "+=" expression, FOLLOW [203] -> SHIFT "+=" GOTO 116
	expression/L2 = expression . "-=" expression, FOLLOW [203] -> SHIFT "-=" GOTO 117
	expression/L2 = expression . "*=" expression, FOLLOW [203] -> SHIFT "*=" GOTO 118
	expression/L2 = expression . "/=" expression, FOLLOW [203] -> SHIFT "/=" GOTO 119
	expression/L2 = expression . "%=" expression, FOLLOW [203] -> SHIFT "%=" GOTO 120
	expression/L2 = expression . "&&=" expression, FOLLOW [203] -> SHIFT "&&=" GOTO 121
	expression/L2 = expression . "||=" expression, FOLLOW [203] -> SHIFT "||=" GOTO 122
	expression/L2 = expression . "&=" expression, FOLLOW [203] -> SHIFT "&=" GOTO 123
	expression/L2 = expression . "|=" expression, FOLLOW [203] -> SHIFT "|=" GOTO 124
	expression/L2 = expression . "<<=" expression, FOLLOW [203] -> SHIFT "<<=" GOTO 125
	expression/L2 = expression . ">>=" expression, FOLLOW [203] -> SHIFT ">>=" GOTO 126
	expression/L3 = expression . "||" expression, FOLLOW [203] -> SHIFT "||" GOTO 127
	expression/L4 = expression . "&&" expression, FOLLOW [203] -> SHIFT "&&" GOTO 128
	expression/L5 = expression . "|" expression, FOLLOW [203] -> SHIFT '|' GOTO 129
	expression/L7 = expression . "==" expression, FOLLOW [203] -> SHIFT "==" GOTO 130
	expression/L7 = expression . "!=" expression, FOLLOW [203] -> SHIFT "!=" GOTO 131
	expression/L7 = expression . "<=" expression, FOLLOW [203] -> SHIFT "<=" GOTO 132
	expression/L7 = expression . "<" expression, FOLLOW [203] -> SHIFT '<' GOTO 133
	expression/L7 = expression . ">=" expression, FOLLOW [203] -> SHIFT ">=" GOTO 134
	expression/L7 = expression . ">" expression, FOLLOW [203] -> SHIFT '>' GOTO 135
	expression/L8 = expression . "+" expression, FOLLOW [203] -> SHIFT '+' GOTO 136
	expression/L8 = expression . "-" expression, FOLLOW [203] -> SHIFT '-' GOTO 137
	expression/L9 = expression . "*" expression, FOLLOW [203] -> SHIFT '*' GOTO 138
	expression/L9 = expression . "/" expression, FOLLOW [203] -> SHIFT '/' GOTO 139
	expression/L9 = expression . "%" expression, FOLLOW [203] -> SHIFT '%' GOTO 140
	expression/L10 = expression . "<<" expression, FOLLOW [203] -> SHIFT "<<" GOTO 141
	expression/L10 = expression . ">>" expression, FOLLOW [203] -> SHIFT ">>" GOTO 142
	expression/L11 = expression . "." IDENT, FOLLOW [203] -> SHIFT '.' GOTO 143
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 144
	expressionlist = expression ., FOLLOW [211] -> REDUCE expressionlist #1
[177]
	expression/L12 = expression "(" expressionlist . ")", FOLLOW [203] -> SHIFT ')' GOTO 228
[178]
	expression/L12 = expression "(" ")" . (83), FOLLOW [203] -> REDUCE expression #3 CALL operator "()"
[179]
	iexpression = expression . indirection IDENT, FOLLOW [203] -> GOTO 109
	expression/L12 = expression . "(" expressionlist ")", FOLLOW [203] -> SHIFT '(' GOTO 110
	expression/L12 = expression . "(" ")", FOLLOW [203] -> SHIFT '(' GOTO 110
	expression/L6 = expression . "&" expression, FOLLOW [203] -> SHIFT '&' GOTO 112
	expression/L6 = expression . "^" expression, FOLLOW [203] -> SHIFT '^' GOTO 113
	expression/L2 = expression . "=" expression, FOLLOW [203] -> SHIFT '=' GOTO 114
	expression/L12 = expression . "[" expressionlist "]", FOLLOW [203] -> SHIFT '[' GOTO 115
	expression/L2 = expression . "+=" expression, FOLLOW [203] -> SHIFT "+=" GOTO 116
	expression/L2 = expression . "-=" expression, FOLLOW [203] -> SHIFT "-=" GOTO 117
	expression/L2 = expression . "*=" expression, FOLLOW [203] -> SHIFT "*=" GOTO 118
	expression/L2 = expression . "/=" expression, FOLLOW [203] -> SHIFT "/=" GOTO 119
	expression/L2 = expression . "%=" expression, FOLLOW [203] -> SHIFT "%=" GOTO 120
	expression/L2 = expression . "&&=" expression, FOLLOW [203] -> SHIFT "&&=" GOTO 121
	expression/L2 = expression . "||=" expression, FOLLOW [203] -> SHIFT "||=" GOTO 122
	expression/L2 = expression . "&=" expression, FOLLOW [203] -> SHIFT "&=" GOTO 123
	expression/L2 = expression . "|=" expression, FOLLOW [203] -> SHIFT "|=" GOTO 124
	expression/L2 = expression . "<<=" expression, FOLLOW [203] -> SHIFT "<<=" GOTO 125
	expression/L2 = expression . ">>=" expression, FOLLOW [203] -> SHIFT ">>=" GOTO 126
	expression/L3 = expression . "||" expression, FOLLOW [203] -> SHIFT "||" GOTO 127
	expression/L4 = expression . "&&" expression, FOLLOW [203] -> SHIFT "&&" GOTO 128
	expression/L5 = expression . "|" expression, FOLLOW [203] -> SHIFT '|' GOTO 129
	expression/L7 = expression . "==" expression, FOLLOW [203] -> SHIFT "==" GOTO 130
	expression/L7 = expression . "!=" expression, FOLLOW [203] -> SHIFT "!=" GOTO 131
	expression/L7 = expression . "<=" expression, FOLLOW [203] -> SHIFT "<=" GOTO 132
	expression/L7 = expression . "<" expression, FOLLOW [203] -> SHIFT '<' GOTO 133
	expression/L7 = expression . ">=" expression, FOLLOW [203] -> SHIFT ">=" GOTO 134
	expression/L7 = expression . ">" expression, FOLLOW [203] -> SHIFT '>' GOTO 135
	expression/L8 = expression . "+" expression, FOLLOW [203] -> SHIFT '+' GOTO 136
	expression/L8 = expression . "-" expression, FOLLOW [203] -> SHIFT '-' GOTO 137
	expression/L9 = expression . "*" expression, FOLLOW [203] -> SHIFT '*' GOTO 138
	expression/L9 = expression . "/" expression, FOLLOW [203] -> SHIFT '/' GOTO 139
	expression/L9 = expression . "%" expression, FOLLOW [203] -> SHIFT '%' GOTO 140
	expression/L10 = expression . "<<" expression, FOLLOW [203] -> SHIFT "<<" GOTO 141
	expression/L10 = expression . ">>" expression, FOLLOW [203] -> SHIFT ">>" GOTO 142
	expression/L11 = expression . "." IDENT, FOLLOW [203] -> SHIFT '.' GOTO 143
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 144
	expression/L6 = expression "&" expression . (65), FOLLOW [203] -> REDUCE expression #3 CALL operator "&"
[180]
	iexpression = expression . indirection IDENT, FOLLOW [203] -> GOTO 109
	expression/L12 = expression . "(" expressionlist ")", FOLLOW [203] -> SHIFT '(' GOTO 110
	expression/L12 = expression . "(" ")", FOLLOW [203] -> SHIFT '(' GOTO 110
	expression/L6 = expression . "&" expression, FOLLOW [203] -> SHIFT '&' GOTO 112
	expression/L6 = expression . "^" expression, FOLLOW [203] -> SHIFT '^' GOTO 113
	expression/L2 = expression . "=" expression, FOLLOW [203] -> SHIFT '=' GOTO 114
	expression/L12 = expression . "[" expressionlist "]", FOLLOW [203] -> SHIFT '[' GOTO 115
	expression/L2 = expression . "+=" expression, FOLLOW [203] -> SHIFT "+=" GOTO 116
	expression/L2 = expression . "-=" expression, FOLLOW [203] -> SHIFT "-=" GOTO 117
	expression/L2 = expression . "*=" expression, FOLLOW [203] -> SHIFT "*=" GOTO 118
	expression/L2 = expression . "/=" expression, FOLLOW [203] -> SHIFT "/=" GOTO 119
	expression/L2 = expression . "%=" expression, FOLLOW [203] -> SHIFT "%=" GOTO 120
	expression/L2 = expression . "&&=" expression, FOLLOW [203] -> SHIFT "&&=" GOTO 121
	expression/L2 = expression . "||=" expression, FOLLOW [203] -> SHIFT "||=" GOTO 122
	expression/L2 = expression . "&=" expression, FOLLOW [203] -> SHIFT "&=" GOTO 123
	expression/L2 = expression . "|=" expression, FOLLOW [203] -> SHIFT "|=" GOTO 124
	expression/L2 = expression . "<<=" expression, FOLLOW [203] -> SHIFT "<<=" GOTO 125
	expression/L2 = expression . ">>=" expression, FOLLOW [203] -> SHIFT ">>=" GOTO 126
	expression/L3 = expression . "||" expression, FOLLOW [203] -> SHIFT "||" GOTO 127
	expression/L4 = expression . "&&" expression, FOLLOW [203] -> SHIFT "&&" GOTO 128
	expression/L5 = expression . "|" expression, FOLLOW [203] -> SHIFT '|' GOTO 129
	expression/L7 = expression . "==" expression, FOLLOW [203] -> SHIFT "==" GOTO 130
	expression/L7 = expression . "!=" expression, FOLLOW [203] -> SHIFT "!=" GOTO 131
	expression/L7 = expression . "<=" expression, FOLLOW [203] -> SHIFT "<=" GOTO 132
	expression/L7 = expression . "<" expression, FOLLOW [203] -> SHIFT '<' GOTO 133
	expression/L7 = expression . ">=" expression, FOLLOW [203] -> SHIFT ">=" GOTO 134
	expression/L7 = expression . ">" expression, FOLLOW [203] -> SHIFT '>' GOTO 135
	expression/L8 = expression . "+" expression, FOLLOW [203] -> SHIFT '+' GOTO 136
	expression/L8 = expression . "-" expression, FOLLOW [203] -> SHIFT '-' GOTO 137
	expression/L9 = expression . "*" expression, FOLLOW [203] -> SHIFT '*' GOTO 138
	expression/L9 = expression . "/" expression, FOLLOW [203] -> SHIFT '/' GOTO 139
	expression/L9 = expression . "%" expression, FOLLOW [203] -> SHIFT '%' GOTO 140
	expression/L10 = expression . "<<" expression, FOLLOW [203] -> SHIFT "<<" GOTO 141
	expression/L10 = expression . ">>" expression, FOLLOW [203] -> SHIFT ">>" GOTO 142
	expression/L11 = expression . "." IDENT, FOLLOW [203] -> SHIFT '.' GOTO 143
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 144
	expression/L6 = expression "^" expression . (64), FOLLOW [203] -> REDUCE expression #3 CALL operator "^"
[181]
	iexpression = expression . indirection IDENT, FOLLOW [203] -> GOTO 109
	expression/L12 = expression . "(" expressionlist ")", FOLLOW [203] -> SHIFT '(' GOTO 110
	expression/L12 = expression . "(" ")", FOLLOW [203] -> SHIFT '(' GOTO 110
	expression/L6 = expression . "&" expression, FOLLOW [203] -> SHIFT '&' GOTO 112
	expression/L6 = expression . "^" expression, FOLLOW [203] -> SHIFT '^' GOTO 113
	expression/L2 = expression . "=" expression, FOLLOW [203] -> SHIFT '=' GOTO 114
	expression/L12 = expression . "[" expressionlist "]", FOLLOW [203] -> SHIFT '[' GOTO 115
	expression/L2 = expression . "+=" expression, FOLLOW [203] -> SHIFT "+=" GOTO 116
	expression/L2 = expression . "-=" expression, FOLLOW [203] -> SHIFT "-=" GOTO 117
	expression/L2 = expression . "*=" expression, FOLLOW [203] -> SHIFT "*=" GOTO 118
	expression/L2 = expression . "/=" expression, FOLLOW [203] -> SHIFT "/=" GOTO 119
	expression/L2 = expression . "%=" expression, FOLLOW [203] -> SHIFT "%=" GOTO 120
	expression/L2 = expression . "&&=" expression, FOLLOW [203] -> SHIFT "&&=" GOTO 121
	expression/L2 = expression . "||=" expression, FOLLOW [203] -> SHIFT "||=" GOTO 122
	expression/L2 = expression . "&=" expression, FOLLOW [203] -> SHIFT "&=" GOTO 123
	expression/L2 = expression . "|=" expression, FOLLOW [203] -> SHIFT "|=" GOTO 124
	expression/L2 = expression . "<<=" expression, FOLLOW [203] -> SHIFT "<<=" GOTO 125
	expression/L2 = expression . ">>=" expression, FOLLOW [203] -> SHIFT ">>=" GOTO 126
	expression/L3 = expression . "||" expression, FOLLOW [203] -> SHIFT "||" GOTO 127
	expression/L4 = expression . "&&" expression, FOLLOW [203] -> SHIFT "&&" GOTO 128
	expression/L5 = expression . "|" expression, FOLLOW [203] -> SHIFT '|' GOTO 129
	expression/L7 = expression . "==" expression, FOLLOW [203] -> SHIFT "==" GOTO 130
	expression/L7 = expression . "!=" expression, FOLLOW [203] -> SHIFT "!=" GOTO 131
	expression/L7 = expression . "<=" expression, FOLLOW [203] -> SHIFT "<=" GOTO 132
	expression/L7 = expression . "<" expression, FOLLOW [203] -> SHIFT '<' GOTO 133
	expression/L7 = expression . ">=" expression, FOLLOW [203] -> SHIFT ">=" GOTO 134
	expression/L7 = expression . ">" expression, FOLLOW [203] -> SHIFT '>' GOTO 135
	expression/L8 = expression . "+" expression, FOLLOW [203] -> SHIFT '+' GOTO 136
	expression/L8 = expression . "-" expression, FOLLOW [203] -> SHIFT '-' GOTO 137
	expression/L9 = expression . "*" expression, FOLLOW [203] -> SHIFT '*' GOTO 138
	expression/L9 = expression . "/" expression, FOLLOW [203] -> SHIFT '/' GOTO 139
	expression/L9 = expression . "%" expression, FOLLOW [203] -> SHIFT '%' GOTO 140
	expression/L10 = expression . "<<" expression, FOLLOW [203] -> SHIFT "<<" GOTO 141
	expression/L10 = expression . ">>" expression, FOLLOW [203] -> SHIFT ">>" GOTO 142
	expression/L11 = expression . "." IDENT, FOLLOW [203] -> SHIFT '.' GOTO 143
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 144
	expression/L2 = expression "=" expression . (49), FOLLOW [203] -> REDUCE expression #3 CALL operator "="
[182]
	expression/L12 = expression "[" expressionlist . "]", FOLLOW [203] -> SHIFT ']' GOTO 229
[183]
	iexpression = expression . indirection IDENT, FOLLOW [203] -> GOTO 109
	expression/L12 = expression . "(" expressionlist ")", FOLLOW [203] -> SHIFT '(' GOTO 110
	expression/L12 = expression . "(" ")", FOLLOW [203] -> SHIFT '(' GOTO 110
	expression/L6 = expression . "&" expression, FOLLOW [203] -> SHIFT '&' GOTO 112
	expression/L6 = expression . "^" expression, FOLLOW [203] -> SHIFT '^' GOTO 113
	expression/L2 = expression . "=" expression, FOLLOW [203] -> SHIFT '=' GOTO 114
	expression/L12 = expression . "[" expressionlist "]", FOLLOW [203] -> SHIFT '[' GOTO 115
	expression/L2 = expression . "+=" expression, FOLLOW [203] -> SHIFT "+=" GOTO 116
	expression/L2 = expression . "-=" expression, FOLLOW [203] -> SHIFT "-=" GOTO 117
	expression/L2 = expression . "*=" expression, FOLLOW [203] -> SHIFT "*=" GOTO 118
	expression/L2 = expression . "/=" expression, FOLLOW [203] -> SHIFT "/=" GOTO 119
	expression/L2 = expression . "%=" expression, FOLLOW [203] -> SHIFT "%=" GOTO 120
	expression/L2 = expression . "&&=" expression, FOLLOW [203] -> SHIFT "&&=" GOTO 121
	expression/L2 = expression . "||=" expression, FOLLOW [203] -> SHIFT "||=" GOTO 122
	expression/L2 = expression . "&=" expression, FOLLOW [203] -> SHIFT "&=" GOTO 123
	expression/L2 = expression . "|=" expression, FOLLOW [203] -> SHIFT "|=" GOTO 124
	expression/L2 = expression . "<<=" expression, FOLLOW [203] -> SHIFT "<<=" GOTO 125
	expression/L2 = expression . ">>=" expression, FOLLOW [203] -> SHIFT ">>=" GOTO 126
	expression/L3 = expression . "||" expression, FOLLOW [203] -> SHIFT "||" GOTO 127
	expression/L4 = expression . "&&" expression, FOLLOW [203] -> SHIFT "&&" GOTO 128
	expression/L5 = expression . "|" expression, FOLLOW [203] -> SHIFT '|' GOTO 129
	expression/L7 = expression . "==" expression, FOLLOW [203] -> SHIFT "==" GOTO 130
	expression/L7 = expression . "!=" expression, FOLLOW [203] -> SHIFT "!=" GOTO 131
	expression/L7 = expression . "<=" expression, FOLLOW [203] -> SHIFT "<=" GOTO 132
	expression/L7 = expression . "<" expression, FOLLOW [203] -> SHIFT '<' GOTO 133
	expression/L7 = expression . ">=" expression, FOLLOW [203] -> SHIFT ">=" GOTO 134
	expression/L7 = expression . ">" expression, FOLLOW [203] -> SHIFT '>' GOTO 135
	expression/L8 = expression . "+" expression, FOLLOW [203] -> SHIFT '+' GOTO 136
	expression/L8 = expression . "-" expression, FOLLOW [203] -> SHIFT '-' GOTO 137
	expression/L9 = expression . "*" expression, FOLLOW [203] -> SHIFT '*' GOTO 138
	expression/L9 = expression . "/" expression, FOLLOW [203] -> SHIFT '/' GOTO 139
	expression/L9 = expression . "%" expression, FOLLOW [203] -> SHIFT '%' GOTO 140
	expression/L10 = expression . "<<" expression, FOLLOW [203] -> SHIFT "<<" GOTO 141
	expression/L10 = expression . ">>" expression, FOLLOW [203] -> SHIFT ">>" GOTO 142
	expression/L11 = expression . "." IDENT, FOLLOW [203] -> SHIFT '.' GOTO 143
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 144
	expression/L2 = expression "+=" expression . (50), FOLLOW [203] -> REDUCE expression #3 CALL assign_operator "+"
[184]
	iexpression = expression . indirection IDENT, FOLLOW [203] -> GOTO 109
	expression/L12 = expression . "(" expressionlist ")", FOLLOW [203] -> SHIFT '(' GOTO 110
	expression/L12 = expression . "(" ")", FOLLOW [203] -> SHIFT '(' GOTO 110
	expression/L6 = expression . "&" expression, FOLLOW [203] -> SHIFT '&' GOTO 112
	expression/L6 = expression . "^" expression, FOLLOW [203] -> SHIFT '^' GOTO 113
	expression/L2 = expression . "=" expression, FOLLOW [203] -> SHIFT '=' GOTO 114
	expression/L12 = expression . "[" expressionlist "]", FOLLOW [203] -> SHIFT '[' GOTO 115
	expression/L2 = expression . "+=" expression, FOLLOW [203] -> SHIFT "+=" GOTO 116
	expression/L2 = expression . "-=" expression, FOLLOW [203] -> SHIFT "-=" GOTO 117
	expression/L2 = expression . "*=" expression, FOLLOW [203] -> SHIFT "*=" GOTO 118
	expression/L2 = expression . "/=" expression, FOLLOW [203] -> SHIFT "/=" GOTO 119
	expression/L2 = expression . "%=" expression, FOLLOW [203] -> SHIFT "%=" GOTO 120
	expression/L2 = expression . "&&=" expression, FOLLOW [203] -> SHIFT "&&=" GOTO 121
	expression/L2 = expression . "||=" expression, FOLLOW [203] -> SHIFT "||=" GOTO 122
	expression/L2 = expression . "&=" expression, FOLLOW [203] -> SHIFT "&=" GOTO 123
	expression/L2 = expression . "|=" expression, FOLLOW [203] -> SHIFT "|=" GOTO 124
	expression/L2 = expression . "<<=" expression, FOLLOW [203] -> SHIFT "<<=" GOTO 125
	expression/L2 = expression . ">>=" expression, FOLLOW [203] -> SHIFT ">>=" GOTO 126
	expression/L3 = expression . "||" expression, FOLLOW [203] -> SHIFT "||" GOTO 127
	expression/L4 = expression . "&&" expression, FOLLOW [203] -> SHIFT "&&" GOTO 128
	expression/L5 = expression . "|" expression, FOLLOW [203] -> SHIFT '|' GOTO 129
	expression/L7 = expression . "==" expression, FOLLOW [203] -> SHIFT "==" GOTO 130
	expression/L7 = expression . "!=" expression, FOLLOW [203] -> SHIFT "!=" GOTO 131
	expression/L7 = expression . "<=" expression, FOLLOW [203] -> SHIFT "<=" GOTO 132
	expression/L7 = expression . "<" expression, FOLLOW [203] -> SHIFT '<' GOTO 133
	expression/L7 = expression . ">=" expression, FOLLOW [203] -> SHIFT ">=" GOTO 134
	expression/L7 = expression . ">" expression, FOLLOW [203] -> SHIFT '>' GOTO 135
	expression/L8 = expression . "+" expression, FOLLOW [203] -> SHIFT '+' GOTO 136
	expression/L8 = expression . "-" expression, FOLLOW [203] -> SHIFT '-' GOTO 137
	expression/L9 = expression . "*" expression, FOLLOW [203] -> SHIFT '*' GOTO 138
	expression/L9 = expression . "/" expression, FOLLOW [203] -> SHIFT '/' GOTO 139
	expression/L9 = expression . "%" expression, FOLLOW [203] -> SHIFT '%' GOTO 140
	expression/L10 = expression . "<<" expression, FOLLOW [203] -> SHIFT "<<" GOTO 141
	expression/L10 = expression . ">>" expression, FOLLOW [203] -> SHIFT ">>" GOTO 142
	expression/L11 = expression . "." IDENT, FOLLOW [203] -> SHIFT '.' GOTO 143
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 144
	expression/L2 = expression "-=" expression . (51), FOLLOW [203] -> REDUCE expression #3 CALL assign_operator "-"
[185]
	iexpression = expression . indirection IDENT, FOLLOW [203] -> GOTO 109
	expression/L12 = expression . "(" expressionlist ")", FOLLOW [203] -> SHIFT '(' GOTO 110
	expression/L12 = expression . "(" ")", FOLLOW [203] -> SHIFT '(' GOTO 110
	expression/L6 = expression . "&" expression, FOLLOW [203] -> SHIFT '&' GOTO 112
	expression/L6 = expression . "^" expression, FOLLOW [203] -> SHIFT '^' GOTO 113
	expression/L2 = expression . "=" expression, FOLLOW [203] -> SHIFT '=' GOTO 114
	expression/L12 = expression . "[" expressionlist "]", FOLLOW [203] -> SHIFT '[' GOTO 115
	expression/L2 = expression . "+=" expression, FOLLOW [203] -> SHIFT "+=" GOTO 116
	expression/L2 = expression . "-=" expression, FOLLOW [203] -> SHIFT "-=" GOTO 117
	expression/L2 = expression . "*=" expression, FOLLOW [203] -> SHIFT "*=" GOTO 118
	expression/L2 = expression . "/=" expression, FOLLOW [203] -> SHIFT "/=" GOTO 119
	expression/L2 = expression . "%=" expression, FOLLOW [203] -> SHIFT "%=" GOTO 120
	expression/L2 = expression . "&&=" expression, FOLLOW [203] -> SHIFT "&&=" GOTO 121
	expression/L2 = expression . "||=" expression, FOLLOW [203] -> SHIFT "||=" GOTO 122
	expression/L2 = expression . "&=" expression, FOLLOW [203] -> SHIFT "&=" GOTO 123
	expression/L2 = expression . "|=" expression, FOLLOW [203] -> SHIFT "|=" GOTO 124
	expression/L2 = expression . "<<=" expression, FOLLOW [203] -> SHIFT "<<=" GOTO 125
	expression/L2 = expression . ">>=" expression, FOLLOW [203] -> SHIFT ">>=" GOTO 126
	expression/L3 = expression . "||" expression, FOLLOW [203] -> SHIFT "||" GOTO 127
	expression/L4 = expression . "&&" expression, FOLLOW [203] -> SHIFT "&&" GOTO 128
	expression/L5 = expression . "|" expression, FOLLOW [203] -> SHIFT '|' GOTO 129
	expression/L7 = expression . "==" expression, FOLLOW [203] -> SHIFT "==" GOTO 130
	expression/L7 = expression . "!=" expression, FOLLOW [203] -> SHIFT "!=" GOTO 131
	expression/L7 = expression . "<=" expression, FOLLOW [203] -> SHIFT "<=" GOTO 132
	expression/L7 = expression . "<" expression, FOLLOW [203] -> SHIFT '<' GOTO 133
	expression/L7 = expression . ">=" expression, FOLLOW [203] -> SHIFT ">=" GOTO 134
	expression/L7 = expression . ">" expression, FOLLOW [203] -> SHIFT '>' GOTO 135
	expression/L8 = expression . "+" expression, FOLLOW [203] -> SHIFT '+' GOTO 136
	expression/L8 = expression . "-" expression, FOLLOW [203] -> SHIFT '-' GOTO 137
	expression/L9 = expression . "*" expression, FOLLOW [203] -> SHIFT '*' GOTO 138
	expression/L9 = expression . "/" expression, FOLLOW [203] -> SHIFT '/' GOTO 139
	expression/L9 = expression . "%" expression, FOLLOW [203] -> SHIFT '%' GOTO 140
	expression/L10 = expression . "<<" expression, FOLLOW [203] -> SHIFT "<<" GOTO 141
	expression/L10 = expression . ">>" expression, FOLLOW [203] -> SHIFT ">>" GOTO 142
	expression/L11 = expression . "." IDENT, FOLLOW [203] -> SHIFT '.' GOTO 143
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 144
	expression/L2 = expression "*=" expression . (52), FOLLOW [203] -> REDUCE expression #3 CALL assign_operator "*"
[186]
	iexpression = expression . indirection IDENT, FOLLOW [203] -> GOTO 109
	expression/L12 = expression . "(" expressionlist ")", FOLLOW [203] -> SHIFT '(' GOTO 110
	expression/L12 = expression . "(" ")", FOLLOW [203] -> SHIFT '(' GOTO 110
	expression/L6 = expression . "&" expression, FOLLOW [203] -> SHIFT '&' GOTO 112
	expression/L6 = expression . "^" expression, FOLLOW [203] -> SHIFT '^' GOTO 113
	expression/L2 = expression . "=" expression, FOLLOW [203] -> SHIFT '=' GOTO 114
	expression/L12 = expression . "[" expressionlist "]", FOLLOW [203] -> SHIFT '[' GOTO 115
	expression/L2 = expression . "+=" expression, FOLLOW [203] -> SHIFT "+=" GOTO 116
	expression/L2 = expression . "-=" expression, FOLLOW [203] -> SHIFT "-=" GOTO 117
	expression/L2 = expression . "*=" expression, FOLLOW [203] -> SHIFT "*=" GOTO 118
	expression/L2 = expression . "/=" expression, FOLLOW [203] -> SHIFT "/=" GOTO 119
	expression/L2 = expression . "%=" expression, FOLLOW [203] -> SHIFT "%=" GOTO 120
	expression/L2 = expression . "&&=" expression, FOLLOW [203] -> SHIFT "&&=" GOTO 121
	expression/L2 = expression . "||=" expression, FOLLOW [203] -> SHIFT "||=" GOTO 122
	expression/L2 = expression . "&=" expression, FOLLOW [203] -> SHIFT "&=" GOTO 123
	expression/L2 = expression . "|=" expression, FOLLOW [203] -> SHIFT "|=" GOTO 124
	expression/L2 = expression . "<<=" expression, FOLLOW [203] -> SHIFT "<<=" GOTO 125
	expression/L2 = expression . ">>=" expression, FOLLOW [203] -> SHIFT ">>=" GOTO 126
	expression/L3 = expression . "||" expression, FOLLOW [203] -> SHIFT "||" GOTO 127
	expression/L4 = expression . "&&" expression, FOLLOW [203] -> SHIFT "&&" GOTO 128
	expression/L5 = expression . "|" expression, FOLLOW [203] -> SHIFT '|' GOTO 129
	expression/L7 = expression . "==" expression, FOLLOW [203] -> SHIFT "==" GOTO 130
	expression/L7 = expression . "!=" expression, FOLLOW [203] -> SHIFT "!=" GOTO 131
	expression/L7 = expression . "<=" expression, FOLLOW [203] -> SHIFT "<=" GOTO 132
	expression/L7 = expression . "<" expression, FOLLOW [203] -> SHIFT '<' GOTO 133
	expression/L7 = expression . ">=" expression, FOLLOW [203] -> SHIFT ">=" GOTO 134
	expression/L7 = expression . ">" expression, FOLLOW [203] -> SHIFT '>' GOTO 135
	expression/L8 = expression . "+" expression, FOLLOW [203] -> SHIFT '+' GOTO 136
	expression/L8 = expression . "-" expression, FOLLOW [203] -> SHIFT '-' GOTO 137
	expression/L9 = expression . "*" expression, FOLLOW [203] -> SHIFT '*' GOTO 138
	expression/L9 = expression . "/" expression, FOLLOW [203] -> SHIFT '/' GOTO 139
	expression/L9 = expression . "%" expression, FOLLOW [203] -> SHIFT '%' GOTO 140
	expression/L10 = expression . "<<" expression, FOLLOW [203] -> SHIFT "<<" GOTO 141
	expression/L10 = expression . ">>" expression, FOLLOW [203] -> SHIFT ">>" GOTO 142
	expression/L11 = expression . "." IDENT, FOLLOW [203] -> SHIFT '.' GOTO 143
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 144
	expression/L2 = expression "/=" expression . (53), FOLLOW [203] -> REDUCE expression #3 CALL assign_operator "/"
[187]
	iexpression = expression . indirection IDENT, FOLLOW [203] -> GOTO 109
	expression/L12 = expression . "(" expressionlist ")", FOLLOW [203] -> SHIFT '(' GOTO 110
	expression/L12 = expression . "(" ")", FOLLOW [203] -> SHIFT '(' GOTO 110
	expression/L6 = expression . "&" expression, FOLLOW [203] -> SHIFT '&' GOTO 112
	expression/L6 = expression . "^" expression, FOLLOW [203] -> SHIFT '^' GOTO 113
	expression/L2 = expression . "=" expression, FOLLOW [203] -> SHIFT '=' GOTO 114
	expression/L12 = expression . "[" expressionlist "]", FOLLOW [203] -> SHIFT '[' GOTO 115
	expression/L2 = expression . "+=" expression, FOLLOW [203] -> SHIFT "+=" GOTO 116
	expression/L2 = expression . "-=" expression, FOLLOW [203] -> SHIFT "-=" GOTO 117
	expression/L2 = expression . "*=" expression, FOLLOW [203] -> SHIFT "*=" GOTO 118
	expression/L2 = expression . "/=" expression, FOLLOW [203] -> SHIFT "/=" GOTO 119
	expression/L2 = expression . "%=" expression, FOLLOW [203] -> SHIFT "%=" GOTO 120
	expression/L2 = expression . "&&=" expression, FOLLOW [203] -> SHIFT "&&=" GOTO 121
	expression/L2 = expression . "||=" expression, FOLLOW [203] -> SHIFT "||=" GOTO 122
	expression/L2 = expression . "&=" expression, FOLLOW [203] -> SHIFT "&=" GOTO 123
	expression/L2 = expression . "|=" expression, FOLLOW [203] -> SHIFT "|=" GOTO 124
	expression/L2 = expression . "<<=" expression, FOLLOW [203] -> SHIFT "<<=" GOTO 125
	expression/L2 = expression . ">>=" expression, FOLLOW [203] -> SHIFT ">>=" GOTO 126
	expression/L3 = expression . "||" expression, FOLLOW [203] -> SHIFT "||" GOTO 127
	expression/L4 = expression . "&&" expression, FOLLOW [203] -> SHIFT "&&" GOTO 128
	expression/L5 = expression . "|" expression, FOLLOW [203] -> SHIFT '|' GOTO 129
	expression/L7 = expression . "==" expression, FOLLOW [203] -> SHIFT "==" GOTO 130
	expression/L7 = expression . "!=" expression, FOLLOW [203] -> SHIFT "!=" GOTO 131
	expression/L7 = expression . "<=" expression, FOLLOW [203] -> SHIFT "<=" GOTO 132
	expression/L7 = expression . "<" expression, FOLLOW [203] -> SHIFT '<' GOTO 133
	expression/L7 = expression . ">=" expression, FOLLOW [203] -> SHIFT ">=" GOTO 134
	expression/L7 = expression . ">" expression, FOLLOW [203] -> SHIFT '>' GOTO 135
	expression/L8 = expression . "+" expression, FOLLOW [203] -> SHIFT '+' GOTO 136
	expression/L8 = expression . "-" expression, FOLLOW [203] -> SHIFT '-' GOTO 137
	expression/L9 = expression . "*" expression, FOLLOW [203] -> SHIFT '*' GOTO 138
	expression/L9 = expression . "/" expression, FOLLOW [203] -> SHIFT '/' GOTO 139
	expression/L9 = expression . "%" expression, FOLLOW [203] -> SHIFT '%' GOTO 140
	expression/L10 = expression . "<<" expression, FOLLOW [203] -> SHIFT "<<" GOTO 141
	expression/L10 = expression . ">>" expression, FOLLOW [203] -> SHIFT ">>" GOTO 142
	expression/L11 = expression . "." IDENT, FOLLOW [203] -> SHIFT '.' GOTO 143
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 144
	expression/L2 = expression "%=" expression . (54), FOLLOW [203] -> REDUCE expression #3 CALL assign_operator "%"
[188]
	iexpression = expression . indirection IDENT, FOLLOW [203] -> GOTO 109
	expression/L12 = expression . "(" expressionlist ")", FOLLOW [203] -> SHIFT '(' GOTO 110
	expression/L12 = expression . "(" ")", FOLLOW [203] -> SHIFT '(' GOTO 110
	expression/L6 = expression . "&" expression, FOLLOW [203] -> SHIFT '&' GOTO 112
	expression/L6 = expression . "^" expression, FOLLOW [203] -> SHIFT '^' GOTO 113
	expression/L2 = expression . "=" expression, FOLLOW [203] -> SHIFT '=' GOTO 114
	expression/L12 = expression . "[" expressionlist "]", FOLLOW [203] -> SHIFT '[' GOTO 115
	expression/L2 = expression . "+=" expression, FOLLOW [203] -> SHIFT "+=" GOTO 116
	expression/L2 = expression . "-=" expression, FOLLOW [203] -> SHIFT "-=" GOTO 117
	expression/L2 = expression . "*=" expression, FOLLOW [203] -> SHIFT "*=" GOTO 118
	expression/L2 = expression . "/=" expression, FOLLOW [203] -> SHIFT "/=" GOTO 119
	expression/L2 = expression . "%=" expression, FOLLOW [203] -> SHIFT "%=" GOTO 120
	expression/L2 = expression . "&&=" expression, FOLLOW [203] -> SHIFT "&&=" GOTO 121
	expression/L2 = expression . "||=" expression, FOLLOW [203] -> SHIFT "||=" GOTO 122
	expression/L2 = expression . "&=" expression, FOLLOW [203] -> SHIFT "&=" GOTO 123
	expression/L2 = expression . "|=" expression, FOLLOW [203] -> SHIFT "|=" GOTO 124
	expression/L2 = expression . "<<=" expression, FOLLOW [203] -> SHIFT "<<=" GOTO 125
	expression/L2 = expression . ">>=" expression, FOLLOW [203] -> SHIFT ">>=" GOTO 126
	expression/L3 = expression . "||" expression, FOLLOW [203] -> SHIFT "||" GOTO 127
	expression/L4 = expression . "&&" expression, FOLLOW [203] -> SHIFT "&&" GOTO 128
	expression/L5 = expression . "|" expression, FOLLOW [203] -> SHIFT '|' GOTO 129
	expression/L7 = expression . "==" expression, FOLLOW [203] -> SHIFT "==" GOTO 130
	expression/L7 = expression . "!=" expression, FOLLOW [203] -> SHIFT "!=" GOTO 131
	expression/L7 = expression . "<=" expression, FOLLOW [203] -> SHIFT "<=" GOTO 132
	expression/L7 = expression . "<" expression, FOLLOW [203] -> SHIFT '<' GOTO 133
	expression/L7 = expression . ">=" expression, FOLLOW [203] -> SHIFT ">=" GOTO 134
	expression/L7 = expression . ">" expression, FOLLOW [203] -> SHIFT '>' GOTO 135
	expression/L8 = expression . "+" expression, FOLLOW [203] -> SHIFT '+' GOTO 136
	expression/L8 = expression . "-" expression, FOLLOW [203] -> SHIFT '-' GOTO 137
	expression/L9 = expression . "*" expression, FOLLOW [203] -> SHIFT '*' GOTO 138
	expression/L9 = expression . "/" expression, FOLLOW [203] -> SHIFT '/' GOTO 139
	expression/L9 = expression . "%" expression, FOLLOW [203] -> SHIFT '%' GOTO 140
	expression/L10 = expression . "<<" expression, FOLLOW [203] -> SHIFT "<<" GOTO 141
	expression/L10 = expression . ">>" expression, FOLLOW [203] -> SHIFT ">>" GOTO 142
	expression/L11 = expression . "." IDENT, FOLLOW [203] -> SHIFT '.' GOTO 143
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 144
	expression/L2 = expression "&&=" expression . (55), FOLLOW [203] -> REDUCE expression #3 CALL assign_operator "&&"
[189]
	iexpression = expression . indirection IDENT, FOLLOW [203] -> GOTO 109
	expression/L12 = expression . "(" expressionlist ")", FOLLOW [203] -> SHIFT '(' GOTO 110
	expression/L12 = expression . "(" ")", FOLLOW [203] -> SHIFT '(' GOTO 110
	expression/L6 = expression . "&" expression, FOLLOW [203] -> SHIFT '&' GOTO 112
	expression/L6 = expression . "^" expression, FOLLOW [203] -> SHIFT '^' GOTO 113
	expression/L2 = expression . "=" expression, FOLLOW [203] -> SHIFT '=' GOTO 114
	expression/L12 = expression . "[" expressionlist "]", FOLLOW [203] -> SHIFT '[' GOTO 115
	expression/L2 = expression . "+=" expression, FOLLOW [203] -> SHIFT "+=" GOTO 116
	expression/L2 = expression . "-=" expression, FOLLOW [203] -> SHIFT "-=" GOTO 117
	expression/L2 = expression . "*=" expression, FOLLOW [203] -> SHIFT "*=" GOTO 118
	expression/L2 = expression . "/=" expression, FOLLOW [203] -> SHIFT "/=" GOTO 119
	expression/L2 = expression . "%=" expression, FOLLOW [203] -> SHIFT "%=" GOTO 120
	expression/L2 = expression . "&&=" expression, FOLLOW [203] -> SHIFT "&&=" GOTO 121
	expression/L2 = expression . "||=" expression, FOLLOW [203] -> SHIFT "||=" GOTO 122
	expression/L2 = expression . "&=" expression, FOLLOW [203] -> SHIFT "&=" GOTO 123
	expression/L2 = expression . "|=" expression, FOLLOW [203] -> SHIFT "|=" GOTO 124
	expression/L2 = expression . "<<=" expression, FOLLOW [203] -> SHIFT "<<=" GOTO 125
	expression/L2 = expression . ">>=" expression, FOLLOW [203] -> SHIFT ">>=" GOTO 126
	expression/L3 = expression . "||" expression, FOLLOW [203] -> SHIFT "||" GOTO 127
	expression/L4 = expression . "&&" expression, FOLLOW [203] -> SHIFT "&&" GOTO 128
	expression/L5 = expression . "|" expression, FOLLOW [203] -> SHIFT '|' GOTO 129
	expression/L7 = expression . "==" expression, FOLLOW [203] -> SHIFT "==" GOTO 130
	expression/L7 = expression . "!=" expression, FOLLOW [203] -> SHIFT "!=" GOTO 131
	expression/L7 = expression . "<=" expression, FOLLOW [203] -> SHIFT "<=" GOTO 132
	expression/L7 = expression . "<" expression, FOLLOW [203] -> SHIFT '<' GOTO 133
	expression/L7 = expression . ">=" expression, FOLLOW [203] -> SHIFT ">=" GOTO 134
	expression/L7 = expression . ">" expression, FOLLOW [203] -> SHIFT '>' GOTO 135
	expression/L8 = expression . "+" expression, FOLLOW [203] -> SHIFT '+' GOTO 136
	expression/L8 = expression . "-" expression, FOLLOW [203] -> SHIFT '-' GOTO 137
	expression/L9 = expression . "*" expression, FOLLOW [203] -> SHIFT '*' GOTO 138
	expression/L9 = expression . "/" expression, FOLLOW [203] -> SHIFT '/' GOTO 139
	expression/L9 = expression . "%" expression, FOLLOW [203] -> SHIFT '%' GOTO 140
	expression/L10 = expression . "<<" expression, FOLLOW [203] -> SHIFT "<<" GOTO 141
	expression/L10 = expression . ">>" expression, FOLLOW [203] -> SHIFT ">>" GOTO 142
	expression/L11 = expression . "." IDENT, FOLLOW [203] -> SHIFT '.' GOTO 143
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 144
	expression/L2 = expression "||=" expression . (56), FOLLOW [203] -> REDUCE expression #3 CALL assign_operator "||"
[190]
	iexpression = expression . indirection IDENT, FOLLOW [203] -> GOTO 109
	expression/L12 = expression . "(" expressionlist ")", FOLLOW [203] -> SHIFT '(' GOTO 110
	expression/L12 = expression . "(" ")", FOLLOW [203] -> SHIFT '(' GOTO 110
	expression/L6 = expression . "&" expression, FOLLOW [203] -> SHIFT '&' GOTO 112
	expression/L6 = expression . "^" expression, FOLLOW [203] -> SHIFT '^' GOTO 113
	expression/L2 = expression . "=" expression, FOLLOW [203] -> SHIFT '=' GOTO 114
	expression/L12 = expression . "[" expressionlist "]", FOLLOW [203] -> SHIFT '[' GOTO 115
	expression/L2 = expression . "+=" expression, FOLLOW [203] -> SHIFT "+=" GOTO 116
	expression/L2 = expression . "-=" expression, FOLLOW [203] -> SHIFT "-=" GOTO 117
	expression/L2 = expression . "*=" expression, FOLLOW [203] -> SHIFT "*=" GOTO 118
	expression/L2 = expression . "/=" expression, FOLLOW [203] -> SHIFT "/=" GOTO 119
	expression/L2 = expression . "%=" expression, FOLLOW [203] -> SHIFT "%=" GOTO 120
	expression/L2 = expression . "&&=" expression, FOLLOW [203] -> SHIFT "&&=" GOTO 121
	expression/L2 = expression . "||=" expression, FOLLOW [203] -> SHIFT "||=" GOTO 122
	expression/L2 = expression . "&=" expression, FOLLOW [203] -> SHIFT "&=" GOTO 123
	expression/L2 = expression . "|=" expression, FOLLOW [203] -> SHIFT "|=" GOTO 124
	expression/L2 = expression . "<<=" expression, FOLLOW [203] -> SHIFT "<<=" GOTO 125
	expression/L2 = expression . ">>=" expression, FOLLOW [203] -> SHIFT ">>=" GOTO 126
	expression/L3 = expression . "||" expression, FOLLOW [203] -> SHIFT "||" GOTO 127
	expression/L4 = expression . "&&" expression, FOLLOW [203] -> SHIFT "&&" GOTO 128
	expression/L5 = expression . "|" expression, FOLLOW [203] -> SHIFT '|' GOTO 129
	expression/L7 = expression . "==" expression, FOLLOW [203] -> SHIFT "==" GOTO 130
	expression/L7 = expression . "!=" expression, FOLLOW [203] -> SHIFT "!=" GOTO 131
	expression/L7 = expression . "<=" expression, FOLLOW [203] -> SHIFT "<=" GOTO 132
	expression/L7 = expression . "<" expression, FOLLOW [203] -> SHIFT '<' GOTO 133
	expression/L7 = expression . ">=" expression, FOLLOW [203] -> SHIFT ">=" GOTO 134
	expression/L7 = expression . ">" expression, FOLLOW [203] -> SHIFT '>' GOTO 135
	expression/L8 = expression . "+" expression, FOLLOW [203] -> SHIFT '+' GOTO 136
	expression/L8 = expression . "-" expression, FOLLOW [203] -> SHIFT '-' GOTO 137
	expression/L9 = expression . "*" expression, FOLLOW [203] -> SHIFT '*' GOTO 138
	expression/L9 = expression . "/" expression, FOLLOW [203] -> SHIFT '/' GOTO 139
	expression/L9 = expression . "%" expression, FOLLOW [203] -> SHIFT '%' GOTO 140
	expression/L10 = expression . "<<" expression, FOLLOW [203] -> SHIFT "<<" GOTO 141
	expression/L10 = expression . ">>" expression, FOLLOW [203] -> SHIFT ">>" GOTO 142
	expression/L11 = expression . "." IDENT, FOLLOW [203] -> SHIFT '.' GOTO 143
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 144
	expression/L2 = expression "&=" expression . (57), FOLLOW [203] -> REDUCE expression #3 CALL assign_operator "&"
[191]
	iexpression = expression . indirection IDENT, FOLLOW [203] -> GOTO 109
	expression/L12 = expression . "(" expressionlist ")", FOLLOW [203] -> SHIFT '(' GOTO 110
	expression/L12 = expression . "(" ")", FOLLOW [203] -> SHIFT '(' GOTO 110
	expression/L6 = expression . "&" expression, FOLLOW [203] -> SHIFT '&' GOTO 112
	expression/L6 = expression . "^" expression, FOLLOW [203] -> SHIFT '^' GOTO 113
	expression/L2 = expression . "=" expression, FOLLOW [203] -> SHIFT '=' GOTO 114
	expression/L12 = expression . "[" expressionlist "]", FOLLOW [203] -> SHIFT '[' GOTO 115
	expression/L2 = expression . "+=" expression, FOLLOW [203] -> SHIFT "+=" GOTO 116
	expression/L2 = expression . "-=" expression, FOLLOW [203] -> SHIFT "-=" GOTO 117
	expression/L2 = expression . "*=" expression, FOLLOW [203] -> SHIFT "*=" GOTO 118
	expression/L2 = expression . "/=" expression, FOLLOW [203] -> SHIFT "/=" GOTO 119
	expression/L2 = expression . "%=" expression, FOLLOW [203] -> SHIFT "%=" GOTO 120
	expression/L2 = expression . "&&=" expression, FOLLOW [203] -> SHIFT "&&=" GOTO 121
	expression/L2 = expression . "||=" expression, FOLLOW [203] -> SHIFT "||=" GOTO 122
	expression/L2 = expression . "&=" expression, FOLLOW [203] -> SHIFT "&=" GOTO 123
	expression/L2 = expression . "|=" expression, FOLLOW [203] -> SHIFT "|=" GOTO 124
	expression/L2 = expression . "<<=" expression, FOLLOW [203] -> SHIFT "<<=" GOTO 125
	expression/L2 = expression . ">>=" expression, FOLLOW [203] -> SHIFT ">>=" GOTO 126
	expression/L3 = expression . "||" expression, FOLLOW [203] -> SHIFT "||" GOTO 127
	expression/L4 = expression . "&&" expression, FOLLOW [203] -> SHIFT "&&" GOTO 128
	expression/L5 = expression . "|" expression, FOLLOW [203] -> SHIFT '|' GOTO 129
	expression/L7 = expression . "==" expression, FOLLOW [203] -> SHIFT "==" GOTO 130
	expression/L7 = expression . "!=" expression, FOLLOW [203] -> SHIFT "!=" GOTO 131
	expression/L7 = expression . "<=" expression, FOLLOW [203] -> SHIFT "<=" GOTO 132
	expression/L7 = expression . "<" expression, FOLLOW [203] -> SHIFT '<' GOTO 133
	expression/L7 = expression . ">=" expression, FOLLOW [203] -> SHIFT ">=" GOTO 134
	expression/L7 = expression . ">" expression, FOLLOW [203] -> SHIFT '>' GOTO 135
	expression/L8 = expression . "+" expression, FOLLOW [203] -> SHIFT '+' GOTO 136
	expression/L8 = expression . "-" expression, FOLLOW [203] -> SHIFT '-' GOTO 137
	expression/L9 = expression . "*" expression, FOLLOW [203] -> SHIFT '*' GOTO 138
	expression/L9 = expression . "/" expression, FOLLOW [203] -> SHIFT '/' GOTO 139
	expression/L9 = expression . "%" expression, FOLLOW [203] -> SHIFT '%' GOTO 140
	expression/L10 = expression . "<<" expression, FOLLOW [203] -> SHIFT "<<" GOTO 141
	expression/L10 = expression . ">>" expression, FOLLOW [203] -> SHIFT ">>" GOTO 142
	expression/L11 = expression . "." IDENT, FOLLOW [203] -> SHIFT '.' GOTO 143
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 144
	expression/L2 = expression "|=" expression . (58), FOLLOW [203] -> REDUCE expression #3 CALL assign_operator "|"
[192]
	iexpression = expression . indirection IDENT, FOLLOW [203] -> GOTO 109
	expression/L12 = expression . "(" expressionlist ")", FOLLOW [203] -> SHIFT '(' GOTO 110
	expression/L12 = expression . "(" ")", FOLLOW [203] -> SHIFT '(' GOTO 110
	expression/L6 = expression . "&" expression, FOLLOW [203] -> SHIFT '&' GOTO 112
	expression/L6 = expression . "^" expression, FOLLOW [203] -> SHIFT '^' GOTO 113
	expression/L2 = expression . "=" expression, FOLLOW [203] -> SHIFT '=' GOTO 114
	expression/L12 = expression . "[" expressionlist "]", FOLLOW [203] -> SHIFT '[' GOTO 115
	expression/L2 = expression . "+=" expression, FOLLOW [203] -> SHIFT "+=" GOTO 116
	expression/L2 = expression . "-=" expression, FOLLOW [203] -> SHIFT "-=" GOTO 117
	expression/L2 = expression . "*=" expression, FOLLOW [203] -> SHIFT "*=" GOTO 118
	expression/L2 = expression . "/=" expression, FOLLOW [203] -> SHIFT "/=" GOTO 119
	expression/L2 = expression . "%=" expression, FOLLOW [203] -> SHIFT "%=" GOTO 120
	expression/L2 = expression . "&&=" expression, FOLLOW [203] -> SHIFT "&&=" GOTO 121
	expression/L2 = expression . "||=" expression, FOLLOW [203] -> SHIFT "||=" GOTO 122
	expression/L2 = expression . "&=" expression, FOLLOW [203] -> SHIFT "&=" GOTO 123
	expression/L2 = expression . "|=" expression, FOLLOW [203] -> SHIFT "|=" GOTO 124
	expression/L2 = expression . "<<=" expression, FOLLOW [203] -> SHIFT "<<=" GOTO 125
	expression/L2 = expression . ">>=" expression, FOLLOW [203] -> SHIFT ">>=" GOTO 126
	expression/L3 = expression . "||" expression, FOLLOW [203] -> SHIFT "||" GOTO 127
	expression/L4 = expression . "&&" expression, FOLLOW [203] -> SHIFT "&&" GOTO 128
	expression/L5 = expression . "|" expression, FOLLOW [203] -> SHIFT '|' GOTO 129
	expression/L7 = expression . "==" expression, FOLLOW [203] -> SHIFT "==" GOTO 130
	expression/L7 = expression . "!=" expression, FOLLOW [203] -> SHIFT "!=" GOTO 131
	expression/L7 = expression . "<=" expression, FOLLOW [203] -> SHIFT "<=" GOTO 132
	expression/L7 = expression . "<" expression, FOLLOW [203] -> SHIFT '<' GOTO 133
	expression/L7 = expression . ">=" expression, FOLLOW [203] -> SHIFT ">=" GOTO 134
	expression/L7 = expression . ">" expression, FOLLOW [203] -> SHIFT '>' GOTO 135
	expression/L8 = expression . "+" expression, FOLLOW [203] -> SHIFT '+' GOTO 136
	expression/L8 = expression . "-" expression, FOLLOW [203] -> SHIFT '-' GOTO 137
	expression/L9 = expression . "*" expression, FOLLOW [203] -> SHIFT '*' GOTO 138
	expression/L9 = expression . "/" expression, FOLLOW [203] -> SHIFT '/' GOTO 139
	expression/L9 = expression . "%" expression, FOLLOW [203] -> SHIFT '%' GOTO 140
	expression/L10 = expression . "<<" expression, FOLLOW [203] -> SHIFT "<<" GOTO 141
	expression/L10 = expression . ">>" expression, FOLLOW [203] -> SHIFT ">>" GOTO 142
	expression/L11 = expression . "." IDENT, FOLLOW [203] -> SHIFT '.' GOTO 143
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 144
	expression/L2 = expression "<<=" expression . (59), FOLLOW [203] -> REDUCE expression #3 CALL assign_operator "<<"
[193]
	iexpression = expression . indirection IDENT, FOLLOW [203] -> GOTO 109
	expression/L12 = expression . "(" expressionlist ")", FOLLOW [203] -> SHIFT '(' GOTO 110
	expression/L12 = expression . "(" ")", FOLLOW [203] -> SHIFT '(' GOTO 110
	expression/L6 = expression . "&" expression, FOLLOW [203] -> SHIFT '&' GOTO 112
	expression/L6 = expression . "^" expression, FOLLOW [203] -> SHIFT '^' GOTO 113
	expression/L2 = expression . "=" expression, FOLLOW [203] -> SHIFT '=' GOTO 114
	expression/L12 = expression . "[" expressionlist "]", FOLLOW [203] -> SHIFT '[' GOTO 115
	expression/L2 = expression . "+=" expression, FOLLOW [203] -> SHIFT "+=" GOTO 116
	expression/L2 = expression . "-=" expression, FOLLOW [203] -> SHIFT "-=" GOTO 117
	expression/L2 = expression . "*=" expression, FOLLOW [203] -> SHIFT "*=" GOTO 118
	expression/L2 = expression . "/=" expression, FOLLOW [203] -> SHIFT "/=" GOTO 119
	expression/L2 = expression . "%=" expression, FOLLOW [203] -> SHIFT "%=" GOTO 120
	expression/L2 = expression . "&&=" expression, FOLLOW [203] -> SHIFT "&&=" GOTO 121
	expression/L2 = expression . "||=" expression, FOLLOW [203] -> SHIFT "||=" GOTO 122
	expression/L2 = expression . "&=" expression, FOLLOW [203] -> SHIFT "&=" GOTO 123
	expression/L2 = expression . "|=" expression, FOLLOW [203] -> SHIFT "|=" GOTO 124
	expression/L2 = expression . "<<=" expression, FOLLOW [203] -> SHIFT "<<=" GOTO 125
	expression/L2 = expression . ">>=" expression, FOLLOW [203] -> SHIFT ">>=" GOTO 126
	expression/L3 = expression . "||" expression, FOLLOW [203] -> SHIFT "||" GOTO 127
	expression/L4 = expression . "&&" expression, FOLLOW [203] -> SHIFT "&&" GOTO 128
	expression/L5 = expression . "|" expression, FOLLOW [203] -> SHIFT '|' GOTO 129
	expression/L7 = expression . "==" expression, FOLLOW [203] -> SHIFT "==" GOTO 130
	expression/L7 = expression . "!=" expression, FOLLOW [203] -> SHIFT "!=" GOTO 131
	expression/L7 = expression . "<=" expression, FOLLOW [203] -> SHIFT "<=" GOTO 132
	expression/L7 = expression . "<" expression, FOLLOW [203] -> SHIFT '<' GOTO 133
	expression/L7 = expression . ">=" expression, FOLLOW [203] -> SHIFT ">=" GOTO 134
	expression/L7 = expression . ">" expression, FOLLOW [203] -> SHIFT '>' GOTO 135
	expression/L8 = expression . "+" expression, FOLLOW [203] -> SHIFT '+' GOTO 136
	expression/L8 = expression . "-" expression, FOLLOW [203] -> SHIFT '-' GOTO 137
	expression/L9 = expression . "*" expression, FOLLOW [203] -> SHIFT '*' GOTO 138
	expression/L9 = expression . "/" expression, FOLLOW [203] -> SHIFT '/' GOTO 139
	expression/L9 = expression . "%" expression, FOLLOW [203] -> SHIFT '%' GOTO 140
	expression/L10 = expression . "<<" expression, FOLLOW [203] -> SHIFT "<<" GOTO 141
	expression/L10 = expression . ">>" expression, FOLLOW [203] -> SHIFT ">>" GOTO 142
	expression/L11 = expression . "." IDENT, FOLLOW [203] -> SHIFT '.' GOTO 143
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 144
	expression/L2 = expression ">>=" expression . (60), FOLLOW [203] -> REDUCE expression #3 CALL assign_operator ">>"
[194]
	iexpression = expression . indirection IDENT, FOLLOW [203] -> GOTO 109
	expression/L12 = expression . "(" expressionlist ")", FOLLOW [203] -> SHIFT '(' GOTO 110
	expression/L12 = expression . "(" ")", FOLLOW [203] -> SHIFT '(' GOTO 110
	expression/L6 = expression . "&" expression, FOLLOW [203] -> SHIFT '&' GOTO 112
	expression/L6 = expression . "^" expression, FOLLOW [203] -> SHIFT '^' GOTO 113
	expression/L2 = expression . "=" expression, FOLLOW [203] -> SHIFT '=' GOTO 114
	expression/L12 = expression . "[" expressionlist "]", FOLLOW [203] -> SHIFT '[' GOTO 115
	expression/L2 = expression . "+=" expression, FOLLOW [203] -> SHIFT "+=" GOTO 116
	expression/L2 = expression . "-=" expression, FOLLOW [203] -> SHIFT "-=" GOTO 117
	expression/L2 = expression . "*=" expression, FOLLOW [203] -> SHIFT "*=" GOTO 118
	expression/L2 = expression . "/=" expression, FOLLOW [203] -> SHIFT "/=" GOTO 119
	expression/L2 = expression . "%=" expression, FOLLOW [203] -> SHIFT "%=" GOTO 120
	expression/L2 = expression . "&&=" expression, FOLLOW [203] -> SHIFT "&&=" GOTO 121
	expression/L2 = expression . "||=" expression, FOLLOW [203] -> SHIFT "||=" GOTO 122
	expression/L2 = expression . "&=" expression, FOLLOW [203] -> SHIFT "&=" GOTO 123
	expression/L2 = expression . "|=" expression, FOLLOW [203] -> SHIFT "|=" GOTO 124
	expression/L2 = expression . "<<=" expression, FOLLOW [203] -> SHIFT "<<=" GOTO 125
	expression/L2 = expression . ">>=" expression, FOLLOW [203] -> SHIFT ">>=" GOTO 126
	expression/L3 = expression . "||" expression, FOLLOW [203] -> SHIFT "||" GOTO 127
	expression/L4 = expression . "&&" expression, FOLLOW [203] -> SHIFT "&&" GOTO 128
	expression/L5 = expression . "|" expression, FOLLOW [203] -> SHIFT '|' GOTO 129
	expression/L7 = expression . "==" expression, FOLLOW [203] -> SHIFT "==" GOTO 130
	expression/L7 = expression . "!=" expression, FOLLOW [203] -> SHIFT "!=" GOTO 131
	expression/L7 = expression . "<=" expression, FOLLOW [203] -> SHIFT "<=" GOTO 132
	expression/L7 = expression . "<" expression, FOLLOW [203] -> SHIFT '<' GOTO 133
	expression/L7 = expression . ">=" expression, FOLLOW [203] -> SHIFT ">=" GOTO 134
	expression/L7 = expression . ">" expression, FOLLOW [203] -> SHIFT '>' GOTO 135
	expression/L8 = expression . "+" expression, FOLLOW [203] -> SHIFT '+' GOTO 136
	expression/L8 = expression . "-" expression, FOLLOW [203] -> SHIFT '-' GOTO 137
	expression/L9 = expression . "*" expression, FOLLOW [203] -> SHIFT '*' GOTO 138
	expression/L9 = expression . "/" expression, FOLLOW [203] -> SHIFT '/' GOTO 139
	expression/L9 = expression . "%" expression, FOLLOW [203] -> SHIFT '%' GOTO 140
	expression/L10 = expression . "<<" expression, FOLLOW [203] -> SHIFT "<<" GOTO 141
	expression/L10 = expression . ">>" expression, FOLLOW [203] -> SHIFT ">>" GOTO 142
	expression/L11 = expression . "." IDENT, FOLLOW [203] -> SHIFT '.' GOTO 143
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 144
	expression/L3 = expression "||" expression . (61), FOLLOW [203] -> REDUCE expression #3 CALL operator "||"
[195]
	iexpression = expression . indirection IDENT, FOLLOW [203] -> GOTO 109
	expression/L12 = expression . "(" expressionlist ")", FOLLOW [203] -> SHIFT '(' GOTO 110
	expression/L12 = expression . "(" ")", FOLLOW [203] -> SHIFT '(' GOTO 110
	expression/L6 = expression . "&" expression, FOLLOW [203] -> SHIFT '&' GOTO 112
	expression/L6 = expression . "^" expression, FOLLOW [203] -> SHIFT '^' GOTO 113
	expression/L2 = expression . "=" expression, FOLLOW [203] -> SHIFT '=' GOTO 114
	expression/L12 = expression . "[" expressionlist "]", FOLLOW [203] -> SHIFT '[' GOTO 115
	expression/L2 = expression . "+=" expression, FOLLOW [203] -> SHIFT "+=" GOTO 116
	expression/L2 = expression . "-=" expression, FOLLOW [203] -> SHIFT "-=" GOTO 117
	expression/L2 = expression . "*=" expression, FOLLOW [203] -> SHIFT "*=" GOTO 118
	expression/L2 = expression . "/=" expression, FOLLOW [203] -> SHIFT "/=" GOTO 119
	expression/L2 = expression . "%=" expression, FOLLOW [203] -> SHIFT "%=" GOTO 120
	expression/L2 = expression . "&&=" expression, FOLLOW [203] -> SHIFT "&&=" GOTO 121
	expression/L2 = expression . "||=" expression, FOLLOW [203] -> SHIFT "||=" GOTO 122
	expression/L2 = expression . "&=" expression, FOLLOW [203] -> SHIFT "&=" GOTO 123
	expression/L2 = expression . "|=" expression, FOLLOW [203] -> SHIFT "|=" GOTO 124
	expression/L2 = expression . "<<=" expression, FOLLOW [203] -> SHIFT "<<=" GOTO 125
	expression/L2 = expression . ">>=" expression, FOLLOW [203] -> SHIFT ">>=" GOTO 126
	expression/L3 = expression . "||" expression, FOLLOW [203] -> SHIFT "||" GOTO 127
	expression/L4 = expression . "&&" expression, FOLLOW [203] -> SHIFT "&&" GOTO 128
	expression/L5 = expression . "|" expression, FOLLOW [203] -> SHIFT '|' GOTO 129
	expression/L7 = expression . "==" expression, FOLLOW [203] -> SHIFT "==" GOTO 130
	expression/L7 = expression . "!=" expression, FOLLOW [203] -> SHIFT "!=" GOTO 131
	expression/L7 = expression . "<=" expression, FOLLOW [203] -> SHIFT "<=" GOTO 132
	expression/L7 = expression . "<" expression, FOLLOW [203] -> SHIFT '<' GOTO 133
	expression/L7 = expression . ">=" expression, FOLLOW [203] -> SHIFT ">=" GOTO 134
	expression/L7 = expression . ">" expression, FOLLOW [203] -> SHIFT '>' GOTO 135
	expression/L8 = expression . "+" expression, FOLLOW [203] -> SHIFT '+' GOTO 136
	expression/L8 = expression . "-" expression, FOLLOW [203] -> SHIFT '-' GOTO 137
	expression/L9 = expression . "*" expression, FOLLOW [203] -> SHIFT '*' GOTO 138
	expression/L9 = expression . "/" expression, FOLLOW [203] -> SHIFT '/' GOTO 139
	expression/L9 = expression . "%" expression, FOLLOW [203] -> SHIFT '%' GOTO 140
	expression/L10 = expression . "<<" expression, FOLLOW [203] -> SHIFT "<<" GOTO 141
	expression/L10 = expression . ">>" expression, FOLLOW [203] -> SHIFT ">>" GOTO 142
	expression/L11 = expression . "." IDENT, FOLLOW [203] -> SHIFT '.' GOTO 143
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 144
	expression/L4 = expression "&&" expression . (62), FOLLOW [203] -> REDUCE expression #3 CALL operator "&&"
[196]
	iexpression = expression . indirection IDENT, FOLLOW [203] -> GOTO 109
	expression/L12 = expression . "(" expressionlist ")", FOLLOW [203] -> SHIFT '(' GOTO 110
	expression/L12 = expression . "(" ")", FOLLOW [203] -> SHIFT '(' GOTO 110
	expression/L6 = expression . "&" expression, FOLLOW [203] -> SHIFT '&' GOTO 112
	expression/L6 = expression . "^" expression, FOLLOW [203] -> SHIFT '^' GOTO 113
	expression/L2 = expression . "=" expression, FOLLOW [203] -> SHIFT '=' GOTO 114
	expression/L12 = expression . "[" expressionlist "]", FOLLOW [203] -> SHIFT '[' GOTO 115
	expression/L2 = expression . "+=" expression, FOLLOW [203] -> SHIFT "+=" GOTO 116
	expression/L2 = expression . "-=" expression, FOLLOW [203] -> SHIFT "-=" GOTO 117
	expression/L2 = expression . "*=" expression, FOLLOW [203] -> SHIFT "*=" GOTO 118
	expression/L2 = expression . "/=" expression, FOLLOW [203] -> SHIFT "/=" GOTO 119
	expression/L2 = expression . "%=" expression, FOLLOW [203] -> SHIFT "%=" GOTO 120
	expression/L2 = expression . "&&=" expression, FOLLOW [203] -> SHIFT "&&=" GOTO 121
	expression/L2 = expression . "||=" expression, FOLLOW [203] -> SHIFT "||=" GOTO 122
	expression/L2 = expression . "&=" expression, FOLLOW [203] -> SHIFT "&=" GOTO 123
	expression/L2 = expression . "|=" expression, FOLLOW [203] -> SHIFT "|=" GOTO 124
	expression/L2 = expression . "<<=" expression, FOLLOW [203] -> SHIFT "<<=" GOTO 125
	expression/L2 = expression . ">>=" expression, FOLLOW [203] -> SHIFT ">>=" GOTO 126
	expression/L3 = expression . "||" expression, FOLLOW [203] -> SHIFT "||" GOTO 127
	expression/L4 = expression . "&&" expression, FOLLOW [203] -> SHIFT "&&" GOTO 128
	expression/L5 = expression . "|" expression, FOLLOW [203] -> SHIFT '|' GOTO 129
	expression/L7 = expression . "==" expression, FOLLOW [203] -> SHIFT "==" GOTO 130
	expression/L7 = expression . "!=" expression, FOLLOW [203] -> SHIFT "!=" GOTO 131
	expression/L7 = expression . "<=" expression, FOLLOW [203] -> SHIFT "<=" GOTO 132
	expression/L7 = expression . "<" expression, FOLLOW [203] -> SHIFT '<' GOTO 133
	expression/L7 = expression . ">=" expression, FOLLOW [203] -> SHIFT ">=" GOTO 134
	expression/L7 = expression . ">" expression, FOLLOW [203] -> SHIFT '>' GOTO 135
	expression/L8 = expression . "+" expression, FOLLOW [203] -> SHIFT '+' GOTO 136
	expression/L8 = expression . "-" expression, FOLLOW [203] -> SHIFT '-' GOTO 137
	expression/L9 = expression . "*" expression, FOLLOW [203] -> SHIFT '*' GOTO 138
	expression/L9 = expression . "/" expression, FOLLOW [203] -> SHIFT '/' GOTO 139
	expression/L9 = expression . "%" expression, FOLLOW [203] -> SHIFT '%' GOTO 140
	expression/L10 = expression . "<<" expression, FOLLOW [203] -> SHIFT "<<" GOTO 141
	expression/L10 = expression . ">>" expression, FOLLOW [203] -> SHIFT ">>" GOTO 142
	expression/L11 = expression . "." IDENT, FOLLOW [203] -> SHIFT '.' GOTO 143
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 144
	expression/L5 = expression "|" expression . (63), FOLLOW [203] -> REDUCE expression #3 CALL operator "|"
[197]
	iexpression = expression . indirection IDENT, FOLLOW [203] -> GOTO 109
	expression/L12 = expression . "(" expressionlist ")", FOLLOW [203] -> SHIFT '(' GOTO 110
	expression/L12 = expression . "(" ")", FOLLOW [203] -> SHIFT '(' GOTO 110
	expression/L6 = expression . "&" expression, FOLLOW [203] -> SHIFT '&' GOTO 112
	expression/L6 = expression . "^" expression, FOLLOW [203] -> SHIFT '^' GOTO 113
	expression/L2 = expression . "=" expression, FOLLOW [203] -> SHIFT '=' GOTO 114
	expression/L12 = expression . "[" expressionlist "]", FOLLOW [203] -> SHIFT '[' GOTO 115
	expression/L2 = expression . "+=" expression, FOLLOW [203] -> SHIFT "+=" GOTO 116
	expression/L2 = expression . "-=" expression, FOLLOW [203] -> SHIFT "-=" GOTO 117
	expression/L2 = expression . "*=" expression, FOLLOW [203] -> SHIFT "*=" GOTO 118
	expression/L2 = expression . "/=" expression, FOLLOW [203] -> SHIFT "/=" GOTO 119
	expression/L2 = expression . "%=" expression, FOLLOW [203] -> SHIFT "%=" GOTO 120
	expression/L2 = expression . "&&=" expression, FOLLOW [203] -> SHIFT "&&=" GOTO 121
	expression/L2 = expression . "||=" expression, FOLLOW [203] -> SHIFT "||=" GOTO 122
	expression/L2 = expression . "&=" expression, FOLLOW [203] -> SHIFT "&=" GOTO 123
	expression/L2 = expression . "|=" expression, FOLLOW [203] -> SHIFT "|=" GOTO 124
	expression/L2 = expression . "<<=" expression, FOLLOW [203] -> SHIFT "<<=" GOTO 125
	expression/L2 = expression . ">>=" expression, FOLLOW [203] -> SHIFT ">>=" GOTO 126
	expression/L3 = expression . "||" expression, FOLLOW [203] -> SHIFT "||" GOTO 127
	expression/L4 = expression . "&&" expression, FOLLOW [203] -> SHIFT "&&" GOTO 128
	expression/L5 = expression . "|" expression, FOLLOW [203] -> SHIFT '|' GOTO 129
	expression/L7 = expression . "==" expression, FOLLOW [203] -> SHIFT "==" GOTO 130
	expression/L7 = expression . "!=" expression, FOLLOW [203] -> SHIFT "!=" GOTO 131
	expression/L7 = expression . "<=" expression, FOLLOW [203] -> SHIFT "<=" GOTO 132
	expression/L7 = expression . "<" expression, FOLLOW [203] -> SHIFT '<' GOTO 133
	expression/L7 = expression . ">=" expression, FOLLOW [203] -> SHIFT ">=" GOTO 134
	expression/L7 = expression . ">" expression, FOLLOW [203] -> SHIFT '>' GOTO 135
	expression/L8 = expression . "+" expression, FOLLOW [203] -> SHIFT '+' GOTO 136
	expression/L8 = expression . "-" expression, FOLLOW [203] -> SHIFT '-' GOTO 137
	expression/L9 = expression . "*" expression, FOLLOW [203] -> SHIFT '*' GOTO 138
	expression/L9 = expression . "/" expression, FOLLOW [203] -> SHIFT '/' GOTO 139
	expression/L9 = expression . "%" expression, FOLLOW [203] -> SHIFT '%' GOTO 140
	expression/L10 = expression . "<<" expression, FOLLOW [203] -> SHIFT "<<" GOTO 141
	expression/L10 = expression . ">>" expression, FOLLOW [203] -> SHIFT ">>" GOTO 142
	expression/L11 = expression . "." IDENT, FOLLOW [203] -> SHIFT '.' GOTO 143
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 144
	expression/L7 = expression "==" expression . (66), FOLLOW [203] -> REDUCE expression #3 CALL operator "=="
[198]
	iexpression = expression . indirection IDENT, FOLLOW [203] -> GOTO 109
	expression/L12 = expression . "(" expressionlist ")", FOLLOW [203] -> SHIFT '(' GOTO 110
	expression/L12 = expression . "(" ")", FOLLOW [203] -> SHIFT '(' GOTO 110
	expression/L6 = expression . "&" expression, FOLLOW [203] -> SHIFT '&' GOTO 112
	expression/L6 = expression . "^" expression, FOLLOW [203] -> SHIFT '^' GOTO 113
	expression/L2 = expression . "=" expression, FOLLOW [203] -> SHIFT '=' GOTO 114
	expression/L12 = expression . "[" expressionlist "]", FOLLOW [203] -> SHIFT '[' GOTO 115
	expression/L2 = expression . "+=" expression, FOLLOW [203] -> SHIFT "+=" GOTO 116
	expression/L2 = expression . "-=" expression, FOLLOW [203] -> SHIFT "-=" GOTO 117
	expression/L2 = expression . "*=" expression, FOLLOW [203] -> SHIFT "*=" GOTO 118
	expression/L2 = expression . "/=" expression, FOLLOW [203] -> SHIFT "/=" GOTO 119
	expression/L2 = expression . "%=" expression, FOLLOW [203] -> SHIFT "%=" GOTO 120
	expression/L2 = expression . "&&=" expression, FOLLOW [203] -> SHIFT "&&=" GOTO 121
	expression/L2 = expression . "||=" expression, FOLLOW [203] -> SHIFT "||=" GOTO 122
	expression/L2 = expression . "&=" expression, FOLLOW [203] -> SHIFT "&=" GOTO 123
	expression/L2 = expression . "|=" expression, FOLLOW [203] -> SHIFT "|=" GOTO 124
	expression/L2 = expression . "<<=" expression, FOLLOW [203] -> SHIFT "<<=" GOTO 125
	expression/L2 = expression . ">>=" expression, FOLLOW [203] -> SHIFT ">>=" GOTO 126
	expression/L3 = expression . "||" expression, FOLLOW [203] -> SHIFT "||" GOTO 127
	expression/L4 = expression . "&&" expression, FOLLOW [203] -> SHIFT "&&" GOTO 128
	expression/L5 = expression . "|" expression, FOLLOW [203] -> SHIFT '|' GOTO 129
	expression/L7 = expression . "==" expression, FOLLOW [203] -> SHIFT "==" GOTO 130
	expression/L7 = expression . "!=" expression, FOLLOW [203] -> SHIFT "!=" GOTO 131
	expression/L7 = expression . "<=" expression, FOLLOW [203] -> SHIFT "<=" GOTO 132
	expression/L7 = expression . "<" expression, FOLLOW [203] -> SHIFT '<' GOTO 133
	expression/L7 = expression . ">=" expression, FOLLOW [203] -> SHIFT ">=" GOTO 134
	expression/L7 = expression . ">" expression, FOLLOW [203] -> SHIFT '>' GOTO 135
	expression/L8 = expression . "+" expression, FOLLOW [203] -> SHIFT '+' GOTO 136
	expression/L8 = expression . "-" expression, FOLLOW [203] -> SHIFT '-' GOTO 137
	expression/L9 = expression . "*" expression, FOLLOW [203] -> SHIFT '*' GOTO 138
	expression/L9 = expression . "/" expression, FOLLOW [203] -> SHIFT '/' GOTO 139
	expression/L9 = expression . "%" expression, FOLLOW [203] -> SHIFT '%' GOTO 140
	expression/L10 = expression . "<<" expression, FOLLOW [203] -> SHIFT "<<" GOTO 141
	expression/L10 = expression . ">>" expression, FOLLOW [203] -> SHIFT ">>" GOTO 142
	expression/L11 = expression . "." IDENT, FOLLOW [203] -> SHIFT '.' GOTO 143
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 144
	expression/L7 = expression "!=" expression . (67), FOLLOW [203] -> REDUCE expression #3 CALL operator "!="
[199]
	iexpression = expression . indirection IDENT, FOLLOW [203] -> GOTO 109
	expression/L12 = expression . "(" expressionlist ")", FOLLOW [203] -> SHIFT '(' GOTO 110
	expression/L12 = expression . "(" ")", FOLLOW [203] -> SHIFT '(' GOTO 110
	expression/L6 = expression . "&" expression, FOLLOW [203] -> SHIFT '&' GOTO 112
	expression/L6 = expression . "^" expression, FOLLOW [203] -> SHIFT '^' GOTO 113
	expression/L2 = expression . "=" expression, FOLLOW [203] -> SHIFT '=' GOTO 114
	expression/L12 = expression . "[" expressionlist "]", FOLLOW [203] -> SHIFT '[' GOTO 115
	expression/L2 = expression . "+=" expression, FOLLOW [203] -> SHIFT "+=" GOTO 116
	expression/L2 = expression . "-=" expression, FOLLOW [203] -> SHIFT "-=" GOTO 117
	expression/L2 = expression . "*=" expression, FOLLOW [203] -> SHIFT "*=" GOTO 118
	expression/L2 = expression . "/=" expression, FOLLOW [203] -> SHIFT "/=" GOTO 119
	expression/L2 = expression . "%=" expression, FOLLOW [203] -> SHIFT "%=" GOTO 120
	expression/L2 = expression . "&&=" expression, FOLLOW [203] -> SHIFT "&&=" GOTO 121
	expression/L2 = expression . "||=" expression, FOLLOW [203] -> SHIFT "||=" GOTO 122
	expression/L2 = expression . "&=" expression, FOLLOW [203] -> SHIFT "&=" GOTO 123
	expression/L2 = expression . "|=" expression, FOLLOW [203] -> SHIFT "|=" GOTO 124
	expression/L2 = expression . "<<=" expression, FOLLOW [203] -> SHIFT "<<=" GOTO 125
	expression/L2 = expression . ">>=" expression, FOLLOW [203] -> SHIFT ">>=" GOTO 126
	expression/L3 = expression . "||" expression, FOLLOW [203] -> SHIFT "||" GOTO 127
	expression/L4 = expression . "&&" expression, FOLLOW [203] -> SHIFT "&&" GOTO 128
	expression/L5 = expression . "|" expression, FOLLOW [203] -> SHIFT '|' GOTO 129
	expression/L7 = expression . "==" expression, FOLLOW [203] -> SHIFT "==" GOTO 130
	expression/L7 = expression . "!=" expression, FOLLOW [203] -> SHIFT "!=" GOTO 131
	expression/L7 = expression . "<=" expression, FOLLOW [203] -> SHIFT "<=" GOTO 132
	expression/L7 = expression . "<" expression, FOLLOW [203] -> SHIFT '<' GOTO 133
	expression/L7 = expression . ">=" expression, FOLLOW [203] -> SHIFT ">=" GOTO 134
	expression/L7 = expression . ">" expression, FOLLOW [203] -> SHIFT '>' GOTO 135
	expression/L8 = expression . "+" expression, FOLLOW [203] -> SHIFT '+' GOTO 136
	expression/L8 = expression . "-" expression, FOLLOW [203] -> SHIFT '-' GOTO 137
	expression/L9 = expression . "*" expression, FOLLOW [203] -> SHIFT '*' GOTO 138
	expression/L9 = expression . "/" expression, FOLLOW [203] -> SHIFT '/' GOTO 139
	expression/L9 = expression . "%" expression, FOLLOW [203] -> SHIFT '%' GOTO 140
	expression/L10 = expression . "<<" expression, FOLLOW [203] -> SHIFT "<<" GOTO 141
	expression/L10 = expression . ">>" expression, FOLLOW [203] -> SHIFT ">>" GOTO 142
	expression/L11 = expression . "." IDENT, FOLLOW [203] -> SHIFT '.' GOTO 143
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 144
	expression/L7 = expression "<=" expression . (68), FOLLOW [203] -> REDUCE expression #3 CALL operator "<="
[200]
	iexpression = expression . indirection IDENT, FOLLOW [203] -> GOTO 109
	expression/L12 = expression . "(" expressionlist ")", FOLLOW [203] -> SHIFT '(' GOTO 110
	expression/L12 = expression . "(" ")", FOLLOW [203] -> SHIFT '(' GOTO 110
	expression/L6 = expression . "&" expression, FOLLOW [203] -> SHIFT '&' GOTO 112
	expression/L6 = expression . "^" expression, FOLLOW [203] -> SHIFT '^' GOTO 113
	expression/L2 = expression . "=" expression, FOLLOW [203] -> SHIFT '=' GOTO 114
	expression/L12 = expression . "[" expressionlist "]", FOLLOW [203] -> SHIFT '[' GOTO 115
	expression/L2 = expression . "+=" expression, FOLLOW [203] -> SHIFT "+=" GOTO 116
	expression/L2 = expression . "-=" expression, FOLLOW [203] -> SHIFT "-=" GOTO 117
	expression/L2 = expression . "*=" expression, FOLLOW [203] -> SHIFT "*=" GOTO 118
	expression/L2 = expression . "/=" expression, FOLLOW [203] -> SHIFT "/=" GOTO 119
	expression/L2 = expression . "%=" expression, FOLLOW [203] -> SHIFT "%=" GOTO 120
	expression/L2 = expression . "&&=" expression, FOLLOW [203] -> SHIFT "&&=" GOTO 121
	expression/L2 = expression . "||=" expression, FOLLOW [203] -> SHIFT "||=" GOTO 122
	expression/L2 = expression . "&=" expression, FOLLOW [203] -> SHIFT "&=" GOTO 123
	expression/L2 = expression . "|=" expression, FOLLOW [203] -> SHIFT "|=" GOTO 124
	expression/L2 = expression . "<<=" expression, FOLLOW [203] -> SHIFT "<<=" GOTO 125
	expression/L2 = expression . ">>=" expression, FOLLOW [203] -> SHIFT ">>=" GOTO 126
	expression/L3 = expression . "||" expression, FOLLOW [203] -> SHIFT "||" GOTO 127
	expression/L4 = expression . "&&" expression, FOLLOW [203] -> SHIFT "&&" GOTO 128
	expression/L5 = expression . "|" expression, FOLLOW [203] -> SHIFT '|' GOTO 129
	expression/L7 = expression . "==" expression, FOLLOW [203] -> SHIFT "==" GOTO 130
	expression/L7 = expression . "!=" expression, FOLLOW [203] -> SHIFT "!=" GOTO 131
	expression/L7 = expression . "<=" expression, FOLLOW [203] -> SHIFT "<=" GOTO 132
	expression/L7 = expression . "<" expression, FOLLOW [203] -> SHIFT '<' GOTO 133
	expression/L7 = expression . ">=" expression, FOLLOW [203] -> SHIFT ">=" GOTO 134
	expression/L7 = expression . ">" expression, FOLLOW [203] -> SHIFT '>' GOTO 135
	expression/L8 = expression . "+" expression, FOLLOW [203] -> SHIFT '+' GOTO 136
	expression/L8 = expression . "-" expression, FOLLOW [203] -> SHIFT '-' GOTO 137
	expression/L9 = expression . "*" expression, FOLLOW [203] -> SHIFT '*' GOTO 138
	expression/L9 = expression . "/" expression, FOLLOW [203] -> SHIFT '/' GOTO 139
	expression/L9 = expression . "%" expression, FOLLOW [203] -> SHIFT '%' GOTO 140
	expression/L10 = expression . "<<" expression, FOLLOW [203] -> SHIFT "<<" GOTO 141
	expression/L10 = expression . ">>" expression, FOLLOW [203] -> SHIFT ">>" GOTO 142
	expression/L11 = expression . "." IDENT, FOLLOW [203] -> SHIFT '.' GOTO 143
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 144
	expression/L7 = expression "<" expression . (69), FOLLOW [203] -> REDUCE expression #3 CALL operator "<"
[201]
	iexpression = expression . indirection IDENT, FOLLOW [203] -> GOTO 109
	expression/L12 = expression . "(" expressionlist ")", FOLLOW [203] -> SHIFT '(' GOTO 110
	expression/L12 = expression . "(" ")", FOLLOW [203] -> SHIFT '(' GOTO 110
	expression/L6 = expression . "&" expression, FOLLOW [203] -> SHIFT '&' GOTO 112
	expression/L6 = expression . "^" expression, FOLLOW [203] -> SHIFT '^' GOTO 113
	expression/L2 = expression . "=" expression, FOLLOW [203] -> SHIFT '=' GOTO 114
	expression/L12 = expression . "[" expressionlist "]", FOLLOW [203] -> SHIFT '[' GOTO 115
	expression/L2 = expression . "+=" expression, FOLLOW [203] -> SHIFT "+=" GOTO 116
	expression/L2 = expression . "-=" expression, FOLLOW [203] -> SHIFT "-=" GOTO 117
	expression/L2 = expression . "*=" expression, FOLLOW [203] -> SHIFT "*=" GOTO 118
	expression/L2 = expression . "/=" expression, FOLLOW [203] -> SHIFT "/=" GOTO 119
	expression/L2 = expression . "%=" expression, FOLLOW [203] -> SHIFT "%=" GOTO 120
	expression/L2 = expression . "&&=" expression, FOLLOW [203] -> SHIFT "&&=" GOTO 121
	expression/L2 = expression . "||=" expression, FOLLOW [203] -> SHIFT "||=" GOTO 122
	expression/L2 = expression . "&=" expression, FOLLOW [203] -> SHIFT "&=" GOTO 123
	expression/L2 = expression . "|=" expression, FOLLOW [203] -> SHIFT "|=" GOTO 124
	expression/L2 = expression . "<<=" expression, FOLLOW [203] -> SHIFT "<<=" GOTO 125
	expression/L2 = expression . ">>=" expression, FOLLOW [203] -> SHIFT ">>=" GOTO 126
	expression/L3 = expression . "||" expression, FOLLOW [203] -> SHIFT "||" GOTO 127
	expression/L4 = expression . "&&" expression, FOLLOW [203] -> SHIFT "&&" GOTO 128
	expression/L5 = expression . "|" expression, FOLLOW [203] -> SHIFT '|' GOTO 129
	expression/L7 = expression . "==" expression, FOLLOW [203] -> SHIFT "==" GOTO 130
	expression/L7 = expression . "!=" expression, FOLLOW [203] -> SHIFT "!=" GOTO 131
	expression/L7 = expression . "<=" expression, FOLLOW [203] -> SHIFT "<=" GOTO 132
	expression/L7 = expression . "<" expression, FOLLOW [203] -> SHIFT '<' GOTO 133
	expression/L7 = expression . ">=" expression, FOLLOW [203] -> SHIFT ">=" GOTO 134
	expression/L7 = expression . ">" expression, FOLLOW [203] -> SHIFT '>' GOTO 135
	expression/L8 = expression . "+" expression, FOLLOW [203] -> SHIFT '+' GOTO 136
	expression/L8 = expression . "-" expression, FOLLOW [203] -> SHIFT '-' GOTO 137
	expression/L9 = expression . "*" expression, FOLLOW [203] -> SHIFT '*' GOTO 138
	expression/L9 = expression . "/" expression, FOLLOW [203] -> SHIFT '/' GOTO 139
	expression/L9 = expression . "%" expression, FOLLOW [203] -> SHIFT '%' GOTO 140
	expression/L10 = expression . "<<" expression, FOLLOW [203] -> SHIFT "<<" GOTO 141
	expression/L10 = expression . ">>" expression, FOLLOW [203] -> SHIFT ">>" GOTO 142
	expression/L11 = expression . "." IDENT, FOLLOW [203] -> SHIFT '.' GOTO 143
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 144
	expression/L7 = expression ">=" expression . (70), FOLLOW [203] -> REDUCE expression #3 CALL operator ">="
[202]
	iexpression = expression . indirection IDENT, FOLLOW [203] -> GOTO 109
	expression/L12 = expression . "(" expressionlist ")", FOLLOW [203] -> SHIFT '(' GOTO 110
	expression/L12 = expression . "(" ")", FOLLOW [203] -> SHIFT '(' GOTO 110
	expression/L6 = expression . "&" expression, FOLLOW [203] -> SHIFT '&' GOTO 112
	expression/L6 = expression . "^" expression, FOLLOW [203] -> SHIFT '^' GOTO 113
	expression/L2 = expression . "=" expression, FOLLOW [203] -> SHIFT '=' GOTO 114
	expression/L12 = expression . "[" expressionlist "]", FOLLOW [203] -> SHIFT '[' GOTO 115
	expression/L2 = expression . "+=" expression, FOLLOW [203] -> SHIFT "+=" GOTO 116
	expression/L2 = expression . "-=" expression, FOLLOW [203] -> SHIFT "-=" GOTO 117
	expression/L2 = expression . "*=" expression, FOLLOW [203] -> SHIFT "*=" GOTO 118
	expression/L2 = expression . "/=" expression, FOLLOW [203] -> SHIFT "/=" GOTO 119
	expression/L2 = expression . "%=" expression, FOLLOW [203] -> SHIFT "%=" GOTO 120
	expression/L2 = expression . "&&=" expression, FOLLOW [203] -> SHIFT "&&=" GOTO 121
	expression/L2 = expression . "||=" expression, FOLLOW [203] -> SHIFT "||=" GOTO 122
	expression/L2 = expression . "&=" expression, FOLLOW [203] -> SHIFT "&=" GOTO 123
	expression/L2 = expression . "|=" expression, FOLLOW [203] -> SHIFT "|=" GOTO 124
	expression/L2 = expression . "<<=" expression, FOLLOW [203] -> SHIFT "<<=" GOTO 125
	expression/L2 = expression . ">>=" expression, FOLLOW [203] -> SHIFT ">>=" GOTO 126
	expression/L3 = expression . "||" expression, FOLLOW [203] -> SHIFT "||" GOTO 127
	expression/L4 = expression . "&&" expression, FOLLOW [203] -> SHIFT "&&" GOTO 128
	expression/L5 = expression . "|" expression, FOLLOW [203] -> SHIFT '|' GOTO 129
	expression/L7 = expression . "==" expression, FOLLOW [203] -> SHIFT "==" GOTO 130
	expression/L7 = expression . "!=" expression, FOLLOW [203] -> SHIFT "!=" GOTO 131
	expression/L7 = expression . "<=" expression, FOLLOW [203] -> SHIFT "<=" GOTO 132
	expression/L7 = expression . "<" expression, FOLLOW [203] -> SHIFT '<' GOTO 133
	expression/L7 = expression . ">=" expression, FOLLOW [203] -> SHIFT ">=" GOTO 134
	expression/L7 = expression . ">" expression, FOLLOW [203] -> SHIFT '>' GOTO 135
	expression/L8 = expression . "+" expression, FOLLOW [203] -> SHIFT '+' GOTO 136
	expression/L8 = expression . "-" expression, FOLLOW [203] -> SHIFT '-' GOTO 137
	expression/L9 = expression . "*" expression, FOLLOW [203] -> SHIFT '*' GOTO 138
	expression/L9 = expression . "/" expression, FOLLOW [203] -> SHIFT '/' GOTO 139
	expression/L9 = expression . "%" expression, FOLLOW [203] -> SHIFT '%' GOTO 140
	expression/L10 = expression . "<<" expression, FOLLOW [203] -> SHIFT "<<" GOTO 141
	expression/L10 = expression . ">>" expression, FOLLOW [203] -> SHIFT ">>" GOTO 142
	expression/L11 = expression . "." IDENT, FOLLOW [203] -> SHIFT '.' GOTO 143
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 144
	expression/L7 = expression ">" expression . (71), FOLLOW [203] -> REDUCE expression #3 CALL operator ">"
[203]
	iexpression = expression . indirection IDENT, FOLLOW [203] -> GOTO 109
	expression/L12 = expression . "(" expressionlist ")", FOLLOW [203] -> SHIFT '(' GOTO 110
	expression/L12 = expression . "(" ")", FOLLOW [203] -> SHIFT '(' GOTO 110
	expression/L6 = expression . "&" expression, FOLLOW [203] -> SHIFT '&' GOTO 112
	expression/L6 = expression . "^" expression, FOLLOW [203] -> SHIFT '^' GOTO 113
	expression/L2 = expression . "=" expression, FOLLOW [203] -> SHIFT '=' GOTO 114
	expression/L12 = expression . "[" expressionlist "]", FOLLOW [203] -> SHIFT '[' GOTO 115
	expression/L2 = expression . "+=" expression, FOLLOW [203] -> SHIFT "+=" GOTO 116
	expression/L2 = expression . "-=" expression, FOLLOW [203] -> SHIFT "-=" GOTO 117
	expression/L2 = expression . "*=" expression, FOLLOW [203] -> SHIFT "*=" GOTO 118
	expression/L2 = expression . "/=" expression, FOLLOW [203] -> SHIFT "/=" GOTO 119
	expression/L2 = expression . "%=" expression, FOLLOW [203] -> SHIFT "%=" GOTO 120
	expression/L2 = expression . "&&=" expression, FOLLOW [203] -> SHIFT "&&=" GOTO 121
	expression/L2 = expression . "||=" expression, FOLLOW [203] -> SHIFT "||=" GOTO 122
	expression/L2 = expression . "&=" expression, FOLLOW [203] -> SHIFT "&=" GOTO 123
	expression/L2 = expression . "|=" expression, FOLLOW [203] -> SHIFT "|=" GOTO 124
	expression/L2 = expression . "<<=" expression, FOLLOW [203] -> SHIFT "<<=" GOTO 125
	expression/L2 = expression . ">>=" expression, FOLLOW [203] -> SHIFT ">>=" GOTO 126
	expression/L3 = expression . "||" expression, FOLLOW [203] -> SHIFT "||" GOTO 127
	expression/L4 = expression . "&&" expression, FOLLOW [203] -> SHIFT "&&" GOTO 128
	expression/L5 = expression . "|" expression, FOLLOW [203] -> SHIFT '|' GOTO 129
	expression/L7 = expression . "==" expression, FOLLOW [203] -> SHIFT "==" GOTO 130
	expression/L7 = expression . "!=" expression, FOLLOW [203] -> SHIFT "!=" GOTO 131
	expression/L7 = expression . "<=" expression, FOLLOW [203] -> SHIFT "<=" GOTO 132
	expression/L7 = expression . "<" expression, FOLLOW [203] -> SHIFT '<' GOTO 133
	expression/L7 = expression . ">=" expression, FOLLOW [203] -> SHIFT ">=" GOTO 134
	expression/L7 = expression . ">" expression, FOLLOW [203] -> SHIFT '>' GOTO 135
	expression/L8 = expression . "+" expression, FOLLOW [203] -> SHIFT '+' GOTO 136
	expression/L8 = expression . "-" expression, FOLLOW [203] -> SHIFT '-' GOTO 137
	expression/L9 = expression . "*" expression, FOLLOW [203] -> SHIFT '*' GOTO 138
	expression/L9 = expression . "/" expression, FOLLOW [203] -> SHIFT '/' GOTO 139
	expression/L9 = expression . "%" expression, FOLLOW [203] -> SHIFT '%' GOTO 140
	expression/L10 = expression . "<<" expression, FOLLOW [203] -> SHIFT "<<" GOTO 141
	expression/L10 = expression . ">>" expression, FOLLOW [203] -> SHIFT ">>" GOTO 142
	expression/L11 = expression . "." IDENT, FOLLOW [203] -> SHIFT '.' GOTO 143
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 144
	expression/L8 = expression "+" expression . (72), FOLLOW [203] -> REDUCE expression #3 CALL operator "+"
[204]
	iexpression = expression . indirection IDENT, FOLLOW [203] -> GOTO 109
	expression/L12 = expression . "(" expressionlist ")", FOLLOW [203] -> SHIFT '(' GOTO 110
	expression/L12 = expression . "(" ")", FOLLOW [203] -> SHIFT '(' GOTO 110
	expression/L6 = expression . "&" expression, FOLLOW [203] -> SHIFT '&' GOTO 112
	expression/L6 = expression . "^" expression, FOLLOW [203] -> SHIFT '^' GOTO 113
	expression/L2 = expression . "=" expression, FOLLOW [203] -> SHIFT '=' GOTO 114
	expression/L12 = expression . "[" expressionlist "]", FOLLOW [203] -> SHIFT '[' GOTO 115
	expression/L2 = expression . "+=" expression, FOLLOW [203] -> SHIFT "+=" GOTO 116
	expression/L2 = expression . "-=" expression, FOLLOW [203] -> SHIFT "-=" GOTO 117
	expression/L2 = expression . "*=" expression, FOLLOW [203] -> SHIFT "*=" GOTO 118
	expression/L2 = expression . "/=" expression, FOLLOW [203] -> SHIFT "/=" GOTO 119
	expression/L2 = expression . "%=" expression, FOLLOW [203] -> SHIFT "%=" GOTO 120
	expression/L2 = expression . "&&=" expression, FOLLOW [203] -> SHIFT "&&=" GOTO 121
	expression/L2 = expression . "||=" expression, FOLLOW [203] -> SHIFT "||=" GOTO 122
	expression/L2 = expression . "&=" expression, FOLLOW [203] -> SHIFT "&=" GOTO 123
	expression/L2 = expression . "|=" expression, FOLLOW [203] -> SHIFT "|=" GOTO 124
	expression/L2 = expression . "<<=" expression, FOLLOW [203] -> SHIFT "<<=" GOTO 125
	expression/L2 = expression . ">>=" expression, FOLLOW [203] -> SHIFT ">>=" GOTO 126
	expression/L3 = expression . "||" expression, FOLLOW [203] -> SHIFT "||" GOTO 127
	expression/L4 = expression . "&&" expression, FOLLOW [203] -> SHIFT "&&" GOTO 128
	expression/L5 = expression . "|" expression, FOLLOW [203] -> SHIFT '|' GOTO 129
	expression/L7 = expression . "==" expression, FOLLOW [203] -> SHIFT "==" GOTO 130
	expression/L7 = expression . "!=" expression, FOLLOW [203] -> SHIFT "!=" GOTO 131
	expression/L7 = expression . "<=" expression, FOLLOW [203] -> SHIFT "<=" GOTO 132
	expression/L7 = expression . "<" expression, FOLLOW [203] -> SHIFT '<' GOTO 133
	expression/L7 = expression . ">=" expression, FOLLOW [203] -> SHIFT ">=" GOTO 134
	expression/L7 = expression . ">" expression, FOLLOW [203] -> SHIFT '>' GOTO 135
	expression/L8 = expression . "+" expression, FOLLOW [203] -> SHIFT '+' GOTO 136
	expression/L8 = expression . "-" expression, FOLLOW [203] -> SHIFT '-' GOTO 137
	expression/L9 = expression . "*" expression, FOLLOW [203] -> SHIFT '*' GOTO 138
	expression/L9 = expression . "/" expression, FOLLOW [203] -> SHIFT '/' GOTO 139
	expression/L9 = expression . "%" expression, FOLLOW [203] -> SHIFT '%' GOTO 140
	expression/L10 = expression . "<<" expression, FOLLOW [203] -> SHIFT "<<" GOTO 141
	expression/L10 = expression . ">>" expression, FOLLOW [203] -> SHIFT ">>" GOTO 142
	expression/L11 = expression . "." IDENT, FOLLOW [203] -> SHIFT '.' GOTO 143
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 144
	expression/L8 = expression "-" expression . (73), FOLLOW [203] -> REDUCE expression #3 CALL operator "-"
[205]
	iexpression = expression . indirection IDENT, FOLLOW [203] -> GOTO 109
	expression/L12 = expression . "(" expressionlist ")", FOLLOW [203] -> SHIFT '(' GOTO 110
	expression/L12 = expression . "(" ")", FOLLOW [203] -> SHIFT '(' GOTO 110
	expression/L6 = expression . "&" expression, FOLLOW [203] -> SHIFT '&' GOTO 112
	expression/L6 = expression . "^" expression, FOLLOW [203] -> SHIFT '^' GOTO 113
	expression/L2 = expression . "=" expression, FOLLOW [203] -> SHIFT '=' GOTO 114
	expression/L12 = expression . "[" expressionlist "]", FOLLOW [203] -> SHIFT '[' GOTO 115
	expression/L2 = expression . "+=" expression, FOLLOW [203] -> SHIFT "+=" GOTO 116
	expression/L2 = expression . "-=" expression, FOLLOW [203] -> SHIFT "-=" GOTO 117
	expression/L2 = expression . "*=" expression, FOLLOW [203] -> SHIFT "*=" GOTO 118
	expression/L2 = expression . "/=" expression, FOLLOW [203] -> SHIFT "/=" GOTO 119
	expression/L2 = expression . "%=" expression, FOLLOW [203] -> SHIFT "%=" GOTO 120
	expression/L2 = expression . "&&=" expression, FOLLOW [203] -> SHIFT "&&=" GOTO 121
	expression/L2 = expression . "||=" expression, FOLLOW [203] -> SHIFT "||=" GOTO 122
	expression/L2 = expression . "&=" expression, FOLLOW [203] -> SHIFT "&=" GOTO 123
	expression/L2 = expression . "|=" expression, FOLLOW [203] -> SHIFT "|=" GOTO 124
	expression/L2 = expression . "<<=" expression, FOLLOW [203] -> SHIFT "<<=" GOTO 125
	expression/L2 = expression . ">>=" expression, FOLLOW [203] -> SHIFT ">>=" GOTO 126
	expression/L3 = expression . "||" expression, FOLLOW [203] -> SHIFT "||" GOTO 127
	expression/L4 = expression . "&&" expression, FOLLOW [203] -> SHIFT "&&" GOTO 128
	expression/L5 = expression . "|" expression, FOLLOW [203] -> SHIFT '|' GOTO 129
	expression/L7 = expression . "==" expression, FOLLOW [203] -> SHIFT "==" GOTO 130
	expression/L7 = expression . "!=" expression, FOLLOW [203] -> SHIFT "!=" GOTO 131
	expression/L7 = expression . "<=" expression, FOLLOW [203] -> SHIFT "<=" GOTO 132
	expression/L7 = expression . "<" expression, FOLLOW [203] -> SHIFT '<' GOTO 133
	expression/L7 = expression . ">=" expression, FOLLOW [203] -> SHIFT ">=" GOTO 134
	expression/L7 = expression . ">" expression, FOLLOW [203] -> SHIFT '>' GOTO 135
	expression/L8 = expression . "+" expression, FOLLOW [203] -> SHIFT '+' GOTO 136
	expression/L8 = expression . "-" expression, FOLLOW [203] -> SHIFT '-' GOTO 137
	expression/L9 = expression . "*" expression, FOLLOW [203] -> SHIFT '*' GOTO 138
	expression/L9 = expression . "/" expression, FOLLOW [203] -> SHIFT '/' GOTO 139
	expression/L9 = expression . "%" expression, FOLLOW [203] -> SHIFT '%' GOTO 140
	expression/L10 = expression . "<<" expression, FOLLOW [203] -> SHIFT "<<" GOTO 141
	expression/L10 = expression . ">>" expression, FOLLOW [203] -> SHIFT ">>" GOTO 142
	expression/L11 = expression . "." IDENT, FOLLOW [203] -> SHIFT '.' GOTO 143
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 144
	expression/L9 = expression "*" expression . (76), FOLLOW [203] -> REDUCE expression #3 CALL operator "*"
[206]
	iexpression = expression . indirection IDENT, FOLLOW [203] -> GOTO 109
	expression/L12 = expression . "(" expressionlist ")", FOLLOW [203] -> SHIFT '(' GOTO 110
	expression/L12 = expression . "(" ")", FOLLOW [203] -> SHIFT '(' GOTO 110
	expression/L6 = expression . "&" expression, FOLLOW [203] -> SHIFT '&' GOTO 112
	expression/L6 = expression . "^" expression, FOLLOW [203] -> SHIFT '^' GOTO 113
	expression/L2 = expression . "=" expression, FOLLOW [203] -> SHIFT '=' GOTO 114
	expression/L12 = expression . "[" expressionlist "]", FOLLOW [203] -> SHIFT '[' GOTO 115
	expression/L2 = expression . "+=" expression, FOLLOW [203] -> SHIFT "+=" GOTO 116
	expression/L2 = expression . "-=" expression, FOLLOW [203] -> SHIFT "-=" GOTO 117
	expression/L2 = expression . "*=" expression, FOLLOW [203] -> SHIFT "*=" GOTO 118
	expression/L2 = expression . "/=" expression, FOLLOW [203] -> SHIFT "/=" GOTO 119
	expression/L2 = expression . "%=" expression, FOLLOW [203] -> SHIFT "%=" GOTO 120
	expression/L2 = expression . "&&=" expression, FOLLOW [203] -> SHIFT "&&=" GOTO 121
	expression/L2 = expression . "||=" expression, FOLLOW [203] -> SHIFT "||=" GOTO 122
	expression/L2 = expression . "&=" expression, FOLLOW [203] -> SHIFT "&=" GOTO 123
	expression/L2 = expression . "|=" expression, FOLLOW [203] -> SHIFT "|=" GOTO 124
	expression/L2 = expression . "<<=" expression, FOLLOW [203] -> SHIFT "<<=" GOTO 125
	expression/L2 = expression . ">>=" expression, FOLLOW [203] -> SHIFT ">>=" GOTO 126
	expression/L3 = expression . "||" expression, FOLLOW [203] -> SHIFT "||" GOTO 127
	expression/L4 = expression . "&&" expression, FOLLOW [203] -> SHIFT "&&" GOTO 128
	expression/L5 = expression . "|" expression, FOLLOW [203] -> SHIFT '|' GOTO 129
	expression/L7 = expression . "==" expression, FOLLOW [203] -> SHIFT "==" GOTO 130
	expression/L7 = expression . "!=" expression, FOLLOW [203] -> SHIFT "!=" GOTO 131
	expression/L7 = expression . "<=" expression, FOLLOW [203] -> SHIFT "<=" GOTO 132
	expression/L7 = expression . "<" expression, FOLLOW [203] -> SHIFT '<' GOTO 133
	expression/L7 = expression . ">=" expression, FOLLOW [203] -> SHIFT ">=" GOTO 134
	expression/L7 = expression . ">" expression, FOLLOW [203] -> SHIFT '>' GOTO 135
	expression/L8 = expression . "+" expression, FOLLOW [203] -> SHIFT '+' GOTO 136
	expression/L8 = expression . "-" expression, FOLLOW [203] -> SHIFT '-' GOTO 137
	expression/L9 = expression . "*" expression, FOLLOW [203] -> SHIFT '*' GOTO 138
	expression/L9 = expression . "/" expression, FOLLOW [203] -> SHIFT '/' GOTO 139
	expression/L9 = expression . "%" expression, FOLLOW [203] -> SHIFT '%' GOTO 140
	expression/L10 = expression . "<<" expression, FOLLOW [203] -> SHIFT "<<" GOTO 141
	expression/L10 = expression . ">>" expression, FOLLOW [203] -> SHIFT ">>" GOTO 142
	expression/L11 = expression . "." IDENT, FOLLOW [203] -> SHIFT '.' GOTO 143
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 144
	expression/L9 = expression "/" expression . (77), FOLLOW [203] -> REDUCE expression #3 CALL operator "/"
[207]
	iexpression = expression . indirection IDENT, FOLLOW [203] -> GOTO 109
	expression/L12 = expression . "(" expressionlist ")", FOLLOW [203] -> SHIFT '(' GOTO 110
	expression/L12 = expression . "(" ")", FOLLOW [203] -> SHIFT '(' GOTO 110
	expression/L6 = expression . "&" expression, FOLLOW [203] -> SHIFT '&' GOTO 112
	expression/L6 = expression . "^" expression, FOLLOW [203] -> SHIFT '^' GOTO 113
	expression/L2 = expression . "=" expression, FOLLOW [203] -> SHIFT '=' GOTO 114
	expression/L12 = expression . "[" expressionlist "]", FOLLOW [203] -> SHIFT '[' GOTO 115
	expression/L2 = expression . "+=" expression, FOLLOW [203] -> SHIFT "+=" GOTO 116
	expression/L2 = expression . "-=" expression, FOLLOW [203] -> SHIFT "-=" GOTO 117
	expression/L2 = expression . "*=" expression, FOLLOW [203] -> SHIFT "*=" GOTO 118
	expression/L2 = expression . "/=" expression, FOLLOW [203] -> SHIFT "/=" GOTO 119
	expression/L2 = expression . "%=" expression, FOLLOW [203] -> SHIFT "%=" GOTO 120
	expression/L2 = expression . "&&=" expression, FOLLOW [203] -> SHIFT "&&=" GOTO 121
	expression/L2 = expression . "||=" expression, FOLLOW [203] -> SHIFT "||=" GOTO 122
	expression/L2 = expression . "&=" expression, FOLLOW [203] -> SHIFT "&=" GOTO 123
	expression/L2 = expression . "|=" expression, FOLLOW [203] -> SHIFT "|=" GOTO 124
	expression/L2 = expression . "<<=" expression, FOLLOW [203] -> SHIFT "<<=" GOTO 125
	expression/L2 = expression . ">>=" expression, FOLLOW [203] -> SHIFT ">>=" GOTO 126
	expression/L3 = expression . "||" expression, FOLLOW [203] -> SHIFT "||" GOTO 127
	expression/L4 = expression . "&&" expression, FOLLOW [203] -> SHIFT "&&" GOTO 128
	expression/L5 = expression . "|" expression, FOLLOW [203] -> SHIFT '|' GOTO 129
	expression/L7 = expression . "==" expression, FOLLOW [203] -> SHIFT "==" GOTO 130
	expression/L7 = expression . "!=" expression, FOLLOW [203] -> SHIFT "!=" GOTO 131
	expression/L7 = expression . "<=" expression, FOLLOW [203] -> SHIFT "<=" GOTO 132
	expression/L7 = expression . "<" expression, FOLLOW [203] -> SHIFT '<' GOTO 133
	expression/L7 = expression . ">=" expression, FOLLOW [203] -> SHIFT ">=" GOTO 134
	expression/L7 = expression . ">" expression, FOLLOW [203] -> SHIFT '>' GOTO 135
	expression/L8 = expression . "+" expression, FOLLOW [203] -> SHIFT '+' GOTO 136
	expression/L8 = expression . "-" expression, FOLLOW [203] -> SHIFT '-' GOTO 137
	expression/L9 = expression . "*" expression, FOLLOW [203] -> SHIFT '*' GOTO 138
	expression/L9 = expression . "/" expression, FOLLOW [203] -> SHIFT '/' GOTO 139
	expression/L9 = expression . "%" expression, FOLLOW [203] -> SHIFT '%' GOTO 140
	expression/L10 = expression . "<<" expression, FOLLOW [203] -> SHIFT "<<" GOTO 141
	expression/L10 = expression . ">>" expression, FOLLOW [203] -> SHIFT ">>" GOTO 142
	expression/L11 = expression . "." IDENT, FOLLOW [203] -> SHIFT '.' GOTO 143
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 144
	expression/L9 = expression "%" expression . (78), FOLLOW [203] -> REDUCE expression #3 CALL operator "%"
[208]
	iexpression = expression . indirection IDENT, FOLLOW [203] -> GOTO 109
	expression/L12 = expression . "(" expressionlist ")", FOLLOW [203] -> SHIFT '(' GOTO 110
	expression/L12 = expression . "(" ")", FOLLOW [203] -> SHIFT '(' GOTO 110
	expression/L6 = expression . "&" expression, FOLLOW [203] -> SHIFT '&' GOTO 112
	expression/L6 = expression . "^" expression, FOLLOW [203] -> SHIFT '^' GOTO 113
	expression/L2 = expression . "=" expression, FOLLOW [203] -> SHIFT '=' GOTO 114
	expression/L12 = expression . "[" expressionlist "]", FOLLOW [203] -> SHIFT '[' GOTO 115
	expression/L2 = expression . "+=" expression, FOLLOW [203] -> SHIFT "+=" GOTO 116
	expression/L2 = expression . "-=" expression, FOLLOW [203] -> SHIFT "-=" GOTO 117
	expression/L2 = expression . "*=" expression, FOLLOW [203] -> SHIFT "*=" GOTO 118
	expression/L2 = expression . "/=" expression, FOLLOW [203] -> SHIFT "/=" GOTO 119
	expression/L2 = expression . "%=" expression, FOLLOW [203] -> SHIFT "%=" GOTO 120
	expression/L2 = expression . "&&=" expression, FOLLOW [203] -> SHIFT "&&=" GOTO 121
	expression/L2 = expression . "||=" expression, FOLLOW [203] -> SHIFT "||=" GOTO 122
	expression/L2 = expression . "&=" expression, FOLLOW [203] -> SHIFT "&=" GOTO 123
	expression/L2 = expression . "|=" expression, FOLLOW [203] -> SHIFT "|=" GOTO 124
	expression/L2 = expression . "<<=" expression, FOLLOW [203] -> SHIFT "<<=" GOTO 125
	expression/L2 = expression . ">>=" expression, FOLLOW [203] -> SHIFT ">>=" GOTO 126
	expression/L3 = expression . "||" expression, FOLLOW [203] -> SHIFT "||" GOTO 127
	expression/L4 = expression . "&&" expression, FOLLOW [203] -> SHIFT "&&" GOTO 128
	expression/L5 = expression . "|" expression, FOLLOW [203] -> SHIFT '|' GOTO 129
	expression/L7 = expression . "==" expression, FOLLOW [203] -> SHIFT "==" GOTO 130
	expression/L7 = expression . "!=" expression, FOLLOW [203] -> SHIFT "!=" GOTO 131
	expression/L7 = expression . "<=" expression, FOLLOW [203] -> SHIFT "<=" GOTO 132
	expression/L7 = expression . "<" expression, FOLLOW [203] -> SHIFT '<' GOTO 133
	expression/L7 = expression . ">=" expression, FOLLOW [203] -> SHIFT ">=" GOTO 134
	expression/L7 = expression . ">" expression, FOLLOW [203] -> SHIFT '>' GOTO 135
	expression/L8 = expression . "+" expression, FOLLOW [203] -> SHIFT '+' GOTO 136
	expression/L8 = expression . "-" expression, FOLLOW [203] -> SHIFT '-' GOTO 137
	expression/L9 = expression . "*" expression, FOLLOW [203] -> SHIFT '*' GOTO 138
	expression/L9 = expression . "/" expression, FOLLOW [203] -> SHIFT '/' GOTO 139
	expression/L9 = expression . "%" expression, FOLLOW [203] -> SHIFT '%' GOTO 140
	expression/L10 = expression . "<<" expression, FOLLOW [203] -> SHIFT "<<" GOTO 141
	expression/L10 = expression . ">>" expression, FOLLOW [203] -> SHIFT ">>" GOTO 142
	expression/L11 = expression . "." IDENT, FOLLOW [203] -> SHIFT '.' GOTO 143
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 144
	expression/L10 = expression "<<" expression . (79), FOLLOW [203] -> REDUCE expression #3 CALL operator "<<"
[209]
	iexpression = expression . indirection IDENT, FOLLOW [203] -> GOTO 109
	expression/L12 = expression . "(" expressionlist ")", FOLLOW [203] -> SHIFT '(' GOTO 110
	expression/L12 = expression . "(" ")", FOLLOW [203] -> SHIFT '(' GOTO 110
	expression/L6 = expression . "&" expression, FOLLOW [203] -> SHIFT '&' GOTO 112
	expression/L6 = expression . "^" expression, FOLLOW [203] -> SHIFT '^' GOTO 113
	expression/L2 = expression . "=" expression, FOLLOW [203] -> SHIFT '=' GOTO 114
	expression/L12 = expression . "[" expressionlist "]", FOLLOW [203] -> SHIFT '[' GOTO 115
	expression/L2 = expression . "+=" expression, FOLLOW [203] -> SHIFT "+=" GOTO 116
	expression/L2 = expression . "-=" expression, FOLLOW [203] -> SHIFT "-=" GOTO 117
	expression/L2 = expression . "*=" expression, FOLLOW [203] -> SHIFT "*=" GOTO 118
	expression/L2 = expression . "/=" expression, FOLLOW [203] -> SHIFT "/=" GOTO 119
	expression/L2 = expression . "%=" expression, FOLLOW [203] -> SHIFT "%=" GOTO 120
	expression/L2 = expression . "&&=" expression, FOLLOW [203] -> SHIFT "&&=" GOTO 121
	expression/L2 = expression . "||=" expression, FOLLOW [203] -> SHIFT "||=" GOTO 122
	expression/L2 = expression . "&=" expression, FOLLOW [203] -> SHIFT "&=" GOTO 123
	expression/L2 = expression . "|=" expression, FOLLOW [203] -> SHIFT "|=" GOTO 124
	expression/L2 = expression . "<<=" expression, FOLLOW [203] -> SHIFT "<<=" GOTO 125
	expression/L2 = expression . ">>=" expression, FOLLOW [203] -> SHIFT ">>=" GOTO 126
	expression/L3 = expression . "||" expression, FOLLOW [203] -> SHIFT "||" GOTO 127
	expression/L4 = expression . "&&" expression, FOLLOW [203] -> SHIFT "&&" GOTO 128
	expression/L5 = expression . "|" expression, FOLLOW [203] -> SHIFT '|' GOTO 129
	expression/L7 = expression . "==" expression, FOLLOW [203] -> SHIFT "==" GOTO 130
	expression/L7 = expression . "!=" expression, FOLLOW [203] -> SHIFT "!=" GOTO 131
	expression/L7 = expression . "<=" expression, FOLLOW [203] -> SHIFT "<=" GOTO 132
	expression/L7 = expression . "<" expression, FOLLOW [203] -> SHIFT '<' GOTO 133
	expression/L7 = expression . ">=" expression, FOLLOW [203] -> SHIFT ">=" GOTO 134
	expression/L7 = expression . ">" expression, FOLLOW [203] -> SHIFT '>' GOTO 135
	expression/L8 = expression . "+" expression, FOLLOW [203] -> SHIFT '+' GOTO 136
	expression/L8 = expression . "-" expression, FOLLOW [203] -> SHIFT '-' GOTO 137
	expression/L9 = expression . "*" expression, FOLLOW [203] -> SHIFT '*' GOTO 138
	expression/L9 = expression . "/" expression, FOLLOW [203] -> SHIFT '/' GOTO 139
	expression/L9 = expression . "%" expression, FOLLOW [203] -> SHIFT '%' GOTO 140
	expression/L10 = expression . "<<" expression, FOLLOW [203] -> SHIFT "<<" GOTO 141
	expression/L10 = expression . ">>" expression, FOLLOW [203] -> SHIFT ">>" GOTO 142
	expression/L11 = expression . "." IDENT, FOLLOW [203] -> SHIFT '.' GOTO 143
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 144
	expression/L10 = expression ">>" expression . (80), FOLLOW [203] -> REDUCE expression #3 CALL operator ">>"
[210]
	expression/L11 = expression "." IDENT . (81), FOLLOW [203] -> REDUCE expression #3 CALL member
[211]
	indirection = "->" indirection . (86), FOLLOW [8] -> REDUCE indirection #2 CALL count
[212]
	expression/L1 = "(" expression ")" ., FOLLOW [203] -> REDUCE expression #3
[213]
	statement = "{" statementlist "}" . (scope), FOLLOW [89] -> REDUCE statement #3
[214]
	statement = "var" variabledefinition ";" . (8), FOLLOW [89] -> REDUCE statement #3 CALL definition
[215]
	statement = "return" expression ";" . (step:34), FOLLOW [89] -> REDUCE statement #3 CALL return_value
[216]
	iexpression = expression . indirection IDENT, FOLLOW [200] -> GOTO 109
	expression/L12 = expression . "(" expressionlist ")", FOLLOW [200] -> SHIFT '(' GOTO 110
	expression/L12 = expression . "(" ")", FOLLOW [200] -> SHIFT '(' GOTO 110
	statement = "if" "(" expression . ")" "{" statementlist "}", FOLLOW [89] -> SHIFT ')' GOTO 230
	statement = "if" "(" expression . ")" "{" statementlist "}" "else" "{" statementlist "}", FOLLOW [89] -> SHIFT ')' GOTO 230
	expression/L6 = expression . "&" expression, FOLLOW [200] -> SHIFT '&' GOTO 112
	expression/L6 = expression . "^" expression, FOLLOW [200] -> SHIFT '^' GOTO 113
	expression/L2 = expression . "=" expression, FOLLOW [200] -> SHIFT '=' GOTO 114
	expression/L12 = expression . "[" expressionlist "]", FOLLOW [200] -> SHIFT '[' GOTO 115
	expression/L2 = expression . "+=" expression, FOLLOW [200] -> SHIFT "+=" GOTO 116
	expression/L2 = expression . "-=" expression, FOLLOW [200] -> SHIFT "-=" GOTO 117
	expression/L2 = expression . "*=" expression, FOLLOW [200] -> SHIFT "*=" GOTO 118
	expression/L2 = expression . "/=" expression, FOLLOW [200] -> SHIFT "/=" GOTO 119
	expression/L2 = expression . "%=" expression, FOLLOW [200] -> SHIFT "%=" GOTO 120
	expression/L2 = expression . "&&=" expression, FOLLOW [200] -> SHIFT "&&=" GOTO 121
	expression/L2 = expression . "||=" expression, FOLLOW [200] -> SHIFT "||=" GOTO 122
	expression/L2 = expression . "&=" expression, FOLLOW [200] -> SHIFT "&=" GOTO 123
	expression/L2 = expression . "|=" expression, FOLLOW [200] -> SHIFT "|=" GOTO 124
	expression/L2 = expression . "<<=" expression, FOLLOW [200] -> SHIFT "<<=" GOTO 125
	expression/L2 = expression . ">>=" expression, FOLLOW [200] -> SHIFT ">>=" GOTO 126
	expression/L3 = expression . "||" expression, FOLLOW [200] -> SHIFT "||" GOTO 127
	expression/L4 = expression . "&&" expression, FOLLOW [200] -> SHIFT "&&" GOTO 128
	expression/L5 = expression . "|" expression, FOLLOW [200] -> SHIFT '|' GOTO 129
	expression/L7 = expression . "==" expression, FOLLOW [200] -> SHIFT "==" GOTO 130
	expression/L7 = expression . "!=" expression, FOLLOW [200] -> SHIFT "!=" GOTO 131
	expression/L7 = expression . "<=" expression, FOLLOW [200] -> SHIFT "<=" GOTO 132
	expression/L7 = expression . "<" expression, FOLLOW [200] -> SHIFT '<' GOTO 133
	expression/L7 = expression . ">=" expression, FOLLOW [200] -> SHIFT ">=" GOTO 134
	expression/L7 = expression . ">" expression, FOLLOW [200] -> SHIFT '>' GOTO 135
	expression/L8 = expression . "+" expression, FOLLOW [200] -> SHIFT '+' GOTO 136
	expression/L8 = expression . "-" expression, FOLLOW [200] -> SHIFT '-' GOTO 137
	expression/L9 = expression . "*" expression, FOLLOW [200] -> SHIFT '*' GOTO 138
	expression/L9 = expression . "/" expression, FOLLOW [200] -> SHIFT '/' GOTO 139
	expression/L9 = expression . "%" expression, FOLLOW [200] -> SHIFT '%' GOTO 140
	expression/L10 = expression . "<<" expression, FOLLOW [200] -> SHIFT "<<" GOTO 141
	expression/L10 = expression . ">>" expression, FOLLOW [200] -> SHIFT ">>" GOTO 142
	expression/L11 = expression . "." IDENT, FOLLOW [200] -> SHIFT '.' GOTO 143
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 144
[217]
	iexpression = expression . indirection IDENT, FOLLOW [200] -> GOTO 109
	expression/L12 = expression . "(" expressionlist ")", FOLLOW [200] -> SHIFT '(' GOTO 110
	expression/L12 = expression . "(" ")", FOLLOW [200] -> SHIFT '(' GOTO 110
	statement = "while" "(" expression . ")" "{" statementlist "}", FOLLOW [89] -> SHIFT ')' GOTO 231
	expression/L6 = expression . "&" expression, FOLLOW [200] -> SHIFT '&' GOTO 112
	expression/L6 = expression . "^" expression, FOLLOW [200] -> SHIFT '^' GOTO 113
	expression/L2 = expression . "=" expression, FOLLOW [200] -> SHIFT '=' GOTO 114
	expression/L12 = expression . "[" expressionlist "]", FOLLOW [200] -> SHIFT '[' GOTO 115
	expression/L2 = expression . "+=" expression, FOLLOW [200] -> SHIFT "+=" GOTO 116
	expression/L2 = expression . "-=" expression, FOLLOW [200] -> SHIFT "-=" GOTO 117
	expression/L2 = expression . "*=" expression, FOLLOW [200] -> SHIFT "*=" GOTO 118
	expression/L2 = expression . "/=" expression, FOLLOW [200] -> SHIFT "/=" GOTO 119
	expression/L2 = expression . "%=" expression, FOLLOW [200] -> SHIFT "%=" GOTO 120
	expression/L2 = expression . "&&=" expression, FOLLOW [200] -> SHIFT "&&=" GOTO 121
	expression/L2 = expression . "||=" expression, FOLLOW [200] -> SHIFT "||=" GOTO 122
	expression/L2 = expression . "&=" expression, FOLLOW [200] -> SHIFT "&=" GOTO 123
	expression/L2 = expression . "|=" expression, FOLLOW [200] -> SHIFT "|=" GOTO 124
	expression/L2 = expression . "<<=" expression, FOLLOW [200] -> SHIFT "<<=" GOTO 125
	expression/L2 = expression . ">>=" expression, FOLLOW [200] -> SHIFT ">>=" GOTO 126
	expression/L3 = expression . "||" expression, FOLLOW [200] -> SHIFT "||" GOTO 127
	expression/L4 = expression . "&&" expression, FOLLOW [200] -> SHIFT "&&" GOTO 128
	expression/L5 = expression . "|" expression, FOLLOW [200] -> SHIFT '|' GOTO 129
	expression/L7 = expression . "==" expression, FOLLOW [200] -> SHIFT "==" GOTO 130
	expression/L7 = expression . "!=" expression, FOLLOW [200] -> SHIFT "!=" GOTO 131
	expression/L7 = expression . "<=" expression, FOLLOW [200] -> SHIFT "<=" GOTO 132
	expression/L7 = expression . "<" expression, FOLLOW [200] -> SHIFT '<' GOTO 133
	expression/L7 = expression . ">=" expression, FOLLOW [200] -> SHIFT ">=" GOTO 134
	expression/L7 = expression . ">" expression, FOLLOW [200] -> SHIFT '>' GOTO 135
	expression/L8 = expression . "+" expression, FOLLOW [200] -> SHIFT '+' GOTO 136
	expression/L8 = expression . "-" expression, FOLLOW [200] -> SHIFT '-' GOTO 137
	expression/L9 = expression . "*" expression, FOLLOW [200] -> SHIFT '*' GOTO 138
	expression/L9 = expression . "/" expression, FOLLOW [200] -> SHIFT '/' GOTO 139
	expression/L9 = expression . "%" expression, FOLLOW [200] -> SHIFT '%' GOTO 140
	expression/L10 = expression . "<<" expression, FOLLOW [200] -> SHIFT "<<" GOTO 141
	expression/L10 = expression . ">>" expression, FOLLOW [200] -> SHIFT ">>" GOTO 142
	expression/L11 = expression . "." IDENT, FOLLOW [200] -> SHIFT '.' GOTO 143
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 144
[218]
	variabledefinition = typespec IDENT "[" expression "]" "=" . expression, FOLLOW [12] -> GOTO 232
	expression/L2 = . expression "=" expression, FOLLOW [88] -> GOTO 232
	expression/L2 = . expression "+=" expression, FOLLOW [88] -> GOTO 232
	expression/L2 = . expression "-=" expression, FOLLOW [88] -> GOTO 232
	expression/L2 = . expression "*=" expression, FOLLOW [88] -> GOTO 232
	expression/L2 = . expression "/=" expression, FOLLOW [88] -> GOTO 232
	expression/L2 = . expression "%=" expression, FOLLOW [88] -> GOTO 232
	expression/L2 = . expression "&&=" expression, FOLLOW [88] -> GOTO 232
	expression/L2 = . expression "||=" expression, FOLLOW [88] -> GOTO 232
	expression/L2 = . expression "&=" expression, FOLLOW [88] -> GOTO 232
	expression/L2 = . expression "|=" expression, FOLLOW [88] -> GOTO 232
	expression/L2 = . expression "<<=" expression, FOLLOW [88] -> GOTO 232
	expression/L2 = . expression ">>=" expression, FOLLOW [88] -> GOTO 232
	expression/L3 = . expression "||" expression, FOLLOW [88] -> GOTO 232
	expression/L4 = . expression "&&" expression, FOLLOW [88] -> GOTO 232
	expression/L5 = . expression "|" expression, FOLLOW [88] -> GOTO 232
	expression/L6 = . expression "^" expression, FOLLOW [88] -> GOTO 232
	expression/L6 = . expression "&" expression, FOLLOW [88] -> GOTO 232
	expression/L7 = . expression "==" expression, FOLLOW [88] -> GOTO 232
	expression/L7 = . expression "!=" expression, FOLLOW [88] -> GOTO 232
	expression/L7 = . expression "<=" expression, FOLLOW [88] -> GOTO 232
	expression/L7 = . expression "<" expression, FOLLOW [88] -> GOTO 232
	expression/L7 = . expression ">=" expression, FOLLOW [88] -> GOTO 232
	expression/L7 = . expression ">" expression, FOLLOW [88] -> GOTO 232
	expression/L8 = . expression "+" expression, FOLLOW [88] -> GOTO 232
	expression/L8 = . expression "-" expression, FOLLOW [88] -> GOTO 232
	expression/L9 = . expression "*" expression, FOLLOW [88] -> GOTO 232
	expression/L9 = . expression "/" expression, FOLLOW [88] -> GOTO 232
	expression/L9 = . expression "%" expression, FOLLOW [88] -> GOTO 232
	expression/L10 = . expression "<<" expression, FOLLOW [88] -> GOTO 232
	expression/L10 = . expression ">>" expression, FOLLOW [88] -> GOTO 232
	expression/L11 = . expression "." IDENT, FOLLOW [88] -> GOTO 232
	expression/L12 = . expression "(" expressionlist ")", FOLLOW [88] -> GOTO 232
	expression/L12 = . expression "(" ")", FOLLOW [88] -> GOTO 232
	expression/L12 = . expression "[" expressionlist "]", FOLLOW [88] -> GOTO 232
	iexpression = . expression indirection IDENT, FOLLOW [88] -> GOTO 232
	expression/L11 = . iexpression, FOLLOW [88] -> GOTO 69
	expression/L1 = . BOOLEAN, FOLLOW [88] -> SHIFT BOOLEAN GOTO 70
	expression/L1 = . IDENT, FOLLOW [88] -> SHIFT IDENT GOTO 71
	expression/L1 = . DQSTRING, FOLLOW [88] -> SHIFT DQSTRING GOTO 72
	expression/L1 = . SQSTRING, FOLLOW [88] -> SHIFT SQSTRING GOTO 73
	expression/L1 = . CARDINAL, FOLLOW [88] -> SHIFT CARDINAL GOTO 74
	expression/L1 = . INTEGER, FOLLOW [88] -> SHIFT INTEGER GOTO 75
	expression/L1 = . FLOAT, FOLLOW [88] -> SHIFT FLOAT GOTO 76
	expression/L1 = . "(" expression ")", FOLLOW [88] -> SHIFT '(' GOTO 77
	expression/L8 = . "&" expression, FOLLOW [88] -> SHIFT '&' GOTO 79
	expression/L8 = . "+" expression, FOLLOW [88] -> SHIFT '+' GOTO 84
	expression/L8 = . "-" expression, FOLLOW [88] -> SHIFT '-' GOTO 85
	expression/L8 = . "~" expression, FOLLOW [88] -> SHIFT '~' GOTO 86
	expression/L8 = . "!" expression, FOLLOW [88] -> SHIFT '!' GOTO 87
	expression/L11 = . "*" expression, FOLLOW [88] -> SHIFT '*' GOTO 88
[219]
	paramdecl = typespec IDENT . (31), FOLLOW [162] -> REDUCE paramdecl #2 CALL paramdef
[220]
	callablebody = "(" parameterlist ")" . "{" statementlist "}", FOLLOW [213] -> SHIFT '{' GOTO 233
[221]
	typespec/L1 = . typename, FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [8] -> GOTO 8
	paramdecl = . typespec IDENT, FOLLOW [162] -> GOTO 159
	parameters = paramdecl "," . parameters, FOLLOW [9] -> GOTO 234
	parameters = . paramdecl "," parameters, FOLLOW [9] -> GOTO 162
	parameters = . paramdecl, FOLLOW [9] -> GOTO 162
	typename/L1 = . IDENT, FOLLOW [54] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [54] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [8] -> SHIFT "const" GOTO 18
	parameters = ., FOLLOW [9] -> REDUCE parameters #0
[222]
	methoddefinition = "function" typespec IDENT . "(" parameterlist ")" ";", FOLLOW [158] -> SHIFT '(' GOTO 235
[223]
	typespec/L1 = . typename, FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [8] -> GOTO 8
	paramdecl = . typespec IDENT, FOLLOW [162] -> GOTO 159
	methoddefinition = "procedure" IDENT "(" . parameterlist ")" ";", FOLLOW [158] -> GOTO 236
	parameterlist = . parameters, FOLLOW [9] -> GOTO 161
	parameters = . paramdecl "," parameters, FOLLOW [9] -> GOTO 162
	parameters = . paramdecl, FOLLOW [9] -> GOTO 162
	typename/L1 = . IDENT, FOLLOW [54] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [54] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [8] -> SHIFT "const" GOTO 18
	parameters = ., FOLLOW [9] -> REDUCE parameters #0
[224]
	externdefinition = "extern" DQSTRING "function" typespec IDENT "(" externparameterlist . ")" ";", FOLLOW [51] -> SHIFT ')' GOTO 237
[225]
	externdefinition = "extern" DQSTRING "procedure" IDENT "(" externparameterlist ")" . ";", FOLLOW [51] -> SHIFT ';' GOTO 238
[226]
	externparameters = typespec "," . externparameters, FOLLOW [9] -> GOTO 239
	typespec/L1 = . typename, FOLLOW [162] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [162] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [162] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [162] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [162] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [162] -> GOTO 8
	externparameters = . typespec "," externparameters, FOLLOW [9] -> GOTO 174
	externparameters = . typespec, FOLLOW [9] -> GOTO 174
	typename/L1 = . IDENT, FOLLOW [163] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [163] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [162] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [162] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [162] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [162] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [162] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [162] -> SHIFT "const" GOTO 18
	externparameters = ., FOLLOW [9] -> REDUCE externparameters #0
[227]
	expression/L2 = . expression "=" expression, FOLLOW [202] -> GOTO 176
	expression/L2 = . expression "+=" expression, FOLLOW [202] -> GOTO 176
	expression/L2 = . expression "-=" expression, FOLLOW [202] -> GOTO 176
	expression/L2 = . expression "*=" expression, FOLLOW [202] -> GOTO 176
	expression/L2 = . expression "/=" expression, FOLLOW [202] -> GOTO 176
	expression/L2 = . expression "%=" expression, FOLLOW [202] -> GOTO 176
	expression/L2 = . expression "&&=" expression, FOLLOW [202] -> GOTO 176
	expression/L2 = . expression "||=" expression, FOLLOW [202] -> GOTO 176
	expression/L2 = . expression "&=" expression, FOLLOW [202] -> GOTO 176
	expression/L2 = . expression "|=" expression, FOLLOW [202] -> GOTO 176
	expression/L2 = . expression "<<=" expression, FOLLOW [202] -> GOTO 176
	expression/L2 = . expression ">>=" expression, FOLLOW [202] -> GOTO 176
	expression/L3 = . expression "||" expression, FOLLOW [202] -> GOTO 176
	expression/L4 = . expression "&&" expression, FOLLOW [202] -> GOTO 176
	expression/L5 = . expression "|" expression, FOLLOW [202] -> GOTO 176
	expression/L6 = . expression "^" expression, FOLLOW [202] -> GOTO 176
	expression/L6 = . expression "&" expression, FOLLOW [202] -> GOTO 176
	expression/L7 = . expression "==" expression, FOLLOW [202] -> GOTO 176
	expression/L7 = . expression "!=" expression, FOLLOW [202] -> GOTO 176
	expression/L7 = . expression "<=" expression, FOLLOW [202] -> GOTO 176
	expression/L7 = . expression "<" expression, FOLLOW [202] -> GOTO 176
	expression/L7 = . expression ">=" expression, FOLLOW [202] -> GOTO 176
	expression/L7 = . expression ">" expression, FOLLOW [202] -> GOTO 176
	expression/L8 = . expression "+" expression, FOLLOW [202] -> GOTO 176
	expression/L8 = . expression "-" expression, FOLLOW [202] -> GOTO 176
	expression/L9 = . expression "*" expression, FOLLOW [202] -> GOTO 176
	expression/L9 = . expression "/" expression, FOLLOW [202] -> GOTO 176
	expression/L9 = . expression "%" expression, FOLLOW [202] -> GOTO 176
	expression/L10 = . expression "<<" expression, FOLLOW [202] -> GOTO 176
	expression/L10 = . expression ">>" expression, FOLLOW [202] -> GOTO 176
	expression/L11 = . expression "." IDENT, FOLLOW [202] -> GOTO 176
	expression/L12 = . expression "(" expressionlist ")", FOLLOW [202] -> GOTO 176
	expression/L12 = . expression "(" ")", FOLLOW [202] -> GOTO 176
	expression/L12 = . expression "[" expressionlist "]", FOLLOW [202] -> GOTO 176
	iexpression = . expression indirection IDENT, FOLLOW [202] -> GOTO 176
	expressionlist = . expression "," expressionlist, FOLLOW [211] -> GOTO 176
	expressionlist = . expression, FOLLOW [211] -> GOTO 176
	expression/L11 = . iexpression, FOLLOW [202] -> GOTO 69
	expressionlist = expression "," . expressionlist, FOLLOW [211] -> GOTO 240
	expression/L1 = . BOOLEAN, FOLLOW [202] -> SHIFT BOOLEAN GOTO 70
	expression/L1 = . IDENT, FOLLOW [202] -> SHIFT IDENT GOTO 71
	expression/L1 = . DQSTRING, FOLLOW [202] -> SHIFT DQSTRING GOTO 72
	expression/L1 = . SQSTRING, FOLLOW [202] -> SHIFT SQSTRING GOTO 73
	expression/L1 = . CARDINAL, FOLLOW [202] -> SHIFT CARDINAL GOTO 74
	expression/L1 = . INTEGER, FOLLOW [202] -> SHIFT INTEGER GOTO 75
	expression/L1 = . FLOAT, FOLLOW [202] -> SHIFT FLOAT GOTO 76
	expression/L1 = . "(" expression ")", FOLLOW [202] -> SHIFT '(' GOTO 77
	expression/L8 = . "&" expression, FOLLOW [202] -> SHIFT '&' GOTO 79
	expression/L8 = . "+" expression, FOLLOW [202] -> SHIFT '+' GOTO 84
	expression/L8 = . "-" expression, FOLLOW [202] -> SHIFT '-' GOTO 85
	expression/L8 = . "~" expression, FOLLOW [202] -> SHIFT '~' GOTO 86
	expression/L8 = . "!" expression, FOLLOW [202] -> SHIFT '!' GOTO 87
	expression/L11 = . "*" expression, FOLLOW [202] -> SHIFT '*' GOTO 88
	expressionlist = ., FOLLOW [211] -> REDUCE expressionlist #0
[228]
	expression/L12 = expression "(" expressionlist ")" . (83), FOLLOW [203] -> REDUCE expression #4 CALL operator "()"
[229]
	expression/L12 = expression "[" expressionlist "]" . (84), FOLLOW [203] -> REDUCE expression #4 CALL operator "[]"
[230]
	statement = "if" "(" expression ")" . "{" statementlist "}", FOLLOW [89] -> SHIFT '{' GOTO 241
	statement = "if" "(" expression ")" . "{" statementlist "}" "else" "{" statementlist "}", FOLLOW [89] -> SHIFT '{' GOTO 241
[231]
	statement = "while" "(" expression ")" . "{" statementlist "}", FOLLOW [89] -> SHIFT '{' GOTO 242
[232]
	iexpression = expression . indirection IDENT, FOLLOW [88] -> GOTO 109
	expression/L12 = expression . "(" expressionlist ")", FOLLOW [88] -> SHIFT '(' GOTO 110
	expression/L12 = expression . "(" ")", FOLLOW [88] -> SHIFT '(' GOTO 110
	expression/L6 = expression . "&" expression, FOLLOW [88] -> SHIFT '&' GOTO 112
	expression/L6 = expression . "^" expression, FOLLOW [88] -> SHIFT '^' GOTO 113
	expression/L2 = expression . "=" expression, FOLLOW [88] -> SHIFT '=' GOTO 114
	expression/L12 = expression . "[" expressionlist "]", FOLLOW [88] -> SHIFT '[' GOTO 115
	expression/L2 = expression . "+=" expression, FOLLOW [88] -> SHIFT "+=" GOTO 116
	expression/L2 = expression . "-=" expression, FOLLOW [88] -> SHIFT "-=" GOTO 117
	expression/L2 = expression . "*=" expression, FOLLOW [88] -> SHIFT "*=" GOTO 118
	expression/L2 = expression . "/=" expression, FOLLOW [88] -> SHIFT "/=" GOTO 119
	expression/L2 = expression . "%=" expression, FOLLOW [88] -> SHIFT "%=" GOTO 120
	expression/L2 = expression . "&&=" expression, FOLLOW [88] -> SHIFT "&&=" GOTO 121
	expression/L2 = expression . "||=" expression, FOLLOW [88] -> SHIFT "||=" GOTO 122
	expression/L2 = expression . "&=" expression, FOLLOW [88] -> SHIFT "&=" GOTO 123
	expression/L2 = expression . "|=" expression, FOLLOW [88] -> SHIFT "|=" GOTO 124
	expression/L2 = expression . "<<=" expression, FOLLOW [88] -> SHIFT "<<=" GOTO 125
	expression/L2 = expression . ">>=" expression, FOLLOW [88] -> SHIFT ">>=" GOTO 126
	expression/L3 = expression . "||" expression, FOLLOW [88] -> SHIFT "||" GOTO 127
	expression/L4 = expression . "&&" expression, FOLLOW [88] -> SHIFT "&&" GOTO 128
	expression/L5 = expression . "|" expression, FOLLOW [88] -> SHIFT '|' GOTO 129
	expression/L7 = expression . "==" expression, FOLLOW [88] -> SHIFT "==" GOTO 130
	expression/L7 = expression . "!=" expression, FOLLOW [88] -> SHIFT "!=" GOTO 131
	expression/L7 = expression . "<=" expression, FOLLOW [88] -> SHIFT "<=" GOTO 132
	expression/L7 = expression . "<" expression, FOLLOW [88] -> SHIFT '<' GOTO 133
	expression/L7 = expression . ">=" expression, FOLLOW [88] -> SHIFT ">=" GOTO 134
	expression/L7 = expression . ">" expression, FOLLOW [88] -> SHIFT '>' GOTO 135
	expression/L8 = expression . "+" expression, FOLLOW [88] -> SHIFT '+' GOTO 136
	expression/L8 = expression . "-" expression, FOLLOW [88] -> SHIFT '-' GOTO 137
	expression/L9 = expression . "*" expression, FOLLOW [88] -> SHIFT '*' GOTO 138
	expression/L9 = expression . "/" expression, FOLLOW [88] -> SHIFT '/' GOTO 139
	expression/L9 = expression . "%" expression, FOLLOW [88] -> SHIFT '%' GOTO 140
	expression/L10 = expression . "<<" expression, FOLLOW [88] -> SHIFT "<<" GOTO 141
	expression/L10 = expression . ">>" expression, FOLLOW [88] -> SHIFT ">>" GOTO 142
	expression/L11 = expression . "." IDENT, FOLLOW [88] -> SHIFT '.' GOTO 143
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 144
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 144
	variabledefinition = typespec IDENT "[" expression "]" "=" expression . (step:40), FOLLOW [12] -> REDUCE variabledefinition #7 CALL vardef_array_assign
[233]
	statement = . typedefinition ";", FOLLOW [89] -> GOTO 64
	functiondefinition = . linkage "function" typespec IDENT callablebody, FOLLOW [89] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [89] -> GOTO 14
	statement = . functiondefinition, FOLLOW [89] -> GOTO 65
	callablebody = "(" parameterlist ")" "{" . statementlist "}", FOLLOW [213] -> GOTO 243
	statementlist = . statement statementlist, FOLLOW [11] -> GOTO 67
	statement = . expression ";", FOLLOW [89] -> GOTO 68
	expression/L2 = . expression "=" expression, FOLLOW [88] -> GOTO 68
	expression/L2 = . expression "+=" expression, FOLLOW [88] -> GOTO 68
	expression/L2 = . expression "-=" expression, FOLLOW [88] -> GOTO 68
	expression/L2 = . expression "*=" expression, FOLLOW [88] -> GOTO 68
	expression/L2 = . expression "/=" expression, FOLLOW [88] -> GOTO 68
	expression/L2 = . expression "%=" expression, FOLLOW [88] -> GOTO 68
	expression/L2 = . expression "&&=" expression, FOLLOW [88] -> GOTO 68
	expression/L2 = . expression "||=" expression, FOLLOW [88] -> GOTO 68
	expression/L2 = . expression "&=" expression, FOLLOW [88] -> GOTO 68
	expression/L2 = . expression "|=" expression, FOLLOW [88] -> GOTO 68
	expression/L2 = . expression "<<=" expression, FOLLOW [88] -> GOTO 68
	expression/L2 = . expression ">>=" expression, FOLLOW [88] -> GOTO 68
	expression/L3 = . expression "||" expression, FOLLOW [88] -> GOTO 68
	expression/L4 = . expression "&&" expression, FOLLOW [88] -> GOTO 68
	expression/L5 = . expression "|" expression, FOLLOW [88] -> GOTO 68
	expression/L6 = . expression "^" expression, FOLLOW [88] -> GOTO 68
	expression/L6 = . expression "&" expression, FOLLOW [88] -> GOTO 68
	expression/L7 = . expression "==" expression, FOLLOW [88] -> GOTO 68
	expression/L7 = . expression "!=" expression, FOLLOW [88] -> GOTO 68
	expression/L7 = . expression "<=" expression, FOLLOW [88] -> GOTO 68
	expression/L7 = . expression "<" expression, FOLLOW [88] -> GOTO 68
	expression/L7 = . expression ">=" expression, FOLLOW [88] -> GOTO 68
	expression/L7 = . expression ">" expression, FOLLOW [88] -> GOTO 68
	expression/L8 = . expression "+" expression, FOLLOW [88] -> GOTO 68
	expression/L8 = . expression "-" expression, FOLLOW [88] -> GOTO 68
	expression/L9 = . expression "*" expression, FOLLOW [88] -> GOTO 68
	expression/L9 = . expression "/" expression, FOLLOW [88] -> GOTO 68
	expression/L9 = . expression "%" expression, FOLLOW [88] -> GOTO 68
	expression/L10 = . expression "<<" expression, FOLLOW [88] -> GOTO 68
	expression/L10 = . expression ">>" expression, FOLLOW [88] -> GOTO 68
	expression/L11 = . expression "." IDENT, FOLLOW [88] -> GOTO 68
	expression/L12 = . expression "(" expressionlist ")", FOLLOW [88] -> GOTO 68
	expression/L12 = . expression "(" ")", FOLLOW [88] -> GOTO 68
	expression/L12 = . expression "[" expressionlist "]", FOLLOW [88] -> GOTO 68
	iexpression = . expression indirection IDENT, FOLLOW [88] -> GOTO 68
	expression/L11 = . iexpression, FOLLOW [88] -> GOTO 69
	expression/L1 = . BOOLEAN, FOLLOW [88] -> SHIFT BOOLEAN GOTO 70
	expression/L1 = . IDENT, FOLLOW [88] -> SHIFT IDENT GOTO 71
	expression/L1 = . DQSTRING, FOLLOW [88] -> SHIFT DQSTRING GOTO 72
	expression/L1 = . SQSTRING, FOLLOW [88] -> SHIFT SQSTRING GOTO 73
	expression/L1 = . CARDINAL, FOLLOW [88] -> SHIFT CARDINAL GOTO 74
	expression/L1 = . INTEGER, FOLLOW [88] -> SHIFT INTEGER GOTO 75
	expression/L1 = . FLOAT, FOLLOW [88] -> SHIFT FLOAT GOTO 76
	expression/L1 = . "(" expression ")", FOLLOW [88] -> SHIFT '(' GOTO 77
	statement = . "{" statementlist "}", FOLLOW [89] -> SHIFT '{' GOTO 78
	expression/L8 = . "&" expression, FOLLOW [88] -> SHIFT '&' GOTO 79
	typedefinition = . "typedef" typename IDENT, FOLLOW [12] -> SHIFT "typedef" GOTO 19
	linkage = . "private", FOLLOW [53] -> SHIFT "private" GOTO 23
	linkage = . "public", FOLLOW [53] -> SHIFT "public" GOTO 24
	statement = . "var" variabledefinition ";", FOLLOW [89] -> SHIFT "var" GOTO 80
	statement = . "return" expression ";", FOLLOW [89] -> SHIFT "return" GOTO 81
	statement = . "if" "(" expression ")" "{" statementlist "}", FOLLOW [89] -> SHIFT "if" GOTO 82
	statement = . "if" "(" expression ")" "{" statementlist "}" "else" "{" statementlist "}", FOLLOW [89] -> SHIFT "if" GOTO 82
	statement = . "while" "(" expression ")" "{" statementlist "}", FOLLOW [89] -> SHIFT "while" GOTO 83
	expression/L8 = . "+" expression, FOLLOW [88] -> SHIFT '+' GOTO 84
	expression/L8 = . "-" expression, FOLLOW [88] -> SHIFT '-' GOTO 85
	expression/L8 = . "~" expression, FOLLOW [88] -> SHIFT '~' GOTO 86
	expression/L8 = . "!" expression, FOLLOW [88] -> SHIFT '!' GOTO 87
	expression/L11 = . "*" expression, FOLLOW [88] -> SHIFT '*' GOTO 88
	statementlist = ., FOLLOW [11] -> REDUCE statementlist #0
	linkage = . (25), FOLLOW [53] -> REDUCE linkage #0 CALL linkage {linkage="internal",attributes="#0 nounwind"}
[234]
	parameters = paramdecl "," parameters ., FOLLOW [9] -> REDUCE parameters #3
[235]
	typespec/L1 = . typename, FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [8] -> GOTO 8
	paramdecl = . typespec IDENT, FOLLOW [162] -> GOTO 159
	methoddefinition = "function" typespec IDENT "(" . parameterlist ")" ";", FOLLOW [158] -> GOTO 244
	parameterlist = . parameters, FOLLOW [9] -> GOTO 161
	parameters = . paramdecl "," parameters, FOLLOW [9] -> GOTO 162
	parameters = . paramdecl, FOLLOW [9] -> GOTO 162
	typename/L1 = . IDENT, FOLLOW [54] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [54] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [8] -> SHIFT "const" GOTO 18
	parameters = ., FOLLOW [9] -> REDUCE parameters #0
[236]
	methoddefinition = "procedure" IDENT "(" parameterlist . ")" ";", FOLLOW [158] -> SHIFT ')' GOTO 245
[237]
	externdefinition = "extern" DQSTRING "function" typespec IDENT "(" externparameterlist ")" . ";", FOLLOW [51] -> SHIFT ';' GOTO 246
[238]
	externdefinition = "extern" DQSTRING "procedure" IDENT "(" externparameterlist ")" ";" . (3), FOLLOW [51] -> REDUCE externdefinition #8 CALL extern_procdef
[239]
	externparameters = typespec "," externparameters ., FOLLOW [9] -> REDUCE externparameters #3
[240]
	expressionlist = expression "," expressionlist ., FOLLOW [211] -> REDUCE expressionlist #3
[241]
	statement = . typedefinition ";", FOLLOW [89] -> GOTO 64
	functiondefinition = . linkage "function" typespec IDENT callablebody, FOLLOW [89] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [89] -> GOTO 14
	statement = . functiondefinition, FOLLOW [89] -> GOTO 65
	statement = "if" "(" expression ")" "{" . statementlist "}", FOLLOW [89] -> GOTO 247
	statement = "if" "(" expression ")" "{" . statementlist "}" "else" "{" statementlist "}", FOLLOW [89] -> GOTO 247
	statementlist = . statement statementlist, FOLLOW [11] -> GOTO 67
	statement = . expression ";", FOLLOW [89] -> GOTO 68
	expression/L2 = . expression "=" expression, FOLLOW [88] -> GOTO 68
	expression/L2 = . expression "+=" expression, FOLLOW [88] -> GOTO 68
	expression/L2 = . expression "-=" expression, FOLLOW [88] -> GOTO 68
	expression/L2 = . expression "*=" expression, FOLLOW [88] -> GOTO 68
	expression/L2 = . expression "/=" expression, FOLLOW [88] -> GOTO 68
	expression/L2 = . expression "%=" expression, FOLLOW [88] -> GOTO 68
	expression/L2 = . expression "&&=" expression, FOLLOW [88] -> GOTO 68
	expression/L2 = . expression "||=" expression, FOLLOW [88] -> GOTO 68
	expression/L2 = . expression "&=" expression, FOLLOW [88] -> GOTO 68
	expression/L2 = . expression "|=" expression, FOLLOW [88] -> GOTO 68
	expression/L2 = . expression "<<=" expression, FOLLOW [88] -> GOTO 68
	expression/L2 = . expression ">>=" expression, FOLLOW [88] -> GOTO 68
	expression/L3 = . expression "||" expression, FOLLOW [88] -> GOTO 68
	expression/L4 = . expression "&&" expression, FOLLOW [88] -> GOTO 68
	expression/L5 = . expression "|" expression, FOLLOW [88] -> GOTO 68
	expression/L6 = . expression "^" expression, FOLLOW [88] -> GOTO 68
	expression/L6 = . expression "&" expression, FOLLOW [88] -> GOTO 68
	expression/L7 = . expression "==" expression, FOLLOW [88] -> GOTO 68
	expression/L7 = . expression "!=" expression, FOLLOW [88] -> GOTO 68
	expression/L7 = . expression "<=" expression, FOLLOW [88] -> GOTO 68
	expression/L7 = . expression "<" expression, FOLLOW [88] -> GOTO 68
	expression/L7 = . expression ">=" expression, FOLLOW [88] -> GOTO 68
	expression/L7 = . expression ">" expression, FOLLOW [88] -> GOTO 68
	expression/L8 = . expression "+" expression, FOLLOW [88] -> GOTO 68
	expression/L8 = . expression "-" expression, FOLLOW [88] -> GOTO 68
	expression/L9 = . expression "*" expression, FOLLOW [88] -> GOTO 68
	expression/L9 = . expression "/" expression, FOLLOW [88] -> GOTO 68
	expression/L9 = . expression "%" expression, FOLLOW [88] -> GOTO 68
	expression/L10 = . expression "<<" expression, FOLLOW [88] -> GOTO 68
	expression/L10 = . expression ">>" expression, FOLLOW [88] -> GOTO 68
	expression/L11 = . expression "." IDENT, FOLLOW [88] -> GOTO 68
	expression/L12 = . expression "(" expressionlist ")", FOLLOW [88] -> GOTO 68
	expression/L12 = . expression "(" ")", FOLLOW [88] -> GOTO 68
	expression/L12 = . expression "[" expressionlist "]", FOLLOW [88] -> GOTO 68
	iexpression = . expression indirection IDENT, FOLLOW [88] -> GOTO 68
	expression/L11 = . iexpression, FOLLOW [88] -> GOTO 69
	expression/L1 = . BOOLEAN, FOLLOW [88] -> SHIFT BOOLEAN GOTO 70
	expression/L1 = . IDENT, FOLLOW [88] -> SHIFT IDENT GOTO 71
	expression/L1 = . DQSTRING, FOLLOW [88] -> SHIFT DQSTRING GOTO 72
	expression/L1 = . SQSTRING, FOLLOW [88] -> SHIFT SQSTRING GOTO 73
	expression/L1 = . CARDINAL, FOLLOW [88] -> SHIFT CARDINAL GOTO 74
	expression/L1 = . INTEGER, FOLLOW [88] -> SHIFT INTEGER GOTO 75
	expression/L1 = . FLOAT, FOLLOW [88] -> SHIFT FLOAT GOTO 76
	expression/L1 = . "(" expression ")", FOLLOW [88] -> SHIFT '(' GOTO 77
	statement = . "{" statementlist "}", FOLLOW [89] -> SHIFT '{' GOTO 78
	expression/L8 = . "&" expression, FOLLOW [88] -> SHIFT '&' GOTO 79
	typedefinition = . "typedef" typename IDENT, FOLLOW [12] -> SHIFT "typedef" GOTO 19
	linkage = . "private", FOLLOW [53] -> SHIFT "private" GOTO 23
	linkage = . "public", FOLLOW [53] -> SHIFT "public" GOTO 24
	statement = . "var" variabledefinition ";", FOLLOW [89] -> SHIFT "var" GOTO 80
	statement = . "return" expression ";", FOLLOW [89] -> SHIFT "return" GOTO 81
	statement = . "if" "(" expression ")" "{" statementlist "}", FOLLOW [89] -> SHIFT "if" GOTO 82
	statement = . "if" "(" expression ")" "{" statementlist "}" "else" "{" statementlist "}", FOLLOW [89] -> SHIFT "if" GOTO 82
	statement = . "while" "(" expression ")" "{" statementlist "}", FOLLOW [89] -> SHIFT "while" GOTO 83
	expression/L8 = . "+" expression, FOLLOW [88] -> SHIFT '+' GOTO 84
	expression/L8 = . "-" expression, FOLLOW [88] -> SHIFT '-' GOTO 85
	expression/L8 = . "~" expression, FOLLOW [88] -> SHIFT '~' GOTO 86
	expression/L8 = . "!" expression, FOLLOW [88] -> SHIFT '!' GOTO 87
	expression/L11 = . "*" expression, FOLLOW [88] -> SHIFT '*' GOTO 88
	statementlist = ., FOLLOW [11] -> REDUCE statementlist #0
	linkage = . (25), FOLLOW [53] -> REDUCE linkage #0 CALL linkage {linkage="internal",attributes="#0 nounwind"}
[242]
	statement = . typedefinition ";", FOLLOW [89] -> GOTO 64
	functiondefinition = . linkage "function" typespec IDENT callablebody, FOLLOW [89] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [89] -> GOTO 14
	statement = . functiondefinition, FOLLOW [89] -> GOTO 65
	statement = "while" "(" expression ")" "{" . statementlist "}", FOLLOW [89] -> GOTO 248
	statementlist = . statement statementlist, FOLLOW [11] -> GOTO 67
	statement = . expression ";", FOLLOW [89] -> GOTO 68
	expression/L2 = . expression "=" expression, FOLLOW [88] -> GOTO 68
	expression/L2 = . expression "+=" expression, FOLLOW [88] -> GOTO 68
	expression/L2 = . expression "-=" expression, FOLLOW [88] -> GOTO 68
	expression/L2 = . expression "*=" expression, FOLLOW [88] -> GOTO 68
	expression/L2 = . expression "/=" expression, FOLLOW [88] -> GOTO 68
	expression/L2 = . expression "%=" expression, FOLLOW [88] -> GOTO 68
	expression/L2 = . expression "&&=" expression, FOLLOW [88] -> GOTO 68
	expression/L2 = . expression "||=" expression, FOLLOW [88] -> GOTO 68
	expression/L2 = . expression "&=" expression, FOLLOW [88] -> GOTO 68
	expression/L2 = . expression "|=" expression, FOLLOW [88] -> GOTO 68
	expression/L2 = . expression "<<=" expression, FOLLOW [88] -> GOTO 68
	expression/L2 = . expression ">>=" expression, FOLLOW [88] -> GOTO 68
	expression/L3 = . expression "||" expression, FOLLOW [88] -> GOTO 68
	expression/L4 = . expression "&&" expression, FOLLOW [88] -> GOTO 68
	expression/L5 = . expression "|" expression, FOLLOW [88] -> GOTO 68
	expression/L6 = . expression "^" expression, FOLLOW [88] -> GOTO 68
	expression/L6 = . expression "&" expression, FOLLOW [88] -> GOTO 68
	expression/L7 = . expression "==" expression, FOLLOW [88] -> GOTO 68
	expression/L7 = . expression "!=" expression, FOLLOW [88] -> GOTO 68
	expression/L7 = . expression "<=" expression, FOLLOW [88] -> GOTO 68
	expression/L7 = . expression "<" expression, FOLLOW [88] -> GOTO 68
	expression/L7 = . expression ">=" expression, FOLLOW [88] -> GOTO 68
	expression/L7 = . expression ">" expression, FOLLOW [88] -> GOTO 68
	expression/L8 = . expression "+" expression, FOLLOW [88] -> GOTO 68
	expression/L8 = . expression "-" expression, FOLLOW [88] -> GOTO 68
	expression/L9 = . expression "*" expression, FOLLOW [88] -> GOTO 68
	expression/L9 = . expression "/" expression, FOLLOW [88] -> GOTO 68
	expression/L9 = . expression "%" expression, FOLLOW [88] -> GOTO 68
	expression/L10 = . expression "<<" expression, FOLLOW [88] -> GOTO 68
	expression/L10 = . expression ">>" expression, FOLLOW [88] -> GOTO 68
	expression/L11 = . expression "." IDENT, FOLLOW [88] -> GOTO 68
	expression/L12 = . expression "(" expressionlist ")", FOLLOW [88] -> GOTO 68
	expression/L12 = . expression "(" ")", FOLLOW [88] -> GOTO 68
	expression/L12 = . expression "[" expressionlist "]", FOLLOW [88] -> GOTO 68
	iexpression = . expression indirection IDENT, FOLLOW [88] -> GOTO 68
	expression/L11 = . iexpression, FOLLOW [88] -> GOTO 69
	expression/L1 = . BOOLEAN, FOLLOW [88] -> SHIFT BOOLEAN GOTO 70
	expression/L1 = . IDENT, FOLLOW [88] -> SHIFT IDENT GOTO 71
	expression/L1 = . DQSTRING, FOLLOW [88] -> SHIFT DQSTRING GOTO 72
	expression/L1 = . SQSTRING, FOLLOW [88] -> SHIFT SQSTRING GOTO 73
	expression/L1 = . CARDINAL, FOLLOW [88] -> SHIFT CARDINAL GOTO 74
	expression/L1 = . INTEGER, FOLLOW [88] -> SHIFT INTEGER GOTO 75
	expression/L1 = . FLOAT, FOLLOW [88] -> SHIFT FLOAT GOTO 76
	expression/L1 = . "(" expression ")", FOLLOW [88] -> SHIFT '(' GOTO 77
	statement = . "{" statementlist "}", FOLLOW [89] -> SHIFT '{' GOTO 78
	expression/L8 = . "&" expression, FOLLOW [88] -> SHIFT '&' GOTO 79
	typedefinition = . "typedef" typename IDENT, FOLLOW [12] -> SHIFT "typedef" GOTO 19
	linkage = . "private", FOLLOW [53] -> SHIFT "private" GOTO 23
	linkage = . "public", FOLLOW [53] -> SHIFT "public" GOTO 24
	statement = . "var" variabledefinition ";", FOLLOW [89] -> SHIFT "var" GOTO 80
	statement = . "return" expression ";", FOLLOW [89] -> SHIFT "return" GOTO 81
	statement = . "if" "(" expression ")" "{" statementlist "}", FOLLOW [89] -> SHIFT "if" GOTO 82
	statement = . "if" "(" expression ")" "{" statementlist "}" "else" "{" statementlist "}", FOLLOW [89] -> SHIFT "if" GOTO 82
	statement = . "while" "(" expression ")" "{" statementlist "}", FOLLOW [89] -> SHIFT "while" GOTO 83
	expression/L8 = . "+" expression, FOLLOW [88] -> SHIFT '+' GOTO 84
	expression/L8 = . "-" expression, FOLLOW [88] -> SHIFT '-' GOTO 85
	expression/L8 = . "~" expression, FOLLOW [88] -> SHIFT '~' GOTO 86
	expression/L8 = . "!" expression, FOLLOW [88] -> SHIFT '!' GOTO 87
	expression/L11 = . "*" expression, FOLLOW [88] -> SHIFT '*' GOTO 88
	statementlist = ., FOLLOW [11] -> REDUCE statementlist #0
	linkage = . (25), FOLLOW [53] -> REDUCE linkage #0 CALL linkage {linkage="internal",attributes="#0 nounwind"}
[243]
	callablebody = "(" parameterlist ")" "{" statementlist . "}", FOLLOW [213] -> SHIFT '}' GOTO 249
[244]
	methoddefinition = "function" typespec IDENT "(" parameterlist . ")" ";", FOLLOW [158] -> SHIFT ')' GOTO 250
[245]
	methoddefinition = "procedure" IDENT "(" parameterlist ")" . ";", FOLLOW [158] -> SHIFT ';' GOTO 251
[246]
	externdefinition = "extern" DQSTRING "function" typespec IDENT "(" externparameterlist ")" ";" . (2), FOLLOW [51] -> REDUCE externdefinition #9 CALL extern_funcdef
[247]
	statement = "if" "(" expression ")" "{" statementlist . "}", FOLLOW [89] -> SHIFT '}' GOTO 252
	statement = "if" "(" expression ")" "{" statementlist . "}" "else" "{" statementlist "}", FOLLOW [89] -> SHIFT '}' GOTO 252
[248]
	statement = "while" "(" expression ")" "{" statementlist . "}", FOLLOW [89] -> SHIFT '}' GOTO 253
[249]
	callablebody = "(" parameterlist ")" "{" statementlist "}" . (scope:29), FOLLOW [213] -> REDUCE callablebody #6 CALL callablebody
[250]
	methoddefinition = "function" typespec IDENT "(" parameterlist ")" . ";", FOLLOW [158] -> SHIFT ';' GOTO 254
[251]
	methoddefinition = "procedure" IDENT "(" parameterlist ")" ";" . (6), FOLLOW [158] -> REDUCE methoddefinition #6 CALL interface_procdef
[252]
	statement = "if" "(" expression ")" "{" statementlist "}" . "else" "{" statementlist "}", FOLLOW [89] -> SHIFT "else" GOTO 255
	statement = "if" "(" expression ")" "{" statementlist "}" . (scope:35), FOLLOW [89] -> REDUCE statement #7 CALL conditional_if
[253]
	statement = "while" "(" expression ")" "{" statementlist "}" . (scope:37), FOLLOW [89] -> REDUCE statement #7 CALL conditional_while
[254]
	methoddefinition = "function" typespec IDENT "(" parameterlist ")" ";" . (5), FOLLOW [158] -> REDUCE methoddefinition #7 CALL interface_funcdef
[255]
	statement = "if" "(" expression ")" "{" statementlist "}" "else" . "{" statementlist "}", FOLLOW [89] -> SHIFT '{' GOTO 256
[256]
	statement = . typedefinition ";", FOLLOW [89] -> GOTO 64
	functiondefinition = . linkage "function" typespec IDENT callablebody, FOLLOW [89] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [89] -> GOTO 14
	statement = . functiondefinition, FOLLOW [89] -> GOTO 65
	statement = "if" "(" expression ")" "{" statementlist "}" "else" "{" . statementlist "}", FOLLOW [89] -> GOTO 257
	statementlist = . statement statementlist, FOLLOW [11] -> GOTO 67
	statement = . expression ";", FOLLOW [89] -> GOTO 68
	expression/L2 = . expression "=" expression, FOLLOW [88] -> GOTO 68
	expression/L2 = . expression "+=" expression, FOLLOW [88] -> GOTO 68
	expression/L2 = . expression "-=" expression, FOLLOW [88] -> GOTO 68
	expression/L2 = . expression "*=" expression, FOLLOW [88] -> GOTO 68
	expression/L2 = . expression "/=" expression, FOLLOW [88] -> GOTO 68
	expression/L2 = . expression "%=" expression, FOLLOW [88] -> GOTO 68
	expression/L2 = . expression "&&=" expression, FOLLOW [88] -> GOTO 68
	expression/L2 = . expression "||=" expression, FOLLOW [88] -> GOTO 68
	expression/L2 = . expression "&=" expression, FOLLOW [88] -> GOTO 68
	expression/L2 = . expression "|=" expression, FOLLOW [88] -> GOTO 68
	expression/L2 = . expression "<<=" expression, FOLLOW [88] -> GOTO 68
	expression/L2 = . expression ">>=" expression, FOLLOW [88] -> GOTO 68
	expression/L3 = . expression "||" expression, FOLLOW [88] -> GOTO 68
	expression/L4 = . expression "&&" expression, FOLLOW [88] -> GOTO 68
	expression/L5 = . expression "|" expression, FOLLOW [88] -> GOTO 68
	expression/L6 = . expression "^" expression, FOLLOW [88] -> GOTO 68
	expression/L6 = . expression "&" expression, FOLLOW [88] -> GOTO 68
	expression/L7 = . expression "==" expression, FOLLOW [88] -> GOTO 68
	expression/L7 = . expression "!=" expression, FOLLOW [88] -> GOTO 68
	expression/L7 = . expression "<=" expression, FOLLOW [88] -> GOTO 68
	expression/L7 = . expression "<" expression, FOLLOW [88] -> GOTO 68
	expression/L7 = . expression ">=" expression, FOLLOW [88] -> GOTO 68
	expression/L7 = . expression ">" expression, FOLLOW [88] -> GOTO 68
	expression/L8 = . expression "+" expression, FOLLOW [88] -> GOTO 68
	expression/L8 = . expression "-" expression, FOLLOW [88] -> GOTO 68
	expression/L9 = . expression "*" expression, FOLLOW [88] -> GOTO 68
	expression/L9 = . expression "/" expression, FOLLOW [88] -> GOTO 68
	expression/L9 = . expression "%" expression, FOLLOW [88] -> GOTO 68
	expression/L10 = . expression "<<" expression, FOLLOW [88] -> GOTO 68
	expression/L10 = . expression ">>" expression, FOLLOW [88] -> GOTO 68
	expression/L11 = . expression "." IDENT, FOLLOW [88] -> GOTO 68
	expression/L12 = . expression "(" expressionlist ")", FOLLOW [88] -> GOTO 68
	expression/L12 = . expression "(" ")", FOLLOW [88] -> GOTO 68
	expression/L12 = . expression "[" expressionlist "]", FOLLOW [88] -> GOTO 68
	iexpression = . expression indirection IDENT, FOLLOW [88] -> GOTO 68
	expression/L11 = . iexpression, FOLLOW [88] -> GOTO 69
	expression/L1 = . BOOLEAN, FOLLOW [88] -> SHIFT BOOLEAN GOTO 70
	expression/L1 = . IDENT, FOLLOW [88] -> SHIFT IDENT GOTO 71
	expression/L1 = . DQSTRING, FOLLOW [88] -> SHIFT DQSTRING GOTO 72
	expression/L1 = . SQSTRING, FOLLOW [88] -> SHIFT SQSTRING GOTO 73
	expression/L1 = . CARDINAL, FOLLOW [88] -> SHIFT CARDINAL GOTO 74
	expression/L1 = . INTEGER, FOLLOW [88] -> SHIFT INTEGER GOTO 75
	expression/L1 = . FLOAT, FOLLOW [88] -> SHIFT FLOAT GOTO 76
	expression/L1 = . "(" expression ")", FOLLOW [88] -> SHIFT '(' GOTO 77
	statement = . "{" statementlist "}", FOLLOW [89] -> SHIFT '{' GOTO 78
	expression/L8 = . "&" expression, FOLLOW [88] -> SHIFT '&' GOTO 79
	typedefinition = . "typedef" typename IDENT, FOLLOW [12] -> SHIFT "typedef" GOTO 19
	linkage = . "private", FOLLOW [53] -> SHIFT "private" GOTO 23
	linkage = . "public", FOLLOW [53] -> SHIFT "public" GOTO 24
	statement = . "var" variabledefinition ";", FOLLOW [89] -> SHIFT "var" GOTO 80
	statement = . "return" expression ";", FOLLOW [89] -> SHIFT "return" GOTO 81
	statement = . "if" "(" expression ")" "{" statementlist "}", FOLLOW [89] -> SHIFT "if" GOTO 82
	statement = . "if" "(" expression ")" "{" statementlist "}" "else" "{" statementlist "}", FOLLOW [89] -> SHIFT "if" GOTO 82
	statement = . "while" "(" expression ")" "{" statementlist "}", FOLLOW [89] -> SHIFT "while" GOTO 83
	expression/L8 = . "+" expression, FOLLOW [88] -> SHIFT '+' GOTO 84
	expression/L8 = . "-" expression, FOLLOW [88] -> SHIFT '-' GOTO 85
	expression/L8 = . "~" expression, FOLLOW [88] -> SHIFT '~' GOTO 86
	expression/L8 = . "!" expression, FOLLOW [88] -> SHIFT '!' GOTO 87
	expression/L11 = . "*" expression, FOLLOW [88] -> SHIFT '*' GOTO 88
	statementlist = ., FOLLOW [11] -> REDUCE statementlist #0
	linkage = . (25), FOLLOW [53] -> REDUCE linkage #0 CALL linkage {linkage="internal",attributes="#0 nounwind"}
[257]
	statement = "if" "(" expression ")" "{" statementlist "}" "else" "{" statementlist . "}", FOLLOW [89] -> SHIFT '}' GOTO 258
[258]
	statement = "if" "(" expression ")" "{" statementlist "}" "else" "{" statementlist "}" . (scope:36), FOLLOW [89] -> REDUCE statement #11 CALL conditional_if_else

-- Function calls:
(1) program
(2) extern_funcdef
(3) extern_procdef
(4) extern_paramdeflist
(5) interface_funcdef
(6) interface_procdef
(7) main_procdef
(8) definition
(9) typespec, ""
(10) typespec, "const "
(11) typespec, "&"
(12) typespec, "const&"
(13) typespec, "^"
(14) typespec, "const^"
(15) typespec, "^&"
(16) typespec, "const^&"
(17) typespec, "^^"
(18) typespec, "const^^"
(19) typespec, "^^&"
(20) typespec, "const^^&"
(21) typedef
(22) structdef
(23) interfacedef
(24) classdef
(25) linkage, {linkage="internal",attributes="#0 nounwind"}
(26) linkage, {linkage="external",attributes="#0 noinline nounwind"}
(27) funcdef
(28) procdef
(29) callablebody
(30) paramdeflist
(31) paramdef
(32) statement
(33) free_expression
(34) return_value
(35) conditional_if
(36) conditional_if_else
(37) conditional_while
(38) vardef
(39) vardef_assign
(40) vardef_array_assign
(41) vardef_array
(42) variable
(43) constant, "constexpr bool"
(44) constant, "constexpr uint"
(45) constant, "constexpr int"
(46) constant, "constexpr float"
(47) string_constant, "constexpr float"
(48) char_constant, "constexpr float"
(49) operator, "="
(50) assign_operator, "+"
(51) assign_operator, "-"
(52) assign_operator, "*"
(53) assign_operator, "/"
(54) assign_operator, "%"
(55) assign_operator, "&&"
(56) assign_operator, "||"
(57) assign_operator, "&"
(58) assign_operator, "|"
(59) assign_operator, "<<"
(60) assign_operator, ">>"
(61) operator, "||"
(62) operator, "&&"
(63) operator, "|"
(64) operator, "^"
(65) operator, "&"
(66) operator, "=="
(67) operator, "!="
(68) operator, "<="
(69) operator, "<"
(70) operator, ">="
(71) operator, ">"
(72) operator, "+"
(73) operator, "-"
(74) operator, "~"
(75) operator, "!"
(76) operator, "*"
(77) operator, "/"
(78) operator, "%"
(79) operator, "<<"
(80) operator, ">>"
(81) member
(82) operator, "->"
(83) operator, "()"
(84) operator, "[]"
(85) rep_operator, "->"
(86) count

-- Action table:
[1]
	$ => Reduce #0 externlist
	IDENT => Reduce #0 externlist
	"extern" => Shift goto 4
	"function" => Reduce #0 externlist
	"procedure" => Reduce #0 externlist
	"main" => Reduce #0 externlist
	"const" => Reduce #0 externlist
	"typedef" => Reduce #0 externlist
	"struct" => Reduce #0 externlist
	"interface" => Reduce #0 externlist
	"class" => Reduce #0 externlist
	"private" => Reduce #0 externlist
	"public" => Reduce #0 externlist
[2]
	$ => Reduce #0 definitionlist
	IDENT => Shift goto 17
	"function" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	"procedure" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	"main" => Reduce #0 definitionlist
	"const" => Shift goto 18
	"typedef" => Shift goto 19
	"struct" => Shift goto 20
	"interface" => Shift goto 21
	"class" => Shift goto 22
	"private" => Shift goto 23
	"public" => Shift goto 24
[3]
	$ => Reduce #0 externlist
	IDENT => Reduce #0 externlist
	"extern" => Shift goto 4
	"function" => Reduce #0 externlist
	"procedure" => Reduce #0 externlist
	"main" => Reduce #0 externlist
	"const" => Reduce #0 externlist
	"typedef" => Reduce #0 externlist
	"struct" => Reduce #0 externlist
	"interface" => Reduce #0 externlist
	"class" => Reduce #0 externlist
	"private" => Reduce #0 externlist
	"public" => Reduce #0 externlist
[4]
	DQSTRING => Shift goto 26
[5]
	$ => Reduce #0 mainproc
	"main" => Shift goto 28
[6]
	$ => Reduce #1 definition
	IDENT => Reduce #1 definition
	"function" => Reduce #1 definition
	"procedure" => Reduce #1 definition
	"main" => Reduce #1 definition
	'}' => Reduce #1 definition
	"const" => Reduce #1 definition
	"typedef" => Reduce #1 definition
	"struct" => Reduce #1 definition
	"interface" => Reduce #1 definition
	"class" => Reduce #1 definition
	"private" => Reduce #1 definition
	"public" => Reduce #1 definition
[7]
	$ => Reduce #0 definitionlist
	IDENT => Shift goto 17
	"function" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	"procedure" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	"main" => Reduce #0 definitionlist
	'}' => Reduce #0 definitionlist
	"const" => Shift goto 18
	"typedef" => Shift goto 19
	"struct" => Shift goto 20
	"interface" => Shift goto 21
	"class" => Shift goto 22
	"private" => Shift goto 23
	"public" => Shift goto 24
[8]
	IDENT => Reduce #1 typespec call typespec ""
	')' => Reduce #1 typespec call typespec ""
	',' => Reduce #1 typespec call typespec ""
	'&' => Shift goto 30
	'^' => Shift goto 31
[9]
	IDENT => Shift goto 32
[10]
	';' => Shift goto 33
[11]
	';' => Shift goto 34
[12]
	';' => Shift goto 35
[13]
	';' => Shift goto 36
[14]
	"function" => Shift goto 37
	"procedure" => Shift goto 38
[15]
	$ => Reduce #1 definition call definition
	IDENT => Reduce #1 definition call definition
	"function" => Reduce #1 definition call definition
	"procedure" => Reduce #1 definition call definition
	"main" => Reduce #1 definition call definition
	'}' => Reduce #1 definition call definition
	"const" => Reduce #1 definition call definition
	"typedef" => Reduce #1 definition call definition
	"struct" => Reduce #1 definition call definition
	"interface" => Reduce #1 definition call definition
	"class" => Reduce #1 definition call definition
	"private" => Reduce #1 definition call definition
	"public" => Reduce #1 definition call definition
[16]
	';' => Shift goto 39
[17]
	IDENT => Reduce #1 typename
	')' => Reduce #1 typename
	',' => Reduce #1 typename
	"::" => Shift goto 40
	'&' => Reduce #1 typename
	'^' => Reduce #1 typename
[18]
	IDENT => Shift goto 17
[19]
	IDENT => Shift goto 17
[20]
	IDENT => Shift goto 43
[21]
	IDENT => Shift goto 44
[22]
	IDENT => Shift goto 45
[23]
	"function" => Reduce #1 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	"procedure" => Reduce #1 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
[24]
	"function" => Reduce #1 linkage call linkage {linkage="external",attributes="#0 noinline nounwind"}
	"procedure" => Reduce #1 linkage call linkage {linkage="external",attributes="#0 noinline nounwind"}
[25]
	$ => Reduce #2 externlist
	IDENT => Reduce #2 externlist
	"function" => Reduce #2 externlist
	"procedure" => Reduce #2 externlist
	"main" => Reduce #2 externlist
	"const" => Reduce #2 externlist
	"typedef" => Reduce #2 externlist
	"struct" => Reduce #2 externlist
	"interface" => Reduce #2 externlist
	"class" => Reduce #2 externlist
	"private" => Reduce #2 externlist
	"public" => Reduce #2 externlist
[26]
	"function" => Shift goto 46
	"procedure" => Shift goto 47
[27]
	$ => Accept
[28]
	'{' => Shift goto 48
[29]
	$ => Reduce #2 definitionlist
	"main" => Reduce #2 definitionlist
	'}' => Reduce #2 definitionlist
[30]
	IDENT => Reduce #2 typespec call typespec "&"
	')' => Reduce #2 typespec call typespec "&"
	',' => Reduce #2 typespec call typespec "&"
[31]
	IDENT => Reduce #2 typespec call typespec "^"
	')' => Reduce #2 typespec call typespec "^"
	',' => Reduce #2 typespec call typespec "^"
	'&' => Shift goto 49
	'^' => Shift goto 50
[32]
	';' => Reduce #2 variabledefinition call vardef
	'=' => Shift goto 51
	'[' => Shift goto 52
[33]
	$ => Reduce #2 datadefinition call definition
	IDENT => Reduce #2 datadefinition call definition
	"function" => Reduce #2 datadefinition call definition
	"procedure" => Reduce #2 datadefinition call definition
	"main" => Reduce #2 datadefinition call definition
	'}' => Reduce #2 datadefinition call definition
	"const" => Reduce #2 datadefinition call definition
	"typedef" => Reduce #2 datadefinition call definition
	"struct" => Reduce #2 datadefinition call definition
	"interface" => Reduce #2 datadefinition call definition
	"class" => Reduce #2 datadefinition call definition
	"private" => Reduce #2 datadefinition call definition
	"public" => Reduce #2 datadefinition call definition
[34]
	$ => Reduce #2 datadefinition call definition
	IDENT => Reduce #2 datadefinition call definition
	"function" => Reduce #2 datadefinition call definition
	"procedure" => Reduce #2 datadefinition call definition
	"main" => Reduce #2 datadefinition call definition
	'}' => Reduce #2 datadefinition call definition
	"const" => Reduce #2 datadefinition call definition
	"typedef" => Reduce #2 datadefinition call definition
	"struct" => Reduce #2 datadefinition call definition
	"interface" => Reduce #2 datadefinition call definition
	"class" => Reduce #2 datadefinition call definition
	"private" => Reduce #2 datadefinition call definition
	"public" => Reduce #2 datadefinition call definition
[35]
	$ => Reduce #2 definition call definition
	IDENT => Reduce #2 definition call definition
	"function" => Reduce #2 definition call definition
	"procedure" => Reduce #2 definition call definition
	"main" => Reduce #2 definition call definition
	'}' => Reduce #2 definition call definition
	"const" => Reduce #2 definition call definition
	"typedef" => Reduce #2 definition call definition
	"struct" => Reduce #2 definition call definition
	"interface" => Reduce #2 definition call definition
	"class" => Reduce #2 definition call definition
	"private" => Reduce #2 definition call definition
	"public" => Reduce #2 definition call definition
[36]
	$ => Reduce #2 definition call definition
	IDENT => Reduce #2 definition call definition
	"function" => Reduce #2 definition call definition
	"procedure" => Reduce #2 definition call definition
	"main" => Reduce #2 definition call definition
	'}' => Reduce #2 definition call definition
	"const" => Reduce #2 definition call definition
	"typedef" => Reduce #2 definition call definition
	"struct" => Reduce #2 definition call definition
	"interface" => Reduce #2 definition call definition
	"class" => Reduce #2 definition call definition
	"private" => Reduce #2 definition call definition
	"public" => Reduce #2 definition call definition
[37]
	IDENT => Shift goto 17
	"const" => Shift goto 18
[38]
	IDENT => Shift goto 54
[39]
	$ => Reduce #2 datadefinition call definition
	IDENT => Reduce #2 datadefinition call definition
	"function" => Reduce #2 datadefinition call definition
	"procedure" => Reduce #2 datadefinition call definition
	"main" => Reduce #2 datadefinition call definition
	'}' => Reduce #2 datadefinition call definition
	"const" => Reduce #2 datadefinition call definition
	"typedef" => Reduce #2 datadefinition call definition
	"struct" => Reduce #2 datadefinition call definition
	"interface" => Reduce #2 datadefinition call definition
	"class" => Reduce #2 datadefinition call definition
	"private" => Reduce #2 datadefinition call definition
	"public" => Reduce #2 datadefinition call definition
[40]
	IDENT => Shift goto 17
[41]
	IDENT => Reduce #2 typespec call typespec "const "
	')' => Reduce #2 typespec call typespec "const "
	',' => Reduce #2 typespec call typespec "const "
	'&' => Shift goto 56
	'^' => Shift goto 57
[42]
	IDENT => Shift goto 58
[43]
	'{' => Shift goto 59
[44]
	'{' => Shift goto 60
[45]
	'{' => Shift goto 61
[46]
	IDENT => Shift goto 17
	"const" => Shift goto 18
[47]
	IDENT => Shift goto 63
[48]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	"function" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	'(' => Shift goto 77
	"procedure" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	'{' => Shift goto 78
	'}' => Reduce #0 statementlist
	'&' => Shift goto 79
	"typedef" => Shift goto 19
	"private" => Shift goto 23
	"public" => Shift goto 24
	"var" => Shift goto 80
	"return" => Shift goto 81
	"if" => Shift goto 82
	"while" => Shift goto 83
	'+' => Shift goto 84
	'-' => Shift goto 85
	'~' => Shift goto 86
	'!' => Shift goto 87
	'*' => Shift goto 88
[49]
	IDENT => Reduce #3 typespec call typespec "^&"
	')' => Reduce #3 typespec call typespec "^&"
	',' => Reduce #3 typespec call typespec "^&"
[50]
	IDENT => Reduce #3 typespec call typespec "^^"
	')' => Reduce #3 typespec call typespec "^^"
	',' => Reduce #3 typespec call typespec "^^"
	'&' => Shift goto 89
[51]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 79
	'+' => Shift goto 84
	'-' => Shift goto 85
	'~' => Shift goto 86
	'!' => Shift goto 87
	'*' => Shift goto 88
[52]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 79
	'+' => Shift goto 84
	'-' => Shift goto 85
	'~' => Shift goto 86
	'!' => Shift goto 87
	'*' => Shift goto 88
[53]
	IDENT => Shift goto 92
[54]
	'(' => Shift goto 94
[55]
	IDENT => Reduce #3 typename
	')' => Reduce #3 typename
	',' => Reduce #3 typename
	'&' => Reduce #3 typename
	'^' => Reduce #3 typename
[56]
	IDENT => Reduce #3 typespec call typespec "const&"
	')' => Reduce #3 typespec call typespec "const&"
	',' => Reduce #3 typespec call typespec "const&"
[57]
	IDENT => Reduce #3 typespec call typespec "const^"
	')' => Reduce #3 typespec call typespec "const^"
	',' => Reduce #3 typespec call typespec "const^"
	'&' => Shift goto 95
	'^' => Shift goto 96
[58]
	';' => Reduce #3 typedefinition call typedef
[59]
	IDENT => Shift goto 17
	'}' => Reduce #0 datadefinitionlist
	"const" => Shift goto 18
	"typedef" => Shift goto 19
	"struct" => Shift goto 20
[60]
	"function" => Shift goto 101
	"procedure" => Shift goto 102
	'}' => Reduce #0 methoddefinitionlist
[61]
	IDENT => Shift goto 17
	"function" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	"procedure" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	'}' => Reduce #0 definitionlist
	"const" => Shift goto 18
	"typedef" => Shift goto 19
	"struct" => Shift goto 20
	"interface" => Shift goto 21
	"class" => Shift goto 22
	"private" => Shift goto 23
	"public" => Shift goto 24
[62]
	IDENT => Shift goto 104
[63]
	'(' => Shift goto 105
[64]
	';' => Shift goto 106
[65]
	$ => Reduce #1 statement call definition
	BOOLEAN => Reduce #1 statement call definition
	IDENT => Reduce #1 statement call definition
	DQSTRING => Reduce #1 statement call definition
	SQSTRING => Reduce #1 statement call definition
	CARDINAL => Reduce #1 statement call definition
	INTEGER => Reduce #1 statement call definition
	FLOAT => Reduce #1 statement call definition
	"function" => Reduce #1 statement call definition
	'(' => Reduce #1 statement call definition
	"procedure" => Reduce #1 statement call definition
	'{' => Reduce #1 statement call definition
	'}' => Reduce #1 statement call definition
	'&' => Reduce #1 statement call definition
	"typedef" => Reduce #1 statement call definition
	"private" => Reduce #1 statement call definition
	"public" => Reduce #1 statement call definition
	"var" => Reduce #1 statement call definition
	"return" => Reduce #1 statement call definition
	"if" => Reduce #1 statement call definition
	"while" => Reduce #1 statement call definition
	'+' => Reduce #1 statement call definition
	'-' => Reduce #1 statement call definition
	'~' => Reduce #1 statement call definition
	'!' => Reduce #1 statement call definition
	'*' => Reduce #1 statement call definition
[66]
	'}' => Shift goto 107
[67]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	"function" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	'(' => Shift goto 77
	"procedure" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	'{' => Shift goto 78
	'}' => Reduce #0 statementlist
	'&' => Shift goto 79
	"typedef" => Shift goto 19
	"private" => Shift goto 23
	"public" => Shift goto 24
	"var" => Shift goto 80
	"return" => Shift goto 81
	"if" => Shift goto 82
	"while" => Shift goto 83
	'+' => Shift goto 84
	'-' => Shift goto 85
	'~' => Shift goto 86
	'!' => Shift goto 87
	'*' => Shift goto 88
[68]
	'(' => Shift goto 110
	';' => Shift goto 111
	'&' => Shift goto 112
	'^' => Shift goto 113
	'=' => Shift goto 114
	'[' => Shift goto 115
	"+=" => Shift goto 116
	"-=" => Shift goto 117
	"*=" => Shift goto 118
	"/=" => Shift goto 119
	"%=" => Shift goto 120
	"&&=" => Shift goto 121
	"||=" => Shift goto 122
	"&=" => Shift goto 123
	"|=" => Shift goto 124
	"<<=" => Shift goto 125
	">>=" => Shift goto 126
	"||" => Shift goto 127
	"&&" => Shift goto 128
	'|' => Shift goto 129
	"==" => Shift goto 130
	"!=" => Shift goto 131
	"<=" => Shift goto 132
	'<' => Shift goto 133
	">=" => Shift goto 134
	'>' => Shift goto 135
	'+' => Shift goto 136
	'-' => Shift goto 137
	'*' => Shift goto 138
	'/' => Shift goto 139
	'%' => Shift goto 140
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'.' => Shift goto 143
	"->" => Shift goto 144
[69]
	'(' => Reduce #1 expression
	')' => Reduce #1 expression
	';' => Reduce #1 expression
	',' => Reduce #1 expression
	'&' => Reduce #1 expression
	'^' => Reduce #1 expression
	'=' => Reduce #1 expression
	'[' => Reduce #1 expression
	']' => Reduce #1 expression
	"+=" => Reduce #1 expression
	"-=" => Reduce #1 expression
	"*=" => Reduce #1 expression
	"/=" => Reduce #1 expression
	"%=" => Reduce #1 expression
	"&&=" => Reduce #1 expression
	"||=" => Reduce #1 expression
	"&=" => Reduce #1 expression
	"|=" => Reduce #1 expression
	"<<=" => Reduce #1 expression
	">>=" => Reduce #1 expression
	"||" => Reduce #1 expression
	"&&" => Reduce #1 expression
	'|' => Reduce #1 expression
	"==" => Reduce #1 expression
	"!=" => Reduce #1 expression
	"<=" => Reduce #1 expression
	'<' => Reduce #1 expression
	">=" => Reduce #1 expression
	'>' => Reduce #1 expression
	'+' => Reduce #1 expression
	'-' => Reduce #1 expression
	'*' => Reduce #1 expression
	'/' => Reduce #1 expression
	'%' => Reduce #1 expression
	"<<" => Reduce #1 expression
	">>" => Reduce #1 expression
	'.' => Reduce #1 expression
	"->" => Reduce #1 expression
[70]
	'(' => Reduce #1 expression call constant "constexpr bool"
	')' => Reduce #1 expression call constant "constexpr bool"
	';' => Reduce #1 expression call constant "constexpr bool"
	',' => Reduce #1 expression call constant "constexpr bool"
	'&' => Reduce #1 expression call constant "constexpr bool"
	'^' => Reduce #1 expression call constant "constexpr bool"
	'=' => Reduce #1 expression call constant "constexpr bool"
	'[' => Reduce #1 expression call constant "constexpr bool"
	']' => Reduce #1 expression call constant "constexpr bool"
	"+=" => Reduce #1 expression call constant "constexpr bool"
	"-=" => Reduce #1 expression call constant "constexpr bool"
	"*=" => Reduce #1 expression call constant "constexpr bool"
	"/=" => Reduce #1 expression call constant "constexpr bool"
	"%=" => Reduce #1 expression call constant "constexpr bool"
	"&&=" => Reduce #1 expression call constant "constexpr bool"
	"||=" => Reduce #1 expression call constant "constexpr bool"
	"&=" => Reduce #1 expression call constant "constexpr bool"
	"|=" => Reduce #1 expression call constant "constexpr bool"
	"<<=" => Reduce #1 expression call constant "constexpr bool"
	">>=" => Reduce #1 expression call constant "constexpr bool"
	"||" => Reduce #1 expression call constant "constexpr bool"
	"&&" => Reduce #1 expression call constant "constexpr bool"
	'|' => Reduce #1 expression call constant "constexpr bool"
	"==" => Reduce #1 expression call constant "constexpr bool"
	"!=" => Reduce #1 expression call constant "constexpr bool"
	"<=" => Reduce #1 expression call constant "constexpr bool"
	'<' => Reduce #1 expression call constant "constexpr bool"
	">=" => Reduce #1 expression call constant "constexpr bool"
	'>' => Reduce #1 expression call constant "constexpr bool"
	'+' => Reduce #1 expression call constant "constexpr bool"
	'-' => Reduce #1 expression call constant "constexpr bool"
	'*' => Reduce #1 expression call constant "constexpr bool"
	'/' => Reduce #1 expression call constant "constexpr bool"
	'%' => Reduce #1 expression call constant "constexpr bool"
	"<<" => Reduce #1 expression call constant "constexpr bool"
	">>" => Reduce #1 expression call constant "constexpr bool"
	'.' => Reduce #1 expression call constant "constexpr bool"
	"->" => Reduce #1 expression call constant "constexpr bool"
[71]
	'(' => Reduce #1 expression call variable
	')' => Reduce #1 expression call variable
	';' => Reduce #1 expression call variable
	',' => Reduce #1 expression call variable
	'&' => Reduce #1 expression call variable
	'^' => Reduce #1 expression call variable
	'=' => Reduce #1 expression call variable
	'[' => Reduce #1 expression call variable
	']' => Reduce #1 expression call variable
	"+=" => Reduce #1 expression call variable
	"-=" => Reduce #1 expression call variable
	"*=" => Reduce #1 expression call variable
	"/=" => Reduce #1 expression call variable
	"%=" => Reduce #1 expression call variable
	"&&=" => Reduce #1 expression call variable
	"||=" => Reduce #1 expression call variable
	"&=" => Reduce #1 expression call variable
	"|=" => Reduce #1 expression call variable
	"<<=" => Reduce #1 expression call variable
	">>=" => Reduce #1 expression call variable
	"||" => Reduce #1 expression call variable
	"&&" => Reduce #1 expression call variable
	'|' => Reduce #1 expression call variable
	"==" => Reduce #1 expression call variable
	"!=" => Reduce #1 expression call variable
	"<=" => Reduce #1 expression call variable
	'<' => Reduce #1 expression call variable
	">=" => Reduce #1 expression call variable
	'>' => Reduce #1 expression call variable
	'+' => Reduce #1 expression call variable
	'-' => Reduce #1 expression call variable
	'*' => Reduce #1 expression call variable
	'/' => Reduce #1 expression call variable
	'%' => Reduce #1 expression call variable
	"<<" => Reduce #1 expression call variable
	">>" => Reduce #1 expression call variable
	'.' => Reduce #1 expression call variable
	"->" => Reduce #1 expression call variable
[72]
	'(' => Reduce #1 expression call string_constant "constexpr float"
	')' => Reduce #1 expression call string_constant "constexpr float"
	';' => Reduce #1 expression call string_constant "constexpr float"
	',' => Reduce #1 expression call string_constant "constexpr float"
	'&' => Reduce #1 expression call string_constant "constexpr float"
	'^' => Reduce #1 expression call string_constant "constexpr float"
	'=' => Reduce #1 expression call string_constant "constexpr float"
	'[' => Reduce #1 expression call string_constant "constexpr float"
	']' => Reduce #1 expression call string_constant "constexpr float"
	"+=" => Reduce #1 expression call string_constant "constexpr float"
	"-=" => Reduce #1 expression call string_constant "constexpr float"
	"*=" => Reduce #1 expression call string_constant "constexpr float"
	"/=" => Reduce #1 expression call string_constant "constexpr float"
	"%=" => Reduce #1 expression call string_constant "constexpr float"
	"&&=" => Reduce #1 expression call string_constant "constexpr float"
	"||=" => Reduce #1 expression call string_constant "constexpr float"
	"&=" => Reduce #1 expression call string_constant "constexpr float"
	"|=" => Reduce #1 expression call string_constant "constexpr float"
	"<<=" => Reduce #1 expression call string_constant "constexpr float"
	">>=" => Reduce #1 expression call string_constant "constexpr float"
	"||" => Reduce #1 expression call string_constant "constexpr float"
	"&&" => Reduce #1 expression call string_constant "constexpr float"
	'|' => Reduce #1 expression call string_constant "constexpr float"
	"==" => Reduce #1 expression call string_constant "constexpr float"
	"!=" => Reduce #1 expression call string_constant "constexpr float"
	"<=" => Reduce #1 expression call string_constant "constexpr float"
	'<' => Reduce #1 expression call string_constant "constexpr float"
	">=" => Reduce #1 expression call string_constant "constexpr float"
	'>' => Reduce #1 expression call string_constant "constexpr float"
	'+' => Reduce #1 expression call string_constant "constexpr float"
	'-' => Reduce #1 expression call string_constant "constexpr float"
	'*' => Reduce #1 expression call string_constant "constexpr float"
	'/' => Reduce #1 expression call string_constant "constexpr float"
	'%' => Reduce #1 expression call string_constant "constexpr float"
	"<<" => Reduce #1 expression call string_constant "constexpr float"
	">>" => Reduce #1 expression call string_constant "constexpr float"
	'.' => Reduce #1 expression call string_constant "constexpr float"
	"->" => Reduce #1 expression call string_constant "constexpr float"
[73]
	'(' => Reduce #1 expression call char_constant "constexpr float"
	')' => Reduce #1 expression call char_constant "constexpr float"
	';' => Reduce #1 expression call char_constant "constexpr float"
	',' => Reduce #1 expression call char_constant "constexpr float"
	'&' => Reduce #1 expression call char_constant "constexpr float"
	'^' => Reduce #1 expression call char_constant "constexpr float"
	'=' => Reduce #1 expression call char_constant "constexpr float"
	'[' => Reduce #1 expression call char_constant "constexpr float"
	']' => Reduce #1 expression call char_constant "constexpr float"
	"+=" => Reduce #1 expression call char_constant "constexpr float"
	"-=" => Reduce #1 expression call char_constant "constexpr float"
	"*=" => Reduce #1 expression call char_constant "constexpr float"
	"/=" => Reduce #1 expression call char_constant "constexpr float"
	"%=" => Reduce #1 expression call char_constant "constexpr float"
	"&&=" => Reduce #1 expression call char_constant "constexpr float"
	"||=" => Reduce #1 expression call char_constant "constexpr float"
	"&=" => Reduce #1 expression call char_constant "constexpr float"
	"|=" => Reduce #1 expression call char_constant "constexpr float"
	"<<=" => Reduce #1 expression call char_constant "constexpr float"
	">>=" => Reduce #1 expression call char_constant "constexpr float"
	"||" => Reduce #1 expression call char_constant "constexpr float"
	"&&" => Reduce #1 expression call char_constant "constexpr float"
	'|' => Reduce #1 expression call char_constant "constexpr float"
	"==" => Reduce #1 expression call char_constant "constexpr float"
	"!=" => Reduce #1 expression call char_constant "constexpr float"
	"<=" => Reduce #1 expression call char_constant "constexpr float"
	'<' => Reduce #1 expression call char_constant "constexpr float"
	">=" => Reduce #1 expression call char_constant "constexpr float"
	'>' => Reduce #1 expression call char_constant "constexpr float"
	'+' => Reduce #1 expression call char_constant "constexpr float"
	'-' => Reduce #1 expression call char_constant "constexpr float"
	'*' => Reduce #1 expression call char_constant "constexpr float"
	'/' => Reduce #1 expression call char_constant "constexpr float"
	'%' => Reduce #1 expression call char_constant "constexpr float"
	"<<" => Reduce #1 expression call char_constant "constexpr float"
	">>" => Reduce #1 expression call char_constant "constexpr float"
	'.' => Reduce #1 expression call char_constant "constexpr float"
	"->" => Reduce #1 expression call char_constant "constexpr float"
[74]
	'(' => Reduce #1 expression call constant "constexpr uint"
	')' => Reduce #1 expression call constant "constexpr uint"
	';' => Reduce #1 expression call constant "constexpr uint"
	',' => Reduce #1 expression call constant "constexpr uint"
	'&' => Reduce #1 expression call constant "constexpr uint"
	'^' => Reduce #1 expression call constant "constexpr uint"
	'=' => Reduce #1 expression call constant "constexpr uint"
	'[' => Reduce #1 expression call constant "constexpr uint"
	']' => Reduce #1 expression call constant "constexpr uint"
	"+=" => Reduce #1 expression call constant "constexpr uint"
	"-=" => Reduce #1 expression call constant "constexpr uint"
	"*=" => Reduce #1 expression call constant "constexpr uint"
	"/=" => Reduce #1 expression call constant "constexpr uint"
	"%=" => Reduce #1 expression call constant "constexpr uint"
	"&&=" => Reduce #1 expression call constant "constexpr uint"
	"||=" => Reduce #1 expression call constant "constexpr uint"
	"&=" => Reduce #1 expression call constant "constexpr uint"
	"|=" => Reduce #1 expression call constant "constexpr uint"
	"<<=" => Reduce #1 expression call constant "constexpr uint"
	">>=" => Reduce #1 expression call constant "constexpr uint"
	"||" => Reduce #1 expression call constant "constexpr uint"
	"&&" => Reduce #1 expression call constant "constexpr uint"
	'|' => Reduce #1 expression call constant "constexpr uint"
	"==" => Reduce #1 expression call constant "constexpr uint"
	"!=" => Reduce #1 expression call constant "constexpr uint"
	"<=" => Reduce #1 expression call constant "constexpr uint"
	'<' => Reduce #1 expression call constant "constexpr uint"
	">=" => Reduce #1 expression call constant "constexpr uint"
	'>' => Reduce #1 expression call constant "constexpr uint"
	'+' => Reduce #1 expression call constant "constexpr uint"
	'-' => Reduce #1 expression call constant "constexpr uint"
	'*' => Reduce #1 expression call constant "constexpr uint"
	'/' => Reduce #1 expression call constant "constexpr uint"
	'%' => Reduce #1 expression call constant "constexpr uint"
	"<<" => Reduce #1 expression call constant "constexpr uint"
	">>" => Reduce #1 expression call constant "constexpr uint"
	'.' => Reduce #1 expression call constant "constexpr uint"
	"->" => Reduce #1 expression call constant "constexpr uint"
[75]
	'(' => Reduce #1 expression call constant "constexpr int"
	')' => Reduce #1 expression call constant "constexpr int"
	';' => Reduce #1 expression call constant "constexpr int"
	',' => Reduce #1 expression call constant "constexpr int"
	'&' => Reduce #1 expression call constant "constexpr int"
	'^' => Reduce #1 expression call constant "constexpr int"
	'=' => Reduce #1 expression call constant "constexpr int"
	'[' => Reduce #1 expression call constant "constexpr int"
	']' => Reduce #1 expression call constant "constexpr int"
	"+=" => Reduce #1 expression call constant "constexpr int"
	"-=" => Reduce #1 expression call constant "constexpr int"
	"*=" => Reduce #1 expression call constant "constexpr int"
	"/=" => Reduce #1 expression call constant "constexpr int"
	"%=" => Reduce #1 expression call constant "constexpr int"
	"&&=" => Reduce #1 expression call constant "constexpr int"
	"||=" => Reduce #1 expression call constant "constexpr int"
	"&=" => Reduce #1 expression call constant "constexpr int"
	"|=" => Reduce #1 expression call constant "constexpr int"
	"<<=" => Reduce #1 expression call constant "constexpr int"
	">>=" => Reduce #1 expression call constant "constexpr int"
	"||" => Reduce #1 expression call constant "constexpr int"
	"&&" => Reduce #1 expression call constant "constexpr int"
	'|' => Reduce #1 expression call constant "constexpr int"
	"==" => Reduce #1 expression call constant "constexpr int"
	"!=" => Reduce #1 expression call constant "constexpr int"
	"<=" => Reduce #1 expression call constant "constexpr int"
	'<' => Reduce #1 expression call constant "constexpr int"
	">=" => Reduce #1 expression call constant "constexpr int"
	'>' => Reduce #1 expression call constant "constexpr int"
	'+' => Reduce #1 expression call constant "constexpr int"
	'-' => Reduce #1 expression call constant "constexpr int"
	'*' => Reduce #1 expression call constant "constexpr int"
	'/' => Reduce #1 expression call constant "constexpr int"
	'%' => Reduce #1 expression call constant "constexpr int"
	"<<" => Reduce #1 expression call constant "constexpr int"
	">>" => Reduce #1 expression call constant "constexpr int"
	'.' => Reduce #1 expression call constant "constexpr int"
	"->" => Reduce #1 expression call constant "constexpr int"
[76]
	'(' => Reduce #1 expression call constant "constexpr float"
	')' => Reduce #1 expression call constant "constexpr float"
	';' => Reduce #1 expression call constant "constexpr float"
	',' => Reduce #1 expression call constant "constexpr float"
	'&' => Reduce #1 expression call constant "constexpr float"
	'^' => Reduce #1 expression call constant "constexpr float"
	'=' => Reduce #1 expression call constant "constexpr float"
	'[' => Reduce #1 expression call constant "constexpr float"
	']' => Reduce #1 expression call constant "constexpr float"
	"+=" => Reduce #1 expression call constant "constexpr float"
	"-=" => Reduce #1 expression call constant "constexpr float"
	"*=" => Reduce #1 expression call constant "constexpr float"
	"/=" => Reduce #1 expression call constant "constexpr float"
	"%=" => Reduce #1 expression call constant "constexpr float"
	"&&=" => Reduce #1 expression call constant "constexpr float"
	"||=" => Reduce #1 expression call constant "constexpr float"
	"&=" => Reduce #1 expression call constant "constexpr float"
	"|=" => Reduce #1 expression call constant "constexpr float"
	"<<=" => Reduce #1 expression call constant "constexpr float"
	">>=" => Reduce #1 expression call constant "constexpr float"
	"||" => Reduce #1 expression call constant "constexpr float"
	"&&" => Reduce #1 expression call constant "constexpr float"
	'|' => Reduce #1 expression call constant "constexpr float"
	"==" => Reduce #1 expression call constant "constexpr float"
	"!=" => Reduce #1 expression call constant "constexpr float"
	"<=" => Reduce #1 expression call constant "constexpr float"
	'<' => Reduce #1 expression call constant "constexpr float"
	">=" => Reduce #1 expression call constant "constexpr float"
	'>' => Reduce #1 expression call constant "constexpr float"
	'+' => Reduce #1 expression call constant "constexpr float"
	'-' => Reduce #1 expression call constant "constexpr float"
	'*' => Reduce #1 expression call constant "constexpr float"
	'/' => Reduce #1 expression call constant "constexpr float"
	'%' => Reduce #1 expression call constant "constexpr float"
	"<<" => Reduce #1 expression call constant "constexpr float"
	">>" => Reduce #1 expression call constant "constexpr float"
	'.' => Reduce #1 expression call constant "constexpr float"
	"->" => Reduce #1 expression call constant "constexpr float"
[77]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 79
	'+' => Shift goto 84
	'-' => Shift goto 85
	'~' => Shift goto 86
	'!' => Shift goto 87
	'*' => Shift goto 88
[78]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	"function" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	'(' => Shift goto 77
	"procedure" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	'{' => Shift goto 78
	'}' => Reduce #0 statementlist
	'&' => Shift goto 79
	"typedef" => Shift goto 19
	"private" => Shift goto 23
	"public" => Shift goto 24
	"var" => Shift goto 80
	"return" => Shift goto 81
	"if" => Shift goto 82
	"while" => Shift goto 83
	'+' => Shift goto 84
	'-' => Shift goto 85
	'~' => Shift goto 86
	'!' => Shift goto 87
	'*' => Shift goto 88
[79]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 79
	'+' => Shift goto 84
	'-' => Shift goto 85
	'~' => Shift goto 86
	'!' => Shift goto 87
	'*' => Shift goto 88
[80]
	IDENT => Shift goto 17
	"const" => Shift goto 18
[81]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 79
	'+' => Shift goto 84
	'-' => Shift goto 85
	'~' => Shift goto 86
	'!' => Shift goto 87
	'*' => Shift goto 88
[82]
	'(' => Shift goto 150
[83]
	'(' => Shift goto 151
[84]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 79
	'+' => Shift goto 84
	'-' => Shift goto 85
	'~' => Shift goto 86
	'!' => Shift goto 87
	'*' => Shift goto 88
[85]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 79
	'+' => Shift goto 84
	'-' => Shift goto 85
	'~' => Shift goto 86
	'!' => Shift goto 87
	'*' => Shift goto 88
[86]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 79
	'+' => Shift goto 84
	'-' => Shift goto 85
	'~' => Shift goto 86
	'!' => Shift goto 87
	'*' => Shift goto 88
[87]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 79
	'+' => Shift goto 84
	'-' => Shift goto 85
	'~' => Shift goto 86
	'!' => Shift goto 87
	'*' => Shift goto 88
[88]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 79
	'+' => Shift goto 84
	'-' => Shift goto 85
	'~' => Shift goto 86
	'!' => Shift goto 87
	'*' => Shift goto 88
[89]
	IDENT => Reduce #4 typespec call typespec "^^&"
	')' => Reduce #4 typespec call typespec "^^&"
	',' => Reduce #4 typespec call typespec "^^&"
[90]
	'(' => Shift goto 110
	';' => Reduce #4 variabledefinition call vardef_assign
	'&' => Shift goto 112
	'^' => Shift goto 113
	'=' => Shift goto 114
	'[' => Shift goto 115
	"+=" => Shift goto 116
	"-=" => Shift goto 117
	"*=" => Shift goto 118
	"/=" => Shift goto 119
	"%=" => Shift goto 120
	"&&=" => Shift goto 121
	"||=" => Shift goto 122
	"&=" => Shift goto 123
	"|=" => Shift goto 124
	"<<=" => Shift goto 125
	">>=" => Shift goto 126
	"||" => Shift goto 127
	"&&" => Shift goto 128
	'|' => Shift goto 129
	"==" => Shift goto 130
	"!=" => Shift goto 131
	"<=" => Shift goto 132
	'<' => Shift goto 133
	">=" => Shift goto 134
	'>' => Shift goto 135
	'+' => Shift goto 136
	'-' => Shift goto 137
	'*' => Shift goto 138
	'/' => Shift goto 139
	'%' => Shift goto 140
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'.' => Shift goto 143
	"->" => Shift goto 144
[91]
	'(' => Shift goto 110
	'&' => Shift goto 112
	'^' => Shift goto 113
	'=' => Shift goto 114
	'[' => Shift goto 115
	']' => Shift goto 157
	"+=" => Shift goto 116
	"-=" => Shift goto 117
	"*=" => Shift goto 118
	"/=" => Shift goto 119
	"%=" => Shift goto 120
	"&&=" => Shift goto 121
	"||=" => Shift goto 122
	"&=" => Shift goto 123
	"|=" => Shift goto 124
	"<<=" => Shift goto 125
	">>=" => Shift goto 126
	"||" => Shift goto 127
	"&&" => Shift goto 128
	'|' => Shift goto 129
	"==" => Shift goto 130
	"!=" => Shift goto 131
	"<=" => Shift goto 132
	'<' => Shift goto 133
	">=" => Shift goto 134
	'>' => Shift goto 135
	'+' => Shift goto 136
	'-' => Shift goto 137
	'*' => Shift goto 138
	'/' => Shift goto 139
	'%' => Shift goto 140
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'.' => Shift goto 143
	"->" => Shift goto 144
[92]
	'(' => Shift goto 94
[93]
	$ => Reduce #4 functiondefinition call procdef
	BOOLEAN => Reduce #4 functiondefinition call procdef
	IDENT => Reduce #4 functiondefinition call procdef
	DQSTRING => Reduce #4 functiondefinition call procdef
	SQSTRING => Reduce #4 functiondefinition call procdef
	CARDINAL => Reduce #4 functiondefinition call procdef
	INTEGER => Reduce #4 functiondefinition call procdef
	FLOAT => Reduce #4 functiondefinition call procdef
	"function" => Reduce #4 functiondefinition call procdef
	'(' => Reduce #4 functiondefinition call procdef
	"procedure" => Reduce #4 functiondefinition call procdef
	"main" => Reduce #4 functiondefinition call procdef
	'{' => Reduce #4 functiondefinition call procdef
	'}' => Reduce #4 functiondefinition call procdef
	"const" => Reduce #4 functiondefinition call procdef
	'&' => Reduce #4 functiondefinition call procdef
	"typedef" => Reduce #4 functiondefinition call procdef
	"struct" => Reduce #4 functiondefinition call procdef
	"interface" => Reduce #4 functiondefinition call procdef
	"class" => Reduce #4 functiondefinition call procdef
	"private" => Reduce #4 functiondefinition call procdef
	"public" => Reduce #4 functiondefinition call procdef
	"var" => Reduce #4 functiondefinition call procdef
	"return" => Reduce #4 functiondefinition call procdef
	"if" => Reduce #4 functiondefinition call procdef
	"while" => Reduce #4 functiondefinition call procdef
	'+' => Reduce #4 functiondefinition call procdef
	'-' => Reduce #4 functiondefinition call procdef
	'~' => Reduce #4 functiondefinition call procdef
	'!' => Reduce #4 functiondefinition call procdef
	'*' => Reduce #4 functiondefinition call procdef
[94]
	IDENT => Shift goto 17
	')' => Reduce #0 parameters
	"const" => Shift goto 18
[95]
	IDENT => Reduce #4 typespec call typespec "const^&"
	')' => Reduce #4 typespec call typespec "const^&"
	',' => Reduce #4 typespec call typespec "const^&"
[96]
	IDENT => Reduce #4 typespec call typespec "const^^"
	')' => Reduce #4 typespec call typespec "const^^"
	',' => Reduce #4 typespec call typespec "const^^"
	'&' => Shift goto 163
[97]
	'}' => Shift goto 164
[98]
	IDENT => Shift goto 17
	'}' => Reduce #0 datadefinitionlist
	"const" => Shift goto 18
	"typedef" => Shift goto 19
	"struct" => Shift goto 20
[99]
	'}' => Shift goto 166
[100]
	"function" => Shift goto 101
	"procedure" => Shift goto 102
	'}' => Reduce #0 methoddefinitionlist
[101]
	IDENT => Shift goto 17
	"const" => Shift goto 18
[102]
	IDENT => Shift goto 169
[103]
	'}' => Shift goto 170
[104]
	'(' => Shift goto 171
[105]
	IDENT => Shift goto 17
	')' => Reduce #0 externparameters
	"const" => Shift goto 18
[106]
	$ => Reduce #2 statement call definition
	BOOLEAN => Reduce #2 statement call definition
	IDENT => Reduce #2 statement call definition
	DQSTRING => Reduce #2 statement call definition
	SQSTRING => Reduce #2 statement call definition
	CARDINAL => Reduce #2 statement call definition
	INTEGER => Reduce #2 statement call definition
	FLOAT => Reduce #2 statement call definition
	"function" => Reduce #2 statement call definition
	'(' => Reduce #2 statement call definition
	"procedure" => Reduce #2 statement call definition
	'{' => Reduce #2 statement call definition
	'}' => Reduce #2 statement call definition
	'&' => Reduce #2 statement call definition
	"typedef" => Reduce #2 statement call definition
	"private" => Reduce #2 statement call definition
	"public" => Reduce #2 statement call definition
	"var" => Reduce #2 statement call definition
	"return" => Reduce #2 statement call definition
	"if" => Reduce #2 statement call definition
	"while" => Reduce #2 statement call definition
	'+' => Reduce #2 statement call definition
	'-' => Reduce #2 statement call definition
	'~' => Reduce #2 statement call definition
	'!' => Reduce #2 statement call definition
	'*' => Reduce #2 statement call definition
[107]
	$ => Reduce #4 mainproc call main_procdef
[108]
	'}' => Reduce #2 statementlist call statement
[109]
	IDENT => Shift goto 175
[110]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	')' => Shift goto 178
	'&' => Shift goto 79
	'+' => Shift goto 84
	'-' => Shift goto 85
	'~' => Shift goto 86
	'!' => Shift goto 87
	'*' => Shift goto 88
[111]
	$ => Reduce #2 statement call free_expression
	BOOLEAN => Reduce #2 statement call free_expression
	IDENT => Reduce #2 statement call free_expression
	DQSTRING => Reduce #2 statement call free_expression
	SQSTRING => Reduce #2 statement call free_expression
	CARDINAL => Reduce #2 statement call free_expression
	INTEGER => Reduce #2 statement call free_expression
	FLOAT => Reduce #2 statement call free_expression
	"function" => Reduce #2 statement call free_expression
	'(' => Reduce #2 statement call free_expression
	"procedure" => Reduce #2 statement call free_expression
	'{' => Reduce #2 statement call free_expression
	'}' => Reduce #2 statement call free_expression
	'&' => Reduce #2 statement call free_expression
	"typedef" => Reduce #2 statement call free_expression
	"private" => Reduce #2 statement call free_expression
	"public" => Reduce #2 statement call free_expression
	"var" => Reduce #2 statement call free_expression
	"return" => Reduce #2 statement call free_expression
	"if" => Reduce #2 statement call free_expression
	"while" => Reduce #2 statement call free_expression
	'+' => Reduce #2 statement call free_expression
	'-' => Reduce #2 statement call free_expression
	'~' => Reduce #2 statement call free_expression
	'!' => Reduce #2 statement call free_expression
	'*' => Reduce #2 statement call free_expression
[112]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 79
	'+' => Shift goto 84
	'-' => Shift goto 85
	'~' => Shift goto 86
	'!' => Shift goto 87
	'*' => Shift goto 88
[113]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 79
	'+' => Shift goto 84
	'-' => Shift goto 85
	'~' => Shift goto 86
	'!' => Shift goto 87
	'*' => Shift goto 88
[114]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 79
	'+' => Shift goto 84
	'-' => Shift goto 85
	'~' => Shift goto 86
	'!' => Shift goto 87
	'*' => Shift goto 88
[115]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 79
	']' => Reduce #0 expressionlist
	'+' => Shift goto 84
	'-' => Shift goto 85
	'~' => Shift goto 86
	'!' => Shift goto 87
	'*' => Shift goto 88
[116]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 79
	'+' => Shift goto 84
	'-' => Shift goto 85
	'~' => Shift goto 86
	'!' => Shift goto 87
	'*' => Shift goto 88
[117]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 79
	'+' => Shift goto 84
	'-' => Shift goto 85
	'~' => Shift goto 86
	'!' => Shift goto 87
	'*' => Shift goto 88
[118]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 79
	'+' => Shift goto 84
	'-' => Shift goto 85
	'~' => Shift goto 86
	'!' => Shift goto 87
	'*' => Shift goto 88
[119]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 79
	'+' => Shift goto 84
	'-' => Shift goto 85
	'~' => Shift goto 86
	'!' => Shift goto 87
	'*' => Shift goto 88
[120]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 79
	'+' => Shift goto 84
	'-' => Shift goto 85
	'~' => Shift goto 86
	'!' => Shift goto 87
	'*' => Shift goto 88
[121]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 79
	'+' => Shift goto 84
	'-' => Shift goto 85
	'~' => Shift goto 86
	'!' => Shift goto 87
	'*' => Shift goto 88
[122]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 79
	'+' => Shift goto 84
	'-' => Shift goto 85
	'~' => Shift goto 86
	'!' => Shift goto 87
	'*' => Shift goto 88
[123]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 79
	'+' => Shift goto 84
	'-' => Shift goto 85
	'~' => Shift goto 86
	'!' => Shift goto 87
	'*' => Shift goto 88
[124]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 79
	'+' => Shift goto 84
	'-' => Shift goto 85
	'~' => Shift goto 86
	'!' => Shift goto 87
	'*' => Shift goto 88
[125]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 79
	'+' => Shift goto 84
	'-' => Shift goto 85
	'~' => Shift goto 86
	'!' => Shift goto 87
	'*' => Shift goto 88
[126]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 79
	'+' => Shift goto 84
	'-' => Shift goto 85
	'~' => Shift goto 86
	'!' => Shift goto 87
	'*' => Shift goto 88
[127]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 79
	'+' => Shift goto 84
	'-' => Shift goto 85
	'~' => Shift goto 86
	'!' => Shift goto 87
	'*' => Shift goto 88
[128]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 79
	'+' => Shift goto 84
	'-' => Shift goto 85
	'~' => Shift goto 86
	'!' => Shift goto 87
	'*' => Shift goto 88
[129]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 79
	'+' => Shift goto 84
	'-' => Shift goto 85
	'~' => Shift goto 86
	'!' => Shift goto 87
	'*' => Shift goto 88
[130]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 79
	'+' => Shift goto 84
	'-' => Shift goto 85
	'~' => Shift goto 86
	'!' => Shift goto 87
	'*' => Shift goto 88
[131]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 79
	'+' => Shift goto 84
	'-' => Shift goto 85
	'~' => Shift goto 86
	'!' => Shift goto 87
	'*' => Shift goto 88
[132]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 79
	'+' => Shift goto 84
	'-' => Shift goto 85
	'~' => Shift goto 86
	'!' => Shift goto 87
	'*' => Shift goto 88
[133]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 79
	'+' => Shift goto 84
	'-' => Shift goto 85
	'~' => Shift goto 86
	'!' => Shift goto 87
	'*' => Shift goto 88
[134]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 79
	'+' => Shift goto 84
	'-' => Shift goto 85
	'~' => Shift goto 86
	'!' => Shift goto 87
	'*' => Shift goto 88
[135]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 79
	'+' => Shift goto 84
	'-' => Shift goto 85
	'~' => Shift goto 86
	'!' => Shift goto 87
	'*' => Shift goto 88
[136]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 79
	'+' => Shift goto 84
	'-' => Shift goto 85
	'~' => Shift goto 86
	'!' => Shift goto 87
	'*' => Shift goto 88
[137]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 79
	'+' => Shift goto 84
	'-' => Shift goto 85
	'~' => Shift goto 86
	'!' => Shift goto 87
	'*' => Shift goto 88
[138]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 79
	'+' => Shift goto 84
	'-' => Shift goto 85
	'~' => Shift goto 86
	'!' => Shift goto 87
	'*' => Shift goto 88
[139]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 79
	'+' => Shift goto 84
	'-' => Shift goto 85
	'~' => Shift goto 86
	'!' => Shift goto 87
	'*' => Shift goto 88
[140]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 79
	'+' => Shift goto 84
	'-' => Shift goto 85
	'~' => Shift goto 86
	'!' => Shift goto 87
	'*' => Shift goto 88
[141]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 79
	'+' => Shift goto 84
	'-' => Shift goto 85
	'~' => Shift goto 86
	'!' => Shift goto 87
	'*' => Shift goto 88
[142]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 79
	'+' => Shift goto 84
	'-' => Shift goto 85
	'~' => Shift goto 86
	'!' => Shift goto 87
	'*' => Shift goto 88
[143]
	IDENT => Shift goto 210
[144]
	IDENT => Reduce #1 indirection call count
	"->" => Shift goto 144
[145]
	'(' => Shift goto 110
	')' => Shift goto 212
	'&' => Shift goto 112
	'^' => Shift goto 113
	'=' => Shift goto 114
	'[' => Shift goto 115
	"+=" => Shift goto 116
	"-=" => Shift goto 117
	"*=" => Shift goto 118
	"/=" => Shift goto 119
	"%=" => Shift goto 120
	"&&=" => Shift goto 121
	"||=" => Shift goto 122
	"&=" => Shift goto 123
	"|=" => Shift goto 124
	"<<=" => Shift goto 125
	">>=" => Shift goto 126
	"||" => Shift goto 127
	"&&" => Shift goto 128
	'|' => Shift goto 129
	"==" => Shift goto 130
	"!=" => Shift goto 131
	"<=" => Shift goto 132
	'<' => Shift goto 133
	">=" => Shift goto 134
	'>' => Shift goto 135
	'+' => Shift goto 136
	'-' => Shift goto 137
	'*' => Shift goto 138
	'/' => Shift goto 139
	'%' => Shift goto 140
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'.' => Shift goto 143
	"->" => Shift goto 144
[146]
	'}' => Shift goto 213
[147]
	'(' => Shift goto 110
	')' => Reduce #2 expression call operator "&"
	';' => Reduce #2 expression call operator "&"
	',' => Reduce #2 expression call operator "&"
	'&' => Reduce #2 expression call operator "&"
	'^' => Reduce #2 expression call operator "&"
	'=' => Reduce #2 expression call operator "&"
	'[' => Shift goto 115
	']' => Reduce #2 expression call operator "&"
	"+=" => Reduce #2 expression call operator "&"
	"-=" => Reduce #2 expression call operator "&"
	"*=" => Reduce #2 expression call operator "&"
	"/=" => Reduce #2 expression call operator "&"
	"%=" => Reduce #2 expression call operator "&"
	"&&=" => Reduce #2 expression call operator "&"
	"||=" => Reduce #2 expression call operator "&"
	"&=" => Reduce #2 expression call operator "&"
	"|=" => Reduce #2 expression call operator "&"
	"<<=" => Reduce #2 expression call operator "&"
	">>=" => Reduce #2 expression call operator "&"
	"||" => Reduce #2 expression call operator "&"
	"&&" => Reduce #2 expression call operator "&"
	'|' => Reduce #2 expression call operator "&"
	"==" => Reduce #2 expression call operator "&"
	"!=" => Reduce #2 expression call operator "&"
	"<=" => Reduce #2 expression call operator "&"
	'<' => Reduce #2 expression call operator "&"
	">=" => Reduce #2 expression call operator "&"
	'>' => Reduce #2 expression call operator "&"
	'+' => Reduce #2 expression call operator "&"
	'-' => Reduce #2 expression call operator "&"
	'*' => Shift goto 138
	'/' => Shift goto 139
	'%' => Shift goto 140
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'.' => Shift goto 143
	"->" => Reduce #2 expression call operator "&"
[148]
	';' => Shift goto 214
[149]
	'(' => Shift goto 110
	';' => Shift goto 215
	'&' => Shift goto 112
	'^' => Shift goto 113
	'=' => Shift goto 114
	'[' => Shift goto 115
	"+=" => Shift goto 116
	"-=" => Shift goto 117
	"*=" => Shift goto 118
	"/=" => Shift goto 119
	"%=" => Shift goto 120
	"&&=" => Shift goto 121
	"||=" => Shift goto 122
	"&=" => Shift goto 123
	"|=" => Shift goto 124
	"<<=" => Shift goto 125
	">>=" => Shift goto 126
	"||" => Shift goto 127
	"&&" => Shift goto 128
	'|' => Shift goto 129
	"==" => Shift goto 130
	"!=" => Shift goto 131
	"<=" => Shift goto 132
	'<' => Shift goto 133
	">=" => Shift goto 134
	'>' => Shift goto 135
	'+' => Shift goto 136
	'-' => Shift goto 137
	'*' => Shift goto 138
	'/' => Shift goto 139
	'%' => Shift goto 140
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'.' => Shift goto 143
	"->" => Shift goto 144
[150]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 79
	'+' => Shift goto 84
	'-' => Shift goto 85
	'~' => Shift goto 86
	'!' => Shift goto 87
	'*' => Shift goto 88
[151]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 79
	'+' => Shift goto 84
	'-' => Shift goto 85
	'~' => Shift goto 86
	'!' => Shift goto 87
	'*' => Shift goto 88
[152]
	'(' => Shift goto 110
	')' => Reduce #2 expression call operator "+"
	';' => Reduce #2 expression call operator "+"
	',' => Reduce #2 expression call operator "+"
	'&' => Reduce #2 expression call operator "+"
	'^' => Reduce #2 expression call operator "+"
	'=' => Reduce #2 expression call operator "+"
	'[' => Shift goto 115
	']' => Reduce #2 expression call operator "+"
	"+=" => Reduce #2 expression call operator "+"
	"-=" => Reduce #2 expression call operator "+"
	"*=" => Reduce #2 expression call operator "+"
	"/=" => Reduce #2 expression call operator "+"
	"%=" => Reduce #2 expression call operator "+"
	"&&=" => Reduce #2 expression call operator "+"
	"||=" => Reduce #2 expression call operator "+"
	"&=" => Reduce #2 expression call operator "+"
	"|=" => Reduce #2 expression call operator "+"
	"<<=" => Reduce #2 expression call operator "+"
	">>=" => Reduce #2 expression call operator "+"
	"||" => Reduce #2 expression call operator "+"
	"&&" => Reduce #2 expression call operator "+"
	'|' => Reduce #2 expression call operator "+"
	"==" => Reduce #2 expression call operator "+"
	"!=" => Reduce #2 expression call operator "+"
	"<=" => Reduce #2 expression call operator "+"
	'<' => Reduce #2 expression call operator "+"
	">=" => Reduce #2 expression call operator "+"
	'>' => Reduce #2 expression call operator "+"
	'+' => Reduce #2 expression call operator "+"
	'-' => Reduce #2 expression call operator "+"
	'*' => Shift goto 138
	'/' => Shift goto 139
	'%' => Shift goto 140
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'.' => Shift goto 143
	"->" => Reduce #2 expression call operator "+"
[153]
	'(' => Shift goto 110
	')' => Reduce #2 expression call operator "-"
	';' => Reduce #2 expression call operator "-"
	',' => Reduce #2 expression call operator "-"
	'&' => Reduce #2 expression call operator "-"
	'^' => Reduce #2 expression call operator "-"
	'=' => Reduce #2 expression call operator "-"
	'[' => Shift goto 115
	']' => Reduce #2 expression call operator "-"
	"+=" => Reduce #2 expression call operator "-"
	"-=" => Reduce #2 expression call operator "-"
	"*=" => Reduce #2 expression call operator "-"
	"/=" => Reduce #2 expression call operator "-"
	"%=" => Reduce #2 expression call operator "-"
	"&&=" => Reduce #2 expression call operator "-"
	"||=" => Reduce #2 expression call operator "-"
	"&=" => Reduce #2 expression call operator "-"
	"|=" => Reduce #2 expression call operator "-"
	"<<=" => Reduce #2 expression call operator "-"
	">>=" => Reduce #2 expression call operator "-"
	"||" => Reduce #2 expression call operator "-"
	"&&" => Reduce #2 expression call operator "-"
	'|' => Reduce #2 expression call operator "-"
	"==" => Reduce #2 expression call operator "-"
	"!=" => Reduce #2 expression call operator "-"
	"<=" => Reduce #2 expression call operator "-"
	'<' => Reduce #2 expression call operator "-"
	">=" => Reduce #2 expression call operator "-"
	'>' => Reduce #2 expression call operator "-"
	'+' => Reduce #2 expression call operator "-"
	'-' => Reduce #2 expression call operator "-"
	'*' => Shift goto 138
	'/' => Shift goto 139
	'%' => Shift goto 140
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'.' => Shift goto 143
	"->" => Reduce #2 expression call operator "-"
[154]
	'(' => Shift goto 110
	')' => Reduce #2 expression call operator "~"
	';' => Reduce #2 expression call operator "~"
	',' => Reduce #2 expression call operator "~"
	'&' => Reduce #2 expression call operator "~"
	'^' => Reduce #2 expression call operator "~"
	'=' => Reduce #2 expression call operator "~"
	'[' => Shift goto 115
	']' => Reduce #2 expression call operator "~"
	"+=" => Reduce #2 expression call operator "~"
	"-=" => Reduce #2 expression call operator "~"
	"*=" => Reduce #2 expression call operator "~"
	"/=" => Reduce #2 expression call operator "~"
	"%=" => Reduce #2 expression call operator "~"
	"&&=" => Reduce #2 expression call operator "~"
	"||=" => Reduce #2 expression call operator "~"
	"&=" => Reduce #2 expression call operator "~"
	"|=" => Reduce #2 expression call operator "~"
	"<<=" => Reduce #2 expression call operator "~"
	">>=" => Reduce #2 expression call operator "~"
	"||" => Reduce #2 expression call operator "~"
	"&&" => Reduce #2 expression call operator "~"
	'|' => Reduce #2 expression call operator "~"
	"==" => Reduce #2 expression call operator "~"
	"!=" => Reduce #2 expression call operator "~"
	"<=" => Reduce #2 expression call operator "~"
	'<' => Reduce #2 expression call operator "~"
	">=" => Reduce #2 expression call operator "~"
	'>' => Reduce #2 expression call operator "~"
	'+' => Reduce #2 expression call operator "~"
	'-' => Reduce #2 expression call operator "~"
	'*' => Shift goto 138
	'/' => Shift goto 139
	'%' => Shift goto 140
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'.' => Shift goto 143
	"->" => Reduce #2 expression call operator "~"
[155]
	'(' => Shift goto 110
	')' => Reduce #2 expression call operator "!"
	';' => Reduce #2 expression call operator "!"
	',' => Reduce #2 expression call operator "!"
	'&' => Reduce #2 expression call operator "!"
	'^' => Reduce #2 expression call operator "!"
	'=' => Reduce #2 expression call operator "!"
	'[' => Shift goto 115
	']' => Reduce #2 expression call operator "!"
	"+=" => Reduce #2 expression call operator "!"
	"-=" => Reduce #2 expression call operator "!"
	"*=" => Reduce #2 expression call operator "!"
	"/=" => Reduce #2 expression call operator "!"
	"%=" => Reduce #2 expression call operator "!"
	"&&=" => Reduce #2 expression call operator "!"
	"||=" => Reduce #2 expression call operator "!"
	"&=" => Reduce #2 expression call operator "!"
	"|=" => Reduce #2 expression call operator "!"
	"<<=" => Reduce #2 expression call operator "!"
	">>=" => Reduce #2 expression call operator "!"
	"||" => Reduce #2 expression call operator "!"
	"&&" => Reduce #2 expression call operator "!"
	'|' => Reduce #2 expression call operator "!"
	"==" => Reduce #2 expression call operator "!"
	"!=" => Reduce #2 expression call operator "!"
	"<=" => Reduce #2 expression call operator "!"
	'<' => Reduce #2 expression call operator "!"
	">=" => Reduce #2 expression call operator "!"
	'>' => Reduce #2 expression call operator "!"
	'+' => Reduce #2 expression call operator "!"
	'-' => Reduce #2 expression call operator "!"
	'*' => Shift goto 138
	'/' => Shift goto 139
	'%' => Shift goto 140
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'.' => Shift goto 143
	"->" => Reduce #2 expression call operator "!"
[156]
	'(' => Shift goto 110
	')' => Reduce #2 expression call operator "->"
	';' => Reduce #2 expression call operator "->"
	',' => Reduce #2 expression call operator "->"
	'&' => Reduce #2 expression call operator "->"
	'^' => Reduce #2 expression call operator "->"
	'=' => Reduce #2 expression call operator "->"
	'[' => Shift goto 115
	']' => Reduce #2 expression call operator "->"
	"+=" => Reduce #2 expression call operator "->"
	"-=" => Reduce #2 expression call operator "->"
	"*=" => Reduce #2 expression call operator "->"
	"/=" => Reduce #2 expression call operator "->"
	"%=" => Reduce #2 expression call operator "->"
	"&&=" => Reduce #2 expression call operator "->"
	"||=" => Reduce #2 expression call operator "->"
	"&=" => Reduce #2 expression call operator "->"
	"|=" => Reduce #2 expression call operator "->"
	"<<=" => Reduce #2 expression call operator "->"
	">>=" => Reduce #2 expression call operator "->"
	"||" => Reduce #2 expression call operator "->"
	"&&" => Reduce #2 expression call operator "->"
	'|' => Reduce #2 expression call operator "->"
	"==" => Reduce #2 expression call operator "->"
	"!=" => Reduce #2 expression call operator "->"
	"<=" => Reduce #2 expression call operator "->"
	'<' => Reduce #2 expression call operator "->"
	">=" => Reduce #2 expression call operator "->"
	'>' => Reduce #2 expression call operator "->"
	'+' => Reduce #2 expression call operator "->"
	'-' => Reduce #2 expression call operator "->"
	'*' => Reduce #2 expression call operator "->"
	'/' => Reduce #2 expression call operator "->"
	'%' => Reduce #2 expression call operator "->"
	"<<" => Reduce #2 expression call operator "->"
	">>" => Reduce #2 expression call operator "->"
	'.' => Reduce #2 expression call operator "->"
	"->" => Reduce #2 expression call operator "->"
[157]
	';' => Reduce #5 variabledefinition call vardef_array
	'=' => Shift goto 218
[158]
	$ => Reduce #5 functiondefinition call funcdef
	BOOLEAN => Reduce #5 functiondefinition call funcdef
	IDENT => Reduce #5 functiondefinition call funcdef
	DQSTRING => Reduce #5 functiondefinition call funcdef
	SQSTRING => Reduce #5 functiondefinition call funcdef
	CARDINAL => Reduce #5 functiondefinition call funcdef
	INTEGER => Reduce #5 functiondefinition call funcdef
	FLOAT => Reduce #5 functiondefinition call funcdef
	"function" => Reduce #5 functiondefinition call funcdef
	'(' => Reduce #5 functiondefinition call funcdef
	"procedure" => Reduce #5 functiondefinition call funcdef
	"main" => Reduce #5 functiondefinition call funcdef
	'{' => Reduce #5 functiondefinition call funcdef
	'}' => Reduce #5 functiondefinition call funcdef
	"const" => Reduce #5 functiondefinition call funcdef
	'&' => Reduce #5 functiondefinition call funcdef
	"typedef" => Reduce #5 functiondefinition call funcdef
	"struct" => Reduce #5 functiondefinition call funcdef
	"interface" => Reduce #5 functiondefinition call funcdef
	"class" => Reduce #5 functiondefinition call funcdef
	"private" => Reduce #5 functiondefinition call funcdef
	"public" => Reduce #5 functiondefinition call funcdef
	"var" => Reduce #5 functiondefinition call funcdef
	"return" => Reduce #5 functiondefinition call funcdef
	"if" => Reduce #5 functiondefinition call funcdef
	"while" => Reduce #5 functiondefinition call funcdef
	'+' => Reduce #5 functiondefinition call funcdef
	'-' => Reduce #5 functiondefinition call funcdef
	'~' => Reduce #5 functiondefinition call funcdef
	'!' => Reduce #5 functiondefinition call funcdef
	'*' => Reduce #5 functiondefinition call funcdef
[159]
	IDENT => Shift goto 219
[160]
	')' => Shift goto 220
[161]
	')' => Reduce #1 parameterlist call paramdeflist
[162]
	')' => Reduce #1 parameters
	',' => Shift goto 221
[163]
	IDENT => Reduce #5 typespec call typespec "const^^&"
	')' => Reduce #5 typespec call typespec "const^^&"
	',' => Reduce #5 typespec call typespec "const^^&"
[164]
	';' => Reduce #5 structdefinition call structdef
[165]
	'}' => Reduce #2 datadefinitionlist
[166]
	';' => Reduce #5 interfacedefinition call interfacedef
[167]
	'}' => Reduce #2 methoddefinitionlist
[168]
	IDENT => Shift goto 222
[169]
	'(' => Shift goto 223
[170]
	';' => Reduce #5 classdefinition call classdef
[171]
	IDENT => Shift goto 17
	')' => Reduce #0 externparameters
	"const" => Shift goto 18
[172]
	')' => Shift goto 225
[173]
	')' => Reduce #1 externparameterlist call extern_paramdeflist
[174]
	')' => Reduce #1 externparameters
	',' => Shift goto 226
[175]
	'(' => Reduce #3 iexpression call rep_operator "->"
	')' => Reduce #3 iexpression call rep_operator "->"
	';' => Reduce #3 iexpression call rep_operator "->"
	',' => Reduce #3 iexpression call rep_operator "->"
	'&' => Reduce #3 iexpression call rep_operator "->"
	'^' => Reduce #3 iexpression call rep_operator "->"
	'=' => Reduce #3 iexpression call rep_operator "->"
	'[' => Reduce #3 iexpression call rep_operator "->"
	']' => Reduce #3 iexpression call rep_operator "->"
	"+=" => Reduce #3 iexpression call rep_operator "->"
	"-=" => Reduce #3 iexpression call rep_operator "->"
	"*=" => Reduce #3 iexpression call rep_operator "->"
	"/=" => Reduce #3 iexpression call rep_operator "->"
	"%=" => Reduce #3 iexpression call rep_operator "->"
	"&&=" => Reduce #3 iexpression call rep_operator "->"
	"||=" => Reduce #3 iexpression call rep_operator "->"
	"&=" => Reduce #3 iexpression call rep_operator "->"
	"|=" => Reduce #3 iexpression call rep_operator "->"
	"<<=" => Reduce #3 iexpression call rep_operator "->"
	">>=" => Reduce #3 iexpression call rep_operator "->"
	"||" => Reduce #3 iexpression call rep_operator "->"
	"&&" => Reduce #3 iexpression call rep_operator "->"
	'|' => Reduce #3 iexpression call rep_operator "->"
	"==" => Reduce #3 iexpression call rep_operator "->"
	"!=" => Reduce #3 iexpression call rep_operator "->"
	"<=" => Reduce #3 iexpression call rep_operator "->"
	'<' => Reduce #3 iexpression call rep_operator "->"
	">=" => Reduce #3 iexpression call rep_operator "->"
	'>' => Reduce #3 iexpression call rep_operator "->"
	'+' => Reduce #3 iexpression call rep_operator "->"
	'-' => Reduce #3 iexpression call rep_operator "->"
	'*' => Reduce #3 iexpression call rep_operator "->"
	'/' => Reduce #3 iexpression call rep_operator "->"
	'%' => Reduce #3 iexpression call rep_operator "->"
	"<<" => Reduce #3 iexpression call rep_operator "->"
	">>" => Reduce #3 iexpression call rep_operator "->"
	'.' => Reduce #3 iexpression call rep_operator "->"
	"->" => Reduce #3 iexpression call rep_operator "->"
[176]
	'(' => Shift goto 110
	')' => Reduce #1 expressionlist
	',' => Shift goto 227
	'&' => Shift goto 112
	'^' => Shift goto 113
	'=' => Shift goto 114
	'[' => Shift goto 115
	']' => Reduce #1 expressionlist
	"+=" => Shift goto 116
	"-=" => Shift goto 117
	"*=" => Shift goto 118
	"/=" => Shift goto 119
	"%=" => Shift goto 120
	"&&=" => Shift goto 121
	"||=" => Shift goto 122
	"&=" => Shift goto 123
	"|=" => Shift goto 124
	"<<=" => Shift goto 125
	">>=" => Shift goto 126
	"||" => Shift goto 127
	"&&" => Shift goto 128
	'|' => Shift goto 129
	"==" => Shift goto 130
	"!=" => Shift goto 131
	"<=" => Shift goto 132
	'<' => Shift goto 133
	">=" => Shift goto 134
	'>' => Shift goto 135
	'+' => Shift goto 136
	'-' => Shift goto 137
	'*' => Shift goto 138
	'/' => Shift goto 139
	'%' => Shift goto 140
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'.' => Shift goto 143
	"->" => Shift goto 144
[177]
	')' => Shift goto 228
[178]
	'(' => Reduce #3 expression call operator "()"
	')' => Reduce #3 expression call operator "()"
	';' => Reduce #3 expression call operator "()"
	',' => Reduce #3 expression call operator "()"
	'&' => Reduce #3 expression call operator "()"
	'^' => Reduce #3 expression call operator "()"
	'=' => Reduce #3 expression call operator "()"
	'[' => Reduce #3 expression call operator "()"
	']' => Reduce #3 expression call operator "()"
	"+=" => Reduce #3 expression call operator "()"
	"-=" => Reduce #3 expression call operator "()"
	"*=" => Reduce #3 expression call operator "()"
	"/=" => Reduce #3 expression call operator "()"
	"%=" => Reduce #3 expression call operator "()"
	"&&=" => Reduce #3 expression call operator "()"
	"||=" => Reduce #3 expression call operator "()"
	"&=" => Reduce #3 expression call operator "()"
	"|=" => Reduce #3 expression call operator "()"
	"<<=" => Reduce #3 expression call operator "()"
	">>=" => Reduce #3 expression call operator "()"
	"||" => Reduce #3 expression call operator "()"
	"&&" => Reduce #3 expression call operator "()"
	'|' => Reduce #3 expression call operator "()"
	"==" => Reduce #3 expression call operator "()"
	"!=" => Reduce #3 expression call operator "()"
	"<=" => Reduce #3 expression call operator "()"
	'<' => Reduce #3 expression call operator "()"
	">=" => Reduce #3 expression call operator "()"
	'>' => Reduce #3 expression call operator "()"
	'+' => Reduce #3 expression call operator "()"
	'-' => Reduce #3 expression call operator "()"
	'*' => Reduce #3 expression call operator "()"
	'/' => Reduce #3 expression call operator "()"
	'%' => Reduce #3 expression call operator "()"
	"<<" => Reduce #3 expression call operator "()"
	">>" => Reduce #3 expression call operator "()"
	'.' => Reduce #3 expression call operator "()"
	"->" => Reduce #3 expression call operator "()"
[179]
	'(' => Shift goto 110
	')' => Reduce #3 expression call operator "&"
	';' => Reduce #3 expression call operator "&"
	',' => Reduce #3 expression call operator "&"
	'&' => Reduce #3 expression call operator "&"
	'^' => Reduce #3 expression call operator "&"
	'=' => Reduce #3 expression call operator "&"
	'[' => Shift goto 115
	']' => Reduce #3 expression call operator "&"
	"+=" => Reduce #3 expression call operator "&"
	"-=" => Reduce #3 expression call operator "&"
	"*=" => Reduce #3 expression call operator "&"
	"/=" => Reduce #3 expression call operator "&"
	"%=" => Reduce #3 expression call operator "&"
	"&&=" => Reduce #3 expression call operator "&"
	"||=" => Reduce #3 expression call operator "&"
	"&=" => Reduce #3 expression call operator "&"
	"|=" => Reduce #3 expression call operator "&"
	"<<=" => Reduce #3 expression call operator "&"
	">>=" => Reduce #3 expression call operator "&"
	"||" => Reduce #3 expression call operator "&"
	"&&" => Reduce #3 expression call operator "&"
	'|' => Reduce #3 expression call operator "&"
	"==" => Shift goto 130
	"!=" => Shift goto 131
	"<=" => Shift goto 132
	'<' => Shift goto 133
	">=" => Shift goto 134
	'>' => Shift goto 135
	'+' => Shift goto 136
	'-' => Shift goto 137
	'*' => Shift goto 138
	'/' => Shift goto 139
	'%' => Shift goto 140
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'.' => Shift goto 143
	"->" => Reduce #3 expression call operator "&"
[180]
	'(' => Shift goto 110
	')' => Reduce #3 expression call operator "^"
	';' => Reduce #3 expression call operator "^"
	',' => Reduce #3 expression call operator "^"
	'&' => Reduce #3 expression call operator "^"
	'^' => Reduce #3 expression call operator "^"
	'=' => Reduce #3 expression call operator "^"
	'[' => Shift goto 115
	']' => Reduce #3 expression call operator "^"
	"+=" => Reduce #3 expression call operator "^"
	"-=" => Reduce #3 expression call operator "^"
	"*=" => Reduce #3 expression call operator "^"
	"/=" => Reduce #3 expression call operator "^"
	"%=" => Reduce #3 expression call operator "^"
	"&&=" => Reduce #3 expression call operator "^"
	"||=" => Reduce #3 expression call operator "^"
	"&=" => Reduce #3 expression call operator "^"
	"|=" => Reduce #3 expression call operator "^"
	"<<=" => Reduce #3 expression call operator "^"
	">>=" => Reduce #3 expression call operator "^"
	"||" => Reduce #3 expression call operator "^"
	"&&" => Reduce #3 expression call operator "^"
	'|' => Reduce #3 expression call operator "^"
	"==" => Shift goto 130
	"!=" => Shift goto 131
	"<=" => Shift goto 132
	'<' => Shift goto 133
	">=" => Shift goto 134
	'>' => Shift goto 135
	'+' => Shift goto 136
	'-' => Shift goto 137
	'*' => Shift goto 138
	'/' => Shift goto 139
	'%' => Shift goto 140
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'.' => Shift goto 143
	"->" => Reduce #3 expression call operator "^"
[181]
	'(' => Shift goto 110
	')' => Reduce #3 expression call operator "="
	';' => Reduce #3 expression call operator "="
	',' => Reduce #3 expression call operator "="
	'&' => Shift goto 112
	'^' => Shift goto 113
	'=' => Reduce #3 expression call operator "="
	'[' => Shift goto 115
	']' => Reduce #3 expression call operator "="
	"+=" => Reduce #3 expression call operator "="
	"-=" => Reduce #3 expression call operator "="
	"*=" => Reduce #3 expression call operator "="
	"/=" => Reduce #3 expression call operator "="
	"%=" => Reduce #3 expression call operator "="
	"&&=" => Reduce #3 expression call operator "="
	"||=" => Reduce #3 expression call operator "="
	"&=" => Reduce #3 expression call operator "="
	"|=" => Reduce #3 expression call operator "="
	"<<=" => Reduce #3 expression call operator "="
	">>=" => Reduce #3 expression call operator "="
	"||" => Shift goto 127
	"&&" => Shift goto 128
	'|' => Shift goto 129
	"==" => Shift goto 130
	"!=" => Shift goto 131
	"<=" => Shift goto 132
	'<' => Shift goto 133
	">=" => Shift goto 134
	'>' => Shift goto 135
	'+' => Shift goto 136
	'-' => Shift goto 137
	'*' => Shift goto 138
	'/' => Shift goto 139
	'%' => Shift goto 140
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'.' => Shift goto 143
	"->" => Reduce #3 expression call operator "="
[182]
	']' => Shift goto 229
[183]
	'(' => Shift goto 110
	')' => Reduce #3 expression call assign_operator "+"
	';' => Reduce #3 expression call assign_operator "+"
	',' => Reduce #3 expression call assign_operator "+"
	'&' => Shift goto 112
	'^' => Shift goto 113
	'=' => Reduce #3 expression call assign_operator "+"
	'[' => Shift goto 115
	']' => Reduce #3 expression call assign_operator "+"
	"+=" => Reduce #3 expression call assign_operator "+"
	"-=" => Reduce #3 expression call assign_operator "+"
	"*=" => Reduce #3 expression call assign_operator "+"
	"/=" => Reduce #3 expression call assign_operator "+"
	"%=" => Reduce #3 expression call assign_operator "+"
	"&&=" => Reduce #3 expression call assign_operator "+"
	"||=" => Reduce #3 expression call assign_operator "+"
	"&=" => Reduce #3 expression call assign_operator "+"
	"|=" => Reduce #3 expression call assign_operator "+"
	"<<=" => Reduce #3 expression call assign_operator "+"
	">>=" => Reduce #3 expression call assign_operator "+"
	"||" => Shift goto 127
	"&&" => Shift goto 128
	'|' => Shift goto 129
	"==" => Shift goto 130
	"!=" => Shift goto 131
	"<=" => Shift goto 132
	'<' => Shift goto 133
	">=" => Shift goto 134
	'>' => Shift goto 135
	'+' => Shift goto 136
	'-' => Shift goto 137
	'*' => Shift goto 138
	'/' => Shift goto 139
	'%' => Shift goto 140
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'.' => Shift goto 143
	"->" => Reduce #3 expression call assign_operator "+"
[184]
	'(' => Shift goto 110
	')' => Reduce #3 expression call assign_operator "-"
	';' => Reduce #3 expression call assign_operator "-"
	',' => Reduce #3 expression call assign_operator "-"
	'&' => Shift goto 112
	'^' => Shift goto 113
	'=' => Reduce #3 expression call assign_operator "-"
	'[' => Shift goto 115
	']' => Reduce #3 expression call assign_operator "-"
	"+=" => Reduce #3 expression call assign_operator "-"
	"-=" => Reduce #3 expression call assign_operator "-"
	"*=" => Reduce #3 expression call assign_operator "-"
	"/=" => Reduce #3 expression call assign_operator "-"
	"%=" => Reduce #3 expression call assign_operator "-"
	"&&=" => Reduce #3 expression call assign_operator "-"
	"||=" => Reduce #3 expression call assign_operator "-"
	"&=" => Reduce #3 expression call assign_operator "-"
	"|=" => Reduce #3 expression call assign_operator "-"
	"<<=" => Reduce #3 expression call assign_operator "-"
	">>=" => Reduce #3 expression call assign_operator "-"
	"||" => Shift goto 127
	"&&" => Shift goto 128
	'|' => Shift goto 129
	"==" => Shift goto 130
	"!=" => Shift goto 131
	"<=" => Shift goto 132
	'<' => Shift goto 133
	">=" => Shift goto 134
	'>' => Shift goto 135
	'+' => Shift goto 136
	'-' => Shift goto 137
	'*' => Shift goto 138
	'/' => Shift goto 139
	'%' => Shift goto 140
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'.' => Shift goto 143
	"->" => Reduce #3 expression call assign_operator "-"
[185]
	'(' => Shift goto 110
	')' => Reduce #3 expression call assign_operator "*"
	';' => Reduce #3 expression call assign_operator "*"
	',' => Reduce #3 expression call assign_operator "*"
	'&' => Shift goto 112
	'^' => Shift goto 113
	'=' => Reduce #3 expression call assign_operator "*"
	'[' => Shift goto 115
	']' => Reduce #3 expression call assign_operator "*"
	"+=" => Reduce #3 expression call assign_operator "*"
	"-=" => Reduce #3 expression call assign_operator "*"
	"*=" => Reduce #3 expression call assign_operator "*"
	"/=" => Reduce #3 expression call assign_operator "*"
	"%=" => Reduce #3 expression call assign_operator "*"
	"&&=" => Reduce #3 expression call assign_operator "*"
	"||=" => Reduce #3 expression call assign_operator "*"
	"&=" => Reduce #3 expression call assign_operator "*"
	"|=" => Reduce #3 expression call assign_operator "*"
	"<<=" => Reduce #3 expression call assign_operator "*"
	">>=" => Reduce #3 expression call assign_operator "*"
	"||" => Shift goto 127
	"&&" => Shift goto 128
	'|' => Shift goto 129
	"==" => Shift goto 130
	"!=" => Shift goto 131
	"<=" => Shift goto 132
	'<' => Shift goto 133
	">=" => Shift goto 134
	'>' => Shift goto 135
	'+' => Shift goto 136
	'-' => Shift goto 137
	'*' => Shift goto 138
	'/' => Shift goto 139
	'%' => Shift goto 140
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'.' => Shift goto 143
	"->" => Reduce #3 expression call assign_operator "*"
[186]
	'(' => Shift goto 110
	')' => Reduce #3 expression call assign_operator "/"
	';' => Reduce #3 expression call assign_operator "/"
	',' => Reduce #3 expression call assign_operator "/"
	'&' => Shift goto 112
	'^' => Shift goto 113
	'=' => Reduce #3 expression call assign_operator "/"
	'[' => Shift goto 115
	']' => Reduce #3 expression call assign_operator "/"
	"+=" => Reduce #3 expression call assign_operator "/"
	"-=" => Reduce #3 expression call assign_operator "/"
	"*=" => Reduce #3 expression call assign_operator "/"
	"/=" => Reduce #3 expression call assign_operator "/"
	"%=" => Reduce #3 expression call assign_operator "/"
	"&&=" => Reduce #3 expression call assign_operator "/"
	"||=" => Reduce #3 expression call assign_operator "/"
	"&=" => Reduce #3 expression call assign_operator "/"
	"|=" => Reduce #3 expression call assign_operator "/"
	"<<=" => Reduce #3 expression call assign_operator "/"
	">>=" => Reduce #3 expression call assign_operator "/"
	"||" => Shift goto 127
	"&&" => Shift goto 128
	'|' => Shift goto 129
	"==" => Shift goto 130
	"!=" => Shift goto 131
	"<=" => Shift goto 132
	'<' => Shift goto 133
	">=" => Shift goto 134
	'>' => Shift goto 135
	'+' => Shift goto 136
	'-' => Shift goto 137
	'*' => Shift goto 138
	'/' => Shift goto 139
	'%' => Shift goto 140
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'.' => Shift goto 143
	"->" => Reduce #3 expression call assign_operator "/"
[187]
	'(' => Shift goto 110
	')' => Reduce #3 expression call assign_operator "%"
	';' => Reduce #3 expression call assign_operator "%"
	',' => Reduce #3 expression call assign_operator "%"
	'&' => Shift goto 112
	'^' => Shift goto 113
	'=' => Reduce #3 expression call assign_operator "%"
	'[' => Shift goto 115
	']' => Reduce #3 expression call assign_operator "%"
	"+=" => Reduce #3 expression call assign_operator "%"
	"-=" => Reduce #3 expression call assign_operator "%"
	"*=" => Reduce #3 expression call assign_operator "%"
	"/=" => Reduce #3 expression call assign_operator "%"
	"%=" => Reduce #3 expression call assign_operator "%"
	"&&=" => Reduce #3 expression call assign_operator "%"
	"||=" => Reduce #3 expression call assign_operator "%"
	"&=" => Reduce #3 expression call assign_operator "%"
	"|=" => Reduce #3 expression call assign_operator "%"
	"<<=" => Reduce #3 expression call assign_operator "%"
	">>=" => Reduce #3 expression call assign_operator "%"
	"||" => Shift goto 127
	"&&" => Shift goto 128
	'|' => Shift goto 129
	"==" => Shift goto 130
	"!=" => Shift goto 131
	"<=" => Shift goto 132
	'<' => Shift goto 133
	">=" => Shift goto 134
	'>' => Shift goto 135
	'+' => Shift goto 136
	'-' => Shift goto 137
	'*' => Shift goto 138
	'/' => Shift goto 139
	'%' => Shift goto 140
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'.' => Shift goto 143
	"->" => Reduce #3 expression call assign_operator "%"
[188]
	'(' => Shift goto 110
	')' => Reduce #3 expression call assign_operator "&&"
	';' => Reduce #3 expression call assign_operator "&&"
	',' => Reduce #3 expression call assign_operator "&&"
	'&' => Shift goto 112
	'^' => Shift goto 113
	'=' => Reduce #3 expression call assign_operator "&&"
	'[' => Shift goto 115
	']' => Reduce #3 expression call assign_operator "&&"
	"+=" => Reduce #3 expression call assign_operator "&&"
	"-=" => Reduce #3 expression call assign_operator "&&"
	"*=" => Reduce #3 expression call assign_operator "&&"
	"/=" => Reduce #3 expression call assign_operator "&&"
	"%=" => Reduce #3 expression call assign_operator "&&"
	"&&=" => Reduce #3 expression call assign_operator "&&"
	"||=" => Reduce #3 expression call assign_operator "&&"
	"&=" => Reduce #3 expression call assign_operator "&&"
	"|=" => Reduce #3 expression call assign_operator "&&"
	"<<=" => Reduce #3 expression call assign_operator "&&"
	">>=" => Reduce #3 expression call assign_operator "&&"
	"||" => Shift goto 127
	"&&" => Shift goto 128
	'|' => Shift goto 129
	"==" => Shift goto 130
	"!=" => Shift goto 131
	"<=" => Shift goto 132
	'<' => Shift goto 133
	">=" => Shift goto 134
	'>' => Shift goto 135
	'+' => Shift goto 136
	'-' => Shift goto 137
	'*' => Shift goto 138
	'/' => Shift goto 139
	'%' => Shift goto 140
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'.' => Shift goto 143
	"->" => Reduce #3 expression call assign_operator "&&"
[189]
	'(' => Shift goto 110
	')' => Reduce #3 expression call assign_operator "||"
	';' => Reduce #3 expression call assign_operator "||"
	',' => Reduce #3 expression call assign_operator "||"
	'&' => Shift goto 112
	'^' => Shift goto 113
	'=' => Reduce #3 expression call assign_operator "||"
	'[' => Shift goto 115
	']' => Reduce #3 expression call assign_operator "||"
	"+=" => Reduce #3 expression call assign_operator "||"
	"-=" => Reduce #3 expression call assign_operator "||"
	"*=" => Reduce #3 expression call assign_operator "||"
	"/=" => Reduce #3 expression call assign_operator "||"
	"%=" => Reduce #3 expression call assign_operator "||"
	"&&=" => Reduce #3 expression call assign_operator "||"
	"||=" => Reduce #3 expression call assign_operator "||"
	"&=" => Reduce #3 expression call assign_operator "||"
	"|=" => Reduce #3 expression call assign_operator "||"
	"<<=" => Reduce #3 expression call assign_operator "||"
	">>=" => Reduce #3 expression call assign_operator "||"
	"||" => Shift goto 127
	"&&" => Shift goto 128
	'|' => Shift goto 129
	"==" => Shift goto 130
	"!=" => Shift goto 131
	"<=" => Shift goto 132
	'<' => Shift goto 133
	">=" => Shift goto 134
	'>' => Shift goto 135
	'+' => Shift goto 136
	'-' => Shift goto 137
	'*' => Shift goto 138
	'/' => Shift goto 139
	'%' => Shift goto 140
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'.' => Shift goto 143
	"->" => Reduce #3 expression call assign_operator "||"
[190]
	'(' => Shift goto 110
	')' => Reduce #3 expression call assign_operator "&"
	';' => Reduce #3 expression call assign_operator "&"
	',' => Reduce #3 expression call assign_operator "&"
	'&' => Shift goto 112
	'^' => Shift goto 113
	'=' => Reduce #3 expression call assign_operator "&"
	'[' => Shift goto 115
	']' => Reduce #3 expression call assign_operator "&"
	"+=" => Reduce #3 expression call assign_operator "&"
	"-=" => Reduce #3 expression call assign_operator "&"
	"*=" => Reduce #3 expression call assign_operator "&"
	"/=" => Reduce #3 expression call assign_operator "&"
	"%=" => Reduce #3 expression call assign_operator "&"
	"&&=" => Reduce #3 expression call assign_operator "&"
	"||=" => Reduce #3 expression call assign_operator "&"
	"&=" => Reduce #3 expression call assign_operator "&"
	"|=" => Reduce #3 expression call assign_operator "&"
	"<<=" => Reduce #3 expression call assign_operator "&"
	">>=" => Reduce #3 expression call assign_operator "&"
	"||" => Shift goto 127
	"&&" => Shift goto 128
	'|' => Shift goto 129
	"==" => Shift goto 130
	"!=" => Shift goto 131
	"<=" => Shift goto 132
	'<' => Shift goto 133
	">=" => Shift goto 134
	'>' => Shift goto 135
	'+' => Shift goto 136
	'-' => Shift goto 137
	'*' => Shift goto 138
	'/' => Shift goto 139
	'%' => Shift goto 140
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'.' => Shift goto 143
	"->" => Reduce #3 expression call assign_operator "&"
[191]
	'(' => Shift goto 110
	')' => Reduce #3 expression call assign_operator "|"
	';' => Reduce #3 expression call assign_operator "|"
	',' => Reduce #3 expression call assign_operator "|"
	'&' => Shift goto 112
	'^' => Shift goto 113
	'=' => Reduce #3 expression call assign_operator "|"
	'[' => Shift goto 115
	']' => Reduce #3 expression call assign_operator "|"
	"+=" => Reduce #3 expression call assign_operator "|"
	"-=" => Reduce #3 expression call assign_operator "|"
	"*=" => Reduce #3 expression call assign_operator "|"
	"/=" => Reduce #3 expression call assign_operator "|"
	"%=" => Reduce #3 expression call assign_operator "|"
	"&&=" => Reduce #3 expression call assign_operator "|"
	"||=" => Reduce #3 expression call assign_operator "|"
	"&=" => Reduce #3 expression call assign_operator "|"
	"|=" => Reduce #3 expression call assign_operator "|"
	"<<=" => Reduce #3 expression call assign_operator "|"
	">>=" => Reduce #3 expression call assign_operator "|"
	"||" => Shift goto 127
	"&&" => Shift goto 128
	'|' => Shift goto 129
	"==" => Shift goto 130
	"!=" => Shift goto 131
	"<=" => Shift goto 132
	'<' => Shift goto 133
	">=" => Shift goto 134
	'>' => Shift goto 135
	'+' => Shift goto 136
	'-' => Shift goto 137
	'*' => Shift goto 138
	'/' => Shift goto 139
	'%' => Shift goto 140
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'.' => Shift goto 143
	"->" => Reduce #3 expression call assign_operator "|"
[192]
	'(' => Shift goto 110
	')' => Reduce #3 expression call assign_operator "<<"
	';' => Reduce #3 expression call assign_operator "<<"
	',' => Reduce #3 expression call assign_operator "<<"
	'&' => Shift goto 112
	'^' => Shift goto 113
	'=' => Reduce #3 expression call assign_operator "<<"
	'[' => Shift goto 115
	']' => Reduce #3 expression call assign_operator "<<"
	"+=" => Reduce #3 expression call assign_operator "<<"
	"-=" => Reduce #3 expression call assign_operator "<<"
	"*=" => Reduce #3 expression call assign_operator "<<"
	"/=" => Reduce #3 expression call assign_operator "<<"
	"%=" => Reduce #3 expression call assign_operator "<<"
	"&&=" => Reduce #3 expression call assign_operator "<<"
	"||=" => Reduce #3 expression call assign_operator "<<"
	"&=" => Reduce #3 expression call assign_operator "<<"
	"|=" => Reduce #3 expression call assign_operator "<<"
	"<<=" => Reduce #3 expression call assign_operator "<<"
	">>=" => Reduce #3 expression call assign_operator "<<"
	"||" => Shift goto 127
	"&&" => Shift goto 128
	'|' => Shift goto 129
	"==" => Shift goto 130
	"!=" => Shift goto 131
	"<=" => Shift goto 132
	'<' => Shift goto 133
	">=" => Shift goto 134
	'>' => Shift goto 135
	'+' => Shift goto 136
	'-' => Shift goto 137
	'*' => Shift goto 138
	'/' => Shift goto 139
	'%' => Shift goto 140
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'.' => Shift goto 143
	"->" => Reduce #3 expression call assign_operator "<<"
[193]
	'(' => Shift goto 110
	')' => Reduce #3 expression call assign_operator ">>"
	';' => Reduce #3 expression call assign_operator ">>"
	',' => Reduce #3 expression call assign_operator ">>"
	'&' => Shift goto 112
	'^' => Shift goto 113
	'=' => Reduce #3 expression call assign_operator ">>"
	'[' => Shift goto 115
	']' => Reduce #3 expression call assign_operator ">>"
	"+=" => Reduce #3 expression call assign_operator ">>"
	"-=" => Reduce #3 expression call assign_operator ">>"
	"*=" => Reduce #3 expression call assign_operator ">>"
	"/=" => Reduce #3 expression call assign_operator ">>"
	"%=" => Reduce #3 expression call assign_operator ">>"
	"&&=" => Reduce #3 expression call assign_operator ">>"
	"||=" => Reduce #3 expression call assign_operator ">>"
	"&=" => Reduce #3 expression call assign_operator ">>"
	"|=" => Reduce #3 expression call assign_operator ">>"
	"<<=" => Reduce #3 expression call assign_operator ">>"
	">>=" => Reduce #3 expression call assign_operator ">>"
	"||" => Shift goto 127
	"&&" => Shift goto 128
	'|' => Shift goto 129
	"==" => Shift goto 130
	"!=" => Shift goto 131
	"<=" => Shift goto 132
	'<' => Shift goto 133
	">=" => Shift goto 134
	'>' => Shift goto 135
	'+' => Shift goto 136
	'-' => Shift goto 137
	'*' => Shift goto 138
	'/' => Shift goto 139
	'%' => Shift goto 140
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'.' => Shift goto 143
	"->" => Reduce #3 expression call assign_operator ">>"
[194]
	'(' => Shift goto 110
	')' => Reduce #3 expression call operator "||"
	';' => Reduce #3 expression call operator "||"
	',' => Reduce #3 expression call operator "||"
	'&' => Shift goto 112
	'^' => Shift goto 113
	'=' => Reduce #3 expression call operator "||"
	'[' => Shift goto 115
	']' => Reduce #3 expression call operator "||"
	"+=" => Reduce #3 expression call operator "||"
	"-=" => Reduce #3 expression call operator "||"
	"*=" => Reduce #3 expression call operator "||"
	"/=" => Reduce #3 expression call operator "||"
	"%=" => Reduce #3 expression call operator "||"
	"&&=" => Reduce #3 expression call operator "||"
	"||=" => Reduce #3 expression call operator "||"
	"&=" => Reduce #3 expression call operator "||"
	"|=" => Reduce #3 expression call operator "||"
	"<<=" => Reduce #3 expression call operator "||"
	">>=" => Reduce #3 expression call operator "||"
	"||" => Reduce #3 expression call operator "||"
	"&&" => Shift goto 128
	'|' => Shift goto 129
	"==" => Shift goto 130
	"!=" => Shift goto 131
	"<=" => Shift goto 132
	'<' => Shift goto 133
	">=" => Shift goto 134
	'>' => Shift goto 135
	'+' => Shift goto 136
	'-' => Shift goto 137
	'*' => Shift goto 138
	'/' => Shift goto 139
	'%' => Shift goto 140
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'.' => Shift goto 143
	"->" => Reduce #3 expression call operator "||"
[195]
	'(' => Shift goto 110
	')' => Reduce #3 expression call operator "&&"
	';' => Reduce #3 expression call operator "&&"
	',' => Reduce #3 expression call operator "&&"
	'&' => Shift goto 112
	'^' => Shift goto 113
	'=' => Reduce #3 expression call operator "&&"
	'[' => Shift goto 115
	']' => Reduce #3 expression call operator "&&"
	"+=" => Reduce #3 expression call operator "&&"
	"-=" => Reduce #3 expression call operator "&&"
	"*=" => Reduce #3 expression call operator "&&"
	"/=" => Reduce #3 expression call operator "&&"
	"%=" => Reduce #3 expression call operator "&&"
	"&&=" => Reduce #3 expression call operator "&&"
	"||=" => Reduce #3 expression call operator "&&"
	"&=" => Reduce #3 expression call operator "&&"
	"|=" => Reduce #3 expression call operator "&&"
	"<<=" => Reduce #3 expression call operator "&&"
	">>=" => Reduce #3 expression call operator "&&"
	"||" => Reduce #3 expression call operator "&&"
	"&&" => Reduce #3 expression call operator "&&"
	'|' => Shift goto 129
	"==" => Shift goto 130
	"!=" => Shift goto 131
	"<=" => Shift goto 132
	'<' => Shift goto 133
	">=" => Shift goto 134
	'>' => Shift goto 135
	'+' => Shift goto 136
	'-' => Shift goto 137
	'*' => Shift goto 138
	'/' => Shift goto 139
	'%' => Shift goto 140
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'.' => Shift goto 143
	"->" => Reduce #3 expression call operator "&&"
[196]
	'(' => Shift goto 110
	')' => Reduce #3 expression call operator "|"
	';' => Reduce #3 expression call operator "|"
	',' => Reduce #3 expression call operator "|"
	'&' => Shift goto 112
	'^' => Shift goto 113
	'=' => Reduce #3 expression call operator "|"
	'[' => Shift goto 115
	']' => Reduce #3 expression call operator "|"
	"+=" => Reduce #3 expression call operator "|"
	"-=" => Reduce #3 expression call operator "|"
	"*=" => Reduce #3 expression call operator "|"
	"/=" => Reduce #3 expression call operator "|"
	"%=" => Reduce #3 expression call operator "|"
	"&&=" => Reduce #3 expression call operator "|"
	"||=" => Reduce #3 expression call operator "|"
	"&=" => Reduce #3 expression call operator "|"
	"|=" => Reduce #3 expression call operator "|"
	"<<=" => Reduce #3 expression call operator "|"
	">>=" => Reduce #3 expression call operator "|"
	"||" => Reduce #3 expression call operator "|"
	"&&" => Reduce #3 expression call operator "|"
	'|' => Reduce #3 expression call operator "|"
	"==" => Shift goto 130
	"!=" => Shift goto 131
	"<=" => Shift goto 132
	'<' => Shift goto 133
	">=" => Shift goto 134
	'>' => Shift goto 135
	'+' => Shift goto 136
	'-' => Shift goto 137
	'*' => Shift goto 138
	'/' => Shift goto 139
	'%' => Shift goto 140
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'.' => Shift goto 143
	"->" => Reduce #3 expression call operator "|"
[197]
	'(' => Shift goto 110
	')' => Reduce #3 expression call operator "=="
	';' => Reduce #3 expression call operator "=="
	',' => Reduce #3 expression call operator "=="
	'&' => Reduce #3 expression call operator "=="
	'^' => Reduce #3 expression call operator "=="
	'=' => Reduce #3 expression call operator "=="
	'[' => Shift goto 115
	']' => Reduce #3 expression call operator "=="
	"+=" => Reduce #3 expression call operator "=="
	"-=" => Reduce #3 expression call operator "=="
	"*=" => Reduce #3 expression call operator "=="
	"/=" => Reduce #3 expression call operator "=="
	"%=" => Reduce #3 expression call operator "=="
	"&&=" => Reduce #3 expression call operator "=="
	"||=" => Reduce #3 expression call operator "=="
	"&=" => Reduce #3 expression call operator "=="
	"|=" => Reduce #3 expression call operator "=="
	"<<=" => Reduce #3 expression call operator "=="
	">>=" => Reduce #3 expression call operator "=="
	"||" => Reduce #3 expression call operator "=="
	"&&" => Reduce #3 expression call operator "=="
	'|' => Reduce #3 expression call operator "=="
	"==" => Reduce #3 expression call operator "=="
	"!=" => Reduce #3 expression call operator "=="
	"<=" => Reduce #3 expression call operator "=="
	'<' => Reduce #3 expression call operator "=="
	">=" => Reduce #3 expression call operator "=="
	'>' => Reduce #3 expression call operator "=="
	'+' => Shift goto 136
	'-' => Shift goto 137
	'*' => Shift goto 138
	'/' => Shift goto 139
	'%' => Shift goto 140
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'.' => Shift goto 143
	"->" => Reduce #3 expression call operator "=="
[198]
	'(' => Shift goto 110
	')' => Reduce #3 expression call operator "!="
	';' => Reduce #3 expression call operator "!="
	',' => Reduce #3 expression call operator "!="
	'&' => Reduce #3 expression call operator "!="
	'^' => Reduce #3 expression call operator "!="
	'=' => Reduce #3 expression call operator "!="
	'[' => Shift goto 115
	']' => Reduce #3 expression call operator "!="
	"+=" => Reduce #3 expression call operator "!="
	"-=" => Reduce #3 expression call operator "!="
	"*=" => Reduce #3 expression call operator "!="
	"/=" => Reduce #3 expression call operator "!="
	"%=" => Reduce #3 expression call operator "!="
	"&&=" => Reduce #3 expression call operator "!="
	"||=" => Reduce #3 expression call operator "!="
	"&=" => Reduce #3 expression call operator "!="
	"|=" => Reduce #3 expression call operator "!="
	"<<=" => Reduce #3 expression call operator "!="
	">>=" => Reduce #3 expression call operator "!="
	"||" => Reduce #3 expression call operator "!="
	"&&" => Reduce #3 expression call operator "!="
	'|' => Reduce #3 expression call operator "!="
	"==" => Reduce #3 expression call operator "!="
	"!=" => Reduce #3 expression call operator "!="
	"<=" => Reduce #3 expression call operator "!="
	'<' => Reduce #3 expression call operator "!="
	">=" => Reduce #3 expression call operator "!="
	'>' => Reduce #3 expression call operator "!="
	'+' => Shift goto 136
	'-' => Shift goto 137
	'*' => Shift goto 138
	'/' => Shift goto 139
	'%' => Shift goto 140
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'.' => Shift goto 143
	"->" => Reduce #3 expression call operator "!="
[199]
	'(' => Shift goto 110
	')' => Reduce #3 expression call operator "<="
	';' => Reduce #3 expression call operator "<="
	',' => Reduce #3 expression call operator "<="
	'&' => Reduce #3 expression call operator "<="
	'^' => Reduce #3 expression call operator "<="
	'=' => Reduce #3 expression call operator "<="
	'[' => Shift goto 115
	']' => Reduce #3 expression call operator "<="
	"+=" => Reduce #3 expression call operator "<="
	"-=" => Reduce #3 expression call operator "<="
	"*=" => Reduce #3 expression call operator "<="
	"/=" => Reduce #3 expression call operator "<="
	"%=" => Reduce #3 expression call operator "<="
	"&&=" => Reduce #3 expression call operator "<="
	"||=" => Reduce #3 expression call operator "<="
	"&=" => Reduce #3 expression call operator "<="
	"|=" => Reduce #3 expression call operator "<="
	"<<=" => Reduce #3 expression call operator "<="
	">>=" => Reduce #3 expression call operator "<="
	"||" => Reduce #3 expression call operator "<="
	"&&" => Reduce #3 expression call operator "<="
	'|' => Reduce #3 expression call operator "<="
	"==" => Reduce #3 expression call operator "<="
	"!=" => Reduce #3 expression call operator "<="
	"<=" => Reduce #3 expression call operator "<="
	'<' => Reduce #3 expression call operator "<="
	">=" => Reduce #3 expression call operator "<="
	'>' => Reduce #3 expression call operator "<="
	'+' => Shift goto 136
	'-' => Shift goto 137
	'*' => Shift goto 138
	'/' => Shift goto 139
	'%' => Shift goto 140
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'.' => Shift goto 143
	"->" => Reduce #3 expression call operator "<="
[200]
	'(' => Shift goto 110
	')' => Reduce #3 expression call operator "<"
	';' => Reduce #3 expression call operator "<"
	',' => Reduce #3 expression call operator "<"
	'&' => Reduce #3 expression call operator "<"
	'^' => Reduce #3 expression call operator "<"
	'=' => Reduce #3 expression call operator "<"
	'[' => Shift goto 115
	']' => Reduce #3 expression call operator "<"
	"+=" => Reduce #3 expression call operator "<"
	"-=" => Reduce #3 expression call operator "<"
	"*=" => Reduce #3 expression call operator "<"
	"/=" => Reduce #3 expression call operator "<"
	"%=" => Reduce #3 expression call operator "<"
	"&&=" => Reduce #3 expression call operator "<"
	"||=" => Reduce #3 expression call operator "<"
	"&=" => Reduce #3 expression call operator "<"
	"|=" => Reduce #3 expression call operator "<"
	"<<=" => Reduce #3 expression call operator "<"
	">>=" => Reduce #3 expression call operator "<"
	"||" => Reduce #3 expression call operator "<"
	"&&" => Reduce #3 expression call operator "<"
	'|' => Reduce #3 expression call operator "<"
	"==" => Reduce #3 expression call operator "<"
	"!=" => Reduce #3 expression call operator "<"
	"<=" => Reduce #3 expression call operator "<"
	'<' => Reduce #3 expression call operator "<"
	">=" => Reduce #3 expression call operator "<"
	'>' => Reduce #3 expression call operator "<"
	'+' => Shift goto 136
	'-' => Shift goto 137
	'*' => Shift goto 138
	'/' => Shift goto 139
	'%' => Shift goto 140
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'.' => Shift goto 143
	"->" => Reduce #3 expression call operator "<"
[201]
	'(' => Shift goto 110
	')' => Reduce #3 expression call operator ">="
	';' => Reduce #3 expression call operator ">="
	',' => Reduce #3 expression call operator ">="
	'&' => Reduce #3 expression call operator ">="
	'^' => Reduce #3 expression call operator ">="
	'=' => Reduce #3 expression call operator ">="
	'[' => Shift goto 115
	']' => Reduce #3 expression call operator ">="
	"+=" => Reduce #3 expression call operator ">="
	"-=" => Reduce #3 expression call operator ">="
	"*=" => Reduce #3 expression call operator ">="
	"/=" => Reduce #3 expression call operator ">="
	"%=" => Reduce #3 expression call operator ">="
	"&&=" => Reduce #3 expression call operator ">="
	"||=" => Reduce #3 expression call operator ">="
	"&=" => Reduce #3 expression call operator ">="
	"|=" => Reduce #3 expression call operator ">="
	"<<=" => Reduce #3 expression call operator ">="
	">>=" => Reduce #3 expression call operator ">="
	"||" => Reduce #3 expression call operator ">="
	"&&" => Reduce #3 expression call operator ">="
	'|' => Reduce #3 expression call operator ">="
	"==" => Reduce #3 expression call operator ">="
	"!=" => Reduce #3 expression call operator ">="
	"<=" => Reduce #3 expression call operator ">="
	'<' => Reduce #3 expression call operator ">="
	">=" => Reduce #3 expression call operator ">="
	'>' => Reduce #3 expression call operator ">="
	'+' => Shift goto 136
	'-' => Shift goto 137
	'*' => Shift goto 138
	'/' => Shift goto 139
	'%' => Shift goto 140
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'.' => Shift goto 143
	"->" => Reduce #3 expression call operator ">="
[202]
	'(' => Shift goto 110
	')' => Reduce #3 expression call operator ">"
	';' => Reduce #3 expression call operator ">"
	',' => Reduce #3 expression call operator ">"
	'&' => Reduce #3 expression call operator ">"
	'^' => Reduce #3 expression call operator ">"
	'=' => Reduce #3 expression call operator ">"
	'[' => Shift goto 115
	']' => Reduce #3 expression call operator ">"
	"+=" => Reduce #3 expression call operator ">"
	"-=" => Reduce #3 expression call operator ">"
	"*=" => Reduce #3 expression call operator ">"
	"/=" => Reduce #3 expression call operator ">"
	"%=" => Reduce #3 expression call operator ">"
	"&&=" => Reduce #3 expression call operator ">"
	"||=" => Reduce #3 expression call operator ">"
	"&=" => Reduce #3 expression call operator ">"
	"|=" => Reduce #3 expression call operator ">"
	"<<=" => Reduce #3 expression call operator ">"
	">>=" => Reduce #3 expression call operator ">"
	"||" => Reduce #3 expression call operator ">"
	"&&" => Reduce #3 expression call operator ">"
	'|' => Reduce #3 expression call operator ">"
	"==" => Reduce #3 expression call operator ">"
	"!=" => Reduce #3 expression call operator ">"
	"<=" => Reduce #3 expression call operator ">"
	'<' => Reduce #3 expression call operator ">"
	">=" => Reduce #3 expression call operator ">"
	'>' => Reduce #3 expression call operator ">"
	'+' => Shift goto 136
	'-' => Shift goto 137
	'*' => Shift goto 138
	'/' => Shift goto 139
	'%' => Shift goto 140
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'.' => Shift goto 143
	"->" => Reduce #3 expression call operator ">"
[203]
	'(' => Shift goto 110
	')' => Reduce #3 expression call operator "+"
	';' => Reduce #3 expression call operator "+"
	',' => Reduce #3 expression call operator "+"
	'&' => Reduce #3 expression call operator "+"
	'^' => Reduce #3 expression call operator "+"
	'=' => Reduce #3 expression call operator "+"
	'[' => Shift goto 115
	']' => Reduce #3 expression call operator "+"
	"+=" => Reduce #3 expression call operator "+"
	"-=" => Reduce #3 expression call operator "+"
	"*=" => Reduce #3 expression call operator "+"
	"/=" => Reduce #3 expression call operator "+"
	"%=" => Reduce #3 expression call operator "+"
	"&&=" => Reduce #3 expression call operator "+"
	"||=" => Reduce #3 expression call operator "+"
	"&=" => Reduce #3 expression call operator "+"
	"|=" => Reduce #3 expression call operator "+"
	"<<=" => Reduce #3 expression call operator "+"
	">>=" => Reduce #3 expression call operator "+"
	"||" => Reduce #3 expression call operator "+"
	"&&" => Reduce #3 expression call operator "+"
	'|' => Reduce #3 expression call operator "+"
	"==" => Reduce #3 expression call operator "+"
	"!=" => Reduce #3 expression call operator "+"
	"<=" => Reduce #3 expression call operator "+"
	'<' => Reduce #3 expression call operator "+"
	">=" => Reduce #3 expression call operator "+"
	'>' => Reduce #3 expression call operator "+"
	'+' => Reduce #3 expression call operator "+"
	'-' => Reduce #3 expression call operator "+"
	'*' => Shift goto 138
	'/' => Shift goto 139
	'%' => Shift goto 140
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'.' => Shift goto 143
	"->" => Reduce #3 expression call operator "+"
[204]
	'(' => Shift goto 110
	')' => Reduce #3 expression call operator "-"
	';' => Reduce #3 expression call operator "-"
	',' => Reduce #3 expression call operator "-"
	'&' => Reduce #3 expression call operator "-"
	'^' => Reduce #3 expression call operator "-"
	'=' => Reduce #3 expression call operator "-"
	'[' => Shift goto 115
	']' => Reduce #3 expression call operator "-"
	"+=" => Reduce #3 expression call operator "-"
	"-=" => Reduce #3 expression call operator "-"
	"*=" => Reduce #3 expression call operator "-"
	"/=" => Reduce #3 expression call operator "-"
	"%=" => Reduce #3 expression call operator "-"
	"&&=" => Reduce #3 expression call operator "-"
	"||=" => Reduce #3 expression call operator "-"
	"&=" => Reduce #3 expression call operator "-"
	"|=" => Reduce #3 expression call operator "-"
	"<<=" => Reduce #3 expression call operator "-"
	">>=" => Reduce #3 expression call operator "-"
	"||" => Reduce #3 expression call operator "-"
	"&&" => Reduce #3 expression call operator "-"
	'|' => Reduce #3 expression call operator "-"
	"==" => Reduce #3 expression call operator "-"
	"!=" => Reduce #3 expression call operator "-"
	"<=" => Reduce #3 expression call operator "-"
	'<' => Reduce #3 expression call operator "-"
	">=" => Reduce #3 expression call operator "-"
	'>' => Reduce #3 expression call operator "-"
	'+' => Reduce #3 expression call operator "-"
	'-' => Reduce #3 expression call operator "-"
	'*' => Shift goto 138
	'/' => Shift goto 139
	'%' => Shift goto 140
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'.' => Shift goto 143
	"->" => Reduce #3 expression call operator "-"
[205]
	'(' => Shift goto 110
	')' => Reduce #3 expression call operator "*"
	';' => Reduce #3 expression call operator "*"
	',' => Reduce #3 expression call operator "*"
	'&' => Reduce #3 expression call operator "*"
	'^' => Reduce #3 expression call operator "*"
	'=' => Reduce #3 expression call operator "*"
	'[' => Shift goto 115
	']' => Reduce #3 expression call operator "*"
	"+=" => Reduce #3 expression call operator "*"
	"-=" => Reduce #3 expression call operator "*"
	"*=" => Reduce #3 expression call operator "*"
	"/=" => Reduce #3 expression call operator "*"
	"%=" => Reduce #3 expression call operator "*"
	"&&=" => Reduce #3 expression call operator "*"
	"||=" => Reduce #3 expression call operator "*"
	"&=" => Reduce #3 expression call operator "*"
	"|=" => Reduce #3 expression call operator "*"
	"<<=" => Reduce #3 expression call operator "*"
	">>=" => Reduce #3 expression call operator "*"
	"||" => Reduce #3 expression call operator "*"
	"&&" => Reduce #3 expression call operator "*"
	'|' => Reduce #3 expression call operator "*"
	"==" => Reduce #3 expression call operator "*"
	"!=" => Reduce #3 expression call operator "*"
	"<=" => Reduce #3 expression call operator "*"
	'<' => Reduce #3 expression call operator "*"
	">=" => Reduce #3 expression call operator "*"
	'>' => Reduce #3 expression call operator "*"
	'+' => Reduce #3 expression call operator "*"
	'-' => Reduce #3 expression call operator "*"
	'*' => Reduce #3 expression call operator "*"
	'/' => Reduce #3 expression call operator "*"
	'%' => Reduce #3 expression call operator "*"
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'.' => Shift goto 143
	"->" => Reduce #3 expression call operator "*"
[206]
	'(' => Shift goto 110
	')' => Reduce #3 expression call operator "/"
	';' => Reduce #3 expression call operator "/"
	',' => Reduce #3 expression call operator "/"
	'&' => Reduce #3 expression call operator "/"
	'^' => Reduce #3 expression call operator "/"
	'=' => Reduce #3 expression call operator "/"
	'[' => Shift goto 115
	']' => Reduce #3 expression call operator "/"
	"+=" => Reduce #3 expression call operator "/"
	"-=" => Reduce #3 expression call operator "/"
	"*=" => Reduce #3 expression call operator "/"
	"/=" => Reduce #3 expression call operator "/"
	"%=" => Reduce #3 expression call operator "/"
	"&&=" => Reduce #3 expression call operator "/"
	"||=" => Reduce #3 expression call operator "/"
	"&=" => Reduce #3 expression call operator "/"
	"|=" => Reduce #3 expression call operator "/"
	"<<=" => Reduce #3 expression call operator "/"
	">>=" => Reduce #3 expression call operator "/"
	"||" => Reduce #3 expression call operator "/"
	"&&" => Reduce #3 expression call operator "/"
	'|' => Reduce #3 expression call operator "/"
	"==" => Reduce #3 expression call operator "/"
	"!=" => Reduce #3 expression call operator "/"
	"<=" => Reduce #3 expression call operator "/"
	'<' => Reduce #3 expression call operator "/"
	">=" => Reduce #3 expression call operator "/"
	'>' => Reduce #3 expression call operator "/"
	'+' => Reduce #3 expression call operator "/"
	'-' => Reduce #3 expression call operator "/"
	'*' => Reduce #3 expression call operator "/"
	'/' => Reduce #3 expression call operator "/"
	'%' => Reduce #3 expression call operator "/"
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'.' => Shift goto 143
	"->" => Reduce #3 expression call operator "/"
[207]
	'(' => Shift goto 110
	')' => Reduce #3 expression call operator "%"
	';' => Reduce #3 expression call operator "%"
	',' => Reduce #3 expression call operator "%"
	'&' => Reduce #3 expression call operator "%"
	'^' => Reduce #3 expression call operator "%"
	'=' => Reduce #3 expression call operator "%"
	'[' => Shift goto 115
	']' => Reduce #3 expression call operator "%"
	"+=" => Reduce #3 expression call operator "%"
	"-=" => Reduce #3 expression call operator "%"
	"*=" => Reduce #3 expression call operator "%"
	"/=" => Reduce #3 expression call operator "%"
	"%=" => Reduce #3 expression call operator "%"
	"&&=" => Reduce #3 expression call operator "%"
	"||=" => Reduce #3 expression call operator "%"
	"&=" => Reduce #3 expression call operator "%"
	"|=" => Reduce #3 expression call operator "%"
	"<<=" => Reduce #3 expression call operator "%"
	">>=" => Reduce #3 expression call operator "%"
	"||" => Reduce #3 expression call operator "%"
	"&&" => Reduce #3 expression call operator "%"
	'|' => Reduce #3 expression call operator "%"
	"==" => Reduce #3 expression call operator "%"
	"!=" => Reduce #3 expression call operator "%"
	"<=" => Reduce #3 expression call operator "%"
	'<' => Reduce #3 expression call operator "%"
	">=" => Reduce #3 expression call operator "%"
	'>' => Reduce #3 expression call operator "%"
	'+' => Reduce #3 expression call operator "%"
	'-' => Reduce #3 expression call operator "%"
	'*' => Reduce #3 expression call operator "%"
	'/' => Reduce #3 expression call operator "%"
	'%' => Reduce #3 expression call operator "%"
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'.' => Shift goto 143
	"->" => Reduce #3 expression call operator "%"
[208]
	'(' => Shift goto 110
	')' => Reduce #3 expression call operator "<<"
	';' => Reduce #3 expression call operator "<<"
	',' => Reduce #3 expression call operator "<<"
	'&' => Reduce #3 expression call operator "<<"
	'^' => Reduce #3 expression call operator "<<"
	'=' => Reduce #3 expression call operator "<<"
	'[' => Shift goto 115
	']' => Reduce #3 expression call operator "<<"
	"+=" => Reduce #3 expression call operator "<<"
	"-=" => Reduce #3 expression call operator "<<"
	"*=" => Reduce #3 expression call operator "<<"
	"/=" => Reduce #3 expression call operator "<<"
	"%=" => Reduce #3 expression call operator "<<"
	"&&=" => Reduce #3 expression call operator "<<"
	"||=" => Reduce #3 expression call operator "<<"
	"&=" => Reduce #3 expression call operator "<<"
	"|=" => Reduce #3 expression call operator "<<"
	"<<=" => Reduce #3 expression call operator "<<"
	">>=" => Reduce #3 expression call operator "<<"
	"||" => Reduce #3 expression call operator "<<"
	"&&" => Reduce #3 expression call operator "<<"
	'|' => Reduce #3 expression call operator "<<"
	"==" => Reduce #3 expression call operator "<<"
	"!=" => Reduce #3 expression call operator "<<"
	"<=" => Reduce #3 expression call operator "<<"
	'<' => Reduce #3 expression call operator "<<"
	">=" => Reduce #3 expression call operator "<<"
	'>' => Reduce #3 expression call operator "<<"
	'+' => Reduce #3 expression call operator "<<"
	'-' => Reduce #3 expression call operator "<<"
	'*' => Reduce #3 expression call operator "<<"
	'/' => Reduce #3 expression call operator "<<"
	'%' => Reduce #3 expression call operator "<<"
	"<<" => Reduce #3 expression call operator "<<"
	">>" => Reduce #3 expression call operator "<<"
	'.' => Shift goto 143
	"->" => Reduce #3 expression call operator "<<"
[209]
	'(' => Shift goto 110
	')' => Reduce #3 expression call operator ">>"
	';' => Reduce #3 expression call operator ">>"
	',' => Reduce #3 expression call operator ">>"
	'&' => Reduce #3 expression call operator ">>"
	'^' => Reduce #3 expression call operator ">>"
	'=' => Reduce #3 expression call operator ">>"
	'[' => Shift goto 115
	']' => Reduce #3 expression call operator ">>"
	"+=" => Reduce #3 expression call operator ">>"
	"-=" => Reduce #3 expression call operator ">>"
	"*=" => Reduce #3 expression call operator ">>"
	"/=" => Reduce #3 expression call operator ">>"
	"%=" => Reduce #3 expression call operator ">>"
	"&&=" => Reduce #3 expression call operator ">>"
	"||=" => Reduce #3 expression call operator ">>"
	"&=" => Reduce #3 expression call operator ">>"
	"|=" => Reduce #3 expression call operator ">>"
	"<<=" => Reduce #3 expression call operator ">>"
	">>=" => Reduce #3 expression call operator ">>"
	"||" => Reduce #3 expression call operator ">>"
	"&&" => Reduce #3 expression call operator ">>"
	'|' => Reduce #3 expression call operator ">>"
	"==" => Reduce #3 expression call operator ">>"
	"!=" => Reduce #3 expression call operator ">>"
	"<=" => Reduce #3 expression call operator ">>"
	'<' => Reduce #3 expression call operator ">>"
	">=" => Reduce #3 expression call operator ">>"
	'>' => Reduce #3 expression call operator ">>"
	'+' => Reduce #3 expression call operator ">>"
	'-' => Reduce #3 expression call operator ">>"
	'*' => Reduce #3 expression call operator ">>"
	'/' => Reduce #3 expression call operator ">>"
	'%' => Reduce #3 expression call operator ">>"
	"<<" => Reduce #3 expression call operator ">>"
	">>" => Reduce #3 expression call operator ">>"
	'.' => Shift goto 143
	"->" => Reduce #3 expression call operator ">>"
[210]
	'(' => Reduce #3 expression call member
	')' => Reduce #3 expression call member
	';' => Reduce #3 expression call member
	',' => Reduce #3 expression call member
	'&' => Reduce #3 expression call member
	'^' => Reduce #3 expression call member
	'=' => Reduce #3 expression call member
	'[' => Reduce #3 expression call member
	']' => Reduce #3 expression call member
	"+=" => Reduce #3 expression call member
	"-=" => Reduce #3 expression call member
	"*=" => Reduce #3 expression call member
	"/=" => Reduce #3 expression call member
	"%=" => Reduce #3 expression call member
	"&&=" => Reduce #3 expression call member
	"||=" => Reduce #3 expression call member
	"&=" => Reduce #3 expression call member
	"|=" => Reduce #3 expression call member
	"<<=" => Reduce #3 expression call member
	">>=" => Reduce #3 expression call member
	"||" => Reduce #3 expression call member
	"&&" => Reduce #3 expression call member
	'|' => Reduce #3 expression call member
	"==" => Reduce #3 expression call member
	"!=" => Reduce #3 expression call member
	"<=" => Reduce #3 expression call member
	'<' => Reduce #3 expression call member
	">=" => Reduce #3 expression call member
	'>' => Reduce #3 expression call member
	'+' => Reduce #3 expression call member
	'-' => Reduce #3 expression call member
	'*' => Reduce #3 expression call member
	'/' => Reduce #3 expression call member
	'%' => Reduce #3 expression call member
	"<<" => Reduce #3 expression call member
	">>" => Reduce #3 expression call member
	'.' => Reduce #3 expression call member
	"->" => Reduce #3 expression call member
[211]
	IDENT => Reduce #2 indirection call count
[212]
	'(' => Reduce #3 expression
	')' => Reduce #3 expression
	';' => Reduce #3 expression
	',' => Reduce #3 expression
	'&' => Reduce #3 expression
	'^' => Reduce #3 expression
	'=' => Reduce #3 expression
	'[' => Reduce #3 expression
	']' => Reduce #3 expression
	"+=" => Reduce #3 expression
	"-=" => Reduce #3 expression
	"*=" => Reduce #3 expression
	"/=" => Reduce #3 expression
	"%=" => Reduce #3 expression
	"&&=" => Reduce #3 expression
	"||=" => Reduce #3 expression
	"&=" => Reduce #3 expression
	"|=" => Reduce #3 expression
	"<<=" => Reduce #3 expression
	">>=" => Reduce #3 expression
	"||" => Reduce #3 expression
	"&&" => Reduce #3 expression
	'|' => Reduce #3 expression
	"==" => Reduce #3 expression
	"!=" => Reduce #3 expression
	"<=" => Reduce #3 expression
	'<' => Reduce #3 expression
	">=" => Reduce #3 expression
	'>' => Reduce #3 expression
	'+' => Reduce #3 expression
	'-' => Reduce #3 expression
	'*' => Reduce #3 expression
	'/' => Reduce #3 expression
	'%' => Reduce #3 expression
	"<<" => Reduce #3 expression
	">>" => Reduce #3 expression
	'.' => Reduce #3 expression
	"->" => Reduce #3 expression
[213]
	$ => Reduce #3 statement
	BOOLEAN => Reduce #3 statement
	IDENT => Reduce #3 statement
	DQSTRING => Reduce #3 statement
	SQSTRING => Reduce #3 statement
	CARDINAL => Reduce #3 statement
	INTEGER => Reduce #3 statement
	FLOAT => Reduce #3 statement
	"function" => Reduce #3 statement
	'(' => Reduce #3 statement
	"procedure" => Reduce #3 statement
	'{' => Reduce #3 statement
	'}' => Reduce #3 statement
	'&' => Reduce #3 statement
	"typedef" => Reduce #3 statement
	"private" => Reduce #3 statement
	"public" => Reduce #3 statement
	"var" => Reduce #3 statement
	"return" => Reduce #3 statement
	"if" => Reduce #3 statement
	"while" => Reduce #3 statement
	'+' => Reduce #3 statement
	'-' => Reduce #3 statement
	'~' => Reduce #3 statement
	'!' => Reduce #3 statement
	'*' => Reduce #3 statement
[214]
	$ => Reduce #3 statement call definition
	BOOLEAN => Reduce #3 statement call definition
	IDENT => Reduce #3 statement call definition
	DQSTRING => Reduce #3 statement call definition
	SQSTRING => Reduce #3 statement call definition
	CARDINAL => Reduce #3 statement call definition
	INTEGER => Reduce #3 statement call definition
	FLOAT => Reduce #3 statement call definition
	"function" => Reduce #3 statement call definition
	'(' => Reduce #3 statement call definition
	"procedure" => Reduce #3 statement call definition
	'{' => Reduce #3 statement call definition
	'}' => Reduce #3 statement call definition
	'&' => Reduce #3 statement call definition
	"typedef" => Reduce #3 statement call definition
	"private" => Reduce #3 statement call definition
	"public" => Reduce #3 statement call definition
	"var" => Reduce #3 statement call definition
	"return" => Reduce #3 statement call definition
	"if" => Reduce #3 statement call definition
	"while" => Reduce #3 statement call definition
	'+' => Reduce #3 statement call definition
	'-' => Reduce #3 statement call definition
	'~' => Reduce #3 statement call definition
	'!' => Reduce #3 statement call definition
	'*' => Reduce #3 statement call definition
[215]
	$ => Reduce #3 statement call return_value
	BOOLEAN => Reduce #3 statement call return_value
	IDENT => Reduce #3 statement call return_value
	DQSTRING => Reduce #3 statement call return_value
	SQSTRING => Reduce #3 statement call return_value
	CARDINAL => Reduce #3 statement call return_value
	INTEGER => Reduce #3 statement call return_value
	FLOAT => Reduce #3 statement call return_value
	"function" => Reduce #3 statement call return_value
	'(' => Reduce #3 statement call return_value
	"procedure" => Reduce #3 statement call return_value
	'{' => Reduce #3 statement call return_value
	'}' => Reduce #3 statement call return_value
	'&' => Reduce #3 statement call return_value
	"typedef" => Reduce #3 statement call return_value
	"private" => Reduce #3 statement call return_value
	"public" => Reduce #3 statement call return_value
	"var" => Reduce #3 statement call return_value
	"return" => Reduce #3 statement call return_value
	"if" => Reduce #3 statement call return_value
	"while" => Reduce #3 statement call return_value
	'+' => Reduce #3 statement call return_value
	'-' => Reduce #3 statement call return_value
	'~' => Reduce #3 statement call return_value
	'!' => Reduce #3 statement call return_value
	'*' => Reduce #3 statement call return_value
[216]
	'(' => Shift goto 110
	')' => Shift goto 230
	'&' => Shift goto 112
	'^' => Shift goto 113
	'=' => Shift goto 114
	'[' => Shift goto 115
	"+=" => Shift goto 116
	"-=" => Shift goto 117
	"*=" => Shift goto 118
	"/=" => Shift goto 119
	"%=" => Shift goto 120
	"&&=" => Shift goto 121
	"||=" => Shift goto 122
	"&=" => Shift goto 123
	"|=" => Shift goto 124
	"<<=" => Shift goto 125
	">>=" => Shift goto 126
	"||" => Shift goto 127
	"&&" => Shift goto 128
	'|' => Shift goto 129
	"==" => Shift goto 130
	"!=" => Shift goto 131
	"<=" => Shift goto 132
	'<' => Shift goto 133
	">=" => Shift goto 134
	'>' => Shift goto 135
	'+' => Shift goto 136
	'-' => Shift goto 137
	'*' => Shift goto 138
	'/' => Shift goto 139
	'%' => Shift goto 140
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'.' => Shift goto 143
	"->" => Shift goto 144
[217]
	'(' => Shift goto 110
	')' => Shift goto 231
	'&' => Shift goto 112
	'^' => Shift goto 113
	'=' => Shift goto 114
	'[' => Shift goto 115
	"+=" => Shift goto 116
	"-=" => Shift goto 117
	"*=" => Shift goto 118
	"/=" => Shift goto 119
	"%=" => Shift goto 120
	"&&=" => Shift goto 121
	"||=" => Shift goto 122
	"&=" => Shift goto 123
	"|=" => Shift goto 124
	"<<=" => Shift goto 125
	">>=" => Shift goto 126
	"||" => Shift goto 127
	"&&" => Shift goto 128
	'|' => Shift goto 129
	"==" => Shift goto 130
	"!=" => Shift goto 131
	"<=" => Shift goto 132
	'<' => Shift goto 133
	">=" => Shift goto 134
	'>' => Shift goto 135
	'+' => Shift goto 136
	'-' => Shift goto 137
	'*' => Shift goto 138
	'/' => Shift goto 139
	'%' => Shift goto 140
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'.' => Shift goto 143
	"->" => Shift goto 144
[218]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 79
	'+' => Shift goto 84
	'-' => Shift goto 85
	'~' => Shift goto 86
	'!' => Shift goto 87
	'*' => Shift goto 88
[219]
	')' => Reduce #2 paramdecl call paramdef
	',' => Reduce #2 paramdecl call paramdef
[220]
	'{' => Shift goto 233
[221]
	IDENT => Shift goto 17
	')' => Reduce #0 parameters
	"const" => Shift goto 18
[222]
	'(' => Shift goto 235
[223]
	IDENT => Shift goto 17
	')' => Reduce #0 parameters
	"const" => Shift goto 18
[224]
	')' => Shift goto 237
[225]
	';' => Shift goto 238
[226]
	IDENT => Shift goto 17
	')' => Reduce #0 externparameters
	"const" => Shift goto 18
[227]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	')' => Reduce #0 expressionlist
	'&' => Shift goto 79
	']' => Reduce #0 expressionlist
	'+' => Shift goto 84
	'-' => Shift goto 85
	'~' => Shift goto 86
	'!' => Shift goto 87
	'*' => Shift goto 88
[228]
	'(' => Reduce #4 expression call operator "()"
	')' => Reduce #4 expression call operator "()"
	';' => Reduce #4 expression call operator "()"
	',' => Reduce #4 expression call operator "()"
	'&' => Reduce #4 expression call operator "()"
	'^' => Reduce #4 expression call operator "()"
	'=' => Reduce #4 expression call operator "()"
	'[' => Reduce #4 expression call operator "()"
	']' => Reduce #4 expression call operator "()"
	"+=" => Reduce #4 expression call operator "()"
	"-=" => Reduce #4 expression call operator "()"
	"*=" => Reduce #4 expression call operator "()"
	"/=" => Reduce #4 expression call operator "()"
	"%=" => Reduce #4 expression call operator "()"
	"&&=" => Reduce #4 expression call operator "()"
	"||=" => Reduce #4 expression call operator "()"
	"&=" => Reduce #4 expression call operator "()"
	"|=" => Reduce #4 expression call operator "()"
	"<<=" => Reduce #4 expression call operator "()"
	">>=" => Reduce #4 expression call operator "()"
	"||" => Reduce #4 expression call operator "()"
	"&&" => Reduce #4 expression call operator "()"
	'|' => Reduce #4 expression call operator "()"
	"==" => Reduce #4 expression call operator "()"
	"!=" => Reduce #4 expression call operator "()"
	"<=" => Reduce #4 expression call operator "()"
	'<' => Reduce #4 expression call operator "()"
	">=" => Reduce #4 expression call operator "()"
	'>' => Reduce #4 expression call operator "()"
	'+' => Reduce #4 expression call operator "()"
	'-' => Reduce #4 expression call operator "()"
	'*' => Reduce #4 expression call operator "()"
	'/' => Reduce #4 expression call operator "()"
	'%' => Reduce #4 expression call operator "()"
	"<<" => Reduce #4 expression call operator "()"
	">>" => Reduce #4 expression call operator "()"
	'.' => Reduce #4 expression call operator "()"
	"->" => Reduce #4 expression call operator "()"
[229]
	'(' => Reduce #4 expression call operator "[]"
	')' => Reduce #4 expression call operator "[]"
	';' => Reduce #4 expression call operator "[]"
	',' => Reduce #4 expression call operator "[]"
	'&' => Reduce #4 expression call operator "[]"
	'^' => Reduce #4 expression call operator "[]"
	'=' => Reduce #4 expression call operator "[]"
	'[' => Reduce #4 expression call operator "[]"
	']' => Reduce #4 expression call operator "[]"
	"+=" => Reduce #4 expression call operator "[]"
	"-=" => Reduce #4 expression call operator "[]"
	"*=" => Reduce #4 expression call operator "[]"
	"/=" => Reduce #4 expression call operator "[]"
	"%=" => Reduce #4 expression call operator "[]"
	"&&=" => Reduce #4 expression call operator "[]"
	"||=" => Reduce #4 expression call operator "[]"
	"&=" => Reduce #4 expression call operator "[]"
	"|=" => Reduce #4 expression call operator "[]"
	"<<=" => Reduce #4 expression call operator "[]"
	">>=" => Reduce #4 expression call operator "[]"
	"||" => Reduce #4 expression call operator "[]"
	"&&" => Reduce #4 expression call operator "[]"
	'|' => Reduce #4 expression call operator "[]"
	"==" => Reduce #4 expression call operator "[]"
	"!=" => Reduce #4 expression call operator "[]"
	"<=" => Reduce #4 expression call operator "[]"
	'<' => Reduce #4 expression call operator "[]"
	">=" => Reduce #4 expression call operator "[]"
	'>' => Reduce #4 expression call operator "[]"
	'+' => Reduce #4 expression call operator "[]"
	'-' => Reduce #4 expression call operator "[]"
	'*' => Reduce #4 expression call operator "[]"
	'/' => Reduce #4 expression call operator "[]"
	'%' => Reduce #4 expression call operator "[]"
	"<<" => Reduce #4 expression call operator "[]"
	">>" => Reduce #4 expression call operator "[]"
	'.' => Reduce #4 expression call operator "[]"
	"->" => Reduce #4 expression call operator "[]"
[230]
	'{' => Shift goto 241
[231]
	'{' => Shift goto 242
[232]
	'(' => Shift goto 110
	';' => Reduce #7 variabledefinition call vardef_array_assign
	'&' => Shift goto 112
	'^' => Shift goto 113
	'=' => Shift goto 114
	'[' => Shift goto 115
	"+=" => Shift goto 116
	"-=" => Shift goto 117
	"*=" => Shift goto 118
	"/=" => Shift goto 119
	"%=" => Shift goto 120
	"&&=" => Shift goto 121
	"||=" => Shift goto 122
	"&=" => Shift goto 123
	"|=" => Shift goto 124
	"<<=" => Shift goto 125
	">>=" => Shift goto 126
	"||" => Shift goto 127
	"&&" => Shift goto 128
	'|' => Shift goto 129
	"==" => Shift goto 130
	"!=" => Shift goto 131
	"<=" => Shift goto 132
	'<' => Shift goto 133
	">=" => Shift goto 134
	'>' => Shift goto 135
	'+' => Shift goto 136
	'-' => Shift goto 137
	'*' => Shift goto 138
	'/' => Shift goto 139
	'%' => Shift goto 140
	"<<" => Shift goto 141
	">>" => Shift goto 142
	'.' => Shift goto 143
	"->" => Shift goto 144
[233]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	"function" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	'(' => Shift goto 77
	"procedure" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	'{' => Shift goto 78
	'}' => Reduce #0 statementlist
	'&' => Shift goto 79
	"typedef" => Shift goto 19
	"private" => Shift goto 23
	"public" => Shift goto 24
	"var" => Shift goto 80
	"return" => Shift goto 81
	"if" => Shift goto 82
	"while" => Shift goto 83
	'+' => Shift goto 84
	'-' => Shift goto 85
	'~' => Shift goto 86
	'!' => Shift goto 87
	'*' => Shift goto 88
[234]
	')' => Reduce #3 parameters
[235]
	IDENT => Shift goto 17
	')' => Reduce #0 parameters
	"const" => Shift goto 18
[236]
	')' => Shift goto 245
[237]
	';' => Shift goto 246
[238]
	$ => Reduce #8 externdefinition call extern_procdef
	IDENT => Reduce #8 externdefinition call extern_procdef
	"extern" => Reduce #8 externdefinition call extern_procdef
	"function" => Reduce #8 externdefinition call extern_procdef
	"procedure" => Reduce #8 externdefinition call extern_procdef
	"main" => Reduce #8 externdefinition call extern_procdef
	"const" => Reduce #8 externdefinition call extern_procdef
	"typedef" => Reduce #8 externdefinition call extern_procdef
	"struct" => Reduce #8 externdefinition call extern_procdef
	"interface" => Reduce #8 externdefinition call extern_procdef
	"class" => Reduce #8 externdefinition call extern_procdef
	"private" => Reduce #8 externdefinition call extern_procdef
	"public" => Reduce #8 externdefinition call extern_procdef
[239]
	')' => Reduce #3 externparameters
[240]
	')' => Reduce #3 expressionlist
	']' => Reduce #3 expressionlist
[241]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	"function" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	'(' => Shift goto 77
	"procedure" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	'{' => Shift goto 78
	'}' => Reduce #0 statementlist
	'&' => Shift goto 79
	"typedef" => Shift goto 19
	"private" => Shift goto 23
	"public" => Shift goto 24
	"var" => Shift goto 80
	"return" => Shift goto 81
	"if" => Shift goto 82
	"while" => Shift goto 83
	'+' => Shift goto 84
	'-' => Shift goto 85
	'~' => Shift goto 86
	'!' => Shift goto 87
	'*' => Shift goto 88
[242]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	"function" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	'(' => Shift goto 77
	"procedure" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	'{' => Shift goto 78
	'}' => Reduce #0 statementlist
	'&' => Shift goto 79
	"typedef" => Shift goto 19
	"private" => Shift goto 23
	"public" => Shift goto 24
	"var" => Shift goto 80
	"return" => Shift goto 81
	"if" => Shift goto 82
	"while" => Shift goto 83
	'+' => Shift goto 84
	'-' => Shift goto 85
	'~' => Shift goto 86
	'!' => Shift goto 87
	'*' => Shift goto 88
[243]
	'}' => Shift goto 249
[244]
	')' => Shift goto 250
[245]
	';' => Shift goto 251
[246]
	$ => Reduce #9 externdefinition call extern_funcdef
	IDENT => Reduce #9 externdefinition call extern_funcdef
	"extern" => Reduce #9 externdefinition call extern_funcdef
	"function" => Reduce #9 externdefinition call extern_funcdef
	"procedure" => Reduce #9 externdefinition call extern_funcdef
	"main" => Reduce #9 externdefinition call extern_funcdef
	"const" => Reduce #9 externdefinition call extern_funcdef
	"typedef" => Reduce #9 externdefinition call extern_funcdef
	"struct" => Reduce #9 externdefinition call extern_funcdef
	"interface" => Reduce #9 externdefinition call extern_funcdef
	"class" => Reduce #9 externdefinition call extern_funcdef
	"private" => Reduce #9 externdefinition call extern_funcdef
	"public" => Reduce #9 externdefinition call extern_funcdef
[247]
	'}' => Shift goto 252
[248]
	'}' => Shift goto 253
[249]
	$ => Reduce #6 callablebody call callablebody
	BOOLEAN => Reduce #6 callablebody call callablebody
	IDENT => Reduce #6 callablebody call callablebody
	DQSTRING => Reduce #6 callablebody call callablebody
	SQSTRING => Reduce #6 callablebody call callablebody
	CARDINAL => Reduce #6 callablebody call callablebody
	INTEGER => Reduce #6 callablebody call callablebody
	FLOAT => Reduce #6 callablebody call callablebody
	"function" => Reduce #6 callablebody call callablebody
	'(' => Reduce #6 callablebody call callablebody
	"procedure" => Reduce #6 callablebody call callablebody
	"main" => Reduce #6 callablebody call callablebody
	'{' => Reduce #6 callablebody call callablebody
	'}' => Reduce #6 callablebody call callablebody
	"const" => Reduce #6 callablebody call callablebody
	'&' => Reduce #6 callablebody call callablebody
	"typedef" => Reduce #6 callablebody call callablebody
	"struct" => Reduce #6 callablebody call callablebody
	"interface" => Reduce #6 callablebody call callablebody
	"class" => Reduce #6 callablebody call callablebody
	"private" => Reduce #6 callablebody call callablebody
	"public" => Reduce #6 callablebody call callablebody
	"var" => Reduce #6 callablebody call callablebody
	"return" => Reduce #6 callablebody call callablebody
	"if" => Reduce #6 callablebody call callablebody
	"while" => Reduce #6 callablebody call callablebody
	'+' => Reduce #6 callablebody call callablebody
	'-' => Reduce #6 callablebody call callablebody
	'~' => Reduce #6 callablebody call callablebody
	'!' => Reduce #6 callablebody call callablebody
	'*' => Reduce #6 callablebody call callablebody
[250]
	';' => Shift goto 254
[251]
	$ => Reduce #6 methoddefinition call interface_procdef
	"function" => Reduce #6 methoddefinition call interface_procdef
	"procedure" => Reduce #6 methoddefinition call interface_procdef
	'}' => Reduce #6 methoddefinition call interface_procdef
[252]
	$ => Reduce #7 statement call conditional_if
	BOOLEAN => Reduce #7 statement call conditional_if
	IDENT => Reduce #7 statement call conditional_if
	DQSTRING => Reduce #7 statement call conditional_if
	SQSTRING => Reduce #7 statement call conditional_if
	CARDINAL => Reduce #7 statement call conditional_if
	INTEGER => Reduce #7 statement call conditional_if
	FLOAT => Reduce #7 statement call conditional_if
	"function" => Reduce #7 statement call conditional_if
	'(' => Reduce #7 statement call conditional_if
	"procedure" => Reduce #7 statement call conditional_if
	'{' => Reduce #7 statement call conditional_if
	'}' => Reduce #7 statement call conditional_if
	'&' => Reduce #7 statement call conditional_if
	"typedef" => Reduce #7 statement call conditional_if
	"private" => Reduce #7 statement call conditional_if
	"public" => Reduce #7 statement call conditional_if
	"var" => Reduce #7 statement call conditional_if
	"return" => Reduce #7 statement call conditional_if
	"if" => Reduce #7 statement call conditional_if
	"else" => Shift goto 255
	"while" => Reduce #7 statement call conditional_if
	'+' => Reduce #7 statement call conditional_if
	'-' => Reduce #7 statement call conditional_if
	'~' => Reduce #7 statement call conditional_if
	'!' => Reduce #7 statement call conditional_if
	'*' => Reduce #7 statement call conditional_if
[253]
	$ => Reduce #7 statement call conditional_while
	BOOLEAN => Reduce #7 statement call conditional_while
	IDENT => Reduce #7 statement call conditional_while
	DQSTRING => Reduce #7 statement call conditional_while
	SQSTRING => Reduce #7 statement call conditional_while
	CARDINAL => Reduce #7 statement call conditional_while
	INTEGER => Reduce #7 statement call conditional_while
	FLOAT => Reduce #7 statement call conditional_while
	"function" => Reduce #7 statement call conditional_while
	'(' => Reduce #7 statement call conditional_while
	"procedure" => Reduce #7 statement call conditional_while
	'{' => Reduce #7 statement call conditional_while
	'}' => Reduce #7 statement call conditional_while
	'&' => Reduce #7 statement call conditional_while
	"typedef" => Reduce #7 statement call conditional_while
	"private" => Reduce #7 statement call conditional_while
	"public" => Reduce #7 statement call conditional_while
	"var" => Reduce #7 statement call conditional_while
	"return" => Reduce #7 statement call conditional_while
	"if" => Reduce #7 statement call conditional_while
	"while" => Reduce #7 statement call conditional_while
	'+' => Reduce #7 statement call conditional_while
	'-' => Reduce #7 statement call conditional_while
	'~' => Reduce #7 statement call conditional_while
	'!' => Reduce #7 statement call conditional_while
	'*' => Reduce #7 statement call conditional_while
[254]
	$ => Reduce #7 methoddefinition call interface_funcdef
	"function" => Reduce #7 methoddefinition call interface_funcdef
	"procedure" => Reduce #7 methoddefinition call interface_funcdef
	'}' => Reduce #7 methoddefinition call interface_funcdef
[255]
	'{' => Shift goto 256
[256]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	"function" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	'(' => Shift goto 77
	"procedure" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	'{' => Shift goto 78
	'}' => Reduce #0 statementlist
	'&' => Shift goto 79
	"typedef" => Shift goto 19
	"private" => Shift goto 23
	"public" => Shift goto 24
	"var" => Shift goto 80
	"return" => Shift goto 81
	"if" => Shift goto 82
	"while" => Shift goto 83
	'+' => Shift goto 84
	'-' => Shift goto 85
	'~' => Shift goto 86
	'!' => Shift goto 87
	'*' => Shift goto 88
[257]
	'}' => Shift goto 258
[258]
	$ => Reduce #11 statement call conditional_if_else
	BOOLEAN => Reduce #11 statement call conditional_if_else
	IDENT => Reduce #11 statement call conditional_if_else
	DQSTRING => Reduce #11 statement call conditional_if_else
	SQSTRING => Reduce #11 statement call conditional_if_else
	CARDINAL => Reduce #11 statement call conditional_if_else
	INTEGER => Reduce #11 statement call conditional_if_else
	FLOAT => Reduce #11 statement call conditional_if_else
	"function" => Reduce #11 statement call conditional_if_else
	'(' => Reduce #11 statement call conditional_if_else
	"procedure" => Reduce #11 statement call conditional_if_else
	'{' => Reduce #11 statement call conditional_if_else
	'}' => Reduce #11 statement call conditional_if_else
	'&' => Reduce #11 statement call conditional_if_else
	"typedef" => Reduce #11 statement call conditional_if_else
	"private" => Reduce #11 statement call conditional_if_else
	"public" => Reduce #11 statement call conditional_if_else
	"var" => Reduce #11 statement call conditional_if_else
	"return" => Reduce #11 statement call conditional_if_else
	"if" => Reduce #11 statement call conditional_if_else
	"while" => Reduce #11 statement call conditional_if_else
	'+' => Reduce #11 statement call conditional_if_else
	'-' => Reduce #11 statement call conditional_if_else
	'~' => Reduce #11 statement call conditional_if_else
	'!' => Reduce #11 statement call conditional_if_else
	'*' => Reduce #11 statement call conditional_if_else

-- Goto table:
[1]
	externlist => 2
	externdefinition => 3
[2]
	definitionlist => 5
	datadefinition => 6
	definition => 7
	typename => 8
	typespec => 9
	typedefinition => 10
	structdefinition => 11
	interfacedefinition => 12
	classdefinition => 13
	linkage => 14
	functiondefinition => 15
	variabledefinition => 16
[3]
	externlist => 25
	externdefinition => 3
[5]
	mainproc => 27
[7]
	definitionlist => 29
	datadefinition => 6
	definition => 7
	typename => 8
	typespec => 9
	typedefinition => 10
	structdefinition => 11
	interfacedefinition => 12
	classdefinition => 13
	linkage => 14
	functiondefinition => 15
	variabledefinition => 16
[18]
	typename => 41
[19]
	typename => 42
[37]
	typename => 8
	typespec => 53
[40]
	typename => 55
[46]
	typename => 8
	typespec => 62
[48]
	typedefinition => 64
	linkage => 14
	functiondefinition => 65
	statementlist => 66
	statement => 67
	expression => 68
	iexpression => 69
[51]
	expression => 90
	iexpression => 69
[52]
	expression => 91
	iexpression => 69
[54]
	callablebody => 93
[59]
	datadefinitionlist => 97
	datadefinition => 98
	typename => 8
	typespec => 9
	typedefinition => 10
	structdefinition => 11
	variabledefinition => 16
[60]
	methoddefinitionlist => 99
	methoddefinition => 100
[61]
	definitionlist => 103
	datadefinition => 6
	definition => 7
	typename => 8
	typespec => 9
	typedefinition => 10
	structdefinition => 11
	interfacedefinition => 12
	classdefinition => 13
	linkage => 14
	functiondefinition => 15
	variabledefinition => 16
[67]
	typedefinition => 64
	linkage => 14
	functiondefinition => 65
	statementlist => 108
	statement => 67
	expression => 68
	iexpression => 69
[68]
	indirection => 109
[77]
	expression => 145
	iexpression => 69
[78]
	typedefinition => 64
	linkage => 14
	functiondefinition => 65
	statementlist => 146
	statement => 67
	expression => 68
	iexpression => 69
[79]
	expression => 147
	iexpression => 69
[80]
	typename => 8
	typespec => 9
	variabledefinition => 148
[81]
	expression => 149
	iexpression => 69
[84]
	expression => 152
	iexpression => 69
[85]
	expression => 153
	iexpression => 69
[86]
	expression => 154
	iexpression => 69
[87]
	expression => 155
	iexpression => 69
[88]
	expression => 156
	iexpression => 69
[90]
	indirection => 109
[91]
	indirection => 109
[92]
	callablebody => 158
[94]
	typename => 8
	typespec => 159
	parameterlist => 160
	parameters => 161
	paramdecl => 162
[98]
	datadefinitionlist => 165
	datadefinition => 98
	typename => 8
	typespec => 9
	typedefinition => 10
	structdefinition => 11
	variabledefinition => 16
[100]
	methoddefinitionlist => 167
	methoddefinition => 100
[101]
	typename => 8
	typespec => 168
[105]
	externparameterlist => 172
	externparameters => 173
	typename => 8
	typespec => 174
[110]
	expression => 176
	iexpression => 69
	expressionlist => 177
[112]
	expression => 179
	iexpression => 69
[113]
	expression => 180
	iexpression => 69
[114]
	expression => 181
	iexpression => 69
[115]
	expression => 176
	iexpression => 69
	expressionlist => 182
[116]
	expression => 183
	iexpression => 69
[117]
	expression => 184
	iexpression => 69
[118]
	expression => 185
	iexpression => 69
[119]
	expression => 186
	iexpression => 69
[120]
	expression => 187
	iexpression => 69
[121]
	expression => 188
	iexpression => 69
[122]
	expression => 189
	iexpression => 69
[123]
	expression => 190
	iexpression => 69
[124]
	expression => 191
	iexpression => 69
[125]
	expression => 192
	iexpression => 69
[126]
	expression => 193
	iexpression => 69
[127]
	expression => 194
	iexpression => 69
[128]
	expression => 195
	iexpression => 69
[129]
	expression => 196
	iexpression => 69
[130]
	expression => 197
	iexpression => 69
[131]
	expression => 198
	iexpression => 69
[132]
	expression => 199
	iexpression => 69
[133]
	expression => 200
	iexpression => 69
[134]
	expression => 201
	iexpression => 69
[135]
	expression => 202
	iexpression => 69
[136]
	expression => 203
	iexpression => 69
[137]
	expression => 204
	iexpression => 69
[138]
	expression => 205
	iexpression => 69
[139]
	expression => 206
	iexpression => 69
[140]
	expression => 207
	iexpression => 69
[141]
	expression => 208
	iexpression => 69
[142]
	expression => 209
	iexpression => 69
[144]
	indirection => 211
[145]
	indirection => 109
[147]
	indirection => 109
[149]
	indirection => 109
[150]
	expression => 216
	iexpression => 69
[151]
	expression => 217
	iexpression => 69
[152]
	indirection => 109
[153]
	indirection => 109
[154]
	indirection => 109
[155]
	indirection => 109
[156]
	indirection => 109
[171]
	externparameterlist => 224
	externparameters => 173
	typename => 8
	typespec => 174
[176]
	indirection => 109
[179]
	indirection => 109
[180]
	indirection => 109
[181]
	indirection => 109
[183]
	indirection => 109
[184]
	indirection => 109
[185]
	indirection => 109
[186]
	indirection => 109
[187]
	indirection => 109
[188]
	indirection => 109
[189]
	indirection => 109
[190]
	indirection => 109
[191]
	indirection => 109
[192]
	indirection => 109
[193]
	indirection => 109
[194]
	indirection => 109
[195]
	indirection => 109
[196]
	indirection => 109
[197]
	indirection => 109
[198]
	indirection => 109
[199]
	indirection => 109
[200]
	indirection => 109
[201]
	indirection => 109
[202]
	indirection => 109
[203]
	indirection => 109
[204]
	indirection => 109
[205]
	indirection => 109
[206]
	indirection => 109
[207]
	indirection => 109
[208]
	indirection => 109
[209]
	indirection => 109
[216]
	indirection => 109
[217]
	indirection => 109
[218]
	expression => 232
	iexpression => 69
[221]
	typename => 8
	typespec => 159
	parameters => 234
	paramdecl => 162
[223]
	typename => 8
	typespec => 159
	parameterlist => 236
	parameters => 161
	paramdecl => 162
[226]
	externparameters => 239
	typename => 8
	typespec => 174
[227]
	expression => 176
	iexpression => 69
	expressionlist => 240
[232]
	indirection => 109
[233]
	typedefinition => 64
	linkage => 14
	functiondefinition => 65
	statementlist => 243
	statement => 67
	expression => 68
	iexpression => 69
[235]
	typename => 8
	typespec => 159
	parameterlist => 244
	parameters => 161
	paramdecl => 162
[241]
	typedefinition => 64
	linkage => 14
	functiondefinition => 65
	statementlist => 247
	statement => 67
	expression => 68
	iexpression => 69
[242]
	typedefinition => 64
	linkage => 14
	functiondefinition => 65
	statementlist => 248
	statement => 67
	expression => 68
	iexpression => 69
[256]
	typedefinition => 64
	linkage => 14
	functiondefinition => 65
	statementlist => 257
	statement => 67
	expression => 68
	iexpression => 69

