== Language 'test', type system 'language1/typesystem' ==
-- Lexems:
TOKEN BOOLEAN ((true)|(false)) 0 [tf]  ~ 1
TOKEN IDENT [a-zA-Z_]+[a-zA-Z_0-9]* 0 [abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_]  ~ 2
TOKEN DQSTRING ["]((([^\\"\n]+)|([\\][^"\n]))*)["] 1 ["]  ~ 3
TOKEN SQSTRING [']((([^\\'\n]+)|([\\][^'\n]))*)['] 1 [']  ~ 4
TOKEN CARDINAL [0123456789]+ 0 [0123456789]  ~ 5
TOKEN INTEGER [-][0123456789]+ 0 [-]  ~ 6
TOKEN FLOAT [-]{0,1}[0123456789]+[.][0123456789]+ 0 [-]  ~ 7
TOKEN FLOAT [-]{0,1}[0123456789]+[.][0123456789]+[Ee][+-]{0,1}[0123456789]+ 0 [-]  ~ 7
KEYWORD extern [e] ~ 8
KEYWORD function [f] ~ 9
KEYWORD ( [(] ~ 10
KEYWORD ) [)] ~ 11
KEYWORD ; [;] ~ 12
KEYWORD procedure [p] ~ 13
KEYWORD , [,] ~ 14
KEYWORD main [m] ~ 15
KEYWORD { [{] ~ 16
KEYWORD } [}] ~ 17
KEYWORD :: [:] ~ 18
KEYWORD const [c] ~ 19
KEYWORD & [&] ~ 20
KEYWORD ^ [^] ~ 21
KEYWORD typedef [t] ~ 22
KEYWORD struct [s] ~ 23
KEYWORD interface [i] ~ 24
KEYWORD class [c] ~ 25
KEYWORD private [p] ~ 26
KEYWORD public [p] ~ 27
KEYWORD var [v] ~ 28
KEYWORD return [r] ~ 29
KEYWORD delete [d] ~ 30
KEYWORD if [i] ~ 31
KEYWORD else [e] ~ 32
KEYWORD while [w] ~ 33
KEYWORD = [=] ~ 34
KEYWORD [ [[] ~ 35
KEYWORD ] []] ~ 36
KEYWORD new [n] ~ 37
KEYWORD : [:] ~ 38
KEYWORD null [n] ~ 39
KEYWORD += [+] ~ 40
KEYWORD -= [-] ~ 41
KEYWORD *= [*] ~ 42
KEYWORD /= [/] ~ 43
KEYWORD %= [%] ~ 44
KEYWORD &&= [&] ~ 45
KEYWORD ||= [|] ~ 46
KEYWORD &= [&] ~ 47
KEYWORD |= [|] ~ 48
KEYWORD <<= [<] ~ 49
KEYWORD >>= [>] ~ 50
KEYWORD || [|] ~ 51
KEYWORD && [&] ~ 52
KEYWORD | [|] ~ 53
KEYWORD == [=] ~ 54
KEYWORD != [!] ~ 55
KEYWORD <= [<] ~ 56
KEYWORD < [<] ~ 57
KEYWORD >= [>] ~ 58
KEYWORD > [>] ~ 59
KEYWORD + [+] ~ 60
KEYWORD - [-] ~ 61
KEYWORD ~ [~] ~ 62
KEYWORD ! [!] ~ 63
KEYWORD * [*] ~ 64
KEYWORD / [/] ~ 65
KEYWORD % [%] ~ 66
KEYWORD << [<] ~ 67
KEYWORD >> [>] ~ 68
KEYWORD . [.] ~ 69
KEYWORD -> [-] ~ 70
COMMENT /* */ [/]
COMMENT // [/]

-- Nonterminals:
(1) program
(2) externlist
(3) definitionlist
(4) datadefinitionlist
(5) methoddefinitionlist
(6) externdefinition
(7) externparameterlist
(8) externparameters
(9) methoddefinition
(10) mainproc
(11) datadefinition
(12) definition
(13) typename
(14) typespec
(15) typedefinition
(16) structdefinition
(17) interfacedefinition
(18) classdefinition
(19) linkage
(20) functiondefinition
(21) callablebody
(22) parameterlist
(23) parameters
(24) paramdecl
(25) codeblock
(26) statementlist
(27) statement
(28) variabledefinition
(29) expression
(30) iexpression
(31) indirection
(32) expressionlist

-- Productions:
program = externlist definitionlist mainproc (1)
externlist = externdefinition externlist
externlist = 
definitionlist = definition definitionlist
definitionlist = 
datadefinitionlist = datadefinition datadefinitionlist
datadefinitionlist = 
methoddefinitionlist = methoddefinition methoddefinitionlist
methoddefinitionlist = 
externdefinition = "extern" DQSTRING "function" typespec IDENT "(" externparameterlist ")" ";" (2)
externdefinition = "extern" DQSTRING "procedure" IDENT "(" externparameterlist ")" ";" (3)
externparameterlist = externparameters (4)
externparameters = typespec "," externparameters
externparameters = typespec
methoddefinition = "function" typespec IDENT "(" parameterlist ")" ";" (5)
methoddefinition = "procedure" IDENT "(" parameterlist ")" ";" (6)
externparameterlist = externparameters (4)
externparameterlist = 
mainproc = "main" "{" codeblock "}" (scope:7)
mainproc = 
datadefinition = typedefinition ";" (8)
datadefinition = variabledefinition ";" (8)
datadefinition = structdefinition ";" (8)
definition = datadefinition
definition = functiondefinition (8)
definition = classdefinition ";" (8)
definition = interfacedefinition ";" (8)
typename/L1 = IDENT
typename/L1 = IDENT "::" typename
typespec/L1 = typename (9)
typespec/L1 = "const" typename (10)
typespec/L1 = typename "&" (11)
typespec/L1 = "const" typename "&" (12)
typespec/L1 = typename "^" (13)
typespec/L1 = "const" typename "^" (14)
typespec/L1 = typename "^" "&" (15)
typespec/L1 = "const" typename "^" "&" (16)
typespec/L1 = typename "^" "^" (17)
typespec/L1 = "const" typename "^" "^" (18)
typespec/L1 = typename "^" "^" "&" (19)
typespec/L1 = "const" typename "^" "^" "&" (20)
typedefinition = "typedef" typename IDENT (step:21)
structdefinition = "struct" IDENT "{" datadefinitionlist "}" (step:22)
interfacedefinition = "interface" IDENT "{" methoddefinitionlist "}" (step:23)
classdefinition = "class" IDENT "{" definitionlist "}" (step:24)
linkage = "private" (25)
linkage = "public" (26)
linkage =  (25)
functiondefinition = linkage "function" typespec IDENT callablebody (27)
functiondefinition = linkage "procedure" IDENT callablebody (28)
callablebody = "(" parameterlist ")" "{" codeblock "}" (scope:29)
parameterlist = parameters (30)
parameterlist = 
parameters = paramdecl "," parameters
parameters = paramdecl
paramdecl = typespec IDENT (31)
codeblock = statementlist (32)
statementlist = statement statementlist (step)
statementlist = 
statement/L1 = functiondefinition (8)
statement/L1 = typedefinition ";" (8)
statement/L1 = "var" variabledefinition ";" (8)
statement/L1 = expression ";" (33)
statement/L1 = "return" expression ";" (step:34)
statement/L1 = "delete" expression ";" (35)
statement/L1 = "if" "(" expression ")" "{" codeblock "}" (scope:36)
statement/L1 = "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}" (scope:37)
statement/L1 = "while" "(" expression ")" "{" codeblock "}" (scope:38)
statement/L1 = "{" codeblock "}" (scope)
variabledefinition = typespec IDENT (step:39)
variabledefinition = typespec IDENT "=" expression (step:40)
variabledefinition = typespec IDENT "[" expression "]" "=" expression (step:41)
variabledefinition = typespec IDENT "[" expression "]" (step:42)
expression/L1 = "{" expressionlist "}" (43)
expression/L1 = "{" "}" (43)
expression/L1 = "new" typespec ":" expression (44)
expression/L2 = IDENT (45)
expression/L2 = BOOLEAN (46)
expression/L2 = CARDINAL (47)
expression/L2 = INTEGER (48)
expression/L2 = FLOAT (49)
expression/L2 = "null" (50)
expression/L2 = DQSTRING (51)
expression/L2 = SQSTRING (52)
expression/L2 = "(" expression ")"
expression/L3 = expression "=" expression (53)
expression/L3 = expression "+=" expression (54)
expression/L3 = expression "-=" expression (55)
expression/L3 = expression "*=" expression (56)
expression/L3 = expression "/=" expression (57)
expression/L3 = expression "%=" expression (58)
expression/L3 = expression "&&=" expression (59)
expression/L3 = expression "||=" expression (60)
expression/L3 = expression "&=" expression (61)
expression/L3 = expression "|=" expression (62)
expression/L3 = expression "<<=" expression (63)
expression/L3 = expression ">>=" expression (64)
expression/L4 = expression "||" expression (65)
expression/L5 = expression "&&" expression (66)
expression/L6 = expression "|" expression (67)
expression/L7 = expression "^" expression (68)
expression/L7 = expression "&" expression (69)
expression/L8 = expression "==" expression (70)
expression/L8 = expression "!=" expression (71)
expression/L8 = expression "<=" expression (72)
expression/L8 = expression "<" expression (73)
expression/L8 = expression ">=" expression (74)
expression/L8 = expression ">" expression (75)
expression/L9 = expression "+" expression (76)
expression/L9 = expression "-" expression (77)
expression/L9 = "&" expression (69)
expression/L9 = "-" expression (77)
expression/L9 = "+" expression (76)
expression/L9 = "~" expression (78)
expression/L9 = "!" expression (79)
expression/L10 = expression "*" expression (80)
expression/L10 = expression "/" expression (81)
expression/L10 = expression "%" expression (82)
expression/L11 = expression "<<" expression (83)
expression/L11 = expression ">>" expression (84)
expression/L12 = iexpression
expression/L12 = expression "." IDENT (85)
expression/L12 = "*" expression (86)
expression/L13 = expression "(" expressionlist ")" (87)
expression/L13 = expression "(" ")" (87)
expression/L13 = expression "[" expressionlist "]" (88)
iexpression = expression indirection IDENT (89)
indirection = "->" indirection (90)
indirection = "->" (90)
expressionlist = expression "," expressionlist
expressionlist = expression

-- LR(0) states:
[1]
	program = . externlist definitionlist mainproc
	externlist = . externdefinition externlist
	externlist = .
	externdefinition = . "extern" DQSTRING "function" typespec IDENT "(" externparameterlist ")" ";"
	externdefinition = . "extern" DQSTRING "procedure" IDENT "(" externparameterlist ")" ";"
[2]
	program = externlist . definitionlist mainproc
	definitionlist = . definition definitionlist
	definitionlist = .
	datadefinition = . typedefinition ";"
	datadefinition = . variabledefinition ";"
	datadefinition = . structdefinition ";"
	definition = . datadefinition
	definition = . functiondefinition
	definition = . classdefinition ";"
	definition = . interfacedefinition ";"
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	typedefinition = . "typedef" typename IDENT
	structdefinition = . "struct" IDENT "{" datadefinitionlist "}"
	interfacedefinition = . "interface" IDENT "{" methoddefinitionlist "}"
	classdefinition = . "class" IDENT "{" definitionlist "}"
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" typespec IDENT callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody
	variabledefinition = . typespec IDENT
	variabledefinition = . typespec IDENT "=" expression
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression
	variabledefinition = . typespec IDENT "[" expression "]"
[3]
	externlist = . externdefinition externlist
	externlist = externdefinition . externlist
	externlist = .
	externdefinition = . "extern" DQSTRING "function" typespec IDENT "(" externparameterlist ")" ";"
	externdefinition = . "extern" DQSTRING "procedure" IDENT "(" externparameterlist ")" ";"
[4]
	externdefinition = "extern" . DQSTRING "function" typespec IDENT "(" externparameterlist ")" ";"
	externdefinition = "extern" . DQSTRING "procedure" IDENT "(" externparameterlist ")" ";"
[5]
	program = externlist definitionlist . mainproc
	mainproc = . "main" "{" codeblock "}"
	mainproc = .
[6]
	definition = datadefinition .
[7]
	definitionlist = . definition definitionlist
	definitionlist = definition . definitionlist
	definitionlist = .
	datadefinition = . typedefinition ";"
	datadefinition = . variabledefinition ";"
	datadefinition = . structdefinition ";"
	definition = . datadefinition
	definition = . functiondefinition
	definition = . classdefinition ";"
	definition = . interfacedefinition ";"
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	typedefinition = . "typedef" typename IDENT
	structdefinition = . "struct" IDENT "{" datadefinitionlist "}"
	interfacedefinition = . "interface" IDENT "{" methoddefinitionlist "}"
	classdefinition = . "class" IDENT "{" definitionlist "}"
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" typespec IDENT callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody
	variabledefinition = . typespec IDENT
	variabledefinition = . typespec IDENT "=" expression
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression
	variabledefinition = . typespec IDENT "[" expression "]"
[8]
	typespec/L1 = typename .
	typespec/L1 = typename . "&"
	typespec/L1 = typename . "^"
	typespec/L1 = typename . "^" "&"
	typespec/L1 = typename . "^" "^"
	typespec/L1 = typename . "^" "^" "&"
[9]
	variabledefinition = typespec . IDENT
	variabledefinition = typespec . IDENT "=" expression
	variabledefinition = typespec . IDENT "[" expression "]" "=" expression
	variabledefinition = typespec . IDENT "[" expression "]"
[10]
	datadefinition = typedefinition . ";"
[11]
	datadefinition = structdefinition . ";"
[12]
	definition = interfacedefinition . ";"
[13]
	definition = classdefinition . ";"
[14]
	functiondefinition = linkage . "function" typespec IDENT callablebody
	functiondefinition = linkage . "procedure" IDENT callablebody
[15]
	definition = functiondefinition .
[16]
	datadefinition = variabledefinition . ";"
[17]
	typename/L1 = IDENT .
	typename/L1 = IDENT . "::" typename
[18]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = "const" . typename
	typespec/L1 = "const" . typename "&"
	typespec/L1 = "const" . typename "^"
	typespec/L1 = "const" . typename "^" "&"
	typespec/L1 = "const" . typename "^" "^"
	typespec/L1 = "const" . typename "^" "^" "&"
[19]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typedefinition = "typedef" . typename IDENT
[20]
	structdefinition = "struct" . IDENT "{" datadefinitionlist "}"
[21]
	interfacedefinition = "interface" . IDENT "{" methoddefinitionlist "}"
[22]
	classdefinition = "class" . IDENT "{" definitionlist "}"
[23]
	linkage = "private" .
[24]
	linkage = "public" .
[25]
	externlist = externdefinition externlist .
[26]
	externdefinition = "extern" DQSTRING . "function" typespec IDENT "(" externparameterlist ")" ";"
	externdefinition = "extern" DQSTRING . "procedure" IDENT "(" externparameterlist ")" ";"
[27]
	program = externlist definitionlist mainproc .
[28]
	mainproc = "main" . "{" codeblock "}"
[29]
	definitionlist = definition definitionlist .
[30]
	typespec/L1 = typename "&" .
[31]
	typespec/L1 = typename "^" .
	typespec/L1 = typename "^" . "&"
	typespec/L1 = typename "^" . "^"
	typespec/L1 = typename "^" . "^" "&"
[32]
	variabledefinition = typespec IDENT .
	variabledefinition = typespec IDENT . "=" expression
	variabledefinition = typespec IDENT . "[" expression "]" "=" expression
	variabledefinition = typespec IDENT . "[" expression "]"
[33]
	datadefinition = typedefinition ";" .
[34]
	datadefinition = structdefinition ";" .
[35]
	definition = interfacedefinition ";" .
[36]
	definition = classdefinition ";" .
[37]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	functiondefinition = linkage "function" . typespec IDENT callablebody
[38]
	functiondefinition = linkage "procedure" . IDENT callablebody
[39]
	datadefinition = variabledefinition ";" .
[40]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typename/L1 = IDENT "::" . typename
[41]
	typespec/L1 = "const" typename .
	typespec/L1 = "const" typename . "&"
	typespec/L1 = "const" typename . "^"
	typespec/L1 = "const" typename . "^" "&"
	typespec/L1 = "const" typename . "^" "^"
	typespec/L1 = "const" typename . "^" "^" "&"
[42]
	typedefinition = "typedef" typename . IDENT
[43]
	structdefinition = "struct" IDENT . "{" datadefinitionlist "}"
[44]
	interfacedefinition = "interface" IDENT . "{" methoddefinitionlist "}"
[45]
	classdefinition = "class" IDENT . "{" definitionlist "}"
[46]
	externdefinition = "extern" DQSTRING "function" . typespec IDENT "(" externparameterlist ")" ";"
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
[47]
	externdefinition = "extern" DQSTRING "procedure" . IDENT "(" externparameterlist ")" ";"
[48]
	mainproc = "main" "{" . codeblock "}"
	typedefinition = . "typedef" typename IDENT
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" typespec IDENT callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody
	codeblock = . statementlist
	statementlist = . statement statementlist
	statementlist = .
	statement/L1 = . functiondefinition
	statement/L1 = . typedefinition ";"
	statement/L1 = . "var" variabledefinition ";"
	statement/L1 = . expression ";"
	statement/L1 = . "return" expression ";"
	statement/L1 = . "delete" expression ";"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}"
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "{" codeblock "}"
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[49]
	typespec/L1 = typename "^" "&" .
[50]
	typespec/L1 = typename "^" "^" .
	typespec/L1 = typename "^" "^" . "&"
[51]
	variabledefinition = typespec IDENT "=" . expression
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[52]
	variabledefinition = typespec IDENT "[" . expression "]" "=" expression
	variabledefinition = typespec IDENT "[" . expression "]"
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[53]
	functiondefinition = linkage "function" typespec . IDENT callablebody
[54]
	functiondefinition = linkage "procedure" IDENT . callablebody
	callablebody = . "(" parameterlist ")" "{" codeblock "}"
[55]
	typename/L1 = IDENT "::" typename .
[56]
	typespec/L1 = "const" typename "&" .
[57]
	typespec/L1 = "const" typename "^" .
	typespec/L1 = "const" typename "^" . "&"
	typespec/L1 = "const" typename "^" . "^"
	typespec/L1 = "const" typename "^" . "^" "&"
[58]
	typedefinition = "typedef" typename IDENT .
[59]
	datadefinitionlist = . datadefinition datadefinitionlist
	datadefinitionlist = .
	datadefinition = . typedefinition ";"
	datadefinition = . variabledefinition ";"
	datadefinition = . structdefinition ";"
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	typedefinition = . "typedef" typename IDENT
	structdefinition = . "struct" IDENT "{" datadefinitionlist "}"
	structdefinition = "struct" IDENT "{" . datadefinitionlist "}"
	variabledefinition = . typespec IDENT
	variabledefinition = . typespec IDENT "=" expression
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression
	variabledefinition = . typespec IDENT "[" expression "]"
[60]
	methoddefinitionlist = . methoddefinition methoddefinitionlist
	methoddefinitionlist = .
	methoddefinition = . "function" typespec IDENT "(" parameterlist ")" ";"
	methoddefinition = . "procedure" IDENT "(" parameterlist ")" ";"
	interfacedefinition = "interface" IDENT "{" . methoddefinitionlist "}"
[61]
	definitionlist = . definition definitionlist
	definitionlist = .
	datadefinition = . typedefinition ";"
	datadefinition = . variabledefinition ";"
	datadefinition = . structdefinition ";"
	definition = . datadefinition
	definition = . functiondefinition
	definition = . classdefinition ";"
	definition = . interfacedefinition ";"
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	typedefinition = . "typedef" typename IDENT
	structdefinition = . "struct" IDENT "{" datadefinitionlist "}"
	interfacedefinition = . "interface" IDENT "{" methoddefinitionlist "}"
	classdefinition = . "class" IDENT "{" definitionlist "}"
	classdefinition = "class" IDENT "{" . definitionlist "}"
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" typespec IDENT callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody
	variabledefinition = . typespec IDENT
	variabledefinition = . typespec IDENT "=" expression
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression
	variabledefinition = . typespec IDENT "[" expression "]"
[62]
	externdefinition = "extern" DQSTRING "function" typespec . IDENT "(" externparameterlist ")" ";"
[63]
	externdefinition = "extern" DQSTRING "procedure" IDENT . "(" externparameterlist ")" ";"
[64]
	statement/L1 = typedefinition . ";"
[65]
	statement/L1 = functiondefinition .
[66]
	mainproc = "main" "{" codeblock . "}"
[67]
	codeblock = statementlist .
[68]
	typedefinition = . "typedef" typename IDENT
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" typespec IDENT callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody
	statementlist = . statement statementlist
	statementlist = statement . statementlist
	statementlist = .
	statement/L1 = . functiondefinition
	statement/L1 = . typedefinition ";"
	statement/L1 = . "var" variabledefinition ";"
	statement/L1 = . expression ";"
	statement/L1 = . "return" expression ";"
	statement/L1 = . "delete" expression ";"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}"
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "{" codeblock "}"
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[69]
	statement/L1 = expression . ";"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[70]
	expression/L12 = iexpression .
[71]
	expression/L2 = BOOLEAN .
[72]
	expression/L2 = IDENT .
[73]
	expression/L2 = DQSTRING .
[74]
	expression/L2 = SQSTRING .
[75]
	expression/L2 = CARDINAL .
[76]
	expression/L2 = INTEGER .
[77]
	expression/L2 = FLOAT .
[78]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L2 = "(" . expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[79]
	typedefinition = . "typedef" typename IDENT
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" typespec IDENT callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody
	codeblock = . statementlist
	statementlist = . statement statementlist
	statementlist = .
	statement/L1 = . functiondefinition
	statement/L1 = . typedefinition ";"
	statement/L1 = . "var" variabledefinition ";"
	statement/L1 = . expression ";"
	statement/L1 = . "return" expression ";"
	statement/L1 = . "delete" expression ";"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}"
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "{" codeblock "}"
	statement/L1 = "{" . codeblock "}"
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = "{" . expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = "{" . "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
	expressionlist = . expression "," expressionlist
	expressionlist = . expression
[80]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = "&" . expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[81]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	statement/L1 = "var" . variabledefinition ";"
	variabledefinition = . typespec IDENT
	variabledefinition = . typespec IDENT "=" expression
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression
	variabledefinition = . typespec IDENT "[" expression "]"
[82]
	statement/L1 = "return" . expression ";"
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[83]
	statement/L1 = "delete" . expression ";"
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[84]
	statement/L1 = "if" . "(" expression ")" "{" codeblock "}"
	statement/L1 = "if" . "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}"
[85]
	statement/L1 = "while" . "(" expression ")" "{" codeblock "}"
[86]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	expression/L1 = "new" . typespec ":" expression
[87]
	expression/L2 = "null" .
[88]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = "+" . expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[89]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = "-" . expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[90]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = "~" . expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[91]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L9 = "!" . expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[92]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L12 = "*" . expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[93]
	typespec/L1 = typename "^" "^" "&" .
[94]
	variabledefinition = typespec IDENT "=" expression .
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[95]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = "{" . expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = "{" . "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
	expressionlist = . expression "," expressionlist
	expressionlist = . expression
[96]
	variabledefinition = typespec IDENT "[" expression . "]" "=" expression
	variabledefinition = typespec IDENT "[" expression . "]"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[97]
	functiondefinition = linkage "function" typespec IDENT . callablebody
	callablebody = . "(" parameterlist ")" "{" codeblock "}"
[98]
	functiondefinition = linkage "procedure" IDENT callablebody .
[99]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	callablebody = "(" . parameterlist ")" "{" codeblock "}"
	parameterlist = . parameters
	parameterlist = .
	parameters = . paramdecl "," parameters
	parameters = . paramdecl
	paramdecl = . typespec IDENT
[100]
	typespec/L1 = "const" typename "^" "&" .
[101]
	typespec/L1 = "const" typename "^" "^" .
	typespec/L1 = "const" typename "^" "^" . "&"
[102]
	structdefinition = "struct" IDENT "{" datadefinitionlist . "}"
[103]
	datadefinitionlist = . datadefinition datadefinitionlist
	datadefinitionlist = datadefinition . datadefinitionlist
	datadefinitionlist = .
	datadefinition = . typedefinition ";"
	datadefinition = . variabledefinition ";"
	datadefinition = . structdefinition ";"
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	typedefinition = . "typedef" typename IDENT
	structdefinition = . "struct" IDENT "{" datadefinitionlist "}"
	variabledefinition = . typespec IDENT
	variabledefinition = . typespec IDENT "=" expression
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression
	variabledefinition = . typespec IDENT "[" expression "]"
[104]
	interfacedefinition = "interface" IDENT "{" methoddefinitionlist . "}"
[105]
	methoddefinitionlist = . methoddefinition methoddefinitionlist
	methoddefinitionlist = methoddefinition . methoddefinitionlist
	methoddefinitionlist = .
	methoddefinition = . "function" typespec IDENT "(" parameterlist ")" ";"
	methoddefinition = . "procedure" IDENT "(" parameterlist ")" ";"
[106]
	methoddefinition = "function" . typespec IDENT "(" parameterlist ")" ";"
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
[107]
	methoddefinition = "procedure" . IDENT "(" parameterlist ")" ";"
[108]
	classdefinition = "class" IDENT "{" definitionlist . "}"
[109]
	externdefinition = "extern" DQSTRING "function" typespec IDENT . "(" externparameterlist ")" ";"
[110]
	externdefinition = "extern" DQSTRING "procedure" IDENT "(" . externparameterlist ")" ";"
	externparameterlist = . externparameters
	externparameters = . typespec "," externparameters
	externparameters = . typespec
	externparameterlist = . externparameters
	externparameterlist = .
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
[111]
	statement/L1 = typedefinition ";" .
[112]
	mainproc = "main" "{" codeblock "}" .
[113]
	statementlist = statement statementlist .
[114]
	iexpression = expression indirection . IDENT
[115]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = expression "(" . expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = expression "(" . ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
	expressionlist = . expression "," expressionlist
	expressionlist = . expression
[116]
	statement/L1 = expression ";" .
[117]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L7 = expression "&" . expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[118]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = expression "^" . expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[119]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = expression "=" . expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[120]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	expression/L13 = expression "[" . expressionlist "]"
	iexpression = . expression indirection IDENT
	expressionlist = . expression "," expressionlist
	expressionlist = . expression
[121]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = expression "+=" . expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[122]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = expression "-=" . expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[123]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = expression "*=" . expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[124]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = expression "/=" . expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[125]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = expression "%=" . expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[126]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = expression "&&=" . expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[127]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = expression "||=" . expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[128]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = expression "&=" . expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[129]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = expression "|=" . expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[130]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = expression "<<=" . expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[131]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L3 = expression ">>=" . expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[132]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L4 = expression "||" . expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[133]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L5 = expression "&&" . expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[134]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L6 = expression "|" . expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[135]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = expression "==" . expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[136]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = expression "!=" . expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[137]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = expression "<=" . expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[138]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = expression "<" . expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[139]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = expression ">=" . expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[140]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L8 = expression ">" . expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[141]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = expression "+" . expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[142]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = expression "-" . expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[143]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = expression "*" . expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[144]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = expression "/" . expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[145]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L10 = expression "%" . expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[146]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = expression "<<" . expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[147]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L11 = expression ">>" . expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[148]
	expression/L12 = expression "." . IDENT
[149]
	indirection = . "->" indirection
	indirection = "->" . indirection
	indirection = . "->"
	indirection = "->" .
[150]
	expression/L2 = "(" expression . ")"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[151]
	statement/L1 = "{" codeblock . "}"
[152]
	statement/L1 = expression . ";"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
	expressionlist = expression . "," expressionlist
	expressionlist = expression .
[153]
	expression/L1 = "{" expressionlist . "}"
[154]
	expression/L1 = "{" "}" .
[155]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L9 = "&" expression .
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[156]
	statement/L1 = "var" variabledefinition . ";"
[157]
	statement/L1 = "return" expression . ";"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[158]
	statement/L1 = "delete" expression . ";"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[159]
	statement/L1 = "if" "(" . expression ")" "{" codeblock "}"
	statement/L1 = "if" "(" . expression ")" "{" codeblock "}" "else" "{" codeblock "}"
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[160]
	statement/L1 = "while" "(" . expression ")" "{" codeblock "}"
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[161]
	expression/L1 = "new" typespec . ":" expression
[162]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L9 = "+" expression .
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[163]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L9 = "-" expression .
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[164]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L9 = "~" expression .
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[165]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L9 = "!" expression .
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[166]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L12 = "*" expression .
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[167]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
	expressionlist = expression . "," expressionlist
	expressionlist = expression .
[168]
	variabledefinition = typespec IDENT "[" expression "]" . "=" expression
	variabledefinition = typespec IDENT "[" expression "]" .
[169]
	functiondefinition = linkage "function" typespec IDENT callablebody .
[170]
	paramdecl = typespec . IDENT
[171]
	callablebody = "(" parameterlist . ")" "{" codeblock "}"
[172]
	parameterlist = parameters .
[173]
	parameters = paramdecl . "," parameters
	parameters = paramdecl .
[174]
	typespec/L1 = "const" typename "^" "^" "&" .
[175]
	structdefinition = "struct" IDENT "{" datadefinitionlist "}" .
[176]
	datadefinitionlist = datadefinition datadefinitionlist .
[177]
	interfacedefinition = "interface" IDENT "{" methoddefinitionlist "}" .
[178]
	methoddefinitionlist = methoddefinition methoddefinitionlist .
[179]
	methoddefinition = "function" typespec . IDENT "(" parameterlist ")" ";"
[180]
	methoddefinition = "procedure" IDENT . "(" parameterlist ")" ";"
[181]
	classdefinition = "class" IDENT "{" definitionlist "}" .
[182]
	externdefinition = "extern" DQSTRING "function" typespec IDENT "(" . externparameterlist ")" ";"
	externparameterlist = . externparameters
	externparameters = . typespec "," externparameters
	externparameters = . typespec
	externparameterlist = . externparameters
	externparameterlist = .
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
[183]
	externdefinition = "extern" DQSTRING "procedure" IDENT "(" externparameterlist . ")" ";"
[184]
	externparameterlist = externparameters .
	externparameterlist = externparameters .
[185]
	externparameters = typespec . "," externparameters
	externparameters = typespec .
[186]
	iexpression = expression indirection IDENT .
[187]
	expression/L13 = expression "(" expressionlist . ")"
[188]
	expression/L13 = expression "(" ")" .
[189]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L7 = expression "&" expression .
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[190]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression "^" expression .
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[191]
	expression/L3 = expression . "=" expression
	expression/L3 = expression "=" expression .
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[192]
	expression/L13 = expression "[" expressionlist . "]"
[193]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression "+=" expression .
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[194]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression "-=" expression .
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[195]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression "*=" expression .
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[196]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression "/=" expression .
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[197]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression "%=" expression .
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[198]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression "&&=" expression .
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[199]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression "||=" expression .
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[200]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression "&=" expression .
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[201]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression "|=" expression .
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[202]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression "<<=" expression .
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[203]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L3 = expression ">>=" expression .
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[204]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L4 = expression "||" expression .
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[205]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L5 = expression "&&" expression .
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[206]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L6 = expression "|" expression .
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[207]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression "==" expression .
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[208]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression "!=" expression .
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[209]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression "<=" expression .
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[210]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression "<" expression .
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[211]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression ">=" expression .
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[212]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L8 = expression ">" expression .
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[213]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression "+" expression .
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[214]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L9 = expression "-" expression .
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[215]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression "*" expression .
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[216]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression "/" expression .
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[217]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L10 = expression "%" expression .
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[218]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression "<<" expression .
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[219]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L11 = expression ">>" expression .
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[220]
	expression/L12 = expression "." IDENT .
[221]
	indirection = "->" indirection .
[222]
	expression/L2 = "(" expression ")" .
[223]
	statement/L1 = "{" codeblock "}" .
[224]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
	expressionlist = . expression "," expressionlist
	expressionlist = expression "," . expressionlist
	expressionlist = . expression
[225]
	expression/L1 = "{" expressionlist "}" .
[226]
	statement/L1 = "var" variabledefinition ";" .
[227]
	statement/L1 = "return" expression ";" .
[228]
	statement/L1 = "delete" expression ";" .
[229]
	statement/L1 = "if" "(" expression . ")" "{" codeblock "}"
	statement/L1 = "if" "(" expression . ")" "{" codeblock "}" "else" "{" codeblock "}"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[230]
	statement/L1 = "while" "(" expression . ")" "{" codeblock "}"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[231]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = "new" typespec ":" . expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[232]
	variabledefinition = typespec IDENT "[" expression "]" "=" . expression
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[233]
	paramdecl = typespec IDENT .
[234]
	callablebody = "(" parameterlist ")" . "{" codeblock "}"
[235]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	parameters = . paramdecl "," parameters
	parameters = paramdecl "," . parameters
	parameters = . paramdecl
	paramdecl = . typespec IDENT
[236]
	methoddefinition = "function" typespec IDENT . "(" parameterlist ")" ";"
[237]
	methoddefinition = "procedure" IDENT "(" . parameterlist ")" ";"
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	parameterlist = . parameters
	parameterlist = .
	parameters = . paramdecl "," parameters
	parameters = . paramdecl
	paramdecl = . typespec IDENT
[238]
	externdefinition = "extern" DQSTRING "function" typespec IDENT "(" externparameterlist . ")" ";"
[239]
	externdefinition = "extern" DQSTRING "procedure" IDENT "(" externparameterlist ")" . ";"
[240]
	externparameters = . typespec "," externparameters
	externparameters = typespec "," . externparameters
	externparameters = . typespec
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
[241]
	expression/L13 = expression "(" expressionlist ")" .
[242]
	expression/L13 = expression "[" expressionlist "]" .
[243]
	expressionlist = expression "," expressionlist .
[244]
	statement/L1 = "if" "(" expression ")" . "{" codeblock "}"
	statement/L1 = "if" "(" expression ")" . "{" codeblock "}" "else" "{" codeblock "}"
[245]
	statement/L1 = "while" "(" expression ")" . "{" codeblock "}"
[246]
	expression/L1 = "new" typespec ":" expression .
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[247]
	variabledefinition = typespec IDENT "[" expression "]" "=" expression .
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[248]
	typedefinition = . "typedef" typename IDENT
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" typespec IDENT callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody
	callablebody = "(" parameterlist ")" "{" . codeblock "}"
	codeblock = . statementlist
	statementlist = . statement statementlist
	statementlist = .
	statement/L1 = . functiondefinition
	statement/L1 = . typedefinition ";"
	statement/L1 = . "var" variabledefinition ";"
	statement/L1 = . expression ";"
	statement/L1 = . "return" expression ";"
	statement/L1 = . "delete" expression ";"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}"
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "{" codeblock "}"
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[249]
	parameters = paramdecl "," parameters .
[250]
	methoddefinition = "function" typespec IDENT "(" . parameterlist ")" ";"
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	parameterlist = . parameters
	parameterlist = .
	parameters = . paramdecl "," parameters
	parameters = . paramdecl
	paramdecl = . typespec IDENT
[251]
	methoddefinition = "procedure" IDENT "(" parameterlist . ")" ";"
[252]
	externdefinition = "extern" DQSTRING "function" typespec IDENT "(" externparameterlist ")" . ";"
[253]
	externdefinition = "extern" DQSTRING "procedure" IDENT "(" externparameterlist ")" ";" .
[254]
	externparameters = typespec "," externparameters .
[255]
	typedefinition = . "typedef" typename IDENT
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" typespec IDENT callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody
	codeblock = . statementlist
	statementlist = . statement statementlist
	statementlist = .
	statement/L1 = . functiondefinition
	statement/L1 = . typedefinition ";"
	statement/L1 = . "var" variabledefinition ";"
	statement/L1 = . expression ";"
	statement/L1 = . "return" expression ";"
	statement/L1 = . "delete" expression ";"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}"
	statement/L1 = "if" "(" expression ")" "{" . codeblock "}"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}"
	statement/L1 = "if" "(" expression ")" "{" . codeblock "}" "else" "{" codeblock "}"
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "{" codeblock "}"
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[256]
	typedefinition = . "typedef" typename IDENT
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" typespec IDENT callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody
	codeblock = . statementlist
	statementlist = . statement statementlist
	statementlist = .
	statement/L1 = . functiondefinition
	statement/L1 = . typedefinition ";"
	statement/L1 = . "var" variabledefinition ";"
	statement/L1 = . expression ";"
	statement/L1 = . "return" expression ";"
	statement/L1 = . "delete" expression ";"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}"
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}"
	statement/L1 = "while" "(" expression ")" "{" . codeblock "}"
	statement/L1 = . "{" codeblock "}"
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[257]
	callablebody = "(" parameterlist ")" "{" codeblock . "}"
[258]
	methoddefinition = "function" typespec IDENT "(" parameterlist . ")" ";"
[259]
	methoddefinition = "procedure" IDENT "(" parameterlist ")" . ";"
[260]
	externdefinition = "extern" DQSTRING "function" typespec IDENT "(" externparameterlist ")" ";" .
[261]
	statement/L1 = "if" "(" expression ")" "{" codeblock . "}"
	statement/L1 = "if" "(" expression ")" "{" codeblock . "}" "else" "{" codeblock "}"
[262]
	statement/L1 = "while" "(" expression ")" "{" codeblock . "}"
[263]
	callablebody = "(" parameterlist ")" "{" codeblock "}" .
[264]
	methoddefinition = "function" typespec IDENT "(" parameterlist ")" . ";"
[265]
	methoddefinition = "procedure" IDENT "(" parameterlist ")" ";" .
[266]
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" .
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" . "else" "{" codeblock "}"
[267]
	statement/L1 = "while" "(" expression ")" "{" codeblock "}" .
[268]
	methoddefinition = "function" typespec IDENT "(" parameterlist ")" ";" .
[269]
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" "else" . "{" codeblock "}"
[270]
	typedefinition = . "typedef" typename IDENT
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" typespec IDENT callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody
	codeblock = . statementlist
	statementlist = . statement statementlist
	statementlist = .
	statement/L1 = . functiondefinition
	statement/L1 = . typedefinition ";"
	statement/L1 = . "var" variabledefinition ";"
	statement/L1 = . expression ";"
	statement/L1 = . "return" expression ";"
	statement/L1 = . "delete" expression ";"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}"
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" "else" "{" . codeblock "}"
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "{" codeblock "}"
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[271]
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock . "}"
[272]
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}" .

-- LR(0) state cores (for calculation of SHIFT follow state):
[2]
	program = externlist . definitionlist mainproc
[3]
	externlist = externdefinition . externlist
[4]
	externdefinition = "extern" . DQSTRING "function" typespec IDENT "(" externparameterlist ")" ";"
	externdefinition = "extern" . DQSTRING "procedure" IDENT "(" externparameterlist ")" ";"
[5]
	program = externlist definitionlist . mainproc
[6]
	definition = datadefinition .
[7]
	definitionlist = definition . definitionlist
[8]
	typespec/L1 = typename .
	typespec/L1 = typename . "&"
	typespec/L1 = typename . "^"
	typespec/L1 = typename . "^" "&"
	typespec/L1 = typename . "^" "^"
	typespec/L1 = typename . "^" "^" "&"
[9]
	variabledefinition = typespec . IDENT
	variabledefinition = typespec . IDENT "=" expression
	variabledefinition = typespec . IDENT "[" expression "]" "=" expression
	variabledefinition = typespec . IDENT "[" expression "]"
[10]
	datadefinition = typedefinition . ";"
[11]
	datadefinition = structdefinition . ";"
[12]
	definition = interfacedefinition . ";"
[13]
	definition = classdefinition . ";"
[14]
	functiondefinition = linkage . "function" typespec IDENT callablebody
	functiondefinition = linkage . "procedure" IDENT callablebody
[15]
	definition = functiondefinition .
[16]
	datadefinition = variabledefinition . ";"
[17]
	typename/L1 = IDENT .
	typename/L1 = IDENT . "::" typename
[18]
	typespec/L1 = "const" . typename
	typespec/L1 = "const" . typename "&"
	typespec/L1 = "const" . typename "^"
	typespec/L1 = "const" . typename "^" "&"
	typespec/L1 = "const" . typename "^" "^"
	typespec/L1 = "const" . typename "^" "^" "&"
[19]
	typedefinition = "typedef" . typename IDENT
[20]
	structdefinition = "struct" . IDENT "{" datadefinitionlist "}"
[21]
	interfacedefinition = "interface" . IDENT "{" methoddefinitionlist "}"
[22]
	classdefinition = "class" . IDENT "{" definitionlist "}"
[23]
	linkage = "private" .
[24]
	linkage = "public" .
[25]
	externlist = externdefinition externlist .
[26]
	externdefinition = "extern" DQSTRING . "function" typespec IDENT "(" externparameterlist ")" ";"
	externdefinition = "extern" DQSTRING . "procedure" IDENT "(" externparameterlist ")" ";"
[27]
	program = externlist definitionlist mainproc .
[28]
	mainproc = "main" . "{" codeblock "}"
[29]
	definitionlist = definition definitionlist .
[30]
	typespec/L1 = typename "&" .
[31]
	typespec/L1 = typename "^" .
	typespec/L1 = typename "^" . "&"
	typespec/L1 = typename "^" . "^"
	typespec/L1 = typename "^" . "^" "&"
[32]
	variabledefinition = typespec IDENT .
	variabledefinition = typespec IDENT . "=" expression
	variabledefinition = typespec IDENT . "[" expression "]" "=" expression
	variabledefinition = typespec IDENT . "[" expression "]"
[33]
	datadefinition = typedefinition ";" .
[34]
	datadefinition = structdefinition ";" .
[35]
	definition = interfacedefinition ";" .
[36]
	definition = classdefinition ";" .
[37]
	functiondefinition = linkage "function" . typespec IDENT callablebody
[38]
	functiondefinition = linkage "procedure" . IDENT callablebody
[39]
	datadefinition = variabledefinition ";" .
[40]
	typename/L1 = IDENT "::" . typename
[41]
	typespec/L1 = "const" typename .
	typespec/L1 = "const" typename . "&"
	typespec/L1 = "const" typename . "^"
	typespec/L1 = "const" typename . "^" "&"
	typespec/L1 = "const" typename . "^" "^"
	typespec/L1 = "const" typename . "^" "^" "&"
[42]
	typedefinition = "typedef" typename . IDENT
[43]
	structdefinition = "struct" IDENT . "{" datadefinitionlist "}"
[44]
	interfacedefinition = "interface" IDENT . "{" methoddefinitionlist "}"
[45]
	classdefinition = "class" IDENT . "{" definitionlist "}"
[46]
	externdefinition = "extern" DQSTRING "function" . typespec IDENT "(" externparameterlist ")" ";"
[47]
	externdefinition = "extern" DQSTRING "procedure" . IDENT "(" externparameterlist ")" ";"
[48]
	mainproc = "main" "{" . codeblock "}"
[49]
	typespec/L1 = typename "^" "&" .
[50]
	typespec/L1 = typename "^" "^" .
	typespec/L1 = typename "^" "^" . "&"
[51]
	variabledefinition = typespec IDENT "=" . expression
[52]
	variabledefinition = typespec IDENT "[" . expression "]" "=" expression
	variabledefinition = typespec IDENT "[" . expression "]"
[53]
	functiondefinition = linkage "function" typespec . IDENT callablebody
[54]
	functiondefinition = linkage "procedure" IDENT . callablebody
[55]
	typename/L1 = IDENT "::" typename .
[56]
	typespec/L1 = "const" typename "&" .
[57]
	typespec/L1 = "const" typename "^" .
	typespec/L1 = "const" typename "^" . "&"
	typespec/L1 = "const" typename "^" . "^"
	typespec/L1 = "const" typename "^" . "^" "&"
[58]
	typedefinition = "typedef" typename IDENT .
[59]
	structdefinition = "struct" IDENT "{" . datadefinitionlist "}"
[60]
	interfacedefinition = "interface" IDENT "{" . methoddefinitionlist "}"
[61]
	classdefinition = "class" IDENT "{" . definitionlist "}"
[62]
	externdefinition = "extern" DQSTRING "function" typespec . IDENT "(" externparameterlist ")" ";"
[63]
	externdefinition = "extern" DQSTRING "procedure" IDENT . "(" externparameterlist ")" ";"
[64]
	statement/L1 = typedefinition . ";"
[65]
	statement/L1 = functiondefinition .
[66]
	mainproc = "main" "{" codeblock . "}"
[67]
	codeblock = statementlist .
[68]
	statementlist = statement . statementlist
[69]
	statement/L1 = expression . ";"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[70]
	expression/L12 = iexpression .
[71]
	expression/L2 = BOOLEAN .
[72]
	expression/L2 = IDENT .
[73]
	expression/L2 = DQSTRING .
[74]
	expression/L2 = SQSTRING .
[75]
	expression/L2 = CARDINAL .
[76]
	expression/L2 = INTEGER .
[77]
	expression/L2 = FLOAT .
[78]
	expression/L2 = "(" . expression ")"
[79]
	statement/L1 = "{" . codeblock "}"
	expression/L1 = "{" . expressionlist "}"
	expression/L1 = "{" . "}"
[80]
	expression/L9 = "&" . expression
[81]
	statement/L1 = "var" . variabledefinition ";"
[82]
	statement/L1 = "return" . expression ";"
[83]
	statement/L1 = "delete" . expression ";"
[84]
	statement/L1 = "if" . "(" expression ")" "{" codeblock "}"
	statement/L1 = "if" . "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}"
[85]
	statement/L1 = "while" . "(" expression ")" "{" codeblock "}"
[86]
	expression/L1 = "new" . typespec ":" expression
[87]
	expression/L2 = "null" .
[88]
	expression/L9 = "+" . expression
[89]
	expression/L9 = "-" . expression
[90]
	expression/L9 = "~" . expression
[91]
	expression/L9 = "!" . expression
[92]
	expression/L12 = "*" . expression
[93]
	typespec/L1 = typename "^" "^" "&" .
[94]
	variabledefinition = typespec IDENT "=" expression .
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[95]
	expression/L1 = "{" . expressionlist "}"
	expression/L1 = "{" . "}"
[96]
	variabledefinition = typespec IDENT "[" expression . "]" "=" expression
	variabledefinition = typespec IDENT "[" expression . "]"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[97]
	functiondefinition = linkage "function" typespec IDENT . callablebody
[98]
	functiondefinition = linkage "procedure" IDENT callablebody .
[99]
	callablebody = "(" . parameterlist ")" "{" codeblock "}"
[100]
	typespec/L1 = "const" typename "^" "&" .
[101]
	typespec/L1 = "const" typename "^" "^" .
	typespec/L1 = "const" typename "^" "^" . "&"
[102]
	structdefinition = "struct" IDENT "{" datadefinitionlist . "}"
[103]
	datadefinitionlist = datadefinition . datadefinitionlist
[104]
	interfacedefinition = "interface" IDENT "{" methoddefinitionlist . "}"
[105]
	methoddefinitionlist = methoddefinition . methoddefinitionlist
[106]
	methoddefinition = "function" . typespec IDENT "(" parameterlist ")" ";"
[107]
	methoddefinition = "procedure" . IDENT "(" parameterlist ")" ";"
[108]
	classdefinition = "class" IDENT "{" definitionlist . "}"
[109]
	externdefinition = "extern" DQSTRING "function" typespec IDENT . "(" externparameterlist ")" ";"
[110]
	externdefinition = "extern" DQSTRING "procedure" IDENT "(" . externparameterlist ")" ";"
[111]
	statement/L1 = typedefinition ";" .
[112]
	mainproc = "main" "{" codeblock "}" .
[113]
	statementlist = statement statementlist .
[114]
	iexpression = expression indirection . IDENT
[115]
	expression/L13 = expression "(" . expressionlist ")"
	expression/L13 = expression "(" . ")"
[116]
	statement/L1 = expression ";" .
[117]
	expression/L7 = expression "&" . expression
[118]
	expression/L7 = expression "^" . expression
[119]
	expression/L3 = expression "=" . expression
[120]
	expression/L13 = expression "[" . expressionlist "]"
[121]
	expression/L3 = expression "+=" . expression
[122]
	expression/L3 = expression "-=" . expression
[123]
	expression/L3 = expression "*=" . expression
[124]
	expression/L3 = expression "/=" . expression
[125]
	expression/L3 = expression "%=" . expression
[126]
	expression/L3 = expression "&&=" . expression
[127]
	expression/L3 = expression "||=" . expression
[128]
	expression/L3 = expression "&=" . expression
[129]
	expression/L3 = expression "|=" . expression
[130]
	expression/L3 = expression "<<=" . expression
[131]
	expression/L3 = expression ">>=" . expression
[132]
	expression/L4 = expression "||" . expression
[133]
	expression/L5 = expression "&&" . expression
[134]
	expression/L6 = expression "|" . expression
[135]
	expression/L8 = expression "==" . expression
[136]
	expression/L8 = expression "!=" . expression
[137]
	expression/L8 = expression "<=" . expression
[138]
	expression/L8 = expression "<" . expression
[139]
	expression/L8 = expression ">=" . expression
[140]
	expression/L8 = expression ">" . expression
[141]
	expression/L9 = expression "+" . expression
[142]
	expression/L9 = expression "-" . expression
[143]
	expression/L10 = expression "*" . expression
[144]
	expression/L10 = expression "/" . expression
[145]
	expression/L10 = expression "%" . expression
[146]
	expression/L11 = expression "<<" . expression
[147]
	expression/L11 = expression ">>" . expression
[148]
	expression/L12 = expression "." . IDENT
[149]
	indirection = "->" . indirection
	indirection = "->" .
[150]
	expression/L2 = "(" expression . ")"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[151]
	statement/L1 = "{" codeblock . "}"
[152]
	statement/L1 = expression . ";"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	expressionlist = expression . "," expressionlist
	expressionlist = expression .
[153]
	expression/L1 = "{" expressionlist . "}"
[154]
	expression/L1 = "{" "}" .
[155]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L9 = "&" expression .
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[156]
	statement/L1 = "var" variabledefinition . ";"
[157]
	statement/L1 = "return" expression . ";"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[158]
	statement/L1 = "delete" expression . ";"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[159]
	statement/L1 = "if" "(" . expression ")" "{" codeblock "}"
	statement/L1 = "if" "(" . expression ")" "{" codeblock "}" "else" "{" codeblock "}"
[160]
	statement/L1 = "while" "(" . expression ")" "{" codeblock "}"
[161]
	expression/L1 = "new" typespec . ":" expression
[162]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L9 = "+" expression .
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[163]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L9 = "-" expression .
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[164]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L9 = "~" expression .
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[165]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L9 = "!" expression .
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[166]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L12 = "*" expression .
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[167]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	expressionlist = expression . "," expressionlist
	expressionlist = expression .
[168]
	variabledefinition = typespec IDENT "[" expression "]" . "=" expression
	variabledefinition = typespec IDENT "[" expression "]" .
[169]
	functiondefinition = linkage "function" typespec IDENT callablebody .
[170]
	paramdecl = typespec . IDENT
[171]
	callablebody = "(" parameterlist . ")" "{" codeblock "}"
[172]
	parameterlist = parameters .
[173]
	parameters = paramdecl . "," parameters
	parameters = paramdecl .
[174]
	typespec/L1 = "const" typename "^" "^" "&" .
[175]
	structdefinition = "struct" IDENT "{" datadefinitionlist "}" .
[176]
	datadefinitionlist = datadefinition datadefinitionlist .
[177]
	interfacedefinition = "interface" IDENT "{" methoddefinitionlist "}" .
[178]
	methoddefinitionlist = methoddefinition methoddefinitionlist .
[179]
	methoddefinition = "function" typespec . IDENT "(" parameterlist ")" ";"
[180]
	methoddefinition = "procedure" IDENT . "(" parameterlist ")" ";"
[181]
	classdefinition = "class" IDENT "{" definitionlist "}" .
[182]
	externdefinition = "extern" DQSTRING "function" typespec IDENT "(" . externparameterlist ")" ";"
[183]
	externdefinition = "extern" DQSTRING "procedure" IDENT "(" externparameterlist . ")" ";"
[184]
	externparameterlist = externparameters .
	externparameterlist = externparameters .
[185]
	externparameters = typespec . "," externparameters
	externparameters = typespec .
[186]
	iexpression = expression indirection IDENT .
[187]
	expression/L13 = expression "(" expressionlist . ")"
[188]
	expression/L13 = expression "(" ")" .
[189]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L7 = expression "&" expression .
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[190]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression "^" expression .
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[191]
	expression/L3 = expression . "=" expression
	expression/L3 = expression "=" expression .
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[192]
	expression/L13 = expression "[" expressionlist . "]"
[193]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression "+=" expression .
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[194]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression "-=" expression .
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[195]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression "*=" expression .
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[196]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression "/=" expression .
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[197]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression "%=" expression .
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[198]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression "&&=" expression .
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[199]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression "||=" expression .
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[200]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression "&=" expression .
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[201]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression "|=" expression .
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[202]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression "<<=" expression .
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[203]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L3 = expression ">>=" expression .
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[204]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L4 = expression "||" expression .
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[205]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L5 = expression "&&" expression .
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[206]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L6 = expression "|" expression .
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[207]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression "==" expression .
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[208]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression "!=" expression .
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[209]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression "<=" expression .
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[210]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression "<" expression .
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[211]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression ">=" expression .
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[212]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L8 = expression ">" expression .
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[213]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression "+" expression .
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[214]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L9 = expression "-" expression .
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[215]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression "*" expression .
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[216]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression "/" expression .
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[217]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L10 = expression "%" expression .
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[218]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression "<<" expression .
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[219]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L11 = expression ">>" expression .
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[220]
	expression/L12 = expression "." IDENT .
[221]
	indirection = "->" indirection .
[222]
	expression/L2 = "(" expression ")" .
[223]
	statement/L1 = "{" codeblock "}" .
[224]
	expressionlist = expression "," . expressionlist
[225]
	expression/L1 = "{" expressionlist "}" .
[226]
	statement/L1 = "var" variabledefinition ";" .
[227]
	statement/L1 = "return" expression ";" .
[228]
	statement/L1 = "delete" expression ";" .
[229]
	statement/L1 = "if" "(" expression . ")" "{" codeblock "}"
	statement/L1 = "if" "(" expression . ")" "{" codeblock "}" "else" "{" codeblock "}"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[230]
	statement/L1 = "while" "(" expression . ")" "{" codeblock "}"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[231]
	expression/L1 = "new" typespec ":" . expression
[232]
	variabledefinition = typespec IDENT "[" expression "]" "=" . expression
[233]
	paramdecl = typespec IDENT .
[234]
	callablebody = "(" parameterlist ")" . "{" codeblock "}"
[235]
	parameters = paramdecl "," . parameters
[236]
	methoddefinition = "function" typespec IDENT . "(" parameterlist ")" ";"
[237]
	methoddefinition = "procedure" IDENT "(" . parameterlist ")" ";"
[238]
	externdefinition = "extern" DQSTRING "function" typespec IDENT "(" externparameterlist . ")" ";"
[239]
	externdefinition = "extern" DQSTRING "procedure" IDENT "(" externparameterlist ")" . ";"
[240]
	externparameters = typespec "," . externparameters
[241]
	expression/L13 = expression "(" expressionlist ")" .
[242]
	expression/L13 = expression "[" expressionlist "]" .
[243]
	expressionlist = expression "," expressionlist .
[244]
	statement/L1 = "if" "(" expression ")" . "{" codeblock "}"
	statement/L1 = "if" "(" expression ")" . "{" codeblock "}" "else" "{" codeblock "}"
[245]
	statement/L1 = "while" "(" expression ")" . "{" codeblock "}"
[246]
	expression/L1 = "new" typespec ":" expression .
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[247]
	variabledefinition = typespec IDENT "[" expression "]" "=" expression .
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[248]
	callablebody = "(" parameterlist ")" "{" . codeblock "}"
[249]
	parameters = paramdecl "," parameters .
[250]
	methoddefinition = "function" typespec IDENT "(" . parameterlist ")" ";"
[251]
	methoddefinition = "procedure" IDENT "(" parameterlist . ")" ";"
[252]
	externdefinition = "extern" DQSTRING "function" typespec IDENT "(" externparameterlist ")" . ";"
[253]
	externdefinition = "extern" DQSTRING "procedure" IDENT "(" externparameterlist ")" ";" .
[254]
	externparameters = typespec "," externparameters .
[255]
	statement/L1 = "if" "(" expression ")" "{" . codeblock "}"
	statement/L1 = "if" "(" expression ")" "{" . codeblock "}" "else" "{" codeblock "}"
[256]
	statement/L1 = "while" "(" expression ")" "{" . codeblock "}"
[257]
	callablebody = "(" parameterlist ")" "{" codeblock . "}"
[258]
	methoddefinition = "function" typespec IDENT "(" parameterlist . ")" ";"
[259]
	methoddefinition = "procedure" IDENT "(" parameterlist ")" . ";"
[260]
	externdefinition = "extern" DQSTRING "function" typespec IDENT "(" externparameterlist ")" ";" .
[261]
	statement/L1 = "if" "(" expression ")" "{" codeblock . "}"
	statement/L1 = "if" "(" expression ")" "{" codeblock . "}" "else" "{" codeblock "}"
[262]
	statement/L1 = "while" "(" expression ")" "{" codeblock . "}"
[263]
	callablebody = "(" parameterlist ")" "{" codeblock "}" .
[264]
	methoddefinition = "function" typespec IDENT "(" parameterlist ")" . ";"
[265]
	methoddefinition = "procedure" IDENT "(" parameterlist ")" ";" .
[266]
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" .
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" . "else" "{" codeblock "}"
[267]
	statement/L1 = "while" "(" expression ")" "{" codeblock "}" .
[268]
	methoddefinition = "function" typespec IDENT "(" parameterlist ")" ";" .
[269]
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" "else" . "{" codeblock "}"
[270]
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" "else" "{" . codeblock "}"
[271]
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock . "}"
[272]
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}" .

-- LR(1) used FOLLOW sets labeled:
[0]: {$}
[1]: {$ IDENT "function" "procedure" "main" "const" "typedef" "struct" "interface" "class" "private" "public"}
[2]: {$ "main"}
[8]: {IDENT}
[9]: {')'}
[11]: {'}'}
[12]: {';'}
[18]: {']'}
[19]: {':'}
[52]: {$ IDENT "extern" "function" "procedure" "main" "const" "typedef" "struct" "interface" "class" "private" "public"}
[54]: {"function" "procedure"}
[55]: {IDENT '&' '^'}
[89]: {'(' ';' '&' '^' '=' '[' "+=" "-=" "*=" "/=" "%=" "&&=" "||=" "&=" "|=" "<<=" ">>=" "||" "&&" '|' "==" "!=" "<=" '<' ">=" '>' '+' '-' '*' '/' '%' "<<" ">>" '.' "->"}
[90]: {$ BOOLEAN IDENT DQSTRING SQSTRING CARDINAL INTEGER FLOAT "function" '(' "procedure" '{' '}' '&' "typedef" "private" "public" "var" "return" "delete" "if" "while" "new" "null" '+' '-' '~' '!' '*'}
[157]: {'(' '&' '^' '=' '[' ']' "+=" "-=" "*=" "/=" "%=" "&&=" "||=" "&=" "|=" "<<=" ">>=" "||" "&&" '|' "==" "!=" "<=" '<' ">=" '>' '+' '-' '*' '/' '%' "<<" ">>" '.' "->"}
[158]: {$ IDENT '}' "const" "typedef" "struct"}
[159]: {$ "function" "procedure" '}'}
[160]: {$ IDENT "function" "procedure" '}' "const" "typedef" "struct" "interface" "class" "private" "public"}
[163]: {'(' ';' ',' '}' '&' '^' '=' '[' "+=" "-=" "*=" "/=" "%=" "&&=" "||=" "&=" "|=" "<<=" ">>=" "||" "&&" '|' "==" "!=" "<=" '<' ">=" '>' '+' '-' '*' '/' '%' "<<" ">>" '.' "->"}
[164]: {'&' '^' ':'}
[168]: {')' ','}
[169]: {')' ',' '&' '^'}
[206]: {'(' ')' '&' '^' '=' '[' "+=" "-=" "*=" "/=" "%=" "&&=" "||=" "&=" "|=" "<<=" ">>=" "||" "&&" '|' "==" "!=" "<=" '<' ">=" '>' '+' '-' '*' '/' '%' "<<" ">>" '.' "->"}
[208]: {'(' ')' ',' '}' '&' '^' '=' '[' ']' "+=" "-=" "*=" "/=" "%=" "&&=" "||=" "&=" "|=" "<<=" ">>=" "||" "&&" '|' "==" "!=" "<=" '<' ">=" '>' '+' '-' '*' '/' '%' "<<" ">>" '.' "->"}
[215]: {'(' ')' ';' ',' '}' '&' '^' '=' '[' ']' "+=" "-=" "*=" "/=" "%=" "&&=" "||=" "&=" "|=" "<<=" ">>=" "||" "&&" '|' "==" "!=" "<=" '<' ">=" '>' '+' '-' '*' '/' '%' "<<" ">>" '.' "->"}
[217]: {$ BOOLEAN IDENT DQSTRING SQSTRING CARDINAL INTEGER FLOAT "function" '(' "procedure" "main" '{' '}' "const" '&' "typedef" "struct" "interface" "class" "private" "public" "var" "return" "delete" "if" "while" "new" "null" '+' '-' '~' '!' '*'}
[220]: {')' '}' ']'}
[224]: {$ IDENT "function" "procedure" "main" '}' "const" "typedef" "struct" "interface" "class" "private" "public"}
[225]: {IDENT ')' ',' ':'}
[226]: {$ "main" '}'}
[228]: {IDENT ')' ',' '&' '^' ':'}

-- LALR(1) states (merged LR(1) elements assigned to LR(0) states):
[1]
	program = . externlist definitionlist mainproc, FOLLOW [0] -> GOTO 2
	externlist = . externdefinition externlist, FOLLOW [1] -> GOTO 3
	externdefinition = . "extern" DQSTRING "function" typespec IDENT "(" externparameterlist ")" ";", FOLLOW [52] -> SHIFT "extern" GOTO 4
	externdefinition = . "extern" DQSTRING "procedure" IDENT "(" externparameterlist ")" ";", FOLLOW [52] -> SHIFT "extern" GOTO 4
	externlist = ., FOLLOW [1] -> REDUCE externlist #0
[2]
	program = externlist . definitionlist mainproc, FOLLOW [0] -> GOTO 5
	definition = . datadefinition, FOLLOW [1] -> GOTO 6
	definitionlist = . definition definitionlist, FOLLOW [2] -> GOTO 7
	typespec/L1 = . typename, FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [8] -> GOTO 8
	variabledefinition = . typespec IDENT, FOLLOW [12] -> GOTO 9
	variabledefinition = . typespec IDENT "=" expression, FOLLOW [12] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression, FOLLOW [12] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]", FOLLOW [12] -> GOTO 9
	datadefinition = . typedefinition ";", FOLLOW [1] -> GOTO 10
	datadefinition = . structdefinition ";", FOLLOW [1] -> GOTO 11
	definition = . interfacedefinition ";", FOLLOW [1] -> GOTO 12
	definition = . classdefinition ";", FOLLOW [1] -> GOTO 13
	functiondefinition = . linkage "function" typespec IDENT callablebody, FOLLOW [1] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [1] -> GOTO 14
	definition = . functiondefinition, FOLLOW [1] -> GOTO 15
	datadefinition = . variabledefinition ";", FOLLOW [1] -> GOTO 16
	typename/L1 = . IDENT, FOLLOW [55] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [55] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [8] -> SHIFT "const" GOTO 18
	typedefinition = . "typedef" typename IDENT, FOLLOW [12] -> SHIFT "typedef" GOTO 19
	structdefinition = . "struct" IDENT "{" datadefinitionlist "}", FOLLOW [12] -> SHIFT "struct" GOTO 20
	interfacedefinition = . "interface" IDENT "{" methoddefinitionlist "}", FOLLOW [12] -> SHIFT "interface" GOTO 21
	classdefinition = . "class" IDENT "{" definitionlist "}", FOLLOW [12] -> SHIFT "class" GOTO 22
	linkage = . "private", FOLLOW [54] -> SHIFT "private" GOTO 23
	linkage = . "public", FOLLOW [54] -> SHIFT "public" GOTO 24
	definitionlist = ., FOLLOW [2] -> REDUCE definitionlist #0
	linkage = . (25), FOLLOW [54] -> REDUCE linkage #0 CALL linkage {linkage="internal",attributes="#0 nounwind"}
[3]
	externlist = externdefinition . externlist, FOLLOW [1] -> GOTO 25
	externlist = . externdefinition externlist, FOLLOW [1] -> GOTO 3
	externdefinition = . "extern" DQSTRING "function" typespec IDENT "(" externparameterlist ")" ";", FOLLOW [52] -> SHIFT "extern" GOTO 4
	externdefinition = . "extern" DQSTRING "procedure" IDENT "(" externparameterlist ")" ";", FOLLOW [52] -> SHIFT "extern" GOTO 4
	externlist = ., FOLLOW [1] -> REDUCE externlist #0
[4]
	externdefinition = "extern" . DQSTRING "function" typespec IDENT "(" externparameterlist ")" ";", FOLLOW [52] -> SHIFT DQSTRING GOTO 26
	externdefinition = "extern" . DQSTRING "procedure" IDENT "(" externparameterlist ")" ";", FOLLOW [52] -> SHIFT DQSTRING GOTO 26
[5]
	program = externlist definitionlist . mainproc, FOLLOW [0] -> GOTO 27
	mainproc = . "main" "{" codeblock "}", FOLLOW [0] -> SHIFT "main" GOTO 28
	mainproc = ., FOLLOW [0] -> REDUCE mainproc #0
[6]
	definition = datadefinition ., FOLLOW [224] -> REDUCE definition #1
[7]
	definitionlist = definition . definitionlist, FOLLOW [226] -> GOTO 29
	definition = . datadefinition, FOLLOW [224] -> GOTO 6
	definitionlist = . definition definitionlist, FOLLOW [226] -> GOTO 7
	typespec/L1 = . typename, FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [8] -> GOTO 8
	variabledefinition = . typespec IDENT, FOLLOW [12] -> GOTO 9
	variabledefinition = . typespec IDENT "=" expression, FOLLOW [12] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression, FOLLOW [12] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]", FOLLOW [12] -> GOTO 9
	datadefinition = . typedefinition ";", FOLLOW [224] -> GOTO 10
	datadefinition = . structdefinition ";", FOLLOW [224] -> GOTO 11
	definition = . interfacedefinition ";", FOLLOW [224] -> GOTO 12
	definition = . classdefinition ";", FOLLOW [224] -> GOTO 13
	functiondefinition = . linkage "function" typespec IDENT callablebody, FOLLOW [224] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [224] -> GOTO 14
	definition = . functiondefinition, FOLLOW [224] -> GOTO 15
	datadefinition = . variabledefinition ";", FOLLOW [224] -> GOTO 16
	typename/L1 = . IDENT, FOLLOW [55] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [55] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [8] -> SHIFT "const" GOTO 18
	typedefinition = . "typedef" typename IDENT, FOLLOW [12] -> SHIFT "typedef" GOTO 19
	structdefinition = . "struct" IDENT "{" datadefinitionlist "}", FOLLOW [12] -> SHIFT "struct" GOTO 20
	interfacedefinition = . "interface" IDENT "{" methoddefinitionlist "}", FOLLOW [12] -> SHIFT "interface" GOTO 21
	classdefinition = . "class" IDENT "{" definitionlist "}", FOLLOW [12] -> SHIFT "class" GOTO 22
	linkage = . "private", FOLLOW [54] -> SHIFT "private" GOTO 23
	linkage = . "public", FOLLOW [54] -> SHIFT "public" GOTO 24
	linkage = . (25), FOLLOW [54] -> REDUCE linkage #0 CALL linkage {linkage="internal",attributes="#0 nounwind"}
	definitionlist = ., FOLLOW [226] -> REDUCE definitionlist #0
[8]
	typespec/L1 = typename . "&", FOLLOW [225] -> SHIFT '&' GOTO 30
	typespec/L1 = typename . "^", FOLLOW [225] -> SHIFT '^' GOTO 31
	typespec/L1 = typename . "^" "&", FOLLOW [225] -> SHIFT '^' GOTO 31
	typespec/L1 = typename . "^" "^", FOLLOW [225] -> SHIFT '^' GOTO 31
	typespec/L1 = typename . "^" "^" "&", FOLLOW [225] -> SHIFT '^' GOTO 31
	typespec/L1 = typename . (9), FOLLOW [225] -> REDUCE typespec #1 CALL typespec ""
[9]
	variabledefinition = typespec . IDENT, FOLLOW [12] -> SHIFT IDENT GOTO 32
	variabledefinition = typespec . IDENT "=" expression, FOLLOW [12] -> SHIFT IDENT GOTO 32
	variabledefinition = typespec . IDENT "[" expression "]" "=" expression, FOLLOW [12] -> SHIFT IDENT GOTO 32
	variabledefinition = typespec . IDENT "[" expression "]", FOLLOW [12] -> SHIFT IDENT GOTO 32
[10]
	datadefinition = typedefinition . ";", FOLLOW [224] -> SHIFT ';' GOTO 33
[11]
	datadefinition = structdefinition . ";", FOLLOW [224] -> SHIFT ';' GOTO 34
[12]
	definition = interfacedefinition . ";", FOLLOW [224] -> SHIFT ';' GOTO 35
[13]
	definition = classdefinition . ";", FOLLOW [224] -> SHIFT ';' GOTO 36
[14]
	functiondefinition = linkage . "function" typespec IDENT callablebody, FOLLOW [217] -> SHIFT "function" GOTO 37
	functiondefinition = linkage . "procedure" IDENT callablebody, FOLLOW [217] -> SHIFT "procedure" GOTO 38
[15]
	definition = functiondefinition . (8), FOLLOW [224] -> REDUCE definition #1 CALL definition
[16]
	datadefinition = variabledefinition . ";", FOLLOW [224] -> SHIFT ';' GOTO 39
[17]
	typename/L1 = IDENT . "::" typename, FOLLOW [228] -> SHIFT "::" GOTO 40
	typename/L1 = IDENT ., FOLLOW [228] -> REDUCE typename #1
[18]
	typespec/L1 = "const" . typename, FOLLOW [225] -> GOTO 41
	typespec/L1 = "const" . typename "&", FOLLOW [225] -> GOTO 41
	typespec/L1 = "const" . typename "^", FOLLOW [225] -> GOTO 41
	typespec/L1 = "const" . typename "^" "&", FOLLOW [225] -> GOTO 41
	typespec/L1 = "const" . typename "^" "^", FOLLOW [225] -> GOTO 41
	typespec/L1 = "const" . typename "^" "^" "&", FOLLOW [225] -> GOTO 41
	typename/L1 = . IDENT, FOLLOW [228] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [228] -> SHIFT IDENT GOTO 17
[19]
	typedefinition = "typedef" . typename IDENT, FOLLOW [12] -> GOTO 42
	typename/L1 = . IDENT, FOLLOW [8] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [8] -> SHIFT IDENT GOTO 17
[20]
	structdefinition = "struct" . IDENT "{" datadefinitionlist "}", FOLLOW [12] -> SHIFT IDENT GOTO 43
[21]
	interfacedefinition = "interface" . IDENT "{" methoddefinitionlist "}", FOLLOW [12] -> SHIFT IDENT GOTO 44
[22]
	classdefinition = "class" . IDENT "{" definitionlist "}", FOLLOW [12] -> SHIFT IDENT GOTO 45
[23]
	linkage = "private" . (25), FOLLOW [54] -> REDUCE linkage #1 CALL linkage {linkage="internal",attributes="#0 nounwind"}
[24]
	linkage = "public" . (26), FOLLOW [54] -> REDUCE linkage #1 CALL linkage {linkage="external",attributes="#0 noinline nounwind"}
[25]
	externlist = externdefinition externlist ., FOLLOW [1] -> REDUCE externlist #2
[26]
	externdefinition = "extern" DQSTRING . "function" typespec IDENT "(" externparameterlist ")" ";", FOLLOW [52] -> SHIFT "function" GOTO 46
	externdefinition = "extern" DQSTRING . "procedure" IDENT "(" externparameterlist ")" ";", FOLLOW [52] -> SHIFT "procedure" GOTO 47
[27]
	program = externlist definitionlist mainproc . (1) -> ACCEPT
	program = externlist definitionlist mainproc . (1), FOLLOW [0] -> REDUCE program #3 CALL program
[28]
	mainproc = "main" . "{" codeblock "}", FOLLOW [0] -> SHIFT '{' GOTO 48
[29]
	definitionlist = definition definitionlist ., FOLLOW [226] -> REDUCE definitionlist #2
[30]
	typespec/L1 = typename "&" . (11), FOLLOW [225] -> REDUCE typespec #2 CALL typespec "&"
[31]
	typespec/L1 = typename "^" . "&", FOLLOW [225] -> SHIFT '&' GOTO 49
	typespec/L1 = typename "^" . "^", FOLLOW [225] -> SHIFT '^' GOTO 50
	typespec/L1 = typename "^" . "^" "&", FOLLOW [225] -> SHIFT '^' GOTO 50
	typespec/L1 = typename "^" . (13), FOLLOW [225] -> REDUCE typespec #2 CALL typespec "^"
[32]
	variabledefinition = typespec IDENT . "=" expression, FOLLOW [12] -> SHIFT '=' GOTO 51
	variabledefinition = typespec IDENT . "[" expression "]" "=" expression, FOLLOW [12] -> SHIFT '[' GOTO 52
	variabledefinition = typespec IDENT . "[" expression "]", FOLLOW [12] -> SHIFT '[' GOTO 52
	variabledefinition = typespec IDENT . (step:39), FOLLOW [12] -> REDUCE variabledefinition #2 CALL vardef
[33]
	datadefinition = typedefinition ";" . (8), FOLLOW [224] -> REDUCE datadefinition #2 CALL definition
[34]
	datadefinition = structdefinition ";" . (8), FOLLOW [224] -> REDUCE datadefinition #2 CALL definition
[35]
	definition = interfacedefinition ";" . (8), FOLLOW [224] -> REDUCE definition #2 CALL definition
[36]
	definition = classdefinition ";" . (8), FOLLOW [224] -> REDUCE definition #2 CALL definition
[37]
	typespec/L1 = . typename, FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [8] -> GOTO 8
	functiondefinition = linkage "function" . typespec IDENT callablebody, FOLLOW [217] -> GOTO 53
	typename/L1 = . IDENT, FOLLOW [55] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [55] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [8] -> SHIFT "const" GOTO 18
[38]
	functiondefinition = linkage "procedure" . IDENT callablebody, FOLLOW [217] -> SHIFT IDENT GOTO 54
[39]
	datadefinition = variabledefinition ";" . (8), FOLLOW [224] -> REDUCE datadefinition #2 CALL definition
[40]
	typename/L1 = IDENT "::" . typename, FOLLOW [228] -> GOTO 55
	typename/L1 = . IDENT, FOLLOW [228] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [228] -> SHIFT IDENT GOTO 17
[41]
	typespec/L1 = "const" typename . "&", FOLLOW [225] -> SHIFT '&' GOTO 56
	typespec/L1 = "const" typename . "^", FOLLOW [225] -> SHIFT '^' GOTO 57
	typespec/L1 = "const" typename . "^" "&", FOLLOW [225] -> SHIFT '^' GOTO 57
	typespec/L1 = "const" typename . "^" "^", FOLLOW [225] -> SHIFT '^' GOTO 57
	typespec/L1 = "const" typename . "^" "^" "&", FOLLOW [225] -> SHIFT '^' GOTO 57
	typespec/L1 = "const" typename . (10), FOLLOW [225] -> REDUCE typespec #2 CALL typespec "const "
[42]
	typedefinition = "typedef" typename . IDENT, FOLLOW [12] -> SHIFT IDENT GOTO 58
[43]
	structdefinition = "struct" IDENT . "{" datadefinitionlist "}", FOLLOW [12] -> SHIFT '{' GOTO 59
[44]
	interfacedefinition = "interface" IDENT . "{" methoddefinitionlist "}", FOLLOW [12] -> SHIFT '{' GOTO 60
[45]
	classdefinition = "class" IDENT . "{" definitionlist "}", FOLLOW [12] -> SHIFT '{' GOTO 61
[46]
	typespec/L1 = . typename, FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [8] -> GOTO 8
	externdefinition = "extern" DQSTRING "function" . typespec IDENT "(" externparameterlist ")" ";", FOLLOW [52] -> GOTO 62
	typename/L1 = . IDENT, FOLLOW [55] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [55] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [8] -> SHIFT "const" GOTO 18
[47]
	externdefinition = "extern" DQSTRING "procedure" . IDENT "(" externparameterlist ")" ";", FOLLOW [52] -> SHIFT IDENT GOTO 63
[48]
	statement/L1 = . typedefinition ";", FOLLOW [90] -> GOTO 64
	functiondefinition = . linkage "function" typespec IDENT callablebody, FOLLOW [90] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [90] -> GOTO 14
	statement/L1 = . functiondefinition, FOLLOW [90] -> GOTO 65
	mainproc = "main" "{" . codeblock "}", FOLLOW [0] -> GOTO 66
	codeblock = . statementlist, FOLLOW [11] -> GOTO 67
	statementlist = . statement statementlist, FOLLOW [11] -> GOTO 68
	statement/L1 = . expression ";", FOLLOW [90] -> GOTO 69
	expression/L3 = . expression "=" expression, FOLLOW [89] -> GOTO 69
	expression/L3 = . expression "+=" expression, FOLLOW [89] -> GOTO 69
	expression/L3 = . expression "-=" expression, FOLLOW [89] -> GOTO 69
	expression/L3 = . expression "*=" expression, FOLLOW [89] -> GOTO 69
	expression/L3 = . expression "/=" expression, FOLLOW [89] -> GOTO 69
	expression/L3 = . expression "%=" expression, FOLLOW [89] -> GOTO 69
	expression/L3 = . expression "&&=" expression, FOLLOW [89] -> GOTO 69
	expression/L3 = . expression "||=" expression, FOLLOW [89] -> GOTO 69
	expression/L3 = . expression "&=" expression, FOLLOW [89] -> GOTO 69
	expression/L3 = . expression "|=" expression, FOLLOW [89] -> GOTO 69
	expression/L3 = . expression "<<=" expression, FOLLOW [89] -> GOTO 69
	expression/L3 = . expression ">>=" expression, FOLLOW [89] -> GOTO 69
	expression/L4 = . expression "||" expression, FOLLOW [89] -> GOTO 69
	expression/L5 = . expression "&&" expression, FOLLOW [89] -> GOTO 69
	expression/L6 = . expression "|" expression, FOLLOW [89] -> GOTO 69
	expression/L7 = . expression "^" expression, FOLLOW [89] -> GOTO 69
	expression/L7 = . expression "&" expression, FOLLOW [89] -> GOTO 69
	expression/L8 = . expression "==" expression, FOLLOW [89] -> GOTO 69
	expression/L8 = . expression "!=" expression, FOLLOW [89] -> GOTO 69
	expression/L8 = . expression "<=" expression, FOLLOW [89] -> GOTO 69
	expression/L8 = . expression "<" expression, FOLLOW [89] -> GOTO 69
	expression/L8 = . expression ">=" expression, FOLLOW [89] -> GOTO 69
	expression/L8 = . expression ">" expression, FOLLOW [89] -> GOTO 69
	expression/L9 = . expression "+" expression, FOLLOW [89] -> GOTO 69
	expression/L9 = . expression "-" expression, FOLLOW [89] -> GOTO 69
	expression/L10 = . expression "*" expression, FOLLOW [89] -> GOTO 69
	expression/L10 = . expression "/" expression, FOLLOW [89] -> GOTO 69
	expression/L10 = . expression "%" expression, FOLLOW [89] -> GOTO 69
	expression/L11 = . expression "<<" expression, FOLLOW [89] -> GOTO 69
	expression/L11 = . expression ">>" expression, FOLLOW [89] -> GOTO 69
	expression/L12 = . expression "." IDENT, FOLLOW [89] -> GOTO 69
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [89] -> GOTO 69
	expression/L13 = . expression "(" ")", FOLLOW [89] -> GOTO 69
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [89] -> GOTO 69
	iexpression = . expression indirection IDENT, FOLLOW [89] -> GOTO 69
	expression/L12 = . iexpression, FOLLOW [89] -> GOTO 70
	expression/L2 = . BOOLEAN, FOLLOW [89] -> SHIFT BOOLEAN GOTO 71
	expression/L2 = . IDENT, FOLLOW [89] -> SHIFT IDENT GOTO 72
	expression/L2 = . DQSTRING, FOLLOW [89] -> SHIFT DQSTRING GOTO 73
	expression/L2 = . SQSTRING, FOLLOW [89] -> SHIFT SQSTRING GOTO 74
	expression/L2 = . CARDINAL, FOLLOW [89] -> SHIFT CARDINAL GOTO 75
	expression/L2 = . INTEGER, FOLLOW [89] -> SHIFT INTEGER GOTO 76
	expression/L2 = . FLOAT, FOLLOW [89] -> SHIFT FLOAT GOTO 77
	expression/L2 = . "(" expression ")", FOLLOW [89] -> SHIFT '(' GOTO 78
	statement/L1 = . "{" codeblock "}", FOLLOW [90] -> SHIFT '{' GOTO 79
	expression/L1 = . "{" expressionlist "}", FOLLOW [89] -> SHIFT '{' GOTO 79
	expression/L1 = . "{" "}", FOLLOW [89] -> SHIFT '{' GOTO 79
	expression/L9 = . "&" expression, FOLLOW [89] -> SHIFT '&' GOTO 80
	typedefinition = . "typedef" typename IDENT, FOLLOW [12] -> SHIFT "typedef" GOTO 19
	linkage = . "private", FOLLOW [54] -> SHIFT "private" GOTO 23
	linkage = . "public", FOLLOW [54] -> SHIFT "public" GOTO 24
	statement/L1 = . "var" variabledefinition ";", FOLLOW [90] -> SHIFT "var" GOTO 81
	statement/L1 = . "return" expression ";", FOLLOW [90] -> SHIFT "return" GOTO 82
	statement/L1 = . "delete" expression ";", FOLLOW [90] -> SHIFT "delete" GOTO 83
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}", FOLLOW [90] -> SHIFT "if" GOTO 84
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}", FOLLOW [90] -> SHIFT "if" GOTO 84
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}", FOLLOW [90] -> SHIFT "while" GOTO 85
	expression/L1 = . "new" typespec ":" expression, FOLLOW [89] -> SHIFT "new" GOTO 86
	expression/L2 = . "null", FOLLOW [89] -> SHIFT "null" GOTO 87
	expression/L9 = . "+" expression, FOLLOW [89] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [89] -> SHIFT '-' GOTO 89
	expression/L9 = . "~" expression, FOLLOW [89] -> SHIFT '~' GOTO 90
	expression/L9 = . "!" expression, FOLLOW [89] -> SHIFT '!' GOTO 91
	expression/L12 = . "*" expression, FOLLOW [89] -> SHIFT '*' GOTO 92
	statementlist = ., FOLLOW [11] -> REDUCE statementlist #0
	linkage = . (25), FOLLOW [54] -> REDUCE linkage #0 CALL linkage {linkage="internal",attributes="#0 nounwind"}
[49]
	typespec/L1 = typename "^" "&" . (15), FOLLOW [225] -> REDUCE typespec #3 CALL typespec "^&"
[50]
	typespec/L1 = typename "^" "^" . "&", FOLLOW [225] -> SHIFT '&' GOTO 93
	typespec/L1 = typename "^" "^" . (17), FOLLOW [225] -> REDUCE typespec #3 CALL typespec "^^"
[51]
	variabledefinition = typespec IDENT "=" . expression, FOLLOW [12] -> GOTO 94
	expression/L3 = . expression "=" expression, FOLLOW [89] -> GOTO 94
	expression/L3 = . expression "+=" expression, FOLLOW [89] -> GOTO 94
	expression/L3 = . expression "-=" expression, FOLLOW [89] -> GOTO 94
	expression/L3 = . expression "*=" expression, FOLLOW [89] -> GOTO 94
	expression/L3 = . expression "/=" expression, FOLLOW [89] -> GOTO 94
	expression/L3 = . expression "%=" expression, FOLLOW [89] -> GOTO 94
	expression/L3 = . expression "&&=" expression, FOLLOW [89] -> GOTO 94
	expression/L3 = . expression "||=" expression, FOLLOW [89] -> GOTO 94
	expression/L3 = . expression "&=" expression, FOLLOW [89] -> GOTO 94
	expression/L3 = . expression "|=" expression, FOLLOW [89] -> GOTO 94
	expression/L3 = . expression "<<=" expression, FOLLOW [89] -> GOTO 94
	expression/L3 = . expression ">>=" expression, FOLLOW [89] -> GOTO 94
	expression/L4 = . expression "||" expression, FOLLOW [89] -> GOTO 94
	expression/L5 = . expression "&&" expression, FOLLOW [89] -> GOTO 94
	expression/L6 = . expression "|" expression, FOLLOW [89] -> GOTO 94
	expression/L7 = . expression "^" expression, FOLLOW [89] -> GOTO 94
	expression/L7 = . expression "&" expression, FOLLOW [89] -> GOTO 94
	expression/L8 = . expression "==" expression, FOLLOW [89] -> GOTO 94
	expression/L8 = . expression "!=" expression, FOLLOW [89] -> GOTO 94
	expression/L8 = . expression "<=" expression, FOLLOW [89] -> GOTO 94
	expression/L8 = . expression "<" expression, FOLLOW [89] -> GOTO 94
	expression/L8 = . expression ">=" expression, FOLLOW [89] -> GOTO 94
	expression/L8 = . expression ">" expression, FOLLOW [89] -> GOTO 94
	expression/L9 = . expression "+" expression, FOLLOW [89] -> GOTO 94
	expression/L9 = . expression "-" expression, FOLLOW [89] -> GOTO 94
	expression/L10 = . expression "*" expression, FOLLOW [89] -> GOTO 94
	expression/L10 = . expression "/" expression, FOLLOW [89] -> GOTO 94
	expression/L10 = . expression "%" expression, FOLLOW [89] -> GOTO 94
	expression/L11 = . expression "<<" expression, FOLLOW [89] -> GOTO 94
	expression/L11 = . expression ">>" expression, FOLLOW [89] -> GOTO 94
	expression/L12 = . expression "." IDENT, FOLLOW [89] -> GOTO 94
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [89] -> GOTO 94
	expression/L13 = . expression "(" ")", FOLLOW [89] -> GOTO 94
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [89] -> GOTO 94
	iexpression = . expression indirection IDENT, FOLLOW [89] -> GOTO 94
	expression/L12 = . iexpression, FOLLOW [89] -> GOTO 70
	expression/L2 = . BOOLEAN, FOLLOW [89] -> SHIFT BOOLEAN GOTO 71
	expression/L2 = . IDENT, FOLLOW [89] -> SHIFT IDENT GOTO 72
	expression/L2 = . DQSTRING, FOLLOW [89] -> SHIFT DQSTRING GOTO 73
	expression/L2 = . SQSTRING, FOLLOW [89] -> SHIFT SQSTRING GOTO 74
	expression/L2 = . CARDINAL, FOLLOW [89] -> SHIFT CARDINAL GOTO 75
	expression/L2 = . INTEGER, FOLLOW [89] -> SHIFT INTEGER GOTO 76
	expression/L2 = . FLOAT, FOLLOW [89] -> SHIFT FLOAT GOTO 77
	expression/L2 = . "(" expression ")", FOLLOW [89] -> SHIFT '(' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [89] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [89] -> SHIFT '{' GOTO 95
	expression/L9 = . "&" expression, FOLLOW [89] -> SHIFT '&' GOTO 80
	expression/L1 = . "new" typespec ":" expression, FOLLOW [89] -> SHIFT "new" GOTO 86
	expression/L2 = . "null", FOLLOW [89] -> SHIFT "null" GOTO 87
	expression/L9 = . "+" expression, FOLLOW [89] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [89] -> SHIFT '-' GOTO 89
	expression/L9 = . "~" expression, FOLLOW [89] -> SHIFT '~' GOTO 90
	expression/L9 = . "!" expression, FOLLOW [89] -> SHIFT '!' GOTO 91
	expression/L12 = . "*" expression, FOLLOW [89] -> SHIFT '*' GOTO 92
[52]
	variabledefinition = typespec IDENT "[" . expression "]" "=" expression, FOLLOW [12] -> GOTO 96
	variabledefinition = typespec IDENT "[" . expression "]", FOLLOW [12] -> GOTO 96
	expression/L3 = . expression "=" expression, FOLLOW [157] -> GOTO 96
	expression/L3 = . expression "+=" expression, FOLLOW [157] -> GOTO 96
	expression/L3 = . expression "-=" expression, FOLLOW [157] -> GOTO 96
	expression/L3 = . expression "*=" expression, FOLLOW [157] -> GOTO 96
	expression/L3 = . expression "/=" expression, FOLLOW [157] -> GOTO 96
	expression/L3 = . expression "%=" expression, FOLLOW [157] -> GOTO 96
	expression/L3 = . expression "&&=" expression, FOLLOW [157] -> GOTO 96
	expression/L3 = . expression "||=" expression, FOLLOW [157] -> GOTO 96
	expression/L3 = . expression "&=" expression, FOLLOW [157] -> GOTO 96
	expression/L3 = . expression "|=" expression, FOLLOW [157] -> GOTO 96
	expression/L3 = . expression "<<=" expression, FOLLOW [157] -> GOTO 96
	expression/L3 = . expression ">>=" expression, FOLLOW [157] -> GOTO 96
	expression/L4 = . expression "||" expression, FOLLOW [157] -> GOTO 96
	expression/L5 = . expression "&&" expression, FOLLOW [157] -> GOTO 96
	expression/L6 = . expression "|" expression, FOLLOW [157] -> GOTO 96
	expression/L7 = . expression "^" expression, FOLLOW [157] -> GOTO 96
	expression/L7 = . expression "&" expression, FOLLOW [157] -> GOTO 96
	expression/L8 = . expression "==" expression, FOLLOW [157] -> GOTO 96
	expression/L8 = . expression "!=" expression, FOLLOW [157] -> GOTO 96
	expression/L8 = . expression "<=" expression, FOLLOW [157] -> GOTO 96
	expression/L8 = . expression "<" expression, FOLLOW [157] -> GOTO 96
	expression/L8 = . expression ">=" expression, FOLLOW [157] -> GOTO 96
	expression/L8 = . expression ">" expression, FOLLOW [157] -> GOTO 96
	expression/L9 = . expression "+" expression, FOLLOW [157] -> GOTO 96
	expression/L9 = . expression "-" expression, FOLLOW [157] -> GOTO 96
	expression/L10 = . expression "*" expression, FOLLOW [157] -> GOTO 96
	expression/L10 = . expression "/" expression, FOLLOW [157] -> GOTO 96
	expression/L10 = . expression "%" expression, FOLLOW [157] -> GOTO 96
	expression/L11 = . expression "<<" expression, FOLLOW [157] -> GOTO 96
	expression/L11 = . expression ">>" expression, FOLLOW [157] -> GOTO 96
	expression/L12 = . expression "." IDENT, FOLLOW [157] -> GOTO 96
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [157] -> GOTO 96
	expression/L13 = . expression "(" ")", FOLLOW [157] -> GOTO 96
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [157] -> GOTO 96
	iexpression = . expression indirection IDENT, FOLLOW [157] -> GOTO 96
	expression/L12 = . iexpression, FOLLOW [157] -> GOTO 70
	expression/L2 = . BOOLEAN, FOLLOW [157] -> SHIFT BOOLEAN GOTO 71
	expression/L2 = . IDENT, FOLLOW [157] -> SHIFT IDENT GOTO 72
	expression/L2 = . DQSTRING, FOLLOW [157] -> SHIFT DQSTRING GOTO 73
	expression/L2 = . SQSTRING, FOLLOW [157] -> SHIFT SQSTRING GOTO 74
	expression/L2 = . CARDINAL, FOLLOW [157] -> SHIFT CARDINAL GOTO 75
	expression/L2 = . INTEGER, FOLLOW [157] -> SHIFT INTEGER GOTO 76
	expression/L2 = . FLOAT, FOLLOW [157] -> SHIFT FLOAT GOTO 77
	expression/L2 = . "(" expression ")", FOLLOW [157] -> SHIFT '(' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [157] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [157] -> SHIFT '{' GOTO 95
	expression/L9 = . "&" expression, FOLLOW [157] -> SHIFT '&' GOTO 80
	expression/L1 = . "new" typespec ":" expression, FOLLOW [157] -> SHIFT "new" GOTO 86
	expression/L2 = . "null", FOLLOW [157] -> SHIFT "null" GOTO 87
	expression/L9 = . "+" expression, FOLLOW [157] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [157] -> SHIFT '-' GOTO 89
	expression/L9 = . "~" expression, FOLLOW [157] -> SHIFT '~' GOTO 90
	expression/L9 = . "!" expression, FOLLOW [157] -> SHIFT '!' GOTO 91
	expression/L12 = . "*" expression, FOLLOW [157] -> SHIFT '*' GOTO 92
[53]
	functiondefinition = linkage "function" typespec . IDENT callablebody, FOLLOW [217] -> SHIFT IDENT GOTO 97
[54]
	functiondefinition = linkage "procedure" IDENT . callablebody, FOLLOW [217] -> GOTO 98
	callablebody = . "(" parameterlist ")" "{" codeblock "}", FOLLOW [217] -> SHIFT '(' GOTO 99
[55]
	typename/L1 = IDENT "::" typename ., FOLLOW [228] -> REDUCE typename #3
[56]
	typespec/L1 = "const" typename "&" . (12), FOLLOW [225] -> REDUCE typespec #3 CALL typespec "const&"
[57]
	typespec/L1 = "const" typename "^" . "&", FOLLOW [225] -> SHIFT '&' GOTO 100
	typespec/L1 = "const" typename "^" . "^", FOLLOW [225] -> SHIFT '^' GOTO 101
	typespec/L1 = "const" typename "^" . "^" "&", FOLLOW [225] -> SHIFT '^' GOTO 101
	typespec/L1 = "const" typename "^" . (14), FOLLOW [225] -> REDUCE typespec #3 CALL typespec "const^"
[58]
	typedefinition = "typedef" typename IDENT . (step:21), FOLLOW [12] -> REDUCE typedefinition #3 CALL typedef
[59]
	structdefinition = "struct" IDENT "{" . datadefinitionlist "}", FOLLOW [12] -> GOTO 102
	datadefinitionlist = . datadefinition datadefinitionlist, FOLLOW [11] -> GOTO 103
	typespec/L1 = . typename, FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [8] -> GOTO 8
	variabledefinition = . typespec IDENT, FOLLOW [12] -> GOTO 9
	variabledefinition = . typespec IDENT "=" expression, FOLLOW [12] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression, FOLLOW [12] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]", FOLLOW [12] -> GOTO 9
	datadefinition = . typedefinition ";", FOLLOW [158] -> GOTO 10
	datadefinition = . structdefinition ";", FOLLOW [158] -> GOTO 11
	datadefinition = . variabledefinition ";", FOLLOW [158] -> GOTO 16
	typename/L1 = . IDENT, FOLLOW [55] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [55] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [8] -> SHIFT "const" GOTO 18
	typedefinition = . "typedef" typename IDENT, FOLLOW [12] -> SHIFT "typedef" GOTO 19
	structdefinition = . "struct" IDENT "{" datadefinitionlist "}", FOLLOW [12] -> SHIFT "struct" GOTO 20
	datadefinitionlist = ., FOLLOW [11] -> REDUCE datadefinitionlist #0
[60]
	interfacedefinition = "interface" IDENT "{" . methoddefinitionlist "}", FOLLOW [12] -> GOTO 104
	methoddefinitionlist = . methoddefinition methoddefinitionlist, FOLLOW [11] -> GOTO 105
	methoddefinition = . "function" typespec IDENT "(" parameterlist ")" ";", FOLLOW [159] -> SHIFT "function" GOTO 106
	methoddefinition = . "procedure" IDENT "(" parameterlist ")" ";", FOLLOW [159] -> SHIFT "procedure" GOTO 107
	methoddefinitionlist = ., FOLLOW [11] -> REDUCE methoddefinitionlist #0
[61]
	classdefinition = "class" IDENT "{" . definitionlist "}", FOLLOW [12] -> GOTO 108
	definition = . datadefinition, FOLLOW [160] -> GOTO 6
	definitionlist = . definition definitionlist, FOLLOW [11] -> GOTO 7
	typespec/L1 = . typename, FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [8] -> GOTO 8
	variabledefinition = . typespec IDENT, FOLLOW [12] -> GOTO 9
	variabledefinition = . typespec IDENT "=" expression, FOLLOW [12] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression, FOLLOW [12] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]", FOLLOW [12] -> GOTO 9
	datadefinition = . typedefinition ";", FOLLOW [160] -> GOTO 10
	datadefinition = . structdefinition ";", FOLLOW [160] -> GOTO 11
	definition = . interfacedefinition ";", FOLLOW [160] -> GOTO 12
	definition = . classdefinition ";", FOLLOW [160] -> GOTO 13
	functiondefinition = . linkage "function" typespec IDENT callablebody, FOLLOW [160] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [160] -> GOTO 14
	definition = . functiondefinition, FOLLOW [160] -> GOTO 15
	datadefinition = . variabledefinition ";", FOLLOW [160] -> GOTO 16
	typename/L1 = . IDENT, FOLLOW [55] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [55] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [8] -> SHIFT "const" GOTO 18
	typedefinition = . "typedef" typename IDENT, FOLLOW [12] -> SHIFT "typedef" GOTO 19
	structdefinition = . "struct" IDENT "{" datadefinitionlist "}", FOLLOW [12] -> SHIFT "struct" GOTO 20
	interfacedefinition = . "interface" IDENT "{" methoddefinitionlist "}", FOLLOW [12] -> SHIFT "interface" GOTO 21
	classdefinition = . "class" IDENT "{" definitionlist "}", FOLLOW [12] -> SHIFT "class" GOTO 22
	linkage = . "private", FOLLOW [54] -> SHIFT "private" GOTO 23
	linkage = . "public", FOLLOW [54] -> SHIFT "public" GOTO 24
	definitionlist = ., FOLLOW [11] -> REDUCE definitionlist #0
	linkage = . (25), FOLLOW [54] -> REDUCE linkage #0 CALL linkage {linkage="internal",attributes="#0 nounwind"}
[62]
	externdefinition = "extern" DQSTRING "function" typespec . IDENT "(" externparameterlist ")" ";", FOLLOW [52] -> SHIFT IDENT GOTO 109
[63]
	externdefinition = "extern" DQSTRING "procedure" IDENT . "(" externparameterlist ")" ";", FOLLOW [52] -> SHIFT '(' GOTO 110
[64]
	statement/L1 = typedefinition . ";", FOLLOW [90] -> SHIFT ';' GOTO 111
[65]
	statement/L1 = functiondefinition . (8), FOLLOW [90] -> REDUCE statement #1 CALL definition
[66]
	mainproc = "main" "{" codeblock . "}", FOLLOW [0] -> SHIFT '}' GOTO 112
[67]
	codeblock = statementlist . (32), FOLLOW [11] -> REDUCE codeblock #1 CALL codeblock
[68]
	statement/L1 = . typedefinition ";", FOLLOW [90] -> GOTO 64
	functiondefinition = . linkage "function" typespec IDENT callablebody, FOLLOW [90] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [90] -> GOTO 14
	statement/L1 = . functiondefinition, FOLLOW [90] -> GOTO 65
	statementlist = statement . statementlist, FOLLOW [11] -> GOTO 113
	statementlist = . statement statementlist, FOLLOW [11] -> GOTO 68
	statement/L1 = . expression ";", FOLLOW [90] -> GOTO 69
	expression/L3 = . expression "=" expression, FOLLOW [89] -> GOTO 69
	expression/L3 = . expression "+=" expression, FOLLOW [89] -> GOTO 69
	expression/L3 = . expression "-=" expression, FOLLOW [89] -> GOTO 69
	expression/L3 = . expression "*=" expression, FOLLOW [89] -> GOTO 69
	expression/L3 = . expression "/=" expression, FOLLOW [89] -> GOTO 69
	expression/L3 = . expression "%=" expression, FOLLOW [89] -> GOTO 69
	expression/L3 = . expression "&&=" expression, FOLLOW [89] -> GOTO 69
	expression/L3 = . expression "||=" expression, FOLLOW [89] -> GOTO 69
	expression/L3 = . expression "&=" expression, FOLLOW [89] -> GOTO 69
	expression/L3 = . expression "|=" expression, FOLLOW [89] -> GOTO 69
	expression/L3 = . expression "<<=" expression, FOLLOW [89] -> GOTO 69
	expression/L3 = . expression ">>=" expression, FOLLOW [89] -> GOTO 69
	expression/L4 = . expression "||" expression, FOLLOW [89] -> GOTO 69
	expression/L5 = . expression "&&" expression, FOLLOW [89] -> GOTO 69
	expression/L6 = . expression "|" expression, FOLLOW [89] -> GOTO 69
	expression/L7 = . expression "^" expression, FOLLOW [89] -> GOTO 69
	expression/L7 = . expression "&" expression, FOLLOW [89] -> GOTO 69
	expression/L8 = . expression "==" expression, FOLLOW [89] -> GOTO 69
	expression/L8 = . expression "!=" expression, FOLLOW [89] -> GOTO 69
	expression/L8 = . expression "<=" expression, FOLLOW [89] -> GOTO 69
	expression/L8 = . expression "<" expression, FOLLOW [89] -> GOTO 69
	expression/L8 = . expression ">=" expression, FOLLOW [89] -> GOTO 69
	expression/L8 = . expression ">" expression, FOLLOW [89] -> GOTO 69
	expression/L9 = . expression "+" expression, FOLLOW [89] -> GOTO 69
	expression/L9 = . expression "-" expression, FOLLOW [89] -> GOTO 69
	expression/L10 = . expression "*" expression, FOLLOW [89] -> GOTO 69
	expression/L10 = . expression "/" expression, FOLLOW [89] -> GOTO 69
	expression/L10 = . expression "%" expression, FOLLOW [89] -> GOTO 69
	expression/L11 = . expression "<<" expression, FOLLOW [89] -> GOTO 69
	expression/L11 = . expression ">>" expression, FOLLOW [89] -> GOTO 69
	expression/L12 = . expression "." IDENT, FOLLOW [89] -> GOTO 69
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [89] -> GOTO 69
	expression/L13 = . expression "(" ")", FOLLOW [89] -> GOTO 69
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [89] -> GOTO 69
	iexpression = . expression indirection IDENT, FOLLOW [89] -> GOTO 69
	expression/L12 = . iexpression, FOLLOW [89] -> GOTO 70
	expression/L2 = . BOOLEAN, FOLLOW [89] -> SHIFT BOOLEAN GOTO 71
	expression/L2 = . IDENT, FOLLOW [89] -> SHIFT IDENT GOTO 72
	expression/L2 = . DQSTRING, FOLLOW [89] -> SHIFT DQSTRING GOTO 73
	expression/L2 = . SQSTRING, FOLLOW [89] -> SHIFT SQSTRING GOTO 74
	expression/L2 = . CARDINAL, FOLLOW [89] -> SHIFT CARDINAL GOTO 75
	expression/L2 = . INTEGER, FOLLOW [89] -> SHIFT INTEGER GOTO 76
	expression/L2 = . FLOAT, FOLLOW [89] -> SHIFT FLOAT GOTO 77
	expression/L2 = . "(" expression ")", FOLLOW [89] -> SHIFT '(' GOTO 78
	statement/L1 = . "{" codeblock "}", FOLLOW [90] -> SHIFT '{' GOTO 79
	expression/L1 = . "{" expressionlist "}", FOLLOW [89] -> SHIFT '{' GOTO 79
	expression/L1 = . "{" "}", FOLLOW [89] -> SHIFT '{' GOTO 79
	expression/L9 = . "&" expression, FOLLOW [89] -> SHIFT '&' GOTO 80
	typedefinition = . "typedef" typename IDENT, FOLLOW [12] -> SHIFT "typedef" GOTO 19
	linkage = . "private", FOLLOW [54] -> SHIFT "private" GOTO 23
	linkage = . "public", FOLLOW [54] -> SHIFT "public" GOTO 24
	statement/L1 = . "var" variabledefinition ";", FOLLOW [90] -> SHIFT "var" GOTO 81
	statement/L1 = . "return" expression ";", FOLLOW [90] -> SHIFT "return" GOTO 82
	statement/L1 = . "delete" expression ";", FOLLOW [90] -> SHIFT "delete" GOTO 83
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}", FOLLOW [90] -> SHIFT "if" GOTO 84
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}", FOLLOW [90] -> SHIFT "if" GOTO 84
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}", FOLLOW [90] -> SHIFT "while" GOTO 85
	expression/L1 = . "new" typespec ":" expression, FOLLOW [89] -> SHIFT "new" GOTO 86
	expression/L2 = . "null", FOLLOW [89] -> SHIFT "null" GOTO 87
	expression/L9 = . "+" expression, FOLLOW [89] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [89] -> SHIFT '-' GOTO 89
	expression/L9 = . "~" expression, FOLLOW [89] -> SHIFT '~' GOTO 90
	expression/L9 = . "!" expression, FOLLOW [89] -> SHIFT '!' GOTO 91
	expression/L12 = . "*" expression, FOLLOW [89] -> SHIFT '*' GOTO 92
	statementlist = ., FOLLOW [11] -> REDUCE statementlist #0
	linkage = . (25), FOLLOW [54] -> REDUCE linkage #0 CALL linkage {linkage="internal",attributes="#0 nounwind"}
[69]
	iexpression = expression . indirection IDENT, FOLLOW [89] -> GOTO 114
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [89] -> SHIFT '(' GOTO 115
	expression/L13 = expression . "(" ")", FOLLOW [89] -> SHIFT '(' GOTO 115
	statement/L1 = expression . ";", FOLLOW [90] -> SHIFT ';' GOTO 116
	expression/L7 = expression . "&" expression, FOLLOW [89] -> SHIFT '&' GOTO 117
	expression/L7 = expression . "^" expression, FOLLOW [89] -> SHIFT '^' GOTO 118
	expression/L3 = expression . "=" expression, FOLLOW [89] -> SHIFT '=' GOTO 119
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [89] -> SHIFT '[' GOTO 120
	expression/L3 = expression . "+=" expression, FOLLOW [89] -> SHIFT "+=" GOTO 121
	expression/L3 = expression . "-=" expression, FOLLOW [89] -> SHIFT "-=" GOTO 122
	expression/L3 = expression . "*=" expression, FOLLOW [89] -> SHIFT "*=" GOTO 123
	expression/L3 = expression . "/=" expression, FOLLOW [89] -> SHIFT "/=" GOTO 124
	expression/L3 = expression . "%=" expression, FOLLOW [89] -> SHIFT "%=" GOTO 125
	expression/L3 = expression . "&&=" expression, FOLLOW [89] -> SHIFT "&&=" GOTO 126
	expression/L3 = expression . "||=" expression, FOLLOW [89] -> SHIFT "||=" GOTO 127
	expression/L3 = expression . "&=" expression, FOLLOW [89] -> SHIFT "&=" GOTO 128
	expression/L3 = expression . "|=" expression, FOLLOW [89] -> SHIFT "|=" GOTO 129
	expression/L3 = expression . "<<=" expression, FOLLOW [89] -> SHIFT "<<=" GOTO 130
	expression/L3 = expression . ">>=" expression, FOLLOW [89] -> SHIFT ">>=" GOTO 131
	expression/L4 = expression . "||" expression, FOLLOW [89] -> SHIFT "||" GOTO 132
	expression/L5 = expression . "&&" expression, FOLLOW [89] -> SHIFT "&&" GOTO 133
	expression/L6 = expression . "|" expression, FOLLOW [89] -> SHIFT '|' GOTO 134
	expression/L8 = expression . "==" expression, FOLLOW [89] -> SHIFT "==" GOTO 135
	expression/L8 = expression . "!=" expression, FOLLOW [89] -> SHIFT "!=" GOTO 136
	expression/L8 = expression . "<=" expression, FOLLOW [89] -> SHIFT "<=" GOTO 137
	expression/L8 = expression . "<" expression, FOLLOW [89] -> SHIFT '<' GOTO 138
	expression/L8 = expression . ">=" expression, FOLLOW [89] -> SHIFT ">=" GOTO 139
	expression/L8 = expression . ">" expression, FOLLOW [89] -> SHIFT '>' GOTO 140
	expression/L9 = expression . "+" expression, FOLLOW [89] -> SHIFT '+' GOTO 141
	expression/L9 = expression . "-" expression, FOLLOW [89] -> SHIFT '-' GOTO 142
	expression/L10 = expression . "*" expression, FOLLOW [89] -> SHIFT '*' GOTO 143
	expression/L10 = expression . "/" expression, FOLLOW [89] -> SHIFT '/' GOTO 144
	expression/L10 = expression . "%" expression, FOLLOW [89] -> SHIFT '%' GOTO 145
	expression/L11 = expression . "<<" expression, FOLLOW [89] -> SHIFT "<<" GOTO 146
	expression/L11 = expression . ">>" expression, FOLLOW [89] -> SHIFT ">>" GOTO 147
	expression/L12 = expression . "." IDENT, FOLLOW [89] -> SHIFT '.' GOTO 148
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 149
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 149
[70]
	expression/L12 = iexpression ., FOLLOW [215] -> REDUCE expression #1
[71]
	expression/L2 = BOOLEAN . (46), FOLLOW [215] -> REDUCE expression #1 CALL constant "constexpr bool"
[72]
	expression/L2 = IDENT . (45), FOLLOW [215] -> REDUCE expression #1 CALL variable
[73]
	expression/L2 = DQSTRING . (51), FOLLOW [215] -> REDUCE expression #1 CALL string_constant "constexpr float"
[74]
	expression/L2 = SQSTRING . (52), FOLLOW [215] -> REDUCE expression #1 CALL char_constant "constexpr float"
[75]
	expression/L2 = CARDINAL . (47), FOLLOW [215] -> REDUCE expression #1 CALL constant "constexpr uint"
[76]
	expression/L2 = INTEGER . (48), FOLLOW [215] -> REDUCE expression #1 CALL constant "constexpr int"
[77]
	expression/L2 = FLOAT . (49), FOLLOW [215] -> REDUCE expression #1 CALL constant "constexpr float"
[78]
	expression/L2 = "(" . expression ")", FOLLOW [215] -> GOTO 150
	expression/L3 = . expression "=" expression, FOLLOW [215] -> GOTO 150
	expression/L3 = . expression "+=" expression, FOLLOW [215] -> GOTO 150
	expression/L3 = . expression "-=" expression, FOLLOW [215] -> GOTO 150
	expression/L3 = . expression "*=" expression, FOLLOW [215] -> GOTO 150
	expression/L3 = . expression "/=" expression, FOLLOW [215] -> GOTO 150
	expression/L3 = . expression "%=" expression, FOLLOW [215] -> GOTO 150
	expression/L3 = . expression "&&=" expression, FOLLOW [215] -> GOTO 150
	expression/L3 = . expression "||=" expression, FOLLOW [215] -> GOTO 150
	expression/L3 = . expression "&=" expression, FOLLOW [215] -> GOTO 150
	expression/L3 = . expression "|=" expression, FOLLOW [215] -> GOTO 150
	expression/L3 = . expression "<<=" expression, FOLLOW [215] -> GOTO 150
	expression/L3 = . expression ">>=" expression, FOLLOW [215] -> GOTO 150
	expression/L4 = . expression "||" expression, FOLLOW [215] -> GOTO 150
	expression/L5 = . expression "&&" expression, FOLLOW [215] -> GOTO 150
	expression/L6 = . expression "|" expression, FOLLOW [215] -> GOTO 150
	expression/L7 = . expression "^" expression, FOLLOW [215] -> GOTO 150
	expression/L7 = . expression "&" expression, FOLLOW [215] -> GOTO 150
	expression/L8 = . expression "==" expression, FOLLOW [215] -> GOTO 150
	expression/L8 = . expression "!=" expression, FOLLOW [215] -> GOTO 150
	expression/L8 = . expression "<=" expression, FOLLOW [215] -> GOTO 150
	expression/L8 = . expression "<" expression, FOLLOW [215] -> GOTO 150
	expression/L8 = . expression ">=" expression, FOLLOW [215] -> GOTO 150
	expression/L8 = . expression ">" expression, FOLLOW [215] -> GOTO 150
	expression/L9 = . expression "+" expression, FOLLOW [215] -> GOTO 150
	expression/L9 = . expression "-" expression, FOLLOW [215] -> GOTO 150
	expression/L10 = . expression "*" expression, FOLLOW [215] -> GOTO 150
	expression/L10 = . expression "/" expression, FOLLOW [215] -> GOTO 150
	expression/L10 = . expression "%" expression, FOLLOW [215] -> GOTO 150
	expression/L11 = . expression "<<" expression, FOLLOW [215] -> GOTO 150
	expression/L11 = . expression ">>" expression, FOLLOW [215] -> GOTO 150
	expression/L12 = . expression "." IDENT, FOLLOW [215] -> GOTO 150
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [215] -> GOTO 150
	expression/L13 = . expression "(" ")", FOLLOW [215] -> GOTO 150
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [215] -> GOTO 150
	iexpression = . expression indirection IDENT, FOLLOW [215] -> GOTO 150
	expression/L12 = . iexpression, FOLLOW [215] -> GOTO 70
	expression/L2 = . BOOLEAN, FOLLOW [215] -> SHIFT BOOLEAN GOTO 71
	expression/L2 = . IDENT, FOLLOW [215] -> SHIFT IDENT GOTO 72
	expression/L2 = . DQSTRING, FOLLOW [215] -> SHIFT DQSTRING GOTO 73
	expression/L2 = . SQSTRING, FOLLOW [215] -> SHIFT SQSTRING GOTO 74
	expression/L2 = . CARDINAL, FOLLOW [215] -> SHIFT CARDINAL GOTO 75
	expression/L2 = . INTEGER, FOLLOW [215] -> SHIFT INTEGER GOTO 76
	expression/L2 = . FLOAT, FOLLOW [215] -> SHIFT FLOAT GOTO 77
	expression/L2 = . "(" expression ")", FOLLOW [215] -> SHIFT '(' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [215] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [215] -> SHIFT '{' GOTO 95
	expression/L9 = . "&" expression, FOLLOW [215] -> SHIFT '&' GOTO 80
	expression/L1 = . "new" typespec ":" expression, FOLLOW [215] -> SHIFT "new" GOTO 86
	expression/L2 = . "null", FOLLOW [215] -> SHIFT "null" GOTO 87
	expression/L9 = . "+" expression, FOLLOW [215] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [215] -> SHIFT '-' GOTO 89
	expression/L9 = . "~" expression, FOLLOW [215] -> SHIFT '~' GOTO 90
	expression/L9 = . "!" expression, FOLLOW [215] -> SHIFT '!' GOTO 91
	expression/L12 = . "*" expression, FOLLOW [215] -> SHIFT '*' GOTO 92
[79]
	statement/L1 = . typedefinition ";", FOLLOW [90] -> GOTO 64
	functiondefinition = . linkage "function" typespec IDENT callablebody, FOLLOW [90] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [90] -> GOTO 14
	statement/L1 = . functiondefinition, FOLLOW [90] -> GOTO 65
	statement/L1 = "{" . codeblock "}", FOLLOW [90] -> GOTO 151
	codeblock = . statementlist, FOLLOW [11] -> GOTO 67
	statementlist = . statement statementlist, FOLLOW [11] -> GOTO 68
	statement/L1 = . expression ";", FOLLOW [90] -> GOTO 152
	expression/L3 = . expression "=" expression, FOLLOW [163] -> GOTO 152
	expression/L3 = . expression "+=" expression, FOLLOW [163] -> GOTO 152
	expression/L3 = . expression "-=" expression, FOLLOW [163] -> GOTO 152
	expression/L3 = . expression "*=" expression, FOLLOW [163] -> GOTO 152
	expression/L3 = . expression "/=" expression, FOLLOW [163] -> GOTO 152
	expression/L3 = . expression "%=" expression, FOLLOW [163] -> GOTO 152
	expression/L3 = . expression "&&=" expression, FOLLOW [163] -> GOTO 152
	expression/L3 = . expression "||=" expression, FOLLOW [163] -> GOTO 152
	expression/L3 = . expression "&=" expression, FOLLOW [163] -> GOTO 152
	expression/L3 = . expression "|=" expression, FOLLOW [163] -> GOTO 152
	expression/L3 = . expression "<<=" expression, FOLLOW [163] -> GOTO 152
	expression/L3 = . expression ">>=" expression, FOLLOW [163] -> GOTO 152
	expression/L4 = . expression "||" expression, FOLLOW [163] -> GOTO 152
	expression/L5 = . expression "&&" expression, FOLLOW [163] -> GOTO 152
	expression/L6 = . expression "|" expression, FOLLOW [163] -> GOTO 152
	expression/L7 = . expression "^" expression, FOLLOW [163] -> GOTO 152
	expression/L7 = . expression "&" expression, FOLLOW [163] -> GOTO 152
	expression/L8 = . expression "==" expression, FOLLOW [163] -> GOTO 152
	expression/L8 = . expression "!=" expression, FOLLOW [163] -> GOTO 152
	expression/L8 = . expression "<=" expression, FOLLOW [163] -> GOTO 152
	expression/L8 = . expression "<" expression, FOLLOW [163] -> GOTO 152
	expression/L8 = . expression ">=" expression, FOLLOW [163] -> GOTO 152
	expression/L8 = . expression ">" expression, FOLLOW [163] -> GOTO 152
	expression/L9 = . expression "+" expression, FOLLOW [163] -> GOTO 152
	expression/L9 = . expression "-" expression, FOLLOW [163] -> GOTO 152
	expression/L10 = . expression "*" expression, FOLLOW [163] -> GOTO 152
	expression/L10 = . expression "/" expression, FOLLOW [163] -> GOTO 152
	expression/L10 = . expression "%" expression, FOLLOW [163] -> GOTO 152
	expression/L11 = . expression "<<" expression, FOLLOW [163] -> GOTO 152
	expression/L11 = . expression ">>" expression, FOLLOW [163] -> GOTO 152
	expression/L12 = . expression "." IDENT, FOLLOW [163] -> GOTO 152
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [163] -> GOTO 152
	expression/L13 = . expression "(" ")", FOLLOW [163] -> GOTO 152
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [163] -> GOTO 152
	iexpression = . expression indirection IDENT, FOLLOW [163] -> GOTO 152
	expressionlist = . expression "," expressionlist, FOLLOW [11] -> GOTO 152
	expressionlist = . expression, FOLLOW [11] -> GOTO 152
	expression/L12 = . iexpression, FOLLOW [163] -> GOTO 70
	expression/L1 = "{" . expressionlist "}", FOLLOW [163] -> GOTO 153
	expression/L2 = . BOOLEAN, FOLLOW [163] -> SHIFT BOOLEAN GOTO 71
	expression/L2 = . IDENT, FOLLOW [163] -> SHIFT IDENT GOTO 72
	expression/L2 = . DQSTRING, FOLLOW [163] -> SHIFT DQSTRING GOTO 73
	expression/L2 = . SQSTRING, FOLLOW [163] -> SHIFT SQSTRING GOTO 74
	expression/L2 = . CARDINAL, FOLLOW [163] -> SHIFT CARDINAL GOTO 75
	expression/L2 = . INTEGER, FOLLOW [163] -> SHIFT INTEGER GOTO 76
	expression/L2 = . FLOAT, FOLLOW [163] -> SHIFT FLOAT GOTO 77
	expression/L2 = . "(" expression ")", FOLLOW [163] -> SHIFT '(' GOTO 78
	statement/L1 = . "{" codeblock "}", FOLLOW [90] -> SHIFT '{' GOTO 79
	expression/L1 = . "{" expressionlist "}", FOLLOW [163] -> SHIFT '{' GOTO 79
	expression/L1 = . "{" "}", FOLLOW [163] -> SHIFT '{' GOTO 79
	expression/L1 = "{" . "}", FOLLOW [163] -> SHIFT '}' GOTO 154
	expression/L9 = . "&" expression, FOLLOW [163] -> SHIFT '&' GOTO 80
	typedefinition = . "typedef" typename IDENT, FOLLOW [12] -> SHIFT "typedef" GOTO 19
	linkage = . "private", FOLLOW [54] -> SHIFT "private" GOTO 23
	linkage = . "public", FOLLOW [54] -> SHIFT "public" GOTO 24
	statement/L1 = . "var" variabledefinition ";", FOLLOW [90] -> SHIFT "var" GOTO 81
	statement/L1 = . "return" expression ";", FOLLOW [90] -> SHIFT "return" GOTO 82
	statement/L1 = . "delete" expression ";", FOLLOW [90] -> SHIFT "delete" GOTO 83
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}", FOLLOW [90] -> SHIFT "if" GOTO 84
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}", FOLLOW [90] -> SHIFT "if" GOTO 84
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}", FOLLOW [90] -> SHIFT "while" GOTO 85
	expression/L1 = . "new" typespec ":" expression, FOLLOW [163] -> SHIFT "new" GOTO 86
	expression/L2 = . "null", FOLLOW [163] -> SHIFT "null" GOTO 87
	expression/L9 = . "+" expression, FOLLOW [163] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [163] -> SHIFT '-' GOTO 89
	expression/L9 = . "~" expression, FOLLOW [163] -> SHIFT '~' GOTO 90
	expression/L9 = . "!" expression, FOLLOW [163] -> SHIFT '!' GOTO 91
	expression/L12 = . "*" expression, FOLLOW [163] -> SHIFT '*' GOTO 92
	statementlist = ., FOLLOW [11] -> REDUCE statementlist #0
	linkage = . (25), FOLLOW [54] -> REDUCE linkage #0 CALL linkage {linkage="internal",attributes="#0 nounwind"}
[80]
	expression/L3 = . expression "=" expression, FOLLOW [215] -> GOTO 155
	expression/L3 = . expression "+=" expression, FOLLOW [215] -> GOTO 155
	expression/L3 = . expression "-=" expression, FOLLOW [215] -> GOTO 155
	expression/L3 = . expression "*=" expression, FOLLOW [215] -> GOTO 155
	expression/L3 = . expression "/=" expression, FOLLOW [215] -> GOTO 155
	expression/L3 = . expression "%=" expression, FOLLOW [215] -> GOTO 155
	expression/L3 = . expression "&&=" expression, FOLLOW [215] -> GOTO 155
	expression/L3 = . expression "||=" expression, FOLLOW [215] -> GOTO 155
	expression/L3 = . expression "&=" expression, FOLLOW [215] -> GOTO 155
	expression/L3 = . expression "|=" expression, FOLLOW [215] -> GOTO 155
	expression/L3 = . expression "<<=" expression, FOLLOW [215] -> GOTO 155
	expression/L3 = . expression ">>=" expression, FOLLOW [215] -> GOTO 155
	expression/L4 = . expression "||" expression, FOLLOW [215] -> GOTO 155
	expression/L5 = . expression "&&" expression, FOLLOW [215] -> GOTO 155
	expression/L6 = . expression "|" expression, FOLLOW [215] -> GOTO 155
	expression/L7 = . expression "^" expression, FOLLOW [215] -> GOTO 155
	expression/L7 = . expression "&" expression, FOLLOW [215] -> GOTO 155
	expression/L8 = . expression "==" expression, FOLLOW [215] -> GOTO 155
	expression/L8 = . expression "!=" expression, FOLLOW [215] -> GOTO 155
	expression/L8 = . expression "<=" expression, FOLLOW [215] -> GOTO 155
	expression/L8 = . expression "<" expression, FOLLOW [215] -> GOTO 155
	expression/L8 = . expression ">=" expression, FOLLOW [215] -> GOTO 155
	expression/L8 = . expression ">" expression, FOLLOW [215] -> GOTO 155
	expression/L9 = . expression "+" expression, FOLLOW [215] -> GOTO 155
	expression/L9 = . expression "-" expression, FOLLOW [215] -> GOTO 155
	expression/L9 = "&" . expression, FOLLOW [215] -> GOTO 155
	expression/L10 = . expression "*" expression, FOLLOW [215] -> GOTO 155
	expression/L10 = . expression "/" expression, FOLLOW [215] -> GOTO 155
	expression/L10 = . expression "%" expression, FOLLOW [215] -> GOTO 155
	expression/L11 = . expression "<<" expression, FOLLOW [215] -> GOTO 155
	expression/L11 = . expression ">>" expression, FOLLOW [215] -> GOTO 155
	expression/L12 = . expression "." IDENT, FOLLOW [215] -> GOTO 155
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [215] -> GOTO 155
	expression/L13 = . expression "(" ")", FOLLOW [215] -> GOTO 155
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [215] -> GOTO 155
	iexpression = . expression indirection IDENT, FOLLOW [215] -> GOTO 155
	expression/L12 = . iexpression, FOLLOW [215] -> GOTO 70
	expression/L2 = . BOOLEAN, FOLLOW [215] -> SHIFT BOOLEAN GOTO 71
	expression/L2 = . IDENT, FOLLOW [215] -> SHIFT IDENT GOTO 72
	expression/L2 = . DQSTRING, FOLLOW [215] -> SHIFT DQSTRING GOTO 73
	expression/L2 = . SQSTRING, FOLLOW [215] -> SHIFT SQSTRING GOTO 74
	expression/L2 = . CARDINAL, FOLLOW [215] -> SHIFT CARDINAL GOTO 75
	expression/L2 = . INTEGER, FOLLOW [215] -> SHIFT INTEGER GOTO 76
	expression/L2 = . FLOAT, FOLLOW [215] -> SHIFT FLOAT GOTO 77
	expression/L2 = . "(" expression ")", FOLLOW [215] -> SHIFT '(' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [215] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [215] -> SHIFT '{' GOTO 95
	expression/L9 = . "&" expression, FOLLOW [215] -> SHIFT '&' GOTO 80
	expression/L1 = . "new" typespec ":" expression, FOLLOW [215] -> SHIFT "new" GOTO 86
	expression/L2 = . "null", FOLLOW [215] -> SHIFT "null" GOTO 87
	expression/L9 = . "+" expression, FOLLOW [215] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [215] -> SHIFT '-' GOTO 89
	expression/L9 = . "~" expression, FOLLOW [215] -> SHIFT '~' GOTO 90
	expression/L9 = . "!" expression, FOLLOW [215] -> SHIFT '!' GOTO 91
	expression/L12 = . "*" expression, FOLLOW [215] -> SHIFT '*' GOTO 92
[81]
	typespec/L1 = . typename, FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [8] -> GOTO 8
	variabledefinition = . typespec IDENT, FOLLOW [12] -> GOTO 9
	variabledefinition = . typespec IDENT "=" expression, FOLLOW [12] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression, FOLLOW [12] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]", FOLLOW [12] -> GOTO 9
	statement/L1 = "var" . variabledefinition ";", FOLLOW [90] -> GOTO 156
	typename/L1 = . IDENT, FOLLOW [55] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [55] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [8] -> SHIFT "const" GOTO 18
[82]
	statement/L1 = "return" . expression ";", FOLLOW [90] -> GOTO 157
	expression/L3 = . expression "=" expression, FOLLOW [89] -> GOTO 157
	expression/L3 = . expression "+=" expression, FOLLOW [89] -> GOTO 157
	expression/L3 = . expression "-=" expression, FOLLOW [89] -> GOTO 157
	expression/L3 = . expression "*=" expression, FOLLOW [89] -> GOTO 157
	expression/L3 = . expression "/=" expression, FOLLOW [89] -> GOTO 157
	expression/L3 = . expression "%=" expression, FOLLOW [89] -> GOTO 157
	expression/L3 = . expression "&&=" expression, FOLLOW [89] -> GOTO 157
	expression/L3 = . expression "||=" expression, FOLLOW [89] -> GOTO 157
	expression/L3 = . expression "&=" expression, FOLLOW [89] -> GOTO 157
	expression/L3 = . expression "|=" expression, FOLLOW [89] -> GOTO 157
	expression/L3 = . expression "<<=" expression, FOLLOW [89] -> GOTO 157
	expression/L3 = . expression ">>=" expression, FOLLOW [89] -> GOTO 157
	expression/L4 = . expression "||" expression, FOLLOW [89] -> GOTO 157
	expression/L5 = . expression "&&" expression, FOLLOW [89] -> GOTO 157
	expression/L6 = . expression "|" expression, FOLLOW [89] -> GOTO 157
	expression/L7 = . expression "^" expression, FOLLOW [89] -> GOTO 157
	expression/L7 = . expression "&" expression, FOLLOW [89] -> GOTO 157
	expression/L8 = . expression "==" expression, FOLLOW [89] -> GOTO 157
	expression/L8 = . expression "!=" expression, FOLLOW [89] -> GOTO 157
	expression/L8 = . expression "<=" expression, FOLLOW [89] -> GOTO 157
	expression/L8 = . expression "<" expression, FOLLOW [89] -> GOTO 157
	expression/L8 = . expression ">=" expression, FOLLOW [89] -> GOTO 157
	expression/L8 = . expression ">" expression, FOLLOW [89] -> GOTO 157
	expression/L9 = . expression "+" expression, FOLLOW [89] -> GOTO 157
	expression/L9 = . expression "-" expression, FOLLOW [89] -> GOTO 157
	expression/L10 = . expression "*" expression, FOLLOW [89] -> GOTO 157
	expression/L10 = . expression "/" expression, FOLLOW [89] -> GOTO 157
	expression/L10 = . expression "%" expression, FOLLOW [89] -> GOTO 157
	expression/L11 = . expression "<<" expression, FOLLOW [89] -> GOTO 157
	expression/L11 = . expression ">>" expression, FOLLOW [89] -> GOTO 157
	expression/L12 = . expression "." IDENT, FOLLOW [89] -> GOTO 157
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [89] -> GOTO 157
	expression/L13 = . expression "(" ")", FOLLOW [89] -> GOTO 157
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [89] -> GOTO 157
	iexpression = . expression indirection IDENT, FOLLOW [89] -> GOTO 157
	expression/L12 = . iexpression, FOLLOW [89] -> GOTO 70
	expression/L2 = . BOOLEAN, FOLLOW [89] -> SHIFT BOOLEAN GOTO 71
	expression/L2 = . IDENT, FOLLOW [89] -> SHIFT IDENT GOTO 72
	expression/L2 = . DQSTRING, FOLLOW [89] -> SHIFT DQSTRING GOTO 73
	expression/L2 = . SQSTRING, FOLLOW [89] -> SHIFT SQSTRING GOTO 74
	expression/L2 = . CARDINAL, FOLLOW [89] -> SHIFT CARDINAL GOTO 75
	expression/L2 = . INTEGER, FOLLOW [89] -> SHIFT INTEGER GOTO 76
	expression/L2 = . FLOAT, FOLLOW [89] -> SHIFT FLOAT GOTO 77
	expression/L2 = . "(" expression ")", FOLLOW [89] -> SHIFT '(' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [89] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [89] -> SHIFT '{' GOTO 95
	expression/L9 = . "&" expression, FOLLOW [89] -> SHIFT '&' GOTO 80
	expression/L1 = . "new" typespec ":" expression, FOLLOW [89] -> SHIFT "new" GOTO 86
	expression/L2 = . "null", FOLLOW [89] -> SHIFT "null" GOTO 87
	expression/L9 = . "+" expression, FOLLOW [89] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [89] -> SHIFT '-' GOTO 89
	expression/L9 = . "~" expression, FOLLOW [89] -> SHIFT '~' GOTO 90
	expression/L9 = . "!" expression, FOLLOW [89] -> SHIFT '!' GOTO 91
	expression/L12 = . "*" expression, FOLLOW [89] -> SHIFT '*' GOTO 92
[83]
	statement/L1 = "delete" . expression ";", FOLLOW [90] -> GOTO 158
	expression/L3 = . expression "=" expression, FOLLOW [89] -> GOTO 158
	expression/L3 = . expression "+=" expression, FOLLOW [89] -> GOTO 158
	expression/L3 = . expression "-=" expression, FOLLOW [89] -> GOTO 158
	expression/L3 = . expression "*=" expression, FOLLOW [89] -> GOTO 158
	expression/L3 = . expression "/=" expression, FOLLOW [89] -> GOTO 158
	expression/L3 = . expression "%=" expression, FOLLOW [89] -> GOTO 158
	expression/L3 = . expression "&&=" expression, FOLLOW [89] -> GOTO 158
	expression/L3 = . expression "||=" expression, FOLLOW [89] -> GOTO 158
	expression/L3 = . expression "&=" expression, FOLLOW [89] -> GOTO 158
	expression/L3 = . expression "|=" expression, FOLLOW [89] -> GOTO 158
	expression/L3 = . expression "<<=" expression, FOLLOW [89] -> GOTO 158
	expression/L3 = . expression ">>=" expression, FOLLOW [89] -> GOTO 158
	expression/L4 = . expression "||" expression, FOLLOW [89] -> GOTO 158
	expression/L5 = . expression "&&" expression, FOLLOW [89] -> GOTO 158
	expression/L6 = . expression "|" expression, FOLLOW [89] -> GOTO 158
	expression/L7 = . expression "^" expression, FOLLOW [89] -> GOTO 158
	expression/L7 = . expression "&" expression, FOLLOW [89] -> GOTO 158
	expression/L8 = . expression "==" expression, FOLLOW [89] -> GOTO 158
	expression/L8 = . expression "!=" expression, FOLLOW [89] -> GOTO 158
	expression/L8 = . expression "<=" expression, FOLLOW [89] -> GOTO 158
	expression/L8 = . expression "<" expression, FOLLOW [89] -> GOTO 158
	expression/L8 = . expression ">=" expression, FOLLOW [89] -> GOTO 158
	expression/L8 = . expression ">" expression, FOLLOW [89] -> GOTO 158
	expression/L9 = . expression "+" expression, FOLLOW [89] -> GOTO 158
	expression/L9 = . expression "-" expression, FOLLOW [89] -> GOTO 158
	expression/L10 = . expression "*" expression, FOLLOW [89] -> GOTO 158
	expression/L10 = . expression "/" expression, FOLLOW [89] -> GOTO 158
	expression/L10 = . expression "%" expression, FOLLOW [89] -> GOTO 158
	expression/L11 = . expression "<<" expression, FOLLOW [89] -> GOTO 158
	expression/L11 = . expression ">>" expression, FOLLOW [89] -> GOTO 158
	expression/L12 = . expression "." IDENT, FOLLOW [89] -> GOTO 158
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [89] -> GOTO 158
	expression/L13 = . expression "(" ")", FOLLOW [89] -> GOTO 158
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [89] -> GOTO 158
	iexpression = . expression indirection IDENT, FOLLOW [89] -> GOTO 158
	expression/L12 = . iexpression, FOLLOW [89] -> GOTO 70
	expression/L2 = . BOOLEAN, FOLLOW [89] -> SHIFT BOOLEAN GOTO 71
	expression/L2 = . IDENT, FOLLOW [89] -> SHIFT IDENT GOTO 72
	expression/L2 = . DQSTRING, FOLLOW [89] -> SHIFT DQSTRING GOTO 73
	expression/L2 = . SQSTRING, FOLLOW [89] -> SHIFT SQSTRING GOTO 74
	expression/L2 = . CARDINAL, FOLLOW [89] -> SHIFT CARDINAL GOTO 75
	expression/L2 = . INTEGER, FOLLOW [89] -> SHIFT INTEGER GOTO 76
	expression/L2 = . FLOAT, FOLLOW [89] -> SHIFT FLOAT GOTO 77
	expression/L2 = . "(" expression ")", FOLLOW [89] -> SHIFT '(' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [89] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [89] -> SHIFT '{' GOTO 95
	expression/L9 = . "&" expression, FOLLOW [89] -> SHIFT '&' GOTO 80
	expression/L1 = . "new" typespec ":" expression, FOLLOW [89] -> SHIFT "new" GOTO 86
	expression/L2 = . "null", FOLLOW [89] -> SHIFT "null" GOTO 87
	expression/L9 = . "+" expression, FOLLOW [89] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [89] -> SHIFT '-' GOTO 89
	expression/L9 = . "~" expression, FOLLOW [89] -> SHIFT '~' GOTO 90
	expression/L9 = . "!" expression, FOLLOW [89] -> SHIFT '!' GOTO 91
	expression/L12 = . "*" expression, FOLLOW [89] -> SHIFT '*' GOTO 92
[84]
	statement/L1 = "if" . "(" expression ")" "{" codeblock "}", FOLLOW [90] -> SHIFT '(' GOTO 159
	statement/L1 = "if" . "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}", FOLLOW [90] -> SHIFT '(' GOTO 159
[85]
	statement/L1 = "while" . "(" expression ")" "{" codeblock "}", FOLLOW [90] -> SHIFT '(' GOTO 160
[86]
	typespec/L1 = . typename, FOLLOW [19] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [19] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [19] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [19] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [19] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [19] -> GOTO 8
	expression/L1 = "new" . typespec ":" expression, FOLLOW [215] -> GOTO 161
	typename/L1 = . IDENT, FOLLOW [164] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [164] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [19] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [19] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [19] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [19] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [19] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [19] -> SHIFT "const" GOTO 18
[87]
	expression/L2 = "null" . (50), FOLLOW [215] -> REDUCE expression #1 CALL null "constexpr float"
[88]
	expression/L3 = . expression "=" expression, FOLLOW [215] -> GOTO 162
	expression/L3 = . expression "+=" expression, FOLLOW [215] -> GOTO 162
	expression/L3 = . expression "-=" expression, FOLLOW [215] -> GOTO 162
	expression/L3 = . expression "*=" expression, FOLLOW [215] -> GOTO 162
	expression/L3 = . expression "/=" expression, FOLLOW [215] -> GOTO 162
	expression/L3 = . expression "%=" expression, FOLLOW [215] -> GOTO 162
	expression/L3 = . expression "&&=" expression, FOLLOW [215] -> GOTO 162
	expression/L3 = . expression "||=" expression, FOLLOW [215] -> GOTO 162
	expression/L3 = . expression "&=" expression, FOLLOW [215] -> GOTO 162
	expression/L3 = . expression "|=" expression, FOLLOW [215] -> GOTO 162
	expression/L3 = . expression "<<=" expression, FOLLOW [215] -> GOTO 162
	expression/L3 = . expression ">>=" expression, FOLLOW [215] -> GOTO 162
	expression/L4 = . expression "||" expression, FOLLOW [215] -> GOTO 162
	expression/L5 = . expression "&&" expression, FOLLOW [215] -> GOTO 162
	expression/L6 = . expression "|" expression, FOLLOW [215] -> GOTO 162
	expression/L7 = . expression "^" expression, FOLLOW [215] -> GOTO 162
	expression/L7 = . expression "&" expression, FOLLOW [215] -> GOTO 162
	expression/L8 = . expression "==" expression, FOLLOW [215] -> GOTO 162
	expression/L8 = . expression "!=" expression, FOLLOW [215] -> GOTO 162
	expression/L8 = . expression "<=" expression, FOLLOW [215] -> GOTO 162
	expression/L8 = . expression "<" expression, FOLLOW [215] -> GOTO 162
	expression/L8 = . expression ">=" expression, FOLLOW [215] -> GOTO 162
	expression/L8 = . expression ">" expression, FOLLOW [215] -> GOTO 162
	expression/L9 = . expression "+" expression, FOLLOW [215] -> GOTO 162
	expression/L9 = . expression "-" expression, FOLLOW [215] -> GOTO 162
	expression/L9 = "+" . expression, FOLLOW [215] -> GOTO 162
	expression/L10 = . expression "*" expression, FOLLOW [215] -> GOTO 162
	expression/L10 = . expression "/" expression, FOLLOW [215] -> GOTO 162
	expression/L10 = . expression "%" expression, FOLLOW [215] -> GOTO 162
	expression/L11 = . expression "<<" expression, FOLLOW [215] -> GOTO 162
	expression/L11 = . expression ">>" expression, FOLLOW [215] -> GOTO 162
	expression/L12 = . expression "." IDENT, FOLLOW [215] -> GOTO 162
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [215] -> GOTO 162
	expression/L13 = . expression "(" ")", FOLLOW [215] -> GOTO 162
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [215] -> GOTO 162
	iexpression = . expression indirection IDENT, FOLLOW [215] -> GOTO 162
	expression/L12 = . iexpression, FOLLOW [215] -> GOTO 70
	expression/L2 = . BOOLEAN, FOLLOW [215] -> SHIFT BOOLEAN GOTO 71
	expression/L2 = . IDENT, FOLLOW [215] -> SHIFT IDENT GOTO 72
	expression/L2 = . DQSTRING, FOLLOW [215] -> SHIFT DQSTRING GOTO 73
	expression/L2 = . SQSTRING, FOLLOW [215] -> SHIFT SQSTRING GOTO 74
	expression/L2 = . CARDINAL, FOLLOW [215] -> SHIFT CARDINAL GOTO 75
	expression/L2 = . INTEGER, FOLLOW [215] -> SHIFT INTEGER GOTO 76
	expression/L2 = . FLOAT, FOLLOW [215] -> SHIFT FLOAT GOTO 77
	expression/L2 = . "(" expression ")", FOLLOW [215] -> SHIFT '(' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [215] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [215] -> SHIFT '{' GOTO 95
	expression/L9 = . "&" expression, FOLLOW [215] -> SHIFT '&' GOTO 80
	expression/L1 = . "new" typespec ":" expression, FOLLOW [215] -> SHIFT "new" GOTO 86
	expression/L2 = . "null", FOLLOW [215] -> SHIFT "null" GOTO 87
	expression/L9 = . "+" expression, FOLLOW [215] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [215] -> SHIFT '-' GOTO 89
	expression/L9 = . "~" expression, FOLLOW [215] -> SHIFT '~' GOTO 90
	expression/L9 = . "!" expression, FOLLOW [215] -> SHIFT '!' GOTO 91
	expression/L12 = . "*" expression, FOLLOW [215] -> SHIFT '*' GOTO 92
[89]
	expression/L3 = . expression "=" expression, FOLLOW [215] -> GOTO 163
	expression/L3 = . expression "+=" expression, FOLLOW [215] -> GOTO 163
	expression/L3 = . expression "-=" expression, FOLLOW [215] -> GOTO 163
	expression/L3 = . expression "*=" expression, FOLLOW [215] -> GOTO 163
	expression/L3 = . expression "/=" expression, FOLLOW [215] -> GOTO 163
	expression/L3 = . expression "%=" expression, FOLLOW [215] -> GOTO 163
	expression/L3 = . expression "&&=" expression, FOLLOW [215] -> GOTO 163
	expression/L3 = . expression "||=" expression, FOLLOW [215] -> GOTO 163
	expression/L3 = . expression "&=" expression, FOLLOW [215] -> GOTO 163
	expression/L3 = . expression "|=" expression, FOLLOW [215] -> GOTO 163
	expression/L3 = . expression "<<=" expression, FOLLOW [215] -> GOTO 163
	expression/L3 = . expression ">>=" expression, FOLLOW [215] -> GOTO 163
	expression/L4 = . expression "||" expression, FOLLOW [215] -> GOTO 163
	expression/L5 = . expression "&&" expression, FOLLOW [215] -> GOTO 163
	expression/L6 = . expression "|" expression, FOLLOW [215] -> GOTO 163
	expression/L7 = . expression "^" expression, FOLLOW [215] -> GOTO 163
	expression/L7 = . expression "&" expression, FOLLOW [215] -> GOTO 163
	expression/L8 = . expression "==" expression, FOLLOW [215] -> GOTO 163
	expression/L8 = . expression "!=" expression, FOLLOW [215] -> GOTO 163
	expression/L8 = . expression "<=" expression, FOLLOW [215] -> GOTO 163
	expression/L8 = . expression "<" expression, FOLLOW [215] -> GOTO 163
	expression/L8 = . expression ">=" expression, FOLLOW [215] -> GOTO 163
	expression/L8 = . expression ">" expression, FOLLOW [215] -> GOTO 163
	expression/L9 = . expression "+" expression, FOLLOW [215] -> GOTO 163
	expression/L9 = . expression "-" expression, FOLLOW [215] -> GOTO 163
	expression/L9 = "-" . expression, FOLLOW [215] -> GOTO 163
	expression/L10 = . expression "*" expression, FOLLOW [215] -> GOTO 163
	expression/L10 = . expression "/" expression, FOLLOW [215] -> GOTO 163
	expression/L10 = . expression "%" expression, FOLLOW [215] -> GOTO 163
	expression/L11 = . expression "<<" expression, FOLLOW [215] -> GOTO 163
	expression/L11 = . expression ">>" expression, FOLLOW [215] -> GOTO 163
	expression/L12 = . expression "." IDENT, FOLLOW [215] -> GOTO 163
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [215] -> GOTO 163
	expression/L13 = . expression "(" ")", FOLLOW [215] -> GOTO 163
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [215] -> GOTO 163
	iexpression = . expression indirection IDENT, FOLLOW [215] -> GOTO 163
	expression/L12 = . iexpression, FOLLOW [215] -> GOTO 70
	expression/L2 = . BOOLEAN, FOLLOW [215] -> SHIFT BOOLEAN GOTO 71
	expression/L2 = . IDENT, FOLLOW [215] -> SHIFT IDENT GOTO 72
	expression/L2 = . DQSTRING, FOLLOW [215] -> SHIFT DQSTRING GOTO 73
	expression/L2 = . SQSTRING, FOLLOW [215] -> SHIFT SQSTRING GOTO 74
	expression/L2 = . CARDINAL, FOLLOW [215] -> SHIFT CARDINAL GOTO 75
	expression/L2 = . INTEGER, FOLLOW [215] -> SHIFT INTEGER GOTO 76
	expression/L2 = . FLOAT, FOLLOW [215] -> SHIFT FLOAT GOTO 77
	expression/L2 = . "(" expression ")", FOLLOW [215] -> SHIFT '(' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [215] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [215] -> SHIFT '{' GOTO 95
	expression/L9 = . "&" expression, FOLLOW [215] -> SHIFT '&' GOTO 80
	expression/L1 = . "new" typespec ":" expression, FOLLOW [215] -> SHIFT "new" GOTO 86
	expression/L2 = . "null", FOLLOW [215] -> SHIFT "null" GOTO 87
	expression/L9 = . "+" expression, FOLLOW [215] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [215] -> SHIFT '-' GOTO 89
	expression/L9 = . "~" expression, FOLLOW [215] -> SHIFT '~' GOTO 90
	expression/L9 = . "!" expression, FOLLOW [215] -> SHIFT '!' GOTO 91
	expression/L12 = . "*" expression, FOLLOW [215] -> SHIFT '*' GOTO 92
[90]
	expression/L3 = . expression "=" expression, FOLLOW [215] -> GOTO 164
	expression/L3 = . expression "+=" expression, FOLLOW [215] -> GOTO 164
	expression/L3 = . expression "-=" expression, FOLLOW [215] -> GOTO 164
	expression/L3 = . expression "*=" expression, FOLLOW [215] -> GOTO 164
	expression/L3 = . expression "/=" expression, FOLLOW [215] -> GOTO 164
	expression/L3 = . expression "%=" expression, FOLLOW [215] -> GOTO 164
	expression/L3 = . expression "&&=" expression, FOLLOW [215] -> GOTO 164
	expression/L3 = . expression "||=" expression, FOLLOW [215] -> GOTO 164
	expression/L3 = . expression "&=" expression, FOLLOW [215] -> GOTO 164
	expression/L3 = . expression "|=" expression, FOLLOW [215] -> GOTO 164
	expression/L3 = . expression "<<=" expression, FOLLOW [215] -> GOTO 164
	expression/L3 = . expression ">>=" expression, FOLLOW [215] -> GOTO 164
	expression/L4 = . expression "||" expression, FOLLOW [215] -> GOTO 164
	expression/L5 = . expression "&&" expression, FOLLOW [215] -> GOTO 164
	expression/L6 = . expression "|" expression, FOLLOW [215] -> GOTO 164
	expression/L7 = . expression "^" expression, FOLLOW [215] -> GOTO 164
	expression/L7 = . expression "&" expression, FOLLOW [215] -> GOTO 164
	expression/L8 = . expression "==" expression, FOLLOW [215] -> GOTO 164
	expression/L8 = . expression "!=" expression, FOLLOW [215] -> GOTO 164
	expression/L8 = . expression "<=" expression, FOLLOW [215] -> GOTO 164
	expression/L8 = . expression "<" expression, FOLLOW [215] -> GOTO 164
	expression/L8 = . expression ">=" expression, FOLLOW [215] -> GOTO 164
	expression/L8 = . expression ">" expression, FOLLOW [215] -> GOTO 164
	expression/L9 = . expression "+" expression, FOLLOW [215] -> GOTO 164
	expression/L9 = . expression "-" expression, FOLLOW [215] -> GOTO 164
	expression/L9 = "~" . expression, FOLLOW [215] -> GOTO 164
	expression/L10 = . expression "*" expression, FOLLOW [215] -> GOTO 164
	expression/L10 = . expression "/" expression, FOLLOW [215] -> GOTO 164
	expression/L10 = . expression "%" expression, FOLLOW [215] -> GOTO 164
	expression/L11 = . expression "<<" expression, FOLLOW [215] -> GOTO 164
	expression/L11 = . expression ">>" expression, FOLLOW [215] -> GOTO 164
	expression/L12 = . expression "." IDENT, FOLLOW [215] -> GOTO 164
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [215] -> GOTO 164
	expression/L13 = . expression "(" ")", FOLLOW [215] -> GOTO 164
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [215] -> GOTO 164
	iexpression = . expression indirection IDENT, FOLLOW [215] -> GOTO 164
	expression/L12 = . iexpression, FOLLOW [215] -> GOTO 70
	expression/L2 = . BOOLEAN, FOLLOW [215] -> SHIFT BOOLEAN GOTO 71
	expression/L2 = . IDENT, FOLLOW [215] -> SHIFT IDENT GOTO 72
	expression/L2 = . DQSTRING, FOLLOW [215] -> SHIFT DQSTRING GOTO 73
	expression/L2 = . SQSTRING, FOLLOW [215] -> SHIFT SQSTRING GOTO 74
	expression/L2 = . CARDINAL, FOLLOW [215] -> SHIFT CARDINAL GOTO 75
	expression/L2 = . INTEGER, FOLLOW [215] -> SHIFT INTEGER GOTO 76
	expression/L2 = . FLOAT, FOLLOW [215] -> SHIFT FLOAT GOTO 77
	expression/L2 = . "(" expression ")", FOLLOW [215] -> SHIFT '(' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [215] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [215] -> SHIFT '{' GOTO 95
	expression/L9 = . "&" expression, FOLLOW [215] -> SHIFT '&' GOTO 80
	expression/L1 = . "new" typespec ":" expression, FOLLOW [215] -> SHIFT "new" GOTO 86
	expression/L2 = . "null", FOLLOW [215] -> SHIFT "null" GOTO 87
	expression/L9 = . "+" expression, FOLLOW [215] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [215] -> SHIFT '-' GOTO 89
	expression/L9 = . "~" expression, FOLLOW [215] -> SHIFT '~' GOTO 90
	expression/L9 = . "!" expression, FOLLOW [215] -> SHIFT '!' GOTO 91
	expression/L12 = . "*" expression, FOLLOW [215] -> SHIFT '*' GOTO 92
[91]
	expression/L3 = . expression "=" expression, FOLLOW [215] -> GOTO 165
	expression/L3 = . expression "+=" expression, FOLLOW [215] -> GOTO 165
	expression/L3 = . expression "-=" expression, FOLLOW [215] -> GOTO 165
	expression/L3 = . expression "*=" expression, FOLLOW [215] -> GOTO 165
	expression/L3 = . expression "/=" expression, FOLLOW [215] -> GOTO 165
	expression/L3 = . expression "%=" expression, FOLLOW [215] -> GOTO 165
	expression/L3 = . expression "&&=" expression, FOLLOW [215] -> GOTO 165
	expression/L3 = . expression "||=" expression, FOLLOW [215] -> GOTO 165
	expression/L3 = . expression "&=" expression, FOLLOW [215] -> GOTO 165
	expression/L3 = . expression "|=" expression, FOLLOW [215] -> GOTO 165
	expression/L3 = . expression "<<=" expression, FOLLOW [215] -> GOTO 165
	expression/L3 = . expression ">>=" expression, FOLLOW [215] -> GOTO 165
	expression/L4 = . expression "||" expression, FOLLOW [215] -> GOTO 165
	expression/L5 = . expression "&&" expression, FOLLOW [215] -> GOTO 165
	expression/L6 = . expression "|" expression, FOLLOW [215] -> GOTO 165
	expression/L7 = . expression "^" expression, FOLLOW [215] -> GOTO 165
	expression/L7 = . expression "&" expression, FOLLOW [215] -> GOTO 165
	expression/L8 = . expression "==" expression, FOLLOW [215] -> GOTO 165
	expression/L8 = . expression "!=" expression, FOLLOW [215] -> GOTO 165
	expression/L8 = . expression "<=" expression, FOLLOW [215] -> GOTO 165
	expression/L8 = . expression "<" expression, FOLLOW [215] -> GOTO 165
	expression/L8 = . expression ">=" expression, FOLLOW [215] -> GOTO 165
	expression/L8 = . expression ">" expression, FOLLOW [215] -> GOTO 165
	expression/L9 = . expression "+" expression, FOLLOW [215] -> GOTO 165
	expression/L9 = . expression "-" expression, FOLLOW [215] -> GOTO 165
	expression/L9 = "!" . expression, FOLLOW [215] -> GOTO 165
	expression/L10 = . expression "*" expression, FOLLOW [215] -> GOTO 165
	expression/L10 = . expression "/" expression, FOLLOW [215] -> GOTO 165
	expression/L10 = . expression "%" expression, FOLLOW [215] -> GOTO 165
	expression/L11 = . expression "<<" expression, FOLLOW [215] -> GOTO 165
	expression/L11 = . expression ">>" expression, FOLLOW [215] -> GOTO 165
	expression/L12 = . expression "." IDENT, FOLLOW [215] -> GOTO 165
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [215] -> GOTO 165
	expression/L13 = . expression "(" ")", FOLLOW [215] -> GOTO 165
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [215] -> GOTO 165
	iexpression = . expression indirection IDENT, FOLLOW [215] -> GOTO 165
	expression/L12 = . iexpression, FOLLOW [215] -> GOTO 70
	expression/L2 = . BOOLEAN, FOLLOW [215] -> SHIFT BOOLEAN GOTO 71
	expression/L2 = . IDENT, FOLLOW [215] -> SHIFT IDENT GOTO 72
	expression/L2 = . DQSTRING, FOLLOW [215] -> SHIFT DQSTRING GOTO 73
	expression/L2 = . SQSTRING, FOLLOW [215] -> SHIFT SQSTRING GOTO 74
	expression/L2 = . CARDINAL, FOLLOW [215] -> SHIFT CARDINAL GOTO 75
	expression/L2 = . INTEGER, FOLLOW [215] -> SHIFT INTEGER GOTO 76
	expression/L2 = . FLOAT, FOLLOW [215] -> SHIFT FLOAT GOTO 77
	expression/L2 = . "(" expression ")", FOLLOW [215] -> SHIFT '(' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [215] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [215] -> SHIFT '{' GOTO 95
	expression/L9 = . "&" expression, FOLLOW [215] -> SHIFT '&' GOTO 80
	expression/L1 = . "new" typespec ":" expression, FOLLOW [215] -> SHIFT "new" GOTO 86
	expression/L2 = . "null", FOLLOW [215] -> SHIFT "null" GOTO 87
	expression/L9 = . "+" expression, FOLLOW [215] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [215] -> SHIFT '-' GOTO 89
	expression/L9 = . "~" expression, FOLLOW [215] -> SHIFT '~' GOTO 90
	expression/L9 = . "!" expression, FOLLOW [215] -> SHIFT '!' GOTO 91
	expression/L12 = . "*" expression, FOLLOW [215] -> SHIFT '*' GOTO 92
[92]
	expression/L3 = . expression "=" expression, FOLLOW [215] -> GOTO 166
	expression/L3 = . expression "+=" expression, FOLLOW [215] -> GOTO 166
	expression/L3 = . expression "-=" expression, FOLLOW [215] -> GOTO 166
	expression/L3 = . expression "*=" expression, FOLLOW [215] -> GOTO 166
	expression/L3 = . expression "/=" expression, FOLLOW [215] -> GOTO 166
	expression/L3 = . expression "%=" expression, FOLLOW [215] -> GOTO 166
	expression/L3 = . expression "&&=" expression, FOLLOW [215] -> GOTO 166
	expression/L3 = . expression "||=" expression, FOLLOW [215] -> GOTO 166
	expression/L3 = . expression "&=" expression, FOLLOW [215] -> GOTO 166
	expression/L3 = . expression "|=" expression, FOLLOW [215] -> GOTO 166
	expression/L3 = . expression "<<=" expression, FOLLOW [215] -> GOTO 166
	expression/L3 = . expression ">>=" expression, FOLLOW [215] -> GOTO 166
	expression/L4 = . expression "||" expression, FOLLOW [215] -> GOTO 166
	expression/L5 = . expression "&&" expression, FOLLOW [215] -> GOTO 166
	expression/L6 = . expression "|" expression, FOLLOW [215] -> GOTO 166
	expression/L7 = . expression "^" expression, FOLLOW [215] -> GOTO 166
	expression/L7 = . expression "&" expression, FOLLOW [215] -> GOTO 166
	expression/L8 = . expression "==" expression, FOLLOW [215] -> GOTO 166
	expression/L8 = . expression "!=" expression, FOLLOW [215] -> GOTO 166
	expression/L8 = . expression "<=" expression, FOLLOW [215] -> GOTO 166
	expression/L8 = . expression "<" expression, FOLLOW [215] -> GOTO 166
	expression/L8 = . expression ">=" expression, FOLLOW [215] -> GOTO 166
	expression/L8 = . expression ">" expression, FOLLOW [215] -> GOTO 166
	expression/L9 = . expression "+" expression, FOLLOW [215] -> GOTO 166
	expression/L9 = . expression "-" expression, FOLLOW [215] -> GOTO 166
	expression/L10 = . expression "*" expression, FOLLOW [215] -> GOTO 166
	expression/L10 = . expression "/" expression, FOLLOW [215] -> GOTO 166
	expression/L10 = . expression "%" expression, FOLLOW [215] -> GOTO 166
	expression/L11 = . expression "<<" expression, FOLLOW [215] -> GOTO 166
	expression/L11 = . expression ">>" expression, FOLLOW [215] -> GOTO 166
	expression/L12 = . expression "." IDENT, FOLLOW [215] -> GOTO 166
	expression/L12 = "*" . expression, FOLLOW [215] -> GOTO 166
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [215] -> GOTO 166
	expression/L13 = . expression "(" ")", FOLLOW [215] -> GOTO 166
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [215] -> GOTO 166
	iexpression = . expression indirection IDENT, FOLLOW [215] -> GOTO 166
	expression/L12 = . iexpression, FOLLOW [215] -> GOTO 70
	expression/L2 = . BOOLEAN, FOLLOW [215] -> SHIFT BOOLEAN GOTO 71
	expression/L2 = . IDENT, FOLLOW [215] -> SHIFT IDENT GOTO 72
	expression/L2 = . DQSTRING, FOLLOW [215] -> SHIFT DQSTRING GOTO 73
	expression/L2 = . SQSTRING, FOLLOW [215] -> SHIFT SQSTRING GOTO 74
	expression/L2 = . CARDINAL, FOLLOW [215] -> SHIFT CARDINAL GOTO 75
	expression/L2 = . INTEGER, FOLLOW [215] -> SHIFT INTEGER GOTO 76
	expression/L2 = . FLOAT, FOLLOW [215] -> SHIFT FLOAT GOTO 77
	expression/L2 = . "(" expression ")", FOLLOW [215] -> SHIFT '(' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [215] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [215] -> SHIFT '{' GOTO 95
	expression/L9 = . "&" expression, FOLLOW [215] -> SHIFT '&' GOTO 80
	expression/L1 = . "new" typespec ":" expression, FOLLOW [215] -> SHIFT "new" GOTO 86
	expression/L2 = . "null", FOLLOW [215] -> SHIFT "null" GOTO 87
	expression/L9 = . "+" expression, FOLLOW [215] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [215] -> SHIFT '-' GOTO 89
	expression/L9 = . "~" expression, FOLLOW [215] -> SHIFT '~' GOTO 90
	expression/L9 = . "!" expression, FOLLOW [215] -> SHIFT '!' GOTO 91
	expression/L12 = . "*" expression, FOLLOW [215] -> SHIFT '*' GOTO 92
[93]
	typespec/L1 = typename "^" "^" "&" . (19), FOLLOW [225] -> REDUCE typespec #4 CALL typespec "^^&"
[94]
	iexpression = expression . indirection IDENT, FOLLOW [89] -> GOTO 114
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [89] -> SHIFT '(' GOTO 115
	expression/L13 = expression . "(" ")", FOLLOW [89] -> SHIFT '(' GOTO 115
	expression/L7 = expression . "&" expression, FOLLOW [89] -> SHIFT '&' GOTO 117
	expression/L7 = expression . "^" expression, FOLLOW [89] -> SHIFT '^' GOTO 118
	expression/L3 = expression . "=" expression, FOLLOW [89] -> SHIFT '=' GOTO 119
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [89] -> SHIFT '[' GOTO 120
	expression/L3 = expression . "+=" expression, FOLLOW [89] -> SHIFT "+=" GOTO 121
	expression/L3 = expression . "-=" expression, FOLLOW [89] -> SHIFT "-=" GOTO 122
	expression/L3 = expression . "*=" expression, FOLLOW [89] -> SHIFT "*=" GOTO 123
	expression/L3 = expression . "/=" expression, FOLLOW [89] -> SHIFT "/=" GOTO 124
	expression/L3 = expression . "%=" expression, FOLLOW [89] -> SHIFT "%=" GOTO 125
	expression/L3 = expression . "&&=" expression, FOLLOW [89] -> SHIFT "&&=" GOTO 126
	expression/L3 = expression . "||=" expression, FOLLOW [89] -> SHIFT "||=" GOTO 127
	expression/L3 = expression . "&=" expression, FOLLOW [89] -> SHIFT "&=" GOTO 128
	expression/L3 = expression . "|=" expression, FOLLOW [89] -> SHIFT "|=" GOTO 129
	expression/L3 = expression . "<<=" expression, FOLLOW [89] -> SHIFT "<<=" GOTO 130
	expression/L3 = expression . ">>=" expression, FOLLOW [89] -> SHIFT ">>=" GOTO 131
	expression/L4 = expression . "||" expression, FOLLOW [89] -> SHIFT "||" GOTO 132
	expression/L5 = expression . "&&" expression, FOLLOW [89] -> SHIFT "&&" GOTO 133
	expression/L6 = expression . "|" expression, FOLLOW [89] -> SHIFT '|' GOTO 134
	expression/L8 = expression . "==" expression, FOLLOW [89] -> SHIFT "==" GOTO 135
	expression/L8 = expression . "!=" expression, FOLLOW [89] -> SHIFT "!=" GOTO 136
	expression/L8 = expression . "<=" expression, FOLLOW [89] -> SHIFT "<=" GOTO 137
	expression/L8 = expression . "<" expression, FOLLOW [89] -> SHIFT '<' GOTO 138
	expression/L8 = expression . ">=" expression, FOLLOW [89] -> SHIFT ">=" GOTO 139
	expression/L8 = expression . ">" expression, FOLLOW [89] -> SHIFT '>' GOTO 140
	expression/L9 = expression . "+" expression, FOLLOW [89] -> SHIFT '+' GOTO 141
	expression/L9 = expression . "-" expression, FOLLOW [89] -> SHIFT '-' GOTO 142
	expression/L10 = expression . "*" expression, FOLLOW [89] -> SHIFT '*' GOTO 143
	expression/L10 = expression . "/" expression, FOLLOW [89] -> SHIFT '/' GOTO 144
	expression/L10 = expression . "%" expression, FOLLOW [89] -> SHIFT '%' GOTO 145
	expression/L11 = expression . "<<" expression, FOLLOW [89] -> SHIFT "<<" GOTO 146
	expression/L11 = expression . ">>" expression, FOLLOW [89] -> SHIFT ">>" GOTO 147
	expression/L12 = expression . "." IDENT, FOLLOW [89] -> SHIFT '.' GOTO 148
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 149
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 149
	variabledefinition = typespec IDENT "=" expression . (step:40), FOLLOW [12] -> REDUCE variabledefinition #4 CALL vardef_assign
[95]
	expression/L3 = . expression "=" expression, FOLLOW [215] -> GOTO 167
	expression/L3 = . expression "+=" expression, FOLLOW [215] -> GOTO 167
	expression/L3 = . expression "-=" expression, FOLLOW [215] -> GOTO 167
	expression/L3 = . expression "*=" expression, FOLLOW [215] -> GOTO 167
	expression/L3 = . expression "/=" expression, FOLLOW [215] -> GOTO 167
	expression/L3 = . expression "%=" expression, FOLLOW [215] -> GOTO 167
	expression/L3 = . expression "&&=" expression, FOLLOW [215] -> GOTO 167
	expression/L3 = . expression "||=" expression, FOLLOW [215] -> GOTO 167
	expression/L3 = . expression "&=" expression, FOLLOW [215] -> GOTO 167
	expression/L3 = . expression "|=" expression, FOLLOW [215] -> GOTO 167
	expression/L3 = . expression "<<=" expression, FOLLOW [215] -> GOTO 167
	expression/L3 = . expression ">>=" expression, FOLLOW [215] -> GOTO 167
	expression/L4 = . expression "||" expression, FOLLOW [215] -> GOTO 167
	expression/L5 = . expression "&&" expression, FOLLOW [215] -> GOTO 167
	expression/L6 = . expression "|" expression, FOLLOW [215] -> GOTO 167
	expression/L7 = . expression "^" expression, FOLLOW [215] -> GOTO 167
	expression/L7 = . expression "&" expression, FOLLOW [215] -> GOTO 167
	expression/L8 = . expression "==" expression, FOLLOW [215] -> GOTO 167
	expression/L8 = . expression "!=" expression, FOLLOW [215] -> GOTO 167
	expression/L8 = . expression "<=" expression, FOLLOW [215] -> GOTO 167
	expression/L8 = . expression "<" expression, FOLLOW [215] -> GOTO 167
	expression/L8 = . expression ">=" expression, FOLLOW [215] -> GOTO 167
	expression/L8 = . expression ">" expression, FOLLOW [215] -> GOTO 167
	expression/L9 = . expression "+" expression, FOLLOW [215] -> GOTO 167
	expression/L9 = . expression "-" expression, FOLLOW [215] -> GOTO 167
	expression/L10 = . expression "*" expression, FOLLOW [215] -> GOTO 167
	expression/L10 = . expression "/" expression, FOLLOW [215] -> GOTO 167
	expression/L10 = . expression "%" expression, FOLLOW [215] -> GOTO 167
	expression/L11 = . expression "<<" expression, FOLLOW [215] -> GOTO 167
	expression/L11 = . expression ">>" expression, FOLLOW [215] -> GOTO 167
	expression/L12 = . expression "." IDENT, FOLLOW [215] -> GOTO 167
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [215] -> GOTO 167
	expression/L13 = . expression "(" ")", FOLLOW [215] -> GOTO 167
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [215] -> GOTO 167
	iexpression = . expression indirection IDENT, FOLLOW [215] -> GOTO 167
	expressionlist = . expression "," expressionlist, FOLLOW [11] -> GOTO 167
	expressionlist = . expression, FOLLOW [11] -> GOTO 167
	expression/L12 = . iexpression, FOLLOW [215] -> GOTO 70
	expression/L1 = "{" . expressionlist "}", FOLLOW [215] -> GOTO 153
	expression/L2 = . BOOLEAN, FOLLOW [215] -> SHIFT BOOLEAN GOTO 71
	expression/L2 = . IDENT, FOLLOW [215] -> SHIFT IDENT GOTO 72
	expression/L2 = . DQSTRING, FOLLOW [215] -> SHIFT DQSTRING GOTO 73
	expression/L2 = . SQSTRING, FOLLOW [215] -> SHIFT SQSTRING GOTO 74
	expression/L2 = . CARDINAL, FOLLOW [215] -> SHIFT CARDINAL GOTO 75
	expression/L2 = . INTEGER, FOLLOW [215] -> SHIFT INTEGER GOTO 76
	expression/L2 = . FLOAT, FOLLOW [215] -> SHIFT FLOAT GOTO 77
	expression/L2 = . "(" expression ")", FOLLOW [215] -> SHIFT '(' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [215] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [215] -> SHIFT '{' GOTO 95
	expression/L1 = "{" . "}", FOLLOW [215] -> SHIFT '}' GOTO 154
	expression/L9 = . "&" expression, FOLLOW [215] -> SHIFT '&' GOTO 80
	expression/L1 = . "new" typespec ":" expression, FOLLOW [215] -> SHIFT "new" GOTO 86
	expression/L2 = . "null", FOLLOW [215] -> SHIFT "null" GOTO 87
	expression/L9 = . "+" expression, FOLLOW [215] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [215] -> SHIFT '-' GOTO 89
	expression/L9 = . "~" expression, FOLLOW [215] -> SHIFT '~' GOTO 90
	expression/L9 = . "!" expression, FOLLOW [215] -> SHIFT '!' GOTO 91
	expression/L12 = . "*" expression, FOLLOW [215] -> SHIFT '*' GOTO 92
[96]
	iexpression = expression . indirection IDENT, FOLLOW [157] -> GOTO 114
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [157] -> SHIFT '(' GOTO 115
	expression/L13 = expression . "(" ")", FOLLOW [157] -> SHIFT '(' GOTO 115
	expression/L7 = expression . "&" expression, FOLLOW [157] -> SHIFT '&' GOTO 117
	expression/L7 = expression . "^" expression, FOLLOW [157] -> SHIFT '^' GOTO 118
	expression/L3 = expression . "=" expression, FOLLOW [157] -> SHIFT '=' GOTO 119
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [157] -> SHIFT '[' GOTO 120
	variabledefinition = typespec IDENT "[" expression . "]" "=" expression, FOLLOW [12] -> SHIFT ']' GOTO 168
	variabledefinition = typespec IDENT "[" expression . "]", FOLLOW [12] -> SHIFT ']' GOTO 168
	expression/L3 = expression . "+=" expression, FOLLOW [157] -> SHIFT "+=" GOTO 121
	expression/L3 = expression . "-=" expression, FOLLOW [157] -> SHIFT "-=" GOTO 122
	expression/L3 = expression . "*=" expression, FOLLOW [157] -> SHIFT "*=" GOTO 123
	expression/L3 = expression . "/=" expression, FOLLOW [157] -> SHIFT "/=" GOTO 124
	expression/L3 = expression . "%=" expression, FOLLOW [157] -> SHIFT "%=" GOTO 125
	expression/L3 = expression . "&&=" expression, FOLLOW [157] -> SHIFT "&&=" GOTO 126
	expression/L3 = expression . "||=" expression, FOLLOW [157] -> SHIFT "||=" GOTO 127
	expression/L3 = expression . "&=" expression, FOLLOW [157] -> SHIFT "&=" GOTO 128
	expression/L3 = expression . "|=" expression, FOLLOW [157] -> SHIFT "|=" GOTO 129
	expression/L3 = expression . "<<=" expression, FOLLOW [157] -> SHIFT "<<=" GOTO 130
	expression/L3 = expression . ">>=" expression, FOLLOW [157] -> SHIFT ">>=" GOTO 131
	expression/L4 = expression . "||" expression, FOLLOW [157] -> SHIFT "||" GOTO 132
	expression/L5 = expression . "&&" expression, FOLLOW [157] -> SHIFT "&&" GOTO 133
	expression/L6 = expression . "|" expression, FOLLOW [157] -> SHIFT '|' GOTO 134
	expression/L8 = expression . "==" expression, FOLLOW [157] -> SHIFT "==" GOTO 135
	expression/L8 = expression . "!=" expression, FOLLOW [157] -> SHIFT "!=" GOTO 136
	expression/L8 = expression . "<=" expression, FOLLOW [157] -> SHIFT "<=" GOTO 137
	expression/L8 = expression . "<" expression, FOLLOW [157] -> SHIFT '<' GOTO 138
	expression/L8 = expression . ">=" expression, FOLLOW [157] -> SHIFT ">=" GOTO 139
	expression/L8 = expression . ">" expression, FOLLOW [157] -> SHIFT '>' GOTO 140
	expression/L9 = expression . "+" expression, FOLLOW [157] -> SHIFT '+' GOTO 141
	expression/L9 = expression . "-" expression, FOLLOW [157] -> SHIFT '-' GOTO 142
	expression/L10 = expression . "*" expression, FOLLOW [157] -> SHIFT '*' GOTO 143
	expression/L10 = expression . "/" expression, FOLLOW [157] -> SHIFT '/' GOTO 144
	expression/L10 = expression . "%" expression, FOLLOW [157] -> SHIFT '%' GOTO 145
	expression/L11 = expression . "<<" expression, FOLLOW [157] -> SHIFT "<<" GOTO 146
	expression/L11 = expression . ">>" expression, FOLLOW [157] -> SHIFT ">>" GOTO 147
	expression/L12 = expression . "." IDENT, FOLLOW [157] -> SHIFT '.' GOTO 148
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 149
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 149
[97]
	functiondefinition = linkage "function" typespec IDENT . callablebody, FOLLOW [217] -> GOTO 169
	callablebody = . "(" parameterlist ")" "{" codeblock "}", FOLLOW [217] -> SHIFT '(' GOTO 99
[98]
	functiondefinition = linkage "procedure" IDENT callablebody . (28), FOLLOW [217] -> REDUCE functiondefinition #4 CALL procdef
[99]
	typespec/L1 = . typename, FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [8] -> GOTO 8
	paramdecl = . typespec IDENT, FOLLOW [168] -> GOTO 170
	callablebody = "(" . parameterlist ")" "{" codeblock "}", FOLLOW [217] -> GOTO 171
	parameterlist = . parameters, FOLLOW [9] -> GOTO 172
	parameters = . paramdecl "," parameters, FOLLOW [9] -> GOTO 173
	parameters = . paramdecl, FOLLOW [9] -> GOTO 173
	typename/L1 = . IDENT, FOLLOW [55] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [55] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [8] -> SHIFT "const" GOTO 18
	parameterlist = ., FOLLOW [9] -> REDUCE parameterlist #0
[100]
	typespec/L1 = "const" typename "^" "&" . (16), FOLLOW [225] -> REDUCE typespec #4 CALL typespec "const^&"
[101]
	typespec/L1 = "const" typename "^" "^" . "&", FOLLOW [225] -> SHIFT '&' GOTO 174
	typespec/L1 = "const" typename "^" "^" . (18), FOLLOW [225] -> REDUCE typespec #4 CALL typespec "const^^"
[102]
	structdefinition = "struct" IDENT "{" datadefinitionlist . "}", FOLLOW [12] -> SHIFT '}' GOTO 175
[103]
	datadefinitionlist = datadefinition . datadefinitionlist, FOLLOW [11] -> GOTO 176
	datadefinitionlist = . datadefinition datadefinitionlist, FOLLOW [11] -> GOTO 103
	typespec/L1 = . typename, FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [8] -> GOTO 8
	variabledefinition = . typespec IDENT, FOLLOW [12] -> GOTO 9
	variabledefinition = . typespec IDENT "=" expression, FOLLOW [12] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression, FOLLOW [12] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]", FOLLOW [12] -> GOTO 9
	datadefinition = . typedefinition ";", FOLLOW [158] -> GOTO 10
	datadefinition = . structdefinition ";", FOLLOW [158] -> GOTO 11
	datadefinition = . variabledefinition ";", FOLLOW [158] -> GOTO 16
	typename/L1 = . IDENT, FOLLOW [55] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [55] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [8] -> SHIFT "const" GOTO 18
	typedefinition = . "typedef" typename IDENT, FOLLOW [12] -> SHIFT "typedef" GOTO 19
	structdefinition = . "struct" IDENT "{" datadefinitionlist "}", FOLLOW [12] -> SHIFT "struct" GOTO 20
	datadefinitionlist = ., FOLLOW [11] -> REDUCE datadefinitionlist #0
[104]
	interfacedefinition = "interface" IDENT "{" methoddefinitionlist . "}", FOLLOW [12] -> SHIFT '}' GOTO 177
[105]
	methoddefinitionlist = methoddefinition . methoddefinitionlist, FOLLOW [11] -> GOTO 178
	methoddefinitionlist = . methoddefinition methoddefinitionlist, FOLLOW [11] -> GOTO 105
	methoddefinition = . "function" typespec IDENT "(" parameterlist ")" ";", FOLLOW [159] -> SHIFT "function" GOTO 106
	methoddefinition = . "procedure" IDENT "(" parameterlist ")" ";", FOLLOW [159] -> SHIFT "procedure" GOTO 107
	methoddefinitionlist = ., FOLLOW [11] -> REDUCE methoddefinitionlist #0
[106]
	typespec/L1 = . typename, FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [8] -> GOTO 8
	methoddefinition = "function" . typespec IDENT "(" parameterlist ")" ";", FOLLOW [159] -> GOTO 179
	typename/L1 = . IDENT, FOLLOW [55] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [55] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [8] -> SHIFT "const" GOTO 18
[107]
	methoddefinition = "procedure" . IDENT "(" parameterlist ")" ";", FOLLOW [159] -> SHIFT IDENT GOTO 180
[108]
	classdefinition = "class" IDENT "{" definitionlist . "}", FOLLOW [12] -> SHIFT '}' GOTO 181
[109]
	externdefinition = "extern" DQSTRING "function" typespec IDENT . "(" externparameterlist ")" ";", FOLLOW [52] -> SHIFT '(' GOTO 182
[110]
	externdefinition = "extern" DQSTRING "procedure" IDENT "(" . externparameterlist ")" ";", FOLLOW [52] -> GOTO 183
	externparameterlist = . externparameters, FOLLOW [9] -> GOTO 184
	externparameterlist = . externparameters, FOLLOW [9] -> GOTO 184
	typespec/L1 = . typename, FOLLOW [168] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [168] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [168] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [168] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [168] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [168] -> GOTO 8
	externparameters = . typespec "," externparameters, FOLLOW [9] -> GOTO 185
	externparameters = . typespec, FOLLOW [9] -> GOTO 185
	typename/L1 = . IDENT, FOLLOW [169] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [169] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [168] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [168] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [168] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [168] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [168] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [168] -> SHIFT "const" GOTO 18
	externparameterlist = ., FOLLOW [9] -> REDUCE externparameterlist #0
[111]
	statement/L1 = typedefinition ";" . (8), FOLLOW [90] -> REDUCE statement #2 CALL definition
[112]
	mainproc = "main" "{" codeblock "}" . (scope:7), FOLLOW [0] -> REDUCE mainproc #4 CALL main_procdef
[113]
	statementlist = statement statementlist . (step), FOLLOW [11] -> REDUCE statementlist #2
[114]
	iexpression = expression indirection . IDENT, FOLLOW [215] -> SHIFT IDENT GOTO 186
[115]
	expression/L3 = . expression "=" expression, FOLLOW [215] -> GOTO 167
	expression/L3 = . expression "+=" expression, FOLLOW [215] -> GOTO 167
	expression/L3 = . expression "-=" expression, FOLLOW [215] -> GOTO 167
	expression/L3 = . expression "*=" expression, FOLLOW [215] -> GOTO 167
	expression/L3 = . expression "/=" expression, FOLLOW [215] -> GOTO 167
	expression/L3 = . expression "%=" expression, FOLLOW [215] -> GOTO 167
	expression/L3 = . expression "&&=" expression, FOLLOW [215] -> GOTO 167
	expression/L3 = . expression "||=" expression, FOLLOW [215] -> GOTO 167
	expression/L3 = . expression "&=" expression, FOLLOW [215] -> GOTO 167
	expression/L3 = . expression "|=" expression, FOLLOW [215] -> GOTO 167
	expression/L3 = . expression "<<=" expression, FOLLOW [215] -> GOTO 167
	expression/L3 = . expression ">>=" expression, FOLLOW [215] -> GOTO 167
	expression/L4 = . expression "||" expression, FOLLOW [215] -> GOTO 167
	expression/L5 = . expression "&&" expression, FOLLOW [215] -> GOTO 167
	expression/L6 = . expression "|" expression, FOLLOW [215] -> GOTO 167
	expression/L7 = . expression "^" expression, FOLLOW [215] -> GOTO 167
	expression/L7 = . expression "&" expression, FOLLOW [215] -> GOTO 167
	expression/L8 = . expression "==" expression, FOLLOW [215] -> GOTO 167
	expression/L8 = . expression "!=" expression, FOLLOW [215] -> GOTO 167
	expression/L8 = . expression "<=" expression, FOLLOW [215] -> GOTO 167
	expression/L8 = . expression "<" expression, FOLLOW [215] -> GOTO 167
	expression/L8 = . expression ">=" expression, FOLLOW [215] -> GOTO 167
	expression/L8 = . expression ">" expression, FOLLOW [215] -> GOTO 167
	expression/L9 = . expression "+" expression, FOLLOW [215] -> GOTO 167
	expression/L9 = . expression "-" expression, FOLLOW [215] -> GOTO 167
	expression/L10 = . expression "*" expression, FOLLOW [215] -> GOTO 167
	expression/L10 = . expression "/" expression, FOLLOW [215] -> GOTO 167
	expression/L10 = . expression "%" expression, FOLLOW [215] -> GOTO 167
	expression/L11 = . expression "<<" expression, FOLLOW [215] -> GOTO 167
	expression/L11 = . expression ">>" expression, FOLLOW [215] -> GOTO 167
	expression/L12 = . expression "." IDENT, FOLLOW [215] -> GOTO 167
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [215] -> GOTO 167
	expression/L13 = . expression "(" ")", FOLLOW [215] -> GOTO 167
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [215] -> GOTO 167
	iexpression = . expression indirection IDENT, FOLLOW [215] -> GOTO 167
	expressionlist = . expression "," expressionlist, FOLLOW [9] -> GOTO 167
	expressionlist = . expression, FOLLOW [9] -> GOTO 167
	expression/L12 = . iexpression, FOLLOW [215] -> GOTO 70
	expression/L13 = expression "(" . expressionlist ")", FOLLOW [215] -> GOTO 187
	expression/L2 = . BOOLEAN, FOLLOW [215] -> SHIFT BOOLEAN GOTO 71
	expression/L2 = . IDENT, FOLLOW [215] -> SHIFT IDENT GOTO 72
	expression/L2 = . DQSTRING, FOLLOW [215] -> SHIFT DQSTRING GOTO 73
	expression/L2 = . SQSTRING, FOLLOW [215] -> SHIFT SQSTRING GOTO 74
	expression/L2 = . CARDINAL, FOLLOW [215] -> SHIFT CARDINAL GOTO 75
	expression/L2 = . INTEGER, FOLLOW [215] -> SHIFT INTEGER GOTO 76
	expression/L2 = . FLOAT, FOLLOW [215] -> SHIFT FLOAT GOTO 77
	expression/L2 = . "(" expression ")", FOLLOW [215] -> SHIFT '(' GOTO 78
	expression/L13 = expression "(" . ")", FOLLOW [215] -> SHIFT ')' GOTO 188
	expression/L1 = . "{" expressionlist "}", FOLLOW [215] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [215] -> SHIFT '{' GOTO 95
	expression/L9 = . "&" expression, FOLLOW [215] -> SHIFT '&' GOTO 80
	expression/L1 = . "new" typespec ":" expression, FOLLOW [215] -> SHIFT "new" GOTO 86
	expression/L2 = . "null", FOLLOW [215] -> SHIFT "null" GOTO 87
	expression/L9 = . "+" expression, FOLLOW [215] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [215] -> SHIFT '-' GOTO 89
	expression/L9 = . "~" expression, FOLLOW [215] -> SHIFT '~' GOTO 90
	expression/L9 = . "!" expression, FOLLOW [215] -> SHIFT '!' GOTO 91
	expression/L12 = . "*" expression, FOLLOW [215] -> SHIFT '*' GOTO 92
[116]
	statement/L1 = expression ";" . (33), FOLLOW [90] -> REDUCE statement #2 CALL free_expression
[117]
	expression/L3 = . expression "=" expression, FOLLOW [215] -> GOTO 189
	expression/L3 = . expression "+=" expression, FOLLOW [215] -> GOTO 189
	expression/L3 = . expression "-=" expression, FOLLOW [215] -> GOTO 189
	expression/L3 = . expression "*=" expression, FOLLOW [215] -> GOTO 189
	expression/L3 = . expression "/=" expression, FOLLOW [215] -> GOTO 189
	expression/L3 = . expression "%=" expression, FOLLOW [215] -> GOTO 189
	expression/L3 = . expression "&&=" expression, FOLLOW [215] -> GOTO 189
	expression/L3 = . expression "||=" expression, FOLLOW [215] -> GOTO 189
	expression/L3 = . expression "&=" expression, FOLLOW [215] -> GOTO 189
	expression/L3 = . expression "|=" expression, FOLLOW [215] -> GOTO 189
	expression/L3 = . expression "<<=" expression, FOLLOW [215] -> GOTO 189
	expression/L3 = . expression ">>=" expression, FOLLOW [215] -> GOTO 189
	expression/L4 = . expression "||" expression, FOLLOW [215] -> GOTO 189
	expression/L5 = . expression "&&" expression, FOLLOW [215] -> GOTO 189
	expression/L6 = . expression "|" expression, FOLLOW [215] -> GOTO 189
	expression/L7 = . expression "^" expression, FOLLOW [215] -> GOTO 189
	expression/L7 = . expression "&" expression, FOLLOW [215] -> GOTO 189
	expression/L7 = expression "&" . expression, FOLLOW [215] -> GOTO 189
	expression/L8 = . expression "==" expression, FOLLOW [215] -> GOTO 189
	expression/L8 = . expression "!=" expression, FOLLOW [215] -> GOTO 189
	expression/L8 = . expression "<=" expression, FOLLOW [215] -> GOTO 189
	expression/L8 = . expression "<" expression, FOLLOW [215] -> GOTO 189
	expression/L8 = . expression ">=" expression, FOLLOW [215] -> GOTO 189
	expression/L8 = . expression ">" expression, FOLLOW [215] -> GOTO 189
	expression/L9 = . expression "+" expression, FOLLOW [215] -> GOTO 189
	expression/L9 = . expression "-" expression, FOLLOW [215] -> GOTO 189
	expression/L10 = . expression "*" expression, FOLLOW [215] -> GOTO 189
	expression/L10 = . expression "/" expression, FOLLOW [215] -> GOTO 189
	expression/L10 = . expression "%" expression, FOLLOW [215] -> GOTO 189
	expression/L11 = . expression "<<" expression, FOLLOW [215] -> GOTO 189
	expression/L11 = . expression ">>" expression, FOLLOW [215] -> GOTO 189
	expression/L12 = . expression "." IDENT, FOLLOW [215] -> GOTO 189
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [215] -> GOTO 189
	expression/L13 = . expression "(" ")", FOLLOW [215] -> GOTO 189
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [215] -> GOTO 189
	iexpression = . expression indirection IDENT, FOLLOW [215] -> GOTO 189
	expression/L12 = . iexpression, FOLLOW [215] -> GOTO 70
	expression/L2 = . BOOLEAN, FOLLOW [215] -> SHIFT BOOLEAN GOTO 71
	expression/L2 = . IDENT, FOLLOW [215] -> SHIFT IDENT GOTO 72
	expression/L2 = . DQSTRING, FOLLOW [215] -> SHIFT DQSTRING GOTO 73
	expression/L2 = . SQSTRING, FOLLOW [215] -> SHIFT SQSTRING GOTO 74
	expression/L2 = . CARDINAL, FOLLOW [215] -> SHIFT CARDINAL GOTO 75
	expression/L2 = . INTEGER, FOLLOW [215] -> SHIFT INTEGER GOTO 76
	expression/L2 = . FLOAT, FOLLOW [215] -> SHIFT FLOAT GOTO 77
	expression/L2 = . "(" expression ")", FOLLOW [215] -> SHIFT '(' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [215] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [215] -> SHIFT '{' GOTO 95
	expression/L9 = . "&" expression, FOLLOW [215] -> SHIFT '&' GOTO 80
	expression/L1 = . "new" typespec ":" expression, FOLLOW [215] -> SHIFT "new" GOTO 86
	expression/L2 = . "null", FOLLOW [215] -> SHIFT "null" GOTO 87
	expression/L9 = . "+" expression, FOLLOW [215] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [215] -> SHIFT '-' GOTO 89
	expression/L9 = . "~" expression, FOLLOW [215] -> SHIFT '~' GOTO 90
	expression/L9 = . "!" expression, FOLLOW [215] -> SHIFT '!' GOTO 91
	expression/L12 = . "*" expression, FOLLOW [215] -> SHIFT '*' GOTO 92
[118]
	expression/L3 = . expression "=" expression, FOLLOW [215] -> GOTO 190
	expression/L3 = . expression "+=" expression, FOLLOW [215] -> GOTO 190
	expression/L3 = . expression "-=" expression, FOLLOW [215] -> GOTO 190
	expression/L3 = . expression "*=" expression, FOLLOW [215] -> GOTO 190
	expression/L3 = . expression "/=" expression, FOLLOW [215] -> GOTO 190
	expression/L3 = . expression "%=" expression, FOLLOW [215] -> GOTO 190
	expression/L3 = . expression "&&=" expression, FOLLOW [215] -> GOTO 190
	expression/L3 = . expression "||=" expression, FOLLOW [215] -> GOTO 190
	expression/L3 = . expression "&=" expression, FOLLOW [215] -> GOTO 190
	expression/L3 = . expression "|=" expression, FOLLOW [215] -> GOTO 190
	expression/L3 = . expression "<<=" expression, FOLLOW [215] -> GOTO 190
	expression/L3 = . expression ">>=" expression, FOLLOW [215] -> GOTO 190
	expression/L4 = . expression "||" expression, FOLLOW [215] -> GOTO 190
	expression/L5 = . expression "&&" expression, FOLLOW [215] -> GOTO 190
	expression/L6 = . expression "|" expression, FOLLOW [215] -> GOTO 190
	expression/L7 = . expression "^" expression, FOLLOW [215] -> GOTO 190
	expression/L7 = expression "^" . expression, FOLLOW [215] -> GOTO 190
	expression/L7 = . expression "&" expression, FOLLOW [215] -> GOTO 190
	expression/L8 = . expression "==" expression, FOLLOW [215] -> GOTO 190
	expression/L8 = . expression "!=" expression, FOLLOW [215] -> GOTO 190
	expression/L8 = . expression "<=" expression, FOLLOW [215] -> GOTO 190
	expression/L8 = . expression "<" expression, FOLLOW [215] -> GOTO 190
	expression/L8 = . expression ">=" expression, FOLLOW [215] -> GOTO 190
	expression/L8 = . expression ">" expression, FOLLOW [215] -> GOTO 190
	expression/L9 = . expression "+" expression, FOLLOW [215] -> GOTO 190
	expression/L9 = . expression "-" expression, FOLLOW [215] -> GOTO 190
	expression/L10 = . expression "*" expression, FOLLOW [215] -> GOTO 190
	expression/L10 = . expression "/" expression, FOLLOW [215] -> GOTO 190
	expression/L10 = . expression "%" expression, FOLLOW [215] -> GOTO 190
	expression/L11 = . expression "<<" expression, FOLLOW [215] -> GOTO 190
	expression/L11 = . expression ">>" expression, FOLLOW [215] -> GOTO 190
	expression/L12 = . expression "." IDENT, FOLLOW [215] -> GOTO 190
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [215] -> GOTO 190
	expression/L13 = . expression "(" ")", FOLLOW [215] -> GOTO 190
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [215] -> GOTO 190
	iexpression = . expression indirection IDENT, FOLLOW [215] -> GOTO 190
	expression/L12 = . iexpression, FOLLOW [215] -> GOTO 70
	expression/L2 = . BOOLEAN, FOLLOW [215] -> SHIFT BOOLEAN GOTO 71
	expression/L2 = . IDENT, FOLLOW [215] -> SHIFT IDENT GOTO 72
	expression/L2 = . DQSTRING, FOLLOW [215] -> SHIFT DQSTRING GOTO 73
	expression/L2 = . SQSTRING, FOLLOW [215] -> SHIFT SQSTRING GOTO 74
	expression/L2 = . CARDINAL, FOLLOW [215] -> SHIFT CARDINAL GOTO 75
	expression/L2 = . INTEGER, FOLLOW [215] -> SHIFT INTEGER GOTO 76
	expression/L2 = . FLOAT, FOLLOW [215] -> SHIFT FLOAT GOTO 77
	expression/L2 = . "(" expression ")", FOLLOW [215] -> SHIFT '(' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [215] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [215] -> SHIFT '{' GOTO 95
	expression/L9 = . "&" expression, FOLLOW [215] -> SHIFT '&' GOTO 80
	expression/L1 = . "new" typespec ":" expression, FOLLOW [215] -> SHIFT "new" GOTO 86
	expression/L2 = . "null", FOLLOW [215] -> SHIFT "null" GOTO 87
	expression/L9 = . "+" expression, FOLLOW [215] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [215] -> SHIFT '-' GOTO 89
	expression/L9 = . "~" expression, FOLLOW [215] -> SHIFT '~' GOTO 90
	expression/L9 = . "!" expression, FOLLOW [215] -> SHIFT '!' GOTO 91
	expression/L12 = . "*" expression, FOLLOW [215] -> SHIFT '*' GOTO 92
[119]
	expression/L3 = . expression "=" expression, FOLLOW [215] -> GOTO 191
	expression/L3 = expression "=" . expression, FOLLOW [215] -> GOTO 191
	expression/L3 = . expression "+=" expression, FOLLOW [215] -> GOTO 191
	expression/L3 = . expression "-=" expression, FOLLOW [215] -> GOTO 191
	expression/L3 = . expression "*=" expression, FOLLOW [215] -> GOTO 191
	expression/L3 = . expression "/=" expression, FOLLOW [215] -> GOTO 191
	expression/L3 = . expression "%=" expression, FOLLOW [215] -> GOTO 191
	expression/L3 = . expression "&&=" expression, FOLLOW [215] -> GOTO 191
	expression/L3 = . expression "||=" expression, FOLLOW [215] -> GOTO 191
	expression/L3 = . expression "&=" expression, FOLLOW [215] -> GOTO 191
	expression/L3 = . expression "|=" expression, FOLLOW [215] -> GOTO 191
	expression/L3 = . expression "<<=" expression, FOLLOW [215] -> GOTO 191
	expression/L3 = . expression ">>=" expression, FOLLOW [215] -> GOTO 191
	expression/L4 = . expression "||" expression, FOLLOW [215] -> GOTO 191
	expression/L5 = . expression "&&" expression, FOLLOW [215] -> GOTO 191
	expression/L6 = . expression "|" expression, FOLLOW [215] -> GOTO 191
	expression/L7 = . expression "^" expression, FOLLOW [215] -> GOTO 191
	expression/L7 = . expression "&" expression, FOLLOW [215] -> GOTO 191
	expression/L8 = . expression "==" expression, FOLLOW [215] -> GOTO 191
	expression/L8 = . expression "!=" expression, FOLLOW [215] -> GOTO 191
	expression/L8 = . expression "<=" expression, FOLLOW [215] -> GOTO 191
	expression/L8 = . expression "<" expression, FOLLOW [215] -> GOTO 191
	expression/L8 = . expression ">=" expression, FOLLOW [215] -> GOTO 191
	expression/L8 = . expression ">" expression, FOLLOW [215] -> GOTO 191
	expression/L9 = . expression "+" expression, FOLLOW [215] -> GOTO 191
	expression/L9 = . expression "-" expression, FOLLOW [215] -> GOTO 191
	expression/L10 = . expression "*" expression, FOLLOW [215] -> GOTO 191
	expression/L10 = . expression "/" expression, FOLLOW [215] -> GOTO 191
	expression/L10 = . expression "%" expression, FOLLOW [215] -> GOTO 191
	expression/L11 = . expression "<<" expression, FOLLOW [215] -> GOTO 191
	expression/L11 = . expression ">>" expression, FOLLOW [215] -> GOTO 191
	expression/L12 = . expression "." IDENT, FOLLOW [215] -> GOTO 191
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [215] -> GOTO 191
	expression/L13 = . expression "(" ")", FOLLOW [215] -> GOTO 191
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [215] -> GOTO 191
	iexpression = . expression indirection IDENT, FOLLOW [215] -> GOTO 191
	expression/L12 = . iexpression, FOLLOW [215] -> GOTO 70
	expression/L2 = . BOOLEAN, FOLLOW [215] -> SHIFT BOOLEAN GOTO 71
	expression/L2 = . IDENT, FOLLOW [215] -> SHIFT IDENT GOTO 72
	expression/L2 = . DQSTRING, FOLLOW [215] -> SHIFT DQSTRING GOTO 73
	expression/L2 = . SQSTRING, FOLLOW [215] -> SHIFT SQSTRING GOTO 74
	expression/L2 = . CARDINAL, FOLLOW [215] -> SHIFT CARDINAL GOTO 75
	expression/L2 = . INTEGER, FOLLOW [215] -> SHIFT INTEGER GOTO 76
	expression/L2 = . FLOAT, FOLLOW [215] -> SHIFT FLOAT GOTO 77
	expression/L2 = . "(" expression ")", FOLLOW [215] -> SHIFT '(' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [215] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [215] -> SHIFT '{' GOTO 95
	expression/L9 = . "&" expression, FOLLOW [215] -> SHIFT '&' GOTO 80
	expression/L1 = . "new" typespec ":" expression, FOLLOW [215] -> SHIFT "new" GOTO 86
	expression/L2 = . "null", FOLLOW [215] -> SHIFT "null" GOTO 87
	expression/L9 = . "+" expression, FOLLOW [215] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [215] -> SHIFT '-' GOTO 89
	expression/L9 = . "~" expression, FOLLOW [215] -> SHIFT '~' GOTO 90
	expression/L9 = . "!" expression, FOLLOW [215] -> SHIFT '!' GOTO 91
	expression/L12 = . "*" expression, FOLLOW [215] -> SHIFT '*' GOTO 92
[120]
	expression/L3 = . expression "=" expression, FOLLOW [215] -> GOTO 167
	expression/L3 = . expression "+=" expression, FOLLOW [215] -> GOTO 167
	expression/L3 = . expression "-=" expression, FOLLOW [215] -> GOTO 167
	expression/L3 = . expression "*=" expression, FOLLOW [215] -> GOTO 167
	expression/L3 = . expression "/=" expression, FOLLOW [215] -> GOTO 167
	expression/L3 = . expression "%=" expression, FOLLOW [215] -> GOTO 167
	expression/L3 = . expression "&&=" expression, FOLLOW [215] -> GOTO 167
	expression/L3 = . expression "||=" expression, FOLLOW [215] -> GOTO 167
	expression/L3 = . expression "&=" expression, FOLLOW [215] -> GOTO 167
	expression/L3 = . expression "|=" expression, FOLLOW [215] -> GOTO 167
	expression/L3 = . expression "<<=" expression, FOLLOW [215] -> GOTO 167
	expression/L3 = . expression ">>=" expression, FOLLOW [215] -> GOTO 167
	expression/L4 = . expression "||" expression, FOLLOW [215] -> GOTO 167
	expression/L5 = . expression "&&" expression, FOLLOW [215] -> GOTO 167
	expression/L6 = . expression "|" expression, FOLLOW [215] -> GOTO 167
	expression/L7 = . expression "^" expression, FOLLOW [215] -> GOTO 167
	expression/L7 = . expression "&" expression, FOLLOW [215] -> GOTO 167
	expression/L8 = . expression "==" expression, FOLLOW [215] -> GOTO 167
	expression/L8 = . expression "!=" expression, FOLLOW [215] -> GOTO 167
	expression/L8 = . expression "<=" expression, FOLLOW [215] -> GOTO 167
	expression/L8 = . expression "<" expression, FOLLOW [215] -> GOTO 167
	expression/L8 = . expression ">=" expression, FOLLOW [215] -> GOTO 167
	expression/L8 = . expression ">" expression, FOLLOW [215] -> GOTO 167
	expression/L9 = . expression "+" expression, FOLLOW [215] -> GOTO 167
	expression/L9 = . expression "-" expression, FOLLOW [215] -> GOTO 167
	expression/L10 = . expression "*" expression, FOLLOW [215] -> GOTO 167
	expression/L10 = . expression "/" expression, FOLLOW [215] -> GOTO 167
	expression/L10 = . expression "%" expression, FOLLOW [215] -> GOTO 167
	expression/L11 = . expression "<<" expression, FOLLOW [215] -> GOTO 167
	expression/L11 = . expression ">>" expression, FOLLOW [215] -> GOTO 167
	expression/L12 = . expression "." IDENT, FOLLOW [215] -> GOTO 167
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [215] -> GOTO 167
	expression/L13 = . expression "(" ")", FOLLOW [215] -> GOTO 167
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [215] -> GOTO 167
	iexpression = . expression indirection IDENT, FOLLOW [215] -> GOTO 167
	expressionlist = . expression "," expressionlist, FOLLOW [18] -> GOTO 167
	expressionlist = . expression, FOLLOW [18] -> GOTO 167
	expression/L12 = . iexpression, FOLLOW [215] -> GOTO 70
	expression/L13 = expression "[" . expressionlist "]", FOLLOW [215] -> GOTO 192
	expression/L2 = . BOOLEAN, FOLLOW [215] -> SHIFT BOOLEAN GOTO 71
	expression/L2 = . IDENT, FOLLOW [215] -> SHIFT IDENT GOTO 72
	expression/L2 = . DQSTRING, FOLLOW [215] -> SHIFT DQSTRING GOTO 73
	expression/L2 = . SQSTRING, FOLLOW [215] -> SHIFT SQSTRING GOTO 74
	expression/L2 = . CARDINAL, FOLLOW [215] -> SHIFT CARDINAL GOTO 75
	expression/L2 = . INTEGER, FOLLOW [215] -> SHIFT INTEGER GOTO 76
	expression/L2 = . FLOAT, FOLLOW [215] -> SHIFT FLOAT GOTO 77
	expression/L2 = . "(" expression ")", FOLLOW [215] -> SHIFT '(' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [215] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [215] -> SHIFT '{' GOTO 95
	expression/L9 = . "&" expression, FOLLOW [215] -> SHIFT '&' GOTO 80
	expression/L1 = . "new" typespec ":" expression, FOLLOW [215] -> SHIFT "new" GOTO 86
	expression/L2 = . "null", FOLLOW [215] -> SHIFT "null" GOTO 87
	expression/L9 = . "+" expression, FOLLOW [215] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [215] -> SHIFT '-' GOTO 89
	expression/L9 = . "~" expression, FOLLOW [215] -> SHIFT '~' GOTO 90
	expression/L9 = . "!" expression, FOLLOW [215] -> SHIFT '!' GOTO 91
	expression/L12 = . "*" expression, FOLLOW [215] -> SHIFT '*' GOTO 92
[121]
	expression/L3 = . expression "=" expression, FOLLOW [215] -> GOTO 193
	expression/L3 = . expression "+=" expression, FOLLOW [215] -> GOTO 193
	expression/L3 = expression "+=" . expression, FOLLOW [215] -> GOTO 193
	expression/L3 = . expression "-=" expression, FOLLOW [215] -> GOTO 193
	expression/L3 = . expression "*=" expression, FOLLOW [215] -> GOTO 193
	expression/L3 = . expression "/=" expression, FOLLOW [215] -> GOTO 193
	expression/L3 = . expression "%=" expression, FOLLOW [215] -> GOTO 193
	expression/L3 = . expression "&&=" expression, FOLLOW [215] -> GOTO 193
	expression/L3 = . expression "||=" expression, FOLLOW [215] -> GOTO 193
	expression/L3 = . expression "&=" expression, FOLLOW [215] -> GOTO 193
	expression/L3 = . expression "|=" expression, FOLLOW [215] -> GOTO 193
	expression/L3 = . expression "<<=" expression, FOLLOW [215] -> GOTO 193
	expression/L3 = . expression ">>=" expression, FOLLOW [215] -> GOTO 193
	expression/L4 = . expression "||" expression, FOLLOW [215] -> GOTO 193
	expression/L5 = . expression "&&" expression, FOLLOW [215] -> GOTO 193
	expression/L6 = . expression "|" expression, FOLLOW [215] -> GOTO 193
	expression/L7 = . expression "^" expression, FOLLOW [215] -> GOTO 193
	expression/L7 = . expression "&" expression, FOLLOW [215] -> GOTO 193
	expression/L8 = . expression "==" expression, FOLLOW [215] -> GOTO 193
	expression/L8 = . expression "!=" expression, FOLLOW [215] -> GOTO 193
	expression/L8 = . expression "<=" expression, FOLLOW [215] -> GOTO 193
	expression/L8 = . expression "<" expression, FOLLOW [215] -> GOTO 193
	expression/L8 = . expression ">=" expression, FOLLOW [215] -> GOTO 193
	expression/L8 = . expression ">" expression, FOLLOW [215] -> GOTO 193
	expression/L9 = . expression "+" expression, FOLLOW [215] -> GOTO 193
	expression/L9 = . expression "-" expression, FOLLOW [215] -> GOTO 193
	expression/L10 = . expression "*" expression, FOLLOW [215] -> GOTO 193
	expression/L10 = . expression "/" expression, FOLLOW [215] -> GOTO 193
	expression/L10 = . expression "%" expression, FOLLOW [215] -> GOTO 193
	expression/L11 = . expression "<<" expression, FOLLOW [215] -> GOTO 193
	expression/L11 = . expression ">>" expression, FOLLOW [215] -> GOTO 193
	expression/L12 = . expression "." IDENT, FOLLOW [215] -> GOTO 193
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [215] -> GOTO 193
	expression/L13 = . expression "(" ")", FOLLOW [215] -> GOTO 193
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [215] -> GOTO 193
	iexpression = . expression indirection IDENT, FOLLOW [215] -> GOTO 193
	expression/L12 = . iexpression, FOLLOW [215] -> GOTO 70
	expression/L2 = . BOOLEAN, FOLLOW [215] -> SHIFT BOOLEAN GOTO 71
	expression/L2 = . IDENT, FOLLOW [215] -> SHIFT IDENT GOTO 72
	expression/L2 = . DQSTRING, FOLLOW [215] -> SHIFT DQSTRING GOTO 73
	expression/L2 = . SQSTRING, FOLLOW [215] -> SHIFT SQSTRING GOTO 74
	expression/L2 = . CARDINAL, FOLLOW [215] -> SHIFT CARDINAL GOTO 75
	expression/L2 = . INTEGER, FOLLOW [215] -> SHIFT INTEGER GOTO 76
	expression/L2 = . FLOAT, FOLLOW [215] -> SHIFT FLOAT GOTO 77
	expression/L2 = . "(" expression ")", FOLLOW [215] -> SHIFT '(' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [215] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [215] -> SHIFT '{' GOTO 95
	expression/L9 = . "&" expression, FOLLOW [215] -> SHIFT '&' GOTO 80
	expression/L1 = . "new" typespec ":" expression, FOLLOW [215] -> SHIFT "new" GOTO 86
	expression/L2 = . "null", FOLLOW [215] -> SHIFT "null" GOTO 87
	expression/L9 = . "+" expression, FOLLOW [215] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [215] -> SHIFT '-' GOTO 89
	expression/L9 = . "~" expression, FOLLOW [215] -> SHIFT '~' GOTO 90
	expression/L9 = . "!" expression, FOLLOW [215] -> SHIFT '!' GOTO 91
	expression/L12 = . "*" expression, FOLLOW [215] -> SHIFT '*' GOTO 92
[122]
	expression/L3 = . expression "=" expression, FOLLOW [215] -> GOTO 194
	expression/L3 = . expression "+=" expression, FOLLOW [215] -> GOTO 194
	expression/L3 = . expression "-=" expression, FOLLOW [215] -> GOTO 194
	expression/L3 = expression "-=" . expression, FOLLOW [215] -> GOTO 194
	expression/L3 = . expression "*=" expression, FOLLOW [215] -> GOTO 194
	expression/L3 = . expression "/=" expression, FOLLOW [215] -> GOTO 194
	expression/L3 = . expression "%=" expression, FOLLOW [215] -> GOTO 194
	expression/L3 = . expression "&&=" expression, FOLLOW [215] -> GOTO 194
	expression/L3 = . expression "||=" expression, FOLLOW [215] -> GOTO 194
	expression/L3 = . expression "&=" expression, FOLLOW [215] -> GOTO 194
	expression/L3 = . expression "|=" expression, FOLLOW [215] -> GOTO 194
	expression/L3 = . expression "<<=" expression, FOLLOW [215] -> GOTO 194
	expression/L3 = . expression ">>=" expression, FOLLOW [215] -> GOTO 194
	expression/L4 = . expression "||" expression, FOLLOW [215] -> GOTO 194
	expression/L5 = . expression "&&" expression, FOLLOW [215] -> GOTO 194
	expression/L6 = . expression "|" expression, FOLLOW [215] -> GOTO 194
	expression/L7 = . expression "^" expression, FOLLOW [215] -> GOTO 194
	expression/L7 = . expression "&" expression, FOLLOW [215] -> GOTO 194
	expression/L8 = . expression "==" expression, FOLLOW [215] -> GOTO 194
	expression/L8 = . expression "!=" expression, FOLLOW [215] -> GOTO 194
	expression/L8 = . expression "<=" expression, FOLLOW [215] -> GOTO 194
	expression/L8 = . expression "<" expression, FOLLOW [215] -> GOTO 194
	expression/L8 = . expression ">=" expression, FOLLOW [215] -> GOTO 194
	expression/L8 = . expression ">" expression, FOLLOW [215] -> GOTO 194
	expression/L9 = . expression "+" expression, FOLLOW [215] -> GOTO 194
	expression/L9 = . expression "-" expression, FOLLOW [215] -> GOTO 194
	expression/L10 = . expression "*" expression, FOLLOW [215] -> GOTO 194
	expression/L10 = . expression "/" expression, FOLLOW [215] -> GOTO 194
	expression/L10 = . expression "%" expression, FOLLOW [215] -> GOTO 194
	expression/L11 = . expression "<<" expression, FOLLOW [215] -> GOTO 194
	expression/L11 = . expression ">>" expression, FOLLOW [215] -> GOTO 194
	expression/L12 = . expression "." IDENT, FOLLOW [215] -> GOTO 194
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [215] -> GOTO 194
	expression/L13 = . expression "(" ")", FOLLOW [215] -> GOTO 194
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [215] -> GOTO 194
	iexpression = . expression indirection IDENT, FOLLOW [215] -> GOTO 194
	expression/L12 = . iexpression, FOLLOW [215] -> GOTO 70
	expression/L2 = . BOOLEAN, FOLLOW [215] -> SHIFT BOOLEAN GOTO 71
	expression/L2 = . IDENT, FOLLOW [215] -> SHIFT IDENT GOTO 72
	expression/L2 = . DQSTRING, FOLLOW [215] -> SHIFT DQSTRING GOTO 73
	expression/L2 = . SQSTRING, FOLLOW [215] -> SHIFT SQSTRING GOTO 74
	expression/L2 = . CARDINAL, FOLLOW [215] -> SHIFT CARDINAL GOTO 75
	expression/L2 = . INTEGER, FOLLOW [215] -> SHIFT INTEGER GOTO 76
	expression/L2 = . FLOAT, FOLLOW [215] -> SHIFT FLOAT GOTO 77
	expression/L2 = . "(" expression ")", FOLLOW [215] -> SHIFT '(' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [215] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [215] -> SHIFT '{' GOTO 95
	expression/L9 = . "&" expression, FOLLOW [215] -> SHIFT '&' GOTO 80
	expression/L1 = . "new" typespec ":" expression, FOLLOW [215] -> SHIFT "new" GOTO 86
	expression/L2 = . "null", FOLLOW [215] -> SHIFT "null" GOTO 87
	expression/L9 = . "+" expression, FOLLOW [215] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [215] -> SHIFT '-' GOTO 89
	expression/L9 = . "~" expression, FOLLOW [215] -> SHIFT '~' GOTO 90
	expression/L9 = . "!" expression, FOLLOW [215] -> SHIFT '!' GOTO 91
	expression/L12 = . "*" expression, FOLLOW [215] -> SHIFT '*' GOTO 92
[123]
	expression/L3 = . expression "=" expression, FOLLOW [215] -> GOTO 195
	expression/L3 = . expression "+=" expression, FOLLOW [215] -> GOTO 195
	expression/L3 = . expression "-=" expression, FOLLOW [215] -> GOTO 195
	expression/L3 = . expression "*=" expression, FOLLOW [215] -> GOTO 195
	expression/L3 = expression "*=" . expression, FOLLOW [215] -> GOTO 195
	expression/L3 = . expression "/=" expression, FOLLOW [215] -> GOTO 195
	expression/L3 = . expression "%=" expression, FOLLOW [215] -> GOTO 195
	expression/L3 = . expression "&&=" expression, FOLLOW [215] -> GOTO 195
	expression/L3 = . expression "||=" expression, FOLLOW [215] -> GOTO 195
	expression/L3 = . expression "&=" expression, FOLLOW [215] -> GOTO 195
	expression/L3 = . expression "|=" expression, FOLLOW [215] -> GOTO 195
	expression/L3 = . expression "<<=" expression, FOLLOW [215] -> GOTO 195
	expression/L3 = . expression ">>=" expression, FOLLOW [215] -> GOTO 195
	expression/L4 = . expression "||" expression, FOLLOW [215] -> GOTO 195
	expression/L5 = . expression "&&" expression, FOLLOW [215] -> GOTO 195
	expression/L6 = . expression "|" expression, FOLLOW [215] -> GOTO 195
	expression/L7 = . expression "^" expression, FOLLOW [215] -> GOTO 195
	expression/L7 = . expression "&" expression, FOLLOW [215] -> GOTO 195
	expression/L8 = . expression "==" expression, FOLLOW [215] -> GOTO 195
	expression/L8 = . expression "!=" expression, FOLLOW [215] -> GOTO 195
	expression/L8 = . expression "<=" expression, FOLLOW [215] -> GOTO 195
	expression/L8 = . expression "<" expression, FOLLOW [215] -> GOTO 195
	expression/L8 = . expression ">=" expression, FOLLOW [215] -> GOTO 195
	expression/L8 = . expression ">" expression, FOLLOW [215] -> GOTO 195
	expression/L9 = . expression "+" expression, FOLLOW [215] -> GOTO 195
	expression/L9 = . expression "-" expression, FOLLOW [215] -> GOTO 195
	expression/L10 = . expression "*" expression, FOLLOW [215] -> GOTO 195
	expression/L10 = . expression "/" expression, FOLLOW [215] -> GOTO 195
	expression/L10 = . expression "%" expression, FOLLOW [215] -> GOTO 195
	expression/L11 = . expression "<<" expression, FOLLOW [215] -> GOTO 195
	expression/L11 = . expression ">>" expression, FOLLOW [215] -> GOTO 195
	expression/L12 = . expression "." IDENT, FOLLOW [215] -> GOTO 195
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [215] -> GOTO 195
	expression/L13 = . expression "(" ")", FOLLOW [215] -> GOTO 195
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [215] -> GOTO 195
	iexpression = . expression indirection IDENT, FOLLOW [215] -> GOTO 195
	expression/L12 = . iexpression, FOLLOW [215] -> GOTO 70
	expression/L2 = . BOOLEAN, FOLLOW [215] -> SHIFT BOOLEAN GOTO 71
	expression/L2 = . IDENT, FOLLOW [215] -> SHIFT IDENT GOTO 72
	expression/L2 = . DQSTRING, FOLLOW [215] -> SHIFT DQSTRING GOTO 73
	expression/L2 = . SQSTRING, FOLLOW [215] -> SHIFT SQSTRING GOTO 74
	expression/L2 = . CARDINAL, FOLLOW [215] -> SHIFT CARDINAL GOTO 75
	expression/L2 = . INTEGER, FOLLOW [215] -> SHIFT INTEGER GOTO 76
	expression/L2 = . FLOAT, FOLLOW [215] -> SHIFT FLOAT GOTO 77
	expression/L2 = . "(" expression ")", FOLLOW [215] -> SHIFT '(' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [215] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [215] -> SHIFT '{' GOTO 95
	expression/L9 = . "&" expression, FOLLOW [215] -> SHIFT '&' GOTO 80
	expression/L1 = . "new" typespec ":" expression, FOLLOW [215] -> SHIFT "new" GOTO 86
	expression/L2 = . "null", FOLLOW [215] -> SHIFT "null" GOTO 87
	expression/L9 = . "+" expression, FOLLOW [215] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [215] -> SHIFT '-' GOTO 89
	expression/L9 = . "~" expression, FOLLOW [215] -> SHIFT '~' GOTO 90
	expression/L9 = . "!" expression, FOLLOW [215] -> SHIFT '!' GOTO 91
	expression/L12 = . "*" expression, FOLLOW [215] -> SHIFT '*' GOTO 92
[124]
	expression/L3 = . expression "=" expression, FOLLOW [215] -> GOTO 196
	expression/L3 = . expression "+=" expression, FOLLOW [215] -> GOTO 196
	expression/L3 = . expression "-=" expression, FOLLOW [215] -> GOTO 196
	expression/L3 = . expression "*=" expression, FOLLOW [215] -> GOTO 196
	expression/L3 = . expression "/=" expression, FOLLOW [215] -> GOTO 196
	expression/L3 = expression "/=" . expression, FOLLOW [215] -> GOTO 196
	expression/L3 = . expression "%=" expression, FOLLOW [215] -> GOTO 196
	expression/L3 = . expression "&&=" expression, FOLLOW [215] -> GOTO 196
	expression/L3 = . expression "||=" expression, FOLLOW [215] -> GOTO 196
	expression/L3 = . expression "&=" expression, FOLLOW [215] -> GOTO 196
	expression/L3 = . expression "|=" expression, FOLLOW [215] -> GOTO 196
	expression/L3 = . expression "<<=" expression, FOLLOW [215] -> GOTO 196
	expression/L3 = . expression ">>=" expression, FOLLOW [215] -> GOTO 196
	expression/L4 = . expression "||" expression, FOLLOW [215] -> GOTO 196
	expression/L5 = . expression "&&" expression, FOLLOW [215] -> GOTO 196
	expression/L6 = . expression "|" expression, FOLLOW [215] -> GOTO 196
	expression/L7 = . expression "^" expression, FOLLOW [215] -> GOTO 196
	expression/L7 = . expression "&" expression, FOLLOW [215] -> GOTO 196
	expression/L8 = . expression "==" expression, FOLLOW [215] -> GOTO 196
	expression/L8 = . expression "!=" expression, FOLLOW [215] -> GOTO 196
	expression/L8 = . expression "<=" expression, FOLLOW [215] -> GOTO 196
	expression/L8 = . expression "<" expression, FOLLOW [215] -> GOTO 196
	expression/L8 = . expression ">=" expression, FOLLOW [215] -> GOTO 196
	expression/L8 = . expression ">" expression, FOLLOW [215] -> GOTO 196
	expression/L9 = . expression "+" expression, FOLLOW [215] -> GOTO 196
	expression/L9 = . expression "-" expression, FOLLOW [215] -> GOTO 196
	expression/L10 = . expression "*" expression, FOLLOW [215] -> GOTO 196
	expression/L10 = . expression "/" expression, FOLLOW [215] -> GOTO 196
	expression/L10 = . expression "%" expression, FOLLOW [215] -> GOTO 196
	expression/L11 = . expression "<<" expression, FOLLOW [215] -> GOTO 196
	expression/L11 = . expression ">>" expression, FOLLOW [215] -> GOTO 196
	expression/L12 = . expression "." IDENT, FOLLOW [215] -> GOTO 196
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [215] -> GOTO 196
	expression/L13 = . expression "(" ")", FOLLOW [215] -> GOTO 196
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [215] -> GOTO 196
	iexpression = . expression indirection IDENT, FOLLOW [215] -> GOTO 196
	expression/L12 = . iexpression, FOLLOW [215] -> GOTO 70
	expression/L2 = . BOOLEAN, FOLLOW [215] -> SHIFT BOOLEAN GOTO 71
	expression/L2 = . IDENT, FOLLOW [215] -> SHIFT IDENT GOTO 72
	expression/L2 = . DQSTRING, FOLLOW [215] -> SHIFT DQSTRING GOTO 73
	expression/L2 = . SQSTRING, FOLLOW [215] -> SHIFT SQSTRING GOTO 74
	expression/L2 = . CARDINAL, FOLLOW [215] -> SHIFT CARDINAL GOTO 75
	expression/L2 = . INTEGER, FOLLOW [215] -> SHIFT INTEGER GOTO 76
	expression/L2 = . FLOAT, FOLLOW [215] -> SHIFT FLOAT GOTO 77
	expression/L2 = . "(" expression ")", FOLLOW [215] -> SHIFT '(' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [215] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [215] -> SHIFT '{' GOTO 95
	expression/L9 = . "&" expression, FOLLOW [215] -> SHIFT '&' GOTO 80
	expression/L1 = . "new" typespec ":" expression, FOLLOW [215] -> SHIFT "new" GOTO 86
	expression/L2 = . "null", FOLLOW [215] -> SHIFT "null" GOTO 87
	expression/L9 = . "+" expression, FOLLOW [215] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [215] -> SHIFT '-' GOTO 89
	expression/L9 = . "~" expression, FOLLOW [215] -> SHIFT '~' GOTO 90
	expression/L9 = . "!" expression, FOLLOW [215] -> SHIFT '!' GOTO 91
	expression/L12 = . "*" expression, FOLLOW [215] -> SHIFT '*' GOTO 92
[125]
	expression/L3 = . expression "=" expression, FOLLOW [215] -> GOTO 197
	expression/L3 = . expression "+=" expression, FOLLOW [215] -> GOTO 197
	expression/L3 = . expression "-=" expression, FOLLOW [215] -> GOTO 197
	expression/L3 = . expression "*=" expression, FOLLOW [215] -> GOTO 197
	expression/L3 = . expression "/=" expression, FOLLOW [215] -> GOTO 197
	expression/L3 = . expression "%=" expression, FOLLOW [215] -> GOTO 197
	expression/L3 = expression "%=" . expression, FOLLOW [215] -> GOTO 197
	expression/L3 = . expression "&&=" expression, FOLLOW [215] -> GOTO 197
	expression/L3 = . expression "||=" expression, FOLLOW [215] -> GOTO 197
	expression/L3 = . expression "&=" expression, FOLLOW [215] -> GOTO 197
	expression/L3 = . expression "|=" expression, FOLLOW [215] -> GOTO 197
	expression/L3 = . expression "<<=" expression, FOLLOW [215] -> GOTO 197
	expression/L3 = . expression ">>=" expression, FOLLOW [215] -> GOTO 197
	expression/L4 = . expression "||" expression, FOLLOW [215] -> GOTO 197
	expression/L5 = . expression "&&" expression, FOLLOW [215] -> GOTO 197
	expression/L6 = . expression "|" expression, FOLLOW [215] -> GOTO 197
	expression/L7 = . expression "^" expression, FOLLOW [215] -> GOTO 197
	expression/L7 = . expression "&" expression, FOLLOW [215] -> GOTO 197
	expression/L8 = . expression "==" expression, FOLLOW [215] -> GOTO 197
	expression/L8 = . expression "!=" expression, FOLLOW [215] -> GOTO 197
	expression/L8 = . expression "<=" expression, FOLLOW [215] -> GOTO 197
	expression/L8 = . expression "<" expression, FOLLOW [215] -> GOTO 197
	expression/L8 = . expression ">=" expression, FOLLOW [215] -> GOTO 197
	expression/L8 = . expression ">" expression, FOLLOW [215] -> GOTO 197
	expression/L9 = . expression "+" expression, FOLLOW [215] -> GOTO 197
	expression/L9 = . expression "-" expression, FOLLOW [215] -> GOTO 197
	expression/L10 = . expression "*" expression, FOLLOW [215] -> GOTO 197
	expression/L10 = . expression "/" expression, FOLLOW [215] -> GOTO 197
	expression/L10 = . expression "%" expression, FOLLOW [215] -> GOTO 197
	expression/L11 = . expression "<<" expression, FOLLOW [215] -> GOTO 197
	expression/L11 = . expression ">>" expression, FOLLOW [215] -> GOTO 197
	expression/L12 = . expression "." IDENT, FOLLOW [215] -> GOTO 197
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [215] -> GOTO 197
	expression/L13 = . expression "(" ")", FOLLOW [215] -> GOTO 197
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [215] -> GOTO 197
	iexpression = . expression indirection IDENT, FOLLOW [215] -> GOTO 197
	expression/L12 = . iexpression, FOLLOW [215] -> GOTO 70
	expression/L2 = . BOOLEAN, FOLLOW [215] -> SHIFT BOOLEAN GOTO 71
	expression/L2 = . IDENT, FOLLOW [215] -> SHIFT IDENT GOTO 72
	expression/L2 = . DQSTRING, FOLLOW [215] -> SHIFT DQSTRING GOTO 73
	expression/L2 = . SQSTRING, FOLLOW [215] -> SHIFT SQSTRING GOTO 74
	expression/L2 = . CARDINAL, FOLLOW [215] -> SHIFT CARDINAL GOTO 75
	expression/L2 = . INTEGER, FOLLOW [215] -> SHIFT INTEGER GOTO 76
	expression/L2 = . FLOAT, FOLLOW [215] -> SHIFT FLOAT GOTO 77
	expression/L2 = . "(" expression ")", FOLLOW [215] -> SHIFT '(' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [215] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [215] -> SHIFT '{' GOTO 95
	expression/L9 = . "&" expression, FOLLOW [215] -> SHIFT '&' GOTO 80
	expression/L1 = . "new" typespec ":" expression, FOLLOW [215] -> SHIFT "new" GOTO 86
	expression/L2 = . "null", FOLLOW [215] -> SHIFT "null" GOTO 87
	expression/L9 = . "+" expression, FOLLOW [215] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [215] -> SHIFT '-' GOTO 89
	expression/L9 = . "~" expression, FOLLOW [215] -> SHIFT '~' GOTO 90
	expression/L9 = . "!" expression, FOLLOW [215] -> SHIFT '!' GOTO 91
	expression/L12 = . "*" expression, FOLLOW [215] -> SHIFT '*' GOTO 92
[126]
	expression/L3 = . expression "=" expression, FOLLOW [215] -> GOTO 198
	expression/L3 = . expression "+=" expression, FOLLOW [215] -> GOTO 198
	expression/L3 = . expression "-=" expression, FOLLOW [215] -> GOTO 198
	expression/L3 = . expression "*=" expression, FOLLOW [215] -> GOTO 198
	expression/L3 = . expression "/=" expression, FOLLOW [215] -> GOTO 198
	expression/L3 = . expression "%=" expression, FOLLOW [215] -> GOTO 198
	expression/L3 = . expression "&&=" expression, FOLLOW [215] -> GOTO 198
	expression/L3 = expression "&&=" . expression, FOLLOW [215] -> GOTO 198
	expression/L3 = . expression "||=" expression, FOLLOW [215] -> GOTO 198
	expression/L3 = . expression "&=" expression, FOLLOW [215] -> GOTO 198
	expression/L3 = . expression "|=" expression, FOLLOW [215] -> GOTO 198
	expression/L3 = . expression "<<=" expression, FOLLOW [215] -> GOTO 198
	expression/L3 = . expression ">>=" expression, FOLLOW [215] -> GOTO 198
	expression/L4 = . expression "||" expression, FOLLOW [215] -> GOTO 198
	expression/L5 = . expression "&&" expression, FOLLOW [215] -> GOTO 198
	expression/L6 = . expression "|" expression, FOLLOW [215] -> GOTO 198
	expression/L7 = . expression "^" expression, FOLLOW [215] -> GOTO 198
	expression/L7 = . expression "&" expression, FOLLOW [215] -> GOTO 198
	expression/L8 = . expression "==" expression, FOLLOW [215] -> GOTO 198
	expression/L8 = . expression "!=" expression, FOLLOW [215] -> GOTO 198
	expression/L8 = . expression "<=" expression, FOLLOW [215] -> GOTO 198
	expression/L8 = . expression "<" expression, FOLLOW [215] -> GOTO 198
	expression/L8 = . expression ">=" expression, FOLLOW [215] -> GOTO 198
	expression/L8 = . expression ">" expression, FOLLOW [215] -> GOTO 198
	expression/L9 = . expression "+" expression, FOLLOW [215] -> GOTO 198
	expression/L9 = . expression "-" expression, FOLLOW [215] -> GOTO 198
	expression/L10 = . expression "*" expression, FOLLOW [215] -> GOTO 198
	expression/L10 = . expression "/" expression, FOLLOW [215] -> GOTO 198
	expression/L10 = . expression "%" expression, FOLLOW [215] -> GOTO 198
	expression/L11 = . expression "<<" expression, FOLLOW [215] -> GOTO 198
	expression/L11 = . expression ">>" expression, FOLLOW [215] -> GOTO 198
	expression/L12 = . expression "." IDENT, FOLLOW [215] -> GOTO 198
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [215] -> GOTO 198
	expression/L13 = . expression "(" ")", FOLLOW [215] -> GOTO 198
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [215] -> GOTO 198
	iexpression = . expression indirection IDENT, FOLLOW [215] -> GOTO 198
	expression/L12 = . iexpression, FOLLOW [215] -> GOTO 70
	expression/L2 = . BOOLEAN, FOLLOW [215] -> SHIFT BOOLEAN GOTO 71
	expression/L2 = . IDENT, FOLLOW [215] -> SHIFT IDENT GOTO 72
	expression/L2 = . DQSTRING, FOLLOW [215] -> SHIFT DQSTRING GOTO 73
	expression/L2 = . SQSTRING, FOLLOW [215] -> SHIFT SQSTRING GOTO 74
	expression/L2 = . CARDINAL, FOLLOW [215] -> SHIFT CARDINAL GOTO 75
	expression/L2 = . INTEGER, FOLLOW [215] -> SHIFT INTEGER GOTO 76
	expression/L2 = . FLOAT, FOLLOW [215] -> SHIFT FLOAT GOTO 77
	expression/L2 = . "(" expression ")", FOLLOW [215] -> SHIFT '(' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [215] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [215] -> SHIFT '{' GOTO 95
	expression/L9 = . "&" expression, FOLLOW [215] -> SHIFT '&' GOTO 80
	expression/L1 = . "new" typespec ":" expression, FOLLOW [215] -> SHIFT "new" GOTO 86
	expression/L2 = . "null", FOLLOW [215] -> SHIFT "null" GOTO 87
	expression/L9 = . "+" expression, FOLLOW [215] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [215] -> SHIFT '-' GOTO 89
	expression/L9 = . "~" expression, FOLLOW [215] -> SHIFT '~' GOTO 90
	expression/L9 = . "!" expression, FOLLOW [215] -> SHIFT '!' GOTO 91
	expression/L12 = . "*" expression, FOLLOW [215] -> SHIFT '*' GOTO 92
[127]
	expression/L3 = . expression "=" expression, FOLLOW [215] -> GOTO 199
	expression/L3 = . expression "+=" expression, FOLLOW [215] -> GOTO 199
	expression/L3 = . expression "-=" expression, FOLLOW [215] -> GOTO 199
	expression/L3 = . expression "*=" expression, FOLLOW [215] -> GOTO 199
	expression/L3 = . expression "/=" expression, FOLLOW [215] -> GOTO 199
	expression/L3 = . expression "%=" expression, FOLLOW [215] -> GOTO 199
	expression/L3 = . expression "&&=" expression, FOLLOW [215] -> GOTO 199
	expression/L3 = . expression "||=" expression, FOLLOW [215] -> GOTO 199
	expression/L3 = expression "||=" . expression, FOLLOW [215] -> GOTO 199
	expression/L3 = . expression "&=" expression, FOLLOW [215] -> GOTO 199
	expression/L3 = . expression "|=" expression, FOLLOW [215] -> GOTO 199
	expression/L3 = . expression "<<=" expression, FOLLOW [215] -> GOTO 199
	expression/L3 = . expression ">>=" expression, FOLLOW [215] -> GOTO 199
	expression/L4 = . expression "||" expression, FOLLOW [215] -> GOTO 199
	expression/L5 = . expression "&&" expression, FOLLOW [215] -> GOTO 199
	expression/L6 = . expression "|" expression, FOLLOW [215] -> GOTO 199
	expression/L7 = . expression "^" expression, FOLLOW [215] -> GOTO 199
	expression/L7 = . expression "&" expression, FOLLOW [215] -> GOTO 199
	expression/L8 = . expression "==" expression, FOLLOW [215] -> GOTO 199
	expression/L8 = . expression "!=" expression, FOLLOW [215] -> GOTO 199
	expression/L8 = . expression "<=" expression, FOLLOW [215] -> GOTO 199
	expression/L8 = . expression "<" expression, FOLLOW [215] -> GOTO 199
	expression/L8 = . expression ">=" expression, FOLLOW [215] -> GOTO 199
	expression/L8 = . expression ">" expression, FOLLOW [215] -> GOTO 199
	expression/L9 = . expression "+" expression, FOLLOW [215] -> GOTO 199
	expression/L9 = . expression "-" expression, FOLLOW [215] -> GOTO 199
	expression/L10 = . expression "*" expression, FOLLOW [215] -> GOTO 199
	expression/L10 = . expression "/" expression, FOLLOW [215] -> GOTO 199
	expression/L10 = . expression "%" expression, FOLLOW [215] -> GOTO 199
	expression/L11 = . expression "<<" expression, FOLLOW [215] -> GOTO 199
	expression/L11 = . expression ">>" expression, FOLLOW [215] -> GOTO 199
	expression/L12 = . expression "." IDENT, FOLLOW [215] -> GOTO 199
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [215] -> GOTO 199
	expression/L13 = . expression "(" ")", FOLLOW [215] -> GOTO 199
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [215] -> GOTO 199
	iexpression = . expression indirection IDENT, FOLLOW [215] -> GOTO 199
	expression/L12 = . iexpression, FOLLOW [215] -> GOTO 70
	expression/L2 = . BOOLEAN, FOLLOW [215] -> SHIFT BOOLEAN GOTO 71
	expression/L2 = . IDENT, FOLLOW [215] -> SHIFT IDENT GOTO 72
	expression/L2 = . DQSTRING, FOLLOW [215] -> SHIFT DQSTRING GOTO 73
	expression/L2 = . SQSTRING, FOLLOW [215] -> SHIFT SQSTRING GOTO 74
	expression/L2 = . CARDINAL, FOLLOW [215] -> SHIFT CARDINAL GOTO 75
	expression/L2 = . INTEGER, FOLLOW [215] -> SHIFT INTEGER GOTO 76
	expression/L2 = . FLOAT, FOLLOW [215] -> SHIFT FLOAT GOTO 77
	expression/L2 = . "(" expression ")", FOLLOW [215] -> SHIFT '(' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [215] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [215] -> SHIFT '{' GOTO 95
	expression/L9 = . "&" expression, FOLLOW [215] -> SHIFT '&' GOTO 80
	expression/L1 = . "new" typespec ":" expression, FOLLOW [215] -> SHIFT "new" GOTO 86
	expression/L2 = . "null", FOLLOW [215] -> SHIFT "null" GOTO 87
	expression/L9 = . "+" expression, FOLLOW [215] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [215] -> SHIFT '-' GOTO 89
	expression/L9 = . "~" expression, FOLLOW [215] -> SHIFT '~' GOTO 90
	expression/L9 = . "!" expression, FOLLOW [215] -> SHIFT '!' GOTO 91
	expression/L12 = . "*" expression, FOLLOW [215] -> SHIFT '*' GOTO 92
[128]
	expression/L3 = . expression "=" expression, FOLLOW [215] -> GOTO 200
	expression/L3 = . expression "+=" expression, FOLLOW [215] -> GOTO 200
	expression/L3 = . expression "-=" expression, FOLLOW [215] -> GOTO 200
	expression/L3 = . expression "*=" expression, FOLLOW [215] -> GOTO 200
	expression/L3 = . expression "/=" expression, FOLLOW [215] -> GOTO 200
	expression/L3 = . expression "%=" expression, FOLLOW [215] -> GOTO 200
	expression/L3 = . expression "&&=" expression, FOLLOW [215] -> GOTO 200
	expression/L3 = . expression "||=" expression, FOLLOW [215] -> GOTO 200
	expression/L3 = . expression "&=" expression, FOLLOW [215] -> GOTO 200
	expression/L3 = expression "&=" . expression, FOLLOW [215] -> GOTO 200
	expression/L3 = . expression "|=" expression, FOLLOW [215] -> GOTO 200
	expression/L3 = . expression "<<=" expression, FOLLOW [215] -> GOTO 200
	expression/L3 = . expression ">>=" expression, FOLLOW [215] -> GOTO 200
	expression/L4 = . expression "||" expression, FOLLOW [215] -> GOTO 200
	expression/L5 = . expression "&&" expression, FOLLOW [215] -> GOTO 200
	expression/L6 = . expression "|" expression, FOLLOW [215] -> GOTO 200
	expression/L7 = . expression "^" expression, FOLLOW [215] -> GOTO 200
	expression/L7 = . expression "&" expression, FOLLOW [215] -> GOTO 200
	expression/L8 = . expression "==" expression, FOLLOW [215] -> GOTO 200
	expression/L8 = . expression "!=" expression, FOLLOW [215] -> GOTO 200
	expression/L8 = . expression "<=" expression, FOLLOW [215] -> GOTO 200
	expression/L8 = . expression "<" expression, FOLLOW [215] -> GOTO 200
	expression/L8 = . expression ">=" expression, FOLLOW [215] -> GOTO 200
	expression/L8 = . expression ">" expression, FOLLOW [215] -> GOTO 200
	expression/L9 = . expression "+" expression, FOLLOW [215] -> GOTO 200
	expression/L9 = . expression "-" expression, FOLLOW [215] -> GOTO 200
	expression/L10 = . expression "*" expression, FOLLOW [215] -> GOTO 200
	expression/L10 = . expression "/" expression, FOLLOW [215] -> GOTO 200
	expression/L10 = . expression "%" expression, FOLLOW [215] -> GOTO 200
	expression/L11 = . expression "<<" expression, FOLLOW [215] -> GOTO 200
	expression/L11 = . expression ">>" expression, FOLLOW [215] -> GOTO 200
	expression/L12 = . expression "." IDENT, FOLLOW [215] -> GOTO 200
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [215] -> GOTO 200
	expression/L13 = . expression "(" ")", FOLLOW [215] -> GOTO 200
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [215] -> GOTO 200
	iexpression = . expression indirection IDENT, FOLLOW [215] -> GOTO 200
	expression/L12 = . iexpression, FOLLOW [215] -> GOTO 70
	expression/L2 = . BOOLEAN, FOLLOW [215] -> SHIFT BOOLEAN GOTO 71
	expression/L2 = . IDENT, FOLLOW [215] -> SHIFT IDENT GOTO 72
	expression/L2 = . DQSTRING, FOLLOW [215] -> SHIFT DQSTRING GOTO 73
	expression/L2 = . SQSTRING, FOLLOW [215] -> SHIFT SQSTRING GOTO 74
	expression/L2 = . CARDINAL, FOLLOW [215] -> SHIFT CARDINAL GOTO 75
	expression/L2 = . INTEGER, FOLLOW [215] -> SHIFT INTEGER GOTO 76
	expression/L2 = . FLOAT, FOLLOW [215] -> SHIFT FLOAT GOTO 77
	expression/L2 = . "(" expression ")", FOLLOW [215] -> SHIFT '(' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [215] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [215] -> SHIFT '{' GOTO 95
	expression/L9 = . "&" expression, FOLLOW [215] -> SHIFT '&' GOTO 80
	expression/L1 = . "new" typespec ":" expression, FOLLOW [215] -> SHIFT "new" GOTO 86
	expression/L2 = . "null", FOLLOW [215] -> SHIFT "null" GOTO 87
	expression/L9 = . "+" expression, FOLLOW [215] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [215] -> SHIFT '-' GOTO 89
	expression/L9 = . "~" expression, FOLLOW [215] -> SHIFT '~' GOTO 90
	expression/L9 = . "!" expression, FOLLOW [215] -> SHIFT '!' GOTO 91
	expression/L12 = . "*" expression, FOLLOW [215] -> SHIFT '*' GOTO 92
[129]
	expression/L3 = . expression "=" expression, FOLLOW [215] -> GOTO 201
	expression/L3 = . expression "+=" expression, FOLLOW [215] -> GOTO 201
	expression/L3 = . expression "-=" expression, FOLLOW [215] -> GOTO 201
	expression/L3 = . expression "*=" expression, FOLLOW [215] -> GOTO 201
	expression/L3 = . expression "/=" expression, FOLLOW [215] -> GOTO 201
	expression/L3 = . expression "%=" expression, FOLLOW [215] -> GOTO 201
	expression/L3 = . expression "&&=" expression, FOLLOW [215] -> GOTO 201
	expression/L3 = . expression "||=" expression, FOLLOW [215] -> GOTO 201
	expression/L3 = . expression "&=" expression, FOLLOW [215] -> GOTO 201
	expression/L3 = . expression "|=" expression, FOLLOW [215] -> GOTO 201
	expression/L3 = expression "|=" . expression, FOLLOW [215] -> GOTO 201
	expression/L3 = . expression "<<=" expression, FOLLOW [215] -> GOTO 201
	expression/L3 = . expression ">>=" expression, FOLLOW [215] -> GOTO 201
	expression/L4 = . expression "||" expression, FOLLOW [215] -> GOTO 201
	expression/L5 = . expression "&&" expression, FOLLOW [215] -> GOTO 201
	expression/L6 = . expression "|" expression, FOLLOW [215] -> GOTO 201
	expression/L7 = . expression "^" expression, FOLLOW [215] -> GOTO 201
	expression/L7 = . expression "&" expression, FOLLOW [215] -> GOTO 201
	expression/L8 = . expression "==" expression, FOLLOW [215] -> GOTO 201
	expression/L8 = . expression "!=" expression, FOLLOW [215] -> GOTO 201
	expression/L8 = . expression "<=" expression, FOLLOW [215] -> GOTO 201
	expression/L8 = . expression "<" expression, FOLLOW [215] -> GOTO 201
	expression/L8 = . expression ">=" expression, FOLLOW [215] -> GOTO 201
	expression/L8 = . expression ">" expression, FOLLOW [215] -> GOTO 201
	expression/L9 = . expression "+" expression, FOLLOW [215] -> GOTO 201
	expression/L9 = . expression "-" expression, FOLLOW [215] -> GOTO 201
	expression/L10 = . expression "*" expression, FOLLOW [215] -> GOTO 201
	expression/L10 = . expression "/" expression, FOLLOW [215] -> GOTO 201
	expression/L10 = . expression "%" expression, FOLLOW [215] -> GOTO 201
	expression/L11 = . expression "<<" expression, FOLLOW [215] -> GOTO 201
	expression/L11 = . expression ">>" expression, FOLLOW [215] -> GOTO 201
	expression/L12 = . expression "." IDENT, FOLLOW [215] -> GOTO 201
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [215] -> GOTO 201
	expression/L13 = . expression "(" ")", FOLLOW [215] -> GOTO 201
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [215] -> GOTO 201
	iexpression = . expression indirection IDENT, FOLLOW [215] -> GOTO 201
	expression/L12 = . iexpression, FOLLOW [215] -> GOTO 70
	expression/L2 = . BOOLEAN, FOLLOW [215] -> SHIFT BOOLEAN GOTO 71
	expression/L2 = . IDENT, FOLLOW [215] -> SHIFT IDENT GOTO 72
	expression/L2 = . DQSTRING, FOLLOW [215] -> SHIFT DQSTRING GOTO 73
	expression/L2 = . SQSTRING, FOLLOW [215] -> SHIFT SQSTRING GOTO 74
	expression/L2 = . CARDINAL, FOLLOW [215] -> SHIFT CARDINAL GOTO 75
	expression/L2 = . INTEGER, FOLLOW [215] -> SHIFT INTEGER GOTO 76
	expression/L2 = . FLOAT, FOLLOW [215] -> SHIFT FLOAT GOTO 77
	expression/L2 = . "(" expression ")", FOLLOW [215] -> SHIFT '(' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [215] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [215] -> SHIFT '{' GOTO 95
	expression/L9 = . "&" expression, FOLLOW [215] -> SHIFT '&' GOTO 80
	expression/L1 = . "new" typespec ":" expression, FOLLOW [215] -> SHIFT "new" GOTO 86
	expression/L2 = . "null", FOLLOW [215] -> SHIFT "null" GOTO 87
	expression/L9 = . "+" expression, FOLLOW [215] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [215] -> SHIFT '-' GOTO 89
	expression/L9 = . "~" expression, FOLLOW [215] -> SHIFT '~' GOTO 90
	expression/L9 = . "!" expression, FOLLOW [215] -> SHIFT '!' GOTO 91
	expression/L12 = . "*" expression, FOLLOW [215] -> SHIFT '*' GOTO 92
[130]
	expression/L3 = . expression "=" expression, FOLLOW [215] -> GOTO 202
	expression/L3 = . expression "+=" expression, FOLLOW [215] -> GOTO 202
	expression/L3 = . expression "-=" expression, FOLLOW [215] -> GOTO 202
	expression/L3 = . expression "*=" expression, FOLLOW [215] -> GOTO 202
	expression/L3 = . expression "/=" expression, FOLLOW [215] -> GOTO 202
	expression/L3 = . expression "%=" expression, FOLLOW [215] -> GOTO 202
	expression/L3 = . expression "&&=" expression, FOLLOW [215] -> GOTO 202
	expression/L3 = . expression "||=" expression, FOLLOW [215] -> GOTO 202
	expression/L3 = . expression "&=" expression, FOLLOW [215] -> GOTO 202
	expression/L3 = . expression "|=" expression, FOLLOW [215] -> GOTO 202
	expression/L3 = . expression "<<=" expression, FOLLOW [215] -> GOTO 202
	expression/L3 = expression "<<=" . expression, FOLLOW [215] -> GOTO 202
	expression/L3 = . expression ">>=" expression, FOLLOW [215] -> GOTO 202
	expression/L4 = . expression "||" expression, FOLLOW [215] -> GOTO 202
	expression/L5 = . expression "&&" expression, FOLLOW [215] -> GOTO 202
	expression/L6 = . expression "|" expression, FOLLOW [215] -> GOTO 202
	expression/L7 = . expression "^" expression, FOLLOW [215] -> GOTO 202
	expression/L7 = . expression "&" expression, FOLLOW [215] -> GOTO 202
	expression/L8 = . expression "==" expression, FOLLOW [215] -> GOTO 202
	expression/L8 = . expression "!=" expression, FOLLOW [215] -> GOTO 202
	expression/L8 = . expression "<=" expression, FOLLOW [215] -> GOTO 202
	expression/L8 = . expression "<" expression, FOLLOW [215] -> GOTO 202
	expression/L8 = . expression ">=" expression, FOLLOW [215] -> GOTO 202
	expression/L8 = . expression ">" expression, FOLLOW [215] -> GOTO 202
	expression/L9 = . expression "+" expression, FOLLOW [215] -> GOTO 202
	expression/L9 = . expression "-" expression, FOLLOW [215] -> GOTO 202
	expression/L10 = . expression "*" expression, FOLLOW [215] -> GOTO 202
	expression/L10 = . expression "/" expression, FOLLOW [215] -> GOTO 202
	expression/L10 = . expression "%" expression, FOLLOW [215] -> GOTO 202
	expression/L11 = . expression "<<" expression, FOLLOW [215] -> GOTO 202
	expression/L11 = . expression ">>" expression, FOLLOW [215] -> GOTO 202
	expression/L12 = . expression "." IDENT, FOLLOW [215] -> GOTO 202
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [215] -> GOTO 202
	expression/L13 = . expression "(" ")", FOLLOW [215] -> GOTO 202
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [215] -> GOTO 202
	iexpression = . expression indirection IDENT, FOLLOW [215] -> GOTO 202
	expression/L12 = . iexpression, FOLLOW [215] -> GOTO 70
	expression/L2 = . BOOLEAN, FOLLOW [215] -> SHIFT BOOLEAN GOTO 71
	expression/L2 = . IDENT, FOLLOW [215] -> SHIFT IDENT GOTO 72
	expression/L2 = . DQSTRING, FOLLOW [215] -> SHIFT DQSTRING GOTO 73
	expression/L2 = . SQSTRING, FOLLOW [215] -> SHIFT SQSTRING GOTO 74
	expression/L2 = . CARDINAL, FOLLOW [215] -> SHIFT CARDINAL GOTO 75
	expression/L2 = . INTEGER, FOLLOW [215] -> SHIFT INTEGER GOTO 76
	expression/L2 = . FLOAT, FOLLOW [215] -> SHIFT FLOAT GOTO 77
	expression/L2 = . "(" expression ")", FOLLOW [215] -> SHIFT '(' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [215] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [215] -> SHIFT '{' GOTO 95
	expression/L9 = . "&" expression, FOLLOW [215] -> SHIFT '&' GOTO 80
	expression/L1 = . "new" typespec ":" expression, FOLLOW [215] -> SHIFT "new" GOTO 86
	expression/L2 = . "null", FOLLOW [215] -> SHIFT "null" GOTO 87
	expression/L9 = . "+" expression, FOLLOW [215] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [215] -> SHIFT '-' GOTO 89
	expression/L9 = . "~" expression, FOLLOW [215] -> SHIFT '~' GOTO 90
	expression/L9 = . "!" expression, FOLLOW [215] -> SHIFT '!' GOTO 91
	expression/L12 = . "*" expression, FOLLOW [215] -> SHIFT '*' GOTO 92
[131]
	expression/L3 = . expression "=" expression, FOLLOW [215] -> GOTO 203
	expression/L3 = . expression "+=" expression, FOLLOW [215] -> GOTO 203
	expression/L3 = . expression "-=" expression, FOLLOW [215] -> GOTO 203
	expression/L3 = . expression "*=" expression, FOLLOW [215] -> GOTO 203
	expression/L3 = . expression "/=" expression, FOLLOW [215] -> GOTO 203
	expression/L3 = . expression "%=" expression, FOLLOW [215] -> GOTO 203
	expression/L3 = . expression "&&=" expression, FOLLOW [215] -> GOTO 203
	expression/L3 = . expression "||=" expression, FOLLOW [215] -> GOTO 203
	expression/L3 = . expression "&=" expression, FOLLOW [215] -> GOTO 203
	expression/L3 = . expression "|=" expression, FOLLOW [215] -> GOTO 203
	expression/L3 = . expression "<<=" expression, FOLLOW [215] -> GOTO 203
	expression/L3 = . expression ">>=" expression, FOLLOW [215] -> GOTO 203
	expression/L3 = expression ">>=" . expression, FOLLOW [215] -> GOTO 203
	expression/L4 = . expression "||" expression, FOLLOW [215] -> GOTO 203
	expression/L5 = . expression "&&" expression, FOLLOW [215] -> GOTO 203
	expression/L6 = . expression "|" expression, FOLLOW [215] -> GOTO 203
	expression/L7 = . expression "^" expression, FOLLOW [215] -> GOTO 203
	expression/L7 = . expression "&" expression, FOLLOW [215] -> GOTO 203
	expression/L8 = . expression "==" expression, FOLLOW [215] -> GOTO 203
	expression/L8 = . expression "!=" expression, FOLLOW [215] -> GOTO 203
	expression/L8 = . expression "<=" expression, FOLLOW [215] -> GOTO 203
	expression/L8 = . expression "<" expression, FOLLOW [215] -> GOTO 203
	expression/L8 = . expression ">=" expression, FOLLOW [215] -> GOTO 203
	expression/L8 = . expression ">" expression, FOLLOW [215] -> GOTO 203
	expression/L9 = . expression "+" expression, FOLLOW [215] -> GOTO 203
	expression/L9 = . expression "-" expression, FOLLOW [215] -> GOTO 203
	expression/L10 = . expression "*" expression, FOLLOW [215] -> GOTO 203
	expression/L10 = . expression "/" expression, FOLLOW [215] -> GOTO 203
	expression/L10 = . expression "%" expression, FOLLOW [215] -> GOTO 203
	expression/L11 = . expression "<<" expression, FOLLOW [215] -> GOTO 203
	expression/L11 = . expression ">>" expression, FOLLOW [215] -> GOTO 203
	expression/L12 = . expression "." IDENT, FOLLOW [215] -> GOTO 203
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [215] -> GOTO 203
	expression/L13 = . expression "(" ")", FOLLOW [215] -> GOTO 203
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [215] -> GOTO 203
	iexpression = . expression indirection IDENT, FOLLOW [215] -> GOTO 203
	expression/L12 = . iexpression, FOLLOW [215] -> GOTO 70
	expression/L2 = . BOOLEAN, FOLLOW [215] -> SHIFT BOOLEAN GOTO 71
	expression/L2 = . IDENT, FOLLOW [215] -> SHIFT IDENT GOTO 72
	expression/L2 = . DQSTRING, FOLLOW [215] -> SHIFT DQSTRING GOTO 73
	expression/L2 = . SQSTRING, FOLLOW [215] -> SHIFT SQSTRING GOTO 74
	expression/L2 = . CARDINAL, FOLLOW [215] -> SHIFT CARDINAL GOTO 75
	expression/L2 = . INTEGER, FOLLOW [215] -> SHIFT INTEGER GOTO 76
	expression/L2 = . FLOAT, FOLLOW [215] -> SHIFT FLOAT GOTO 77
	expression/L2 = . "(" expression ")", FOLLOW [215] -> SHIFT '(' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [215] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [215] -> SHIFT '{' GOTO 95
	expression/L9 = . "&" expression, FOLLOW [215] -> SHIFT '&' GOTO 80
	expression/L1 = . "new" typespec ":" expression, FOLLOW [215] -> SHIFT "new" GOTO 86
	expression/L2 = . "null", FOLLOW [215] -> SHIFT "null" GOTO 87
	expression/L9 = . "+" expression, FOLLOW [215] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [215] -> SHIFT '-' GOTO 89
	expression/L9 = . "~" expression, FOLLOW [215] -> SHIFT '~' GOTO 90
	expression/L9 = . "!" expression, FOLLOW [215] -> SHIFT '!' GOTO 91
	expression/L12 = . "*" expression, FOLLOW [215] -> SHIFT '*' GOTO 92
[132]
	expression/L3 = . expression "=" expression, FOLLOW [215] -> GOTO 204
	expression/L3 = . expression "+=" expression, FOLLOW [215] -> GOTO 204
	expression/L3 = . expression "-=" expression, FOLLOW [215] -> GOTO 204
	expression/L3 = . expression "*=" expression, FOLLOW [215] -> GOTO 204
	expression/L3 = . expression "/=" expression, FOLLOW [215] -> GOTO 204
	expression/L3 = . expression "%=" expression, FOLLOW [215] -> GOTO 204
	expression/L3 = . expression "&&=" expression, FOLLOW [215] -> GOTO 204
	expression/L3 = . expression "||=" expression, FOLLOW [215] -> GOTO 204
	expression/L3 = . expression "&=" expression, FOLLOW [215] -> GOTO 204
	expression/L3 = . expression "|=" expression, FOLLOW [215] -> GOTO 204
	expression/L3 = . expression "<<=" expression, FOLLOW [215] -> GOTO 204
	expression/L3 = . expression ">>=" expression, FOLLOW [215] -> GOTO 204
	expression/L4 = . expression "||" expression, FOLLOW [215] -> GOTO 204
	expression/L4 = expression "||" . expression, FOLLOW [215] -> GOTO 204
	expression/L5 = . expression "&&" expression, FOLLOW [215] -> GOTO 204
	expression/L6 = . expression "|" expression, FOLLOW [215] -> GOTO 204
	expression/L7 = . expression "^" expression, FOLLOW [215] -> GOTO 204
	expression/L7 = . expression "&" expression, FOLLOW [215] -> GOTO 204
	expression/L8 = . expression "==" expression, FOLLOW [215] -> GOTO 204
	expression/L8 = . expression "!=" expression, FOLLOW [215] -> GOTO 204
	expression/L8 = . expression "<=" expression, FOLLOW [215] -> GOTO 204
	expression/L8 = . expression "<" expression, FOLLOW [215] -> GOTO 204
	expression/L8 = . expression ">=" expression, FOLLOW [215] -> GOTO 204
	expression/L8 = . expression ">" expression, FOLLOW [215] -> GOTO 204
	expression/L9 = . expression "+" expression, FOLLOW [215] -> GOTO 204
	expression/L9 = . expression "-" expression, FOLLOW [215] -> GOTO 204
	expression/L10 = . expression "*" expression, FOLLOW [215] -> GOTO 204
	expression/L10 = . expression "/" expression, FOLLOW [215] -> GOTO 204
	expression/L10 = . expression "%" expression, FOLLOW [215] -> GOTO 204
	expression/L11 = . expression "<<" expression, FOLLOW [215] -> GOTO 204
	expression/L11 = . expression ">>" expression, FOLLOW [215] -> GOTO 204
	expression/L12 = . expression "." IDENT, FOLLOW [215] -> GOTO 204
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [215] -> GOTO 204
	expression/L13 = . expression "(" ")", FOLLOW [215] -> GOTO 204
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [215] -> GOTO 204
	iexpression = . expression indirection IDENT, FOLLOW [215] -> GOTO 204
	expression/L12 = . iexpression, FOLLOW [215] -> GOTO 70
	expression/L2 = . BOOLEAN, FOLLOW [215] -> SHIFT BOOLEAN GOTO 71
	expression/L2 = . IDENT, FOLLOW [215] -> SHIFT IDENT GOTO 72
	expression/L2 = . DQSTRING, FOLLOW [215] -> SHIFT DQSTRING GOTO 73
	expression/L2 = . SQSTRING, FOLLOW [215] -> SHIFT SQSTRING GOTO 74
	expression/L2 = . CARDINAL, FOLLOW [215] -> SHIFT CARDINAL GOTO 75
	expression/L2 = . INTEGER, FOLLOW [215] -> SHIFT INTEGER GOTO 76
	expression/L2 = . FLOAT, FOLLOW [215] -> SHIFT FLOAT GOTO 77
	expression/L2 = . "(" expression ")", FOLLOW [215] -> SHIFT '(' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [215] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [215] -> SHIFT '{' GOTO 95
	expression/L9 = . "&" expression, FOLLOW [215] -> SHIFT '&' GOTO 80
	expression/L1 = . "new" typespec ":" expression, FOLLOW [215] -> SHIFT "new" GOTO 86
	expression/L2 = . "null", FOLLOW [215] -> SHIFT "null" GOTO 87
	expression/L9 = . "+" expression, FOLLOW [215] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [215] -> SHIFT '-' GOTO 89
	expression/L9 = . "~" expression, FOLLOW [215] -> SHIFT '~' GOTO 90
	expression/L9 = . "!" expression, FOLLOW [215] -> SHIFT '!' GOTO 91
	expression/L12 = . "*" expression, FOLLOW [215] -> SHIFT '*' GOTO 92
[133]
	expression/L3 = . expression "=" expression, FOLLOW [215] -> GOTO 205
	expression/L3 = . expression "+=" expression, FOLLOW [215] -> GOTO 205
	expression/L3 = . expression "-=" expression, FOLLOW [215] -> GOTO 205
	expression/L3 = . expression "*=" expression, FOLLOW [215] -> GOTO 205
	expression/L3 = . expression "/=" expression, FOLLOW [215] -> GOTO 205
	expression/L3 = . expression "%=" expression, FOLLOW [215] -> GOTO 205
	expression/L3 = . expression "&&=" expression, FOLLOW [215] -> GOTO 205
	expression/L3 = . expression "||=" expression, FOLLOW [215] -> GOTO 205
	expression/L3 = . expression "&=" expression, FOLLOW [215] -> GOTO 205
	expression/L3 = . expression "|=" expression, FOLLOW [215] -> GOTO 205
	expression/L3 = . expression "<<=" expression, FOLLOW [215] -> GOTO 205
	expression/L3 = . expression ">>=" expression, FOLLOW [215] -> GOTO 205
	expression/L4 = . expression "||" expression, FOLLOW [215] -> GOTO 205
	expression/L5 = . expression "&&" expression, FOLLOW [215] -> GOTO 205
	expression/L5 = expression "&&" . expression, FOLLOW [215] -> GOTO 205
	expression/L6 = . expression "|" expression, FOLLOW [215] -> GOTO 205
	expression/L7 = . expression "^" expression, FOLLOW [215] -> GOTO 205
	expression/L7 = . expression "&" expression, FOLLOW [215] -> GOTO 205
	expression/L8 = . expression "==" expression, FOLLOW [215] -> GOTO 205
	expression/L8 = . expression "!=" expression, FOLLOW [215] -> GOTO 205
	expression/L8 = . expression "<=" expression, FOLLOW [215] -> GOTO 205
	expression/L8 = . expression "<" expression, FOLLOW [215] -> GOTO 205
	expression/L8 = . expression ">=" expression, FOLLOW [215] -> GOTO 205
	expression/L8 = . expression ">" expression, FOLLOW [215] -> GOTO 205
	expression/L9 = . expression "+" expression, FOLLOW [215] -> GOTO 205
	expression/L9 = . expression "-" expression, FOLLOW [215] -> GOTO 205
	expression/L10 = . expression "*" expression, FOLLOW [215] -> GOTO 205
	expression/L10 = . expression "/" expression, FOLLOW [215] -> GOTO 205
	expression/L10 = . expression "%" expression, FOLLOW [215] -> GOTO 205
	expression/L11 = . expression "<<" expression, FOLLOW [215] -> GOTO 205
	expression/L11 = . expression ">>" expression, FOLLOW [215] -> GOTO 205
	expression/L12 = . expression "." IDENT, FOLLOW [215] -> GOTO 205
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [215] -> GOTO 205
	expression/L13 = . expression "(" ")", FOLLOW [215] -> GOTO 205
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [215] -> GOTO 205
	iexpression = . expression indirection IDENT, FOLLOW [215] -> GOTO 205
	expression/L12 = . iexpression, FOLLOW [215] -> GOTO 70
	expression/L2 = . BOOLEAN, FOLLOW [215] -> SHIFT BOOLEAN GOTO 71
	expression/L2 = . IDENT, FOLLOW [215] -> SHIFT IDENT GOTO 72
	expression/L2 = . DQSTRING, FOLLOW [215] -> SHIFT DQSTRING GOTO 73
	expression/L2 = . SQSTRING, FOLLOW [215] -> SHIFT SQSTRING GOTO 74
	expression/L2 = . CARDINAL, FOLLOW [215] -> SHIFT CARDINAL GOTO 75
	expression/L2 = . INTEGER, FOLLOW [215] -> SHIFT INTEGER GOTO 76
	expression/L2 = . FLOAT, FOLLOW [215] -> SHIFT FLOAT GOTO 77
	expression/L2 = . "(" expression ")", FOLLOW [215] -> SHIFT '(' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [215] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [215] -> SHIFT '{' GOTO 95
	expression/L9 = . "&" expression, FOLLOW [215] -> SHIFT '&' GOTO 80
	expression/L1 = . "new" typespec ":" expression, FOLLOW [215] -> SHIFT "new" GOTO 86
	expression/L2 = . "null", FOLLOW [215] -> SHIFT "null" GOTO 87
	expression/L9 = . "+" expression, FOLLOW [215] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [215] -> SHIFT '-' GOTO 89
	expression/L9 = . "~" expression, FOLLOW [215] -> SHIFT '~' GOTO 90
	expression/L9 = . "!" expression, FOLLOW [215] -> SHIFT '!' GOTO 91
	expression/L12 = . "*" expression, FOLLOW [215] -> SHIFT '*' GOTO 92
[134]
	expression/L3 = . expression "=" expression, FOLLOW [215] -> GOTO 206
	expression/L3 = . expression "+=" expression, FOLLOW [215] -> GOTO 206
	expression/L3 = . expression "-=" expression, FOLLOW [215] -> GOTO 206
	expression/L3 = . expression "*=" expression, FOLLOW [215] -> GOTO 206
	expression/L3 = . expression "/=" expression, FOLLOW [215] -> GOTO 206
	expression/L3 = . expression "%=" expression, FOLLOW [215] -> GOTO 206
	expression/L3 = . expression "&&=" expression, FOLLOW [215] -> GOTO 206
	expression/L3 = . expression "||=" expression, FOLLOW [215] -> GOTO 206
	expression/L3 = . expression "&=" expression, FOLLOW [215] -> GOTO 206
	expression/L3 = . expression "|=" expression, FOLLOW [215] -> GOTO 206
	expression/L3 = . expression "<<=" expression, FOLLOW [215] -> GOTO 206
	expression/L3 = . expression ">>=" expression, FOLLOW [215] -> GOTO 206
	expression/L4 = . expression "||" expression, FOLLOW [215] -> GOTO 206
	expression/L5 = . expression "&&" expression, FOLLOW [215] -> GOTO 206
	expression/L6 = . expression "|" expression, FOLLOW [215] -> GOTO 206
	expression/L6 = expression "|" . expression, FOLLOW [215] -> GOTO 206
	expression/L7 = . expression "^" expression, FOLLOW [215] -> GOTO 206
	expression/L7 = . expression "&" expression, FOLLOW [215] -> GOTO 206
	expression/L8 = . expression "==" expression, FOLLOW [215] -> GOTO 206
	expression/L8 = . expression "!=" expression, FOLLOW [215] -> GOTO 206
	expression/L8 = . expression "<=" expression, FOLLOW [215] -> GOTO 206
	expression/L8 = . expression "<" expression, FOLLOW [215] -> GOTO 206
	expression/L8 = . expression ">=" expression, FOLLOW [215] -> GOTO 206
	expression/L8 = . expression ">" expression, FOLLOW [215] -> GOTO 206
	expression/L9 = . expression "+" expression, FOLLOW [215] -> GOTO 206
	expression/L9 = . expression "-" expression, FOLLOW [215] -> GOTO 206
	expression/L10 = . expression "*" expression, FOLLOW [215] -> GOTO 206
	expression/L10 = . expression "/" expression, FOLLOW [215] -> GOTO 206
	expression/L10 = . expression "%" expression, FOLLOW [215] -> GOTO 206
	expression/L11 = . expression "<<" expression, FOLLOW [215] -> GOTO 206
	expression/L11 = . expression ">>" expression, FOLLOW [215] -> GOTO 206
	expression/L12 = . expression "." IDENT, FOLLOW [215] -> GOTO 206
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [215] -> GOTO 206
	expression/L13 = . expression "(" ")", FOLLOW [215] -> GOTO 206
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [215] -> GOTO 206
	iexpression = . expression indirection IDENT, FOLLOW [215] -> GOTO 206
	expression/L12 = . iexpression, FOLLOW [215] -> GOTO 70
	expression/L2 = . BOOLEAN, FOLLOW [215] -> SHIFT BOOLEAN GOTO 71
	expression/L2 = . IDENT, FOLLOW [215] -> SHIFT IDENT GOTO 72
	expression/L2 = . DQSTRING, FOLLOW [215] -> SHIFT DQSTRING GOTO 73
	expression/L2 = . SQSTRING, FOLLOW [215] -> SHIFT SQSTRING GOTO 74
	expression/L2 = . CARDINAL, FOLLOW [215] -> SHIFT CARDINAL GOTO 75
	expression/L2 = . INTEGER, FOLLOW [215] -> SHIFT INTEGER GOTO 76
	expression/L2 = . FLOAT, FOLLOW [215] -> SHIFT FLOAT GOTO 77
	expression/L2 = . "(" expression ")", FOLLOW [215] -> SHIFT '(' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [215] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [215] -> SHIFT '{' GOTO 95
	expression/L9 = . "&" expression, FOLLOW [215] -> SHIFT '&' GOTO 80
	expression/L1 = . "new" typespec ":" expression, FOLLOW [215] -> SHIFT "new" GOTO 86
	expression/L2 = . "null", FOLLOW [215] -> SHIFT "null" GOTO 87
	expression/L9 = . "+" expression, FOLLOW [215] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [215] -> SHIFT '-' GOTO 89
	expression/L9 = . "~" expression, FOLLOW [215] -> SHIFT '~' GOTO 90
	expression/L9 = . "!" expression, FOLLOW [215] -> SHIFT '!' GOTO 91
	expression/L12 = . "*" expression, FOLLOW [215] -> SHIFT '*' GOTO 92
[135]
	expression/L3 = . expression "=" expression, FOLLOW [215] -> GOTO 207
	expression/L3 = . expression "+=" expression, FOLLOW [215] -> GOTO 207
	expression/L3 = . expression "-=" expression, FOLLOW [215] -> GOTO 207
	expression/L3 = . expression "*=" expression, FOLLOW [215] -> GOTO 207
	expression/L3 = . expression "/=" expression, FOLLOW [215] -> GOTO 207
	expression/L3 = . expression "%=" expression, FOLLOW [215] -> GOTO 207
	expression/L3 = . expression "&&=" expression, FOLLOW [215] -> GOTO 207
	expression/L3 = . expression "||=" expression, FOLLOW [215] -> GOTO 207
	expression/L3 = . expression "&=" expression, FOLLOW [215] -> GOTO 207
	expression/L3 = . expression "|=" expression, FOLLOW [215] -> GOTO 207
	expression/L3 = . expression "<<=" expression, FOLLOW [215] -> GOTO 207
	expression/L3 = . expression ">>=" expression, FOLLOW [215] -> GOTO 207
	expression/L4 = . expression "||" expression, FOLLOW [215] -> GOTO 207
	expression/L5 = . expression "&&" expression, FOLLOW [215] -> GOTO 207
	expression/L6 = . expression "|" expression, FOLLOW [215] -> GOTO 207
	expression/L7 = . expression "^" expression, FOLLOW [215] -> GOTO 207
	expression/L7 = . expression "&" expression, FOLLOW [215] -> GOTO 207
	expression/L8 = . expression "==" expression, FOLLOW [215] -> GOTO 207
	expression/L8 = expression "==" . expression, FOLLOW [215] -> GOTO 207
	expression/L8 = . expression "!=" expression, FOLLOW [215] -> GOTO 207
	expression/L8 = . expression "<=" expression, FOLLOW [215] -> GOTO 207
	expression/L8 = . expression "<" expression, FOLLOW [215] -> GOTO 207
	expression/L8 = . expression ">=" expression, FOLLOW [215] -> GOTO 207
	expression/L8 = . expression ">" expression, FOLLOW [215] -> GOTO 207
	expression/L9 = . expression "+" expression, FOLLOW [215] -> GOTO 207
	expression/L9 = . expression "-" expression, FOLLOW [215] -> GOTO 207
	expression/L10 = . expression "*" expression, FOLLOW [215] -> GOTO 207
	expression/L10 = . expression "/" expression, FOLLOW [215] -> GOTO 207
	expression/L10 = . expression "%" expression, FOLLOW [215] -> GOTO 207
	expression/L11 = . expression "<<" expression, FOLLOW [215] -> GOTO 207
	expression/L11 = . expression ">>" expression, FOLLOW [215] -> GOTO 207
	expression/L12 = . expression "." IDENT, FOLLOW [215] -> GOTO 207
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [215] -> GOTO 207
	expression/L13 = . expression "(" ")", FOLLOW [215] -> GOTO 207
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [215] -> GOTO 207
	iexpression = . expression indirection IDENT, FOLLOW [215] -> GOTO 207
	expression/L12 = . iexpression, FOLLOW [215] -> GOTO 70
	expression/L2 = . BOOLEAN, FOLLOW [215] -> SHIFT BOOLEAN GOTO 71
	expression/L2 = . IDENT, FOLLOW [215] -> SHIFT IDENT GOTO 72
	expression/L2 = . DQSTRING, FOLLOW [215] -> SHIFT DQSTRING GOTO 73
	expression/L2 = . SQSTRING, FOLLOW [215] -> SHIFT SQSTRING GOTO 74
	expression/L2 = . CARDINAL, FOLLOW [215] -> SHIFT CARDINAL GOTO 75
	expression/L2 = . INTEGER, FOLLOW [215] -> SHIFT INTEGER GOTO 76
	expression/L2 = . FLOAT, FOLLOW [215] -> SHIFT FLOAT GOTO 77
	expression/L2 = . "(" expression ")", FOLLOW [215] -> SHIFT '(' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [215] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [215] -> SHIFT '{' GOTO 95
	expression/L9 = . "&" expression, FOLLOW [215] -> SHIFT '&' GOTO 80
	expression/L1 = . "new" typespec ":" expression, FOLLOW [215] -> SHIFT "new" GOTO 86
	expression/L2 = . "null", FOLLOW [215] -> SHIFT "null" GOTO 87
	expression/L9 = . "+" expression, FOLLOW [215] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [215] -> SHIFT '-' GOTO 89
	expression/L9 = . "~" expression, FOLLOW [215] -> SHIFT '~' GOTO 90
	expression/L9 = . "!" expression, FOLLOW [215] -> SHIFT '!' GOTO 91
	expression/L12 = . "*" expression, FOLLOW [215] -> SHIFT '*' GOTO 92
[136]
	expression/L3 = . expression "=" expression, FOLLOW [215] -> GOTO 208
	expression/L3 = . expression "+=" expression, FOLLOW [215] -> GOTO 208
	expression/L3 = . expression "-=" expression, FOLLOW [215] -> GOTO 208
	expression/L3 = . expression "*=" expression, FOLLOW [215] -> GOTO 208
	expression/L3 = . expression "/=" expression, FOLLOW [215] -> GOTO 208
	expression/L3 = . expression "%=" expression, FOLLOW [215] -> GOTO 208
	expression/L3 = . expression "&&=" expression, FOLLOW [215] -> GOTO 208
	expression/L3 = . expression "||=" expression, FOLLOW [215] -> GOTO 208
	expression/L3 = . expression "&=" expression, FOLLOW [215] -> GOTO 208
	expression/L3 = . expression "|=" expression, FOLLOW [215] -> GOTO 208
	expression/L3 = . expression "<<=" expression, FOLLOW [215] -> GOTO 208
	expression/L3 = . expression ">>=" expression, FOLLOW [215] -> GOTO 208
	expression/L4 = . expression "||" expression, FOLLOW [215] -> GOTO 208
	expression/L5 = . expression "&&" expression, FOLLOW [215] -> GOTO 208
	expression/L6 = . expression "|" expression, FOLLOW [215] -> GOTO 208
	expression/L7 = . expression "^" expression, FOLLOW [215] -> GOTO 208
	expression/L7 = . expression "&" expression, FOLLOW [215] -> GOTO 208
	expression/L8 = . expression "==" expression, FOLLOW [215] -> GOTO 208
	expression/L8 = . expression "!=" expression, FOLLOW [215] -> GOTO 208
	expression/L8 = expression "!=" . expression, FOLLOW [215] -> GOTO 208
	expression/L8 = . expression "<=" expression, FOLLOW [215] -> GOTO 208
	expression/L8 = . expression "<" expression, FOLLOW [215] -> GOTO 208
	expression/L8 = . expression ">=" expression, FOLLOW [215] -> GOTO 208
	expression/L8 = . expression ">" expression, FOLLOW [215] -> GOTO 208
	expression/L9 = . expression "+" expression, FOLLOW [215] -> GOTO 208
	expression/L9 = . expression "-" expression, FOLLOW [215] -> GOTO 208
	expression/L10 = . expression "*" expression, FOLLOW [215] -> GOTO 208
	expression/L10 = . expression "/" expression, FOLLOW [215] -> GOTO 208
	expression/L10 = . expression "%" expression, FOLLOW [215] -> GOTO 208
	expression/L11 = . expression "<<" expression, FOLLOW [215] -> GOTO 208
	expression/L11 = . expression ">>" expression, FOLLOW [215] -> GOTO 208
	expression/L12 = . expression "." IDENT, FOLLOW [215] -> GOTO 208
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [215] -> GOTO 208
	expression/L13 = . expression "(" ")", FOLLOW [215] -> GOTO 208
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [215] -> GOTO 208
	iexpression = . expression indirection IDENT, FOLLOW [215] -> GOTO 208
	expression/L12 = . iexpression, FOLLOW [215] -> GOTO 70
	expression/L2 = . BOOLEAN, FOLLOW [215] -> SHIFT BOOLEAN GOTO 71
	expression/L2 = . IDENT, FOLLOW [215] -> SHIFT IDENT GOTO 72
	expression/L2 = . DQSTRING, FOLLOW [215] -> SHIFT DQSTRING GOTO 73
	expression/L2 = . SQSTRING, FOLLOW [215] -> SHIFT SQSTRING GOTO 74
	expression/L2 = . CARDINAL, FOLLOW [215] -> SHIFT CARDINAL GOTO 75
	expression/L2 = . INTEGER, FOLLOW [215] -> SHIFT INTEGER GOTO 76
	expression/L2 = . FLOAT, FOLLOW [215] -> SHIFT FLOAT GOTO 77
	expression/L2 = . "(" expression ")", FOLLOW [215] -> SHIFT '(' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [215] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [215] -> SHIFT '{' GOTO 95
	expression/L9 = . "&" expression, FOLLOW [215] -> SHIFT '&' GOTO 80
	expression/L1 = . "new" typespec ":" expression, FOLLOW [215] -> SHIFT "new" GOTO 86
	expression/L2 = . "null", FOLLOW [215] -> SHIFT "null" GOTO 87
	expression/L9 = . "+" expression, FOLLOW [215] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [215] -> SHIFT '-' GOTO 89
	expression/L9 = . "~" expression, FOLLOW [215] -> SHIFT '~' GOTO 90
	expression/L9 = . "!" expression, FOLLOW [215] -> SHIFT '!' GOTO 91
	expression/L12 = . "*" expression, FOLLOW [215] -> SHIFT '*' GOTO 92
[137]
	expression/L3 = . expression "=" expression, FOLLOW [215] -> GOTO 209
	expression/L3 = . expression "+=" expression, FOLLOW [215] -> GOTO 209
	expression/L3 = . expression "-=" expression, FOLLOW [215] -> GOTO 209
	expression/L3 = . expression "*=" expression, FOLLOW [215] -> GOTO 209
	expression/L3 = . expression "/=" expression, FOLLOW [215] -> GOTO 209
	expression/L3 = . expression "%=" expression, FOLLOW [215] -> GOTO 209
	expression/L3 = . expression "&&=" expression, FOLLOW [215] -> GOTO 209
	expression/L3 = . expression "||=" expression, FOLLOW [215] -> GOTO 209
	expression/L3 = . expression "&=" expression, FOLLOW [215] -> GOTO 209
	expression/L3 = . expression "|=" expression, FOLLOW [215] -> GOTO 209
	expression/L3 = . expression "<<=" expression, FOLLOW [215] -> GOTO 209
	expression/L3 = . expression ">>=" expression, FOLLOW [215] -> GOTO 209
	expression/L4 = . expression "||" expression, FOLLOW [215] -> GOTO 209
	expression/L5 = . expression "&&" expression, FOLLOW [215] -> GOTO 209
	expression/L6 = . expression "|" expression, FOLLOW [215] -> GOTO 209
	expression/L7 = . expression "^" expression, FOLLOW [215] -> GOTO 209
	expression/L7 = . expression "&" expression, FOLLOW [215] -> GOTO 209
	expression/L8 = . expression "==" expression, FOLLOW [215] -> GOTO 209
	expression/L8 = . expression "!=" expression, FOLLOW [215] -> GOTO 209
	expression/L8 = . expression "<=" expression, FOLLOW [215] -> GOTO 209
	expression/L8 = expression "<=" . expression, FOLLOW [215] -> GOTO 209
	expression/L8 = . expression "<" expression, FOLLOW [215] -> GOTO 209
	expression/L8 = . expression ">=" expression, FOLLOW [215] -> GOTO 209
	expression/L8 = . expression ">" expression, FOLLOW [215] -> GOTO 209
	expression/L9 = . expression "+" expression, FOLLOW [215] -> GOTO 209
	expression/L9 = . expression "-" expression, FOLLOW [215] -> GOTO 209
	expression/L10 = . expression "*" expression, FOLLOW [215] -> GOTO 209
	expression/L10 = . expression "/" expression, FOLLOW [215] -> GOTO 209
	expression/L10 = . expression "%" expression, FOLLOW [215] -> GOTO 209
	expression/L11 = . expression "<<" expression, FOLLOW [215] -> GOTO 209
	expression/L11 = . expression ">>" expression, FOLLOW [215] -> GOTO 209
	expression/L12 = . expression "." IDENT, FOLLOW [215] -> GOTO 209
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [215] -> GOTO 209
	expression/L13 = . expression "(" ")", FOLLOW [215] -> GOTO 209
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [215] -> GOTO 209
	iexpression = . expression indirection IDENT, FOLLOW [215] -> GOTO 209
	expression/L12 = . iexpression, FOLLOW [215] -> GOTO 70
	expression/L2 = . BOOLEAN, FOLLOW [215] -> SHIFT BOOLEAN GOTO 71
	expression/L2 = . IDENT, FOLLOW [215] -> SHIFT IDENT GOTO 72
	expression/L2 = . DQSTRING, FOLLOW [215] -> SHIFT DQSTRING GOTO 73
	expression/L2 = . SQSTRING, FOLLOW [215] -> SHIFT SQSTRING GOTO 74
	expression/L2 = . CARDINAL, FOLLOW [215] -> SHIFT CARDINAL GOTO 75
	expression/L2 = . INTEGER, FOLLOW [215] -> SHIFT INTEGER GOTO 76
	expression/L2 = . FLOAT, FOLLOW [215] -> SHIFT FLOAT GOTO 77
	expression/L2 = . "(" expression ")", FOLLOW [215] -> SHIFT '(' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [215] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [215] -> SHIFT '{' GOTO 95
	expression/L9 = . "&" expression, FOLLOW [215] -> SHIFT '&' GOTO 80
	expression/L1 = . "new" typespec ":" expression, FOLLOW [215] -> SHIFT "new" GOTO 86
	expression/L2 = . "null", FOLLOW [215] -> SHIFT "null" GOTO 87
	expression/L9 = . "+" expression, FOLLOW [215] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [215] -> SHIFT '-' GOTO 89
	expression/L9 = . "~" expression, FOLLOW [215] -> SHIFT '~' GOTO 90
	expression/L9 = . "!" expression, FOLLOW [215] -> SHIFT '!' GOTO 91
	expression/L12 = . "*" expression, FOLLOW [215] -> SHIFT '*' GOTO 92
[138]
	expression/L3 = . expression "=" expression, FOLLOW [215] -> GOTO 210
	expression/L3 = . expression "+=" expression, FOLLOW [215] -> GOTO 210
	expression/L3 = . expression "-=" expression, FOLLOW [215] -> GOTO 210
	expression/L3 = . expression "*=" expression, FOLLOW [215] -> GOTO 210
	expression/L3 = . expression "/=" expression, FOLLOW [215] -> GOTO 210
	expression/L3 = . expression "%=" expression, FOLLOW [215] -> GOTO 210
	expression/L3 = . expression "&&=" expression, FOLLOW [215] -> GOTO 210
	expression/L3 = . expression "||=" expression, FOLLOW [215] -> GOTO 210
	expression/L3 = . expression "&=" expression, FOLLOW [215] -> GOTO 210
	expression/L3 = . expression "|=" expression, FOLLOW [215] -> GOTO 210
	expression/L3 = . expression "<<=" expression, FOLLOW [215] -> GOTO 210
	expression/L3 = . expression ">>=" expression, FOLLOW [215] -> GOTO 210
	expression/L4 = . expression "||" expression, FOLLOW [215] -> GOTO 210
	expression/L5 = . expression "&&" expression, FOLLOW [215] -> GOTO 210
	expression/L6 = . expression "|" expression, FOLLOW [215] -> GOTO 210
	expression/L7 = . expression "^" expression, FOLLOW [215] -> GOTO 210
	expression/L7 = . expression "&" expression, FOLLOW [215] -> GOTO 210
	expression/L8 = . expression "==" expression, FOLLOW [215] -> GOTO 210
	expression/L8 = . expression "!=" expression, FOLLOW [215] -> GOTO 210
	expression/L8 = . expression "<=" expression, FOLLOW [215] -> GOTO 210
	expression/L8 = . expression "<" expression, FOLLOW [215] -> GOTO 210
	expression/L8 = expression "<" . expression, FOLLOW [215] -> GOTO 210
	expression/L8 = . expression ">=" expression, FOLLOW [215] -> GOTO 210
	expression/L8 = . expression ">" expression, FOLLOW [215] -> GOTO 210
	expression/L9 = . expression "+" expression, FOLLOW [215] -> GOTO 210
	expression/L9 = . expression "-" expression, FOLLOW [215] -> GOTO 210
	expression/L10 = . expression "*" expression, FOLLOW [215] -> GOTO 210
	expression/L10 = . expression "/" expression, FOLLOW [215] -> GOTO 210
	expression/L10 = . expression "%" expression, FOLLOW [215] -> GOTO 210
	expression/L11 = . expression "<<" expression, FOLLOW [215] -> GOTO 210
	expression/L11 = . expression ">>" expression, FOLLOW [215] -> GOTO 210
	expression/L12 = . expression "." IDENT, FOLLOW [215] -> GOTO 210
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [215] -> GOTO 210
	expression/L13 = . expression "(" ")", FOLLOW [215] -> GOTO 210
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [215] -> GOTO 210
	iexpression = . expression indirection IDENT, FOLLOW [215] -> GOTO 210
	expression/L12 = . iexpression, FOLLOW [215] -> GOTO 70
	expression/L2 = . BOOLEAN, FOLLOW [215] -> SHIFT BOOLEAN GOTO 71
	expression/L2 = . IDENT, FOLLOW [215] -> SHIFT IDENT GOTO 72
	expression/L2 = . DQSTRING, FOLLOW [215] -> SHIFT DQSTRING GOTO 73
	expression/L2 = . SQSTRING, FOLLOW [215] -> SHIFT SQSTRING GOTO 74
	expression/L2 = . CARDINAL, FOLLOW [215] -> SHIFT CARDINAL GOTO 75
	expression/L2 = . INTEGER, FOLLOW [215] -> SHIFT INTEGER GOTO 76
	expression/L2 = . FLOAT, FOLLOW [215] -> SHIFT FLOAT GOTO 77
	expression/L2 = . "(" expression ")", FOLLOW [215] -> SHIFT '(' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [215] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [215] -> SHIFT '{' GOTO 95
	expression/L9 = . "&" expression, FOLLOW [215] -> SHIFT '&' GOTO 80
	expression/L1 = . "new" typespec ":" expression, FOLLOW [215] -> SHIFT "new" GOTO 86
	expression/L2 = . "null", FOLLOW [215] -> SHIFT "null" GOTO 87
	expression/L9 = . "+" expression, FOLLOW [215] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [215] -> SHIFT '-' GOTO 89
	expression/L9 = . "~" expression, FOLLOW [215] -> SHIFT '~' GOTO 90
	expression/L9 = . "!" expression, FOLLOW [215] -> SHIFT '!' GOTO 91
	expression/L12 = . "*" expression, FOLLOW [215] -> SHIFT '*' GOTO 92
[139]
	expression/L3 = . expression "=" expression, FOLLOW [215] -> GOTO 211
	expression/L3 = . expression "+=" expression, FOLLOW [215] -> GOTO 211
	expression/L3 = . expression "-=" expression, FOLLOW [215] -> GOTO 211
	expression/L3 = . expression "*=" expression, FOLLOW [215] -> GOTO 211
	expression/L3 = . expression "/=" expression, FOLLOW [215] -> GOTO 211
	expression/L3 = . expression "%=" expression, FOLLOW [215] -> GOTO 211
	expression/L3 = . expression "&&=" expression, FOLLOW [215] -> GOTO 211
	expression/L3 = . expression "||=" expression, FOLLOW [215] -> GOTO 211
	expression/L3 = . expression "&=" expression, FOLLOW [215] -> GOTO 211
	expression/L3 = . expression "|=" expression, FOLLOW [215] -> GOTO 211
	expression/L3 = . expression "<<=" expression, FOLLOW [215] -> GOTO 211
	expression/L3 = . expression ">>=" expression, FOLLOW [215] -> GOTO 211
	expression/L4 = . expression "||" expression, FOLLOW [215] -> GOTO 211
	expression/L5 = . expression "&&" expression, FOLLOW [215] -> GOTO 211
	expression/L6 = . expression "|" expression, FOLLOW [215] -> GOTO 211
	expression/L7 = . expression "^" expression, FOLLOW [215] -> GOTO 211
	expression/L7 = . expression "&" expression, FOLLOW [215] -> GOTO 211
	expression/L8 = . expression "==" expression, FOLLOW [215] -> GOTO 211
	expression/L8 = . expression "!=" expression, FOLLOW [215] -> GOTO 211
	expression/L8 = . expression "<=" expression, FOLLOW [215] -> GOTO 211
	expression/L8 = . expression "<" expression, FOLLOW [215] -> GOTO 211
	expression/L8 = . expression ">=" expression, FOLLOW [215] -> GOTO 211
	expression/L8 = expression ">=" . expression, FOLLOW [215] -> GOTO 211
	expression/L8 = . expression ">" expression, FOLLOW [215] -> GOTO 211
	expression/L9 = . expression "+" expression, FOLLOW [215] -> GOTO 211
	expression/L9 = . expression "-" expression, FOLLOW [215] -> GOTO 211
	expression/L10 = . expression "*" expression, FOLLOW [215] -> GOTO 211
	expression/L10 = . expression "/" expression, FOLLOW [215] -> GOTO 211
	expression/L10 = . expression "%" expression, FOLLOW [215] -> GOTO 211
	expression/L11 = . expression "<<" expression, FOLLOW [215] -> GOTO 211
	expression/L11 = . expression ">>" expression, FOLLOW [215] -> GOTO 211
	expression/L12 = . expression "." IDENT, FOLLOW [215] -> GOTO 211
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [215] -> GOTO 211
	expression/L13 = . expression "(" ")", FOLLOW [215] -> GOTO 211
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [215] -> GOTO 211
	iexpression = . expression indirection IDENT, FOLLOW [215] -> GOTO 211
	expression/L12 = . iexpression, FOLLOW [215] -> GOTO 70
	expression/L2 = . BOOLEAN, FOLLOW [215] -> SHIFT BOOLEAN GOTO 71
	expression/L2 = . IDENT, FOLLOW [215] -> SHIFT IDENT GOTO 72
	expression/L2 = . DQSTRING, FOLLOW [215] -> SHIFT DQSTRING GOTO 73
	expression/L2 = . SQSTRING, FOLLOW [215] -> SHIFT SQSTRING GOTO 74
	expression/L2 = . CARDINAL, FOLLOW [215] -> SHIFT CARDINAL GOTO 75
	expression/L2 = . INTEGER, FOLLOW [215] -> SHIFT INTEGER GOTO 76
	expression/L2 = . FLOAT, FOLLOW [215] -> SHIFT FLOAT GOTO 77
	expression/L2 = . "(" expression ")", FOLLOW [215] -> SHIFT '(' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [215] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [215] -> SHIFT '{' GOTO 95
	expression/L9 = . "&" expression, FOLLOW [215] -> SHIFT '&' GOTO 80
	expression/L1 = . "new" typespec ":" expression, FOLLOW [215] -> SHIFT "new" GOTO 86
	expression/L2 = . "null", FOLLOW [215] -> SHIFT "null" GOTO 87
	expression/L9 = . "+" expression, FOLLOW [215] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [215] -> SHIFT '-' GOTO 89
	expression/L9 = . "~" expression, FOLLOW [215] -> SHIFT '~' GOTO 90
	expression/L9 = . "!" expression, FOLLOW [215] -> SHIFT '!' GOTO 91
	expression/L12 = . "*" expression, FOLLOW [215] -> SHIFT '*' GOTO 92
[140]
	expression/L3 = . expression "=" expression, FOLLOW [215] -> GOTO 212
	expression/L3 = . expression "+=" expression, FOLLOW [215] -> GOTO 212
	expression/L3 = . expression "-=" expression, FOLLOW [215] -> GOTO 212
	expression/L3 = . expression "*=" expression, FOLLOW [215] -> GOTO 212
	expression/L3 = . expression "/=" expression, FOLLOW [215] -> GOTO 212
	expression/L3 = . expression "%=" expression, FOLLOW [215] -> GOTO 212
	expression/L3 = . expression "&&=" expression, FOLLOW [215] -> GOTO 212
	expression/L3 = . expression "||=" expression, FOLLOW [215] -> GOTO 212
	expression/L3 = . expression "&=" expression, FOLLOW [215] -> GOTO 212
	expression/L3 = . expression "|=" expression, FOLLOW [215] -> GOTO 212
	expression/L3 = . expression "<<=" expression, FOLLOW [215] -> GOTO 212
	expression/L3 = . expression ">>=" expression, FOLLOW [215] -> GOTO 212
	expression/L4 = . expression "||" expression, FOLLOW [215] -> GOTO 212
	expression/L5 = . expression "&&" expression, FOLLOW [215] -> GOTO 212
	expression/L6 = . expression "|" expression, FOLLOW [215] -> GOTO 212
	expression/L7 = . expression "^" expression, FOLLOW [215] -> GOTO 212
	expression/L7 = . expression "&" expression, FOLLOW [215] -> GOTO 212
	expression/L8 = . expression "==" expression, FOLLOW [215] -> GOTO 212
	expression/L8 = . expression "!=" expression, FOLLOW [215] -> GOTO 212
	expression/L8 = . expression "<=" expression, FOLLOW [215] -> GOTO 212
	expression/L8 = . expression "<" expression, FOLLOW [215] -> GOTO 212
	expression/L8 = . expression ">=" expression, FOLLOW [215] -> GOTO 212
	expression/L8 = . expression ">" expression, FOLLOW [215] -> GOTO 212
	expression/L8 = expression ">" . expression, FOLLOW [215] -> GOTO 212
	expression/L9 = . expression "+" expression, FOLLOW [215] -> GOTO 212
	expression/L9 = . expression "-" expression, FOLLOW [215] -> GOTO 212
	expression/L10 = . expression "*" expression, FOLLOW [215] -> GOTO 212
	expression/L10 = . expression "/" expression, FOLLOW [215] -> GOTO 212
	expression/L10 = . expression "%" expression, FOLLOW [215] -> GOTO 212
	expression/L11 = . expression "<<" expression, FOLLOW [215] -> GOTO 212
	expression/L11 = . expression ">>" expression, FOLLOW [215] -> GOTO 212
	expression/L12 = . expression "." IDENT, FOLLOW [215] -> GOTO 212
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [215] -> GOTO 212
	expression/L13 = . expression "(" ")", FOLLOW [215] -> GOTO 212
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [215] -> GOTO 212
	iexpression = . expression indirection IDENT, FOLLOW [215] -> GOTO 212
	expression/L12 = . iexpression, FOLLOW [215] -> GOTO 70
	expression/L2 = . BOOLEAN, FOLLOW [215] -> SHIFT BOOLEAN GOTO 71
	expression/L2 = . IDENT, FOLLOW [215] -> SHIFT IDENT GOTO 72
	expression/L2 = . DQSTRING, FOLLOW [215] -> SHIFT DQSTRING GOTO 73
	expression/L2 = . SQSTRING, FOLLOW [215] -> SHIFT SQSTRING GOTO 74
	expression/L2 = . CARDINAL, FOLLOW [215] -> SHIFT CARDINAL GOTO 75
	expression/L2 = . INTEGER, FOLLOW [215] -> SHIFT INTEGER GOTO 76
	expression/L2 = . FLOAT, FOLLOW [215] -> SHIFT FLOAT GOTO 77
	expression/L2 = . "(" expression ")", FOLLOW [215] -> SHIFT '(' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [215] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [215] -> SHIFT '{' GOTO 95
	expression/L9 = . "&" expression, FOLLOW [215] -> SHIFT '&' GOTO 80
	expression/L1 = . "new" typespec ":" expression, FOLLOW [215] -> SHIFT "new" GOTO 86
	expression/L2 = . "null", FOLLOW [215] -> SHIFT "null" GOTO 87
	expression/L9 = . "+" expression, FOLLOW [215] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [215] -> SHIFT '-' GOTO 89
	expression/L9 = . "~" expression, FOLLOW [215] -> SHIFT '~' GOTO 90
	expression/L9 = . "!" expression, FOLLOW [215] -> SHIFT '!' GOTO 91
	expression/L12 = . "*" expression, FOLLOW [215] -> SHIFT '*' GOTO 92
[141]
	expression/L3 = . expression "=" expression, FOLLOW [215] -> GOTO 213
	expression/L3 = . expression "+=" expression, FOLLOW [215] -> GOTO 213
	expression/L3 = . expression "-=" expression, FOLLOW [215] -> GOTO 213
	expression/L3 = . expression "*=" expression, FOLLOW [215] -> GOTO 213
	expression/L3 = . expression "/=" expression, FOLLOW [215] -> GOTO 213
	expression/L3 = . expression "%=" expression, FOLLOW [215] -> GOTO 213
	expression/L3 = . expression "&&=" expression, FOLLOW [215] -> GOTO 213
	expression/L3 = . expression "||=" expression, FOLLOW [215] -> GOTO 213
	expression/L3 = . expression "&=" expression, FOLLOW [215] -> GOTO 213
	expression/L3 = . expression "|=" expression, FOLLOW [215] -> GOTO 213
	expression/L3 = . expression "<<=" expression, FOLLOW [215] -> GOTO 213
	expression/L3 = . expression ">>=" expression, FOLLOW [215] -> GOTO 213
	expression/L4 = . expression "||" expression, FOLLOW [215] -> GOTO 213
	expression/L5 = . expression "&&" expression, FOLLOW [215] -> GOTO 213
	expression/L6 = . expression "|" expression, FOLLOW [215] -> GOTO 213
	expression/L7 = . expression "^" expression, FOLLOW [215] -> GOTO 213
	expression/L7 = . expression "&" expression, FOLLOW [215] -> GOTO 213
	expression/L8 = . expression "==" expression, FOLLOW [215] -> GOTO 213
	expression/L8 = . expression "!=" expression, FOLLOW [215] -> GOTO 213
	expression/L8 = . expression "<=" expression, FOLLOW [215] -> GOTO 213
	expression/L8 = . expression "<" expression, FOLLOW [215] -> GOTO 213
	expression/L8 = . expression ">=" expression, FOLLOW [215] -> GOTO 213
	expression/L8 = . expression ">" expression, FOLLOW [215] -> GOTO 213
	expression/L9 = . expression "+" expression, FOLLOW [215] -> GOTO 213
	expression/L9 = expression "+" . expression, FOLLOW [215] -> GOTO 213
	expression/L9 = . expression "-" expression, FOLLOW [215] -> GOTO 213
	expression/L10 = . expression "*" expression, FOLLOW [215] -> GOTO 213
	expression/L10 = . expression "/" expression, FOLLOW [215] -> GOTO 213
	expression/L10 = . expression "%" expression, FOLLOW [215] -> GOTO 213
	expression/L11 = . expression "<<" expression, FOLLOW [215] -> GOTO 213
	expression/L11 = . expression ">>" expression, FOLLOW [215] -> GOTO 213
	expression/L12 = . expression "." IDENT, FOLLOW [215] -> GOTO 213
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [215] -> GOTO 213
	expression/L13 = . expression "(" ")", FOLLOW [215] -> GOTO 213
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [215] -> GOTO 213
	iexpression = . expression indirection IDENT, FOLLOW [215] -> GOTO 213
	expression/L12 = . iexpression, FOLLOW [215] -> GOTO 70
	expression/L2 = . BOOLEAN, FOLLOW [215] -> SHIFT BOOLEAN GOTO 71
	expression/L2 = . IDENT, FOLLOW [215] -> SHIFT IDENT GOTO 72
	expression/L2 = . DQSTRING, FOLLOW [215] -> SHIFT DQSTRING GOTO 73
	expression/L2 = . SQSTRING, FOLLOW [215] -> SHIFT SQSTRING GOTO 74
	expression/L2 = . CARDINAL, FOLLOW [215] -> SHIFT CARDINAL GOTO 75
	expression/L2 = . INTEGER, FOLLOW [215] -> SHIFT INTEGER GOTO 76
	expression/L2 = . FLOAT, FOLLOW [215] -> SHIFT FLOAT GOTO 77
	expression/L2 = . "(" expression ")", FOLLOW [215] -> SHIFT '(' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [215] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [215] -> SHIFT '{' GOTO 95
	expression/L9 = . "&" expression, FOLLOW [215] -> SHIFT '&' GOTO 80
	expression/L1 = . "new" typespec ":" expression, FOLLOW [215] -> SHIFT "new" GOTO 86
	expression/L2 = . "null", FOLLOW [215] -> SHIFT "null" GOTO 87
	expression/L9 = . "+" expression, FOLLOW [215] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [215] -> SHIFT '-' GOTO 89
	expression/L9 = . "~" expression, FOLLOW [215] -> SHIFT '~' GOTO 90
	expression/L9 = . "!" expression, FOLLOW [215] -> SHIFT '!' GOTO 91
	expression/L12 = . "*" expression, FOLLOW [215] -> SHIFT '*' GOTO 92
[142]
	expression/L3 = . expression "=" expression, FOLLOW [215] -> GOTO 214
	expression/L3 = . expression "+=" expression, FOLLOW [215] -> GOTO 214
	expression/L3 = . expression "-=" expression, FOLLOW [215] -> GOTO 214
	expression/L3 = . expression "*=" expression, FOLLOW [215] -> GOTO 214
	expression/L3 = . expression "/=" expression, FOLLOW [215] -> GOTO 214
	expression/L3 = . expression "%=" expression, FOLLOW [215] -> GOTO 214
	expression/L3 = . expression "&&=" expression, FOLLOW [215] -> GOTO 214
	expression/L3 = . expression "||=" expression, FOLLOW [215] -> GOTO 214
	expression/L3 = . expression "&=" expression, FOLLOW [215] -> GOTO 214
	expression/L3 = . expression "|=" expression, FOLLOW [215] -> GOTO 214
	expression/L3 = . expression "<<=" expression, FOLLOW [215] -> GOTO 214
	expression/L3 = . expression ">>=" expression, FOLLOW [215] -> GOTO 214
	expression/L4 = . expression "||" expression, FOLLOW [215] -> GOTO 214
	expression/L5 = . expression "&&" expression, FOLLOW [215] -> GOTO 214
	expression/L6 = . expression "|" expression, FOLLOW [215] -> GOTO 214
	expression/L7 = . expression "^" expression, FOLLOW [215] -> GOTO 214
	expression/L7 = . expression "&" expression, FOLLOW [215] -> GOTO 214
	expression/L8 = . expression "==" expression, FOLLOW [215] -> GOTO 214
	expression/L8 = . expression "!=" expression, FOLLOW [215] -> GOTO 214
	expression/L8 = . expression "<=" expression, FOLLOW [215] -> GOTO 214
	expression/L8 = . expression "<" expression, FOLLOW [215] -> GOTO 214
	expression/L8 = . expression ">=" expression, FOLLOW [215] -> GOTO 214
	expression/L8 = . expression ">" expression, FOLLOW [215] -> GOTO 214
	expression/L9 = . expression "+" expression, FOLLOW [215] -> GOTO 214
	expression/L9 = . expression "-" expression, FOLLOW [215] -> GOTO 214
	expression/L9 = expression "-" . expression, FOLLOW [215] -> GOTO 214
	expression/L10 = . expression "*" expression, FOLLOW [215] -> GOTO 214
	expression/L10 = . expression "/" expression, FOLLOW [215] -> GOTO 214
	expression/L10 = . expression "%" expression, FOLLOW [215] -> GOTO 214
	expression/L11 = . expression "<<" expression, FOLLOW [215] -> GOTO 214
	expression/L11 = . expression ">>" expression, FOLLOW [215] -> GOTO 214
	expression/L12 = . expression "." IDENT, FOLLOW [215] -> GOTO 214
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [215] -> GOTO 214
	expression/L13 = . expression "(" ")", FOLLOW [215] -> GOTO 214
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [215] -> GOTO 214
	iexpression = . expression indirection IDENT, FOLLOW [215] -> GOTO 214
	expression/L12 = . iexpression, FOLLOW [215] -> GOTO 70
	expression/L2 = . BOOLEAN, FOLLOW [215] -> SHIFT BOOLEAN GOTO 71
	expression/L2 = . IDENT, FOLLOW [215] -> SHIFT IDENT GOTO 72
	expression/L2 = . DQSTRING, FOLLOW [215] -> SHIFT DQSTRING GOTO 73
	expression/L2 = . SQSTRING, FOLLOW [215] -> SHIFT SQSTRING GOTO 74
	expression/L2 = . CARDINAL, FOLLOW [215] -> SHIFT CARDINAL GOTO 75
	expression/L2 = . INTEGER, FOLLOW [215] -> SHIFT INTEGER GOTO 76
	expression/L2 = . FLOAT, FOLLOW [215] -> SHIFT FLOAT GOTO 77
	expression/L2 = . "(" expression ")", FOLLOW [215] -> SHIFT '(' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [215] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [215] -> SHIFT '{' GOTO 95
	expression/L9 = . "&" expression, FOLLOW [215] -> SHIFT '&' GOTO 80
	expression/L1 = . "new" typespec ":" expression, FOLLOW [215] -> SHIFT "new" GOTO 86
	expression/L2 = . "null", FOLLOW [215] -> SHIFT "null" GOTO 87
	expression/L9 = . "+" expression, FOLLOW [215] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [215] -> SHIFT '-' GOTO 89
	expression/L9 = . "~" expression, FOLLOW [215] -> SHIFT '~' GOTO 90
	expression/L9 = . "!" expression, FOLLOW [215] -> SHIFT '!' GOTO 91
	expression/L12 = . "*" expression, FOLLOW [215] -> SHIFT '*' GOTO 92
[143]
	expression/L3 = . expression "=" expression, FOLLOW [215] -> GOTO 215
	expression/L3 = . expression "+=" expression, FOLLOW [215] -> GOTO 215
	expression/L3 = . expression "-=" expression, FOLLOW [215] -> GOTO 215
	expression/L3 = . expression "*=" expression, FOLLOW [215] -> GOTO 215
	expression/L3 = . expression "/=" expression, FOLLOW [215] -> GOTO 215
	expression/L3 = . expression "%=" expression, FOLLOW [215] -> GOTO 215
	expression/L3 = . expression "&&=" expression, FOLLOW [215] -> GOTO 215
	expression/L3 = . expression "||=" expression, FOLLOW [215] -> GOTO 215
	expression/L3 = . expression "&=" expression, FOLLOW [215] -> GOTO 215
	expression/L3 = . expression "|=" expression, FOLLOW [215] -> GOTO 215
	expression/L3 = . expression "<<=" expression, FOLLOW [215] -> GOTO 215
	expression/L3 = . expression ">>=" expression, FOLLOW [215] -> GOTO 215
	expression/L4 = . expression "||" expression, FOLLOW [215] -> GOTO 215
	expression/L5 = . expression "&&" expression, FOLLOW [215] -> GOTO 215
	expression/L6 = . expression "|" expression, FOLLOW [215] -> GOTO 215
	expression/L7 = . expression "^" expression, FOLLOW [215] -> GOTO 215
	expression/L7 = . expression "&" expression, FOLLOW [215] -> GOTO 215
	expression/L8 = . expression "==" expression, FOLLOW [215] -> GOTO 215
	expression/L8 = . expression "!=" expression, FOLLOW [215] -> GOTO 215
	expression/L8 = . expression "<=" expression, FOLLOW [215] -> GOTO 215
	expression/L8 = . expression "<" expression, FOLLOW [215] -> GOTO 215
	expression/L8 = . expression ">=" expression, FOLLOW [215] -> GOTO 215
	expression/L8 = . expression ">" expression, FOLLOW [215] -> GOTO 215
	expression/L9 = . expression "+" expression, FOLLOW [215] -> GOTO 215
	expression/L9 = . expression "-" expression, FOLLOW [215] -> GOTO 215
	expression/L10 = . expression "*" expression, FOLLOW [215] -> GOTO 215
	expression/L10 = expression "*" . expression, FOLLOW [215] -> GOTO 215
	expression/L10 = . expression "/" expression, FOLLOW [215] -> GOTO 215
	expression/L10 = . expression "%" expression, FOLLOW [215] -> GOTO 215
	expression/L11 = . expression "<<" expression, FOLLOW [215] -> GOTO 215
	expression/L11 = . expression ">>" expression, FOLLOW [215] -> GOTO 215
	expression/L12 = . expression "." IDENT, FOLLOW [215] -> GOTO 215
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [215] -> GOTO 215
	expression/L13 = . expression "(" ")", FOLLOW [215] -> GOTO 215
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [215] -> GOTO 215
	iexpression = . expression indirection IDENT, FOLLOW [215] -> GOTO 215
	expression/L12 = . iexpression, FOLLOW [215] -> GOTO 70
	expression/L2 = . BOOLEAN, FOLLOW [215] -> SHIFT BOOLEAN GOTO 71
	expression/L2 = . IDENT, FOLLOW [215] -> SHIFT IDENT GOTO 72
	expression/L2 = . DQSTRING, FOLLOW [215] -> SHIFT DQSTRING GOTO 73
	expression/L2 = . SQSTRING, FOLLOW [215] -> SHIFT SQSTRING GOTO 74
	expression/L2 = . CARDINAL, FOLLOW [215] -> SHIFT CARDINAL GOTO 75
	expression/L2 = . INTEGER, FOLLOW [215] -> SHIFT INTEGER GOTO 76
	expression/L2 = . FLOAT, FOLLOW [215] -> SHIFT FLOAT GOTO 77
	expression/L2 = . "(" expression ")", FOLLOW [215] -> SHIFT '(' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [215] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [215] -> SHIFT '{' GOTO 95
	expression/L9 = . "&" expression, FOLLOW [215] -> SHIFT '&' GOTO 80
	expression/L1 = . "new" typespec ":" expression, FOLLOW [215] -> SHIFT "new" GOTO 86
	expression/L2 = . "null", FOLLOW [215] -> SHIFT "null" GOTO 87
	expression/L9 = . "+" expression, FOLLOW [215] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [215] -> SHIFT '-' GOTO 89
	expression/L9 = . "~" expression, FOLLOW [215] -> SHIFT '~' GOTO 90
	expression/L9 = . "!" expression, FOLLOW [215] -> SHIFT '!' GOTO 91
	expression/L12 = . "*" expression, FOLLOW [215] -> SHIFT '*' GOTO 92
[144]
	expression/L3 = . expression "=" expression, FOLLOW [215] -> GOTO 216
	expression/L3 = . expression "+=" expression, FOLLOW [215] -> GOTO 216
	expression/L3 = . expression "-=" expression, FOLLOW [215] -> GOTO 216
	expression/L3 = . expression "*=" expression, FOLLOW [215] -> GOTO 216
	expression/L3 = . expression "/=" expression, FOLLOW [215] -> GOTO 216
	expression/L3 = . expression "%=" expression, FOLLOW [215] -> GOTO 216
	expression/L3 = . expression "&&=" expression, FOLLOW [215] -> GOTO 216
	expression/L3 = . expression "||=" expression, FOLLOW [215] -> GOTO 216
	expression/L3 = . expression "&=" expression, FOLLOW [215] -> GOTO 216
	expression/L3 = . expression "|=" expression, FOLLOW [215] -> GOTO 216
	expression/L3 = . expression "<<=" expression, FOLLOW [215] -> GOTO 216
	expression/L3 = . expression ">>=" expression, FOLLOW [215] -> GOTO 216
	expression/L4 = . expression "||" expression, FOLLOW [215] -> GOTO 216
	expression/L5 = . expression "&&" expression, FOLLOW [215] -> GOTO 216
	expression/L6 = . expression "|" expression, FOLLOW [215] -> GOTO 216
	expression/L7 = . expression "^" expression, FOLLOW [215] -> GOTO 216
	expression/L7 = . expression "&" expression, FOLLOW [215] -> GOTO 216
	expression/L8 = . expression "==" expression, FOLLOW [215] -> GOTO 216
	expression/L8 = . expression "!=" expression, FOLLOW [215] -> GOTO 216
	expression/L8 = . expression "<=" expression, FOLLOW [215] -> GOTO 216
	expression/L8 = . expression "<" expression, FOLLOW [215] -> GOTO 216
	expression/L8 = . expression ">=" expression, FOLLOW [215] -> GOTO 216
	expression/L8 = . expression ">" expression, FOLLOW [215] -> GOTO 216
	expression/L9 = . expression "+" expression, FOLLOW [215] -> GOTO 216
	expression/L9 = . expression "-" expression, FOLLOW [215] -> GOTO 216
	expression/L10 = . expression "*" expression, FOLLOW [215] -> GOTO 216
	expression/L10 = . expression "/" expression, FOLLOW [215] -> GOTO 216
	expression/L10 = expression "/" . expression, FOLLOW [215] -> GOTO 216
	expression/L10 = . expression "%" expression, FOLLOW [215] -> GOTO 216
	expression/L11 = . expression "<<" expression, FOLLOW [215] -> GOTO 216
	expression/L11 = . expression ">>" expression, FOLLOW [215] -> GOTO 216
	expression/L12 = . expression "." IDENT, FOLLOW [215] -> GOTO 216
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [215] -> GOTO 216
	expression/L13 = . expression "(" ")", FOLLOW [215] -> GOTO 216
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [215] -> GOTO 216
	iexpression = . expression indirection IDENT, FOLLOW [215] -> GOTO 216
	expression/L12 = . iexpression, FOLLOW [215] -> GOTO 70
	expression/L2 = . BOOLEAN, FOLLOW [215] -> SHIFT BOOLEAN GOTO 71
	expression/L2 = . IDENT, FOLLOW [215] -> SHIFT IDENT GOTO 72
	expression/L2 = . DQSTRING, FOLLOW [215] -> SHIFT DQSTRING GOTO 73
	expression/L2 = . SQSTRING, FOLLOW [215] -> SHIFT SQSTRING GOTO 74
	expression/L2 = . CARDINAL, FOLLOW [215] -> SHIFT CARDINAL GOTO 75
	expression/L2 = . INTEGER, FOLLOW [215] -> SHIFT INTEGER GOTO 76
	expression/L2 = . FLOAT, FOLLOW [215] -> SHIFT FLOAT GOTO 77
	expression/L2 = . "(" expression ")", FOLLOW [215] -> SHIFT '(' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [215] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [215] -> SHIFT '{' GOTO 95
	expression/L9 = . "&" expression, FOLLOW [215] -> SHIFT '&' GOTO 80
	expression/L1 = . "new" typespec ":" expression, FOLLOW [215] -> SHIFT "new" GOTO 86
	expression/L2 = . "null", FOLLOW [215] -> SHIFT "null" GOTO 87
	expression/L9 = . "+" expression, FOLLOW [215] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [215] -> SHIFT '-' GOTO 89
	expression/L9 = . "~" expression, FOLLOW [215] -> SHIFT '~' GOTO 90
	expression/L9 = . "!" expression, FOLLOW [215] -> SHIFT '!' GOTO 91
	expression/L12 = . "*" expression, FOLLOW [215] -> SHIFT '*' GOTO 92
[145]
	expression/L3 = . expression "=" expression, FOLLOW [215] -> GOTO 217
	expression/L3 = . expression "+=" expression, FOLLOW [215] -> GOTO 217
	expression/L3 = . expression "-=" expression, FOLLOW [215] -> GOTO 217
	expression/L3 = . expression "*=" expression, FOLLOW [215] -> GOTO 217
	expression/L3 = . expression "/=" expression, FOLLOW [215] -> GOTO 217
	expression/L3 = . expression "%=" expression, FOLLOW [215] -> GOTO 217
	expression/L3 = . expression "&&=" expression, FOLLOW [215] -> GOTO 217
	expression/L3 = . expression "||=" expression, FOLLOW [215] -> GOTO 217
	expression/L3 = . expression "&=" expression, FOLLOW [215] -> GOTO 217
	expression/L3 = . expression "|=" expression, FOLLOW [215] -> GOTO 217
	expression/L3 = . expression "<<=" expression, FOLLOW [215] -> GOTO 217
	expression/L3 = . expression ">>=" expression, FOLLOW [215] -> GOTO 217
	expression/L4 = . expression "||" expression, FOLLOW [215] -> GOTO 217
	expression/L5 = . expression "&&" expression, FOLLOW [215] -> GOTO 217
	expression/L6 = . expression "|" expression, FOLLOW [215] -> GOTO 217
	expression/L7 = . expression "^" expression, FOLLOW [215] -> GOTO 217
	expression/L7 = . expression "&" expression, FOLLOW [215] -> GOTO 217
	expression/L8 = . expression "==" expression, FOLLOW [215] -> GOTO 217
	expression/L8 = . expression "!=" expression, FOLLOW [215] -> GOTO 217
	expression/L8 = . expression "<=" expression, FOLLOW [215] -> GOTO 217
	expression/L8 = . expression "<" expression, FOLLOW [215] -> GOTO 217
	expression/L8 = . expression ">=" expression, FOLLOW [215] -> GOTO 217
	expression/L8 = . expression ">" expression, FOLLOW [215] -> GOTO 217
	expression/L9 = . expression "+" expression, FOLLOW [215] -> GOTO 217
	expression/L9 = . expression "-" expression, FOLLOW [215] -> GOTO 217
	expression/L10 = . expression "*" expression, FOLLOW [215] -> GOTO 217
	expression/L10 = . expression "/" expression, FOLLOW [215] -> GOTO 217
	expression/L10 = . expression "%" expression, FOLLOW [215] -> GOTO 217
	expression/L10 = expression "%" . expression, FOLLOW [215] -> GOTO 217
	expression/L11 = . expression "<<" expression, FOLLOW [215] -> GOTO 217
	expression/L11 = . expression ">>" expression, FOLLOW [215] -> GOTO 217
	expression/L12 = . expression "." IDENT, FOLLOW [215] -> GOTO 217
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [215] -> GOTO 217
	expression/L13 = . expression "(" ")", FOLLOW [215] -> GOTO 217
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [215] -> GOTO 217
	iexpression = . expression indirection IDENT, FOLLOW [215] -> GOTO 217
	expression/L12 = . iexpression, FOLLOW [215] -> GOTO 70
	expression/L2 = . BOOLEAN, FOLLOW [215] -> SHIFT BOOLEAN GOTO 71
	expression/L2 = . IDENT, FOLLOW [215] -> SHIFT IDENT GOTO 72
	expression/L2 = . DQSTRING, FOLLOW [215] -> SHIFT DQSTRING GOTO 73
	expression/L2 = . SQSTRING, FOLLOW [215] -> SHIFT SQSTRING GOTO 74
	expression/L2 = . CARDINAL, FOLLOW [215] -> SHIFT CARDINAL GOTO 75
	expression/L2 = . INTEGER, FOLLOW [215] -> SHIFT INTEGER GOTO 76
	expression/L2 = . FLOAT, FOLLOW [215] -> SHIFT FLOAT GOTO 77
	expression/L2 = . "(" expression ")", FOLLOW [215] -> SHIFT '(' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [215] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [215] -> SHIFT '{' GOTO 95
	expression/L9 = . "&" expression, FOLLOW [215] -> SHIFT '&' GOTO 80
	expression/L1 = . "new" typespec ":" expression, FOLLOW [215] -> SHIFT "new" GOTO 86
	expression/L2 = . "null", FOLLOW [215] -> SHIFT "null" GOTO 87
	expression/L9 = . "+" expression, FOLLOW [215] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [215] -> SHIFT '-' GOTO 89
	expression/L9 = . "~" expression, FOLLOW [215] -> SHIFT '~' GOTO 90
	expression/L9 = . "!" expression, FOLLOW [215] -> SHIFT '!' GOTO 91
	expression/L12 = . "*" expression, FOLLOW [215] -> SHIFT '*' GOTO 92
[146]
	expression/L3 = . expression "=" expression, FOLLOW [215] -> GOTO 218
	expression/L3 = . expression "+=" expression, FOLLOW [215] -> GOTO 218
	expression/L3 = . expression "-=" expression, FOLLOW [215] -> GOTO 218
	expression/L3 = . expression "*=" expression, FOLLOW [215] -> GOTO 218
	expression/L3 = . expression "/=" expression, FOLLOW [215] -> GOTO 218
	expression/L3 = . expression "%=" expression, FOLLOW [215] -> GOTO 218
	expression/L3 = . expression "&&=" expression, FOLLOW [215] -> GOTO 218
	expression/L3 = . expression "||=" expression, FOLLOW [215] -> GOTO 218
	expression/L3 = . expression "&=" expression, FOLLOW [215] -> GOTO 218
	expression/L3 = . expression "|=" expression, FOLLOW [215] -> GOTO 218
	expression/L3 = . expression "<<=" expression, FOLLOW [215] -> GOTO 218
	expression/L3 = . expression ">>=" expression, FOLLOW [215] -> GOTO 218
	expression/L4 = . expression "||" expression, FOLLOW [215] -> GOTO 218
	expression/L5 = . expression "&&" expression, FOLLOW [215] -> GOTO 218
	expression/L6 = . expression "|" expression, FOLLOW [215] -> GOTO 218
	expression/L7 = . expression "^" expression, FOLLOW [215] -> GOTO 218
	expression/L7 = . expression "&" expression, FOLLOW [215] -> GOTO 218
	expression/L8 = . expression "==" expression, FOLLOW [215] -> GOTO 218
	expression/L8 = . expression "!=" expression, FOLLOW [215] -> GOTO 218
	expression/L8 = . expression "<=" expression, FOLLOW [215] -> GOTO 218
	expression/L8 = . expression "<" expression, FOLLOW [215] -> GOTO 218
	expression/L8 = . expression ">=" expression, FOLLOW [215] -> GOTO 218
	expression/L8 = . expression ">" expression, FOLLOW [215] -> GOTO 218
	expression/L9 = . expression "+" expression, FOLLOW [215] -> GOTO 218
	expression/L9 = . expression "-" expression, FOLLOW [215] -> GOTO 218
	expression/L10 = . expression "*" expression, FOLLOW [215] -> GOTO 218
	expression/L10 = . expression "/" expression, FOLLOW [215] -> GOTO 218
	expression/L10 = . expression "%" expression, FOLLOW [215] -> GOTO 218
	expression/L11 = . expression "<<" expression, FOLLOW [215] -> GOTO 218
	expression/L11 = expression "<<" . expression, FOLLOW [215] -> GOTO 218
	expression/L11 = . expression ">>" expression, FOLLOW [215] -> GOTO 218
	expression/L12 = . expression "." IDENT, FOLLOW [215] -> GOTO 218
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [215] -> GOTO 218
	expression/L13 = . expression "(" ")", FOLLOW [215] -> GOTO 218
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [215] -> GOTO 218
	iexpression = . expression indirection IDENT, FOLLOW [215] -> GOTO 218
	expression/L12 = . iexpression, FOLLOW [215] -> GOTO 70
	expression/L2 = . BOOLEAN, FOLLOW [215] -> SHIFT BOOLEAN GOTO 71
	expression/L2 = . IDENT, FOLLOW [215] -> SHIFT IDENT GOTO 72
	expression/L2 = . DQSTRING, FOLLOW [215] -> SHIFT DQSTRING GOTO 73
	expression/L2 = . SQSTRING, FOLLOW [215] -> SHIFT SQSTRING GOTO 74
	expression/L2 = . CARDINAL, FOLLOW [215] -> SHIFT CARDINAL GOTO 75
	expression/L2 = . INTEGER, FOLLOW [215] -> SHIFT INTEGER GOTO 76
	expression/L2 = . FLOAT, FOLLOW [215] -> SHIFT FLOAT GOTO 77
	expression/L2 = . "(" expression ")", FOLLOW [215] -> SHIFT '(' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [215] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [215] -> SHIFT '{' GOTO 95
	expression/L9 = . "&" expression, FOLLOW [215] -> SHIFT '&' GOTO 80
	expression/L1 = . "new" typespec ":" expression, FOLLOW [215] -> SHIFT "new" GOTO 86
	expression/L2 = . "null", FOLLOW [215] -> SHIFT "null" GOTO 87
	expression/L9 = . "+" expression, FOLLOW [215] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [215] -> SHIFT '-' GOTO 89
	expression/L9 = . "~" expression, FOLLOW [215] -> SHIFT '~' GOTO 90
	expression/L9 = . "!" expression, FOLLOW [215] -> SHIFT '!' GOTO 91
	expression/L12 = . "*" expression, FOLLOW [215] -> SHIFT '*' GOTO 92
[147]
	expression/L3 = . expression "=" expression, FOLLOW [215] -> GOTO 219
	expression/L3 = . expression "+=" expression, FOLLOW [215] -> GOTO 219
	expression/L3 = . expression "-=" expression, FOLLOW [215] -> GOTO 219
	expression/L3 = . expression "*=" expression, FOLLOW [215] -> GOTO 219
	expression/L3 = . expression "/=" expression, FOLLOW [215] -> GOTO 219
	expression/L3 = . expression "%=" expression, FOLLOW [215] -> GOTO 219
	expression/L3 = . expression "&&=" expression, FOLLOW [215] -> GOTO 219
	expression/L3 = . expression "||=" expression, FOLLOW [215] -> GOTO 219
	expression/L3 = . expression "&=" expression, FOLLOW [215] -> GOTO 219
	expression/L3 = . expression "|=" expression, FOLLOW [215] -> GOTO 219
	expression/L3 = . expression "<<=" expression, FOLLOW [215] -> GOTO 219
	expression/L3 = . expression ">>=" expression, FOLLOW [215] -> GOTO 219
	expression/L4 = . expression "||" expression, FOLLOW [215] -> GOTO 219
	expression/L5 = . expression "&&" expression, FOLLOW [215] -> GOTO 219
	expression/L6 = . expression "|" expression, FOLLOW [215] -> GOTO 219
	expression/L7 = . expression "^" expression, FOLLOW [215] -> GOTO 219
	expression/L7 = . expression "&" expression, FOLLOW [215] -> GOTO 219
	expression/L8 = . expression "==" expression, FOLLOW [215] -> GOTO 219
	expression/L8 = . expression "!=" expression, FOLLOW [215] -> GOTO 219
	expression/L8 = . expression "<=" expression, FOLLOW [215] -> GOTO 219
	expression/L8 = . expression "<" expression, FOLLOW [215] -> GOTO 219
	expression/L8 = . expression ">=" expression, FOLLOW [215] -> GOTO 219
	expression/L8 = . expression ">" expression, FOLLOW [215] -> GOTO 219
	expression/L9 = . expression "+" expression, FOLLOW [215] -> GOTO 219
	expression/L9 = . expression "-" expression, FOLLOW [215] -> GOTO 219
	expression/L10 = . expression "*" expression, FOLLOW [215] -> GOTO 219
	expression/L10 = . expression "/" expression, FOLLOW [215] -> GOTO 219
	expression/L10 = . expression "%" expression, FOLLOW [215] -> GOTO 219
	expression/L11 = . expression "<<" expression, FOLLOW [215] -> GOTO 219
	expression/L11 = . expression ">>" expression, FOLLOW [215] -> GOTO 219
	expression/L11 = expression ">>" . expression, FOLLOW [215] -> GOTO 219
	expression/L12 = . expression "." IDENT, FOLLOW [215] -> GOTO 219
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [215] -> GOTO 219
	expression/L13 = . expression "(" ")", FOLLOW [215] -> GOTO 219
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [215] -> GOTO 219
	iexpression = . expression indirection IDENT, FOLLOW [215] -> GOTO 219
	expression/L12 = . iexpression, FOLLOW [215] -> GOTO 70
	expression/L2 = . BOOLEAN, FOLLOW [215] -> SHIFT BOOLEAN GOTO 71
	expression/L2 = . IDENT, FOLLOW [215] -> SHIFT IDENT GOTO 72
	expression/L2 = . DQSTRING, FOLLOW [215] -> SHIFT DQSTRING GOTO 73
	expression/L2 = . SQSTRING, FOLLOW [215] -> SHIFT SQSTRING GOTO 74
	expression/L2 = . CARDINAL, FOLLOW [215] -> SHIFT CARDINAL GOTO 75
	expression/L2 = . INTEGER, FOLLOW [215] -> SHIFT INTEGER GOTO 76
	expression/L2 = . FLOAT, FOLLOW [215] -> SHIFT FLOAT GOTO 77
	expression/L2 = . "(" expression ")", FOLLOW [215] -> SHIFT '(' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [215] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [215] -> SHIFT '{' GOTO 95
	expression/L9 = . "&" expression, FOLLOW [215] -> SHIFT '&' GOTO 80
	expression/L1 = . "new" typespec ":" expression, FOLLOW [215] -> SHIFT "new" GOTO 86
	expression/L2 = . "null", FOLLOW [215] -> SHIFT "null" GOTO 87
	expression/L9 = . "+" expression, FOLLOW [215] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [215] -> SHIFT '-' GOTO 89
	expression/L9 = . "~" expression, FOLLOW [215] -> SHIFT '~' GOTO 90
	expression/L9 = . "!" expression, FOLLOW [215] -> SHIFT '!' GOTO 91
	expression/L12 = . "*" expression, FOLLOW [215] -> SHIFT '*' GOTO 92
[148]
	expression/L12 = expression "." . IDENT, FOLLOW [215] -> SHIFT IDENT GOTO 220
[149]
	indirection = "->" . indirection, FOLLOW [8] -> GOTO 221
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 149
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 149
	indirection = "->" . (90), FOLLOW [8] -> REDUCE indirection #1 CALL count
[150]
	iexpression = expression . indirection IDENT, FOLLOW [215] -> GOTO 114
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [215] -> SHIFT '(' GOTO 115
	expression/L13 = expression . "(" ")", FOLLOW [215] -> SHIFT '(' GOTO 115
	expression/L2 = "(" expression . ")", FOLLOW [215] -> SHIFT ')' GOTO 222
	expression/L7 = expression . "&" expression, FOLLOW [215] -> SHIFT '&' GOTO 117
	expression/L7 = expression . "^" expression, FOLLOW [215] -> SHIFT '^' GOTO 118
	expression/L3 = expression . "=" expression, FOLLOW [215] -> SHIFT '=' GOTO 119
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [215] -> SHIFT '[' GOTO 120
	expression/L3 = expression . "+=" expression, FOLLOW [215] -> SHIFT "+=" GOTO 121
	expression/L3 = expression . "-=" expression, FOLLOW [215] -> SHIFT "-=" GOTO 122
	expression/L3 = expression . "*=" expression, FOLLOW [215] -> SHIFT "*=" GOTO 123
	expression/L3 = expression . "/=" expression, FOLLOW [215] -> SHIFT "/=" GOTO 124
	expression/L3 = expression . "%=" expression, FOLLOW [215] -> SHIFT "%=" GOTO 125
	expression/L3 = expression . "&&=" expression, FOLLOW [215] -> SHIFT "&&=" GOTO 126
	expression/L3 = expression . "||=" expression, FOLLOW [215] -> SHIFT "||=" GOTO 127
	expression/L3 = expression . "&=" expression, FOLLOW [215] -> SHIFT "&=" GOTO 128
	expression/L3 = expression . "|=" expression, FOLLOW [215] -> SHIFT "|=" GOTO 129
	expression/L3 = expression . "<<=" expression, FOLLOW [215] -> SHIFT "<<=" GOTO 130
	expression/L3 = expression . ">>=" expression, FOLLOW [215] -> SHIFT ">>=" GOTO 131
	expression/L4 = expression . "||" expression, FOLLOW [215] -> SHIFT "||" GOTO 132
	expression/L5 = expression . "&&" expression, FOLLOW [215] -> SHIFT "&&" GOTO 133
	expression/L6 = expression . "|" expression, FOLLOW [215] -> SHIFT '|' GOTO 134
	expression/L8 = expression . "==" expression, FOLLOW [215] -> SHIFT "==" GOTO 135
	expression/L8 = expression . "!=" expression, FOLLOW [215] -> SHIFT "!=" GOTO 136
	expression/L8 = expression . "<=" expression, FOLLOW [215] -> SHIFT "<=" GOTO 137
	expression/L8 = expression . "<" expression, FOLLOW [215] -> SHIFT '<' GOTO 138
	expression/L8 = expression . ">=" expression, FOLLOW [215] -> SHIFT ">=" GOTO 139
	expression/L8 = expression . ">" expression, FOLLOW [215] -> SHIFT '>' GOTO 140
	expression/L9 = expression . "+" expression, FOLLOW [215] -> SHIFT '+' GOTO 141
	expression/L9 = expression . "-" expression, FOLLOW [215] -> SHIFT '-' GOTO 142
	expression/L10 = expression . "*" expression, FOLLOW [215] -> SHIFT '*' GOTO 143
	expression/L10 = expression . "/" expression, FOLLOW [215] -> SHIFT '/' GOTO 144
	expression/L10 = expression . "%" expression, FOLLOW [215] -> SHIFT '%' GOTO 145
	expression/L11 = expression . "<<" expression, FOLLOW [215] -> SHIFT "<<" GOTO 146
	expression/L11 = expression . ">>" expression, FOLLOW [215] -> SHIFT ">>" GOTO 147
	expression/L12 = expression . "." IDENT, FOLLOW [215] -> SHIFT '.' GOTO 148
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 149
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 149
[151]
	statement/L1 = "{" codeblock . "}", FOLLOW [90] -> SHIFT '}' GOTO 223
[152]
	iexpression = expression . indirection IDENT, FOLLOW [163] -> GOTO 114
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [163] -> SHIFT '(' GOTO 115
	expression/L13 = expression . "(" ")", FOLLOW [163] -> SHIFT '(' GOTO 115
	statement/L1 = expression . ";", FOLLOW [90] -> SHIFT ';' GOTO 116
	expressionlist = expression . "," expressionlist, FOLLOW [11] -> SHIFT ',' GOTO 224
	expression/L7 = expression . "&" expression, FOLLOW [163] -> SHIFT '&' GOTO 117
	expression/L7 = expression . "^" expression, FOLLOW [163] -> SHIFT '^' GOTO 118
	expression/L3 = expression . "=" expression, FOLLOW [163] -> SHIFT '=' GOTO 119
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [163] -> SHIFT '[' GOTO 120
	expression/L3 = expression . "+=" expression, FOLLOW [163] -> SHIFT "+=" GOTO 121
	expression/L3 = expression . "-=" expression, FOLLOW [163] -> SHIFT "-=" GOTO 122
	expression/L3 = expression . "*=" expression, FOLLOW [163] -> SHIFT "*=" GOTO 123
	expression/L3 = expression . "/=" expression, FOLLOW [163] -> SHIFT "/=" GOTO 124
	expression/L3 = expression . "%=" expression, FOLLOW [163] -> SHIFT "%=" GOTO 125
	expression/L3 = expression . "&&=" expression, FOLLOW [163] -> SHIFT "&&=" GOTO 126
	expression/L3 = expression . "||=" expression, FOLLOW [163] -> SHIFT "||=" GOTO 127
	expression/L3 = expression . "&=" expression, FOLLOW [163] -> SHIFT "&=" GOTO 128
	expression/L3 = expression . "|=" expression, FOLLOW [163] -> SHIFT "|=" GOTO 129
	expression/L3 = expression . "<<=" expression, FOLLOW [163] -> SHIFT "<<=" GOTO 130
	expression/L3 = expression . ">>=" expression, FOLLOW [163] -> SHIFT ">>=" GOTO 131
	expression/L4 = expression . "||" expression, FOLLOW [163] -> SHIFT "||" GOTO 132
	expression/L5 = expression . "&&" expression, FOLLOW [163] -> SHIFT "&&" GOTO 133
	expression/L6 = expression . "|" expression, FOLLOW [163] -> SHIFT '|' GOTO 134
	expression/L8 = expression . "==" expression, FOLLOW [163] -> SHIFT "==" GOTO 135
	expression/L8 = expression . "!=" expression, FOLLOW [163] -> SHIFT "!=" GOTO 136
	expression/L8 = expression . "<=" expression, FOLLOW [163] -> SHIFT "<=" GOTO 137
	expression/L8 = expression . "<" expression, FOLLOW [163] -> SHIFT '<' GOTO 138
	expression/L8 = expression . ">=" expression, FOLLOW [163] -> SHIFT ">=" GOTO 139
	expression/L8 = expression . ">" expression, FOLLOW [163] -> SHIFT '>' GOTO 140
	expression/L9 = expression . "+" expression, FOLLOW [163] -> SHIFT '+' GOTO 141
	expression/L9 = expression . "-" expression, FOLLOW [163] -> SHIFT '-' GOTO 142
	expression/L10 = expression . "*" expression, FOLLOW [163] -> SHIFT '*' GOTO 143
	expression/L10 = expression . "/" expression, FOLLOW [163] -> SHIFT '/' GOTO 144
	expression/L10 = expression . "%" expression, FOLLOW [163] -> SHIFT '%' GOTO 145
	expression/L11 = expression . "<<" expression, FOLLOW [163] -> SHIFT "<<" GOTO 146
	expression/L11 = expression . ">>" expression, FOLLOW [163] -> SHIFT ">>" GOTO 147
	expression/L12 = expression . "." IDENT, FOLLOW [163] -> SHIFT '.' GOTO 148
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 149
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 149
	expressionlist = expression ., FOLLOW [11] -> REDUCE expressionlist #1
[153]
	expression/L1 = "{" expressionlist . "}", FOLLOW [215] -> SHIFT '}' GOTO 225
[154]
	expression/L1 = "{" "}" . (43), FOLLOW [215] -> REDUCE expression #2 CALL structure
[155]
	iexpression = expression . indirection IDENT, FOLLOW [215] -> GOTO 114
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [215] -> SHIFT '(' GOTO 115
	expression/L13 = expression . "(" ")", FOLLOW [215] -> SHIFT '(' GOTO 115
	expression/L7 = expression . "&" expression, FOLLOW [215] -> SHIFT '&' GOTO 117
	expression/L7 = expression . "^" expression, FOLLOW [215] -> SHIFT '^' GOTO 118
	expression/L3 = expression . "=" expression, FOLLOW [215] -> SHIFT '=' GOTO 119
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [215] -> SHIFT '[' GOTO 120
	expression/L3 = expression . "+=" expression, FOLLOW [215] -> SHIFT "+=" GOTO 121
	expression/L3 = expression . "-=" expression, FOLLOW [215] -> SHIFT "-=" GOTO 122
	expression/L3 = expression . "*=" expression, FOLLOW [215] -> SHIFT "*=" GOTO 123
	expression/L3 = expression . "/=" expression, FOLLOW [215] -> SHIFT "/=" GOTO 124
	expression/L3 = expression . "%=" expression, FOLLOW [215] -> SHIFT "%=" GOTO 125
	expression/L3 = expression . "&&=" expression, FOLLOW [215] -> SHIFT "&&=" GOTO 126
	expression/L3 = expression . "||=" expression, FOLLOW [215] -> SHIFT "||=" GOTO 127
	expression/L3 = expression . "&=" expression, FOLLOW [215] -> SHIFT "&=" GOTO 128
	expression/L3 = expression . "|=" expression, FOLLOW [215] -> SHIFT "|=" GOTO 129
	expression/L3 = expression . "<<=" expression, FOLLOW [215] -> SHIFT "<<=" GOTO 130
	expression/L3 = expression . ">>=" expression, FOLLOW [215] -> SHIFT ">>=" GOTO 131
	expression/L4 = expression . "||" expression, FOLLOW [215] -> SHIFT "||" GOTO 132
	expression/L5 = expression . "&&" expression, FOLLOW [215] -> SHIFT "&&" GOTO 133
	expression/L6 = expression . "|" expression, FOLLOW [215] -> SHIFT '|' GOTO 134
	expression/L8 = expression . "==" expression, FOLLOW [215] -> SHIFT "==" GOTO 135
	expression/L8 = expression . "!=" expression, FOLLOW [215] -> SHIFT "!=" GOTO 136
	expression/L8 = expression . "<=" expression, FOLLOW [215] -> SHIFT "<=" GOTO 137
	expression/L8 = expression . "<" expression, FOLLOW [215] -> SHIFT '<' GOTO 138
	expression/L8 = expression . ">=" expression, FOLLOW [215] -> SHIFT ">=" GOTO 139
	expression/L8 = expression . ">" expression, FOLLOW [215] -> SHIFT '>' GOTO 140
	expression/L9 = expression . "+" expression, FOLLOW [215] -> SHIFT '+' GOTO 141
	expression/L9 = expression . "-" expression, FOLLOW [215] -> SHIFT '-' GOTO 142
	expression/L10 = expression . "*" expression, FOLLOW [215] -> SHIFT '*' GOTO 143
	expression/L10 = expression . "/" expression, FOLLOW [215] -> SHIFT '/' GOTO 144
	expression/L10 = expression . "%" expression, FOLLOW [215] -> SHIFT '%' GOTO 145
	expression/L11 = expression . "<<" expression, FOLLOW [215] -> SHIFT "<<" GOTO 146
	expression/L11 = expression . ">>" expression, FOLLOW [215] -> SHIFT ">>" GOTO 147
	expression/L12 = expression . "." IDENT, FOLLOW [215] -> SHIFT '.' GOTO 148
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 149
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 149
	expression/L9 = "&" expression . (69), FOLLOW [215] -> REDUCE expression #2 CALL operator "&"
[156]
	statement/L1 = "var" variabledefinition . ";", FOLLOW [90] -> SHIFT ';' GOTO 226
[157]
	iexpression = expression . indirection IDENT, FOLLOW [89] -> GOTO 114
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [89] -> SHIFT '(' GOTO 115
	expression/L13 = expression . "(" ")", FOLLOW [89] -> SHIFT '(' GOTO 115
	statement/L1 = "return" expression . ";", FOLLOW [90] -> SHIFT ';' GOTO 227
	expression/L7 = expression . "&" expression, FOLLOW [89] -> SHIFT '&' GOTO 117
	expression/L7 = expression . "^" expression, FOLLOW [89] -> SHIFT '^' GOTO 118
	expression/L3 = expression . "=" expression, FOLLOW [89] -> SHIFT '=' GOTO 119
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [89] -> SHIFT '[' GOTO 120
	expression/L3 = expression . "+=" expression, FOLLOW [89] -> SHIFT "+=" GOTO 121
	expression/L3 = expression . "-=" expression, FOLLOW [89] -> SHIFT "-=" GOTO 122
	expression/L3 = expression . "*=" expression, FOLLOW [89] -> SHIFT "*=" GOTO 123
	expression/L3 = expression . "/=" expression, FOLLOW [89] -> SHIFT "/=" GOTO 124
	expression/L3 = expression . "%=" expression, FOLLOW [89] -> SHIFT "%=" GOTO 125
	expression/L3 = expression . "&&=" expression, FOLLOW [89] -> SHIFT "&&=" GOTO 126
	expression/L3 = expression . "||=" expression, FOLLOW [89] -> SHIFT "||=" GOTO 127
	expression/L3 = expression . "&=" expression, FOLLOW [89] -> SHIFT "&=" GOTO 128
	expression/L3 = expression . "|=" expression, FOLLOW [89] -> SHIFT "|=" GOTO 129
	expression/L3 = expression . "<<=" expression, FOLLOW [89] -> SHIFT "<<=" GOTO 130
	expression/L3 = expression . ">>=" expression, FOLLOW [89] -> SHIFT ">>=" GOTO 131
	expression/L4 = expression . "||" expression, FOLLOW [89] -> SHIFT "||" GOTO 132
	expression/L5 = expression . "&&" expression, FOLLOW [89] -> SHIFT "&&" GOTO 133
	expression/L6 = expression . "|" expression, FOLLOW [89] -> SHIFT '|' GOTO 134
	expression/L8 = expression . "==" expression, FOLLOW [89] -> SHIFT "==" GOTO 135
	expression/L8 = expression . "!=" expression, FOLLOW [89] -> SHIFT "!=" GOTO 136
	expression/L8 = expression . "<=" expression, FOLLOW [89] -> SHIFT "<=" GOTO 137
	expression/L8 = expression . "<" expression, FOLLOW [89] -> SHIFT '<' GOTO 138
	expression/L8 = expression . ">=" expression, FOLLOW [89] -> SHIFT ">=" GOTO 139
	expression/L8 = expression . ">" expression, FOLLOW [89] -> SHIFT '>' GOTO 140
	expression/L9 = expression . "+" expression, FOLLOW [89] -> SHIFT '+' GOTO 141
	expression/L9 = expression . "-" expression, FOLLOW [89] -> SHIFT '-' GOTO 142
	expression/L10 = expression . "*" expression, FOLLOW [89] -> SHIFT '*' GOTO 143
	expression/L10 = expression . "/" expression, FOLLOW [89] -> SHIFT '/' GOTO 144
	expression/L10 = expression . "%" expression, FOLLOW [89] -> SHIFT '%' GOTO 145
	expression/L11 = expression . "<<" expression, FOLLOW [89] -> SHIFT "<<" GOTO 146
	expression/L11 = expression . ">>" expression, FOLLOW [89] -> SHIFT ">>" GOTO 147
	expression/L12 = expression . "." IDENT, FOLLOW [89] -> SHIFT '.' GOTO 148
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 149
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 149
[158]
	iexpression = expression . indirection IDENT, FOLLOW [89] -> GOTO 114
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [89] -> SHIFT '(' GOTO 115
	expression/L13 = expression . "(" ")", FOLLOW [89] -> SHIFT '(' GOTO 115
	statement/L1 = "delete" expression . ";", FOLLOW [90] -> SHIFT ';' GOTO 228
	expression/L7 = expression . "&" expression, FOLLOW [89] -> SHIFT '&' GOTO 117
	expression/L7 = expression . "^" expression, FOLLOW [89] -> SHIFT '^' GOTO 118
	expression/L3 = expression . "=" expression, FOLLOW [89] -> SHIFT '=' GOTO 119
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [89] -> SHIFT '[' GOTO 120
	expression/L3 = expression . "+=" expression, FOLLOW [89] -> SHIFT "+=" GOTO 121
	expression/L3 = expression . "-=" expression, FOLLOW [89] -> SHIFT "-=" GOTO 122
	expression/L3 = expression . "*=" expression, FOLLOW [89] -> SHIFT "*=" GOTO 123
	expression/L3 = expression . "/=" expression, FOLLOW [89] -> SHIFT "/=" GOTO 124
	expression/L3 = expression . "%=" expression, FOLLOW [89] -> SHIFT "%=" GOTO 125
	expression/L3 = expression . "&&=" expression, FOLLOW [89] -> SHIFT "&&=" GOTO 126
	expression/L3 = expression . "||=" expression, FOLLOW [89] -> SHIFT "||=" GOTO 127
	expression/L3 = expression . "&=" expression, FOLLOW [89] -> SHIFT "&=" GOTO 128
	expression/L3 = expression . "|=" expression, FOLLOW [89] -> SHIFT "|=" GOTO 129
	expression/L3 = expression . "<<=" expression, FOLLOW [89] -> SHIFT "<<=" GOTO 130
	expression/L3 = expression . ">>=" expression, FOLLOW [89] -> SHIFT ">>=" GOTO 131
	expression/L4 = expression . "||" expression, FOLLOW [89] -> SHIFT "||" GOTO 132
	expression/L5 = expression . "&&" expression, FOLLOW [89] -> SHIFT "&&" GOTO 133
	expression/L6 = expression . "|" expression, FOLLOW [89] -> SHIFT '|' GOTO 134
	expression/L8 = expression . "==" expression, FOLLOW [89] -> SHIFT "==" GOTO 135
	expression/L8 = expression . "!=" expression, FOLLOW [89] -> SHIFT "!=" GOTO 136
	expression/L8 = expression . "<=" expression, FOLLOW [89] -> SHIFT "<=" GOTO 137
	expression/L8 = expression . "<" expression, FOLLOW [89] -> SHIFT '<' GOTO 138
	expression/L8 = expression . ">=" expression, FOLLOW [89] -> SHIFT ">=" GOTO 139
	expression/L8 = expression . ">" expression, FOLLOW [89] -> SHIFT '>' GOTO 140
	expression/L9 = expression . "+" expression, FOLLOW [89] -> SHIFT '+' GOTO 141
	expression/L9 = expression . "-" expression, FOLLOW [89] -> SHIFT '-' GOTO 142
	expression/L10 = expression . "*" expression, FOLLOW [89] -> SHIFT '*' GOTO 143
	expression/L10 = expression . "/" expression, FOLLOW [89] -> SHIFT '/' GOTO 144
	expression/L10 = expression . "%" expression, FOLLOW [89] -> SHIFT '%' GOTO 145
	expression/L11 = expression . "<<" expression, FOLLOW [89] -> SHIFT "<<" GOTO 146
	expression/L11 = expression . ">>" expression, FOLLOW [89] -> SHIFT ">>" GOTO 147
	expression/L12 = expression . "." IDENT, FOLLOW [89] -> SHIFT '.' GOTO 148
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 149
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 149
[159]
	statement/L1 = "if" "(" . expression ")" "{" codeblock "}", FOLLOW [90] -> GOTO 229
	statement/L1 = "if" "(" . expression ")" "{" codeblock "}" "else" "{" codeblock "}", FOLLOW [90] -> GOTO 229
	expression/L3 = . expression "=" expression, FOLLOW [206] -> GOTO 229
	expression/L3 = . expression "+=" expression, FOLLOW [206] -> GOTO 229
	expression/L3 = . expression "-=" expression, FOLLOW [206] -> GOTO 229
	expression/L3 = . expression "*=" expression, FOLLOW [206] -> GOTO 229
	expression/L3 = . expression "/=" expression, FOLLOW [206] -> GOTO 229
	expression/L3 = . expression "%=" expression, FOLLOW [206] -> GOTO 229
	expression/L3 = . expression "&&=" expression, FOLLOW [206] -> GOTO 229
	expression/L3 = . expression "||=" expression, FOLLOW [206] -> GOTO 229
	expression/L3 = . expression "&=" expression, FOLLOW [206] -> GOTO 229
	expression/L3 = . expression "|=" expression, FOLLOW [206] -> GOTO 229
	expression/L3 = . expression "<<=" expression, FOLLOW [206] -> GOTO 229
	expression/L3 = . expression ">>=" expression, FOLLOW [206] -> GOTO 229
	expression/L4 = . expression "||" expression, FOLLOW [206] -> GOTO 229
	expression/L5 = . expression "&&" expression, FOLLOW [206] -> GOTO 229
	expression/L6 = . expression "|" expression, FOLLOW [206] -> GOTO 229
	expression/L7 = . expression "^" expression, FOLLOW [206] -> GOTO 229
	expression/L7 = . expression "&" expression, FOLLOW [206] -> GOTO 229
	expression/L8 = . expression "==" expression, FOLLOW [206] -> GOTO 229
	expression/L8 = . expression "!=" expression, FOLLOW [206] -> GOTO 229
	expression/L8 = . expression "<=" expression, FOLLOW [206] -> GOTO 229
	expression/L8 = . expression "<" expression, FOLLOW [206] -> GOTO 229
	expression/L8 = . expression ">=" expression, FOLLOW [206] -> GOTO 229
	expression/L8 = . expression ">" expression, FOLLOW [206] -> GOTO 229
	expression/L9 = . expression "+" expression, FOLLOW [206] -> GOTO 229
	expression/L9 = . expression "-" expression, FOLLOW [206] -> GOTO 229
	expression/L10 = . expression "*" expression, FOLLOW [206] -> GOTO 229
	expression/L10 = . expression "/" expression, FOLLOW [206] -> GOTO 229
	expression/L10 = . expression "%" expression, FOLLOW [206] -> GOTO 229
	expression/L11 = . expression "<<" expression, FOLLOW [206] -> GOTO 229
	expression/L11 = . expression ">>" expression, FOLLOW [206] -> GOTO 229
	expression/L12 = . expression "." IDENT, FOLLOW [206] -> GOTO 229
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [206] -> GOTO 229
	expression/L13 = . expression "(" ")", FOLLOW [206] -> GOTO 229
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [206] -> GOTO 229
	iexpression = . expression indirection IDENT, FOLLOW [206] -> GOTO 229
	expression/L12 = . iexpression, FOLLOW [206] -> GOTO 70
	expression/L2 = . BOOLEAN, FOLLOW [206] -> SHIFT BOOLEAN GOTO 71
	expression/L2 = . IDENT, FOLLOW [206] -> SHIFT IDENT GOTO 72
	expression/L2 = . DQSTRING, FOLLOW [206] -> SHIFT DQSTRING GOTO 73
	expression/L2 = . SQSTRING, FOLLOW [206] -> SHIFT SQSTRING GOTO 74
	expression/L2 = . CARDINAL, FOLLOW [206] -> SHIFT CARDINAL GOTO 75
	expression/L2 = . INTEGER, FOLLOW [206] -> SHIFT INTEGER GOTO 76
	expression/L2 = . FLOAT, FOLLOW [206] -> SHIFT FLOAT GOTO 77
	expression/L2 = . "(" expression ")", FOLLOW [206] -> SHIFT '(' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [206] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [206] -> SHIFT '{' GOTO 95
	expression/L9 = . "&" expression, FOLLOW [206] -> SHIFT '&' GOTO 80
	expression/L1 = . "new" typespec ":" expression, FOLLOW [206] -> SHIFT "new" GOTO 86
	expression/L2 = . "null", FOLLOW [206] -> SHIFT "null" GOTO 87
	expression/L9 = . "+" expression, FOLLOW [206] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [206] -> SHIFT '-' GOTO 89
	expression/L9 = . "~" expression, FOLLOW [206] -> SHIFT '~' GOTO 90
	expression/L9 = . "!" expression, FOLLOW [206] -> SHIFT '!' GOTO 91
	expression/L12 = . "*" expression, FOLLOW [206] -> SHIFT '*' GOTO 92
[160]
	statement/L1 = "while" "(" . expression ")" "{" codeblock "}", FOLLOW [90] -> GOTO 230
	expression/L3 = . expression "=" expression, FOLLOW [206] -> GOTO 230
	expression/L3 = . expression "+=" expression, FOLLOW [206] -> GOTO 230
	expression/L3 = . expression "-=" expression, FOLLOW [206] -> GOTO 230
	expression/L3 = . expression "*=" expression, FOLLOW [206] -> GOTO 230
	expression/L3 = . expression "/=" expression, FOLLOW [206] -> GOTO 230
	expression/L3 = . expression "%=" expression, FOLLOW [206] -> GOTO 230
	expression/L3 = . expression "&&=" expression, FOLLOW [206] -> GOTO 230
	expression/L3 = . expression "||=" expression, FOLLOW [206] -> GOTO 230
	expression/L3 = . expression "&=" expression, FOLLOW [206] -> GOTO 230
	expression/L3 = . expression "|=" expression, FOLLOW [206] -> GOTO 230
	expression/L3 = . expression "<<=" expression, FOLLOW [206] -> GOTO 230
	expression/L3 = . expression ">>=" expression, FOLLOW [206] -> GOTO 230
	expression/L4 = . expression "||" expression, FOLLOW [206] -> GOTO 230
	expression/L5 = . expression "&&" expression, FOLLOW [206] -> GOTO 230
	expression/L6 = . expression "|" expression, FOLLOW [206] -> GOTO 230
	expression/L7 = . expression "^" expression, FOLLOW [206] -> GOTO 230
	expression/L7 = . expression "&" expression, FOLLOW [206] -> GOTO 230
	expression/L8 = . expression "==" expression, FOLLOW [206] -> GOTO 230
	expression/L8 = . expression "!=" expression, FOLLOW [206] -> GOTO 230
	expression/L8 = . expression "<=" expression, FOLLOW [206] -> GOTO 230
	expression/L8 = . expression "<" expression, FOLLOW [206] -> GOTO 230
	expression/L8 = . expression ">=" expression, FOLLOW [206] -> GOTO 230
	expression/L8 = . expression ">" expression, FOLLOW [206] -> GOTO 230
	expression/L9 = . expression "+" expression, FOLLOW [206] -> GOTO 230
	expression/L9 = . expression "-" expression, FOLLOW [206] -> GOTO 230
	expression/L10 = . expression "*" expression, FOLLOW [206] -> GOTO 230
	expression/L10 = . expression "/" expression, FOLLOW [206] -> GOTO 230
	expression/L10 = . expression "%" expression, FOLLOW [206] -> GOTO 230
	expression/L11 = . expression "<<" expression, FOLLOW [206] -> GOTO 230
	expression/L11 = . expression ">>" expression, FOLLOW [206] -> GOTO 230
	expression/L12 = . expression "." IDENT, FOLLOW [206] -> GOTO 230
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [206] -> GOTO 230
	expression/L13 = . expression "(" ")", FOLLOW [206] -> GOTO 230
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [206] -> GOTO 230
	iexpression = . expression indirection IDENT, FOLLOW [206] -> GOTO 230
	expression/L12 = . iexpression, FOLLOW [206] -> GOTO 70
	expression/L2 = . BOOLEAN, FOLLOW [206] -> SHIFT BOOLEAN GOTO 71
	expression/L2 = . IDENT, FOLLOW [206] -> SHIFT IDENT GOTO 72
	expression/L2 = . DQSTRING, FOLLOW [206] -> SHIFT DQSTRING GOTO 73
	expression/L2 = . SQSTRING, FOLLOW [206] -> SHIFT SQSTRING GOTO 74
	expression/L2 = . CARDINAL, FOLLOW [206] -> SHIFT CARDINAL GOTO 75
	expression/L2 = . INTEGER, FOLLOW [206] -> SHIFT INTEGER GOTO 76
	expression/L2 = . FLOAT, FOLLOW [206] -> SHIFT FLOAT GOTO 77
	expression/L2 = . "(" expression ")", FOLLOW [206] -> SHIFT '(' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [206] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [206] -> SHIFT '{' GOTO 95
	expression/L9 = . "&" expression, FOLLOW [206] -> SHIFT '&' GOTO 80
	expression/L1 = . "new" typespec ":" expression, FOLLOW [206] -> SHIFT "new" GOTO 86
	expression/L2 = . "null", FOLLOW [206] -> SHIFT "null" GOTO 87
	expression/L9 = . "+" expression, FOLLOW [206] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [206] -> SHIFT '-' GOTO 89
	expression/L9 = . "~" expression, FOLLOW [206] -> SHIFT '~' GOTO 90
	expression/L9 = . "!" expression, FOLLOW [206] -> SHIFT '!' GOTO 91
	expression/L12 = . "*" expression, FOLLOW [206] -> SHIFT '*' GOTO 92
[161]
	expression/L1 = "new" typespec . ":" expression, FOLLOW [215] -> SHIFT ':' GOTO 231
[162]
	iexpression = expression . indirection IDENT, FOLLOW [215] -> GOTO 114
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [215] -> SHIFT '(' GOTO 115
	expression/L13 = expression . "(" ")", FOLLOW [215] -> SHIFT '(' GOTO 115
	expression/L7 = expression . "&" expression, FOLLOW [215] -> SHIFT '&' GOTO 117
	expression/L7 = expression . "^" expression, FOLLOW [215] -> SHIFT '^' GOTO 118
	expression/L3 = expression . "=" expression, FOLLOW [215] -> SHIFT '=' GOTO 119
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [215] -> SHIFT '[' GOTO 120
	expression/L3 = expression . "+=" expression, FOLLOW [215] -> SHIFT "+=" GOTO 121
	expression/L3 = expression . "-=" expression, FOLLOW [215] -> SHIFT "-=" GOTO 122
	expression/L3 = expression . "*=" expression, FOLLOW [215] -> SHIFT "*=" GOTO 123
	expression/L3 = expression . "/=" expression, FOLLOW [215] -> SHIFT "/=" GOTO 124
	expression/L3 = expression . "%=" expression, FOLLOW [215] -> SHIFT "%=" GOTO 125
	expression/L3 = expression . "&&=" expression, FOLLOW [215] -> SHIFT "&&=" GOTO 126
	expression/L3 = expression . "||=" expression, FOLLOW [215] -> SHIFT "||=" GOTO 127
	expression/L3 = expression . "&=" expression, FOLLOW [215] -> SHIFT "&=" GOTO 128
	expression/L3 = expression . "|=" expression, FOLLOW [215] -> SHIFT "|=" GOTO 129
	expression/L3 = expression . "<<=" expression, FOLLOW [215] -> SHIFT "<<=" GOTO 130
	expression/L3 = expression . ">>=" expression, FOLLOW [215] -> SHIFT ">>=" GOTO 131
	expression/L4 = expression . "||" expression, FOLLOW [215] -> SHIFT "||" GOTO 132
	expression/L5 = expression . "&&" expression, FOLLOW [215] -> SHIFT "&&" GOTO 133
	expression/L6 = expression . "|" expression, FOLLOW [215] -> SHIFT '|' GOTO 134
	expression/L8 = expression . "==" expression, FOLLOW [215] -> SHIFT "==" GOTO 135
	expression/L8 = expression . "!=" expression, FOLLOW [215] -> SHIFT "!=" GOTO 136
	expression/L8 = expression . "<=" expression, FOLLOW [215] -> SHIFT "<=" GOTO 137
	expression/L8 = expression . "<" expression, FOLLOW [215] -> SHIFT '<' GOTO 138
	expression/L8 = expression . ">=" expression, FOLLOW [215] -> SHIFT ">=" GOTO 139
	expression/L8 = expression . ">" expression, FOLLOW [215] -> SHIFT '>' GOTO 140
	expression/L9 = expression . "+" expression, FOLLOW [215] -> SHIFT '+' GOTO 141
	expression/L9 = expression . "-" expression, FOLLOW [215] -> SHIFT '-' GOTO 142
	expression/L10 = expression . "*" expression, FOLLOW [215] -> SHIFT '*' GOTO 143
	expression/L10 = expression . "/" expression, FOLLOW [215] -> SHIFT '/' GOTO 144
	expression/L10 = expression . "%" expression, FOLLOW [215] -> SHIFT '%' GOTO 145
	expression/L11 = expression . "<<" expression, FOLLOW [215] -> SHIFT "<<" GOTO 146
	expression/L11 = expression . ">>" expression, FOLLOW [215] -> SHIFT ">>" GOTO 147
	expression/L12 = expression . "." IDENT, FOLLOW [215] -> SHIFT '.' GOTO 148
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 149
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 149
	expression/L9 = "+" expression . (76), FOLLOW [215] -> REDUCE expression #2 CALL operator "+"
[163]
	iexpression = expression . indirection IDENT, FOLLOW [215] -> GOTO 114
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [215] -> SHIFT '(' GOTO 115
	expression/L13 = expression . "(" ")", FOLLOW [215] -> SHIFT '(' GOTO 115
	expression/L7 = expression . "&" expression, FOLLOW [215] -> SHIFT '&' GOTO 117
	expression/L7 = expression . "^" expression, FOLLOW [215] -> SHIFT '^' GOTO 118
	expression/L3 = expression . "=" expression, FOLLOW [215] -> SHIFT '=' GOTO 119
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [215] -> SHIFT '[' GOTO 120
	expression/L3 = expression . "+=" expression, FOLLOW [215] -> SHIFT "+=" GOTO 121
	expression/L3 = expression . "-=" expression, FOLLOW [215] -> SHIFT "-=" GOTO 122
	expression/L3 = expression . "*=" expression, FOLLOW [215] -> SHIFT "*=" GOTO 123
	expression/L3 = expression . "/=" expression, FOLLOW [215] -> SHIFT "/=" GOTO 124
	expression/L3 = expression . "%=" expression, FOLLOW [215] -> SHIFT "%=" GOTO 125
	expression/L3 = expression . "&&=" expression, FOLLOW [215] -> SHIFT "&&=" GOTO 126
	expression/L3 = expression . "||=" expression, FOLLOW [215] -> SHIFT "||=" GOTO 127
	expression/L3 = expression . "&=" expression, FOLLOW [215] -> SHIFT "&=" GOTO 128
	expression/L3 = expression . "|=" expression, FOLLOW [215] -> SHIFT "|=" GOTO 129
	expression/L3 = expression . "<<=" expression, FOLLOW [215] -> SHIFT "<<=" GOTO 130
	expression/L3 = expression . ">>=" expression, FOLLOW [215] -> SHIFT ">>=" GOTO 131
	expression/L4 = expression . "||" expression, FOLLOW [215] -> SHIFT "||" GOTO 132
	expression/L5 = expression . "&&" expression, FOLLOW [215] -> SHIFT "&&" GOTO 133
	expression/L6 = expression . "|" expression, FOLLOW [215] -> SHIFT '|' GOTO 134
	expression/L8 = expression . "==" expression, FOLLOW [215] -> SHIFT "==" GOTO 135
	expression/L8 = expression . "!=" expression, FOLLOW [215] -> SHIFT "!=" GOTO 136
	expression/L8 = expression . "<=" expression, FOLLOW [215] -> SHIFT "<=" GOTO 137
	expression/L8 = expression . "<" expression, FOLLOW [215] -> SHIFT '<' GOTO 138
	expression/L8 = expression . ">=" expression, FOLLOW [215] -> SHIFT ">=" GOTO 139
	expression/L8 = expression . ">" expression, FOLLOW [215] -> SHIFT '>' GOTO 140
	expression/L9 = expression . "+" expression, FOLLOW [215] -> SHIFT '+' GOTO 141
	expression/L9 = expression . "-" expression, FOLLOW [215] -> SHIFT '-' GOTO 142
	expression/L10 = expression . "*" expression, FOLLOW [215] -> SHIFT '*' GOTO 143
	expression/L10 = expression . "/" expression, FOLLOW [215] -> SHIFT '/' GOTO 144
	expression/L10 = expression . "%" expression, FOLLOW [215] -> SHIFT '%' GOTO 145
	expression/L11 = expression . "<<" expression, FOLLOW [215] -> SHIFT "<<" GOTO 146
	expression/L11 = expression . ">>" expression, FOLLOW [215] -> SHIFT ">>" GOTO 147
	expression/L12 = expression . "." IDENT, FOLLOW [215] -> SHIFT '.' GOTO 148
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 149
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 149
	expression/L9 = "-" expression . (77), FOLLOW [215] -> REDUCE expression #2 CALL operator "-"
[164]
	iexpression = expression . indirection IDENT, FOLLOW [215] -> GOTO 114
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [215] -> SHIFT '(' GOTO 115
	expression/L13 = expression . "(" ")", FOLLOW [215] -> SHIFT '(' GOTO 115
	expression/L7 = expression . "&" expression, FOLLOW [215] -> SHIFT '&' GOTO 117
	expression/L7 = expression . "^" expression, FOLLOW [215] -> SHIFT '^' GOTO 118
	expression/L3 = expression . "=" expression, FOLLOW [215] -> SHIFT '=' GOTO 119
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [215] -> SHIFT '[' GOTO 120
	expression/L3 = expression . "+=" expression, FOLLOW [215] -> SHIFT "+=" GOTO 121
	expression/L3 = expression . "-=" expression, FOLLOW [215] -> SHIFT "-=" GOTO 122
	expression/L3 = expression . "*=" expression, FOLLOW [215] -> SHIFT "*=" GOTO 123
	expression/L3 = expression . "/=" expression, FOLLOW [215] -> SHIFT "/=" GOTO 124
	expression/L3 = expression . "%=" expression, FOLLOW [215] -> SHIFT "%=" GOTO 125
	expression/L3 = expression . "&&=" expression, FOLLOW [215] -> SHIFT "&&=" GOTO 126
	expression/L3 = expression . "||=" expression, FOLLOW [215] -> SHIFT "||=" GOTO 127
	expression/L3 = expression . "&=" expression, FOLLOW [215] -> SHIFT "&=" GOTO 128
	expression/L3 = expression . "|=" expression, FOLLOW [215] -> SHIFT "|=" GOTO 129
	expression/L3 = expression . "<<=" expression, FOLLOW [215] -> SHIFT "<<=" GOTO 130
	expression/L3 = expression . ">>=" expression, FOLLOW [215] -> SHIFT ">>=" GOTO 131
	expression/L4 = expression . "||" expression, FOLLOW [215] -> SHIFT "||" GOTO 132
	expression/L5 = expression . "&&" expression, FOLLOW [215] -> SHIFT "&&" GOTO 133
	expression/L6 = expression . "|" expression, FOLLOW [215] -> SHIFT '|' GOTO 134
	expression/L8 = expression . "==" expression, FOLLOW [215] -> SHIFT "==" GOTO 135
	expression/L8 = expression . "!=" expression, FOLLOW [215] -> SHIFT "!=" GOTO 136
	expression/L8 = expression . "<=" expression, FOLLOW [215] -> SHIFT "<=" GOTO 137
	expression/L8 = expression . "<" expression, FOLLOW [215] -> SHIFT '<' GOTO 138
	expression/L8 = expression . ">=" expression, FOLLOW [215] -> SHIFT ">=" GOTO 139
	expression/L8 = expression . ">" expression, FOLLOW [215] -> SHIFT '>' GOTO 140
	expression/L9 = expression . "+" expression, FOLLOW [215] -> SHIFT '+' GOTO 141
	expression/L9 = expression . "-" expression, FOLLOW [215] -> SHIFT '-' GOTO 142
	expression/L10 = expression . "*" expression, FOLLOW [215] -> SHIFT '*' GOTO 143
	expression/L10 = expression . "/" expression, FOLLOW [215] -> SHIFT '/' GOTO 144
	expression/L10 = expression . "%" expression, FOLLOW [215] -> SHIFT '%' GOTO 145
	expression/L11 = expression . "<<" expression, FOLLOW [215] -> SHIFT "<<" GOTO 146
	expression/L11 = expression . ">>" expression, FOLLOW [215] -> SHIFT ">>" GOTO 147
	expression/L12 = expression . "." IDENT, FOLLOW [215] -> SHIFT '.' GOTO 148
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 149
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 149
	expression/L9 = "~" expression . (78), FOLLOW [215] -> REDUCE expression #2 CALL operator "~"
[165]
	iexpression = expression . indirection IDENT, FOLLOW [215] -> GOTO 114
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [215] -> SHIFT '(' GOTO 115
	expression/L13 = expression . "(" ")", FOLLOW [215] -> SHIFT '(' GOTO 115
	expression/L7 = expression . "&" expression, FOLLOW [215] -> SHIFT '&' GOTO 117
	expression/L7 = expression . "^" expression, FOLLOW [215] -> SHIFT '^' GOTO 118
	expression/L3 = expression . "=" expression, FOLLOW [215] -> SHIFT '=' GOTO 119
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [215] -> SHIFT '[' GOTO 120
	expression/L3 = expression . "+=" expression, FOLLOW [215] -> SHIFT "+=" GOTO 121
	expression/L3 = expression . "-=" expression, FOLLOW [215] -> SHIFT "-=" GOTO 122
	expression/L3 = expression . "*=" expression, FOLLOW [215] -> SHIFT "*=" GOTO 123
	expression/L3 = expression . "/=" expression, FOLLOW [215] -> SHIFT "/=" GOTO 124
	expression/L3 = expression . "%=" expression, FOLLOW [215] -> SHIFT "%=" GOTO 125
	expression/L3 = expression . "&&=" expression, FOLLOW [215] -> SHIFT "&&=" GOTO 126
	expression/L3 = expression . "||=" expression, FOLLOW [215] -> SHIFT "||=" GOTO 127
	expression/L3 = expression . "&=" expression, FOLLOW [215] -> SHIFT "&=" GOTO 128
	expression/L3 = expression . "|=" expression, FOLLOW [215] -> SHIFT "|=" GOTO 129
	expression/L3 = expression . "<<=" expression, FOLLOW [215] -> SHIFT "<<=" GOTO 130
	expression/L3 = expression . ">>=" expression, FOLLOW [215] -> SHIFT ">>=" GOTO 131
	expression/L4 = expression . "||" expression, FOLLOW [215] -> SHIFT "||" GOTO 132
	expression/L5 = expression . "&&" expression, FOLLOW [215] -> SHIFT "&&" GOTO 133
	expression/L6 = expression . "|" expression, FOLLOW [215] -> SHIFT '|' GOTO 134
	expression/L8 = expression . "==" expression, FOLLOW [215] -> SHIFT "==" GOTO 135
	expression/L8 = expression . "!=" expression, FOLLOW [215] -> SHIFT "!=" GOTO 136
	expression/L8 = expression . "<=" expression, FOLLOW [215] -> SHIFT "<=" GOTO 137
	expression/L8 = expression . "<" expression, FOLLOW [215] -> SHIFT '<' GOTO 138
	expression/L8 = expression . ">=" expression, FOLLOW [215] -> SHIFT ">=" GOTO 139
	expression/L8 = expression . ">" expression, FOLLOW [215] -> SHIFT '>' GOTO 140
	expression/L9 = expression . "+" expression, FOLLOW [215] -> SHIFT '+' GOTO 141
	expression/L9 = expression . "-" expression, FOLLOW [215] -> SHIFT '-' GOTO 142
	expression/L10 = expression . "*" expression, FOLLOW [215] -> SHIFT '*' GOTO 143
	expression/L10 = expression . "/" expression, FOLLOW [215] -> SHIFT '/' GOTO 144
	expression/L10 = expression . "%" expression, FOLLOW [215] -> SHIFT '%' GOTO 145
	expression/L11 = expression . "<<" expression, FOLLOW [215] -> SHIFT "<<" GOTO 146
	expression/L11 = expression . ">>" expression, FOLLOW [215] -> SHIFT ">>" GOTO 147
	expression/L12 = expression . "." IDENT, FOLLOW [215] -> SHIFT '.' GOTO 148
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 149
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 149
	expression/L9 = "!" expression . (79), FOLLOW [215] -> REDUCE expression #2 CALL operator "!"
[166]
	iexpression = expression . indirection IDENT, FOLLOW [215] -> GOTO 114
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [215] -> SHIFT '(' GOTO 115
	expression/L13 = expression . "(" ")", FOLLOW [215] -> SHIFT '(' GOTO 115
	expression/L7 = expression . "&" expression, FOLLOW [215] -> SHIFT '&' GOTO 117
	expression/L7 = expression . "^" expression, FOLLOW [215] -> SHIFT '^' GOTO 118
	expression/L3 = expression . "=" expression, FOLLOW [215] -> SHIFT '=' GOTO 119
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [215] -> SHIFT '[' GOTO 120
	expression/L3 = expression . "+=" expression, FOLLOW [215] -> SHIFT "+=" GOTO 121
	expression/L3 = expression . "-=" expression, FOLLOW [215] -> SHIFT "-=" GOTO 122
	expression/L3 = expression . "*=" expression, FOLLOW [215] -> SHIFT "*=" GOTO 123
	expression/L3 = expression . "/=" expression, FOLLOW [215] -> SHIFT "/=" GOTO 124
	expression/L3 = expression . "%=" expression, FOLLOW [215] -> SHIFT "%=" GOTO 125
	expression/L3 = expression . "&&=" expression, FOLLOW [215] -> SHIFT "&&=" GOTO 126
	expression/L3 = expression . "||=" expression, FOLLOW [215] -> SHIFT "||=" GOTO 127
	expression/L3 = expression . "&=" expression, FOLLOW [215] -> SHIFT "&=" GOTO 128
	expression/L3 = expression . "|=" expression, FOLLOW [215] -> SHIFT "|=" GOTO 129
	expression/L3 = expression . "<<=" expression, FOLLOW [215] -> SHIFT "<<=" GOTO 130
	expression/L3 = expression . ">>=" expression, FOLLOW [215] -> SHIFT ">>=" GOTO 131
	expression/L4 = expression . "||" expression, FOLLOW [215] -> SHIFT "||" GOTO 132
	expression/L5 = expression . "&&" expression, FOLLOW [215] -> SHIFT "&&" GOTO 133
	expression/L6 = expression . "|" expression, FOLLOW [215] -> SHIFT '|' GOTO 134
	expression/L8 = expression . "==" expression, FOLLOW [215] -> SHIFT "==" GOTO 135
	expression/L8 = expression . "!=" expression, FOLLOW [215] -> SHIFT "!=" GOTO 136
	expression/L8 = expression . "<=" expression, FOLLOW [215] -> SHIFT "<=" GOTO 137
	expression/L8 = expression . "<" expression, FOLLOW [215] -> SHIFT '<' GOTO 138
	expression/L8 = expression . ">=" expression, FOLLOW [215] -> SHIFT ">=" GOTO 139
	expression/L8 = expression . ">" expression, FOLLOW [215] -> SHIFT '>' GOTO 140
	expression/L9 = expression . "+" expression, FOLLOW [215] -> SHIFT '+' GOTO 141
	expression/L9 = expression . "-" expression, FOLLOW [215] -> SHIFT '-' GOTO 142
	expression/L10 = expression . "*" expression, FOLLOW [215] -> SHIFT '*' GOTO 143
	expression/L10 = expression . "/" expression, FOLLOW [215] -> SHIFT '/' GOTO 144
	expression/L10 = expression . "%" expression, FOLLOW [215] -> SHIFT '%' GOTO 145
	expression/L11 = expression . "<<" expression, FOLLOW [215] -> SHIFT "<<" GOTO 146
	expression/L11 = expression . ">>" expression, FOLLOW [215] -> SHIFT ">>" GOTO 147
	expression/L12 = expression . "." IDENT, FOLLOW [215] -> SHIFT '.' GOTO 148
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 149
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 149
	expression/L12 = "*" expression . (86), FOLLOW [215] -> REDUCE expression #2 CALL operator "->"
[167]
	iexpression = expression . indirection IDENT, FOLLOW [215] -> GOTO 114
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [215] -> SHIFT '(' GOTO 115
	expression/L13 = expression . "(" ")", FOLLOW [215] -> SHIFT '(' GOTO 115
	expressionlist = expression . "," expressionlist, FOLLOW [220] -> SHIFT ',' GOTO 224
	expression/L7 = expression . "&" expression, FOLLOW [215] -> SHIFT '&' GOTO 117
	expression/L7 = expression . "^" expression, FOLLOW [215] -> SHIFT '^' GOTO 118
	expression/L3 = expression . "=" expression, FOLLOW [215] -> SHIFT '=' GOTO 119
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [215] -> SHIFT '[' GOTO 120
	expression/L3 = expression . "+=" expression, FOLLOW [215] -> SHIFT "+=" GOTO 121
	expression/L3 = expression . "-=" expression, FOLLOW [215] -> SHIFT "-=" GOTO 122
	expression/L3 = expression . "*=" expression, FOLLOW [215] -> SHIFT "*=" GOTO 123
	expression/L3 = expression . "/=" expression, FOLLOW [215] -> SHIFT "/=" GOTO 124
	expression/L3 = expression . "%=" expression, FOLLOW [215] -> SHIFT "%=" GOTO 125
	expression/L3 = expression . "&&=" expression, FOLLOW [215] -> SHIFT "&&=" GOTO 126
	expression/L3 = expression . "||=" expression, FOLLOW [215] -> SHIFT "||=" GOTO 127
	expression/L3 = expression . "&=" expression, FOLLOW [215] -> SHIFT "&=" GOTO 128
	expression/L3 = expression . "|=" expression, FOLLOW [215] -> SHIFT "|=" GOTO 129
	expression/L3 = expression . "<<=" expression, FOLLOW [215] -> SHIFT "<<=" GOTO 130
	expression/L3 = expression . ">>=" expression, FOLLOW [215] -> SHIFT ">>=" GOTO 131
	expression/L4 = expression . "||" expression, FOLLOW [215] -> SHIFT "||" GOTO 132
	expression/L5 = expression . "&&" expression, FOLLOW [215] -> SHIFT "&&" GOTO 133
	expression/L6 = expression . "|" expression, FOLLOW [215] -> SHIFT '|' GOTO 134
	expression/L8 = expression . "==" expression, FOLLOW [215] -> SHIFT "==" GOTO 135
	expression/L8 = expression . "!=" expression, FOLLOW [215] -> SHIFT "!=" GOTO 136
	expression/L8 = expression . "<=" expression, FOLLOW [215] -> SHIFT "<=" GOTO 137
	expression/L8 = expression . "<" expression, FOLLOW [215] -> SHIFT '<' GOTO 138
	expression/L8 = expression . ">=" expression, FOLLOW [215] -> SHIFT ">=" GOTO 139
	expression/L8 = expression . ">" expression, FOLLOW [215] -> SHIFT '>' GOTO 140
	expression/L9 = expression . "+" expression, FOLLOW [215] -> SHIFT '+' GOTO 141
	expression/L9 = expression . "-" expression, FOLLOW [215] -> SHIFT '-' GOTO 142
	expression/L10 = expression . "*" expression, FOLLOW [215] -> SHIFT '*' GOTO 143
	expression/L10 = expression . "/" expression, FOLLOW [215] -> SHIFT '/' GOTO 144
	expression/L10 = expression . "%" expression, FOLLOW [215] -> SHIFT '%' GOTO 145
	expression/L11 = expression . "<<" expression, FOLLOW [215] -> SHIFT "<<" GOTO 146
	expression/L11 = expression . ">>" expression, FOLLOW [215] -> SHIFT ">>" GOTO 147
	expression/L12 = expression . "." IDENT, FOLLOW [215] -> SHIFT '.' GOTO 148
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 149
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 149
	expressionlist = expression ., FOLLOW [220] -> REDUCE expressionlist #1
[168]
	variabledefinition = typespec IDENT "[" expression "]" . "=" expression, FOLLOW [12] -> SHIFT '=' GOTO 232
	variabledefinition = typespec IDENT "[" expression "]" . (step:42), FOLLOW [12] -> REDUCE variabledefinition #5 CALL vardef_array
[169]
	functiondefinition = linkage "function" typespec IDENT callablebody . (27), FOLLOW [217] -> REDUCE functiondefinition #5 CALL funcdef
[170]
	paramdecl = typespec . IDENT, FOLLOW [168] -> SHIFT IDENT GOTO 233
[171]
	callablebody = "(" parameterlist . ")" "{" codeblock "}", FOLLOW [217] -> SHIFT ')' GOTO 234
[172]
	parameterlist = parameters . (30), FOLLOW [9] -> REDUCE parameterlist #1 CALL paramdeflist
[173]
	parameters = paramdecl . "," parameters, FOLLOW [9] -> SHIFT ',' GOTO 235
	parameters = paramdecl ., FOLLOW [9] -> REDUCE parameters #1
[174]
	typespec/L1 = "const" typename "^" "^" "&" . (20), FOLLOW [225] -> REDUCE typespec #5 CALL typespec "const^^&"
[175]
	structdefinition = "struct" IDENT "{" datadefinitionlist "}" . (step:22), FOLLOW [12] -> REDUCE structdefinition #5 CALL structdef
[176]
	datadefinitionlist = datadefinition datadefinitionlist ., FOLLOW [11] -> REDUCE datadefinitionlist #2
[177]
	interfacedefinition = "interface" IDENT "{" methoddefinitionlist "}" . (step:23), FOLLOW [12] -> REDUCE interfacedefinition #5 CALL interfacedef
[178]
	methoddefinitionlist = methoddefinition methoddefinitionlist ., FOLLOW [11] -> REDUCE methoddefinitionlist #2
[179]
	methoddefinition = "function" typespec . IDENT "(" parameterlist ")" ";", FOLLOW [159] -> SHIFT IDENT GOTO 236
[180]
	methoddefinition = "procedure" IDENT . "(" parameterlist ")" ";", FOLLOW [159] -> SHIFT '(' GOTO 237
[181]
	classdefinition = "class" IDENT "{" definitionlist "}" . (step:24), FOLLOW [12] -> REDUCE classdefinition #5 CALL classdef
[182]
	externdefinition = "extern" DQSTRING "function" typespec IDENT "(" . externparameterlist ")" ";", FOLLOW [52] -> GOTO 238
	externparameterlist = . externparameters, FOLLOW [9] -> GOTO 184
	externparameterlist = . externparameters, FOLLOW [9] -> GOTO 184
	typespec/L1 = . typename, FOLLOW [168] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [168] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [168] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [168] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [168] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [168] -> GOTO 8
	externparameters = . typespec "," externparameters, FOLLOW [9] -> GOTO 185
	externparameters = . typespec, FOLLOW [9] -> GOTO 185
	typename/L1 = . IDENT, FOLLOW [169] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [169] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [168] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [168] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [168] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [168] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [168] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [168] -> SHIFT "const" GOTO 18
	externparameterlist = ., FOLLOW [9] -> REDUCE externparameterlist #0
[183]
	externdefinition = "extern" DQSTRING "procedure" IDENT "(" externparameterlist . ")" ";", FOLLOW [52] -> SHIFT ')' GOTO 239
[184]
	externparameterlist = externparameters . (4), FOLLOW [9] -> REDUCE externparameterlist #1 CALL extern_paramdeflist
[185]
	externparameters = typespec . "," externparameters, FOLLOW [9] -> SHIFT ',' GOTO 240
	externparameters = typespec ., FOLLOW [9] -> REDUCE externparameters #1
[186]
	iexpression = expression indirection IDENT . (89), FOLLOW [215] -> REDUCE iexpression #3 CALL rep_operator "->"
[187]
	expression/L13 = expression "(" expressionlist . ")", FOLLOW [215] -> SHIFT ')' GOTO 241
[188]
	expression/L13 = expression "(" ")" . (87), FOLLOW [215] -> REDUCE expression #3 CALL operator "()"
[189]
	iexpression = expression . indirection IDENT, FOLLOW [215] -> GOTO 114
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [215] -> SHIFT '(' GOTO 115
	expression/L13 = expression . "(" ")", FOLLOW [215] -> SHIFT '(' GOTO 115
	expression/L7 = expression . "&" expression, FOLLOW [215] -> SHIFT '&' GOTO 117
	expression/L7 = expression . "^" expression, FOLLOW [215] -> SHIFT '^' GOTO 118
	expression/L3 = expression . "=" expression, FOLLOW [215] -> SHIFT '=' GOTO 119
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [215] -> SHIFT '[' GOTO 120
	expression/L3 = expression . "+=" expression, FOLLOW [215] -> SHIFT "+=" GOTO 121
	expression/L3 = expression . "-=" expression, FOLLOW [215] -> SHIFT "-=" GOTO 122
	expression/L3 = expression . "*=" expression, FOLLOW [215] -> SHIFT "*=" GOTO 123
	expression/L3 = expression . "/=" expression, FOLLOW [215] -> SHIFT "/=" GOTO 124
	expression/L3 = expression . "%=" expression, FOLLOW [215] -> SHIFT "%=" GOTO 125
	expression/L3 = expression . "&&=" expression, FOLLOW [215] -> SHIFT "&&=" GOTO 126
	expression/L3 = expression . "||=" expression, FOLLOW [215] -> SHIFT "||=" GOTO 127
	expression/L3 = expression . "&=" expression, FOLLOW [215] -> SHIFT "&=" GOTO 128
	expression/L3 = expression . "|=" expression, FOLLOW [215] -> SHIFT "|=" GOTO 129
	expression/L3 = expression . "<<=" expression, FOLLOW [215] -> SHIFT "<<=" GOTO 130
	expression/L3 = expression . ">>=" expression, FOLLOW [215] -> SHIFT ">>=" GOTO 131
	expression/L4 = expression . "||" expression, FOLLOW [215] -> SHIFT "||" GOTO 132
	expression/L5 = expression . "&&" expression, FOLLOW [215] -> SHIFT "&&" GOTO 133
	expression/L6 = expression . "|" expression, FOLLOW [215] -> SHIFT '|' GOTO 134
	expression/L8 = expression . "==" expression, FOLLOW [215] -> SHIFT "==" GOTO 135
	expression/L8 = expression . "!=" expression, FOLLOW [215] -> SHIFT "!=" GOTO 136
	expression/L8 = expression . "<=" expression, FOLLOW [215] -> SHIFT "<=" GOTO 137
	expression/L8 = expression . "<" expression, FOLLOW [215] -> SHIFT '<' GOTO 138
	expression/L8 = expression . ">=" expression, FOLLOW [215] -> SHIFT ">=" GOTO 139
	expression/L8 = expression . ">" expression, FOLLOW [215] -> SHIFT '>' GOTO 140
	expression/L9 = expression . "+" expression, FOLLOW [215] -> SHIFT '+' GOTO 141
	expression/L9 = expression . "-" expression, FOLLOW [215] -> SHIFT '-' GOTO 142
	expression/L10 = expression . "*" expression, FOLLOW [215] -> SHIFT '*' GOTO 143
	expression/L10 = expression . "/" expression, FOLLOW [215] -> SHIFT '/' GOTO 144
	expression/L10 = expression . "%" expression, FOLLOW [215] -> SHIFT '%' GOTO 145
	expression/L11 = expression . "<<" expression, FOLLOW [215] -> SHIFT "<<" GOTO 146
	expression/L11 = expression . ">>" expression, FOLLOW [215] -> SHIFT ">>" GOTO 147
	expression/L12 = expression . "." IDENT, FOLLOW [215] -> SHIFT '.' GOTO 148
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 149
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 149
	expression/L7 = expression "&" expression . (69), FOLLOW [215] -> REDUCE expression #3 CALL operator "&"
[190]
	iexpression = expression . indirection IDENT, FOLLOW [215] -> GOTO 114
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [215] -> SHIFT '(' GOTO 115
	expression/L13 = expression . "(" ")", FOLLOW [215] -> SHIFT '(' GOTO 115
	expression/L7 = expression . "&" expression, FOLLOW [215] -> SHIFT '&' GOTO 117
	expression/L7 = expression . "^" expression, FOLLOW [215] -> SHIFT '^' GOTO 118
	expression/L3 = expression . "=" expression, FOLLOW [215] -> SHIFT '=' GOTO 119
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [215] -> SHIFT '[' GOTO 120
	expression/L3 = expression . "+=" expression, FOLLOW [215] -> SHIFT "+=" GOTO 121
	expression/L3 = expression . "-=" expression, FOLLOW [215] -> SHIFT "-=" GOTO 122
	expression/L3 = expression . "*=" expression, FOLLOW [215] -> SHIFT "*=" GOTO 123
	expression/L3 = expression . "/=" expression, FOLLOW [215] -> SHIFT "/=" GOTO 124
	expression/L3 = expression . "%=" expression, FOLLOW [215] -> SHIFT "%=" GOTO 125
	expression/L3 = expression . "&&=" expression, FOLLOW [215] -> SHIFT "&&=" GOTO 126
	expression/L3 = expression . "||=" expression, FOLLOW [215] -> SHIFT "||=" GOTO 127
	expression/L3 = expression . "&=" expression, FOLLOW [215] -> SHIFT "&=" GOTO 128
	expression/L3 = expression . "|=" expression, FOLLOW [215] -> SHIFT "|=" GOTO 129
	expression/L3 = expression . "<<=" expression, FOLLOW [215] -> SHIFT "<<=" GOTO 130
	expression/L3 = expression . ">>=" expression, FOLLOW [215] -> SHIFT ">>=" GOTO 131
	expression/L4 = expression . "||" expression, FOLLOW [215] -> SHIFT "||" GOTO 132
	expression/L5 = expression . "&&" expression, FOLLOW [215] -> SHIFT "&&" GOTO 133
	expression/L6 = expression . "|" expression, FOLLOW [215] -> SHIFT '|' GOTO 134
	expression/L8 = expression . "==" expression, FOLLOW [215] -> SHIFT "==" GOTO 135
	expression/L8 = expression . "!=" expression, FOLLOW [215] -> SHIFT "!=" GOTO 136
	expression/L8 = expression . "<=" expression, FOLLOW [215] -> SHIFT "<=" GOTO 137
	expression/L8 = expression . "<" expression, FOLLOW [215] -> SHIFT '<' GOTO 138
	expression/L8 = expression . ">=" expression, FOLLOW [215] -> SHIFT ">=" GOTO 139
	expression/L8 = expression . ">" expression, FOLLOW [215] -> SHIFT '>' GOTO 140
	expression/L9 = expression . "+" expression, FOLLOW [215] -> SHIFT '+' GOTO 141
	expression/L9 = expression . "-" expression, FOLLOW [215] -> SHIFT '-' GOTO 142
	expression/L10 = expression . "*" expression, FOLLOW [215] -> SHIFT '*' GOTO 143
	expression/L10 = expression . "/" expression, FOLLOW [215] -> SHIFT '/' GOTO 144
	expression/L10 = expression . "%" expression, FOLLOW [215] -> SHIFT '%' GOTO 145
	expression/L11 = expression . "<<" expression, FOLLOW [215] -> SHIFT "<<" GOTO 146
	expression/L11 = expression . ">>" expression, FOLLOW [215] -> SHIFT ">>" GOTO 147
	expression/L12 = expression . "." IDENT, FOLLOW [215] -> SHIFT '.' GOTO 148
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 149
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 149
	expression/L7 = expression "^" expression . (68), FOLLOW [215] -> REDUCE expression #3 CALL operator "^"
[191]
	iexpression = expression . indirection IDENT, FOLLOW [215] -> GOTO 114
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [215] -> SHIFT '(' GOTO 115
	expression/L13 = expression . "(" ")", FOLLOW [215] -> SHIFT '(' GOTO 115
	expression/L7 = expression . "&" expression, FOLLOW [215] -> SHIFT '&' GOTO 117
	expression/L7 = expression . "^" expression, FOLLOW [215] -> SHIFT '^' GOTO 118
	expression/L3 = expression . "=" expression, FOLLOW [215] -> SHIFT '=' GOTO 119
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [215] -> SHIFT '[' GOTO 120
	expression/L3 = expression . "+=" expression, FOLLOW [215] -> SHIFT "+=" GOTO 121
	expression/L3 = expression . "-=" expression, FOLLOW [215] -> SHIFT "-=" GOTO 122
	expression/L3 = expression . "*=" expression, FOLLOW [215] -> SHIFT "*=" GOTO 123
	expression/L3 = expression . "/=" expression, FOLLOW [215] -> SHIFT "/=" GOTO 124
	expression/L3 = expression . "%=" expression, FOLLOW [215] -> SHIFT "%=" GOTO 125
	expression/L3 = expression . "&&=" expression, FOLLOW [215] -> SHIFT "&&=" GOTO 126
	expression/L3 = expression . "||=" expression, FOLLOW [215] -> SHIFT "||=" GOTO 127
	expression/L3 = expression . "&=" expression, FOLLOW [215] -> SHIFT "&=" GOTO 128
	expression/L3 = expression . "|=" expression, FOLLOW [215] -> SHIFT "|=" GOTO 129
	expression/L3 = expression . "<<=" expression, FOLLOW [215] -> SHIFT "<<=" GOTO 130
	expression/L3 = expression . ">>=" expression, FOLLOW [215] -> SHIFT ">>=" GOTO 131
	expression/L4 = expression . "||" expression, FOLLOW [215] -> SHIFT "||" GOTO 132
	expression/L5 = expression . "&&" expression, FOLLOW [215] -> SHIFT "&&" GOTO 133
	expression/L6 = expression . "|" expression, FOLLOW [215] -> SHIFT '|' GOTO 134
	expression/L8 = expression . "==" expression, FOLLOW [215] -> SHIFT "==" GOTO 135
	expression/L8 = expression . "!=" expression, FOLLOW [215] -> SHIFT "!=" GOTO 136
	expression/L8 = expression . "<=" expression, FOLLOW [215] -> SHIFT "<=" GOTO 137
	expression/L8 = expression . "<" expression, FOLLOW [215] -> SHIFT '<' GOTO 138
	expression/L8 = expression . ">=" expression, FOLLOW [215] -> SHIFT ">=" GOTO 139
	expression/L8 = expression . ">" expression, FOLLOW [215] -> SHIFT '>' GOTO 140
	expression/L9 = expression . "+" expression, FOLLOW [215] -> SHIFT '+' GOTO 141
	expression/L9 = expression . "-" expression, FOLLOW [215] -> SHIFT '-' GOTO 142
	expression/L10 = expression . "*" expression, FOLLOW [215] -> SHIFT '*' GOTO 143
	expression/L10 = expression . "/" expression, FOLLOW [215] -> SHIFT '/' GOTO 144
	expression/L10 = expression . "%" expression, FOLLOW [215] -> SHIFT '%' GOTO 145
	expression/L11 = expression . "<<" expression, FOLLOW [215] -> SHIFT "<<" GOTO 146
	expression/L11 = expression . ">>" expression, FOLLOW [215] -> SHIFT ">>" GOTO 147
	expression/L12 = expression . "." IDENT, FOLLOW [215] -> SHIFT '.' GOTO 148
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 149
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 149
	expression/L3 = expression "=" expression . (53), FOLLOW [215] -> REDUCE expression #3 CALL operator "="
[192]
	expression/L13 = expression "[" expressionlist . "]", FOLLOW [215] -> SHIFT ']' GOTO 242
[193]
	iexpression = expression . indirection IDENT, FOLLOW [215] -> GOTO 114
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [215] -> SHIFT '(' GOTO 115
	expression/L13 = expression . "(" ")", FOLLOW [215] -> SHIFT '(' GOTO 115
	expression/L7 = expression . "&" expression, FOLLOW [215] -> SHIFT '&' GOTO 117
	expression/L7 = expression . "^" expression, FOLLOW [215] -> SHIFT '^' GOTO 118
	expression/L3 = expression . "=" expression, FOLLOW [215] -> SHIFT '=' GOTO 119
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [215] -> SHIFT '[' GOTO 120
	expression/L3 = expression . "+=" expression, FOLLOW [215] -> SHIFT "+=" GOTO 121
	expression/L3 = expression . "-=" expression, FOLLOW [215] -> SHIFT "-=" GOTO 122
	expression/L3 = expression . "*=" expression, FOLLOW [215] -> SHIFT "*=" GOTO 123
	expression/L3 = expression . "/=" expression, FOLLOW [215] -> SHIFT "/=" GOTO 124
	expression/L3 = expression . "%=" expression, FOLLOW [215] -> SHIFT "%=" GOTO 125
	expression/L3 = expression . "&&=" expression, FOLLOW [215] -> SHIFT "&&=" GOTO 126
	expression/L3 = expression . "||=" expression, FOLLOW [215] -> SHIFT "||=" GOTO 127
	expression/L3 = expression . "&=" expression, FOLLOW [215] -> SHIFT "&=" GOTO 128
	expression/L3 = expression . "|=" expression, FOLLOW [215] -> SHIFT "|=" GOTO 129
	expression/L3 = expression . "<<=" expression, FOLLOW [215] -> SHIFT "<<=" GOTO 130
	expression/L3 = expression . ">>=" expression, FOLLOW [215] -> SHIFT ">>=" GOTO 131
	expression/L4 = expression . "||" expression, FOLLOW [215] -> SHIFT "||" GOTO 132
	expression/L5 = expression . "&&" expression, FOLLOW [215] -> SHIFT "&&" GOTO 133
	expression/L6 = expression . "|" expression, FOLLOW [215] -> SHIFT '|' GOTO 134
	expression/L8 = expression . "==" expression, FOLLOW [215] -> SHIFT "==" GOTO 135
	expression/L8 = expression . "!=" expression, FOLLOW [215] -> SHIFT "!=" GOTO 136
	expression/L8 = expression . "<=" expression, FOLLOW [215] -> SHIFT "<=" GOTO 137
	expression/L8 = expression . "<" expression, FOLLOW [215] -> SHIFT '<' GOTO 138
	expression/L8 = expression . ">=" expression, FOLLOW [215] -> SHIFT ">=" GOTO 139
	expression/L8 = expression . ">" expression, FOLLOW [215] -> SHIFT '>' GOTO 140
	expression/L9 = expression . "+" expression, FOLLOW [215] -> SHIFT '+' GOTO 141
	expression/L9 = expression . "-" expression, FOLLOW [215] -> SHIFT '-' GOTO 142
	expression/L10 = expression . "*" expression, FOLLOW [215] -> SHIFT '*' GOTO 143
	expression/L10 = expression . "/" expression, FOLLOW [215] -> SHIFT '/' GOTO 144
	expression/L10 = expression . "%" expression, FOLLOW [215] -> SHIFT '%' GOTO 145
	expression/L11 = expression . "<<" expression, FOLLOW [215] -> SHIFT "<<" GOTO 146
	expression/L11 = expression . ">>" expression, FOLLOW [215] -> SHIFT ">>" GOTO 147
	expression/L12 = expression . "." IDENT, FOLLOW [215] -> SHIFT '.' GOTO 148
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 149
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 149
	expression/L3 = expression "+=" expression . (54), FOLLOW [215] -> REDUCE expression #3 CALL assign_operator "+"
[194]
	iexpression = expression . indirection IDENT, FOLLOW [215] -> GOTO 114
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [215] -> SHIFT '(' GOTO 115
	expression/L13 = expression . "(" ")", FOLLOW [215] -> SHIFT '(' GOTO 115
	expression/L7 = expression . "&" expression, FOLLOW [215] -> SHIFT '&' GOTO 117
	expression/L7 = expression . "^" expression, FOLLOW [215] -> SHIFT '^' GOTO 118
	expression/L3 = expression . "=" expression, FOLLOW [215] -> SHIFT '=' GOTO 119
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [215] -> SHIFT '[' GOTO 120
	expression/L3 = expression . "+=" expression, FOLLOW [215] -> SHIFT "+=" GOTO 121
	expression/L3 = expression . "-=" expression, FOLLOW [215] -> SHIFT "-=" GOTO 122
	expression/L3 = expression . "*=" expression, FOLLOW [215] -> SHIFT "*=" GOTO 123
	expression/L3 = expression . "/=" expression, FOLLOW [215] -> SHIFT "/=" GOTO 124
	expression/L3 = expression . "%=" expression, FOLLOW [215] -> SHIFT "%=" GOTO 125
	expression/L3 = expression . "&&=" expression, FOLLOW [215] -> SHIFT "&&=" GOTO 126
	expression/L3 = expression . "||=" expression, FOLLOW [215] -> SHIFT "||=" GOTO 127
	expression/L3 = expression . "&=" expression, FOLLOW [215] -> SHIFT "&=" GOTO 128
	expression/L3 = expression . "|=" expression, FOLLOW [215] -> SHIFT "|=" GOTO 129
	expression/L3 = expression . "<<=" expression, FOLLOW [215] -> SHIFT "<<=" GOTO 130
	expression/L3 = expression . ">>=" expression, FOLLOW [215] -> SHIFT ">>=" GOTO 131
	expression/L4 = expression . "||" expression, FOLLOW [215] -> SHIFT "||" GOTO 132
	expression/L5 = expression . "&&" expression, FOLLOW [215] -> SHIFT "&&" GOTO 133
	expression/L6 = expression . "|" expression, FOLLOW [215] -> SHIFT '|' GOTO 134
	expression/L8 = expression . "==" expression, FOLLOW [215] -> SHIFT "==" GOTO 135
	expression/L8 = expression . "!=" expression, FOLLOW [215] -> SHIFT "!=" GOTO 136
	expression/L8 = expression . "<=" expression, FOLLOW [215] -> SHIFT "<=" GOTO 137
	expression/L8 = expression . "<" expression, FOLLOW [215] -> SHIFT '<' GOTO 138
	expression/L8 = expression . ">=" expression, FOLLOW [215] -> SHIFT ">=" GOTO 139
	expression/L8 = expression . ">" expression, FOLLOW [215] -> SHIFT '>' GOTO 140
	expression/L9 = expression . "+" expression, FOLLOW [215] -> SHIFT '+' GOTO 141
	expression/L9 = expression . "-" expression, FOLLOW [215] -> SHIFT '-' GOTO 142
	expression/L10 = expression . "*" expression, FOLLOW [215] -> SHIFT '*' GOTO 143
	expression/L10 = expression . "/" expression, FOLLOW [215] -> SHIFT '/' GOTO 144
	expression/L10 = expression . "%" expression, FOLLOW [215] -> SHIFT '%' GOTO 145
	expression/L11 = expression . "<<" expression, FOLLOW [215] -> SHIFT "<<" GOTO 146
	expression/L11 = expression . ">>" expression, FOLLOW [215] -> SHIFT ">>" GOTO 147
	expression/L12 = expression . "." IDENT, FOLLOW [215] -> SHIFT '.' GOTO 148
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 149
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 149
	expression/L3 = expression "-=" expression . (55), FOLLOW [215] -> REDUCE expression #3 CALL assign_operator "-"
[195]
	iexpression = expression . indirection IDENT, FOLLOW [215] -> GOTO 114
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [215] -> SHIFT '(' GOTO 115
	expression/L13 = expression . "(" ")", FOLLOW [215] -> SHIFT '(' GOTO 115
	expression/L7 = expression . "&" expression, FOLLOW [215] -> SHIFT '&' GOTO 117
	expression/L7 = expression . "^" expression, FOLLOW [215] -> SHIFT '^' GOTO 118
	expression/L3 = expression . "=" expression, FOLLOW [215] -> SHIFT '=' GOTO 119
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [215] -> SHIFT '[' GOTO 120
	expression/L3 = expression . "+=" expression, FOLLOW [215] -> SHIFT "+=" GOTO 121
	expression/L3 = expression . "-=" expression, FOLLOW [215] -> SHIFT "-=" GOTO 122
	expression/L3 = expression . "*=" expression, FOLLOW [215] -> SHIFT "*=" GOTO 123
	expression/L3 = expression . "/=" expression, FOLLOW [215] -> SHIFT "/=" GOTO 124
	expression/L3 = expression . "%=" expression, FOLLOW [215] -> SHIFT "%=" GOTO 125
	expression/L3 = expression . "&&=" expression, FOLLOW [215] -> SHIFT "&&=" GOTO 126
	expression/L3 = expression . "||=" expression, FOLLOW [215] -> SHIFT "||=" GOTO 127
	expression/L3 = expression . "&=" expression, FOLLOW [215] -> SHIFT "&=" GOTO 128
	expression/L3 = expression . "|=" expression, FOLLOW [215] -> SHIFT "|=" GOTO 129
	expression/L3 = expression . "<<=" expression, FOLLOW [215] -> SHIFT "<<=" GOTO 130
	expression/L3 = expression . ">>=" expression, FOLLOW [215] -> SHIFT ">>=" GOTO 131
	expression/L4 = expression . "||" expression, FOLLOW [215] -> SHIFT "||" GOTO 132
	expression/L5 = expression . "&&" expression, FOLLOW [215] -> SHIFT "&&" GOTO 133
	expression/L6 = expression . "|" expression, FOLLOW [215] -> SHIFT '|' GOTO 134
	expression/L8 = expression . "==" expression, FOLLOW [215] -> SHIFT "==" GOTO 135
	expression/L8 = expression . "!=" expression, FOLLOW [215] -> SHIFT "!=" GOTO 136
	expression/L8 = expression . "<=" expression, FOLLOW [215] -> SHIFT "<=" GOTO 137
	expression/L8 = expression . "<" expression, FOLLOW [215] -> SHIFT '<' GOTO 138
	expression/L8 = expression . ">=" expression, FOLLOW [215] -> SHIFT ">=" GOTO 139
	expression/L8 = expression . ">" expression, FOLLOW [215] -> SHIFT '>' GOTO 140
	expression/L9 = expression . "+" expression, FOLLOW [215] -> SHIFT '+' GOTO 141
	expression/L9 = expression . "-" expression, FOLLOW [215] -> SHIFT '-' GOTO 142
	expression/L10 = expression . "*" expression, FOLLOW [215] -> SHIFT '*' GOTO 143
	expression/L10 = expression . "/" expression, FOLLOW [215] -> SHIFT '/' GOTO 144
	expression/L10 = expression . "%" expression, FOLLOW [215] -> SHIFT '%' GOTO 145
	expression/L11 = expression . "<<" expression, FOLLOW [215] -> SHIFT "<<" GOTO 146
	expression/L11 = expression . ">>" expression, FOLLOW [215] -> SHIFT ">>" GOTO 147
	expression/L12 = expression . "." IDENT, FOLLOW [215] -> SHIFT '.' GOTO 148
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 149
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 149
	expression/L3 = expression "*=" expression . (56), FOLLOW [215] -> REDUCE expression #3 CALL assign_operator "*"
[196]
	iexpression = expression . indirection IDENT, FOLLOW [215] -> GOTO 114
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [215] -> SHIFT '(' GOTO 115
	expression/L13 = expression . "(" ")", FOLLOW [215] -> SHIFT '(' GOTO 115
	expression/L7 = expression . "&" expression, FOLLOW [215] -> SHIFT '&' GOTO 117
	expression/L7 = expression . "^" expression, FOLLOW [215] -> SHIFT '^' GOTO 118
	expression/L3 = expression . "=" expression, FOLLOW [215] -> SHIFT '=' GOTO 119
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [215] -> SHIFT '[' GOTO 120
	expression/L3 = expression . "+=" expression, FOLLOW [215] -> SHIFT "+=" GOTO 121
	expression/L3 = expression . "-=" expression, FOLLOW [215] -> SHIFT "-=" GOTO 122
	expression/L3 = expression . "*=" expression, FOLLOW [215] -> SHIFT "*=" GOTO 123
	expression/L3 = expression . "/=" expression, FOLLOW [215] -> SHIFT "/=" GOTO 124
	expression/L3 = expression . "%=" expression, FOLLOW [215] -> SHIFT "%=" GOTO 125
	expression/L3 = expression . "&&=" expression, FOLLOW [215] -> SHIFT "&&=" GOTO 126
	expression/L3 = expression . "||=" expression, FOLLOW [215] -> SHIFT "||=" GOTO 127
	expression/L3 = expression . "&=" expression, FOLLOW [215] -> SHIFT "&=" GOTO 128
	expression/L3 = expression . "|=" expression, FOLLOW [215] -> SHIFT "|=" GOTO 129
	expression/L3 = expression . "<<=" expression, FOLLOW [215] -> SHIFT "<<=" GOTO 130
	expression/L3 = expression . ">>=" expression, FOLLOW [215] -> SHIFT ">>=" GOTO 131
	expression/L4 = expression . "||" expression, FOLLOW [215] -> SHIFT "||" GOTO 132
	expression/L5 = expression . "&&" expression, FOLLOW [215] -> SHIFT "&&" GOTO 133
	expression/L6 = expression . "|" expression, FOLLOW [215] -> SHIFT '|' GOTO 134
	expression/L8 = expression . "==" expression, FOLLOW [215] -> SHIFT "==" GOTO 135
	expression/L8 = expression . "!=" expression, FOLLOW [215] -> SHIFT "!=" GOTO 136
	expression/L8 = expression . "<=" expression, FOLLOW [215] -> SHIFT "<=" GOTO 137
	expression/L8 = expression . "<" expression, FOLLOW [215] -> SHIFT '<' GOTO 138
	expression/L8 = expression . ">=" expression, FOLLOW [215] -> SHIFT ">=" GOTO 139
	expression/L8 = expression . ">" expression, FOLLOW [215] -> SHIFT '>' GOTO 140
	expression/L9 = expression . "+" expression, FOLLOW [215] -> SHIFT '+' GOTO 141
	expression/L9 = expression . "-" expression, FOLLOW [215] -> SHIFT '-' GOTO 142
	expression/L10 = expression . "*" expression, FOLLOW [215] -> SHIFT '*' GOTO 143
	expression/L10 = expression . "/" expression, FOLLOW [215] -> SHIFT '/' GOTO 144
	expression/L10 = expression . "%" expression, FOLLOW [215] -> SHIFT '%' GOTO 145
	expression/L11 = expression . "<<" expression, FOLLOW [215] -> SHIFT "<<" GOTO 146
	expression/L11 = expression . ">>" expression, FOLLOW [215] -> SHIFT ">>" GOTO 147
	expression/L12 = expression . "." IDENT, FOLLOW [215] -> SHIFT '.' GOTO 148
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 149
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 149
	expression/L3 = expression "/=" expression . (57), FOLLOW [215] -> REDUCE expression #3 CALL assign_operator "/"
[197]
	iexpression = expression . indirection IDENT, FOLLOW [215] -> GOTO 114
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [215] -> SHIFT '(' GOTO 115
	expression/L13 = expression . "(" ")", FOLLOW [215] -> SHIFT '(' GOTO 115
	expression/L7 = expression . "&" expression, FOLLOW [215] -> SHIFT '&' GOTO 117
	expression/L7 = expression . "^" expression, FOLLOW [215] -> SHIFT '^' GOTO 118
	expression/L3 = expression . "=" expression, FOLLOW [215] -> SHIFT '=' GOTO 119
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [215] -> SHIFT '[' GOTO 120
	expression/L3 = expression . "+=" expression, FOLLOW [215] -> SHIFT "+=" GOTO 121
	expression/L3 = expression . "-=" expression, FOLLOW [215] -> SHIFT "-=" GOTO 122
	expression/L3 = expression . "*=" expression, FOLLOW [215] -> SHIFT "*=" GOTO 123
	expression/L3 = expression . "/=" expression, FOLLOW [215] -> SHIFT "/=" GOTO 124
	expression/L3 = expression . "%=" expression, FOLLOW [215] -> SHIFT "%=" GOTO 125
	expression/L3 = expression . "&&=" expression, FOLLOW [215] -> SHIFT "&&=" GOTO 126
	expression/L3 = expression . "||=" expression, FOLLOW [215] -> SHIFT "||=" GOTO 127
	expression/L3 = expression . "&=" expression, FOLLOW [215] -> SHIFT "&=" GOTO 128
	expression/L3 = expression . "|=" expression, FOLLOW [215] -> SHIFT "|=" GOTO 129
	expression/L3 = expression . "<<=" expression, FOLLOW [215] -> SHIFT "<<=" GOTO 130
	expression/L3 = expression . ">>=" expression, FOLLOW [215] -> SHIFT ">>=" GOTO 131
	expression/L4 = expression . "||" expression, FOLLOW [215] -> SHIFT "||" GOTO 132
	expression/L5 = expression . "&&" expression, FOLLOW [215] -> SHIFT "&&" GOTO 133
	expression/L6 = expression . "|" expression, FOLLOW [215] -> SHIFT '|' GOTO 134
	expression/L8 = expression . "==" expression, FOLLOW [215] -> SHIFT "==" GOTO 135
	expression/L8 = expression . "!=" expression, FOLLOW [215] -> SHIFT "!=" GOTO 136
	expression/L8 = expression . "<=" expression, FOLLOW [215] -> SHIFT "<=" GOTO 137
	expression/L8 = expression . "<" expression, FOLLOW [215] -> SHIFT '<' GOTO 138
	expression/L8 = expression . ">=" expression, FOLLOW [215] -> SHIFT ">=" GOTO 139
	expression/L8 = expression . ">" expression, FOLLOW [215] -> SHIFT '>' GOTO 140
	expression/L9 = expression . "+" expression, FOLLOW [215] -> SHIFT '+' GOTO 141
	expression/L9 = expression . "-" expression, FOLLOW [215] -> SHIFT '-' GOTO 142
	expression/L10 = expression . "*" expression, FOLLOW [215] -> SHIFT '*' GOTO 143
	expression/L10 = expression . "/" expression, FOLLOW [215] -> SHIFT '/' GOTO 144
	expression/L10 = expression . "%" expression, FOLLOW [215] -> SHIFT '%' GOTO 145
	expression/L11 = expression . "<<" expression, FOLLOW [215] -> SHIFT "<<" GOTO 146
	expression/L11 = expression . ">>" expression, FOLLOW [215] -> SHIFT ">>" GOTO 147
	expression/L12 = expression . "." IDENT, FOLLOW [215] -> SHIFT '.' GOTO 148
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 149
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 149
	expression/L3 = expression "%=" expression . (58), FOLLOW [215] -> REDUCE expression #3 CALL assign_operator "%"
[198]
	iexpression = expression . indirection IDENT, FOLLOW [215] -> GOTO 114
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [215] -> SHIFT '(' GOTO 115
	expression/L13 = expression . "(" ")", FOLLOW [215] -> SHIFT '(' GOTO 115
	expression/L7 = expression . "&" expression, FOLLOW [215] -> SHIFT '&' GOTO 117
	expression/L7 = expression . "^" expression, FOLLOW [215] -> SHIFT '^' GOTO 118
	expression/L3 = expression . "=" expression, FOLLOW [215] -> SHIFT '=' GOTO 119
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [215] -> SHIFT '[' GOTO 120
	expression/L3 = expression . "+=" expression, FOLLOW [215] -> SHIFT "+=" GOTO 121
	expression/L3 = expression . "-=" expression, FOLLOW [215] -> SHIFT "-=" GOTO 122
	expression/L3 = expression . "*=" expression, FOLLOW [215] -> SHIFT "*=" GOTO 123
	expression/L3 = expression . "/=" expression, FOLLOW [215] -> SHIFT "/=" GOTO 124
	expression/L3 = expression . "%=" expression, FOLLOW [215] -> SHIFT "%=" GOTO 125
	expression/L3 = expression . "&&=" expression, FOLLOW [215] -> SHIFT "&&=" GOTO 126
	expression/L3 = expression . "||=" expression, FOLLOW [215] -> SHIFT "||=" GOTO 127
	expression/L3 = expression . "&=" expression, FOLLOW [215] -> SHIFT "&=" GOTO 128
	expression/L3 = expression . "|=" expression, FOLLOW [215] -> SHIFT "|=" GOTO 129
	expression/L3 = expression . "<<=" expression, FOLLOW [215] -> SHIFT "<<=" GOTO 130
	expression/L3 = expression . ">>=" expression, FOLLOW [215] -> SHIFT ">>=" GOTO 131
	expression/L4 = expression . "||" expression, FOLLOW [215] -> SHIFT "||" GOTO 132
	expression/L5 = expression . "&&" expression, FOLLOW [215] -> SHIFT "&&" GOTO 133
	expression/L6 = expression . "|" expression, FOLLOW [215] -> SHIFT '|' GOTO 134
	expression/L8 = expression . "==" expression, FOLLOW [215] -> SHIFT "==" GOTO 135
	expression/L8 = expression . "!=" expression, FOLLOW [215] -> SHIFT "!=" GOTO 136
	expression/L8 = expression . "<=" expression, FOLLOW [215] -> SHIFT "<=" GOTO 137
	expression/L8 = expression . "<" expression, FOLLOW [215] -> SHIFT '<' GOTO 138
	expression/L8 = expression . ">=" expression, FOLLOW [215] -> SHIFT ">=" GOTO 139
	expression/L8 = expression . ">" expression, FOLLOW [215] -> SHIFT '>' GOTO 140
	expression/L9 = expression . "+" expression, FOLLOW [215] -> SHIFT '+' GOTO 141
	expression/L9 = expression . "-" expression, FOLLOW [215] -> SHIFT '-' GOTO 142
	expression/L10 = expression . "*" expression, FOLLOW [215] -> SHIFT '*' GOTO 143
	expression/L10 = expression . "/" expression, FOLLOW [215] -> SHIFT '/' GOTO 144
	expression/L10 = expression . "%" expression, FOLLOW [215] -> SHIFT '%' GOTO 145
	expression/L11 = expression . "<<" expression, FOLLOW [215] -> SHIFT "<<" GOTO 146
	expression/L11 = expression . ">>" expression, FOLLOW [215] -> SHIFT ">>" GOTO 147
	expression/L12 = expression . "." IDENT, FOLLOW [215] -> SHIFT '.' GOTO 148
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 149
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 149
	expression/L3 = expression "&&=" expression . (59), FOLLOW [215] -> REDUCE expression #3 CALL assign_operator "&&"
[199]
	iexpression = expression . indirection IDENT, FOLLOW [215] -> GOTO 114
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [215] -> SHIFT '(' GOTO 115
	expression/L13 = expression . "(" ")", FOLLOW [215] -> SHIFT '(' GOTO 115
	expression/L7 = expression . "&" expression, FOLLOW [215] -> SHIFT '&' GOTO 117
	expression/L7 = expression . "^" expression, FOLLOW [215] -> SHIFT '^' GOTO 118
	expression/L3 = expression . "=" expression, FOLLOW [215] -> SHIFT '=' GOTO 119
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [215] -> SHIFT '[' GOTO 120
	expression/L3 = expression . "+=" expression, FOLLOW [215] -> SHIFT "+=" GOTO 121
	expression/L3 = expression . "-=" expression, FOLLOW [215] -> SHIFT "-=" GOTO 122
	expression/L3 = expression . "*=" expression, FOLLOW [215] -> SHIFT "*=" GOTO 123
	expression/L3 = expression . "/=" expression, FOLLOW [215] -> SHIFT "/=" GOTO 124
	expression/L3 = expression . "%=" expression, FOLLOW [215] -> SHIFT "%=" GOTO 125
	expression/L3 = expression . "&&=" expression, FOLLOW [215] -> SHIFT "&&=" GOTO 126
	expression/L3 = expression . "||=" expression, FOLLOW [215] -> SHIFT "||=" GOTO 127
	expression/L3 = expression . "&=" expression, FOLLOW [215] -> SHIFT "&=" GOTO 128
	expression/L3 = expression . "|=" expression, FOLLOW [215] -> SHIFT "|=" GOTO 129
	expression/L3 = expression . "<<=" expression, FOLLOW [215] -> SHIFT "<<=" GOTO 130
	expression/L3 = expression . ">>=" expression, FOLLOW [215] -> SHIFT ">>=" GOTO 131
	expression/L4 = expression . "||" expression, FOLLOW [215] -> SHIFT "||" GOTO 132
	expression/L5 = expression . "&&" expression, FOLLOW [215] -> SHIFT "&&" GOTO 133
	expression/L6 = expression . "|" expression, FOLLOW [215] -> SHIFT '|' GOTO 134
	expression/L8 = expression . "==" expression, FOLLOW [215] -> SHIFT "==" GOTO 135
	expression/L8 = expression . "!=" expression, FOLLOW [215] -> SHIFT "!=" GOTO 136
	expression/L8 = expression . "<=" expression, FOLLOW [215] -> SHIFT "<=" GOTO 137
	expression/L8 = expression . "<" expression, FOLLOW [215] -> SHIFT '<' GOTO 138
	expression/L8 = expression . ">=" expression, FOLLOW [215] -> SHIFT ">=" GOTO 139
	expression/L8 = expression . ">" expression, FOLLOW [215] -> SHIFT '>' GOTO 140
	expression/L9 = expression . "+" expression, FOLLOW [215] -> SHIFT '+' GOTO 141
	expression/L9 = expression . "-" expression, FOLLOW [215] -> SHIFT '-' GOTO 142
	expression/L10 = expression . "*" expression, FOLLOW [215] -> SHIFT '*' GOTO 143
	expression/L10 = expression . "/" expression, FOLLOW [215] -> SHIFT '/' GOTO 144
	expression/L10 = expression . "%" expression, FOLLOW [215] -> SHIFT '%' GOTO 145
	expression/L11 = expression . "<<" expression, FOLLOW [215] -> SHIFT "<<" GOTO 146
	expression/L11 = expression . ">>" expression, FOLLOW [215] -> SHIFT ">>" GOTO 147
	expression/L12 = expression . "." IDENT, FOLLOW [215] -> SHIFT '.' GOTO 148
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 149
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 149
	expression/L3 = expression "||=" expression . (60), FOLLOW [215] -> REDUCE expression #3 CALL assign_operator "||"
[200]
	iexpression = expression . indirection IDENT, FOLLOW [215] -> GOTO 114
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [215] -> SHIFT '(' GOTO 115
	expression/L13 = expression . "(" ")", FOLLOW [215] -> SHIFT '(' GOTO 115
	expression/L7 = expression . "&" expression, FOLLOW [215] -> SHIFT '&' GOTO 117
	expression/L7 = expression . "^" expression, FOLLOW [215] -> SHIFT '^' GOTO 118
	expression/L3 = expression . "=" expression, FOLLOW [215] -> SHIFT '=' GOTO 119
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [215] -> SHIFT '[' GOTO 120
	expression/L3 = expression . "+=" expression, FOLLOW [215] -> SHIFT "+=" GOTO 121
	expression/L3 = expression . "-=" expression, FOLLOW [215] -> SHIFT "-=" GOTO 122
	expression/L3 = expression . "*=" expression, FOLLOW [215] -> SHIFT "*=" GOTO 123
	expression/L3 = expression . "/=" expression, FOLLOW [215] -> SHIFT "/=" GOTO 124
	expression/L3 = expression . "%=" expression, FOLLOW [215] -> SHIFT "%=" GOTO 125
	expression/L3 = expression . "&&=" expression, FOLLOW [215] -> SHIFT "&&=" GOTO 126
	expression/L3 = expression . "||=" expression, FOLLOW [215] -> SHIFT "||=" GOTO 127
	expression/L3 = expression . "&=" expression, FOLLOW [215] -> SHIFT "&=" GOTO 128
	expression/L3 = expression . "|=" expression, FOLLOW [215] -> SHIFT "|=" GOTO 129
	expression/L3 = expression . "<<=" expression, FOLLOW [215] -> SHIFT "<<=" GOTO 130
	expression/L3 = expression . ">>=" expression, FOLLOW [215] -> SHIFT ">>=" GOTO 131
	expression/L4 = expression . "||" expression, FOLLOW [215] -> SHIFT "||" GOTO 132
	expression/L5 = expression . "&&" expression, FOLLOW [215] -> SHIFT "&&" GOTO 133
	expression/L6 = expression . "|" expression, FOLLOW [215] -> SHIFT '|' GOTO 134
	expression/L8 = expression . "==" expression, FOLLOW [215] -> SHIFT "==" GOTO 135
	expression/L8 = expression . "!=" expression, FOLLOW [215] -> SHIFT "!=" GOTO 136
	expression/L8 = expression . "<=" expression, FOLLOW [215] -> SHIFT "<=" GOTO 137
	expression/L8 = expression . "<" expression, FOLLOW [215] -> SHIFT '<' GOTO 138
	expression/L8 = expression . ">=" expression, FOLLOW [215] -> SHIFT ">=" GOTO 139
	expression/L8 = expression . ">" expression, FOLLOW [215] -> SHIFT '>' GOTO 140
	expression/L9 = expression . "+" expression, FOLLOW [215] -> SHIFT '+' GOTO 141
	expression/L9 = expression . "-" expression, FOLLOW [215] -> SHIFT '-' GOTO 142
	expression/L10 = expression . "*" expression, FOLLOW [215] -> SHIFT '*' GOTO 143
	expression/L10 = expression . "/" expression, FOLLOW [215] -> SHIFT '/' GOTO 144
	expression/L10 = expression . "%" expression, FOLLOW [215] -> SHIFT '%' GOTO 145
	expression/L11 = expression . "<<" expression, FOLLOW [215] -> SHIFT "<<" GOTO 146
	expression/L11 = expression . ">>" expression, FOLLOW [215] -> SHIFT ">>" GOTO 147
	expression/L12 = expression . "." IDENT, FOLLOW [215] -> SHIFT '.' GOTO 148
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 149
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 149
	expression/L3 = expression "&=" expression . (61), FOLLOW [215] -> REDUCE expression #3 CALL assign_operator "&"
[201]
	iexpression = expression . indirection IDENT, FOLLOW [215] -> GOTO 114
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [215] -> SHIFT '(' GOTO 115
	expression/L13 = expression . "(" ")", FOLLOW [215] -> SHIFT '(' GOTO 115
	expression/L7 = expression . "&" expression, FOLLOW [215] -> SHIFT '&' GOTO 117
	expression/L7 = expression . "^" expression, FOLLOW [215] -> SHIFT '^' GOTO 118
	expression/L3 = expression . "=" expression, FOLLOW [215] -> SHIFT '=' GOTO 119
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [215] -> SHIFT '[' GOTO 120
	expression/L3 = expression . "+=" expression, FOLLOW [215] -> SHIFT "+=" GOTO 121
	expression/L3 = expression . "-=" expression, FOLLOW [215] -> SHIFT "-=" GOTO 122
	expression/L3 = expression . "*=" expression, FOLLOW [215] -> SHIFT "*=" GOTO 123
	expression/L3 = expression . "/=" expression, FOLLOW [215] -> SHIFT "/=" GOTO 124
	expression/L3 = expression . "%=" expression, FOLLOW [215] -> SHIFT "%=" GOTO 125
	expression/L3 = expression . "&&=" expression, FOLLOW [215] -> SHIFT "&&=" GOTO 126
	expression/L3 = expression . "||=" expression, FOLLOW [215] -> SHIFT "||=" GOTO 127
	expression/L3 = expression . "&=" expression, FOLLOW [215] -> SHIFT "&=" GOTO 128
	expression/L3 = expression . "|=" expression, FOLLOW [215] -> SHIFT "|=" GOTO 129
	expression/L3 = expression . "<<=" expression, FOLLOW [215] -> SHIFT "<<=" GOTO 130
	expression/L3 = expression . ">>=" expression, FOLLOW [215] -> SHIFT ">>=" GOTO 131
	expression/L4 = expression . "||" expression, FOLLOW [215] -> SHIFT "||" GOTO 132
	expression/L5 = expression . "&&" expression, FOLLOW [215] -> SHIFT "&&" GOTO 133
	expression/L6 = expression . "|" expression, FOLLOW [215] -> SHIFT '|' GOTO 134
	expression/L8 = expression . "==" expression, FOLLOW [215] -> SHIFT "==" GOTO 135
	expression/L8 = expression . "!=" expression, FOLLOW [215] -> SHIFT "!=" GOTO 136
	expression/L8 = expression . "<=" expression, FOLLOW [215] -> SHIFT "<=" GOTO 137
	expression/L8 = expression . "<" expression, FOLLOW [215] -> SHIFT '<' GOTO 138
	expression/L8 = expression . ">=" expression, FOLLOW [215] -> SHIFT ">=" GOTO 139
	expression/L8 = expression . ">" expression, FOLLOW [215] -> SHIFT '>' GOTO 140
	expression/L9 = expression . "+" expression, FOLLOW [215] -> SHIFT '+' GOTO 141
	expression/L9 = expression . "-" expression, FOLLOW [215] -> SHIFT '-' GOTO 142
	expression/L10 = expression . "*" expression, FOLLOW [215] -> SHIFT '*' GOTO 143
	expression/L10 = expression . "/" expression, FOLLOW [215] -> SHIFT '/' GOTO 144
	expression/L10 = expression . "%" expression, FOLLOW [215] -> SHIFT '%' GOTO 145
	expression/L11 = expression . "<<" expression, FOLLOW [215] -> SHIFT "<<" GOTO 146
	expression/L11 = expression . ">>" expression, FOLLOW [215] -> SHIFT ">>" GOTO 147
	expression/L12 = expression . "." IDENT, FOLLOW [215] -> SHIFT '.' GOTO 148
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 149
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 149
	expression/L3 = expression "|=" expression . (62), FOLLOW [215] -> REDUCE expression #3 CALL assign_operator "|"
[202]
	iexpression = expression . indirection IDENT, FOLLOW [215] -> GOTO 114
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [215] -> SHIFT '(' GOTO 115
	expression/L13 = expression . "(" ")", FOLLOW [215] -> SHIFT '(' GOTO 115
	expression/L7 = expression . "&" expression, FOLLOW [215] -> SHIFT '&' GOTO 117
	expression/L7 = expression . "^" expression, FOLLOW [215] -> SHIFT '^' GOTO 118
	expression/L3 = expression . "=" expression, FOLLOW [215] -> SHIFT '=' GOTO 119
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [215] -> SHIFT '[' GOTO 120
	expression/L3 = expression . "+=" expression, FOLLOW [215] -> SHIFT "+=" GOTO 121
	expression/L3 = expression . "-=" expression, FOLLOW [215] -> SHIFT "-=" GOTO 122
	expression/L3 = expression . "*=" expression, FOLLOW [215] -> SHIFT "*=" GOTO 123
	expression/L3 = expression . "/=" expression, FOLLOW [215] -> SHIFT "/=" GOTO 124
	expression/L3 = expression . "%=" expression, FOLLOW [215] -> SHIFT "%=" GOTO 125
	expression/L3 = expression . "&&=" expression, FOLLOW [215] -> SHIFT "&&=" GOTO 126
	expression/L3 = expression . "||=" expression, FOLLOW [215] -> SHIFT "||=" GOTO 127
	expression/L3 = expression . "&=" expression, FOLLOW [215] -> SHIFT "&=" GOTO 128
	expression/L3 = expression . "|=" expression, FOLLOW [215] -> SHIFT "|=" GOTO 129
	expression/L3 = expression . "<<=" expression, FOLLOW [215] -> SHIFT "<<=" GOTO 130
	expression/L3 = expression . ">>=" expression, FOLLOW [215] -> SHIFT ">>=" GOTO 131
	expression/L4 = expression . "||" expression, FOLLOW [215] -> SHIFT "||" GOTO 132
	expression/L5 = expression . "&&" expression, FOLLOW [215] -> SHIFT "&&" GOTO 133
	expression/L6 = expression . "|" expression, FOLLOW [215] -> SHIFT '|' GOTO 134
	expression/L8 = expression . "==" expression, FOLLOW [215] -> SHIFT "==" GOTO 135
	expression/L8 = expression . "!=" expression, FOLLOW [215] -> SHIFT "!=" GOTO 136
	expression/L8 = expression . "<=" expression, FOLLOW [215] -> SHIFT "<=" GOTO 137
	expression/L8 = expression . "<" expression, FOLLOW [215] -> SHIFT '<' GOTO 138
	expression/L8 = expression . ">=" expression, FOLLOW [215] -> SHIFT ">=" GOTO 139
	expression/L8 = expression . ">" expression, FOLLOW [215] -> SHIFT '>' GOTO 140
	expression/L9 = expression . "+" expression, FOLLOW [215] -> SHIFT '+' GOTO 141
	expression/L9 = expression . "-" expression, FOLLOW [215] -> SHIFT '-' GOTO 142
	expression/L10 = expression . "*" expression, FOLLOW [215] -> SHIFT '*' GOTO 143
	expression/L10 = expression . "/" expression, FOLLOW [215] -> SHIFT '/' GOTO 144
	expression/L10 = expression . "%" expression, FOLLOW [215] -> SHIFT '%' GOTO 145
	expression/L11 = expression . "<<" expression, FOLLOW [215] -> SHIFT "<<" GOTO 146
	expression/L11 = expression . ">>" expression, FOLLOW [215] -> SHIFT ">>" GOTO 147
	expression/L12 = expression . "." IDENT, FOLLOW [215] -> SHIFT '.' GOTO 148
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 149
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 149
	expression/L3 = expression "<<=" expression . (63), FOLLOW [215] -> REDUCE expression #3 CALL assign_operator "<<"
[203]
	iexpression = expression . indirection IDENT, FOLLOW [215] -> GOTO 114
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [215] -> SHIFT '(' GOTO 115
	expression/L13 = expression . "(" ")", FOLLOW [215] -> SHIFT '(' GOTO 115
	expression/L7 = expression . "&" expression, FOLLOW [215] -> SHIFT '&' GOTO 117
	expression/L7 = expression . "^" expression, FOLLOW [215] -> SHIFT '^' GOTO 118
	expression/L3 = expression . "=" expression, FOLLOW [215] -> SHIFT '=' GOTO 119
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [215] -> SHIFT '[' GOTO 120
	expression/L3 = expression . "+=" expression, FOLLOW [215] -> SHIFT "+=" GOTO 121
	expression/L3 = expression . "-=" expression, FOLLOW [215] -> SHIFT "-=" GOTO 122
	expression/L3 = expression . "*=" expression, FOLLOW [215] -> SHIFT "*=" GOTO 123
	expression/L3 = expression . "/=" expression, FOLLOW [215] -> SHIFT "/=" GOTO 124
	expression/L3 = expression . "%=" expression, FOLLOW [215] -> SHIFT "%=" GOTO 125
	expression/L3 = expression . "&&=" expression, FOLLOW [215] -> SHIFT "&&=" GOTO 126
	expression/L3 = expression . "||=" expression, FOLLOW [215] -> SHIFT "||=" GOTO 127
	expression/L3 = expression . "&=" expression, FOLLOW [215] -> SHIFT "&=" GOTO 128
	expression/L3 = expression . "|=" expression, FOLLOW [215] -> SHIFT "|=" GOTO 129
	expression/L3 = expression . "<<=" expression, FOLLOW [215] -> SHIFT "<<=" GOTO 130
	expression/L3 = expression . ">>=" expression, FOLLOW [215] -> SHIFT ">>=" GOTO 131
	expression/L4 = expression . "||" expression, FOLLOW [215] -> SHIFT "||" GOTO 132
	expression/L5 = expression . "&&" expression, FOLLOW [215] -> SHIFT "&&" GOTO 133
	expression/L6 = expression . "|" expression, FOLLOW [215] -> SHIFT '|' GOTO 134
	expression/L8 = expression . "==" expression, FOLLOW [215] -> SHIFT "==" GOTO 135
	expression/L8 = expression . "!=" expression, FOLLOW [215] -> SHIFT "!=" GOTO 136
	expression/L8 = expression . "<=" expression, FOLLOW [215] -> SHIFT "<=" GOTO 137
	expression/L8 = expression . "<" expression, FOLLOW [215] -> SHIFT '<' GOTO 138
	expression/L8 = expression . ">=" expression, FOLLOW [215] -> SHIFT ">=" GOTO 139
	expression/L8 = expression . ">" expression, FOLLOW [215] -> SHIFT '>' GOTO 140
	expression/L9 = expression . "+" expression, FOLLOW [215] -> SHIFT '+' GOTO 141
	expression/L9 = expression . "-" expression, FOLLOW [215] -> SHIFT '-' GOTO 142
	expression/L10 = expression . "*" expression, FOLLOW [215] -> SHIFT '*' GOTO 143
	expression/L10 = expression . "/" expression, FOLLOW [215] -> SHIFT '/' GOTO 144
	expression/L10 = expression . "%" expression, FOLLOW [215] -> SHIFT '%' GOTO 145
	expression/L11 = expression . "<<" expression, FOLLOW [215] -> SHIFT "<<" GOTO 146
	expression/L11 = expression . ">>" expression, FOLLOW [215] -> SHIFT ">>" GOTO 147
	expression/L12 = expression . "." IDENT, FOLLOW [215] -> SHIFT '.' GOTO 148
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 149
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 149
	expression/L3 = expression ">>=" expression . (64), FOLLOW [215] -> REDUCE expression #3 CALL assign_operator ">>"
[204]
	iexpression = expression . indirection IDENT, FOLLOW [215] -> GOTO 114
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [215] -> SHIFT '(' GOTO 115
	expression/L13 = expression . "(" ")", FOLLOW [215] -> SHIFT '(' GOTO 115
	expression/L7 = expression . "&" expression, FOLLOW [215] -> SHIFT '&' GOTO 117
	expression/L7 = expression . "^" expression, FOLLOW [215] -> SHIFT '^' GOTO 118
	expression/L3 = expression . "=" expression, FOLLOW [215] -> SHIFT '=' GOTO 119
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [215] -> SHIFT '[' GOTO 120
	expression/L3 = expression . "+=" expression, FOLLOW [215] -> SHIFT "+=" GOTO 121
	expression/L3 = expression . "-=" expression, FOLLOW [215] -> SHIFT "-=" GOTO 122
	expression/L3 = expression . "*=" expression, FOLLOW [215] -> SHIFT "*=" GOTO 123
	expression/L3 = expression . "/=" expression, FOLLOW [215] -> SHIFT "/=" GOTO 124
	expression/L3 = expression . "%=" expression, FOLLOW [215] -> SHIFT "%=" GOTO 125
	expression/L3 = expression . "&&=" expression, FOLLOW [215] -> SHIFT "&&=" GOTO 126
	expression/L3 = expression . "||=" expression, FOLLOW [215] -> SHIFT "||=" GOTO 127
	expression/L3 = expression . "&=" expression, FOLLOW [215] -> SHIFT "&=" GOTO 128
	expression/L3 = expression . "|=" expression, FOLLOW [215] -> SHIFT "|=" GOTO 129
	expression/L3 = expression . "<<=" expression, FOLLOW [215] -> SHIFT "<<=" GOTO 130
	expression/L3 = expression . ">>=" expression, FOLLOW [215] -> SHIFT ">>=" GOTO 131
	expression/L4 = expression . "||" expression, FOLLOW [215] -> SHIFT "||" GOTO 132
	expression/L5 = expression . "&&" expression, FOLLOW [215] -> SHIFT "&&" GOTO 133
	expression/L6 = expression . "|" expression, FOLLOW [215] -> SHIFT '|' GOTO 134
	expression/L8 = expression . "==" expression, FOLLOW [215] -> SHIFT "==" GOTO 135
	expression/L8 = expression . "!=" expression, FOLLOW [215] -> SHIFT "!=" GOTO 136
	expression/L8 = expression . "<=" expression, FOLLOW [215] -> SHIFT "<=" GOTO 137
	expression/L8 = expression . "<" expression, FOLLOW [215] -> SHIFT '<' GOTO 138
	expression/L8 = expression . ">=" expression, FOLLOW [215] -> SHIFT ">=" GOTO 139
	expression/L8 = expression . ">" expression, FOLLOW [215] -> SHIFT '>' GOTO 140
	expression/L9 = expression . "+" expression, FOLLOW [215] -> SHIFT '+' GOTO 141
	expression/L9 = expression . "-" expression, FOLLOW [215] -> SHIFT '-' GOTO 142
	expression/L10 = expression . "*" expression, FOLLOW [215] -> SHIFT '*' GOTO 143
	expression/L10 = expression . "/" expression, FOLLOW [215] -> SHIFT '/' GOTO 144
	expression/L10 = expression . "%" expression, FOLLOW [215] -> SHIFT '%' GOTO 145
	expression/L11 = expression . "<<" expression, FOLLOW [215] -> SHIFT "<<" GOTO 146
	expression/L11 = expression . ">>" expression, FOLLOW [215] -> SHIFT ">>" GOTO 147
	expression/L12 = expression . "." IDENT, FOLLOW [215] -> SHIFT '.' GOTO 148
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 149
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 149
	expression/L4 = expression "||" expression . (65), FOLLOW [215] -> REDUCE expression #3 CALL operator "||"
[205]
	iexpression = expression . indirection IDENT, FOLLOW [215] -> GOTO 114
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [215] -> SHIFT '(' GOTO 115
	expression/L13 = expression . "(" ")", FOLLOW [215] -> SHIFT '(' GOTO 115
	expression/L7 = expression . "&" expression, FOLLOW [215] -> SHIFT '&' GOTO 117
	expression/L7 = expression . "^" expression, FOLLOW [215] -> SHIFT '^' GOTO 118
	expression/L3 = expression . "=" expression, FOLLOW [215] -> SHIFT '=' GOTO 119
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [215] -> SHIFT '[' GOTO 120
	expression/L3 = expression . "+=" expression, FOLLOW [215] -> SHIFT "+=" GOTO 121
	expression/L3 = expression . "-=" expression, FOLLOW [215] -> SHIFT "-=" GOTO 122
	expression/L3 = expression . "*=" expression, FOLLOW [215] -> SHIFT "*=" GOTO 123
	expression/L3 = expression . "/=" expression, FOLLOW [215] -> SHIFT "/=" GOTO 124
	expression/L3 = expression . "%=" expression, FOLLOW [215] -> SHIFT "%=" GOTO 125
	expression/L3 = expression . "&&=" expression, FOLLOW [215] -> SHIFT "&&=" GOTO 126
	expression/L3 = expression . "||=" expression, FOLLOW [215] -> SHIFT "||=" GOTO 127
	expression/L3 = expression . "&=" expression, FOLLOW [215] -> SHIFT "&=" GOTO 128
	expression/L3 = expression . "|=" expression, FOLLOW [215] -> SHIFT "|=" GOTO 129
	expression/L3 = expression . "<<=" expression, FOLLOW [215] -> SHIFT "<<=" GOTO 130
	expression/L3 = expression . ">>=" expression, FOLLOW [215] -> SHIFT ">>=" GOTO 131
	expression/L4 = expression . "||" expression, FOLLOW [215] -> SHIFT "||" GOTO 132
	expression/L5 = expression . "&&" expression, FOLLOW [215] -> SHIFT "&&" GOTO 133
	expression/L6 = expression . "|" expression, FOLLOW [215] -> SHIFT '|' GOTO 134
	expression/L8 = expression . "==" expression, FOLLOW [215] -> SHIFT "==" GOTO 135
	expression/L8 = expression . "!=" expression, FOLLOW [215] -> SHIFT "!=" GOTO 136
	expression/L8 = expression . "<=" expression, FOLLOW [215] -> SHIFT "<=" GOTO 137
	expression/L8 = expression . "<" expression, FOLLOW [215] -> SHIFT '<' GOTO 138
	expression/L8 = expression . ">=" expression, FOLLOW [215] -> SHIFT ">=" GOTO 139
	expression/L8 = expression . ">" expression, FOLLOW [215] -> SHIFT '>' GOTO 140
	expression/L9 = expression . "+" expression, FOLLOW [215] -> SHIFT '+' GOTO 141
	expression/L9 = expression . "-" expression, FOLLOW [215] -> SHIFT '-' GOTO 142
	expression/L10 = expression . "*" expression, FOLLOW [215] -> SHIFT '*' GOTO 143
	expression/L10 = expression . "/" expression, FOLLOW [215] -> SHIFT '/' GOTO 144
	expression/L10 = expression . "%" expression, FOLLOW [215] -> SHIFT '%' GOTO 145
	expression/L11 = expression . "<<" expression, FOLLOW [215] -> SHIFT "<<" GOTO 146
	expression/L11 = expression . ">>" expression, FOLLOW [215] -> SHIFT ">>" GOTO 147
	expression/L12 = expression . "." IDENT, FOLLOW [215] -> SHIFT '.' GOTO 148
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 149
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 149
	expression/L5 = expression "&&" expression . (66), FOLLOW [215] -> REDUCE expression #3 CALL operator "&&"
[206]
	iexpression = expression . indirection IDENT, FOLLOW [215] -> GOTO 114
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [215] -> SHIFT '(' GOTO 115
	expression/L13 = expression . "(" ")", FOLLOW [215] -> SHIFT '(' GOTO 115
	expression/L7 = expression . "&" expression, FOLLOW [215] -> SHIFT '&' GOTO 117
	expression/L7 = expression . "^" expression, FOLLOW [215] -> SHIFT '^' GOTO 118
	expression/L3 = expression . "=" expression, FOLLOW [215] -> SHIFT '=' GOTO 119
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [215] -> SHIFT '[' GOTO 120
	expression/L3 = expression . "+=" expression, FOLLOW [215] -> SHIFT "+=" GOTO 121
	expression/L3 = expression . "-=" expression, FOLLOW [215] -> SHIFT "-=" GOTO 122
	expression/L3 = expression . "*=" expression, FOLLOW [215] -> SHIFT "*=" GOTO 123
	expression/L3 = expression . "/=" expression, FOLLOW [215] -> SHIFT "/=" GOTO 124
	expression/L3 = expression . "%=" expression, FOLLOW [215] -> SHIFT "%=" GOTO 125
	expression/L3 = expression . "&&=" expression, FOLLOW [215] -> SHIFT "&&=" GOTO 126
	expression/L3 = expression . "||=" expression, FOLLOW [215] -> SHIFT "||=" GOTO 127
	expression/L3 = expression . "&=" expression, FOLLOW [215] -> SHIFT "&=" GOTO 128
	expression/L3 = expression . "|=" expression, FOLLOW [215] -> SHIFT "|=" GOTO 129
	expression/L3 = expression . "<<=" expression, FOLLOW [215] -> SHIFT "<<=" GOTO 130
	expression/L3 = expression . ">>=" expression, FOLLOW [215] -> SHIFT ">>=" GOTO 131
	expression/L4 = expression . "||" expression, FOLLOW [215] -> SHIFT "||" GOTO 132
	expression/L5 = expression . "&&" expression, FOLLOW [215] -> SHIFT "&&" GOTO 133
	expression/L6 = expression . "|" expression, FOLLOW [215] -> SHIFT '|' GOTO 134
	expression/L8 = expression . "==" expression, FOLLOW [215] -> SHIFT "==" GOTO 135
	expression/L8 = expression . "!=" expression, FOLLOW [215] -> SHIFT "!=" GOTO 136
	expression/L8 = expression . "<=" expression, FOLLOW [215] -> SHIFT "<=" GOTO 137
	expression/L8 = expression . "<" expression, FOLLOW [215] -> SHIFT '<' GOTO 138
	expression/L8 = expression . ">=" expression, FOLLOW [215] -> SHIFT ">=" GOTO 139
	expression/L8 = expression . ">" expression, FOLLOW [215] -> SHIFT '>' GOTO 140
	expression/L9 = expression . "+" expression, FOLLOW [215] -> SHIFT '+' GOTO 141
	expression/L9 = expression . "-" expression, FOLLOW [215] -> SHIFT '-' GOTO 142
	expression/L10 = expression . "*" expression, FOLLOW [215] -> SHIFT '*' GOTO 143
	expression/L10 = expression . "/" expression, FOLLOW [215] -> SHIFT '/' GOTO 144
	expression/L10 = expression . "%" expression, FOLLOW [215] -> SHIFT '%' GOTO 145
	expression/L11 = expression . "<<" expression, FOLLOW [215] -> SHIFT "<<" GOTO 146
	expression/L11 = expression . ">>" expression, FOLLOW [215] -> SHIFT ">>" GOTO 147
	expression/L12 = expression . "." IDENT, FOLLOW [215] -> SHIFT '.' GOTO 148
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 149
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 149
	expression/L6 = expression "|" expression . (67), FOLLOW [215] -> REDUCE expression #3 CALL operator "|"
[207]
	iexpression = expression . indirection IDENT, FOLLOW [215] -> GOTO 114
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [215] -> SHIFT '(' GOTO 115
	expression/L13 = expression . "(" ")", FOLLOW [215] -> SHIFT '(' GOTO 115
	expression/L7 = expression . "&" expression, FOLLOW [215] -> SHIFT '&' GOTO 117
	expression/L7 = expression . "^" expression, FOLLOW [215] -> SHIFT '^' GOTO 118
	expression/L3 = expression . "=" expression, FOLLOW [215] -> SHIFT '=' GOTO 119
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [215] -> SHIFT '[' GOTO 120
	expression/L3 = expression . "+=" expression, FOLLOW [215] -> SHIFT "+=" GOTO 121
	expression/L3 = expression . "-=" expression, FOLLOW [215] -> SHIFT "-=" GOTO 122
	expression/L3 = expression . "*=" expression, FOLLOW [215] -> SHIFT "*=" GOTO 123
	expression/L3 = expression . "/=" expression, FOLLOW [215] -> SHIFT "/=" GOTO 124
	expression/L3 = expression . "%=" expression, FOLLOW [215] -> SHIFT "%=" GOTO 125
	expression/L3 = expression . "&&=" expression, FOLLOW [215] -> SHIFT "&&=" GOTO 126
	expression/L3 = expression . "||=" expression, FOLLOW [215] -> SHIFT "||=" GOTO 127
	expression/L3 = expression . "&=" expression, FOLLOW [215] -> SHIFT "&=" GOTO 128
	expression/L3 = expression . "|=" expression, FOLLOW [215] -> SHIFT "|=" GOTO 129
	expression/L3 = expression . "<<=" expression, FOLLOW [215] -> SHIFT "<<=" GOTO 130
	expression/L3 = expression . ">>=" expression, FOLLOW [215] -> SHIFT ">>=" GOTO 131
	expression/L4 = expression . "||" expression, FOLLOW [215] -> SHIFT "||" GOTO 132
	expression/L5 = expression . "&&" expression, FOLLOW [215] -> SHIFT "&&" GOTO 133
	expression/L6 = expression . "|" expression, FOLLOW [215] -> SHIFT '|' GOTO 134
	expression/L8 = expression . "==" expression, FOLLOW [215] -> SHIFT "==" GOTO 135
	expression/L8 = expression . "!=" expression, FOLLOW [215] -> SHIFT "!=" GOTO 136
	expression/L8 = expression . "<=" expression, FOLLOW [215] -> SHIFT "<=" GOTO 137
	expression/L8 = expression . "<" expression, FOLLOW [215] -> SHIFT '<' GOTO 138
	expression/L8 = expression . ">=" expression, FOLLOW [215] -> SHIFT ">=" GOTO 139
	expression/L8 = expression . ">" expression, FOLLOW [215] -> SHIFT '>' GOTO 140
	expression/L9 = expression . "+" expression, FOLLOW [215] -> SHIFT '+' GOTO 141
	expression/L9 = expression . "-" expression, FOLLOW [215] -> SHIFT '-' GOTO 142
	expression/L10 = expression . "*" expression, FOLLOW [215] -> SHIFT '*' GOTO 143
	expression/L10 = expression . "/" expression, FOLLOW [215] -> SHIFT '/' GOTO 144
	expression/L10 = expression . "%" expression, FOLLOW [215] -> SHIFT '%' GOTO 145
	expression/L11 = expression . "<<" expression, FOLLOW [215] -> SHIFT "<<" GOTO 146
	expression/L11 = expression . ">>" expression, FOLLOW [215] -> SHIFT ">>" GOTO 147
	expression/L12 = expression . "." IDENT, FOLLOW [215] -> SHIFT '.' GOTO 148
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 149
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 149
	expression/L8 = expression "==" expression . (70), FOLLOW [215] -> REDUCE expression #3 CALL operator "=="
[208]
	iexpression = expression . indirection IDENT, FOLLOW [215] -> GOTO 114
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [215] -> SHIFT '(' GOTO 115
	expression/L13 = expression . "(" ")", FOLLOW [215] -> SHIFT '(' GOTO 115
	expression/L7 = expression . "&" expression, FOLLOW [215] -> SHIFT '&' GOTO 117
	expression/L7 = expression . "^" expression, FOLLOW [215] -> SHIFT '^' GOTO 118
	expression/L3 = expression . "=" expression, FOLLOW [215] -> SHIFT '=' GOTO 119
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [215] -> SHIFT '[' GOTO 120
	expression/L3 = expression . "+=" expression, FOLLOW [215] -> SHIFT "+=" GOTO 121
	expression/L3 = expression . "-=" expression, FOLLOW [215] -> SHIFT "-=" GOTO 122
	expression/L3 = expression . "*=" expression, FOLLOW [215] -> SHIFT "*=" GOTO 123
	expression/L3 = expression . "/=" expression, FOLLOW [215] -> SHIFT "/=" GOTO 124
	expression/L3 = expression . "%=" expression, FOLLOW [215] -> SHIFT "%=" GOTO 125
	expression/L3 = expression . "&&=" expression, FOLLOW [215] -> SHIFT "&&=" GOTO 126
	expression/L3 = expression . "||=" expression, FOLLOW [215] -> SHIFT "||=" GOTO 127
	expression/L3 = expression . "&=" expression, FOLLOW [215] -> SHIFT "&=" GOTO 128
	expression/L3 = expression . "|=" expression, FOLLOW [215] -> SHIFT "|=" GOTO 129
	expression/L3 = expression . "<<=" expression, FOLLOW [215] -> SHIFT "<<=" GOTO 130
	expression/L3 = expression . ">>=" expression, FOLLOW [215] -> SHIFT ">>=" GOTO 131
	expression/L4 = expression . "||" expression, FOLLOW [215] -> SHIFT "||" GOTO 132
	expression/L5 = expression . "&&" expression, FOLLOW [215] -> SHIFT "&&" GOTO 133
	expression/L6 = expression . "|" expression, FOLLOW [215] -> SHIFT '|' GOTO 134
	expression/L8 = expression . "==" expression, FOLLOW [215] -> SHIFT "==" GOTO 135
	expression/L8 = expression . "!=" expression, FOLLOW [215] -> SHIFT "!=" GOTO 136
	expression/L8 = expression . "<=" expression, FOLLOW [215] -> SHIFT "<=" GOTO 137
	expression/L8 = expression . "<" expression, FOLLOW [215] -> SHIFT '<' GOTO 138
	expression/L8 = expression . ">=" expression, FOLLOW [215] -> SHIFT ">=" GOTO 139
	expression/L8 = expression . ">" expression, FOLLOW [215] -> SHIFT '>' GOTO 140
	expression/L9 = expression . "+" expression, FOLLOW [215] -> SHIFT '+' GOTO 141
	expression/L9 = expression . "-" expression, FOLLOW [215] -> SHIFT '-' GOTO 142
	expression/L10 = expression . "*" expression, FOLLOW [215] -> SHIFT '*' GOTO 143
	expression/L10 = expression . "/" expression, FOLLOW [215] -> SHIFT '/' GOTO 144
	expression/L10 = expression . "%" expression, FOLLOW [215] -> SHIFT '%' GOTO 145
	expression/L11 = expression . "<<" expression, FOLLOW [215] -> SHIFT "<<" GOTO 146
	expression/L11 = expression . ">>" expression, FOLLOW [215] -> SHIFT ">>" GOTO 147
	expression/L12 = expression . "." IDENT, FOLLOW [215] -> SHIFT '.' GOTO 148
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 149
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 149
	expression/L8 = expression "!=" expression . (71), FOLLOW [215] -> REDUCE expression #3 CALL operator "!="
[209]
	iexpression = expression . indirection IDENT, FOLLOW [215] -> GOTO 114
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [215] -> SHIFT '(' GOTO 115
	expression/L13 = expression . "(" ")", FOLLOW [215] -> SHIFT '(' GOTO 115
	expression/L7 = expression . "&" expression, FOLLOW [215] -> SHIFT '&' GOTO 117
	expression/L7 = expression . "^" expression, FOLLOW [215] -> SHIFT '^' GOTO 118
	expression/L3 = expression . "=" expression, FOLLOW [215] -> SHIFT '=' GOTO 119
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [215] -> SHIFT '[' GOTO 120
	expression/L3 = expression . "+=" expression, FOLLOW [215] -> SHIFT "+=" GOTO 121
	expression/L3 = expression . "-=" expression, FOLLOW [215] -> SHIFT "-=" GOTO 122
	expression/L3 = expression . "*=" expression, FOLLOW [215] -> SHIFT "*=" GOTO 123
	expression/L3 = expression . "/=" expression, FOLLOW [215] -> SHIFT "/=" GOTO 124
	expression/L3 = expression . "%=" expression, FOLLOW [215] -> SHIFT "%=" GOTO 125
	expression/L3 = expression . "&&=" expression, FOLLOW [215] -> SHIFT "&&=" GOTO 126
	expression/L3 = expression . "||=" expression, FOLLOW [215] -> SHIFT "||=" GOTO 127
	expression/L3 = expression . "&=" expression, FOLLOW [215] -> SHIFT "&=" GOTO 128
	expression/L3 = expression . "|=" expression, FOLLOW [215] -> SHIFT "|=" GOTO 129
	expression/L3 = expression . "<<=" expression, FOLLOW [215] -> SHIFT "<<=" GOTO 130
	expression/L3 = expression . ">>=" expression, FOLLOW [215] -> SHIFT ">>=" GOTO 131
	expression/L4 = expression . "||" expression, FOLLOW [215] -> SHIFT "||" GOTO 132
	expression/L5 = expression . "&&" expression, FOLLOW [215] -> SHIFT "&&" GOTO 133
	expression/L6 = expression . "|" expression, FOLLOW [215] -> SHIFT '|' GOTO 134
	expression/L8 = expression . "==" expression, FOLLOW [215] -> SHIFT "==" GOTO 135
	expression/L8 = expression . "!=" expression, FOLLOW [215] -> SHIFT "!=" GOTO 136
	expression/L8 = expression . "<=" expression, FOLLOW [215] -> SHIFT "<=" GOTO 137
	expression/L8 = expression . "<" expression, FOLLOW [215] -> SHIFT '<' GOTO 138
	expression/L8 = expression . ">=" expression, FOLLOW [215] -> SHIFT ">=" GOTO 139
	expression/L8 = expression . ">" expression, FOLLOW [215] -> SHIFT '>' GOTO 140
	expression/L9 = expression . "+" expression, FOLLOW [215] -> SHIFT '+' GOTO 141
	expression/L9 = expression . "-" expression, FOLLOW [215] -> SHIFT '-' GOTO 142
	expression/L10 = expression . "*" expression, FOLLOW [215] -> SHIFT '*' GOTO 143
	expression/L10 = expression . "/" expression, FOLLOW [215] -> SHIFT '/' GOTO 144
	expression/L10 = expression . "%" expression, FOLLOW [215] -> SHIFT '%' GOTO 145
	expression/L11 = expression . "<<" expression, FOLLOW [215] -> SHIFT "<<" GOTO 146
	expression/L11 = expression . ">>" expression, FOLLOW [215] -> SHIFT ">>" GOTO 147
	expression/L12 = expression . "." IDENT, FOLLOW [215] -> SHIFT '.' GOTO 148
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 149
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 149
	expression/L8 = expression "<=" expression . (72), FOLLOW [215] -> REDUCE expression #3 CALL operator "<="
[210]
	iexpression = expression . indirection IDENT, FOLLOW [215] -> GOTO 114
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [215] -> SHIFT '(' GOTO 115
	expression/L13 = expression . "(" ")", FOLLOW [215] -> SHIFT '(' GOTO 115
	expression/L7 = expression . "&" expression, FOLLOW [215] -> SHIFT '&' GOTO 117
	expression/L7 = expression . "^" expression, FOLLOW [215] -> SHIFT '^' GOTO 118
	expression/L3 = expression . "=" expression, FOLLOW [215] -> SHIFT '=' GOTO 119
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [215] -> SHIFT '[' GOTO 120
	expression/L3 = expression . "+=" expression, FOLLOW [215] -> SHIFT "+=" GOTO 121
	expression/L3 = expression . "-=" expression, FOLLOW [215] -> SHIFT "-=" GOTO 122
	expression/L3 = expression . "*=" expression, FOLLOW [215] -> SHIFT "*=" GOTO 123
	expression/L3 = expression . "/=" expression, FOLLOW [215] -> SHIFT "/=" GOTO 124
	expression/L3 = expression . "%=" expression, FOLLOW [215] -> SHIFT "%=" GOTO 125
	expression/L3 = expression . "&&=" expression, FOLLOW [215] -> SHIFT "&&=" GOTO 126
	expression/L3 = expression . "||=" expression, FOLLOW [215] -> SHIFT "||=" GOTO 127
	expression/L3 = expression . "&=" expression, FOLLOW [215] -> SHIFT "&=" GOTO 128
	expression/L3 = expression . "|=" expression, FOLLOW [215] -> SHIFT "|=" GOTO 129
	expression/L3 = expression . "<<=" expression, FOLLOW [215] -> SHIFT "<<=" GOTO 130
	expression/L3 = expression . ">>=" expression, FOLLOW [215] -> SHIFT ">>=" GOTO 131
	expression/L4 = expression . "||" expression, FOLLOW [215] -> SHIFT "||" GOTO 132
	expression/L5 = expression . "&&" expression, FOLLOW [215] -> SHIFT "&&" GOTO 133
	expression/L6 = expression . "|" expression, FOLLOW [215] -> SHIFT '|' GOTO 134
	expression/L8 = expression . "==" expression, FOLLOW [215] -> SHIFT "==" GOTO 135
	expression/L8 = expression . "!=" expression, FOLLOW [215] -> SHIFT "!=" GOTO 136
	expression/L8 = expression . "<=" expression, FOLLOW [215] -> SHIFT "<=" GOTO 137
	expression/L8 = expression . "<" expression, FOLLOW [215] -> SHIFT '<' GOTO 138
	expression/L8 = expression . ">=" expression, FOLLOW [215] -> SHIFT ">=" GOTO 139
	expression/L8 = expression . ">" expression, FOLLOW [215] -> SHIFT '>' GOTO 140
	expression/L9 = expression . "+" expression, FOLLOW [215] -> SHIFT '+' GOTO 141
	expression/L9 = expression . "-" expression, FOLLOW [215] -> SHIFT '-' GOTO 142
	expression/L10 = expression . "*" expression, FOLLOW [215] -> SHIFT '*' GOTO 143
	expression/L10 = expression . "/" expression, FOLLOW [215] -> SHIFT '/' GOTO 144
	expression/L10 = expression . "%" expression, FOLLOW [215] -> SHIFT '%' GOTO 145
	expression/L11 = expression . "<<" expression, FOLLOW [215] -> SHIFT "<<" GOTO 146
	expression/L11 = expression . ">>" expression, FOLLOW [215] -> SHIFT ">>" GOTO 147
	expression/L12 = expression . "." IDENT, FOLLOW [215] -> SHIFT '.' GOTO 148
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 149
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 149
	expression/L8 = expression "<" expression . (73), FOLLOW [215] -> REDUCE expression #3 CALL operator "<"
[211]
	iexpression = expression . indirection IDENT, FOLLOW [215] -> GOTO 114
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [215] -> SHIFT '(' GOTO 115
	expression/L13 = expression . "(" ")", FOLLOW [215] -> SHIFT '(' GOTO 115
	expression/L7 = expression . "&" expression, FOLLOW [215] -> SHIFT '&' GOTO 117
	expression/L7 = expression . "^" expression, FOLLOW [215] -> SHIFT '^' GOTO 118
	expression/L3 = expression . "=" expression, FOLLOW [215] -> SHIFT '=' GOTO 119
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [215] -> SHIFT '[' GOTO 120
	expression/L3 = expression . "+=" expression, FOLLOW [215] -> SHIFT "+=" GOTO 121
	expression/L3 = expression . "-=" expression, FOLLOW [215] -> SHIFT "-=" GOTO 122
	expression/L3 = expression . "*=" expression, FOLLOW [215] -> SHIFT "*=" GOTO 123
	expression/L3 = expression . "/=" expression, FOLLOW [215] -> SHIFT "/=" GOTO 124
	expression/L3 = expression . "%=" expression, FOLLOW [215] -> SHIFT "%=" GOTO 125
	expression/L3 = expression . "&&=" expression, FOLLOW [215] -> SHIFT "&&=" GOTO 126
	expression/L3 = expression . "||=" expression, FOLLOW [215] -> SHIFT "||=" GOTO 127
	expression/L3 = expression . "&=" expression, FOLLOW [215] -> SHIFT "&=" GOTO 128
	expression/L3 = expression . "|=" expression, FOLLOW [215] -> SHIFT "|=" GOTO 129
	expression/L3 = expression . "<<=" expression, FOLLOW [215] -> SHIFT "<<=" GOTO 130
	expression/L3 = expression . ">>=" expression, FOLLOW [215] -> SHIFT ">>=" GOTO 131
	expression/L4 = expression . "||" expression, FOLLOW [215] -> SHIFT "||" GOTO 132
	expression/L5 = expression . "&&" expression, FOLLOW [215] -> SHIFT "&&" GOTO 133
	expression/L6 = expression . "|" expression, FOLLOW [215] -> SHIFT '|' GOTO 134
	expression/L8 = expression . "==" expression, FOLLOW [215] -> SHIFT "==" GOTO 135
	expression/L8 = expression . "!=" expression, FOLLOW [215] -> SHIFT "!=" GOTO 136
	expression/L8 = expression . "<=" expression, FOLLOW [215] -> SHIFT "<=" GOTO 137
	expression/L8 = expression . "<" expression, FOLLOW [215] -> SHIFT '<' GOTO 138
	expression/L8 = expression . ">=" expression, FOLLOW [215] -> SHIFT ">=" GOTO 139
	expression/L8 = expression . ">" expression, FOLLOW [215] -> SHIFT '>' GOTO 140
	expression/L9 = expression . "+" expression, FOLLOW [215] -> SHIFT '+' GOTO 141
	expression/L9 = expression . "-" expression, FOLLOW [215] -> SHIFT '-' GOTO 142
	expression/L10 = expression . "*" expression, FOLLOW [215] -> SHIFT '*' GOTO 143
	expression/L10 = expression . "/" expression, FOLLOW [215] -> SHIFT '/' GOTO 144
	expression/L10 = expression . "%" expression, FOLLOW [215] -> SHIFT '%' GOTO 145
	expression/L11 = expression . "<<" expression, FOLLOW [215] -> SHIFT "<<" GOTO 146
	expression/L11 = expression . ">>" expression, FOLLOW [215] -> SHIFT ">>" GOTO 147
	expression/L12 = expression . "." IDENT, FOLLOW [215] -> SHIFT '.' GOTO 148
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 149
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 149
	expression/L8 = expression ">=" expression . (74), FOLLOW [215] -> REDUCE expression #3 CALL operator ">="
[212]
	iexpression = expression . indirection IDENT, FOLLOW [215] -> GOTO 114
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [215] -> SHIFT '(' GOTO 115
	expression/L13 = expression . "(" ")", FOLLOW [215] -> SHIFT '(' GOTO 115
	expression/L7 = expression . "&" expression, FOLLOW [215] -> SHIFT '&' GOTO 117
	expression/L7 = expression . "^" expression, FOLLOW [215] -> SHIFT '^' GOTO 118
	expression/L3 = expression . "=" expression, FOLLOW [215] -> SHIFT '=' GOTO 119
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [215] -> SHIFT '[' GOTO 120
	expression/L3 = expression . "+=" expression, FOLLOW [215] -> SHIFT "+=" GOTO 121
	expression/L3 = expression . "-=" expression, FOLLOW [215] -> SHIFT "-=" GOTO 122
	expression/L3 = expression . "*=" expression, FOLLOW [215] -> SHIFT "*=" GOTO 123
	expression/L3 = expression . "/=" expression, FOLLOW [215] -> SHIFT "/=" GOTO 124
	expression/L3 = expression . "%=" expression, FOLLOW [215] -> SHIFT "%=" GOTO 125
	expression/L3 = expression . "&&=" expression, FOLLOW [215] -> SHIFT "&&=" GOTO 126
	expression/L3 = expression . "||=" expression, FOLLOW [215] -> SHIFT "||=" GOTO 127
	expression/L3 = expression . "&=" expression, FOLLOW [215] -> SHIFT "&=" GOTO 128
	expression/L3 = expression . "|=" expression, FOLLOW [215] -> SHIFT "|=" GOTO 129
	expression/L3 = expression . "<<=" expression, FOLLOW [215] -> SHIFT "<<=" GOTO 130
	expression/L3 = expression . ">>=" expression, FOLLOW [215] -> SHIFT ">>=" GOTO 131
	expression/L4 = expression . "||" expression, FOLLOW [215] -> SHIFT "||" GOTO 132
	expression/L5 = expression . "&&" expression, FOLLOW [215] -> SHIFT "&&" GOTO 133
	expression/L6 = expression . "|" expression, FOLLOW [215] -> SHIFT '|' GOTO 134
	expression/L8 = expression . "==" expression, FOLLOW [215] -> SHIFT "==" GOTO 135
	expression/L8 = expression . "!=" expression, FOLLOW [215] -> SHIFT "!=" GOTO 136
	expression/L8 = expression . "<=" expression, FOLLOW [215] -> SHIFT "<=" GOTO 137
	expression/L8 = expression . "<" expression, FOLLOW [215] -> SHIFT '<' GOTO 138
	expression/L8 = expression . ">=" expression, FOLLOW [215] -> SHIFT ">=" GOTO 139
	expression/L8 = expression . ">" expression, FOLLOW [215] -> SHIFT '>' GOTO 140
	expression/L9 = expression . "+" expression, FOLLOW [215] -> SHIFT '+' GOTO 141
	expression/L9 = expression . "-" expression, FOLLOW [215] -> SHIFT '-' GOTO 142
	expression/L10 = expression . "*" expression, FOLLOW [215] -> SHIFT '*' GOTO 143
	expression/L10 = expression . "/" expression, FOLLOW [215] -> SHIFT '/' GOTO 144
	expression/L10 = expression . "%" expression, FOLLOW [215] -> SHIFT '%' GOTO 145
	expression/L11 = expression . "<<" expression, FOLLOW [215] -> SHIFT "<<" GOTO 146
	expression/L11 = expression . ">>" expression, FOLLOW [215] -> SHIFT ">>" GOTO 147
	expression/L12 = expression . "." IDENT, FOLLOW [215] -> SHIFT '.' GOTO 148
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 149
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 149
	expression/L8 = expression ">" expression . (75), FOLLOW [215] -> REDUCE expression #3 CALL operator ">"
[213]
	iexpression = expression . indirection IDENT, FOLLOW [215] -> GOTO 114
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [215] -> SHIFT '(' GOTO 115
	expression/L13 = expression . "(" ")", FOLLOW [215] -> SHIFT '(' GOTO 115
	expression/L7 = expression . "&" expression, FOLLOW [215] -> SHIFT '&' GOTO 117
	expression/L7 = expression . "^" expression, FOLLOW [215] -> SHIFT '^' GOTO 118
	expression/L3 = expression . "=" expression, FOLLOW [215] -> SHIFT '=' GOTO 119
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [215] -> SHIFT '[' GOTO 120
	expression/L3 = expression . "+=" expression, FOLLOW [215] -> SHIFT "+=" GOTO 121
	expression/L3 = expression . "-=" expression, FOLLOW [215] -> SHIFT "-=" GOTO 122
	expression/L3 = expression . "*=" expression, FOLLOW [215] -> SHIFT "*=" GOTO 123
	expression/L3 = expression . "/=" expression, FOLLOW [215] -> SHIFT "/=" GOTO 124
	expression/L3 = expression . "%=" expression, FOLLOW [215] -> SHIFT "%=" GOTO 125
	expression/L3 = expression . "&&=" expression, FOLLOW [215] -> SHIFT "&&=" GOTO 126
	expression/L3 = expression . "||=" expression, FOLLOW [215] -> SHIFT "||=" GOTO 127
	expression/L3 = expression . "&=" expression, FOLLOW [215] -> SHIFT "&=" GOTO 128
	expression/L3 = expression . "|=" expression, FOLLOW [215] -> SHIFT "|=" GOTO 129
	expression/L3 = expression . "<<=" expression, FOLLOW [215] -> SHIFT "<<=" GOTO 130
	expression/L3 = expression . ">>=" expression, FOLLOW [215] -> SHIFT ">>=" GOTO 131
	expression/L4 = expression . "||" expression, FOLLOW [215] -> SHIFT "||" GOTO 132
	expression/L5 = expression . "&&" expression, FOLLOW [215] -> SHIFT "&&" GOTO 133
	expression/L6 = expression . "|" expression, FOLLOW [215] -> SHIFT '|' GOTO 134
	expression/L8 = expression . "==" expression, FOLLOW [215] -> SHIFT "==" GOTO 135
	expression/L8 = expression . "!=" expression, FOLLOW [215] -> SHIFT "!=" GOTO 136
	expression/L8 = expression . "<=" expression, FOLLOW [215] -> SHIFT "<=" GOTO 137
	expression/L8 = expression . "<" expression, FOLLOW [215] -> SHIFT '<' GOTO 138
	expression/L8 = expression . ">=" expression, FOLLOW [215] -> SHIFT ">=" GOTO 139
	expression/L8 = expression . ">" expression, FOLLOW [215] -> SHIFT '>' GOTO 140
	expression/L9 = expression . "+" expression, FOLLOW [215] -> SHIFT '+' GOTO 141
	expression/L9 = expression . "-" expression, FOLLOW [215] -> SHIFT '-' GOTO 142
	expression/L10 = expression . "*" expression, FOLLOW [215] -> SHIFT '*' GOTO 143
	expression/L10 = expression . "/" expression, FOLLOW [215] -> SHIFT '/' GOTO 144
	expression/L10 = expression . "%" expression, FOLLOW [215] -> SHIFT '%' GOTO 145
	expression/L11 = expression . "<<" expression, FOLLOW [215] -> SHIFT "<<" GOTO 146
	expression/L11 = expression . ">>" expression, FOLLOW [215] -> SHIFT ">>" GOTO 147
	expression/L12 = expression . "." IDENT, FOLLOW [215] -> SHIFT '.' GOTO 148
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 149
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 149
	expression/L9 = expression "+" expression . (76), FOLLOW [215] -> REDUCE expression #3 CALL operator "+"
[214]
	iexpression = expression . indirection IDENT, FOLLOW [215] -> GOTO 114
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [215] -> SHIFT '(' GOTO 115
	expression/L13 = expression . "(" ")", FOLLOW [215] -> SHIFT '(' GOTO 115
	expression/L7 = expression . "&" expression, FOLLOW [215] -> SHIFT '&' GOTO 117
	expression/L7 = expression . "^" expression, FOLLOW [215] -> SHIFT '^' GOTO 118
	expression/L3 = expression . "=" expression, FOLLOW [215] -> SHIFT '=' GOTO 119
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [215] -> SHIFT '[' GOTO 120
	expression/L3 = expression . "+=" expression, FOLLOW [215] -> SHIFT "+=" GOTO 121
	expression/L3 = expression . "-=" expression, FOLLOW [215] -> SHIFT "-=" GOTO 122
	expression/L3 = expression . "*=" expression, FOLLOW [215] -> SHIFT "*=" GOTO 123
	expression/L3 = expression . "/=" expression, FOLLOW [215] -> SHIFT "/=" GOTO 124
	expression/L3 = expression . "%=" expression, FOLLOW [215] -> SHIFT "%=" GOTO 125
	expression/L3 = expression . "&&=" expression, FOLLOW [215] -> SHIFT "&&=" GOTO 126
	expression/L3 = expression . "||=" expression, FOLLOW [215] -> SHIFT "||=" GOTO 127
	expression/L3 = expression . "&=" expression, FOLLOW [215] -> SHIFT "&=" GOTO 128
	expression/L3 = expression . "|=" expression, FOLLOW [215] -> SHIFT "|=" GOTO 129
	expression/L3 = expression . "<<=" expression, FOLLOW [215] -> SHIFT "<<=" GOTO 130
	expression/L3 = expression . ">>=" expression, FOLLOW [215] -> SHIFT ">>=" GOTO 131
	expression/L4 = expression . "||" expression, FOLLOW [215] -> SHIFT "||" GOTO 132
	expression/L5 = expression . "&&" expression, FOLLOW [215] -> SHIFT "&&" GOTO 133
	expression/L6 = expression . "|" expression, FOLLOW [215] -> SHIFT '|' GOTO 134
	expression/L8 = expression . "==" expression, FOLLOW [215] -> SHIFT "==" GOTO 135
	expression/L8 = expression . "!=" expression, FOLLOW [215] -> SHIFT "!=" GOTO 136
	expression/L8 = expression . "<=" expression, FOLLOW [215] -> SHIFT "<=" GOTO 137
	expression/L8 = expression . "<" expression, FOLLOW [215] -> SHIFT '<' GOTO 138
	expression/L8 = expression . ">=" expression, FOLLOW [215] -> SHIFT ">=" GOTO 139
	expression/L8 = expression . ">" expression, FOLLOW [215] -> SHIFT '>' GOTO 140
	expression/L9 = expression . "+" expression, FOLLOW [215] -> SHIFT '+' GOTO 141
	expression/L9 = expression . "-" expression, FOLLOW [215] -> SHIFT '-' GOTO 142
	expression/L10 = expression . "*" expression, FOLLOW [215] -> SHIFT '*' GOTO 143
	expression/L10 = expression . "/" expression, FOLLOW [215] -> SHIFT '/' GOTO 144
	expression/L10 = expression . "%" expression, FOLLOW [215] -> SHIFT '%' GOTO 145
	expression/L11 = expression . "<<" expression, FOLLOW [215] -> SHIFT "<<" GOTO 146
	expression/L11 = expression . ">>" expression, FOLLOW [215] -> SHIFT ">>" GOTO 147
	expression/L12 = expression . "." IDENT, FOLLOW [215] -> SHIFT '.' GOTO 148
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 149
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 149
	expression/L9 = expression "-" expression . (77), FOLLOW [215] -> REDUCE expression #3 CALL operator "-"
[215]
	iexpression = expression . indirection IDENT, FOLLOW [215] -> GOTO 114
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [215] -> SHIFT '(' GOTO 115
	expression/L13 = expression . "(" ")", FOLLOW [215] -> SHIFT '(' GOTO 115
	expression/L7 = expression . "&" expression, FOLLOW [215] -> SHIFT '&' GOTO 117
	expression/L7 = expression . "^" expression, FOLLOW [215] -> SHIFT '^' GOTO 118
	expression/L3 = expression . "=" expression, FOLLOW [215] -> SHIFT '=' GOTO 119
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [215] -> SHIFT '[' GOTO 120
	expression/L3 = expression . "+=" expression, FOLLOW [215] -> SHIFT "+=" GOTO 121
	expression/L3 = expression . "-=" expression, FOLLOW [215] -> SHIFT "-=" GOTO 122
	expression/L3 = expression . "*=" expression, FOLLOW [215] -> SHIFT "*=" GOTO 123
	expression/L3 = expression . "/=" expression, FOLLOW [215] -> SHIFT "/=" GOTO 124
	expression/L3 = expression . "%=" expression, FOLLOW [215] -> SHIFT "%=" GOTO 125
	expression/L3 = expression . "&&=" expression, FOLLOW [215] -> SHIFT "&&=" GOTO 126
	expression/L3 = expression . "||=" expression, FOLLOW [215] -> SHIFT "||=" GOTO 127
	expression/L3 = expression . "&=" expression, FOLLOW [215] -> SHIFT "&=" GOTO 128
	expression/L3 = expression . "|=" expression, FOLLOW [215] -> SHIFT "|=" GOTO 129
	expression/L3 = expression . "<<=" expression, FOLLOW [215] -> SHIFT "<<=" GOTO 130
	expression/L3 = expression . ">>=" expression, FOLLOW [215] -> SHIFT ">>=" GOTO 131
	expression/L4 = expression . "||" expression, FOLLOW [215] -> SHIFT "||" GOTO 132
	expression/L5 = expression . "&&" expression, FOLLOW [215] -> SHIFT "&&" GOTO 133
	expression/L6 = expression . "|" expression, FOLLOW [215] -> SHIFT '|' GOTO 134
	expression/L8 = expression . "==" expression, FOLLOW [215] -> SHIFT "==" GOTO 135
	expression/L8 = expression . "!=" expression, FOLLOW [215] -> SHIFT "!=" GOTO 136
	expression/L8 = expression . "<=" expression, FOLLOW [215] -> SHIFT "<=" GOTO 137
	expression/L8 = expression . "<" expression, FOLLOW [215] -> SHIFT '<' GOTO 138
	expression/L8 = expression . ">=" expression, FOLLOW [215] -> SHIFT ">=" GOTO 139
	expression/L8 = expression . ">" expression, FOLLOW [215] -> SHIFT '>' GOTO 140
	expression/L9 = expression . "+" expression, FOLLOW [215] -> SHIFT '+' GOTO 141
	expression/L9 = expression . "-" expression, FOLLOW [215] -> SHIFT '-' GOTO 142
	expression/L10 = expression . "*" expression, FOLLOW [215] -> SHIFT '*' GOTO 143
	expression/L10 = expression . "/" expression, FOLLOW [215] -> SHIFT '/' GOTO 144
	expression/L10 = expression . "%" expression, FOLLOW [215] -> SHIFT '%' GOTO 145
	expression/L11 = expression . "<<" expression, FOLLOW [215] -> SHIFT "<<" GOTO 146
	expression/L11 = expression . ">>" expression, FOLLOW [215] -> SHIFT ">>" GOTO 147
	expression/L12 = expression . "." IDENT, FOLLOW [215] -> SHIFT '.' GOTO 148
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 149
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 149
	expression/L10 = expression "*" expression . (80), FOLLOW [215] -> REDUCE expression #3 CALL operator "*"
[216]
	iexpression = expression . indirection IDENT, FOLLOW [215] -> GOTO 114
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [215] -> SHIFT '(' GOTO 115
	expression/L13 = expression . "(" ")", FOLLOW [215] -> SHIFT '(' GOTO 115
	expression/L7 = expression . "&" expression, FOLLOW [215] -> SHIFT '&' GOTO 117
	expression/L7 = expression . "^" expression, FOLLOW [215] -> SHIFT '^' GOTO 118
	expression/L3 = expression . "=" expression, FOLLOW [215] -> SHIFT '=' GOTO 119
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [215] -> SHIFT '[' GOTO 120
	expression/L3 = expression . "+=" expression, FOLLOW [215] -> SHIFT "+=" GOTO 121
	expression/L3 = expression . "-=" expression, FOLLOW [215] -> SHIFT "-=" GOTO 122
	expression/L3 = expression . "*=" expression, FOLLOW [215] -> SHIFT "*=" GOTO 123
	expression/L3 = expression . "/=" expression, FOLLOW [215] -> SHIFT "/=" GOTO 124
	expression/L3 = expression . "%=" expression, FOLLOW [215] -> SHIFT "%=" GOTO 125
	expression/L3 = expression . "&&=" expression, FOLLOW [215] -> SHIFT "&&=" GOTO 126
	expression/L3 = expression . "||=" expression, FOLLOW [215] -> SHIFT "||=" GOTO 127
	expression/L3 = expression . "&=" expression, FOLLOW [215] -> SHIFT "&=" GOTO 128
	expression/L3 = expression . "|=" expression, FOLLOW [215] -> SHIFT "|=" GOTO 129
	expression/L3 = expression . "<<=" expression, FOLLOW [215] -> SHIFT "<<=" GOTO 130
	expression/L3 = expression . ">>=" expression, FOLLOW [215] -> SHIFT ">>=" GOTO 131
	expression/L4 = expression . "||" expression, FOLLOW [215] -> SHIFT "||" GOTO 132
	expression/L5 = expression . "&&" expression, FOLLOW [215] -> SHIFT "&&" GOTO 133
	expression/L6 = expression . "|" expression, FOLLOW [215] -> SHIFT '|' GOTO 134
	expression/L8 = expression . "==" expression, FOLLOW [215] -> SHIFT "==" GOTO 135
	expression/L8 = expression . "!=" expression, FOLLOW [215] -> SHIFT "!=" GOTO 136
	expression/L8 = expression . "<=" expression, FOLLOW [215] -> SHIFT "<=" GOTO 137
	expression/L8 = expression . "<" expression, FOLLOW [215] -> SHIFT '<' GOTO 138
	expression/L8 = expression . ">=" expression, FOLLOW [215] -> SHIFT ">=" GOTO 139
	expression/L8 = expression . ">" expression, FOLLOW [215] -> SHIFT '>' GOTO 140
	expression/L9 = expression . "+" expression, FOLLOW [215] -> SHIFT '+' GOTO 141
	expression/L9 = expression . "-" expression, FOLLOW [215] -> SHIFT '-' GOTO 142
	expression/L10 = expression . "*" expression, FOLLOW [215] -> SHIFT '*' GOTO 143
	expression/L10 = expression . "/" expression, FOLLOW [215] -> SHIFT '/' GOTO 144
	expression/L10 = expression . "%" expression, FOLLOW [215] -> SHIFT '%' GOTO 145
	expression/L11 = expression . "<<" expression, FOLLOW [215] -> SHIFT "<<" GOTO 146
	expression/L11 = expression . ">>" expression, FOLLOW [215] -> SHIFT ">>" GOTO 147
	expression/L12 = expression . "." IDENT, FOLLOW [215] -> SHIFT '.' GOTO 148
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 149
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 149
	expression/L10 = expression "/" expression . (81), FOLLOW [215] -> REDUCE expression #3 CALL operator "/"
[217]
	iexpression = expression . indirection IDENT, FOLLOW [215] -> GOTO 114
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [215] -> SHIFT '(' GOTO 115
	expression/L13 = expression . "(" ")", FOLLOW [215] -> SHIFT '(' GOTO 115
	expression/L7 = expression . "&" expression, FOLLOW [215] -> SHIFT '&' GOTO 117
	expression/L7 = expression . "^" expression, FOLLOW [215] -> SHIFT '^' GOTO 118
	expression/L3 = expression . "=" expression, FOLLOW [215] -> SHIFT '=' GOTO 119
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [215] -> SHIFT '[' GOTO 120
	expression/L3 = expression . "+=" expression, FOLLOW [215] -> SHIFT "+=" GOTO 121
	expression/L3 = expression . "-=" expression, FOLLOW [215] -> SHIFT "-=" GOTO 122
	expression/L3 = expression . "*=" expression, FOLLOW [215] -> SHIFT "*=" GOTO 123
	expression/L3 = expression . "/=" expression, FOLLOW [215] -> SHIFT "/=" GOTO 124
	expression/L3 = expression . "%=" expression, FOLLOW [215] -> SHIFT "%=" GOTO 125
	expression/L3 = expression . "&&=" expression, FOLLOW [215] -> SHIFT "&&=" GOTO 126
	expression/L3 = expression . "||=" expression, FOLLOW [215] -> SHIFT "||=" GOTO 127
	expression/L3 = expression . "&=" expression, FOLLOW [215] -> SHIFT "&=" GOTO 128
	expression/L3 = expression . "|=" expression, FOLLOW [215] -> SHIFT "|=" GOTO 129
	expression/L3 = expression . "<<=" expression, FOLLOW [215] -> SHIFT "<<=" GOTO 130
	expression/L3 = expression . ">>=" expression, FOLLOW [215] -> SHIFT ">>=" GOTO 131
	expression/L4 = expression . "||" expression, FOLLOW [215] -> SHIFT "||" GOTO 132
	expression/L5 = expression . "&&" expression, FOLLOW [215] -> SHIFT "&&" GOTO 133
	expression/L6 = expression . "|" expression, FOLLOW [215] -> SHIFT '|' GOTO 134
	expression/L8 = expression . "==" expression, FOLLOW [215] -> SHIFT "==" GOTO 135
	expression/L8 = expression . "!=" expression, FOLLOW [215] -> SHIFT "!=" GOTO 136
	expression/L8 = expression . "<=" expression, FOLLOW [215] -> SHIFT "<=" GOTO 137
	expression/L8 = expression . "<" expression, FOLLOW [215] -> SHIFT '<' GOTO 138
	expression/L8 = expression . ">=" expression, FOLLOW [215] -> SHIFT ">=" GOTO 139
	expression/L8 = expression . ">" expression, FOLLOW [215] -> SHIFT '>' GOTO 140
	expression/L9 = expression . "+" expression, FOLLOW [215] -> SHIFT '+' GOTO 141
	expression/L9 = expression . "-" expression, FOLLOW [215] -> SHIFT '-' GOTO 142
	expression/L10 = expression . "*" expression, FOLLOW [215] -> SHIFT '*' GOTO 143
	expression/L10 = expression . "/" expression, FOLLOW [215] -> SHIFT '/' GOTO 144
	expression/L10 = expression . "%" expression, FOLLOW [215] -> SHIFT '%' GOTO 145
	expression/L11 = expression . "<<" expression, FOLLOW [215] -> SHIFT "<<" GOTO 146
	expression/L11 = expression . ">>" expression, FOLLOW [215] -> SHIFT ">>" GOTO 147
	expression/L12 = expression . "." IDENT, FOLLOW [215] -> SHIFT '.' GOTO 148
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 149
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 149
	expression/L10 = expression "%" expression . (82), FOLLOW [215] -> REDUCE expression #3 CALL operator "%"
[218]
	iexpression = expression . indirection IDENT, FOLLOW [215] -> GOTO 114
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [215] -> SHIFT '(' GOTO 115
	expression/L13 = expression . "(" ")", FOLLOW [215] -> SHIFT '(' GOTO 115
	expression/L7 = expression . "&" expression, FOLLOW [215] -> SHIFT '&' GOTO 117
	expression/L7 = expression . "^" expression, FOLLOW [215] -> SHIFT '^' GOTO 118
	expression/L3 = expression . "=" expression, FOLLOW [215] -> SHIFT '=' GOTO 119
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [215] -> SHIFT '[' GOTO 120
	expression/L3 = expression . "+=" expression, FOLLOW [215] -> SHIFT "+=" GOTO 121
	expression/L3 = expression . "-=" expression, FOLLOW [215] -> SHIFT "-=" GOTO 122
	expression/L3 = expression . "*=" expression, FOLLOW [215] -> SHIFT "*=" GOTO 123
	expression/L3 = expression . "/=" expression, FOLLOW [215] -> SHIFT "/=" GOTO 124
	expression/L3 = expression . "%=" expression, FOLLOW [215] -> SHIFT "%=" GOTO 125
	expression/L3 = expression . "&&=" expression, FOLLOW [215] -> SHIFT "&&=" GOTO 126
	expression/L3 = expression . "||=" expression, FOLLOW [215] -> SHIFT "||=" GOTO 127
	expression/L3 = expression . "&=" expression, FOLLOW [215] -> SHIFT "&=" GOTO 128
	expression/L3 = expression . "|=" expression, FOLLOW [215] -> SHIFT "|=" GOTO 129
	expression/L3 = expression . "<<=" expression, FOLLOW [215] -> SHIFT "<<=" GOTO 130
	expression/L3 = expression . ">>=" expression, FOLLOW [215] -> SHIFT ">>=" GOTO 131
	expression/L4 = expression . "||" expression, FOLLOW [215] -> SHIFT "||" GOTO 132
	expression/L5 = expression . "&&" expression, FOLLOW [215] -> SHIFT "&&" GOTO 133
	expression/L6 = expression . "|" expression, FOLLOW [215] -> SHIFT '|' GOTO 134
	expression/L8 = expression . "==" expression, FOLLOW [215] -> SHIFT "==" GOTO 135
	expression/L8 = expression . "!=" expression, FOLLOW [215] -> SHIFT "!=" GOTO 136
	expression/L8 = expression . "<=" expression, FOLLOW [215] -> SHIFT "<=" GOTO 137
	expression/L8 = expression . "<" expression, FOLLOW [215] -> SHIFT '<' GOTO 138
	expression/L8 = expression . ">=" expression, FOLLOW [215] -> SHIFT ">=" GOTO 139
	expression/L8 = expression . ">" expression, FOLLOW [215] -> SHIFT '>' GOTO 140
	expression/L9 = expression . "+" expression, FOLLOW [215] -> SHIFT '+' GOTO 141
	expression/L9 = expression . "-" expression, FOLLOW [215] -> SHIFT '-' GOTO 142
	expression/L10 = expression . "*" expression, FOLLOW [215] -> SHIFT '*' GOTO 143
	expression/L10 = expression . "/" expression, FOLLOW [215] -> SHIFT '/' GOTO 144
	expression/L10 = expression . "%" expression, FOLLOW [215] -> SHIFT '%' GOTO 145
	expression/L11 = expression . "<<" expression, FOLLOW [215] -> SHIFT "<<" GOTO 146
	expression/L11 = expression . ">>" expression, FOLLOW [215] -> SHIFT ">>" GOTO 147
	expression/L12 = expression . "." IDENT, FOLLOW [215] -> SHIFT '.' GOTO 148
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 149
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 149
	expression/L11 = expression "<<" expression . (83), FOLLOW [215] -> REDUCE expression #3 CALL operator "<<"
[219]
	iexpression = expression . indirection IDENT, FOLLOW [215] -> GOTO 114
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [215] -> SHIFT '(' GOTO 115
	expression/L13 = expression . "(" ")", FOLLOW [215] -> SHIFT '(' GOTO 115
	expression/L7 = expression . "&" expression, FOLLOW [215] -> SHIFT '&' GOTO 117
	expression/L7 = expression . "^" expression, FOLLOW [215] -> SHIFT '^' GOTO 118
	expression/L3 = expression . "=" expression, FOLLOW [215] -> SHIFT '=' GOTO 119
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [215] -> SHIFT '[' GOTO 120
	expression/L3 = expression . "+=" expression, FOLLOW [215] -> SHIFT "+=" GOTO 121
	expression/L3 = expression . "-=" expression, FOLLOW [215] -> SHIFT "-=" GOTO 122
	expression/L3 = expression . "*=" expression, FOLLOW [215] -> SHIFT "*=" GOTO 123
	expression/L3 = expression . "/=" expression, FOLLOW [215] -> SHIFT "/=" GOTO 124
	expression/L3 = expression . "%=" expression, FOLLOW [215] -> SHIFT "%=" GOTO 125
	expression/L3 = expression . "&&=" expression, FOLLOW [215] -> SHIFT "&&=" GOTO 126
	expression/L3 = expression . "||=" expression, FOLLOW [215] -> SHIFT "||=" GOTO 127
	expression/L3 = expression . "&=" expression, FOLLOW [215] -> SHIFT "&=" GOTO 128
	expression/L3 = expression . "|=" expression, FOLLOW [215] -> SHIFT "|=" GOTO 129
	expression/L3 = expression . "<<=" expression, FOLLOW [215] -> SHIFT "<<=" GOTO 130
	expression/L3 = expression . ">>=" expression, FOLLOW [215] -> SHIFT ">>=" GOTO 131
	expression/L4 = expression . "||" expression, FOLLOW [215] -> SHIFT "||" GOTO 132
	expression/L5 = expression . "&&" expression, FOLLOW [215] -> SHIFT "&&" GOTO 133
	expression/L6 = expression . "|" expression, FOLLOW [215] -> SHIFT '|' GOTO 134
	expression/L8 = expression . "==" expression, FOLLOW [215] -> SHIFT "==" GOTO 135
	expression/L8 = expression . "!=" expression, FOLLOW [215] -> SHIFT "!=" GOTO 136
	expression/L8 = expression . "<=" expression, FOLLOW [215] -> SHIFT "<=" GOTO 137
	expression/L8 = expression . "<" expression, FOLLOW [215] -> SHIFT '<' GOTO 138
	expression/L8 = expression . ">=" expression, FOLLOW [215] -> SHIFT ">=" GOTO 139
	expression/L8 = expression . ">" expression, FOLLOW [215] -> SHIFT '>' GOTO 140
	expression/L9 = expression . "+" expression, FOLLOW [215] -> SHIFT '+' GOTO 141
	expression/L9 = expression . "-" expression, FOLLOW [215] -> SHIFT '-' GOTO 142
	expression/L10 = expression . "*" expression, FOLLOW [215] -> SHIFT '*' GOTO 143
	expression/L10 = expression . "/" expression, FOLLOW [215] -> SHIFT '/' GOTO 144
	expression/L10 = expression . "%" expression, FOLLOW [215] -> SHIFT '%' GOTO 145
	expression/L11 = expression . "<<" expression, FOLLOW [215] -> SHIFT "<<" GOTO 146
	expression/L11 = expression . ">>" expression, FOLLOW [215] -> SHIFT ">>" GOTO 147
	expression/L12 = expression . "." IDENT, FOLLOW [215] -> SHIFT '.' GOTO 148
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 149
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 149
	expression/L11 = expression ">>" expression . (84), FOLLOW [215] -> REDUCE expression #3 CALL operator ">>"
[220]
	expression/L12 = expression "." IDENT . (85), FOLLOW [215] -> REDUCE expression #3 CALL member
[221]
	indirection = "->" indirection . (90), FOLLOW [8] -> REDUCE indirection #2 CALL count
[222]
	expression/L2 = "(" expression ")" ., FOLLOW [215] -> REDUCE expression #3
[223]
	statement/L1 = "{" codeblock "}" . (scope), FOLLOW [90] -> REDUCE statement #3
[224]
	expression/L3 = . expression "=" expression, FOLLOW [208] -> GOTO 167
	expression/L3 = . expression "+=" expression, FOLLOW [208] -> GOTO 167
	expression/L3 = . expression "-=" expression, FOLLOW [208] -> GOTO 167
	expression/L3 = . expression "*=" expression, FOLLOW [208] -> GOTO 167
	expression/L3 = . expression "/=" expression, FOLLOW [208] -> GOTO 167
	expression/L3 = . expression "%=" expression, FOLLOW [208] -> GOTO 167
	expression/L3 = . expression "&&=" expression, FOLLOW [208] -> GOTO 167
	expression/L3 = . expression "||=" expression, FOLLOW [208] -> GOTO 167
	expression/L3 = . expression "&=" expression, FOLLOW [208] -> GOTO 167
	expression/L3 = . expression "|=" expression, FOLLOW [208] -> GOTO 167
	expression/L3 = . expression "<<=" expression, FOLLOW [208] -> GOTO 167
	expression/L3 = . expression ">>=" expression, FOLLOW [208] -> GOTO 167
	expression/L4 = . expression "||" expression, FOLLOW [208] -> GOTO 167
	expression/L5 = . expression "&&" expression, FOLLOW [208] -> GOTO 167
	expression/L6 = . expression "|" expression, FOLLOW [208] -> GOTO 167
	expression/L7 = . expression "^" expression, FOLLOW [208] -> GOTO 167
	expression/L7 = . expression "&" expression, FOLLOW [208] -> GOTO 167
	expression/L8 = . expression "==" expression, FOLLOW [208] -> GOTO 167
	expression/L8 = . expression "!=" expression, FOLLOW [208] -> GOTO 167
	expression/L8 = . expression "<=" expression, FOLLOW [208] -> GOTO 167
	expression/L8 = . expression "<" expression, FOLLOW [208] -> GOTO 167
	expression/L8 = . expression ">=" expression, FOLLOW [208] -> GOTO 167
	expression/L8 = . expression ">" expression, FOLLOW [208] -> GOTO 167
	expression/L9 = . expression "+" expression, FOLLOW [208] -> GOTO 167
	expression/L9 = . expression "-" expression, FOLLOW [208] -> GOTO 167
	expression/L10 = . expression "*" expression, FOLLOW [208] -> GOTO 167
	expression/L10 = . expression "/" expression, FOLLOW [208] -> GOTO 167
	expression/L10 = . expression "%" expression, FOLLOW [208] -> GOTO 167
	expression/L11 = . expression "<<" expression, FOLLOW [208] -> GOTO 167
	expression/L11 = . expression ">>" expression, FOLLOW [208] -> GOTO 167
	expression/L12 = . expression "." IDENT, FOLLOW [208] -> GOTO 167
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [208] -> GOTO 167
	expression/L13 = . expression "(" ")", FOLLOW [208] -> GOTO 167
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [208] -> GOTO 167
	iexpression = . expression indirection IDENT, FOLLOW [208] -> GOTO 167
	expressionlist = . expression "," expressionlist, FOLLOW [220] -> GOTO 167
	expressionlist = . expression, FOLLOW [220] -> GOTO 167
	expression/L12 = . iexpression, FOLLOW [208] -> GOTO 70
	expressionlist = expression "," . expressionlist, FOLLOW [220] -> GOTO 243
	expression/L2 = . BOOLEAN, FOLLOW [208] -> SHIFT BOOLEAN GOTO 71
	expression/L2 = . IDENT, FOLLOW [208] -> SHIFT IDENT GOTO 72
	expression/L2 = . DQSTRING, FOLLOW [208] -> SHIFT DQSTRING GOTO 73
	expression/L2 = . SQSTRING, FOLLOW [208] -> SHIFT SQSTRING GOTO 74
	expression/L2 = . CARDINAL, FOLLOW [208] -> SHIFT CARDINAL GOTO 75
	expression/L2 = . INTEGER, FOLLOW [208] -> SHIFT INTEGER GOTO 76
	expression/L2 = . FLOAT, FOLLOW [208] -> SHIFT FLOAT GOTO 77
	expression/L2 = . "(" expression ")", FOLLOW [208] -> SHIFT '(' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [208] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [208] -> SHIFT '{' GOTO 95
	expression/L9 = . "&" expression, FOLLOW [208] -> SHIFT '&' GOTO 80
	expression/L1 = . "new" typespec ":" expression, FOLLOW [208] -> SHIFT "new" GOTO 86
	expression/L2 = . "null", FOLLOW [208] -> SHIFT "null" GOTO 87
	expression/L9 = . "+" expression, FOLLOW [208] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [208] -> SHIFT '-' GOTO 89
	expression/L9 = . "~" expression, FOLLOW [208] -> SHIFT '~' GOTO 90
	expression/L9 = . "!" expression, FOLLOW [208] -> SHIFT '!' GOTO 91
	expression/L12 = . "*" expression, FOLLOW [208] -> SHIFT '*' GOTO 92
[225]
	expression/L1 = "{" expressionlist "}" . (43), FOLLOW [215] -> REDUCE expression #3 CALL structure
[226]
	statement/L1 = "var" variabledefinition ";" . (8), FOLLOW [90] -> REDUCE statement #3 CALL definition
[227]
	statement/L1 = "return" expression ";" . (step:34), FOLLOW [90] -> REDUCE statement #3 CALL return_value
[228]
	statement/L1 = "delete" expression ";" . (35), FOLLOW [90] -> REDUCE statement #3 CALL delete
[229]
	iexpression = expression . indirection IDENT, FOLLOW [206] -> GOTO 114
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [206] -> SHIFT '(' GOTO 115
	expression/L13 = expression . "(" ")", FOLLOW [206] -> SHIFT '(' GOTO 115
	statement/L1 = "if" "(" expression . ")" "{" codeblock "}", FOLLOW [90] -> SHIFT ')' GOTO 244
	statement/L1 = "if" "(" expression . ")" "{" codeblock "}" "else" "{" codeblock "}", FOLLOW [90] -> SHIFT ')' GOTO 244
	expression/L7 = expression . "&" expression, FOLLOW [206] -> SHIFT '&' GOTO 117
	expression/L7 = expression . "^" expression, FOLLOW [206] -> SHIFT '^' GOTO 118
	expression/L3 = expression . "=" expression, FOLLOW [206] -> SHIFT '=' GOTO 119
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [206] -> SHIFT '[' GOTO 120
	expression/L3 = expression . "+=" expression, FOLLOW [206] -> SHIFT "+=" GOTO 121
	expression/L3 = expression . "-=" expression, FOLLOW [206] -> SHIFT "-=" GOTO 122
	expression/L3 = expression . "*=" expression, FOLLOW [206] -> SHIFT "*=" GOTO 123
	expression/L3 = expression . "/=" expression, FOLLOW [206] -> SHIFT "/=" GOTO 124
	expression/L3 = expression . "%=" expression, FOLLOW [206] -> SHIFT "%=" GOTO 125
	expression/L3 = expression . "&&=" expression, FOLLOW [206] -> SHIFT "&&=" GOTO 126
	expression/L3 = expression . "||=" expression, FOLLOW [206] -> SHIFT "||=" GOTO 127
	expression/L3 = expression . "&=" expression, FOLLOW [206] -> SHIFT "&=" GOTO 128
	expression/L3 = expression . "|=" expression, FOLLOW [206] -> SHIFT "|=" GOTO 129
	expression/L3 = expression . "<<=" expression, FOLLOW [206] -> SHIFT "<<=" GOTO 130
	expression/L3 = expression . ">>=" expression, FOLLOW [206] -> SHIFT ">>=" GOTO 131
	expression/L4 = expression . "||" expression, FOLLOW [206] -> SHIFT "||" GOTO 132
	expression/L5 = expression . "&&" expression, FOLLOW [206] -> SHIFT "&&" GOTO 133
	expression/L6 = expression . "|" expression, FOLLOW [206] -> SHIFT '|' GOTO 134
	expression/L8 = expression . "==" expression, FOLLOW [206] -> SHIFT "==" GOTO 135
	expression/L8 = expression . "!=" expression, FOLLOW [206] -> SHIFT "!=" GOTO 136
	expression/L8 = expression . "<=" expression, FOLLOW [206] -> SHIFT "<=" GOTO 137
	expression/L8 = expression . "<" expression, FOLLOW [206] -> SHIFT '<' GOTO 138
	expression/L8 = expression . ">=" expression, FOLLOW [206] -> SHIFT ">=" GOTO 139
	expression/L8 = expression . ">" expression, FOLLOW [206] -> SHIFT '>' GOTO 140
	expression/L9 = expression . "+" expression, FOLLOW [206] -> SHIFT '+' GOTO 141
	expression/L9 = expression . "-" expression, FOLLOW [206] -> SHIFT '-' GOTO 142
	expression/L10 = expression . "*" expression, FOLLOW [206] -> SHIFT '*' GOTO 143
	expression/L10 = expression . "/" expression, FOLLOW [206] -> SHIFT '/' GOTO 144
	expression/L10 = expression . "%" expression, FOLLOW [206] -> SHIFT '%' GOTO 145
	expression/L11 = expression . "<<" expression, FOLLOW [206] -> SHIFT "<<" GOTO 146
	expression/L11 = expression . ">>" expression, FOLLOW [206] -> SHIFT ">>" GOTO 147
	expression/L12 = expression . "." IDENT, FOLLOW [206] -> SHIFT '.' GOTO 148
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 149
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 149
[230]
	iexpression = expression . indirection IDENT, FOLLOW [206] -> GOTO 114
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [206] -> SHIFT '(' GOTO 115
	expression/L13 = expression . "(" ")", FOLLOW [206] -> SHIFT '(' GOTO 115
	statement/L1 = "while" "(" expression . ")" "{" codeblock "}", FOLLOW [90] -> SHIFT ')' GOTO 245
	expression/L7 = expression . "&" expression, FOLLOW [206] -> SHIFT '&' GOTO 117
	expression/L7 = expression . "^" expression, FOLLOW [206] -> SHIFT '^' GOTO 118
	expression/L3 = expression . "=" expression, FOLLOW [206] -> SHIFT '=' GOTO 119
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [206] -> SHIFT '[' GOTO 120
	expression/L3 = expression . "+=" expression, FOLLOW [206] -> SHIFT "+=" GOTO 121
	expression/L3 = expression . "-=" expression, FOLLOW [206] -> SHIFT "-=" GOTO 122
	expression/L3 = expression . "*=" expression, FOLLOW [206] -> SHIFT "*=" GOTO 123
	expression/L3 = expression . "/=" expression, FOLLOW [206] -> SHIFT "/=" GOTO 124
	expression/L3 = expression . "%=" expression, FOLLOW [206] -> SHIFT "%=" GOTO 125
	expression/L3 = expression . "&&=" expression, FOLLOW [206] -> SHIFT "&&=" GOTO 126
	expression/L3 = expression . "||=" expression, FOLLOW [206] -> SHIFT "||=" GOTO 127
	expression/L3 = expression . "&=" expression, FOLLOW [206] -> SHIFT "&=" GOTO 128
	expression/L3 = expression . "|=" expression, FOLLOW [206] -> SHIFT "|=" GOTO 129
	expression/L3 = expression . "<<=" expression, FOLLOW [206] -> SHIFT "<<=" GOTO 130
	expression/L3 = expression . ">>=" expression, FOLLOW [206] -> SHIFT ">>=" GOTO 131
	expression/L4 = expression . "||" expression, FOLLOW [206] -> SHIFT "||" GOTO 132
	expression/L5 = expression . "&&" expression, FOLLOW [206] -> SHIFT "&&" GOTO 133
	expression/L6 = expression . "|" expression, FOLLOW [206] -> SHIFT '|' GOTO 134
	expression/L8 = expression . "==" expression, FOLLOW [206] -> SHIFT "==" GOTO 135
	expression/L8 = expression . "!=" expression, FOLLOW [206] -> SHIFT "!=" GOTO 136
	expression/L8 = expression . "<=" expression, FOLLOW [206] -> SHIFT "<=" GOTO 137
	expression/L8 = expression . "<" expression, FOLLOW [206] -> SHIFT '<' GOTO 138
	expression/L8 = expression . ">=" expression, FOLLOW [206] -> SHIFT ">=" GOTO 139
	expression/L8 = expression . ">" expression, FOLLOW [206] -> SHIFT '>' GOTO 140
	expression/L9 = expression . "+" expression, FOLLOW [206] -> SHIFT '+' GOTO 141
	expression/L9 = expression . "-" expression, FOLLOW [206] -> SHIFT '-' GOTO 142
	expression/L10 = expression . "*" expression, FOLLOW [206] -> SHIFT '*' GOTO 143
	expression/L10 = expression . "/" expression, FOLLOW [206] -> SHIFT '/' GOTO 144
	expression/L10 = expression . "%" expression, FOLLOW [206] -> SHIFT '%' GOTO 145
	expression/L11 = expression . "<<" expression, FOLLOW [206] -> SHIFT "<<" GOTO 146
	expression/L11 = expression . ">>" expression, FOLLOW [206] -> SHIFT ">>" GOTO 147
	expression/L12 = expression . "." IDENT, FOLLOW [206] -> SHIFT '.' GOTO 148
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 149
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 149
[231]
	expression/L1 = "new" typespec ":" . expression, FOLLOW [215] -> GOTO 246
	expression/L3 = . expression "=" expression, FOLLOW [215] -> GOTO 246
	expression/L3 = . expression "+=" expression, FOLLOW [215] -> GOTO 246
	expression/L3 = . expression "-=" expression, FOLLOW [215] -> GOTO 246
	expression/L3 = . expression "*=" expression, FOLLOW [215] -> GOTO 246
	expression/L3 = . expression "/=" expression, FOLLOW [215] -> GOTO 246
	expression/L3 = . expression "%=" expression, FOLLOW [215] -> GOTO 246
	expression/L3 = . expression "&&=" expression, FOLLOW [215] -> GOTO 246
	expression/L3 = . expression "||=" expression, FOLLOW [215] -> GOTO 246
	expression/L3 = . expression "&=" expression, FOLLOW [215] -> GOTO 246
	expression/L3 = . expression "|=" expression, FOLLOW [215] -> GOTO 246
	expression/L3 = . expression "<<=" expression, FOLLOW [215] -> GOTO 246
	expression/L3 = . expression ">>=" expression, FOLLOW [215] -> GOTO 246
	expression/L4 = . expression "||" expression, FOLLOW [215] -> GOTO 246
	expression/L5 = . expression "&&" expression, FOLLOW [215] -> GOTO 246
	expression/L6 = . expression "|" expression, FOLLOW [215] -> GOTO 246
	expression/L7 = . expression "^" expression, FOLLOW [215] -> GOTO 246
	expression/L7 = . expression "&" expression, FOLLOW [215] -> GOTO 246
	expression/L8 = . expression "==" expression, FOLLOW [215] -> GOTO 246
	expression/L8 = . expression "!=" expression, FOLLOW [215] -> GOTO 246
	expression/L8 = . expression "<=" expression, FOLLOW [215] -> GOTO 246
	expression/L8 = . expression "<" expression, FOLLOW [215] -> GOTO 246
	expression/L8 = . expression ">=" expression, FOLLOW [215] -> GOTO 246
	expression/L8 = . expression ">" expression, FOLLOW [215] -> GOTO 246
	expression/L9 = . expression "+" expression, FOLLOW [215] -> GOTO 246
	expression/L9 = . expression "-" expression, FOLLOW [215] -> GOTO 246
	expression/L10 = . expression "*" expression, FOLLOW [215] -> GOTO 246
	expression/L10 = . expression "/" expression, FOLLOW [215] -> GOTO 246
	expression/L10 = . expression "%" expression, FOLLOW [215] -> GOTO 246
	expression/L11 = . expression "<<" expression, FOLLOW [215] -> GOTO 246
	expression/L11 = . expression ">>" expression, FOLLOW [215] -> GOTO 246
	expression/L12 = . expression "." IDENT, FOLLOW [215] -> GOTO 246
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [215] -> GOTO 246
	expression/L13 = . expression "(" ")", FOLLOW [215] -> GOTO 246
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [215] -> GOTO 246
	iexpression = . expression indirection IDENT, FOLLOW [215] -> GOTO 246
	expression/L12 = . iexpression, FOLLOW [215] -> GOTO 70
	expression/L2 = . BOOLEAN, FOLLOW [215] -> SHIFT BOOLEAN GOTO 71
	expression/L2 = . IDENT, FOLLOW [215] -> SHIFT IDENT GOTO 72
	expression/L2 = . DQSTRING, FOLLOW [215] -> SHIFT DQSTRING GOTO 73
	expression/L2 = . SQSTRING, FOLLOW [215] -> SHIFT SQSTRING GOTO 74
	expression/L2 = . CARDINAL, FOLLOW [215] -> SHIFT CARDINAL GOTO 75
	expression/L2 = . INTEGER, FOLLOW [215] -> SHIFT INTEGER GOTO 76
	expression/L2 = . FLOAT, FOLLOW [215] -> SHIFT FLOAT GOTO 77
	expression/L2 = . "(" expression ")", FOLLOW [215] -> SHIFT '(' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [215] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [215] -> SHIFT '{' GOTO 95
	expression/L9 = . "&" expression, FOLLOW [215] -> SHIFT '&' GOTO 80
	expression/L1 = . "new" typespec ":" expression, FOLLOW [215] -> SHIFT "new" GOTO 86
	expression/L2 = . "null", FOLLOW [215] -> SHIFT "null" GOTO 87
	expression/L9 = . "+" expression, FOLLOW [215] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [215] -> SHIFT '-' GOTO 89
	expression/L9 = . "~" expression, FOLLOW [215] -> SHIFT '~' GOTO 90
	expression/L9 = . "!" expression, FOLLOW [215] -> SHIFT '!' GOTO 91
	expression/L12 = . "*" expression, FOLLOW [215] -> SHIFT '*' GOTO 92
[232]
	variabledefinition = typespec IDENT "[" expression "]" "=" . expression, FOLLOW [12] -> GOTO 247
	expression/L3 = . expression "=" expression, FOLLOW [89] -> GOTO 247
	expression/L3 = . expression "+=" expression, FOLLOW [89] -> GOTO 247
	expression/L3 = . expression "-=" expression, FOLLOW [89] -> GOTO 247
	expression/L3 = . expression "*=" expression, FOLLOW [89] -> GOTO 247
	expression/L3 = . expression "/=" expression, FOLLOW [89] -> GOTO 247
	expression/L3 = . expression "%=" expression, FOLLOW [89] -> GOTO 247
	expression/L3 = . expression "&&=" expression, FOLLOW [89] -> GOTO 247
	expression/L3 = . expression "||=" expression, FOLLOW [89] -> GOTO 247
	expression/L3 = . expression "&=" expression, FOLLOW [89] -> GOTO 247
	expression/L3 = . expression "|=" expression, FOLLOW [89] -> GOTO 247
	expression/L3 = . expression "<<=" expression, FOLLOW [89] -> GOTO 247
	expression/L3 = . expression ">>=" expression, FOLLOW [89] -> GOTO 247
	expression/L4 = . expression "||" expression, FOLLOW [89] -> GOTO 247
	expression/L5 = . expression "&&" expression, FOLLOW [89] -> GOTO 247
	expression/L6 = . expression "|" expression, FOLLOW [89] -> GOTO 247
	expression/L7 = . expression "^" expression, FOLLOW [89] -> GOTO 247
	expression/L7 = . expression "&" expression, FOLLOW [89] -> GOTO 247
	expression/L8 = . expression "==" expression, FOLLOW [89] -> GOTO 247
	expression/L8 = . expression "!=" expression, FOLLOW [89] -> GOTO 247
	expression/L8 = . expression "<=" expression, FOLLOW [89] -> GOTO 247
	expression/L8 = . expression "<" expression, FOLLOW [89] -> GOTO 247
	expression/L8 = . expression ">=" expression, FOLLOW [89] -> GOTO 247
	expression/L8 = . expression ">" expression, FOLLOW [89] -> GOTO 247
	expression/L9 = . expression "+" expression, FOLLOW [89] -> GOTO 247
	expression/L9 = . expression "-" expression, FOLLOW [89] -> GOTO 247
	expression/L10 = . expression "*" expression, FOLLOW [89] -> GOTO 247
	expression/L10 = . expression "/" expression, FOLLOW [89] -> GOTO 247
	expression/L10 = . expression "%" expression, FOLLOW [89] -> GOTO 247
	expression/L11 = . expression "<<" expression, FOLLOW [89] -> GOTO 247
	expression/L11 = . expression ">>" expression, FOLLOW [89] -> GOTO 247
	expression/L12 = . expression "." IDENT, FOLLOW [89] -> GOTO 247
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [89] -> GOTO 247
	expression/L13 = . expression "(" ")", FOLLOW [89] -> GOTO 247
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [89] -> GOTO 247
	iexpression = . expression indirection IDENT, FOLLOW [89] -> GOTO 247
	expression/L12 = . iexpression, FOLLOW [89] -> GOTO 70
	expression/L2 = . BOOLEAN, FOLLOW [89] -> SHIFT BOOLEAN GOTO 71
	expression/L2 = . IDENT, FOLLOW [89] -> SHIFT IDENT GOTO 72
	expression/L2 = . DQSTRING, FOLLOW [89] -> SHIFT DQSTRING GOTO 73
	expression/L2 = . SQSTRING, FOLLOW [89] -> SHIFT SQSTRING GOTO 74
	expression/L2 = . CARDINAL, FOLLOW [89] -> SHIFT CARDINAL GOTO 75
	expression/L2 = . INTEGER, FOLLOW [89] -> SHIFT INTEGER GOTO 76
	expression/L2 = . FLOAT, FOLLOW [89] -> SHIFT FLOAT GOTO 77
	expression/L2 = . "(" expression ")", FOLLOW [89] -> SHIFT '(' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [89] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [89] -> SHIFT '{' GOTO 95
	expression/L9 = . "&" expression, FOLLOW [89] -> SHIFT '&' GOTO 80
	expression/L1 = . "new" typespec ":" expression, FOLLOW [89] -> SHIFT "new" GOTO 86
	expression/L2 = . "null", FOLLOW [89] -> SHIFT "null" GOTO 87
	expression/L9 = . "+" expression, FOLLOW [89] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [89] -> SHIFT '-' GOTO 89
	expression/L9 = . "~" expression, FOLLOW [89] -> SHIFT '~' GOTO 90
	expression/L9 = . "!" expression, FOLLOW [89] -> SHIFT '!' GOTO 91
	expression/L12 = . "*" expression, FOLLOW [89] -> SHIFT '*' GOTO 92
[233]
	paramdecl = typespec IDENT . (31), FOLLOW [168] -> REDUCE paramdecl #2 CALL paramdef
[234]
	callablebody = "(" parameterlist ")" . "{" codeblock "}", FOLLOW [217] -> SHIFT '{' GOTO 248
[235]
	typespec/L1 = . typename, FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [8] -> GOTO 8
	paramdecl = . typespec IDENT, FOLLOW [168] -> GOTO 170
	parameters = paramdecl "," . parameters, FOLLOW [9] -> GOTO 249
	parameters = . paramdecl "," parameters, FOLLOW [9] -> GOTO 173
	parameters = . paramdecl, FOLLOW [9] -> GOTO 173
	typename/L1 = . IDENT, FOLLOW [55] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [55] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [8] -> SHIFT "const" GOTO 18
[236]
	methoddefinition = "function" typespec IDENT . "(" parameterlist ")" ";", FOLLOW [159] -> SHIFT '(' GOTO 250
[237]
	typespec/L1 = . typename, FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [8] -> GOTO 8
	paramdecl = . typespec IDENT, FOLLOW [168] -> GOTO 170
	methoddefinition = "procedure" IDENT "(" . parameterlist ")" ";", FOLLOW [159] -> GOTO 251
	parameterlist = . parameters, FOLLOW [9] -> GOTO 172
	parameters = . paramdecl "," parameters, FOLLOW [9] -> GOTO 173
	parameters = . paramdecl, FOLLOW [9] -> GOTO 173
	typename/L1 = . IDENT, FOLLOW [55] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [55] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [8] -> SHIFT "const" GOTO 18
	parameterlist = ., FOLLOW [9] -> REDUCE parameterlist #0
[238]
	externdefinition = "extern" DQSTRING "function" typespec IDENT "(" externparameterlist . ")" ";", FOLLOW [52] -> SHIFT ')' GOTO 252
[239]
	externdefinition = "extern" DQSTRING "procedure" IDENT "(" externparameterlist ")" . ";", FOLLOW [52] -> SHIFT ';' GOTO 253
[240]
	externparameters = typespec "," . externparameters, FOLLOW [9] -> GOTO 254
	typespec/L1 = . typename, FOLLOW [168] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [168] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [168] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [168] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [168] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [168] -> GOTO 8
	externparameters = . typespec "," externparameters, FOLLOW [9] -> GOTO 185
	externparameters = . typespec, FOLLOW [9] -> GOTO 185
	typename/L1 = . IDENT, FOLLOW [169] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [169] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [168] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [168] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [168] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [168] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [168] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [168] -> SHIFT "const" GOTO 18
[241]
	expression/L13 = expression "(" expressionlist ")" . (87), FOLLOW [215] -> REDUCE expression #4 CALL operator "()"
[242]
	expression/L13 = expression "[" expressionlist "]" . (88), FOLLOW [215] -> REDUCE expression #4 CALL operator "[]"
[243]
	expressionlist = expression "," expressionlist ., FOLLOW [220] -> REDUCE expressionlist #3
[244]
	statement/L1 = "if" "(" expression ")" . "{" codeblock "}", FOLLOW [90] -> SHIFT '{' GOTO 255
	statement/L1 = "if" "(" expression ")" . "{" codeblock "}" "else" "{" codeblock "}", FOLLOW [90] -> SHIFT '{' GOTO 255
[245]
	statement/L1 = "while" "(" expression ")" . "{" codeblock "}", FOLLOW [90] -> SHIFT '{' GOTO 256
[246]
	iexpression = expression . indirection IDENT, FOLLOW [215] -> GOTO 114
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [215] -> SHIFT '(' GOTO 115
	expression/L13 = expression . "(" ")", FOLLOW [215] -> SHIFT '(' GOTO 115
	expression/L7 = expression . "&" expression, FOLLOW [215] -> SHIFT '&' GOTO 117
	expression/L7 = expression . "^" expression, FOLLOW [215] -> SHIFT '^' GOTO 118
	expression/L3 = expression . "=" expression, FOLLOW [215] -> SHIFT '=' GOTO 119
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [215] -> SHIFT '[' GOTO 120
	expression/L3 = expression . "+=" expression, FOLLOW [215] -> SHIFT "+=" GOTO 121
	expression/L3 = expression . "-=" expression, FOLLOW [215] -> SHIFT "-=" GOTO 122
	expression/L3 = expression . "*=" expression, FOLLOW [215] -> SHIFT "*=" GOTO 123
	expression/L3 = expression . "/=" expression, FOLLOW [215] -> SHIFT "/=" GOTO 124
	expression/L3 = expression . "%=" expression, FOLLOW [215] -> SHIFT "%=" GOTO 125
	expression/L3 = expression . "&&=" expression, FOLLOW [215] -> SHIFT "&&=" GOTO 126
	expression/L3 = expression . "||=" expression, FOLLOW [215] -> SHIFT "||=" GOTO 127
	expression/L3 = expression . "&=" expression, FOLLOW [215] -> SHIFT "&=" GOTO 128
	expression/L3 = expression . "|=" expression, FOLLOW [215] -> SHIFT "|=" GOTO 129
	expression/L3 = expression . "<<=" expression, FOLLOW [215] -> SHIFT "<<=" GOTO 130
	expression/L3 = expression . ">>=" expression, FOLLOW [215] -> SHIFT ">>=" GOTO 131
	expression/L4 = expression . "||" expression, FOLLOW [215] -> SHIFT "||" GOTO 132
	expression/L5 = expression . "&&" expression, FOLLOW [215] -> SHIFT "&&" GOTO 133
	expression/L6 = expression . "|" expression, FOLLOW [215] -> SHIFT '|' GOTO 134
	expression/L8 = expression . "==" expression, FOLLOW [215] -> SHIFT "==" GOTO 135
	expression/L8 = expression . "!=" expression, FOLLOW [215] -> SHIFT "!=" GOTO 136
	expression/L8 = expression . "<=" expression, FOLLOW [215] -> SHIFT "<=" GOTO 137
	expression/L8 = expression . "<" expression, FOLLOW [215] -> SHIFT '<' GOTO 138
	expression/L8 = expression . ">=" expression, FOLLOW [215] -> SHIFT ">=" GOTO 139
	expression/L8 = expression . ">" expression, FOLLOW [215] -> SHIFT '>' GOTO 140
	expression/L9 = expression . "+" expression, FOLLOW [215] -> SHIFT '+' GOTO 141
	expression/L9 = expression . "-" expression, FOLLOW [215] -> SHIFT '-' GOTO 142
	expression/L10 = expression . "*" expression, FOLLOW [215] -> SHIFT '*' GOTO 143
	expression/L10 = expression . "/" expression, FOLLOW [215] -> SHIFT '/' GOTO 144
	expression/L10 = expression . "%" expression, FOLLOW [215] -> SHIFT '%' GOTO 145
	expression/L11 = expression . "<<" expression, FOLLOW [215] -> SHIFT "<<" GOTO 146
	expression/L11 = expression . ">>" expression, FOLLOW [215] -> SHIFT ">>" GOTO 147
	expression/L12 = expression . "." IDENT, FOLLOW [215] -> SHIFT '.' GOTO 148
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 149
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 149
	expression/L1 = "new" typespec ":" expression . (44), FOLLOW [215] -> REDUCE expression #4 CALL allocate
[247]
	iexpression = expression . indirection IDENT, FOLLOW [89] -> GOTO 114
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [89] -> SHIFT '(' GOTO 115
	expression/L13 = expression . "(" ")", FOLLOW [89] -> SHIFT '(' GOTO 115
	expression/L7 = expression . "&" expression, FOLLOW [89] -> SHIFT '&' GOTO 117
	expression/L7 = expression . "^" expression, FOLLOW [89] -> SHIFT '^' GOTO 118
	expression/L3 = expression . "=" expression, FOLLOW [89] -> SHIFT '=' GOTO 119
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [89] -> SHIFT '[' GOTO 120
	expression/L3 = expression . "+=" expression, FOLLOW [89] -> SHIFT "+=" GOTO 121
	expression/L3 = expression . "-=" expression, FOLLOW [89] -> SHIFT "-=" GOTO 122
	expression/L3 = expression . "*=" expression, FOLLOW [89] -> SHIFT "*=" GOTO 123
	expression/L3 = expression . "/=" expression, FOLLOW [89] -> SHIFT "/=" GOTO 124
	expression/L3 = expression . "%=" expression, FOLLOW [89] -> SHIFT "%=" GOTO 125
	expression/L3 = expression . "&&=" expression, FOLLOW [89] -> SHIFT "&&=" GOTO 126
	expression/L3 = expression . "||=" expression, FOLLOW [89] -> SHIFT "||=" GOTO 127
	expression/L3 = expression . "&=" expression, FOLLOW [89] -> SHIFT "&=" GOTO 128
	expression/L3 = expression . "|=" expression, FOLLOW [89] -> SHIFT "|=" GOTO 129
	expression/L3 = expression . "<<=" expression, FOLLOW [89] -> SHIFT "<<=" GOTO 130
	expression/L3 = expression . ">>=" expression, FOLLOW [89] -> SHIFT ">>=" GOTO 131
	expression/L4 = expression . "||" expression, FOLLOW [89] -> SHIFT "||" GOTO 132
	expression/L5 = expression . "&&" expression, FOLLOW [89] -> SHIFT "&&" GOTO 133
	expression/L6 = expression . "|" expression, FOLLOW [89] -> SHIFT '|' GOTO 134
	expression/L8 = expression . "==" expression, FOLLOW [89] -> SHIFT "==" GOTO 135
	expression/L8 = expression . "!=" expression, FOLLOW [89] -> SHIFT "!=" GOTO 136
	expression/L8 = expression . "<=" expression, FOLLOW [89] -> SHIFT "<=" GOTO 137
	expression/L8 = expression . "<" expression, FOLLOW [89] -> SHIFT '<' GOTO 138
	expression/L8 = expression . ">=" expression, FOLLOW [89] -> SHIFT ">=" GOTO 139
	expression/L8 = expression . ">" expression, FOLLOW [89] -> SHIFT '>' GOTO 140
	expression/L9 = expression . "+" expression, FOLLOW [89] -> SHIFT '+' GOTO 141
	expression/L9 = expression . "-" expression, FOLLOW [89] -> SHIFT '-' GOTO 142
	expression/L10 = expression . "*" expression, FOLLOW [89] -> SHIFT '*' GOTO 143
	expression/L10 = expression . "/" expression, FOLLOW [89] -> SHIFT '/' GOTO 144
	expression/L10 = expression . "%" expression, FOLLOW [89] -> SHIFT '%' GOTO 145
	expression/L11 = expression . "<<" expression, FOLLOW [89] -> SHIFT "<<" GOTO 146
	expression/L11 = expression . ">>" expression, FOLLOW [89] -> SHIFT ">>" GOTO 147
	expression/L12 = expression . "." IDENT, FOLLOW [89] -> SHIFT '.' GOTO 148
	indirection = . "->" indirection, FOLLOW [8] -> SHIFT "->" GOTO 149
	indirection = . "->", FOLLOW [8] -> SHIFT "->" GOTO 149
	variabledefinition = typespec IDENT "[" expression "]" "=" expression . (step:41), FOLLOW [12] -> REDUCE variabledefinition #7 CALL vardef_array_assign
[248]
	statement/L1 = . typedefinition ";", FOLLOW [90] -> GOTO 64
	functiondefinition = . linkage "function" typespec IDENT callablebody, FOLLOW [90] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [90] -> GOTO 14
	statement/L1 = . functiondefinition, FOLLOW [90] -> GOTO 65
	callablebody = "(" parameterlist ")" "{" . codeblock "}", FOLLOW [217] -> GOTO 257
	codeblock = . statementlist, FOLLOW [11] -> GOTO 67
	statementlist = . statement statementlist, FOLLOW [11] -> GOTO 68
	statement/L1 = . expression ";", FOLLOW [90] -> GOTO 69
	expression/L3 = . expression "=" expression, FOLLOW [89] -> GOTO 69
	expression/L3 = . expression "+=" expression, FOLLOW [89] -> GOTO 69
	expression/L3 = . expression "-=" expression, FOLLOW [89] -> GOTO 69
	expression/L3 = . expression "*=" expression, FOLLOW [89] -> GOTO 69
	expression/L3 = . expression "/=" expression, FOLLOW [89] -> GOTO 69
	expression/L3 = . expression "%=" expression, FOLLOW [89] -> GOTO 69
	expression/L3 = . expression "&&=" expression, FOLLOW [89] -> GOTO 69
	expression/L3 = . expression "||=" expression, FOLLOW [89] -> GOTO 69
	expression/L3 = . expression "&=" expression, FOLLOW [89] -> GOTO 69
	expression/L3 = . expression "|=" expression, FOLLOW [89] -> GOTO 69
	expression/L3 = . expression "<<=" expression, FOLLOW [89] -> GOTO 69
	expression/L3 = . expression ">>=" expression, FOLLOW [89] -> GOTO 69
	expression/L4 = . expression "||" expression, FOLLOW [89] -> GOTO 69
	expression/L5 = . expression "&&" expression, FOLLOW [89] -> GOTO 69
	expression/L6 = . expression "|" expression, FOLLOW [89] -> GOTO 69
	expression/L7 = . expression "^" expression, FOLLOW [89] -> GOTO 69
	expression/L7 = . expression "&" expression, FOLLOW [89] -> GOTO 69
	expression/L8 = . expression "==" expression, FOLLOW [89] -> GOTO 69
	expression/L8 = . expression "!=" expression, FOLLOW [89] -> GOTO 69
	expression/L8 = . expression "<=" expression, FOLLOW [89] -> GOTO 69
	expression/L8 = . expression "<" expression, FOLLOW [89] -> GOTO 69
	expression/L8 = . expression ">=" expression, FOLLOW [89] -> GOTO 69
	expression/L8 = . expression ">" expression, FOLLOW [89] -> GOTO 69
	expression/L9 = . expression "+" expression, FOLLOW [89] -> GOTO 69
	expression/L9 = . expression "-" expression, FOLLOW [89] -> GOTO 69
	expression/L10 = . expression "*" expression, FOLLOW [89] -> GOTO 69
	expression/L10 = . expression "/" expression, FOLLOW [89] -> GOTO 69
	expression/L10 = . expression "%" expression, FOLLOW [89] -> GOTO 69
	expression/L11 = . expression "<<" expression, FOLLOW [89] -> GOTO 69
	expression/L11 = . expression ">>" expression, FOLLOW [89] -> GOTO 69
	expression/L12 = . expression "." IDENT, FOLLOW [89] -> GOTO 69
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [89] -> GOTO 69
	expression/L13 = . expression "(" ")", FOLLOW [89] -> GOTO 69
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [89] -> GOTO 69
	iexpression = . expression indirection IDENT, FOLLOW [89] -> GOTO 69
	expression/L12 = . iexpression, FOLLOW [89] -> GOTO 70
	expression/L2 = . BOOLEAN, FOLLOW [89] -> SHIFT BOOLEAN GOTO 71
	expression/L2 = . IDENT, FOLLOW [89] -> SHIFT IDENT GOTO 72
	expression/L2 = . DQSTRING, FOLLOW [89] -> SHIFT DQSTRING GOTO 73
	expression/L2 = . SQSTRING, FOLLOW [89] -> SHIFT SQSTRING GOTO 74
	expression/L2 = . CARDINAL, FOLLOW [89] -> SHIFT CARDINAL GOTO 75
	expression/L2 = . INTEGER, FOLLOW [89] -> SHIFT INTEGER GOTO 76
	expression/L2 = . FLOAT, FOLLOW [89] -> SHIFT FLOAT GOTO 77
	expression/L2 = . "(" expression ")", FOLLOW [89] -> SHIFT '(' GOTO 78
	statement/L1 = . "{" codeblock "}", FOLLOW [90] -> SHIFT '{' GOTO 79
	expression/L1 = . "{" expressionlist "}", FOLLOW [89] -> SHIFT '{' GOTO 79
	expression/L1 = . "{" "}", FOLLOW [89] -> SHIFT '{' GOTO 79
	expression/L9 = . "&" expression, FOLLOW [89] -> SHIFT '&' GOTO 80
	typedefinition = . "typedef" typename IDENT, FOLLOW [12] -> SHIFT "typedef" GOTO 19
	linkage = . "private", FOLLOW [54] -> SHIFT "private" GOTO 23
	linkage = . "public", FOLLOW [54] -> SHIFT "public" GOTO 24
	statement/L1 = . "var" variabledefinition ";", FOLLOW [90] -> SHIFT "var" GOTO 81
	statement/L1 = . "return" expression ";", FOLLOW [90] -> SHIFT "return" GOTO 82
	statement/L1 = . "delete" expression ";", FOLLOW [90] -> SHIFT "delete" GOTO 83
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}", FOLLOW [90] -> SHIFT "if" GOTO 84
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}", FOLLOW [90] -> SHIFT "if" GOTO 84
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}", FOLLOW [90] -> SHIFT "while" GOTO 85
	expression/L1 = . "new" typespec ":" expression, FOLLOW [89] -> SHIFT "new" GOTO 86
	expression/L2 = . "null", FOLLOW [89] -> SHIFT "null" GOTO 87
	expression/L9 = . "+" expression, FOLLOW [89] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [89] -> SHIFT '-' GOTO 89
	expression/L9 = . "~" expression, FOLLOW [89] -> SHIFT '~' GOTO 90
	expression/L9 = . "!" expression, FOLLOW [89] -> SHIFT '!' GOTO 91
	expression/L12 = . "*" expression, FOLLOW [89] -> SHIFT '*' GOTO 92
	statementlist = ., FOLLOW [11] -> REDUCE statementlist #0
	linkage = . (25), FOLLOW [54] -> REDUCE linkage #0 CALL linkage {linkage="internal",attributes="#0 nounwind"}
[249]
	parameters = paramdecl "," parameters ., FOLLOW [9] -> REDUCE parameters #3
[250]
	typespec/L1 = . typename, FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [8] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [8] -> GOTO 8
	paramdecl = . typespec IDENT, FOLLOW [168] -> GOTO 170
	methoddefinition = "function" typespec IDENT "(" . parameterlist ")" ";", FOLLOW [159] -> GOTO 258
	parameterlist = . parameters, FOLLOW [9] -> GOTO 172
	parameters = . paramdecl "," parameters, FOLLOW [9] -> GOTO 173
	parameters = . paramdecl, FOLLOW [9] -> GOTO 173
	typename/L1 = . IDENT, FOLLOW [55] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [55] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [8] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [8] -> SHIFT "const" GOTO 18
	parameterlist = ., FOLLOW [9] -> REDUCE parameterlist #0
[251]
	methoddefinition = "procedure" IDENT "(" parameterlist . ")" ";", FOLLOW [159] -> SHIFT ')' GOTO 259
[252]
	externdefinition = "extern" DQSTRING "function" typespec IDENT "(" externparameterlist ")" . ";", FOLLOW [52] -> SHIFT ';' GOTO 260
[253]
	externdefinition = "extern" DQSTRING "procedure" IDENT "(" externparameterlist ")" ";" . (3), FOLLOW [52] -> REDUCE externdefinition #8 CALL extern_procdef
[254]
	externparameters = typespec "," externparameters ., FOLLOW [9] -> REDUCE externparameters #3
[255]
	statement/L1 = . typedefinition ";", FOLLOW [90] -> GOTO 64
	functiondefinition = . linkage "function" typespec IDENT callablebody, FOLLOW [90] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [90] -> GOTO 14
	statement/L1 = . functiondefinition, FOLLOW [90] -> GOTO 65
	statement/L1 = "if" "(" expression ")" "{" . codeblock "}", FOLLOW [90] -> GOTO 261
	statement/L1 = "if" "(" expression ")" "{" . codeblock "}" "else" "{" codeblock "}", FOLLOW [90] -> GOTO 261
	codeblock = . statementlist, FOLLOW [11] -> GOTO 67
	statementlist = . statement statementlist, FOLLOW [11] -> GOTO 68
	statement/L1 = . expression ";", FOLLOW [90] -> GOTO 69
	expression/L3 = . expression "=" expression, FOLLOW [89] -> GOTO 69
	expression/L3 = . expression "+=" expression, FOLLOW [89] -> GOTO 69
	expression/L3 = . expression "-=" expression, FOLLOW [89] -> GOTO 69
	expression/L3 = . expression "*=" expression, FOLLOW [89] -> GOTO 69
	expression/L3 = . expression "/=" expression, FOLLOW [89] -> GOTO 69
	expression/L3 = . expression "%=" expression, FOLLOW [89] -> GOTO 69
	expression/L3 = . expression "&&=" expression, FOLLOW [89] -> GOTO 69
	expression/L3 = . expression "||=" expression, FOLLOW [89] -> GOTO 69
	expression/L3 = . expression "&=" expression, FOLLOW [89] -> GOTO 69
	expression/L3 = . expression "|=" expression, FOLLOW [89] -> GOTO 69
	expression/L3 = . expression "<<=" expression, FOLLOW [89] -> GOTO 69
	expression/L3 = . expression ">>=" expression, FOLLOW [89] -> GOTO 69
	expression/L4 = . expression "||" expression, FOLLOW [89] -> GOTO 69
	expression/L5 = . expression "&&" expression, FOLLOW [89] -> GOTO 69
	expression/L6 = . expression "|" expression, FOLLOW [89] -> GOTO 69
	expression/L7 = . expression "^" expression, FOLLOW [89] -> GOTO 69
	expression/L7 = . expression "&" expression, FOLLOW [89] -> GOTO 69
	expression/L8 = . expression "==" expression, FOLLOW [89] -> GOTO 69
	expression/L8 = . expression "!=" expression, FOLLOW [89] -> GOTO 69
	expression/L8 = . expression "<=" expression, FOLLOW [89] -> GOTO 69
	expression/L8 = . expression "<" expression, FOLLOW [89] -> GOTO 69
	expression/L8 = . expression ">=" expression, FOLLOW [89] -> GOTO 69
	expression/L8 = . expression ">" expression, FOLLOW [89] -> GOTO 69
	expression/L9 = . expression "+" expression, FOLLOW [89] -> GOTO 69
	expression/L9 = . expression "-" expression, FOLLOW [89] -> GOTO 69
	expression/L10 = . expression "*" expression, FOLLOW [89] -> GOTO 69
	expression/L10 = . expression "/" expression, FOLLOW [89] -> GOTO 69
	expression/L10 = . expression "%" expression, FOLLOW [89] -> GOTO 69
	expression/L11 = . expression "<<" expression, FOLLOW [89] -> GOTO 69
	expression/L11 = . expression ">>" expression, FOLLOW [89] -> GOTO 69
	expression/L12 = . expression "." IDENT, FOLLOW [89] -> GOTO 69
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [89] -> GOTO 69
	expression/L13 = . expression "(" ")", FOLLOW [89] -> GOTO 69
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [89] -> GOTO 69
	iexpression = . expression indirection IDENT, FOLLOW [89] -> GOTO 69
	expression/L12 = . iexpression, FOLLOW [89] -> GOTO 70
	expression/L2 = . BOOLEAN, FOLLOW [89] -> SHIFT BOOLEAN GOTO 71
	expression/L2 = . IDENT, FOLLOW [89] -> SHIFT IDENT GOTO 72
	expression/L2 = . DQSTRING, FOLLOW [89] -> SHIFT DQSTRING GOTO 73
	expression/L2 = . SQSTRING, FOLLOW [89] -> SHIFT SQSTRING GOTO 74
	expression/L2 = . CARDINAL, FOLLOW [89] -> SHIFT CARDINAL GOTO 75
	expression/L2 = . INTEGER, FOLLOW [89] -> SHIFT INTEGER GOTO 76
	expression/L2 = . FLOAT, FOLLOW [89] -> SHIFT FLOAT GOTO 77
	expression/L2 = . "(" expression ")", FOLLOW [89] -> SHIFT '(' GOTO 78
	statement/L1 = . "{" codeblock "}", FOLLOW [90] -> SHIFT '{' GOTO 79
	expression/L1 = . "{" expressionlist "}", FOLLOW [89] -> SHIFT '{' GOTO 79
	expression/L1 = . "{" "}", FOLLOW [89] -> SHIFT '{' GOTO 79
	expression/L9 = . "&" expression, FOLLOW [89] -> SHIFT '&' GOTO 80
	typedefinition = . "typedef" typename IDENT, FOLLOW [12] -> SHIFT "typedef" GOTO 19
	linkage = . "private", FOLLOW [54] -> SHIFT "private" GOTO 23
	linkage = . "public", FOLLOW [54] -> SHIFT "public" GOTO 24
	statement/L1 = . "var" variabledefinition ";", FOLLOW [90] -> SHIFT "var" GOTO 81
	statement/L1 = . "return" expression ";", FOLLOW [90] -> SHIFT "return" GOTO 82
	statement/L1 = . "delete" expression ";", FOLLOW [90] -> SHIFT "delete" GOTO 83
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}", FOLLOW [90] -> SHIFT "if" GOTO 84
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}", FOLLOW [90] -> SHIFT "if" GOTO 84
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}", FOLLOW [90] -> SHIFT "while" GOTO 85
	expression/L1 = . "new" typespec ":" expression, FOLLOW [89] -> SHIFT "new" GOTO 86
	expression/L2 = . "null", FOLLOW [89] -> SHIFT "null" GOTO 87
	expression/L9 = . "+" expression, FOLLOW [89] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [89] -> SHIFT '-' GOTO 89
	expression/L9 = . "~" expression, FOLLOW [89] -> SHIFT '~' GOTO 90
	expression/L9 = . "!" expression, FOLLOW [89] -> SHIFT '!' GOTO 91
	expression/L12 = . "*" expression, FOLLOW [89] -> SHIFT '*' GOTO 92
	statementlist = ., FOLLOW [11] -> REDUCE statementlist #0
	linkage = . (25), FOLLOW [54] -> REDUCE linkage #0 CALL linkage {linkage="internal",attributes="#0 nounwind"}
[256]
	statement/L1 = . typedefinition ";", FOLLOW [90] -> GOTO 64
	functiondefinition = . linkage "function" typespec IDENT callablebody, FOLLOW [90] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [90] -> GOTO 14
	statement/L1 = . functiondefinition, FOLLOW [90] -> GOTO 65
	statement/L1 = "while" "(" expression ")" "{" . codeblock "}", FOLLOW [90] -> GOTO 262
	codeblock = . statementlist, FOLLOW [11] -> GOTO 67
	statementlist = . statement statementlist, FOLLOW [11] -> GOTO 68
	statement/L1 = . expression ";", FOLLOW [90] -> GOTO 69
	expression/L3 = . expression "=" expression, FOLLOW [89] -> GOTO 69
	expression/L3 = . expression "+=" expression, FOLLOW [89] -> GOTO 69
	expression/L3 = . expression "-=" expression, FOLLOW [89] -> GOTO 69
	expression/L3 = . expression "*=" expression, FOLLOW [89] -> GOTO 69
	expression/L3 = . expression "/=" expression, FOLLOW [89] -> GOTO 69
	expression/L3 = . expression "%=" expression, FOLLOW [89] -> GOTO 69
	expression/L3 = . expression "&&=" expression, FOLLOW [89] -> GOTO 69
	expression/L3 = . expression "||=" expression, FOLLOW [89] -> GOTO 69
	expression/L3 = . expression "&=" expression, FOLLOW [89] -> GOTO 69
	expression/L3 = . expression "|=" expression, FOLLOW [89] -> GOTO 69
	expression/L3 = . expression "<<=" expression, FOLLOW [89] -> GOTO 69
	expression/L3 = . expression ">>=" expression, FOLLOW [89] -> GOTO 69
	expression/L4 = . expression "||" expression, FOLLOW [89] -> GOTO 69
	expression/L5 = . expression "&&" expression, FOLLOW [89] -> GOTO 69
	expression/L6 = . expression "|" expression, FOLLOW [89] -> GOTO 69
	expression/L7 = . expression "^" expression, FOLLOW [89] -> GOTO 69
	expression/L7 = . expression "&" expression, FOLLOW [89] -> GOTO 69
	expression/L8 = . expression "==" expression, FOLLOW [89] -> GOTO 69
	expression/L8 = . expression "!=" expression, FOLLOW [89] -> GOTO 69
	expression/L8 = . expression "<=" expression, FOLLOW [89] -> GOTO 69
	expression/L8 = . expression "<" expression, FOLLOW [89] -> GOTO 69
	expression/L8 = . expression ">=" expression, FOLLOW [89] -> GOTO 69
	expression/L8 = . expression ">" expression, FOLLOW [89] -> GOTO 69
	expression/L9 = . expression "+" expression, FOLLOW [89] -> GOTO 69
	expression/L9 = . expression "-" expression, FOLLOW [89] -> GOTO 69
	expression/L10 = . expression "*" expression, FOLLOW [89] -> GOTO 69
	expression/L10 = . expression "/" expression, FOLLOW [89] -> GOTO 69
	expression/L10 = . expression "%" expression, FOLLOW [89] -> GOTO 69
	expression/L11 = . expression "<<" expression, FOLLOW [89] -> GOTO 69
	expression/L11 = . expression ">>" expression, FOLLOW [89] -> GOTO 69
	expression/L12 = . expression "." IDENT, FOLLOW [89] -> GOTO 69
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [89] -> GOTO 69
	expression/L13 = . expression "(" ")", FOLLOW [89] -> GOTO 69
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [89] -> GOTO 69
	iexpression = . expression indirection IDENT, FOLLOW [89] -> GOTO 69
	expression/L12 = . iexpression, FOLLOW [89] -> GOTO 70
	expression/L2 = . BOOLEAN, FOLLOW [89] -> SHIFT BOOLEAN GOTO 71
	expression/L2 = . IDENT, FOLLOW [89] -> SHIFT IDENT GOTO 72
	expression/L2 = . DQSTRING, FOLLOW [89] -> SHIFT DQSTRING GOTO 73
	expression/L2 = . SQSTRING, FOLLOW [89] -> SHIFT SQSTRING GOTO 74
	expression/L2 = . CARDINAL, FOLLOW [89] -> SHIFT CARDINAL GOTO 75
	expression/L2 = . INTEGER, FOLLOW [89] -> SHIFT INTEGER GOTO 76
	expression/L2 = . FLOAT, FOLLOW [89] -> SHIFT FLOAT GOTO 77
	expression/L2 = . "(" expression ")", FOLLOW [89] -> SHIFT '(' GOTO 78
	statement/L1 = . "{" codeblock "}", FOLLOW [90] -> SHIFT '{' GOTO 79
	expression/L1 = . "{" expressionlist "}", FOLLOW [89] -> SHIFT '{' GOTO 79
	expression/L1 = . "{" "}", FOLLOW [89] -> SHIFT '{' GOTO 79
	expression/L9 = . "&" expression, FOLLOW [89] -> SHIFT '&' GOTO 80
	typedefinition = . "typedef" typename IDENT, FOLLOW [12] -> SHIFT "typedef" GOTO 19
	linkage = . "private", FOLLOW [54] -> SHIFT "private" GOTO 23
	linkage = . "public", FOLLOW [54] -> SHIFT "public" GOTO 24
	statement/L1 = . "var" variabledefinition ";", FOLLOW [90] -> SHIFT "var" GOTO 81
	statement/L1 = . "return" expression ";", FOLLOW [90] -> SHIFT "return" GOTO 82
	statement/L1 = . "delete" expression ";", FOLLOW [90] -> SHIFT "delete" GOTO 83
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}", FOLLOW [90] -> SHIFT "if" GOTO 84
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}", FOLLOW [90] -> SHIFT "if" GOTO 84
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}", FOLLOW [90] -> SHIFT "while" GOTO 85
	expression/L1 = . "new" typespec ":" expression, FOLLOW [89] -> SHIFT "new" GOTO 86
	expression/L2 = . "null", FOLLOW [89] -> SHIFT "null" GOTO 87
	expression/L9 = . "+" expression, FOLLOW [89] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [89] -> SHIFT '-' GOTO 89
	expression/L9 = . "~" expression, FOLLOW [89] -> SHIFT '~' GOTO 90
	expression/L9 = . "!" expression, FOLLOW [89] -> SHIFT '!' GOTO 91
	expression/L12 = . "*" expression, FOLLOW [89] -> SHIFT '*' GOTO 92
	statementlist = ., FOLLOW [11] -> REDUCE statementlist #0
	linkage = . (25), FOLLOW [54] -> REDUCE linkage #0 CALL linkage {linkage="internal",attributes="#0 nounwind"}
[257]
	callablebody = "(" parameterlist ")" "{" codeblock . "}", FOLLOW [217] -> SHIFT '}' GOTO 263
[258]
	methoddefinition = "function" typespec IDENT "(" parameterlist . ")" ";", FOLLOW [159] -> SHIFT ')' GOTO 264
[259]
	methoddefinition = "procedure" IDENT "(" parameterlist ")" . ";", FOLLOW [159] -> SHIFT ';' GOTO 265
[260]
	externdefinition = "extern" DQSTRING "function" typespec IDENT "(" externparameterlist ")" ";" . (2), FOLLOW [52] -> REDUCE externdefinition #9 CALL extern_funcdef
[261]
	statement/L1 = "if" "(" expression ")" "{" codeblock . "}", FOLLOW [90] -> SHIFT '}' GOTO 266
	statement/L1 = "if" "(" expression ")" "{" codeblock . "}" "else" "{" codeblock "}", FOLLOW [90] -> SHIFT '}' GOTO 266
[262]
	statement/L1 = "while" "(" expression ")" "{" codeblock . "}", FOLLOW [90] -> SHIFT '}' GOTO 267
[263]
	callablebody = "(" parameterlist ")" "{" codeblock "}" . (scope:29), FOLLOW [217] -> REDUCE callablebody #6 CALL callablebody
[264]
	methoddefinition = "function" typespec IDENT "(" parameterlist ")" . ";", FOLLOW [159] -> SHIFT ';' GOTO 268
[265]
	methoddefinition = "procedure" IDENT "(" parameterlist ")" ";" . (6), FOLLOW [159] -> REDUCE methoddefinition #6 CALL interface_procdef
[266]
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" . "else" "{" codeblock "}", FOLLOW [90] -> SHIFT "else" GOTO 269
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" . (scope:36), FOLLOW [90] -> REDUCE statement #7 CALL conditional_if
[267]
	statement/L1 = "while" "(" expression ")" "{" codeblock "}" . (scope:38), FOLLOW [90] -> REDUCE statement #7 CALL conditional_while
[268]
	methoddefinition = "function" typespec IDENT "(" parameterlist ")" ";" . (5), FOLLOW [159] -> REDUCE methoddefinition #7 CALL interface_funcdef
[269]
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" "else" . "{" codeblock "}", FOLLOW [90] -> SHIFT '{' GOTO 270
[270]
	statement/L1 = . typedefinition ";", FOLLOW [90] -> GOTO 64
	functiondefinition = . linkage "function" typespec IDENT callablebody, FOLLOW [90] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [90] -> GOTO 14
	statement/L1 = . functiondefinition, FOLLOW [90] -> GOTO 65
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" "else" "{" . codeblock "}", FOLLOW [90] -> GOTO 271
	codeblock = . statementlist, FOLLOW [11] -> GOTO 67
	statementlist = . statement statementlist, FOLLOW [11] -> GOTO 68
	statement/L1 = . expression ";", FOLLOW [90] -> GOTO 69
	expression/L3 = . expression "=" expression, FOLLOW [89] -> GOTO 69
	expression/L3 = . expression "+=" expression, FOLLOW [89] -> GOTO 69
	expression/L3 = . expression "-=" expression, FOLLOW [89] -> GOTO 69
	expression/L3 = . expression "*=" expression, FOLLOW [89] -> GOTO 69
	expression/L3 = . expression "/=" expression, FOLLOW [89] -> GOTO 69
	expression/L3 = . expression "%=" expression, FOLLOW [89] -> GOTO 69
	expression/L3 = . expression "&&=" expression, FOLLOW [89] -> GOTO 69
	expression/L3 = . expression "||=" expression, FOLLOW [89] -> GOTO 69
	expression/L3 = . expression "&=" expression, FOLLOW [89] -> GOTO 69
	expression/L3 = . expression "|=" expression, FOLLOW [89] -> GOTO 69
	expression/L3 = . expression "<<=" expression, FOLLOW [89] -> GOTO 69
	expression/L3 = . expression ">>=" expression, FOLLOW [89] -> GOTO 69
	expression/L4 = . expression "||" expression, FOLLOW [89] -> GOTO 69
	expression/L5 = . expression "&&" expression, FOLLOW [89] -> GOTO 69
	expression/L6 = . expression "|" expression, FOLLOW [89] -> GOTO 69
	expression/L7 = . expression "^" expression, FOLLOW [89] -> GOTO 69
	expression/L7 = . expression "&" expression, FOLLOW [89] -> GOTO 69
	expression/L8 = . expression "==" expression, FOLLOW [89] -> GOTO 69
	expression/L8 = . expression "!=" expression, FOLLOW [89] -> GOTO 69
	expression/L8 = . expression "<=" expression, FOLLOW [89] -> GOTO 69
	expression/L8 = . expression "<" expression, FOLLOW [89] -> GOTO 69
	expression/L8 = . expression ">=" expression, FOLLOW [89] -> GOTO 69
	expression/L8 = . expression ">" expression, FOLLOW [89] -> GOTO 69
	expression/L9 = . expression "+" expression, FOLLOW [89] -> GOTO 69
	expression/L9 = . expression "-" expression, FOLLOW [89] -> GOTO 69
	expression/L10 = . expression "*" expression, FOLLOW [89] -> GOTO 69
	expression/L10 = . expression "/" expression, FOLLOW [89] -> GOTO 69
	expression/L10 = . expression "%" expression, FOLLOW [89] -> GOTO 69
	expression/L11 = . expression "<<" expression, FOLLOW [89] -> GOTO 69
	expression/L11 = . expression ">>" expression, FOLLOW [89] -> GOTO 69
	expression/L12 = . expression "." IDENT, FOLLOW [89] -> GOTO 69
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [89] -> GOTO 69
	expression/L13 = . expression "(" ")", FOLLOW [89] -> GOTO 69
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [89] -> GOTO 69
	iexpression = . expression indirection IDENT, FOLLOW [89] -> GOTO 69
	expression/L12 = . iexpression, FOLLOW [89] -> GOTO 70
	expression/L2 = . BOOLEAN, FOLLOW [89] -> SHIFT BOOLEAN GOTO 71
	expression/L2 = . IDENT, FOLLOW [89] -> SHIFT IDENT GOTO 72
	expression/L2 = . DQSTRING, FOLLOW [89] -> SHIFT DQSTRING GOTO 73
	expression/L2 = . SQSTRING, FOLLOW [89] -> SHIFT SQSTRING GOTO 74
	expression/L2 = . CARDINAL, FOLLOW [89] -> SHIFT CARDINAL GOTO 75
	expression/L2 = . INTEGER, FOLLOW [89] -> SHIFT INTEGER GOTO 76
	expression/L2 = . FLOAT, FOLLOW [89] -> SHIFT FLOAT GOTO 77
	expression/L2 = . "(" expression ")", FOLLOW [89] -> SHIFT '(' GOTO 78
	statement/L1 = . "{" codeblock "}", FOLLOW [90] -> SHIFT '{' GOTO 79
	expression/L1 = . "{" expressionlist "}", FOLLOW [89] -> SHIFT '{' GOTO 79
	expression/L1 = . "{" "}", FOLLOW [89] -> SHIFT '{' GOTO 79
	expression/L9 = . "&" expression, FOLLOW [89] -> SHIFT '&' GOTO 80
	typedefinition = . "typedef" typename IDENT, FOLLOW [12] -> SHIFT "typedef" GOTO 19
	linkage = . "private", FOLLOW [54] -> SHIFT "private" GOTO 23
	linkage = . "public", FOLLOW [54] -> SHIFT "public" GOTO 24
	statement/L1 = . "var" variabledefinition ";", FOLLOW [90] -> SHIFT "var" GOTO 81
	statement/L1 = . "return" expression ";", FOLLOW [90] -> SHIFT "return" GOTO 82
	statement/L1 = . "delete" expression ";", FOLLOW [90] -> SHIFT "delete" GOTO 83
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}", FOLLOW [90] -> SHIFT "if" GOTO 84
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}", FOLLOW [90] -> SHIFT "if" GOTO 84
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}", FOLLOW [90] -> SHIFT "while" GOTO 85
	expression/L1 = . "new" typespec ":" expression, FOLLOW [89] -> SHIFT "new" GOTO 86
	expression/L2 = . "null", FOLLOW [89] -> SHIFT "null" GOTO 87
	expression/L9 = . "+" expression, FOLLOW [89] -> SHIFT '+' GOTO 88
	expression/L9 = . "-" expression, FOLLOW [89] -> SHIFT '-' GOTO 89
	expression/L9 = . "~" expression, FOLLOW [89] -> SHIFT '~' GOTO 90
	expression/L9 = . "!" expression, FOLLOW [89] -> SHIFT '!' GOTO 91
	expression/L12 = . "*" expression, FOLLOW [89] -> SHIFT '*' GOTO 92
	statementlist = ., FOLLOW [11] -> REDUCE statementlist #0
	linkage = . (25), FOLLOW [54] -> REDUCE linkage #0 CALL linkage {linkage="internal",attributes="#0 nounwind"}
[271]
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock . "}", FOLLOW [90] -> SHIFT '}' GOTO 272
[272]
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}" . (scope:37), FOLLOW [90] -> REDUCE statement #11 CALL conditional_if_else

-- Function calls:
(1) program
(2) extern_funcdef
(3) extern_procdef
(4) extern_paramdeflist
(5) interface_funcdef
(6) interface_procdef
(7) main_procdef
(8) definition
(9) typespec, ""
(10) typespec, "const "
(11) typespec, "&"
(12) typespec, "const&"
(13) typespec, "^"
(14) typespec, "const^"
(15) typespec, "^&"
(16) typespec, "const^&"
(17) typespec, "^^"
(18) typespec, "const^^"
(19) typespec, "^^&"
(20) typespec, "const^^&"
(21) typedef
(22) structdef
(23) interfacedef
(24) classdef
(25) linkage, {linkage="internal",attributes="#0 nounwind"}
(26) linkage, {linkage="external",attributes="#0 noinline nounwind"}
(27) funcdef
(28) procdef
(29) callablebody
(30) paramdeflist
(31) paramdef
(32) codeblock
(33) free_expression
(34) return_value
(35) delete
(36) conditional_if
(37) conditional_if_else
(38) conditional_while
(39) vardef
(40) vardef_assign
(41) vardef_array_assign
(42) vardef_array
(43) structure
(44) allocate
(45) variable
(46) constant, "constexpr bool"
(47) constant, "constexpr uint"
(48) constant, "constexpr int"
(49) constant, "constexpr float"
(50) null, "constexpr float"
(51) string_constant, "constexpr float"
(52) char_constant, "constexpr float"
(53) operator, "="
(54) assign_operator, "+"
(55) assign_operator, "-"
(56) assign_operator, "*"
(57) assign_operator, "/"
(58) assign_operator, "%"
(59) assign_operator, "&&"
(60) assign_operator, "||"
(61) assign_operator, "&"
(62) assign_operator, "|"
(63) assign_operator, "<<"
(64) assign_operator, ">>"
(65) operator, "||"
(66) operator, "&&"
(67) operator, "|"
(68) operator, "^"
(69) operator, "&"
(70) operator, "=="
(71) operator, "!="
(72) operator, "<="
(73) operator, "<"
(74) operator, ">="
(75) operator, ">"
(76) operator, "+"
(77) operator, "-"
(78) operator, "~"
(79) operator, "!"
(80) operator, "*"
(81) operator, "/"
(82) operator, "%"
(83) operator, "<<"
(84) operator, ">>"
(85) member
(86) operator, "->"
(87) operator, "()"
(88) operator, "[]"
(89) rep_operator, "->"
(90) count

-- Action table:
[1]
	$ => Reduce #0 externlist
	IDENT => Reduce #0 externlist
	"extern" => Shift goto 4
	"function" => Reduce #0 externlist
	"procedure" => Reduce #0 externlist
	"main" => Reduce #0 externlist
	"const" => Reduce #0 externlist
	"typedef" => Reduce #0 externlist
	"struct" => Reduce #0 externlist
	"interface" => Reduce #0 externlist
	"class" => Reduce #0 externlist
	"private" => Reduce #0 externlist
	"public" => Reduce #0 externlist
[2]
	$ => Reduce #0 definitionlist
	IDENT => Shift goto 17
	"function" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	"procedure" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	"main" => Reduce #0 definitionlist
	"const" => Shift goto 18
	"typedef" => Shift goto 19
	"struct" => Shift goto 20
	"interface" => Shift goto 21
	"class" => Shift goto 22
	"private" => Shift goto 23
	"public" => Shift goto 24
[3]
	$ => Reduce #0 externlist
	IDENT => Reduce #0 externlist
	"extern" => Shift goto 4
	"function" => Reduce #0 externlist
	"procedure" => Reduce #0 externlist
	"main" => Reduce #0 externlist
	"const" => Reduce #0 externlist
	"typedef" => Reduce #0 externlist
	"struct" => Reduce #0 externlist
	"interface" => Reduce #0 externlist
	"class" => Reduce #0 externlist
	"private" => Reduce #0 externlist
	"public" => Reduce #0 externlist
[4]
	DQSTRING => Shift goto 26
[5]
	$ => Reduce #0 mainproc
	"main" => Shift goto 28
[6]
	$ => Reduce #1 definition
	IDENT => Reduce #1 definition
	"function" => Reduce #1 definition
	"procedure" => Reduce #1 definition
	"main" => Reduce #1 definition
	'}' => Reduce #1 definition
	"const" => Reduce #1 definition
	"typedef" => Reduce #1 definition
	"struct" => Reduce #1 definition
	"interface" => Reduce #1 definition
	"class" => Reduce #1 definition
	"private" => Reduce #1 definition
	"public" => Reduce #1 definition
[7]
	$ => Reduce #0 definitionlist
	IDENT => Shift goto 17
	"function" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	"procedure" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	"main" => Reduce #0 definitionlist
	'}' => Reduce #0 definitionlist
	"const" => Shift goto 18
	"typedef" => Shift goto 19
	"struct" => Shift goto 20
	"interface" => Shift goto 21
	"class" => Shift goto 22
	"private" => Shift goto 23
	"public" => Shift goto 24
[8]
	IDENT => Reduce #1 typespec call typespec ""
	')' => Reduce #1 typespec call typespec ""
	',' => Reduce #1 typespec call typespec ""
	'&' => Shift goto 30
	'^' => Shift goto 31
	':' => Reduce #1 typespec call typespec ""
[9]
	IDENT => Shift goto 32
[10]
	';' => Shift goto 33
[11]
	';' => Shift goto 34
[12]
	';' => Shift goto 35
[13]
	';' => Shift goto 36
[14]
	"function" => Shift goto 37
	"procedure" => Shift goto 38
[15]
	$ => Reduce #1 definition call definition
	IDENT => Reduce #1 definition call definition
	"function" => Reduce #1 definition call definition
	"procedure" => Reduce #1 definition call definition
	"main" => Reduce #1 definition call definition
	'}' => Reduce #1 definition call definition
	"const" => Reduce #1 definition call definition
	"typedef" => Reduce #1 definition call definition
	"struct" => Reduce #1 definition call definition
	"interface" => Reduce #1 definition call definition
	"class" => Reduce #1 definition call definition
	"private" => Reduce #1 definition call definition
	"public" => Reduce #1 definition call definition
[16]
	';' => Shift goto 39
[17]
	IDENT => Reduce #1 typename
	')' => Reduce #1 typename
	',' => Reduce #1 typename
	"::" => Shift goto 40
	'&' => Reduce #1 typename
	'^' => Reduce #1 typename
	':' => Reduce #1 typename
[18]
	IDENT => Shift goto 17
[19]
	IDENT => Shift goto 17
[20]
	IDENT => Shift goto 43
[21]
	IDENT => Shift goto 44
[22]
	IDENT => Shift goto 45
[23]
	"function" => Reduce #1 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	"procedure" => Reduce #1 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
[24]
	"function" => Reduce #1 linkage call linkage {linkage="external",attributes="#0 noinline nounwind"}
	"procedure" => Reduce #1 linkage call linkage {linkage="external",attributes="#0 noinline nounwind"}
[25]
	$ => Reduce #2 externlist
	IDENT => Reduce #2 externlist
	"function" => Reduce #2 externlist
	"procedure" => Reduce #2 externlist
	"main" => Reduce #2 externlist
	"const" => Reduce #2 externlist
	"typedef" => Reduce #2 externlist
	"struct" => Reduce #2 externlist
	"interface" => Reduce #2 externlist
	"class" => Reduce #2 externlist
	"private" => Reduce #2 externlist
	"public" => Reduce #2 externlist
[26]
	"function" => Shift goto 46
	"procedure" => Shift goto 47
[27]
	$ => Accept
[28]
	'{' => Shift goto 48
[29]
	$ => Reduce #2 definitionlist
	"main" => Reduce #2 definitionlist
	'}' => Reduce #2 definitionlist
[30]
	IDENT => Reduce #2 typespec call typespec "&"
	')' => Reduce #2 typespec call typespec "&"
	',' => Reduce #2 typespec call typespec "&"
	':' => Reduce #2 typespec call typespec "&"
[31]
	IDENT => Reduce #2 typespec call typespec "^"
	')' => Reduce #2 typespec call typespec "^"
	',' => Reduce #2 typespec call typespec "^"
	'&' => Shift goto 49
	'^' => Shift goto 50
	':' => Reduce #2 typespec call typespec "^"
[32]
	';' => Reduce #2 variabledefinition call vardef
	'=' => Shift goto 51
	'[' => Shift goto 52
[33]
	$ => Reduce #2 datadefinition call definition
	IDENT => Reduce #2 datadefinition call definition
	"function" => Reduce #2 datadefinition call definition
	"procedure" => Reduce #2 datadefinition call definition
	"main" => Reduce #2 datadefinition call definition
	'}' => Reduce #2 datadefinition call definition
	"const" => Reduce #2 datadefinition call definition
	"typedef" => Reduce #2 datadefinition call definition
	"struct" => Reduce #2 datadefinition call definition
	"interface" => Reduce #2 datadefinition call definition
	"class" => Reduce #2 datadefinition call definition
	"private" => Reduce #2 datadefinition call definition
	"public" => Reduce #2 datadefinition call definition
[34]
	$ => Reduce #2 datadefinition call definition
	IDENT => Reduce #2 datadefinition call definition
	"function" => Reduce #2 datadefinition call definition
	"procedure" => Reduce #2 datadefinition call definition
	"main" => Reduce #2 datadefinition call definition
	'}' => Reduce #2 datadefinition call definition
	"const" => Reduce #2 datadefinition call definition
	"typedef" => Reduce #2 datadefinition call definition
	"struct" => Reduce #2 datadefinition call definition
	"interface" => Reduce #2 datadefinition call definition
	"class" => Reduce #2 datadefinition call definition
	"private" => Reduce #2 datadefinition call definition
	"public" => Reduce #2 datadefinition call definition
[35]
	$ => Reduce #2 definition call definition
	IDENT => Reduce #2 definition call definition
	"function" => Reduce #2 definition call definition
	"procedure" => Reduce #2 definition call definition
	"main" => Reduce #2 definition call definition
	'}' => Reduce #2 definition call definition
	"const" => Reduce #2 definition call definition
	"typedef" => Reduce #2 definition call definition
	"struct" => Reduce #2 definition call definition
	"interface" => Reduce #2 definition call definition
	"class" => Reduce #2 definition call definition
	"private" => Reduce #2 definition call definition
	"public" => Reduce #2 definition call definition
[36]
	$ => Reduce #2 definition call definition
	IDENT => Reduce #2 definition call definition
	"function" => Reduce #2 definition call definition
	"procedure" => Reduce #2 definition call definition
	"main" => Reduce #2 definition call definition
	'}' => Reduce #2 definition call definition
	"const" => Reduce #2 definition call definition
	"typedef" => Reduce #2 definition call definition
	"struct" => Reduce #2 definition call definition
	"interface" => Reduce #2 definition call definition
	"class" => Reduce #2 definition call definition
	"private" => Reduce #2 definition call definition
	"public" => Reduce #2 definition call definition
[37]
	IDENT => Shift goto 17
	"const" => Shift goto 18
[38]
	IDENT => Shift goto 54
[39]
	$ => Reduce #2 datadefinition call definition
	IDENT => Reduce #2 datadefinition call definition
	"function" => Reduce #2 datadefinition call definition
	"procedure" => Reduce #2 datadefinition call definition
	"main" => Reduce #2 datadefinition call definition
	'}' => Reduce #2 datadefinition call definition
	"const" => Reduce #2 datadefinition call definition
	"typedef" => Reduce #2 datadefinition call definition
	"struct" => Reduce #2 datadefinition call definition
	"interface" => Reduce #2 datadefinition call definition
	"class" => Reduce #2 datadefinition call definition
	"private" => Reduce #2 datadefinition call definition
	"public" => Reduce #2 datadefinition call definition
[40]
	IDENT => Shift goto 17
[41]
	IDENT => Reduce #2 typespec call typespec "const "
	')' => Reduce #2 typespec call typespec "const "
	',' => Reduce #2 typespec call typespec "const "
	'&' => Shift goto 56
	'^' => Shift goto 57
	':' => Reduce #2 typespec call typespec "const "
[42]
	IDENT => Shift goto 58
[43]
	'{' => Shift goto 59
[44]
	'{' => Shift goto 60
[45]
	'{' => Shift goto 61
[46]
	IDENT => Shift goto 17
	"const" => Shift goto 18
[47]
	IDENT => Shift goto 63
[48]
	BOOLEAN => Shift goto 71
	IDENT => Shift goto 72
	DQSTRING => Shift goto 73
	SQSTRING => Shift goto 74
	CARDINAL => Shift goto 75
	INTEGER => Shift goto 76
	FLOAT => Shift goto 77
	"function" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	'(' => Shift goto 78
	"procedure" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	'{' => Shift goto 79
	'}' => Reduce #0 statementlist
	'&' => Shift goto 80
	"typedef" => Shift goto 19
	"private" => Shift goto 23
	"public" => Shift goto 24
	"var" => Shift goto 81
	"return" => Shift goto 82
	"delete" => Shift goto 83
	"if" => Shift goto 84
	"while" => Shift goto 85
	"new" => Shift goto 86
	"null" => Shift goto 87
	'+' => Shift goto 88
	'-' => Shift goto 89
	'~' => Shift goto 90
	'!' => Shift goto 91
	'*' => Shift goto 92
[49]
	IDENT => Reduce #3 typespec call typespec "^&"
	')' => Reduce #3 typespec call typespec "^&"
	',' => Reduce #3 typespec call typespec "^&"
	':' => Reduce #3 typespec call typespec "^&"
[50]
	IDENT => Reduce #3 typespec call typespec "^^"
	')' => Reduce #3 typespec call typespec "^^"
	',' => Reduce #3 typespec call typespec "^^"
	'&' => Shift goto 93
	':' => Reduce #3 typespec call typespec "^^"
[51]
	BOOLEAN => Shift goto 71
	IDENT => Shift goto 72
	DQSTRING => Shift goto 73
	SQSTRING => Shift goto 74
	CARDINAL => Shift goto 75
	INTEGER => Shift goto 76
	FLOAT => Shift goto 77
	'(' => Shift goto 78
	'{' => Shift goto 95
	'&' => Shift goto 80
	"new" => Shift goto 86
	"null" => Shift goto 87
	'+' => Shift goto 88
	'-' => Shift goto 89
	'~' => Shift goto 90
	'!' => Shift goto 91
	'*' => Shift goto 92
[52]
	BOOLEAN => Shift goto 71
	IDENT => Shift goto 72
	DQSTRING => Shift goto 73
	SQSTRING => Shift goto 74
	CARDINAL => Shift goto 75
	INTEGER => Shift goto 76
	FLOAT => Shift goto 77
	'(' => Shift goto 78
	'{' => Shift goto 95
	'&' => Shift goto 80
	"new" => Shift goto 86
	"null" => Shift goto 87
	'+' => Shift goto 88
	'-' => Shift goto 89
	'~' => Shift goto 90
	'!' => Shift goto 91
	'*' => Shift goto 92
[53]
	IDENT => Shift goto 97
[54]
	'(' => Shift goto 99
[55]
	IDENT => Reduce #3 typename
	')' => Reduce #3 typename
	',' => Reduce #3 typename
	'&' => Reduce #3 typename
	'^' => Reduce #3 typename
	':' => Reduce #3 typename
[56]
	IDENT => Reduce #3 typespec call typespec "const&"
	')' => Reduce #3 typespec call typespec "const&"
	',' => Reduce #3 typespec call typespec "const&"
	':' => Reduce #3 typespec call typespec "const&"
[57]
	IDENT => Reduce #3 typespec call typespec "const^"
	')' => Reduce #3 typespec call typespec "const^"
	',' => Reduce #3 typespec call typespec "const^"
	'&' => Shift goto 100
	'^' => Shift goto 101
	':' => Reduce #3 typespec call typespec "const^"
[58]
	';' => Reduce #3 typedefinition call typedef
[59]
	IDENT => Shift goto 17
	'}' => Reduce #0 datadefinitionlist
	"const" => Shift goto 18
	"typedef" => Shift goto 19
	"struct" => Shift goto 20
[60]
	"function" => Shift goto 106
	"procedure" => Shift goto 107
	'}' => Reduce #0 methoddefinitionlist
[61]
	IDENT => Shift goto 17
	"function" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	"procedure" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	'}' => Reduce #0 definitionlist
	"const" => Shift goto 18
	"typedef" => Shift goto 19
	"struct" => Shift goto 20
	"interface" => Shift goto 21
	"class" => Shift goto 22
	"private" => Shift goto 23
	"public" => Shift goto 24
[62]
	IDENT => Shift goto 109
[63]
	'(' => Shift goto 110
[64]
	';' => Shift goto 111
[65]
	$ => Reduce #1 statement call definition
	BOOLEAN => Reduce #1 statement call definition
	IDENT => Reduce #1 statement call definition
	DQSTRING => Reduce #1 statement call definition
	SQSTRING => Reduce #1 statement call definition
	CARDINAL => Reduce #1 statement call definition
	INTEGER => Reduce #1 statement call definition
	FLOAT => Reduce #1 statement call definition
	"function" => Reduce #1 statement call definition
	'(' => Reduce #1 statement call definition
	"procedure" => Reduce #1 statement call definition
	'{' => Reduce #1 statement call definition
	'}' => Reduce #1 statement call definition
	'&' => Reduce #1 statement call definition
	"typedef" => Reduce #1 statement call definition
	"private" => Reduce #1 statement call definition
	"public" => Reduce #1 statement call definition
	"var" => Reduce #1 statement call definition
	"return" => Reduce #1 statement call definition
	"delete" => Reduce #1 statement call definition
	"if" => Reduce #1 statement call definition
	"while" => Reduce #1 statement call definition
	"new" => Reduce #1 statement call definition
	"null" => Reduce #1 statement call definition
	'+' => Reduce #1 statement call definition
	'-' => Reduce #1 statement call definition
	'~' => Reduce #1 statement call definition
	'!' => Reduce #1 statement call definition
	'*' => Reduce #1 statement call definition
[66]
	'}' => Shift goto 112
[67]
	'}' => Reduce #1 codeblock call codeblock
[68]
	BOOLEAN => Shift goto 71
	IDENT => Shift goto 72
	DQSTRING => Shift goto 73
	SQSTRING => Shift goto 74
	CARDINAL => Shift goto 75
	INTEGER => Shift goto 76
	FLOAT => Shift goto 77
	"function" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	'(' => Shift goto 78
	"procedure" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	'{' => Shift goto 79
	'}' => Reduce #0 statementlist
	'&' => Shift goto 80
	"typedef" => Shift goto 19
	"private" => Shift goto 23
	"public" => Shift goto 24
	"var" => Shift goto 81
	"return" => Shift goto 82
	"delete" => Shift goto 83
	"if" => Shift goto 84
	"while" => Shift goto 85
	"new" => Shift goto 86
	"null" => Shift goto 87
	'+' => Shift goto 88
	'-' => Shift goto 89
	'~' => Shift goto 90
	'!' => Shift goto 91
	'*' => Shift goto 92
[69]
	'(' => Shift goto 115
	';' => Shift goto 116
	'&' => Shift goto 117
	'^' => Shift goto 118
	'=' => Shift goto 119
	'[' => Shift goto 120
	"+=" => Shift goto 121
	"-=" => Shift goto 122
	"*=" => Shift goto 123
	"/=" => Shift goto 124
	"%=" => Shift goto 125
	"&&=" => Shift goto 126
	"||=" => Shift goto 127
	"&=" => Shift goto 128
	"|=" => Shift goto 129
	"<<=" => Shift goto 130
	">>=" => Shift goto 131
	"||" => Shift goto 132
	"&&" => Shift goto 133
	'|' => Shift goto 134
	"==" => Shift goto 135
	"!=" => Shift goto 136
	"<=" => Shift goto 137
	'<' => Shift goto 138
	">=" => Shift goto 139
	'>' => Shift goto 140
	'+' => Shift goto 141
	'-' => Shift goto 142
	'*' => Shift goto 143
	'/' => Shift goto 144
	'%' => Shift goto 145
	"<<" => Shift goto 146
	">>" => Shift goto 147
	'.' => Shift goto 148
	"->" => Shift goto 149
[70]
	'(' => Reduce #1 expression
	')' => Reduce #1 expression
	';' => Reduce #1 expression
	',' => Reduce #1 expression
	'}' => Reduce #1 expression
	'&' => Reduce #1 expression
	'^' => Reduce #1 expression
	'=' => Reduce #1 expression
	'[' => Reduce #1 expression
	']' => Reduce #1 expression
	"+=" => Reduce #1 expression
	"-=" => Reduce #1 expression
	"*=" => Reduce #1 expression
	"/=" => Reduce #1 expression
	"%=" => Reduce #1 expression
	"&&=" => Reduce #1 expression
	"||=" => Reduce #1 expression
	"&=" => Reduce #1 expression
	"|=" => Reduce #1 expression
	"<<=" => Reduce #1 expression
	">>=" => Reduce #1 expression
	"||" => Reduce #1 expression
	"&&" => Reduce #1 expression
	'|' => Reduce #1 expression
	"==" => Reduce #1 expression
	"!=" => Reduce #1 expression
	"<=" => Reduce #1 expression
	'<' => Reduce #1 expression
	">=" => Reduce #1 expression
	'>' => Reduce #1 expression
	'+' => Reduce #1 expression
	'-' => Reduce #1 expression
	'*' => Reduce #1 expression
	'/' => Reduce #1 expression
	'%' => Reduce #1 expression
	"<<" => Reduce #1 expression
	">>" => Reduce #1 expression
	'.' => Reduce #1 expression
	"->" => Reduce #1 expression
[71]
	'(' => Reduce #1 expression call constant "constexpr bool"
	')' => Reduce #1 expression call constant "constexpr bool"
	';' => Reduce #1 expression call constant "constexpr bool"
	',' => Reduce #1 expression call constant "constexpr bool"
	'}' => Reduce #1 expression call constant "constexpr bool"
	'&' => Reduce #1 expression call constant "constexpr bool"
	'^' => Reduce #1 expression call constant "constexpr bool"
	'=' => Reduce #1 expression call constant "constexpr bool"
	'[' => Reduce #1 expression call constant "constexpr bool"
	']' => Reduce #1 expression call constant "constexpr bool"
	"+=" => Reduce #1 expression call constant "constexpr bool"
	"-=" => Reduce #1 expression call constant "constexpr bool"
	"*=" => Reduce #1 expression call constant "constexpr bool"
	"/=" => Reduce #1 expression call constant "constexpr bool"
	"%=" => Reduce #1 expression call constant "constexpr bool"
	"&&=" => Reduce #1 expression call constant "constexpr bool"
	"||=" => Reduce #1 expression call constant "constexpr bool"
	"&=" => Reduce #1 expression call constant "constexpr bool"
	"|=" => Reduce #1 expression call constant "constexpr bool"
	"<<=" => Reduce #1 expression call constant "constexpr bool"
	">>=" => Reduce #1 expression call constant "constexpr bool"
	"||" => Reduce #1 expression call constant "constexpr bool"
	"&&" => Reduce #1 expression call constant "constexpr bool"
	'|' => Reduce #1 expression call constant "constexpr bool"
	"==" => Reduce #1 expression call constant "constexpr bool"
	"!=" => Reduce #1 expression call constant "constexpr bool"
	"<=" => Reduce #1 expression call constant "constexpr bool"
	'<' => Reduce #1 expression call constant "constexpr bool"
	">=" => Reduce #1 expression call constant "constexpr bool"
	'>' => Reduce #1 expression call constant "constexpr bool"
	'+' => Reduce #1 expression call constant "constexpr bool"
	'-' => Reduce #1 expression call constant "constexpr bool"
	'*' => Reduce #1 expression call constant "constexpr bool"
	'/' => Reduce #1 expression call constant "constexpr bool"
	'%' => Reduce #1 expression call constant "constexpr bool"
	"<<" => Reduce #1 expression call constant "constexpr bool"
	">>" => Reduce #1 expression call constant "constexpr bool"
	'.' => Reduce #1 expression call constant "constexpr bool"
	"->" => Reduce #1 expression call constant "constexpr bool"
[72]
	'(' => Reduce #1 expression call variable
	')' => Reduce #1 expression call variable
	';' => Reduce #1 expression call variable
	',' => Reduce #1 expression call variable
	'}' => Reduce #1 expression call variable
	'&' => Reduce #1 expression call variable
	'^' => Reduce #1 expression call variable
	'=' => Reduce #1 expression call variable
	'[' => Reduce #1 expression call variable
	']' => Reduce #1 expression call variable
	"+=" => Reduce #1 expression call variable
	"-=" => Reduce #1 expression call variable
	"*=" => Reduce #1 expression call variable
	"/=" => Reduce #1 expression call variable
	"%=" => Reduce #1 expression call variable
	"&&=" => Reduce #1 expression call variable
	"||=" => Reduce #1 expression call variable
	"&=" => Reduce #1 expression call variable
	"|=" => Reduce #1 expression call variable
	"<<=" => Reduce #1 expression call variable
	">>=" => Reduce #1 expression call variable
	"||" => Reduce #1 expression call variable
	"&&" => Reduce #1 expression call variable
	'|' => Reduce #1 expression call variable
	"==" => Reduce #1 expression call variable
	"!=" => Reduce #1 expression call variable
	"<=" => Reduce #1 expression call variable
	'<' => Reduce #1 expression call variable
	">=" => Reduce #1 expression call variable
	'>' => Reduce #1 expression call variable
	'+' => Reduce #1 expression call variable
	'-' => Reduce #1 expression call variable
	'*' => Reduce #1 expression call variable
	'/' => Reduce #1 expression call variable
	'%' => Reduce #1 expression call variable
	"<<" => Reduce #1 expression call variable
	">>" => Reduce #1 expression call variable
	'.' => Reduce #1 expression call variable
	"->" => Reduce #1 expression call variable
[73]
	'(' => Reduce #1 expression call string_constant "constexpr float"
	')' => Reduce #1 expression call string_constant "constexpr float"
	';' => Reduce #1 expression call string_constant "constexpr float"
	',' => Reduce #1 expression call string_constant "constexpr float"
	'}' => Reduce #1 expression call string_constant "constexpr float"
	'&' => Reduce #1 expression call string_constant "constexpr float"
	'^' => Reduce #1 expression call string_constant "constexpr float"
	'=' => Reduce #1 expression call string_constant "constexpr float"
	'[' => Reduce #1 expression call string_constant "constexpr float"
	']' => Reduce #1 expression call string_constant "constexpr float"
	"+=" => Reduce #1 expression call string_constant "constexpr float"
	"-=" => Reduce #1 expression call string_constant "constexpr float"
	"*=" => Reduce #1 expression call string_constant "constexpr float"
	"/=" => Reduce #1 expression call string_constant "constexpr float"
	"%=" => Reduce #1 expression call string_constant "constexpr float"
	"&&=" => Reduce #1 expression call string_constant "constexpr float"
	"||=" => Reduce #1 expression call string_constant "constexpr float"
	"&=" => Reduce #1 expression call string_constant "constexpr float"
	"|=" => Reduce #1 expression call string_constant "constexpr float"
	"<<=" => Reduce #1 expression call string_constant "constexpr float"
	">>=" => Reduce #1 expression call string_constant "constexpr float"
	"||" => Reduce #1 expression call string_constant "constexpr float"
	"&&" => Reduce #1 expression call string_constant "constexpr float"
	'|' => Reduce #1 expression call string_constant "constexpr float"
	"==" => Reduce #1 expression call string_constant "constexpr float"
	"!=" => Reduce #1 expression call string_constant "constexpr float"
	"<=" => Reduce #1 expression call string_constant "constexpr float"
	'<' => Reduce #1 expression call string_constant "constexpr float"
	">=" => Reduce #1 expression call string_constant "constexpr float"
	'>' => Reduce #1 expression call string_constant "constexpr float"
	'+' => Reduce #1 expression call string_constant "constexpr float"
	'-' => Reduce #1 expression call string_constant "constexpr float"
	'*' => Reduce #1 expression call string_constant "constexpr float"
	'/' => Reduce #1 expression call string_constant "constexpr float"
	'%' => Reduce #1 expression call string_constant "constexpr float"
	"<<" => Reduce #1 expression call string_constant "constexpr float"
	">>" => Reduce #1 expression call string_constant "constexpr float"
	'.' => Reduce #1 expression call string_constant "constexpr float"
	"->" => Reduce #1 expression call string_constant "constexpr float"
[74]
	'(' => Reduce #1 expression call char_constant "constexpr float"
	')' => Reduce #1 expression call char_constant "constexpr float"
	';' => Reduce #1 expression call char_constant "constexpr float"
	',' => Reduce #1 expression call char_constant "constexpr float"
	'}' => Reduce #1 expression call char_constant "constexpr float"
	'&' => Reduce #1 expression call char_constant "constexpr float"
	'^' => Reduce #1 expression call char_constant "constexpr float"
	'=' => Reduce #1 expression call char_constant "constexpr float"
	'[' => Reduce #1 expression call char_constant "constexpr float"
	']' => Reduce #1 expression call char_constant "constexpr float"
	"+=" => Reduce #1 expression call char_constant "constexpr float"
	"-=" => Reduce #1 expression call char_constant "constexpr float"
	"*=" => Reduce #1 expression call char_constant "constexpr float"
	"/=" => Reduce #1 expression call char_constant "constexpr float"
	"%=" => Reduce #1 expression call char_constant "constexpr float"
	"&&=" => Reduce #1 expression call char_constant "constexpr float"
	"||=" => Reduce #1 expression call char_constant "constexpr float"
	"&=" => Reduce #1 expression call char_constant "constexpr float"
	"|=" => Reduce #1 expression call char_constant "constexpr float"
	"<<=" => Reduce #1 expression call char_constant "constexpr float"
	">>=" => Reduce #1 expression call char_constant "constexpr float"
	"||" => Reduce #1 expression call char_constant "constexpr float"
	"&&" => Reduce #1 expression call char_constant "constexpr float"
	'|' => Reduce #1 expression call char_constant "constexpr float"
	"==" => Reduce #1 expression call char_constant "constexpr float"
	"!=" => Reduce #1 expression call char_constant "constexpr float"
	"<=" => Reduce #1 expression call char_constant "constexpr float"
	'<' => Reduce #1 expression call char_constant "constexpr float"
	">=" => Reduce #1 expression call char_constant "constexpr float"
	'>' => Reduce #1 expression call char_constant "constexpr float"
	'+' => Reduce #1 expression call char_constant "constexpr float"
	'-' => Reduce #1 expression call char_constant "constexpr float"
	'*' => Reduce #1 expression call char_constant "constexpr float"
	'/' => Reduce #1 expression call char_constant "constexpr float"
	'%' => Reduce #1 expression call char_constant "constexpr float"
	"<<" => Reduce #1 expression call char_constant "constexpr float"
	">>" => Reduce #1 expression call char_constant "constexpr float"
	'.' => Reduce #1 expression call char_constant "constexpr float"
	"->" => Reduce #1 expression call char_constant "constexpr float"
[75]
	'(' => Reduce #1 expression call constant "constexpr uint"
	')' => Reduce #1 expression call constant "constexpr uint"
	';' => Reduce #1 expression call constant "constexpr uint"
	',' => Reduce #1 expression call constant "constexpr uint"
	'}' => Reduce #1 expression call constant "constexpr uint"
	'&' => Reduce #1 expression call constant "constexpr uint"
	'^' => Reduce #1 expression call constant "constexpr uint"
	'=' => Reduce #1 expression call constant "constexpr uint"
	'[' => Reduce #1 expression call constant "constexpr uint"
	']' => Reduce #1 expression call constant "constexpr uint"
	"+=" => Reduce #1 expression call constant "constexpr uint"
	"-=" => Reduce #1 expression call constant "constexpr uint"
	"*=" => Reduce #1 expression call constant "constexpr uint"
	"/=" => Reduce #1 expression call constant "constexpr uint"
	"%=" => Reduce #1 expression call constant "constexpr uint"
	"&&=" => Reduce #1 expression call constant "constexpr uint"
	"||=" => Reduce #1 expression call constant "constexpr uint"
	"&=" => Reduce #1 expression call constant "constexpr uint"
	"|=" => Reduce #1 expression call constant "constexpr uint"
	"<<=" => Reduce #1 expression call constant "constexpr uint"
	">>=" => Reduce #1 expression call constant "constexpr uint"
	"||" => Reduce #1 expression call constant "constexpr uint"
	"&&" => Reduce #1 expression call constant "constexpr uint"
	'|' => Reduce #1 expression call constant "constexpr uint"
	"==" => Reduce #1 expression call constant "constexpr uint"
	"!=" => Reduce #1 expression call constant "constexpr uint"
	"<=" => Reduce #1 expression call constant "constexpr uint"
	'<' => Reduce #1 expression call constant "constexpr uint"
	">=" => Reduce #1 expression call constant "constexpr uint"
	'>' => Reduce #1 expression call constant "constexpr uint"
	'+' => Reduce #1 expression call constant "constexpr uint"
	'-' => Reduce #1 expression call constant "constexpr uint"
	'*' => Reduce #1 expression call constant "constexpr uint"
	'/' => Reduce #1 expression call constant "constexpr uint"
	'%' => Reduce #1 expression call constant "constexpr uint"
	"<<" => Reduce #1 expression call constant "constexpr uint"
	">>" => Reduce #1 expression call constant "constexpr uint"
	'.' => Reduce #1 expression call constant "constexpr uint"
	"->" => Reduce #1 expression call constant "constexpr uint"
[76]
	'(' => Reduce #1 expression call constant "constexpr int"
	')' => Reduce #1 expression call constant "constexpr int"
	';' => Reduce #1 expression call constant "constexpr int"
	',' => Reduce #1 expression call constant "constexpr int"
	'}' => Reduce #1 expression call constant "constexpr int"
	'&' => Reduce #1 expression call constant "constexpr int"
	'^' => Reduce #1 expression call constant "constexpr int"
	'=' => Reduce #1 expression call constant "constexpr int"
	'[' => Reduce #1 expression call constant "constexpr int"
	']' => Reduce #1 expression call constant "constexpr int"
	"+=" => Reduce #1 expression call constant "constexpr int"
	"-=" => Reduce #1 expression call constant "constexpr int"
	"*=" => Reduce #1 expression call constant "constexpr int"
	"/=" => Reduce #1 expression call constant "constexpr int"
	"%=" => Reduce #1 expression call constant "constexpr int"
	"&&=" => Reduce #1 expression call constant "constexpr int"
	"||=" => Reduce #1 expression call constant "constexpr int"
	"&=" => Reduce #1 expression call constant "constexpr int"
	"|=" => Reduce #1 expression call constant "constexpr int"
	"<<=" => Reduce #1 expression call constant "constexpr int"
	">>=" => Reduce #1 expression call constant "constexpr int"
	"||" => Reduce #1 expression call constant "constexpr int"
	"&&" => Reduce #1 expression call constant "constexpr int"
	'|' => Reduce #1 expression call constant "constexpr int"
	"==" => Reduce #1 expression call constant "constexpr int"
	"!=" => Reduce #1 expression call constant "constexpr int"
	"<=" => Reduce #1 expression call constant "constexpr int"
	'<' => Reduce #1 expression call constant "constexpr int"
	">=" => Reduce #1 expression call constant "constexpr int"
	'>' => Reduce #1 expression call constant "constexpr int"
	'+' => Reduce #1 expression call constant "constexpr int"
	'-' => Reduce #1 expression call constant "constexpr int"
	'*' => Reduce #1 expression call constant "constexpr int"
	'/' => Reduce #1 expression call constant "constexpr int"
	'%' => Reduce #1 expression call constant "constexpr int"
	"<<" => Reduce #1 expression call constant "constexpr int"
	">>" => Reduce #1 expression call constant "constexpr int"
	'.' => Reduce #1 expression call constant "constexpr int"
	"->" => Reduce #1 expression call constant "constexpr int"
[77]
	'(' => Reduce #1 expression call constant "constexpr float"
	')' => Reduce #1 expression call constant "constexpr float"
	';' => Reduce #1 expression call constant "constexpr float"
	',' => Reduce #1 expression call constant "constexpr float"
	'}' => Reduce #1 expression call constant "constexpr float"
	'&' => Reduce #1 expression call constant "constexpr float"
	'^' => Reduce #1 expression call constant "constexpr float"
	'=' => Reduce #1 expression call constant "constexpr float"
	'[' => Reduce #1 expression call constant "constexpr float"
	']' => Reduce #1 expression call constant "constexpr float"
	"+=" => Reduce #1 expression call constant "constexpr float"
	"-=" => Reduce #1 expression call constant "constexpr float"
	"*=" => Reduce #1 expression call constant "constexpr float"
	"/=" => Reduce #1 expression call constant "constexpr float"
	"%=" => Reduce #1 expression call constant "constexpr float"
	"&&=" => Reduce #1 expression call constant "constexpr float"
	"||=" => Reduce #1 expression call constant "constexpr float"
	"&=" => Reduce #1 expression call constant "constexpr float"
	"|=" => Reduce #1 expression call constant "constexpr float"
	"<<=" => Reduce #1 expression call constant "constexpr float"
	">>=" => Reduce #1 expression call constant "constexpr float"
	"||" => Reduce #1 expression call constant "constexpr float"
	"&&" => Reduce #1 expression call constant "constexpr float"
	'|' => Reduce #1 expression call constant "constexpr float"
	"==" => Reduce #1 expression call constant "constexpr float"
	"!=" => Reduce #1 expression call constant "constexpr float"
	"<=" => Reduce #1 expression call constant "constexpr float"
	'<' => Reduce #1 expression call constant "constexpr float"
	">=" => Reduce #1 expression call constant "constexpr float"
	'>' => Reduce #1 expression call constant "constexpr float"
	'+' => Reduce #1 expression call constant "constexpr float"
	'-' => Reduce #1 expression call constant "constexpr float"
	'*' => Reduce #1 expression call constant "constexpr float"
	'/' => Reduce #1 expression call constant "constexpr float"
	'%' => Reduce #1 expression call constant "constexpr float"
	"<<" => Reduce #1 expression call constant "constexpr float"
	">>" => Reduce #1 expression call constant "constexpr float"
	'.' => Reduce #1 expression call constant "constexpr float"
	"->" => Reduce #1 expression call constant "constexpr float"
[78]
	BOOLEAN => Shift goto 71
	IDENT => Shift goto 72
	DQSTRING => Shift goto 73
	SQSTRING => Shift goto 74
	CARDINAL => Shift goto 75
	INTEGER => Shift goto 76
	FLOAT => Shift goto 77
	'(' => Shift goto 78
	'{' => Shift goto 95
	'&' => Shift goto 80
	"new" => Shift goto 86
	"null" => Shift goto 87
	'+' => Shift goto 88
	'-' => Shift goto 89
	'~' => Shift goto 90
	'!' => Shift goto 91
	'*' => Shift goto 92
[79]
	BOOLEAN => Shift goto 71
	IDENT => Shift goto 72
	DQSTRING => Shift goto 73
	SQSTRING => Shift goto 74
	CARDINAL => Shift goto 75
	INTEGER => Shift goto 76
	FLOAT => Shift goto 77
	"function" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	'(' => Shift goto 78
	"procedure" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	'{' => Shift goto 79
	'}' => Shift goto 154
	'&' => Shift goto 80
	"typedef" => Shift goto 19
	"private" => Shift goto 23
	"public" => Shift goto 24
	"var" => Shift goto 81
	"return" => Shift goto 82
	"delete" => Shift goto 83
	"if" => Shift goto 84
	"while" => Shift goto 85
	"new" => Shift goto 86
	"null" => Shift goto 87
	'+' => Shift goto 88
	'-' => Shift goto 89
	'~' => Shift goto 90
	'!' => Shift goto 91
	'*' => Shift goto 92
[80]
	BOOLEAN => Shift goto 71
	IDENT => Shift goto 72
	DQSTRING => Shift goto 73
	SQSTRING => Shift goto 74
	CARDINAL => Shift goto 75
	INTEGER => Shift goto 76
	FLOAT => Shift goto 77
	'(' => Shift goto 78
	'{' => Shift goto 95
	'&' => Shift goto 80
	"new" => Shift goto 86
	"null" => Shift goto 87
	'+' => Shift goto 88
	'-' => Shift goto 89
	'~' => Shift goto 90
	'!' => Shift goto 91
	'*' => Shift goto 92
[81]
	IDENT => Shift goto 17
	"const" => Shift goto 18
[82]
	BOOLEAN => Shift goto 71
	IDENT => Shift goto 72
	DQSTRING => Shift goto 73
	SQSTRING => Shift goto 74
	CARDINAL => Shift goto 75
	INTEGER => Shift goto 76
	FLOAT => Shift goto 77
	'(' => Shift goto 78
	'{' => Shift goto 95
	'&' => Shift goto 80
	"new" => Shift goto 86
	"null" => Shift goto 87
	'+' => Shift goto 88
	'-' => Shift goto 89
	'~' => Shift goto 90
	'!' => Shift goto 91
	'*' => Shift goto 92
[83]
	BOOLEAN => Shift goto 71
	IDENT => Shift goto 72
	DQSTRING => Shift goto 73
	SQSTRING => Shift goto 74
	CARDINAL => Shift goto 75
	INTEGER => Shift goto 76
	FLOAT => Shift goto 77
	'(' => Shift goto 78
	'{' => Shift goto 95
	'&' => Shift goto 80
	"new" => Shift goto 86
	"null" => Shift goto 87
	'+' => Shift goto 88
	'-' => Shift goto 89
	'~' => Shift goto 90
	'!' => Shift goto 91
	'*' => Shift goto 92
[84]
	'(' => Shift goto 159
[85]
	'(' => Shift goto 160
[86]
	IDENT => Shift goto 17
	"const" => Shift goto 18
[87]
	'(' => Reduce #1 expression call null "constexpr float"
	')' => Reduce #1 expression call null "constexpr float"
	';' => Reduce #1 expression call null "constexpr float"
	',' => Reduce #1 expression call null "constexpr float"
	'}' => Reduce #1 expression call null "constexpr float"
	'&' => Reduce #1 expression call null "constexpr float"
	'^' => Reduce #1 expression call null "constexpr float"
	'=' => Reduce #1 expression call null "constexpr float"
	'[' => Reduce #1 expression call null "constexpr float"
	']' => Reduce #1 expression call null "constexpr float"
	"+=" => Reduce #1 expression call null "constexpr float"
	"-=" => Reduce #1 expression call null "constexpr float"
	"*=" => Reduce #1 expression call null "constexpr float"
	"/=" => Reduce #1 expression call null "constexpr float"
	"%=" => Reduce #1 expression call null "constexpr float"
	"&&=" => Reduce #1 expression call null "constexpr float"
	"||=" => Reduce #1 expression call null "constexpr float"
	"&=" => Reduce #1 expression call null "constexpr float"
	"|=" => Reduce #1 expression call null "constexpr float"
	"<<=" => Reduce #1 expression call null "constexpr float"
	">>=" => Reduce #1 expression call null "constexpr float"
	"||" => Reduce #1 expression call null "constexpr float"
	"&&" => Reduce #1 expression call null "constexpr float"
	'|' => Reduce #1 expression call null "constexpr float"
	"==" => Reduce #1 expression call null "constexpr float"
	"!=" => Reduce #1 expression call null "constexpr float"
	"<=" => Reduce #1 expression call null "constexpr float"
	'<' => Reduce #1 expression call null "constexpr float"
	">=" => Reduce #1 expression call null "constexpr float"
	'>' => Reduce #1 expression call null "constexpr float"
	'+' => Reduce #1 expression call null "constexpr float"
	'-' => Reduce #1 expression call null "constexpr float"
	'*' => Reduce #1 expression call null "constexpr float"
	'/' => Reduce #1 expression call null "constexpr float"
	'%' => Reduce #1 expression call null "constexpr float"
	"<<" => Reduce #1 expression call null "constexpr float"
	">>" => Reduce #1 expression call null "constexpr float"
	'.' => Reduce #1 expression call null "constexpr float"
	"->" => Reduce #1 expression call null "constexpr float"
[88]
	BOOLEAN => Shift goto 71
	IDENT => Shift goto 72
	DQSTRING => Shift goto 73
	SQSTRING => Shift goto 74
	CARDINAL => Shift goto 75
	INTEGER => Shift goto 76
	FLOAT => Shift goto 77
	'(' => Shift goto 78
	'{' => Shift goto 95
	'&' => Shift goto 80
	"new" => Shift goto 86
	"null" => Shift goto 87
	'+' => Shift goto 88
	'-' => Shift goto 89
	'~' => Shift goto 90
	'!' => Shift goto 91
	'*' => Shift goto 92
[89]
	BOOLEAN => Shift goto 71
	IDENT => Shift goto 72
	DQSTRING => Shift goto 73
	SQSTRING => Shift goto 74
	CARDINAL => Shift goto 75
	INTEGER => Shift goto 76
	FLOAT => Shift goto 77
	'(' => Shift goto 78
	'{' => Shift goto 95
	'&' => Shift goto 80
	"new" => Shift goto 86
	"null" => Shift goto 87
	'+' => Shift goto 88
	'-' => Shift goto 89
	'~' => Shift goto 90
	'!' => Shift goto 91
	'*' => Shift goto 92
[90]
	BOOLEAN => Shift goto 71
	IDENT => Shift goto 72
	DQSTRING => Shift goto 73
	SQSTRING => Shift goto 74
	CARDINAL => Shift goto 75
	INTEGER => Shift goto 76
	FLOAT => Shift goto 77
	'(' => Shift goto 78
	'{' => Shift goto 95
	'&' => Shift goto 80
	"new" => Shift goto 86
	"null" => Shift goto 87
	'+' => Shift goto 88
	'-' => Shift goto 89
	'~' => Shift goto 90
	'!' => Shift goto 91
	'*' => Shift goto 92
[91]
	BOOLEAN => Shift goto 71
	IDENT => Shift goto 72
	DQSTRING => Shift goto 73
	SQSTRING => Shift goto 74
	CARDINAL => Shift goto 75
	INTEGER => Shift goto 76
	FLOAT => Shift goto 77
	'(' => Shift goto 78
	'{' => Shift goto 95
	'&' => Shift goto 80
	"new" => Shift goto 86
	"null" => Shift goto 87
	'+' => Shift goto 88
	'-' => Shift goto 89
	'~' => Shift goto 90
	'!' => Shift goto 91
	'*' => Shift goto 92
[92]
	BOOLEAN => Shift goto 71
	IDENT => Shift goto 72
	DQSTRING => Shift goto 73
	SQSTRING => Shift goto 74
	CARDINAL => Shift goto 75
	INTEGER => Shift goto 76
	FLOAT => Shift goto 77
	'(' => Shift goto 78
	'{' => Shift goto 95
	'&' => Shift goto 80
	"new" => Shift goto 86
	"null" => Shift goto 87
	'+' => Shift goto 88
	'-' => Shift goto 89
	'~' => Shift goto 90
	'!' => Shift goto 91
	'*' => Shift goto 92
[93]
	IDENT => Reduce #4 typespec call typespec "^^&"
	')' => Reduce #4 typespec call typespec "^^&"
	',' => Reduce #4 typespec call typespec "^^&"
	':' => Reduce #4 typespec call typespec "^^&"
[94]
	'(' => Shift goto 115
	';' => Reduce #4 variabledefinition call vardef_assign
	'&' => Shift goto 117
	'^' => Shift goto 118
	'=' => Shift goto 119
	'[' => Shift goto 120
	"+=" => Shift goto 121
	"-=" => Shift goto 122
	"*=" => Shift goto 123
	"/=" => Shift goto 124
	"%=" => Shift goto 125
	"&&=" => Shift goto 126
	"||=" => Shift goto 127
	"&=" => Shift goto 128
	"|=" => Shift goto 129
	"<<=" => Shift goto 130
	">>=" => Shift goto 131
	"||" => Shift goto 132
	"&&" => Shift goto 133
	'|' => Shift goto 134
	"==" => Shift goto 135
	"!=" => Shift goto 136
	"<=" => Shift goto 137
	'<' => Shift goto 138
	">=" => Shift goto 139
	'>' => Shift goto 140
	'+' => Shift goto 141
	'-' => Shift goto 142
	'*' => Shift goto 143
	'/' => Shift goto 144
	'%' => Shift goto 145
	"<<" => Shift goto 146
	">>" => Shift goto 147
	'.' => Shift goto 148
	"->" => Shift goto 149
[95]
	BOOLEAN => Shift goto 71
	IDENT => Shift goto 72
	DQSTRING => Shift goto 73
	SQSTRING => Shift goto 74
	CARDINAL => Shift goto 75
	INTEGER => Shift goto 76
	FLOAT => Shift goto 77
	'(' => Shift goto 78
	'{' => Shift goto 95
	'}' => Shift goto 154
	'&' => Shift goto 80
	"new" => Shift goto 86
	"null" => Shift goto 87
	'+' => Shift goto 88
	'-' => Shift goto 89
	'~' => Shift goto 90
	'!' => Shift goto 91
	'*' => Shift goto 92
[96]
	'(' => Shift goto 115
	'&' => Shift goto 117
	'^' => Shift goto 118
	'=' => Shift goto 119
	'[' => Shift goto 120
	']' => Shift goto 168
	"+=" => Shift goto 121
	"-=" => Shift goto 122
	"*=" => Shift goto 123
	"/=" => Shift goto 124
	"%=" => Shift goto 125
	"&&=" => Shift goto 126
	"||=" => Shift goto 127
	"&=" => Shift goto 128
	"|=" => Shift goto 129
	"<<=" => Shift goto 130
	">>=" => Shift goto 131
	"||" => Shift goto 132
	"&&" => Shift goto 133
	'|' => Shift goto 134
	"==" => Shift goto 135
	"!=" => Shift goto 136
	"<=" => Shift goto 137
	'<' => Shift goto 138
	">=" => Shift goto 139
	'>' => Shift goto 140
	'+' => Shift goto 141
	'-' => Shift goto 142
	'*' => Shift goto 143
	'/' => Shift goto 144
	'%' => Shift goto 145
	"<<" => Shift goto 146
	">>" => Shift goto 147
	'.' => Shift goto 148
	"->" => Shift goto 149
[97]
	'(' => Shift goto 99
[98]
	$ => Reduce #4 functiondefinition call procdef
	BOOLEAN => Reduce #4 functiondefinition call procdef
	IDENT => Reduce #4 functiondefinition call procdef
	DQSTRING => Reduce #4 functiondefinition call procdef
	SQSTRING => Reduce #4 functiondefinition call procdef
	CARDINAL => Reduce #4 functiondefinition call procdef
	INTEGER => Reduce #4 functiondefinition call procdef
	FLOAT => Reduce #4 functiondefinition call procdef
	"function" => Reduce #4 functiondefinition call procdef
	'(' => Reduce #4 functiondefinition call procdef
	"procedure" => Reduce #4 functiondefinition call procdef
	"main" => Reduce #4 functiondefinition call procdef
	'{' => Reduce #4 functiondefinition call procdef
	'}' => Reduce #4 functiondefinition call procdef
	"const" => Reduce #4 functiondefinition call procdef
	'&' => Reduce #4 functiondefinition call procdef
	"typedef" => Reduce #4 functiondefinition call procdef
	"struct" => Reduce #4 functiondefinition call procdef
	"interface" => Reduce #4 functiondefinition call procdef
	"class" => Reduce #4 functiondefinition call procdef
	"private" => Reduce #4 functiondefinition call procdef
	"public" => Reduce #4 functiondefinition call procdef
	"var" => Reduce #4 functiondefinition call procdef
	"return" => Reduce #4 functiondefinition call procdef
	"delete" => Reduce #4 functiondefinition call procdef
	"if" => Reduce #4 functiondefinition call procdef
	"while" => Reduce #4 functiondefinition call procdef
	"new" => Reduce #4 functiondefinition call procdef
	"null" => Reduce #4 functiondefinition call procdef
	'+' => Reduce #4 functiondefinition call procdef
	'-' => Reduce #4 functiondefinition call procdef
	'~' => Reduce #4 functiondefinition call procdef
	'!' => Reduce #4 functiondefinition call procdef
	'*' => Reduce #4 functiondefinition call procdef
[99]
	IDENT => Shift goto 17
	')' => Reduce #0 parameterlist
	"const" => Shift goto 18
[100]
	IDENT => Reduce #4 typespec call typespec "const^&"
	')' => Reduce #4 typespec call typespec "const^&"
	',' => Reduce #4 typespec call typespec "const^&"
	':' => Reduce #4 typespec call typespec "const^&"
[101]
	IDENT => Reduce #4 typespec call typespec "const^^"
	')' => Reduce #4 typespec call typespec "const^^"
	',' => Reduce #4 typespec call typespec "const^^"
	'&' => Shift goto 174
	':' => Reduce #4 typespec call typespec "const^^"
[102]
	'}' => Shift goto 175
[103]
	IDENT => Shift goto 17
	'}' => Reduce #0 datadefinitionlist
	"const" => Shift goto 18
	"typedef" => Shift goto 19
	"struct" => Shift goto 20
[104]
	'}' => Shift goto 177
[105]
	"function" => Shift goto 106
	"procedure" => Shift goto 107
	'}' => Reduce #0 methoddefinitionlist
[106]
	IDENT => Shift goto 17
	"const" => Shift goto 18
[107]
	IDENT => Shift goto 180
[108]
	'}' => Shift goto 181
[109]
	'(' => Shift goto 182
[110]
	IDENT => Shift goto 17
	')' => Reduce #0 externparameterlist
	"const" => Shift goto 18
[111]
	$ => Reduce #2 statement call definition
	BOOLEAN => Reduce #2 statement call definition
	IDENT => Reduce #2 statement call definition
	DQSTRING => Reduce #2 statement call definition
	SQSTRING => Reduce #2 statement call definition
	CARDINAL => Reduce #2 statement call definition
	INTEGER => Reduce #2 statement call definition
	FLOAT => Reduce #2 statement call definition
	"function" => Reduce #2 statement call definition
	'(' => Reduce #2 statement call definition
	"procedure" => Reduce #2 statement call definition
	'{' => Reduce #2 statement call definition
	'}' => Reduce #2 statement call definition
	'&' => Reduce #2 statement call definition
	"typedef" => Reduce #2 statement call definition
	"private" => Reduce #2 statement call definition
	"public" => Reduce #2 statement call definition
	"var" => Reduce #2 statement call definition
	"return" => Reduce #2 statement call definition
	"delete" => Reduce #2 statement call definition
	"if" => Reduce #2 statement call definition
	"while" => Reduce #2 statement call definition
	"new" => Reduce #2 statement call definition
	"null" => Reduce #2 statement call definition
	'+' => Reduce #2 statement call definition
	'-' => Reduce #2 statement call definition
	'~' => Reduce #2 statement call definition
	'!' => Reduce #2 statement call definition
	'*' => Reduce #2 statement call definition
[112]
	$ => Reduce #4 mainproc call main_procdef
[113]
	'}' => Reduce #2 statementlist
[114]
	IDENT => Shift goto 186
[115]
	BOOLEAN => Shift goto 71
	IDENT => Shift goto 72
	DQSTRING => Shift goto 73
	SQSTRING => Shift goto 74
	CARDINAL => Shift goto 75
	INTEGER => Shift goto 76
	FLOAT => Shift goto 77
	'(' => Shift goto 78
	')' => Shift goto 188
	'{' => Shift goto 95
	'&' => Shift goto 80
	"new" => Shift goto 86
	"null" => Shift goto 87
	'+' => Shift goto 88
	'-' => Shift goto 89
	'~' => Shift goto 90
	'!' => Shift goto 91
	'*' => Shift goto 92
[116]
	$ => Reduce #2 statement call free_expression
	BOOLEAN => Reduce #2 statement call free_expression
	IDENT => Reduce #2 statement call free_expression
	DQSTRING => Reduce #2 statement call free_expression
	SQSTRING => Reduce #2 statement call free_expression
	CARDINAL => Reduce #2 statement call free_expression
	INTEGER => Reduce #2 statement call free_expression
	FLOAT => Reduce #2 statement call free_expression
	"function" => Reduce #2 statement call free_expression
	'(' => Reduce #2 statement call free_expression
	"procedure" => Reduce #2 statement call free_expression
	'{' => Reduce #2 statement call free_expression
	'}' => Reduce #2 statement call free_expression
	'&' => Reduce #2 statement call free_expression
	"typedef" => Reduce #2 statement call free_expression
	"private" => Reduce #2 statement call free_expression
	"public" => Reduce #2 statement call free_expression
	"var" => Reduce #2 statement call free_expression
	"return" => Reduce #2 statement call free_expression
	"delete" => Reduce #2 statement call free_expression
	"if" => Reduce #2 statement call free_expression
	"while" => Reduce #2 statement call free_expression
	"new" => Reduce #2 statement call free_expression
	"null" => Reduce #2 statement call free_expression
	'+' => Reduce #2 statement call free_expression
	'-' => Reduce #2 statement call free_expression
	'~' => Reduce #2 statement call free_expression
	'!' => Reduce #2 statement call free_expression
	'*' => Reduce #2 statement call free_expression
[117]
	BOOLEAN => Shift goto 71
	IDENT => Shift goto 72
	DQSTRING => Shift goto 73
	SQSTRING => Shift goto 74
	CARDINAL => Shift goto 75
	INTEGER => Shift goto 76
	FLOAT => Shift goto 77
	'(' => Shift goto 78
	'{' => Shift goto 95
	'&' => Shift goto 80
	"new" => Shift goto 86
	"null" => Shift goto 87
	'+' => Shift goto 88
	'-' => Shift goto 89
	'~' => Shift goto 90
	'!' => Shift goto 91
	'*' => Shift goto 92
[118]
	BOOLEAN => Shift goto 71
	IDENT => Shift goto 72
	DQSTRING => Shift goto 73
	SQSTRING => Shift goto 74
	CARDINAL => Shift goto 75
	INTEGER => Shift goto 76
	FLOAT => Shift goto 77
	'(' => Shift goto 78
	'{' => Shift goto 95
	'&' => Shift goto 80
	"new" => Shift goto 86
	"null" => Shift goto 87
	'+' => Shift goto 88
	'-' => Shift goto 89
	'~' => Shift goto 90
	'!' => Shift goto 91
	'*' => Shift goto 92
[119]
	BOOLEAN => Shift goto 71
	IDENT => Shift goto 72
	DQSTRING => Shift goto 73
	SQSTRING => Shift goto 74
	CARDINAL => Shift goto 75
	INTEGER => Shift goto 76
	FLOAT => Shift goto 77
	'(' => Shift goto 78
	'{' => Shift goto 95
	'&' => Shift goto 80
	"new" => Shift goto 86
	"null" => Shift goto 87
	'+' => Shift goto 88
	'-' => Shift goto 89
	'~' => Shift goto 90
	'!' => Shift goto 91
	'*' => Shift goto 92
[120]
	BOOLEAN => Shift goto 71
	IDENT => Shift goto 72
	DQSTRING => Shift goto 73
	SQSTRING => Shift goto 74
	CARDINAL => Shift goto 75
	INTEGER => Shift goto 76
	FLOAT => Shift goto 77
	'(' => Shift goto 78
	'{' => Shift goto 95
	'&' => Shift goto 80
	"new" => Shift goto 86
	"null" => Shift goto 87
	'+' => Shift goto 88
	'-' => Shift goto 89
	'~' => Shift goto 90
	'!' => Shift goto 91
	'*' => Shift goto 92
[121]
	BOOLEAN => Shift goto 71
	IDENT => Shift goto 72
	DQSTRING => Shift goto 73
	SQSTRING => Shift goto 74
	CARDINAL => Shift goto 75
	INTEGER => Shift goto 76
	FLOAT => Shift goto 77
	'(' => Shift goto 78
	'{' => Shift goto 95
	'&' => Shift goto 80
	"new" => Shift goto 86
	"null" => Shift goto 87
	'+' => Shift goto 88
	'-' => Shift goto 89
	'~' => Shift goto 90
	'!' => Shift goto 91
	'*' => Shift goto 92
[122]
	BOOLEAN => Shift goto 71
	IDENT => Shift goto 72
	DQSTRING => Shift goto 73
	SQSTRING => Shift goto 74
	CARDINAL => Shift goto 75
	INTEGER => Shift goto 76
	FLOAT => Shift goto 77
	'(' => Shift goto 78
	'{' => Shift goto 95
	'&' => Shift goto 80
	"new" => Shift goto 86
	"null" => Shift goto 87
	'+' => Shift goto 88
	'-' => Shift goto 89
	'~' => Shift goto 90
	'!' => Shift goto 91
	'*' => Shift goto 92
[123]
	BOOLEAN => Shift goto 71
	IDENT => Shift goto 72
	DQSTRING => Shift goto 73
	SQSTRING => Shift goto 74
	CARDINAL => Shift goto 75
	INTEGER => Shift goto 76
	FLOAT => Shift goto 77
	'(' => Shift goto 78
	'{' => Shift goto 95
	'&' => Shift goto 80
	"new" => Shift goto 86
	"null" => Shift goto 87
	'+' => Shift goto 88
	'-' => Shift goto 89
	'~' => Shift goto 90
	'!' => Shift goto 91
	'*' => Shift goto 92
[124]
	BOOLEAN => Shift goto 71
	IDENT => Shift goto 72
	DQSTRING => Shift goto 73
	SQSTRING => Shift goto 74
	CARDINAL => Shift goto 75
	INTEGER => Shift goto 76
	FLOAT => Shift goto 77
	'(' => Shift goto 78
	'{' => Shift goto 95
	'&' => Shift goto 80
	"new" => Shift goto 86
	"null" => Shift goto 87
	'+' => Shift goto 88
	'-' => Shift goto 89
	'~' => Shift goto 90
	'!' => Shift goto 91
	'*' => Shift goto 92
[125]
	BOOLEAN => Shift goto 71
	IDENT => Shift goto 72
	DQSTRING => Shift goto 73
	SQSTRING => Shift goto 74
	CARDINAL => Shift goto 75
	INTEGER => Shift goto 76
	FLOAT => Shift goto 77
	'(' => Shift goto 78
	'{' => Shift goto 95
	'&' => Shift goto 80
	"new" => Shift goto 86
	"null" => Shift goto 87
	'+' => Shift goto 88
	'-' => Shift goto 89
	'~' => Shift goto 90
	'!' => Shift goto 91
	'*' => Shift goto 92
[126]
	BOOLEAN => Shift goto 71
	IDENT => Shift goto 72
	DQSTRING => Shift goto 73
	SQSTRING => Shift goto 74
	CARDINAL => Shift goto 75
	INTEGER => Shift goto 76
	FLOAT => Shift goto 77
	'(' => Shift goto 78
	'{' => Shift goto 95
	'&' => Shift goto 80
	"new" => Shift goto 86
	"null" => Shift goto 87
	'+' => Shift goto 88
	'-' => Shift goto 89
	'~' => Shift goto 90
	'!' => Shift goto 91
	'*' => Shift goto 92
[127]
	BOOLEAN => Shift goto 71
	IDENT => Shift goto 72
	DQSTRING => Shift goto 73
	SQSTRING => Shift goto 74
	CARDINAL => Shift goto 75
	INTEGER => Shift goto 76
	FLOAT => Shift goto 77
	'(' => Shift goto 78
	'{' => Shift goto 95
	'&' => Shift goto 80
	"new" => Shift goto 86
	"null" => Shift goto 87
	'+' => Shift goto 88
	'-' => Shift goto 89
	'~' => Shift goto 90
	'!' => Shift goto 91
	'*' => Shift goto 92
[128]
	BOOLEAN => Shift goto 71
	IDENT => Shift goto 72
	DQSTRING => Shift goto 73
	SQSTRING => Shift goto 74
	CARDINAL => Shift goto 75
	INTEGER => Shift goto 76
	FLOAT => Shift goto 77
	'(' => Shift goto 78
	'{' => Shift goto 95
	'&' => Shift goto 80
	"new" => Shift goto 86
	"null" => Shift goto 87
	'+' => Shift goto 88
	'-' => Shift goto 89
	'~' => Shift goto 90
	'!' => Shift goto 91
	'*' => Shift goto 92
[129]
	BOOLEAN => Shift goto 71
	IDENT => Shift goto 72
	DQSTRING => Shift goto 73
	SQSTRING => Shift goto 74
	CARDINAL => Shift goto 75
	INTEGER => Shift goto 76
	FLOAT => Shift goto 77
	'(' => Shift goto 78
	'{' => Shift goto 95
	'&' => Shift goto 80
	"new" => Shift goto 86
	"null" => Shift goto 87
	'+' => Shift goto 88
	'-' => Shift goto 89
	'~' => Shift goto 90
	'!' => Shift goto 91
	'*' => Shift goto 92
[130]
	BOOLEAN => Shift goto 71
	IDENT => Shift goto 72
	DQSTRING => Shift goto 73
	SQSTRING => Shift goto 74
	CARDINAL => Shift goto 75
	INTEGER => Shift goto 76
	FLOAT => Shift goto 77
	'(' => Shift goto 78
	'{' => Shift goto 95
	'&' => Shift goto 80
	"new" => Shift goto 86
	"null" => Shift goto 87
	'+' => Shift goto 88
	'-' => Shift goto 89
	'~' => Shift goto 90
	'!' => Shift goto 91
	'*' => Shift goto 92
[131]
	BOOLEAN => Shift goto 71
	IDENT => Shift goto 72
	DQSTRING => Shift goto 73
	SQSTRING => Shift goto 74
	CARDINAL => Shift goto 75
	INTEGER => Shift goto 76
	FLOAT => Shift goto 77
	'(' => Shift goto 78
	'{' => Shift goto 95
	'&' => Shift goto 80
	"new" => Shift goto 86
	"null" => Shift goto 87
	'+' => Shift goto 88
	'-' => Shift goto 89
	'~' => Shift goto 90
	'!' => Shift goto 91
	'*' => Shift goto 92
[132]
	BOOLEAN => Shift goto 71
	IDENT => Shift goto 72
	DQSTRING => Shift goto 73
	SQSTRING => Shift goto 74
	CARDINAL => Shift goto 75
	INTEGER => Shift goto 76
	FLOAT => Shift goto 77
	'(' => Shift goto 78
	'{' => Shift goto 95
	'&' => Shift goto 80
	"new" => Shift goto 86
	"null" => Shift goto 87
	'+' => Shift goto 88
	'-' => Shift goto 89
	'~' => Shift goto 90
	'!' => Shift goto 91
	'*' => Shift goto 92
[133]
	BOOLEAN => Shift goto 71
	IDENT => Shift goto 72
	DQSTRING => Shift goto 73
	SQSTRING => Shift goto 74
	CARDINAL => Shift goto 75
	INTEGER => Shift goto 76
	FLOAT => Shift goto 77
	'(' => Shift goto 78
	'{' => Shift goto 95
	'&' => Shift goto 80
	"new" => Shift goto 86
	"null" => Shift goto 87
	'+' => Shift goto 88
	'-' => Shift goto 89
	'~' => Shift goto 90
	'!' => Shift goto 91
	'*' => Shift goto 92
[134]
	BOOLEAN => Shift goto 71
	IDENT => Shift goto 72
	DQSTRING => Shift goto 73
	SQSTRING => Shift goto 74
	CARDINAL => Shift goto 75
	INTEGER => Shift goto 76
	FLOAT => Shift goto 77
	'(' => Shift goto 78
	'{' => Shift goto 95
	'&' => Shift goto 80
	"new" => Shift goto 86
	"null" => Shift goto 87
	'+' => Shift goto 88
	'-' => Shift goto 89
	'~' => Shift goto 90
	'!' => Shift goto 91
	'*' => Shift goto 92
[135]
	BOOLEAN => Shift goto 71
	IDENT => Shift goto 72
	DQSTRING => Shift goto 73
	SQSTRING => Shift goto 74
	CARDINAL => Shift goto 75
	INTEGER => Shift goto 76
	FLOAT => Shift goto 77
	'(' => Shift goto 78
	'{' => Shift goto 95
	'&' => Shift goto 80
	"new" => Shift goto 86
	"null" => Shift goto 87
	'+' => Shift goto 88
	'-' => Shift goto 89
	'~' => Shift goto 90
	'!' => Shift goto 91
	'*' => Shift goto 92
[136]
	BOOLEAN => Shift goto 71
	IDENT => Shift goto 72
	DQSTRING => Shift goto 73
	SQSTRING => Shift goto 74
	CARDINAL => Shift goto 75
	INTEGER => Shift goto 76
	FLOAT => Shift goto 77
	'(' => Shift goto 78
	'{' => Shift goto 95
	'&' => Shift goto 80
	"new" => Shift goto 86
	"null" => Shift goto 87
	'+' => Shift goto 88
	'-' => Shift goto 89
	'~' => Shift goto 90
	'!' => Shift goto 91
	'*' => Shift goto 92
[137]
	BOOLEAN => Shift goto 71
	IDENT => Shift goto 72
	DQSTRING => Shift goto 73
	SQSTRING => Shift goto 74
	CARDINAL => Shift goto 75
	INTEGER => Shift goto 76
	FLOAT => Shift goto 77
	'(' => Shift goto 78
	'{' => Shift goto 95
	'&' => Shift goto 80
	"new" => Shift goto 86
	"null" => Shift goto 87
	'+' => Shift goto 88
	'-' => Shift goto 89
	'~' => Shift goto 90
	'!' => Shift goto 91
	'*' => Shift goto 92
[138]
	BOOLEAN => Shift goto 71
	IDENT => Shift goto 72
	DQSTRING => Shift goto 73
	SQSTRING => Shift goto 74
	CARDINAL => Shift goto 75
	INTEGER => Shift goto 76
	FLOAT => Shift goto 77
	'(' => Shift goto 78
	'{' => Shift goto 95
	'&' => Shift goto 80
	"new" => Shift goto 86
	"null" => Shift goto 87
	'+' => Shift goto 88
	'-' => Shift goto 89
	'~' => Shift goto 90
	'!' => Shift goto 91
	'*' => Shift goto 92
[139]
	BOOLEAN => Shift goto 71
	IDENT => Shift goto 72
	DQSTRING => Shift goto 73
	SQSTRING => Shift goto 74
	CARDINAL => Shift goto 75
	INTEGER => Shift goto 76
	FLOAT => Shift goto 77
	'(' => Shift goto 78
	'{' => Shift goto 95
	'&' => Shift goto 80
	"new" => Shift goto 86
	"null" => Shift goto 87
	'+' => Shift goto 88
	'-' => Shift goto 89
	'~' => Shift goto 90
	'!' => Shift goto 91
	'*' => Shift goto 92
[140]
	BOOLEAN => Shift goto 71
	IDENT => Shift goto 72
	DQSTRING => Shift goto 73
	SQSTRING => Shift goto 74
	CARDINAL => Shift goto 75
	INTEGER => Shift goto 76
	FLOAT => Shift goto 77
	'(' => Shift goto 78
	'{' => Shift goto 95
	'&' => Shift goto 80
	"new" => Shift goto 86
	"null" => Shift goto 87
	'+' => Shift goto 88
	'-' => Shift goto 89
	'~' => Shift goto 90
	'!' => Shift goto 91
	'*' => Shift goto 92
[141]
	BOOLEAN => Shift goto 71
	IDENT => Shift goto 72
	DQSTRING => Shift goto 73
	SQSTRING => Shift goto 74
	CARDINAL => Shift goto 75
	INTEGER => Shift goto 76
	FLOAT => Shift goto 77
	'(' => Shift goto 78
	'{' => Shift goto 95
	'&' => Shift goto 80
	"new" => Shift goto 86
	"null" => Shift goto 87
	'+' => Shift goto 88
	'-' => Shift goto 89
	'~' => Shift goto 90
	'!' => Shift goto 91
	'*' => Shift goto 92
[142]
	BOOLEAN => Shift goto 71
	IDENT => Shift goto 72
	DQSTRING => Shift goto 73
	SQSTRING => Shift goto 74
	CARDINAL => Shift goto 75
	INTEGER => Shift goto 76
	FLOAT => Shift goto 77
	'(' => Shift goto 78
	'{' => Shift goto 95
	'&' => Shift goto 80
	"new" => Shift goto 86
	"null" => Shift goto 87
	'+' => Shift goto 88
	'-' => Shift goto 89
	'~' => Shift goto 90
	'!' => Shift goto 91
	'*' => Shift goto 92
[143]
	BOOLEAN => Shift goto 71
	IDENT => Shift goto 72
	DQSTRING => Shift goto 73
	SQSTRING => Shift goto 74
	CARDINAL => Shift goto 75
	INTEGER => Shift goto 76
	FLOAT => Shift goto 77
	'(' => Shift goto 78
	'{' => Shift goto 95
	'&' => Shift goto 80
	"new" => Shift goto 86
	"null" => Shift goto 87
	'+' => Shift goto 88
	'-' => Shift goto 89
	'~' => Shift goto 90
	'!' => Shift goto 91
	'*' => Shift goto 92
[144]
	BOOLEAN => Shift goto 71
	IDENT => Shift goto 72
	DQSTRING => Shift goto 73
	SQSTRING => Shift goto 74
	CARDINAL => Shift goto 75
	INTEGER => Shift goto 76
	FLOAT => Shift goto 77
	'(' => Shift goto 78
	'{' => Shift goto 95
	'&' => Shift goto 80
	"new" => Shift goto 86
	"null" => Shift goto 87
	'+' => Shift goto 88
	'-' => Shift goto 89
	'~' => Shift goto 90
	'!' => Shift goto 91
	'*' => Shift goto 92
[145]
	BOOLEAN => Shift goto 71
	IDENT => Shift goto 72
	DQSTRING => Shift goto 73
	SQSTRING => Shift goto 74
	CARDINAL => Shift goto 75
	INTEGER => Shift goto 76
	FLOAT => Shift goto 77
	'(' => Shift goto 78
	'{' => Shift goto 95
	'&' => Shift goto 80
	"new" => Shift goto 86
	"null" => Shift goto 87
	'+' => Shift goto 88
	'-' => Shift goto 89
	'~' => Shift goto 90
	'!' => Shift goto 91
	'*' => Shift goto 92
[146]
	BOOLEAN => Shift goto 71
	IDENT => Shift goto 72
	DQSTRING => Shift goto 73
	SQSTRING => Shift goto 74
	CARDINAL => Shift goto 75
	INTEGER => Shift goto 76
	FLOAT => Shift goto 77
	'(' => Shift goto 78
	'{' => Shift goto 95
	'&' => Shift goto 80
	"new" => Shift goto 86
	"null" => Shift goto 87
	'+' => Shift goto 88
	'-' => Shift goto 89
	'~' => Shift goto 90
	'!' => Shift goto 91
	'*' => Shift goto 92
[147]
	BOOLEAN => Shift goto 71
	IDENT => Shift goto 72
	DQSTRING => Shift goto 73
	SQSTRING => Shift goto 74
	CARDINAL => Shift goto 75
	INTEGER => Shift goto 76
	FLOAT => Shift goto 77
	'(' => Shift goto 78
	'{' => Shift goto 95
	'&' => Shift goto 80
	"new" => Shift goto 86
	"null" => Shift goto 87
	'+' => Shift goto 88
	'-' => Shift goto 89
	'~' => Shift goto 90
	'!' => Shift goto 91
	'*' => Shift goto 92
[148]
	IDENT => Shift goto 220
[149]
	IDENT => Reduce #1 indirection call count
	"->" => Shift goto 149
[150]
	'(' => Shift goto 115
	')' => Shift goto 222
	'&' => Shift goto 117
	'^' => Shift goto 118
	'=' => Shift goto 119
	'[' => Shift goto 120
	"+=" => Shift goto 121
	"-=" => Shift goto 122
	"*=" => Shift goto 123
	"/=" => Shift goto 124
	"%=" => Shift goto 125
	"&&=" => Shift goto 126
	"||=" => Shift goto 127
	"&=" => Shift goto 128
	"|=" => Shift goto 129
	"<<=" => Shift goto 130
	">>=" => Shift goto 131
	"||" => Shift goto 132
	"&&" => Shift goto 133
	'|' => Shift goto 134
	"==" => Shift goto 135
	"!=" => Shift goto 136
	"<=" => Shift goto 137
	'<' => Shift goto 138
	">=" => Shift goto 139
	'>' => Shift goto 140
	'+' => Shift goto 141
	'-' => Shift goto 142
	'*' => Shift goto 143
	'/' => Shift goto 144
	'%' => Shift goto 145
	"<<" => Shift goto 146
	">>" => Shift goto 147
	'.' => Shift goto 148
	"->" => Shift goto 149
[151]
	'}' => Shift goto 223
[152]
	'(' => Shift goto 115
	';' => Shift goto 116
	',' => Shift goto 224
	'}' => Reduce #1 expressionlist
	'&' => Shift goto 117
	'^' => Shift goto 118
	'=' => Shift goto 119
	'[' => Shift goto 120
	"+=" => Shift goto 121
	"-=" => Shift goto 122
	"*=" => Shift goto 123
	"/=" => Shift goto 124
	"%=" => Shift goto 125
	"&&=" => Shift goto 126
	"||=" => Shift goto 127
	"&=" => Shift goto 128
	"|=" => Shift goto 129
	"<<=" => Shift goto 130
	">>=" => Shift goto 131
	"||" => Shift goto 132
	"&&" => Shift goto 133
	'|' => Shift goto 134
	"==" => Shift goto 135
	"!=" => Shift goto 136
	"<=" => Shift goto 137
	'<' => Shift goto 138
	">=" => Shift goto 139
	'>' => Shift goto 140
	'+' => Shift goto 141
	'-' => Shift goto 142
	'*' => Shift goto 143
	'/' => Shift goto 144
	'%' => Shift goto 145
	"<<" => Shift goto 146
	">>" => Shift goto 147
	'.' => Shift goto 148
	"->" => Shift goto 149
[153]
	'}' => Shift goto 225
[154]
	'(' => Reduce #2 expression call structure
	')' => Reduce #2 expression call structure
	';' => Reduce #2 expression call structure
	',' => Reduce #2 expression call structure
	'}' => Reduce #2 expression call structure
	'&' => Reduce #2 expression call structure
	'^' => Reduce #2 expression call structure
	'=' => Reduce #2 expression call structure
	'[' => Reduce #2 expression call structure
	']' => Reduce #2 expression call structure
	"+=" => Reduce #2 expression call structure
	"-=" => Reduce #2 expression call structure
	"*=" => Reduce #2 expression call structure
	"/=" => Reduce #2 expression call structure
	"%=" => Reduce #2 expression call structure
	"&&=" => Reduce #2 expression call structure
	"||=" => Reduce #2 expression call structure
	"&=" => Reduce #2 expression call structure
	"|=" => Reduce #2 expression call structure
	"<<=" => Reduce #2 expression call structure
	">>=" => Reduce #2 expression call structure
	"||" => Reduce #2 expression call structure
	"&&" => Reduce #2 expression call structure
	'|' => Reduce #2 expression call structure
	"==" => Reduce #2 expression call structure
	"!=" => Reduce #2 expression call structure
	"<=" => Reduce #2 expression call structure
	'<' => Reduce #2 expression call structure
	">=" => Reduce #2 expression call structure
	'>' => Reduce #2 expression call structure
	'+' => Reduce #2 expression call structure
	'-' => Reduce #2 expression call structure
	'*' => Reduce #2 expression call structure
	'/' => Reduce #2 expression call structure
	'%' => Reduce #2 expression call structure
	"<<" => Reduce #2 expression call structure
	">>" => Reduce #2 expression call structure
	'.' => Reduce #2 expression call structure
	"->" => Reduce #2 expression call structure
[155]
	'(' => Shift goto 115
	')' => Reduce #2 expression call operator "&"
	';' => Reduce #2 expression call operator "&"
	',' => Reduce #2 expression call operator "&"
	'}' => Reduce #2 expression call operator "&"
	'&' => Reduce #2 expression call operator "&"
	'^' => Reduce #2 expression call operator "&"
	'=' => Reduce #2 expression call operator "&"
	'[' => Shift goto 120
	']' => Reduce #2 expression call operator "&"
	"+=" => Reduce #2 expression call operator "&"
	"-=" => Reduce #2 expression call operator "&"
	"*=" => Reduce #2 expression call operator "&"
	"/=" => Reduce #2 expression call operator "&"
	"%=" => Reduce #2 expression call operator "&"
	"&&=" => Reduce #2 expression call operator "&"
	"||=" => Reduce #2 expression call operator "&"
	"&=" => Reduce #2 expression call operator "&"
	"|=" => Reduce #2 expression call operator "&"
	"<<=" => Reduce #2 expression call operator "&"
	">>=" => Reduce #2 expression call operator "&"
	"||" => Reduce #2 expression call operator "&"
	"&&" => Reduce #2 expression call operator "&"
	'|' => Reduce #2 expression call operator "&"
	"==" => Reduce #2 expression call operator "&"
	"!=" => Reduce #2 expression call operator "&"
	"<=" => Reduce #2 expression call operator "&"
	'<' => Reduce #2 expression call operator "&"
	">=" => Reduce #2 expression call operator "&"
	'>' => Reduce #2 expression call operator "&"
	'+' => Reduce #2 expression call operator "&"
	'-' => Reduce #2 expression call operator "&"
	'*' => Shift goto 143
	'/' => Shift goto 144
	'%' => Shift goto 145
	"<<" => Shift goto 146
	">>" => Shift goto 147
	'.' => Shift goto 148
	"->" => Reduce #2 expression call operator "&"
[156]
	';' => Shift goto 226
[157]
	'(' => Shift goto 115
	';' => Shift goto 227
	'&' => Shift goto 117
	'^' => Shift goto 118
	'=' => Shift goto 119
	'[' => Shift goto 120
	"+=" => Shift goto 121
	"-=" => Shift goto 122
	"*=" => Shift goto 123
	"/=" => Shift goto 124
	"%=" => Shift goto 125
	"&&=" => Shift goto 126
	"||=" => Shift goto 127
	"&=" => Shift goto 128
	"|=" => Shift goto 129
	"<<=" => Shift goto 130
	">>=" => Shift goto 131
	"||" => Shift goto 132
	"&&" => Shift goto 133
	'|' => Shift goto 134
	"==" => Shift goto 135
	"!=" => Shift goto 136
	"<=" => Shift goto 137
	'<' => Shift goto 138
	">=" => Shift goto 139
	'>' => Shift goto 140
	'+' => Shift goto 141
	'-' => Shift goto 142
	'*' => Shift goto 143
	'/' => Shift goto 144
	'%' => Shift goto 145
	"<<" => Shift goto 146
	">>" => Shift goto 147
	'.' => Shift goto 148
	"->" => Shift goto 149
[158]
	'(' => Shift goto 115
	';' => Shift goto 228
	'&' => Shift goto 117
	'^' => Shift goto 118
	'=' => Shift goto 119
	'[' => Shift goto 120
	"+=" => Shift goto 121
	"-=" => Shift goto 122
	"*=" => Shift goto 123
	"/=" => Shift goto 124
	"%=" => Shift goto 125
	"&&=" => Shift goto 126
	"||=" => Shift goto 127
	"&=" => Shift goto 128
	"|=" => Shift goto 129
	"<<=" => Shift goto 130
	">>=" => Shift goto 131
	"||" => Shift goto 132
	"&&" => Shift goto 133
	'|' => Shift goto 134
	"==" => Shift goto 135
	"!=" => Shift goto 136
	"<=" => Shift goto 137
	'<' => Shift goto 138
	">=" => Shift goto 139
	'>' => Shift goto 140
	'+' => Shift goto 141
	'-' => Shift goto 142
	'*' => Shift goto 143
	'/' => Shift goto 144
	'%' => Shift goto 145
	"<<" => Shift goto 146
	">>" => Shift goto 147
	'.' => Shift goto 148
	"->" => Shift goto 149
[159]
	BOOLEAN => Shift goto 71
	IDENT => Shift goto 72
	DQSTRING => Shift goto 73
	SQSTRING => Shift goto 74
	CARDINAL => Shift goto 75
	INTEGER => Shift goto 76
	FLOAT => Shift goto 77
	'(' => Shift goto 78
	'{' => Shift goto 95
	'&' => Shift goto 80
	"new" => Shift goto 86
	"null" => Shift goto 87
	'+' => Shift goto 88
	'-' => Shift goto 89
	'~' => Shift goto 90
	'!' => Shift goto 91
	'*' => Shift goto 92
[160]
	BOOLEAN => Shift goto 71
	IDENT => Shift goto 72
	DQSTRING => Shift goto 73
	SQSTRING => Shift goto 74
	CARDINAL => Shift goto 75
	INTEGER => Shift goto 76
	FLOAT => Shift goto 77
	'(' => Shift goto 78
	'{' => Shift goto 95
	'&' => Shift goto 80
	"new" => Shift goto 86
	"null" => Shift goto 87
	'+' => Shift goto 88
	'-' => Shift goto 89
	'~' => Shift goto 90
	'!' => Shift goto 91
	'*' => Shift goto 92
[161]
	':' => Shift goto 231
[162]
	'(' => Shift goto 115
	')' => Reduce #2 expression call operator "+"
	';' => Reduce #2 expression call operator "+"
	',' => Reduce #2 expression call operator "+"
	'}' => Reduce #2 expression call operator "+"
	'&' => Reduce #2 expression call operator "+"
	'^' => Reduce #2 expression call operator "+"
	'=' => Reduce #2 expression call operator "+"
	'[' => Shift goto 120
	']' => Reduce #2 expression call operator "+"
	"+=" => Reduce #2 expression call operator "+"
	"-=" => Reduce #2 expression call operator "+"
	"*=" => Reduce #2 expression call operator "+"
	"/=" => Reduce #2 expression call operator "+"
	"%=" => Reduce #2 expression call operator "+"
	"&&=" => Reduce #2 expression call operator "+"
	"||=" => Reduce #2 expression call operator "+"
	"&=" => Reduce #2 expression call operator "+"
	"|=" => Reduce #2 expression call operator "+"
	"<<=" => Reduce #2 expression call operator "+"
	">>=" => Reduce #2 expression call operator "+"
	"||" => Reduce #2 expression call operator "+"
	"&&" => Reduce #2 expression call operator "+"
	'|' => Reduce #2 expression call operator "+"
	"==" => Reduce #2 expression call operator "+"
	"!=" => Reduce #2 expression call operator "+"
	"<=" => Reduce #2 expression call operator "+"
	'<' => Reduce #2 expression call operator "+"
	">=" => Reduce #2 expression call operator "+"
	'>' => Reduce #2 expression call operator "+"
	'+' => Reduce #2 expression call operator "+"
	'-' => Reduce #2 expression call operator "+"
	'*' => Shift goto 143
	'/' => Shift goto 144
	'%' => Shift goto 145
	"<<" => Shift goto 146
	">>" => Shift goto 147
	'.' => Shift goto 148
	"->" => Reduce #2 expression call operator "+"
[163]
	'(' => Shift goto 115
	')' => Reduce #2 expression call operator "-"
	';' => Reduce #2 expression call operator "-"
	',' => Reduce #2 expression call operator "-"
	'}' => Reduce #2 expression call operator "-"
	'&' => Reduce #2 expression call operator "-"
	'^' => Reduce #2 expression call operator "-"
	'=' => Reduce #2 expression call operator "-"
	'[' => Shift goto 120
	']' => Reduce #2 expression call operator "-"
	"+=" => Reduce #2 expression call operator "-"
	"-=" => Reduce #2 expression call operator "-"
	"*=" => Reduce #2 expression call operator "-"
	"/=" => Reduce #2 expression call operator "-"
	"%=" => Reduce #2 expression call operator "-"
	"&&=" => Reduce #2 expression call operator "-"
	"||=" => Reduce #2 expression call operator "-"
	"&=" => Reduce #2 expression call operator "-"
	"|=" => Reduce #2 expression call operator "-"
	"<<=" => Reduce #2 expression call operator "-"
	">>=" => Reduce #2 expression call operator "-"
	"||" => Reduce #2 expression call operator "-"
	"&&" => Reduce #2 expression call operator "-"
	'|' => Reduce #2 expression call operator "-"
	"==" => Reduce #2 expression call operator "-"
	"!=" => Reduce #2 expression call operator "-"
	"<=" => Reduce #2 expression call operator "-"
	'<' => Reduce #2 expression call operator "-"
	">=" => Reduce #2 expression call operator "-"
	'>' => Reduce #2 expression call operator "-"
	'+' => Reduce #2 expression call operator "-"
	'-' => Reduce #2 expression call operator "-"
	'*' => Shift goto 143
	'/' => Shift goto 144
	'%' => Shift goto 145
	"<<" => Shift goto 146
	">>" => Shift goto 147
	'.' => Shift goto 148
	"->" => Reduce #2 expression call operator "-"
[164]
	'(' => Shift goto 115
	')' => Reduce #2 expression call operator "~"
	';' => Reduce #2 expression call operator "~"
	',' => Reduce #2 expression call operator "~"
	'}' => Reduce #2 expression call operator "~"
	'&' => Reduce #2 expression call operator "~"
	'^' => Reduce #2 expression call operator "~"
	'=' => Reduce #2 expression call operator "~"
	'[' => Shift goto 120
	']' => Reduce #2 expression call operator "~"
	"+=" => Reduce #2 expression call operator "~"
	"-=" => Reduce #2 expression call operator "~"
	"*=" => Reduce #2 expression call operator "~"
	"/=" => Reduce #2 expression call operator "~"
	"%=" => Reduce #2 expression call operator "~"
	"&&=" => Reduce #2 expression call operator "~"
	"||=" => Reduce #2 expression call operator "~"
	"&=" => Reduce #2 expression call operator "~"
	"|=" => Reduce #2 expression call operator "~"
	"<<=" => Reduce #2 expression call operator "~"
	">>=" => Reduce #2 expression call operator "~"
	"||" => Reduce #2 expression call operator "~"
	"&&" => Reduce #2 expression call operator "~"
	'|' => Reduce #2 expression call operator "~"
	"==" => Reduce #2 expression call operator "~"
	"!=" => Reduce #2 expression call operator "~"
	"<=" => Reduce #2 expression call operator "~"
	'<' => Reduce #2 expression call operator "~"
	">=" => Reduce #2 expression call operator "~"
	'>' => Reduce #2 expression call operator "~"
	'+' => Reduce #2 expression call operator "~"
	'-' => Reduce #2 expression call operator "~"
	'*' => Shift goto 143
	'/' => Shift goto 144
	'%' => Shift goto 145
	"<<" => Shift goto 146
	">>" => Shift goto 147
	'.' => Shift goto 148
	"->" => Reduce #2 expression call operator "~"
[165]
	'(' => Shift goto 115
	')' => Reduce #2 expression call operator "!"
	';' => Reduce #2 expression call operator "!"
	',' => Reduce #2 expression call operator "!"
	'}' => Reduce #2 expression call operator "!"
	'&' => Reduce #2 expression call operator "!"
	'^' => Reduce #2 expression call operator "!"
	'=' => Reduce #2 expression call operator "!"
	'[' => Shift goto 120
	']' => Reduce #2 expression call operator "!"
	"+=" => Reduce #2 expression call operator "!"
	"-=" => Reduce #2 expression call operator "!"
	"*=" => Reduce #2 expression call operator "!"
	"/=" => Reduce #2 expression call operator "!"
	"%=" => Reduce #2 expression call operator "!"
	"&&=" => Reduce #2 expression call operator "!"
	"||=" => Reduce #2 expression call operator "!"
	"&=" => Reduce #2 expression call operator "!"
	"|=" => Reduce #2 expression call operator "!"
	"<<=" => Reduce #2 expression call operator "!"
	">>=" => Reduce #2 expression call operator "!"
	"||" => Reduce #2 expression call operator "!"
	"&&" => Reduce #2 expression call operator "!"
	'|' => Reduce #2 expression call operator "!"
	"==" => Reduce #2 expression call operator "!"
	"!=" => Reduce #2 expression call operator "!"
	"<=" => Reduce #2 expression call operator "!"
	'<' => Reduce #2 expression call operator "!"
	">=" => Reduce #2 expression call operator "!"
	'>' => Reduce #2 expression call operator "!"
	'+' => Reduce #2 expression call operator "!"
	'-' => Reduce #2 expression call operator "!"
	'*' => Shift goto 143
	'/' => Shift goto 144
	'%' => Shift goto 145
	"<<" => Shift goto 146
	">>" => Shift goto 147
	'.' => Shift goto 148
	"->" => Reduce #2 expression call operator "!"
[166]
	'(' => Shift goto 115
	')' => Reduce #2 expression call operator "->"
	';' => Reduce #2 expression call operator "->"
	',' => Reduce #2 expression call operator "->"
	'}' => Reduce #2 expression call operator "->"
	'&' => Reduce #2 expression call operator "->"
	'^' => Reduce #2 expression call operator "->"
	'=' => Reduce #2 expression call operator "->"
	'[' => Shift goto 120
	']' => Reduce #2 expression call operator "->"
	"+=" => Reduce #2 expression call operator "->"
	"-=" => Reduce #2 expression call operator "->"
	"*=" => Reduce #2 expression call operator "->"
	"/=" => Reduce #2 expression call operator "->"
	"%=" => Reduce #2 expression call operator "->"
	"&&=" => Reduce #2 expression call operator "->"
	"||=" => Reduce #2 expression call operator "->"
	"&=" => Reduce #2 expression call operator "->"
	"|=" => Reduce #2 expression call operator "->"
	"<<=" => Reduce #2 expression call operator "->"
	">>=" => Reduce #2 expression call operator "->"
	"||" => Reduce #2 expression call operator "->"
	"&&" => Reduce #2 expression call operator "->"
	'|' => Reduce #2 expression call operator "->"
	"==" => Reduce #2 expression call operator "->"
	"!=" => Reduce #2 expression call operator "->"
	"<=" => Reduce #2 expression call operator "->"
	'<' => Reduce #2 expression call operator "->"
	">=" => Reduce #2 expression call operator "->"
	'>' => Reduce #2 expression call operator "->"
	'+' => Reduce #2 expression call operator "->"
	'-' => Reduce #2 expression call operator "->"
	'*' => Reduce #2 expression call operator "->"
	'/' => Reduce #2 expression call operator "->"
	'%' => Reduce #2 expression call operator "->"
	"<<" => Reduce #2 expression call operator "->"
	">>" => Reduce #2 expression call operator "->"
	'.' => Reduce #2 expression call operator "->"
	"->" => Reduce #2 expression call operator "->"
[167]
	'(' => Shift goto 115
	')' => Reduce #1 expressionlist
	',' => Shift goto 224
	'}' => Reduce #1 expressionlist
	'&' => Shift goto 117
	'^' => Shift goto 118
	'=' => Shift goto 119
	'[' => Shift goto 120
	']' => Reduce #1 expressionlist
	"+=" => Shift goto 121
	"-=" => Shift goto 122
	"*=" => Shift goto 123
	"/=" => Shift goto 124
	"%=" => Shift goto 125
	"&&=" => Shift goto 126
	"||=" => Shift goto 127
	"&=" => Shift goto 128
	"|=" => Shift goto 129
	"<<=" => Shift goto 130
	">>=" => Shift goto 131
	"||" => Shift goto 132
	"&&" => Shift goto 133
	'|' => Shift goto 134
	"==" => Shift goto 135
	"!=" => Shift goto 136
	"<=" => Shift goto 137
	'<' => Shift goto 138
	">=" => Shift goto 139
	'>' => Shift goto 140
	'+' => Shift goto 141
	'-' => Shift goto 142
	'*' => Shift goto 143
	'/' => Shift goto 144
	'%' => Shift goto 145
	"<<" => Shift goto 146
	">>" => Shift goto 147
	'.' => Shift goto 148
	"->" => Shift goto 149
[168]
	';' => Reduce #5 variabledefinition call vardef_array
	'=' => Shift goto 232
[169]
	$ => Reduce #5 functiondefinition call funcdef
	BOOLEAN => Reduce #5 functiondefinition call funcdef
	IDENT => Reduce #5 functiondefinition call funcdef
	DQSTRING => Reduce #5 functiondefinition call funcdef
	SQSTRING => Reduce #5 functiondefinition call funcdef
	CARDINAL => Reduce #5 functiondefinition call funcdef
	INTEGER => Reduce #5 functiondefinition call funcdef
	FLOAT => Reduce #5 functiondefinition call funcdef
	"function" => Reduce #5 functiondefinition call funcdef
	'(' => Reduce #5 functiondefinition call funcdef
	"procedure" => Reduce #5 functiondefinition call funcdef
	"main" => Reduce #5 functiondefinition call funcdef
	'{' => Reduce #5 functiondefinition call funcdef
	'}' => Reduce #5 functiondefinition call funcdef
	"const" => Reduce #5 functiondefinition call funcdef
	'&' => Reduce #5 functiondefinition call funcdef
	"typedef" => Reduce #5 functiondefinition call funcdef
	"struct" => Reduce #5 functiondefinition call funcdef
	"interface" => Reduce #5 functiondefinition call funcdef
	"class" => Reduce #5 functiondefinition call funcdef
	"private" => Reduce #5 functiondefinition call funcdef
	"public" => Reduce #5 functiondefinition call funcdef
	"var" => Reduce #5 functiondefinition call funcdef
	"return" => Reduce #5 functiondefinition call funcdef
	"delete" => Reduce #5 functiondefinition call funcdef
	"if" => Reduce #5 functiondefinition call funcdef
	"while" => Reduce #5 functiondefinition call funcdef
	"new" => Reduce #5 functiondefinition call funcdef
	"null" => Reduce #5 functiondefinition call funcdef
	'+' => Reduce #5 functiondefinition call funcdef
	'-' => Reduce #5 functiondefinition call funcdef
	'~' => Reduce #5 functiondefinition call funcdef
	'!' => Reduce #5 functiondefinition call funcdef
	'*' => Reduce #5 functiondefinition call funcdef
[170]
	IDENT => Shift goto 233
[171]
	')' => Shift goto 234
[172]
	')' => Reduce #1 parameterlist call paramdeflist
[173]
	')' => Reduce #1 parameters
	',' => Shift goto 235
[174]
	IDENT => Reduce #5 typespec call typespec "const^^&"
	')' => Reduce #5 typespec call typespec "const^^&"
	',' => Reduce #5 typespec call typespec "const^^&"
	':' => Reduce #5 typespec call typespec "const^^&"
[175]
	';' => Reduce #5 structdefinition call structdef
[176]
	'}' => Reduce #2 datadefinitionlist
[177]
	';' => Reduce #5 interfacedefinition call interfacedef
[178]
	'}' => Reduce #2 methoddefinitionlist
[179]
	IDENT => Shift goto 236
[180]
	'(' => Shift goto 237
[181]
	';' => Reduce #5 classdefinition call classdef
[182]
	IDENT => Shift goto 17
	')' => Reduce #0 externparameterlist
	"const" => Shift goto 18
[183]
	')' => Shift goto 239
[184]
	')' => Reduce #1 externparameterlist call extern_paramdeflist
[185]
	')' => Reduce #1 externparameters
	',' => Shift goto 240
[186]
	'(' => Reduce #3 iexpression call rep_operator "->"
	')' => Reduce #3 iexpression call rep_operator "->"
	';' => Reduce #3 iexpression call rep_operator "->"
	',' => Reduce #3 iexpression call rep_operator "->"
	'}' => Reduce #3 iexpression call rep_operator "->"
	'&' => Reduce #3 iexpression call rep_operator "->"
	'^' => Reduce #3 iexpression call rep_operator "->"
	'=' => Reduce #3 iexpression call rep_operator "->"
	'[' => Reduce #3 iexpression call rep_operator "->"
	']' => Reduce #3 iexpression call rep_operator "->"
	"+=" => Reduce #3 iexpression call rep_operator "->"
	"-=" => Reduce #3 iexpression call rep_operator "->"
	"*=" => Reduce #3 iexpression call rep_operator "->"
	"/=" => Reduce #3 iexpression call rep_operator "->"
	"%=" => Reduce #3 iexpression call rep_operator "->"
	"&&=" => Reduce #3 iexpression call rep_operator "->"
	"||=" => Reduce #3 iexpression call rep_operator "->"
	"&=" => Reduce #3 iexpression call rep_operator "->"
	"|=" => Reduce #3 iexpression call rep_operator "->"
	"<<=" => Reduce #3 iexpression call rep_operator "->"
	">>=" => Reduce #3 iexpression call rep_operator "->"
	"||" => Reduce #3 iexpression call rep_operator "->"
	"&&" => Reduce #3 iexpression call rep_operator "->"
	'|' => Reduce #3 iexpression call rep_operator "->"
	"==" => Reduce #3 iexpression call rep_operator "->"
	"!=" => Reduce #3 iexpression call rep_operator "->"
	"<=" => Reduce #3 iexpression call rep_operator "->"
	'<' => Reduce #3 iexpression call rep_operator "->"
	">=" => Reduce #3 iexpression call rep_operator "->"
	'>' => Reduce #3 iexpression call rep_operator "->"
	'+' => Reduce #3 iexpression call rep_operator "->"
	'-' => Reduce #3 iexpression call rep_operator "->"
	'*' => Reduce #3 iexpression call rep_operator "->"
	'/' => Reduce #3 iexpression call rep_operator "->"
	'%' => Reduce #3 iexpression call rep_operator "->"
	"<<" => Reduce #3 iexpression call rep_operator "->"
	">>" => Reduce #3 iexpression call rep_operator "->"
	'.' => Reduce #3 iexpression call rep_operator "->"
	"->" => Reduce #3 iexpression call rep_operator "->"
[187]
	')' => Shift goto 241
[188]
	'(' => Reduce #3 expression call operator "()"
	')' => Reduce #3 expression call operator "()"
	';' => Reduce #3 expression call operator "()"
	',' => Reduce #3 expression call operator "()"
	'}' => Reduce #3 expression call operator "()"
	'&' => Reduce #3 expression call operator "()"
	'^' => Reduce #3 expression call operator "()"
	'=' => Reduce #3 expression call operator "()"
	'[' => Reduce #3 expression call operator "()"
	']' => Reduce #3 expression call operator "()"
	"+=" => Reduce #3 expression call operator "()"
	"-=" => Reduce #3 expression call operator "()"
	"*=" => Reduce #3 expression call operator "()"
	"/=" => Reduce #3 expression call operator "()"
	"%=" => Reduce #3 expression call operator "()"
	"&&=" => Reduce #3 expression call operator "()"
	"||=" => Reduce #3 expression call operator "()"
	"&=" => Reduce #3 expression call operator "()"
	"|=" => Reduce #3 expression call operator "()"
	"<<=" => Reduce #3 expression call operator "()"
	">>=" => Reduce #3 expression call operator "()"
	"||" => Reduce #3 expression call operator "()"
	"&&" => Reduce #3 expression call operator "()"
	'|' => Reduce #3 expression call operator "()"
	"==" => Reduce #3 expression call operator "()"
	"!=" => Reduce #3 expression call operator "()"
	"<=" => Reduce #3 expression call operator "()"
	'<' => Reduce #3 expression call operator "()"
	">=" => Reduce #3 expression call operator "()"
	'>' => Reduce #3 expression call operator "()"
	'+' => Reduce #3 expression call operator "()"
	'-' => Reduce #3 expression call operator "()"
	'*' => Reduce #3 expression call operator "()"
	'/' => Reduce #3 expression call operator "()"
	'%' => Reduce #3 expression call operator "()"
	"<<" => Reduce #3 expression call operator "()"
	">>" => Reduce #3 expression call operator "()"
	'.' => Reduce #3 expression call operator "()"
	"->" => Reduce #3 expression call operator "()"
[189]
	'(' => Shift goto 115
	')' => Reduce #3 expression call operator "&"
	';' => Reduce #3 expression call operator "&"
	',' => Reduce #3 expression call operator "&"
	'}' => Reduce #3 expression call operator "&"
	'&' => Reduce #3 expression call operator "&"
	'^' => Reduce #3 expression call operator "&"
	'=' => Reduce #3 expression call operator "&"
	'[' => Shift goto 120
	']' => Reduce #3 expression call operator "&"
	"+=" => Reduce #3 expression call operator "&"
	"-=" => Reduce #3 expression call operator "&"
	"*=" => Reduce #3 expression call operator "&"
	"/=" => Reduce #3 expression call operator "&"
	"%=" => Reduce #3 expression call operator "&"
	"&&=" => Reduce #3 expression call operator "&"
	"||=" => Reduce #3 expression call operator "&"
	"&=" => Reduce #3 expression call operator "&"
	"|=" => Reduce #3 expression call operator "&"
	"<<=" => Reduce #3 expression call operator "&"
	">>=" => Reduce #3 expression call operator "&"
	"||" => Reduce #3 expression call operator "&"
	"&&" => Reduce #3 expression call operator "&"
	'|' => Reduce #3 expression call operator "&"
	"==" => Shift goto 135
	"!=" => Shift goto 136
	"<=" => Shift goto 137
	'<' => Shift goto 138
	">=" => Shift goto 139
	'>' => Shift goto 140
	'+' => Shift goto 141
	'-' => Shift goto 142
	'*' => Shift goto 143
	'/' => Shift goto 144
	'%' => Shift goto 145
	"<<" => Shift goto 146
	">>" => Shift goto 147
	'.' => Shift goto 148
	"->" => Reduce #3 expression call operator "&"
[190]
	'(' => Shift goto 115
	')' => Reduce #3 expression call operator "^"
	';' => Reduce #3 expression call operator "^"
	',' => Reduce #3 expression call operator "^"
	'}' => Reduce #3 expression call operator "^"
	'&' => Reduce #3 expression call operator "^"
	'^' => Reduce #3 expression call operator "^"
	'=' => Reduce #3 expression call operator "^"
	'[' => Shift goto 120
	']' => Reduce #3 expression call operator "^"
	"+=" => Reduce #3 expression call operator "^"
	"-=" => Reduce #3 expression call operator "^"
	"*=" => Reduce #3 expression call operator "^"
	"/=" => Reduce #3 expression call operator "^"
	"%=" => Reduce #3 expression call operator "^"
	"&&=" => Reduce #3 expression call operator "^"
	"||=" => Reduce #3 expression call operator "^"
	"&=" => Reduce #3 expression call operator "^"
	"|=" => Reduce #3 expression call operator "^"
	"<<=" => Reduce #3 expression call operator "^"
	">>=" => Reduce #3 expression call operator "^"
	"||" => Reduce #3 expression call operator "^"
	"&&" => Reduce #3 expression call operator "^"
	'|' => Reduce #3 expression call operator "^"
	"==" => Shift goto 135
	"!=" => Shift goto 136
	"<=" => Shift goto 137
	'<' => Shift goto 138
	">=" => Shift goto 139
	'>' => Shift goto 140
	'+' => Shift goto 141
	'-' => Shift goto 142
	'*' => Shift goto 143
	'/' => Shift goto 144
	'%' => Shift goto 145
	"<<" => Shift goto 146
	">>" => Shift goto 147
	'.' => Shift goto 148
	"->" => Reduce #3 expression call operator "^"
[191]
	'(' => Shift goto 115
	')' => Reduce #3 expression call operator "="
	';' => Reduce #3 expression call operator "="
	',' => Reduce #3 expression call operator "="
	'}' => Reduce #3 expression call operator "="
	'&' => Shift goto 117
	'^' => Shift goto 118
	'=' => Reduce #3 expression call operator "="
	'[' => Shift goto 120
	']' => Reduce #3 expression call operator "="
	"+=" => Reduce #3 expression call operator "="
	"-=" => Reduce #3 expression call operator "="
	"*=" => Reduce #3 expression call operator "="
	"/=" => Reduce #3 expression call operator "="
	"%=" => Reduce #3 expression call operator "="
	"&&=" => Reduce #3 expression call operator "="
	"||=" => Reduce #3 expression call operator "="
	"&=" => Reduce #3 expression call operator "="
	"|=" => Reduce #3 expression call operator "="
	"<<=" => Reduce #3 expression call operator "="
	">>=" => Reduce #3 expression call operator "="
	"||" => Shift goto 132
	"&&" => Shift goto 133
	'|' => Shift goto 134
	"==" => Shift goto 135
	"!=" => Shift goto 136
	"<=" => Shift goto 137
	'<' => Shift goto 138
	">=" => Shift goto 139
	'>' => Shift goto 140
	'+' => Shift goto 141
	'-' => Shift goto 142
	'*' => Shift goto 143
	'/' => Shift goto 144
	'%' => Shift goto 145
	"<<" => Shift goto 146
	">>" => Shift goto 147
	'.' => Shift goto 148
	"->" => Reduce #3 expression call operator "="
[192]
	']' => Shift goto 242
[193]
	'(' => Shift goto 115
	')' => Reduce #3 expression call assign_operator "+"
	';' => Reduce #3 expression call assign_operator "+"
	',' => Reduce #3 expression call assign_operator "+"
	'}' => Reduce #3 expression call assign_operator "+"
	'&' => Shift goto 117
	'^' => Shift goto 118
	'=' => Reduce #3 expression call assign_operator "+"
	'[' => Shift goto 120
	']' => Reduce #3 expression call assign_operator "+"
	"+=" => Reduce #3 expression call assign_operator "+"
	"-=" => Reduce #3 expression call assign_operator "+"
	"*=" => Reduce #3 expression call assign_operator "+"
	"/=" => Reduce #3 expression call assign_operator "+"
	"%=" => Reduce #3 expression call assign_operator "+"
	"&&=" => Reduce #3 expression call assign_operator "+"
	"||=" => Reduce #3 expression call assign_operator "+"
	"&=" => Reduce #3 expression call assign_operator "+"
	"|=" => Reduce #3 expression call assign_operator "+"
	"<<=" => Reduce #3 expression call assign_operator "+"
	">>=" => Reduce #3 expression call assign_operator "+"
	"||" => Shift goto 132
	"&&" => Shift goto 133
	'|' => Shift goto 134
	"==" => Shift goto 135
	"!=" => Shift goto 136
	"<=" => Shift goto 137
	'<' => Shift goto 138
	">=" => Shift goto 139
	'>' => Shift goto 140
	'+' => Shift goto 141
	'-' => Shift goto 142
	'*' => Shift goto 143
	'/' => Shift goto 144
	'%' => Shift goto 145
	"<<" => Shift goto 146
	">>" => Shift goto 147
	'.' => Shift goto 148
	"->" => Reduce #3 expression call assign_operator "+"
[194]
	'(' => Shift goto 115
	')' => Reduce #3 expression call assign_operator "-"
	';' => Reduce #3 expression call assign_operator "-"
	',' => Reduce #3 expression call assign_operator "-"
	'}' => Reduce #3 expression call assign_operator "-"
	'&' => Shift goto 117
	'^' => Shift goto 118
	'=' => Reduce #3 expression call assign_operator "-"
	'[' => Shift goto 120
	']' => Reduce #3 expression call assign_operator "-"
	"+=" => Reduce #3 expression call assign_operator "-"
	"-=" => Reduce #3 expression call assign_operator "-"
	"*=" => Reduce #3 expression call assign_operator "-"
	"/=" => Reduce #3 expression call assign_operator "-"
	"%=" => Reduce #3 expression call assign_operator "-"
	"&&=" => Reduce #3 expression call assign_operator "-"
	"||=" => Reduce #3 expression call assign_operator "-"
	"&=" => Reduce #3 expression call assign_operator "-"
	"|=" => Reduce #3 expression call assign_operator "-"
	"<<=" => Reduce #3 expression call assign_operator "-"
	">>=" => Reduce #3 expression call assign_operator "-"
	"||" => Shift goto 132
	"&&" => Shift goto 133
	'|' => Shift goto 134
	"==" => Shift goto 135
	"!=" => Shift goto 136
	"<=" => Shift goto 137
	'<' => Shift goto 138
	">=" => Shift goto 139
	'>' => Shift goto 140
	'+' => Shift goto 141
	'-' => Shift goto 142
	'*' => Shift goto 143
	'/' => Shift goto 144
	'%' => Shift goto 145
	"<<" => Shift goto 146
	">>" => Shift goto 147
	'.' => Shift goto 148
	"->" => Reduce #3 expression call assign_operator "-"
[195]
	'(' => Shift goto 115
	')' => Reduce #3 expression call assign_operator "*"
	';' => Reduce #3 expression call assign_operator "*"
	',' => Reduce #3 expression call assign_operator "*"
	'}' => Reduce #3 expression call assign_operator "*"
	'&' => Shift goto 117
	'^' => Shift goto 118
	'=' => Reduce #3 expression call assign_operator "*"
	'[' => Shift goto 120
	']' => Reduce #3 expression call assign_operator "*"
	"+=" => Reduce #3 expression call assign_operator "*"
	"-=" => Reduce #3 expression call assign_operator "*"
	"*=" => Reduce #3 expression call assign_operator "*"
	"/=" => Reduce #3 expression call assign_operator "*"
	"%=" => Reduce #3 expression call assign_operator "*"
	"&&=" => Reduce #3 expression call assign_operator "*"
	"||=" => Reduce #3 expression call assign_operator "*"
	"&=" => Reduce #3 expression call assign_operator "*"
	"|=" => Reduce #3 expression call assign_operator "*"
	"<<=" => Reduce #3 expression call assign_operator "*"
	">>=" => Reduce #3 expression call assign_operator "*"
	"||" => Shift goto 132
	"&&" => Shift goto 133
	'|' => Shift goto 134
	"==" => Shift goto 135
	"!=" => Shift goto 136
	"<=" => Shift goto 137
	'<' => Shift goto 138
	">=" => Shift goto 139
	'>' => Shift goto 140
	'+' => Shift goto 141
	'-' => Shift goto 142
	'*' => Shift goto 143
	'/' => Shift goto 144
	'%' => Shift goto 145
	"<<" => Shift goto 146
	">>" => Shift goto 147
	'.' => Shift goto 148
	"->" => Reduce #3 expression call assign_operator "*"
[196]
	'(' => Shift goto 115
	')' => Reduce #3 expression call assign_operator "/"
	';' => Reduce #3 expression call assign_operator "/"
	',' => Reduce #3 expression call assign_operator "/"
	'}' => Reduce #3 expression call assign_operator "/"
	'&' => Shift goto 117
	'^' => Shift goto 118
	'=' => Reduce #3 expression call assign_operator "/"
	'[' => Shift goto 120
	']' => Reduce #3 expression call assign_operator "/"
	"+=" => Reduce #3 expression call assign_operator "/"
	"-=" => Reduce #3 expression call assign_operator "/"
	"*=" => Reduce #3 expression call assign_operator "/"
	"/=" => Reduce #3 expression call assign_operator "/"
	"%=" => Reduce #3 expression call assign_operator "/"
	"&&=" => Reduce #3 expression call assign_operator "/"
	"||=" => Reduce #3 expression call assign_operator "/"
	"&=" => Reduce #3 expression call assign_operator "/"
	"|=" => Reduce #3 expression call assign_operator "/"
	"<<=" => Reduce #3 expression call assign_operator "/"
	">>=" => Reduce #3 expression call assign_operator "/"
	"||" => Shift goto 132
	"&&" => Shift goto 133
	'|' => Shift goto 134
	"==" => Shift goto 135
	"!=" => Shift goto 136
	"<=" => Shift goto 137
	'<' => Shift goto 138
	">=" => Shift goto 139
	'>' => Shift goto 140
	'+' => Shift goto 141
	'-' => Shift goto 142
	'*' => Shift goto 143
	'/' => Shift goto 144
	'%' => Shift goto 145
	"<<" => Shift goto 146
	">>" => Shift goto 147
	'.' => Shift goto 148
	"->" => Reduce #3 expression call assign_operator "/"
[197]
	'(' => Shift goto 115
	')' => Reduce #3 expression call assign_operator "%"
	';' => Reduce #3 expression call assign_operator "%"
	',' => Reduce #3 expression call assign_operator "%"
	'}' => Reduce #3 expression call assign_operator "%"
	'&' => Shift goto 117
	'^' => Shift goto 118
	'=' => Reduce #3 expression call assign_operator "%"
	'[' => Shift goto 120
	']' => Reduce #3 expression call assign_operator "%"
	"+=" => Reduce #3 expression call assign_operator "%"
	"-=" => Reduce #3 expression call assign_operator "%"
	"*=" => Reduce #3 expression call assign_operator "%"
	"/=" => Reduce #3 expression call assign_operator "%"
	"%=" => Reduce #3 expression call assign_operator "%"
	"&&=" => Reduce #3 expression call assign_operator "%"
	"||=" => Reduce #3 expression call assign_operator "%"
	"&=" => Reduce #3 expression call assign_operator "%"
	"|=" => Reduce #3 expression call assign_operator "%"
	"<<=" => Reduce #3 expression call assign_operator "%"
	">>=" => Reduce #3 expression call assign_operator "%"
	"||" => Shift goto 132
	"&&" => Shift goto 133
	'|' => Shift goto 134
	"==" => Shift goto 135
	"!=" => Shift goto 136
	"<=" => Shift goto 137
	'<' => Shift goto 138
	">=" => Shift goto 139
	'>' => Shift goto 140
	'+' => Shift goto 141
	'-' => Shift goto 142
	'*' => Shift goto 143
	'/' => Shift goto 144
	'%' => Shift goto 145
	"<<" => Shift goto 146
	">>" => Shift goto 147
	'.' => Shift goto 148
	"->" => Reduce #3 expression call assign_operator "%"
[198]
	'(' => Shift goto 115
	')' => Reduce #3 expression call assign_operator "&&"
	';' => Reduce #3 expression call assign_operator "&&"
	',' => Reduce #3 expression call assign_operator "&&"
	'}' => Reduce #3 expression call assign_operator "&&"
	'&' => Shift goto 117
	'^' => Shift goto 118
	'=' => Reduce #3 expression call assign_operator "&&"
	'[' => Shift goto 120
	']' => Reduce #3 expression call assign_operator "&&"
	"+=" => Reduce #3 expression call assign_operator "&&"
	"-=" => Reduce #3 expression call assign_operator "&&"
	"*=" => Reduce #3 expression call assign_operator "&&"
	"/=" => Reduce #3 expression call assign_operator "&&"
	"%=" => Reduce #3 expression call assign_operator "&&"
	"&&=" => Reduce #3 expression call assign_operator "&&"
	"||=" => Reduce #3 expression call assign_operator "&&"
	"&=" => Reduce #3 expression call assign_operator "&&"
	"|=" => Reduce #3 expression call assign_operator "&&"
	"<<=" => Reduce #3 expression call assign_operator "&&"
	">>=" => Reduce #3 expression call assign_operator "&&"
	"||" => Shift goto 132
	"&&" => Shift goto 133
	'|' => Shift goto 134
	"==" => Shift goto 135
	"!=" => Shift goto 136
	"<=" => Shift goto 137
	'<' => Shift goto 138
	">=" => Shift goto 139
	'>' => Shift goto 140
	'+' => Shift goto 141
	'-' => Shift goto 142
	'*' => Shift goto 143
	'/' => Shift goto 144
	'%' => Shift goto 145
	"<<" => Shift goto 146
	">>" => Shift goto 147
	'.' => Shift goto 148
	"->" => Reduce #3 expression call assign_operator "&&"
[199]
	'(' => Shift goto 115
	')' => Reduce #3 expression call assign_operator "||"
	';' => Reduce #3 expression call assign_operator "||"
	',' => Reduce #3 expression call assign_operator "||"
	'}' => Reduce #3 expression call assign_operator "||"
	'&' => Shift goto 117
	'^' => Shift goto 118
	'=' => Reduce #3 expression call assign_operator "||"
	'[' => Shift goto 120
	']' => Reduce #3 expression call assign_operator "||"
	"+=" => Reduce #3 expression call assign_operator "||"
	"-=" => Reduce #3 expression call assign_operator "||"
	"*=" => Reduce #3 expression call assign_operator "||"
	"/=" => Reduce #3 expression call assign_operator "||"
	"%=" => Reduce #3 expression call assign_operator "||"
	"&&=" => Reduce #3 expression call assign_operator "||"
	"||=" => Reduce #3 expression call assign_operator "||"
	"&=" => Reduce #3 expression call assign_operator "||"
	"|=" => Reduce #3 expression call assign_operator "||"
	"<<=" => Reduce #3 expression call assign_operator "||"
	">>=" => Reduce #3 expression call assign_operator "||"
	"||" => Shift goto 132
	"&&" => Shift goto 133
	'|' => Shift goto 134
	"==" => Shift goto 135
	"!=" => Shift goto 136
	"<=" => Shift goto 137
	'<' => Shift goto 138
	">=" => Shift goto 139
	'>' => Shift goto 140
	'+' => Shift goto 141
	'-' => Shift goto 142
	'*' => Shift goto 143
	'/' => Shift goto 144
	'%' => Shift goto 145
	"<<" => Shift goto 146
	">>" => Shift goto 147
	'.' => Shift goto 148
	"->" => Reduce #3 expression call assign_operator "||"
[200]
	'(' => Shift goto 115
	')' => Reduce #3 expression call assign_operator "&"
	';' => Reduce #3 expression call assign_operator "&"
	',' => Reduce #3 expression call assign_operator "&"
	'}' => Reduce #3 expression call assign_operator "&"
	'&' => Shift goto 117
	'^' => Shift goto 118
	'=' => Reduce #3 expression call assign_operator "&"
	'[' => Shift goto 120
	']' => Reduce #3 expression call assign_operator "&"
	"+=" => Reduce #3 expression call assign_operator "&"
	"-=" => Reduce #3 expression call assign_operator "&"
	"*=" => Reduce #3 expression call assign_operator "&"
	"/=" => Reduce #3 expression call assign_operator "&"
	"%=" => Reduce #3 expression call assign_operator "&"
	"&&=" => Reduce #3 expression call assign_operator "&"
	"||=" => Reduce #3 expression call assign_operator "&"
	"&=" => Reduce #3 expression call assign_operator "&"
	"|=" => Reduce #3 expression call assign_operator "&"
	"<<=" => Reduce #3 expression call assign_operator "&"
	">>=" => Reduce #3 expression call assign_operator "&"
	"||" => Shift goto 132
	"&&" => Shift goto 133
	'|' => Shift goto 134
	"==" => Shift goto 135
	"!=" => Shift goto 136
	"<=" => Shift goto 137
	'<' => Shift goto 138
	">=" => Shift goto 139
	'>' => Shift goto 140
	'+' => Shift goto 141
	'-' => Shift goto 142
	'*' => Shift goto 143
	'/' => Shift goto 144
	'%' => Shift goto 145
	"<<" => Shift goto 146
	">>" => Shift goto 147
	'.' => Shift goto 148
	"->" => Reduce #3 expression call assign_operator "&"
[201]
	'(' => Shift goto 115
	')' => Reduce #3 expression call assign_operator "|"
	';' => Reduce #3 expression call assign_operator "|"
	',' => Reduce #3 expression call assign_operator "|"
	'}' => Reduce #3 expression call assign_operator "|"
	'&' => Shift goto 117
	'^' => Shift goto 118
	'=' => Reduce #3 expression call assign_operator "|"
	'[' => Shift goto 120
	']' => Reduce #3 expression call assign_operator "|"
	"+=" => Reduce #3 expression call assign_operator "|"
	"-=" => Reduce #3 expression call assign_operator "|"
	"*=" => Reduce #3 expression call assign_operator "|"
	"/=" => Reduce #3 expression call assign_operator "|"
	"%=" => Reduce #3 expression call assign_operator "|"
	"&&=" => Reduce #3 expression call assign_operator "|"
	"||=" => Reduce #3 expression call assign_operator "|"
	"&=" => Reduce #3 expression call assign_operator "|"
	"|=" => Reduce #3 expression call assign_operator "|"
	"<<=" => Reduce #3 expression call assign_operator "|"
	">>=" => Reduce #3 expression call assign_operator "|"
	"||" => Shift goto 132
	"&&" => Shift goto 133
	'|' => Shift goto 134
	"==" => Shift goto 135
	"!=" => Shift goto 136
	"<=" => Shift goto 137
	'<' => Shift goto 138
	">=" => Shift goto 139
	'>' => Shift goto 140
	'+' => Shift goto 141
	'-' => Shift goto 142
	'*' => Shift goto 143
	'/' => Shift goto 144
	'%' => Shift goto 145
	"<<" => Shift goto 146
	">>" => Shift goto 147
	'.' => Shift goto 148
	"->" => Reduce #3 expression call assign_operator "|"
[202]
	'(' => Shift goto 115
	')' => Reduce #3 expression call assign_operator "<<"
	';' => Reduce #3 expression call assign_operator "<<"
	',' => Reduce #3 expression call assign_operator "<<"
	'}' => Reduce #3 expression call assign_operator "<<"
	'&' => Shift goto 117
	'^' => Shift goto 118
	'=' => Reduce #3 expression call assign_operator "<<"
	'[' => Shift goto 120
	']' => Reduce #3 expression call assign_operator "<<"
	"+=" => Reduce #3 expression call assign_operator "<<"
	"-=" => Reduce #3 expression call assign_operator "<<"
	"*=" => Reduce #3 expression call assign_operator "<<"
	"/=" => Reduce #3 expression call assign_operator "<<"
	"%=" => Reduce #3 expression call assign_operator "<<"
	"&&=" => Reduce #3 expression call assign_operator "<<"
	"||=" => Reduce #3 expression call assign_operator "<<"
	"&=" => Reduce #3 expression call assign_operator "<<"
	"|=" => Reduce #3 expression call assign_operator "<<"
	"<<=" => Reduce #3 expression call assign_operator "<<"
	">>=" => Reduce #3 expression call assign_operator "<<"
	"||" => Shift goto 132
	"&&" => Shift goto 133
	'|' => Shift goto 134
	"==" => Shift goto 135
	"!=" => Shift goto 136
	"<=" => Shift goto 137
	'<' => Shift goto 138
	">=" => Shift goto 139
	'>' => Shift goto 140
	'+' => Shift goto 141
	'-' => Shift goto 142
	'*' => Shift goto 143
	'/' => Shift goto 144
	'%' => Shift goto 145
	"<<" => Shift goto 146
	">>" => Shift goto 147
	'.' => Shift goto 148
	"->" => Reduce #3 expression call assign_operator "<<"
[203]
	'(' => Shift goto 115
	')' => Reduce #3 expression call assign_operator ">>"
	';' => Reduce #3 expression call assign_operator ">>"
	',' => Reduce #3 expression call assign_operator ">>"
	'}' => Reduce #3 expression call assign_operator ">>"
	'&' => Shift goto 117
	'^' => Shift goto 118
	'=' => Reduce #3 expression call assign_operator ">>"
	'[' => Shift goto 120
	']' => Reduce #3 expression call assign_operator ">>"
	"+=" => Reduce #3 expression call assign_operator ">>"
	"-=" => Reduce #3 expression call assign_operator ">>"
	"*=" => Reduce #3 expression call assign_operator ">>"
	"/=" => Reduce #3 expression call assign_operator ">>"
	"%=" => Reduce #3 expression call assign_operator ">>"
	"&&=" => Reduce #3 expression call assign_operator ">>"
	"||=" => Reduce #3 expression call assign_operator ">>"
	"&=" => Reduce #3 expression call assign_operator ">>"
	"|=" => Reduce #3 expression call assign_operator ">>"
	"<<=" => Reduce #3 expression call assign_operator ">>"
	">>=" => Reduce #3 expression call assign_operator ">>"
	"||" => Shift goto 132
	"&&" => Shift goto 133
	'|' => Shift goto 134
	"==" => Shift goto 135
	"!=" => Shift goto 136
	"<=" => Shift goto 137
	'<' => Shift goto 138
	">=" => Shift goto 139
	'>' => Shift goto 140
	'+' => Shift goto 141
	'-' => Shift goto 142
	'*' => Shift goto 143
	'/' => Shift goto 144
	'%' => Shift goto 145
	"<<" => Shift goto 146
	">>" => Shift goto 147
	'.' => Shift goto 148
	"->" => Reduce #3 expression call assign_operator ">>"
[204]
	'(' => Shift goto 115
	')' => Reduce #3 expression call operator "||"
	';' => Reduce #3 expression call operator "||"
	',' => Reduce #3 expression call operator "||"
	'}' => Reduce #3 expression call operator "||"
	'&' => Shift goto 117
	'^' => Shift goto 118
	'=' => Reduce #3 expression call operator "||"
	'[' => Shift goto 120
	']' => Reduce #3 expression call operator "||"
	"+=" => Reduce #3 expression call operator "||"
	"-=" => Reduce #3 expression call operator "||"
	"*=" => Reduce #3 expression call operator "||"
	"/=" => Reduce #3 expression call operator "||"
	"%=" => Reduce #3 expression call operator "||"
	"&&=" => Reduce #3 expression call operator "||"
	"||=" => Reduce #3 expression call operator "||"
	"&=" => Reduce #3 expression call operator "||"
	"|=" => Reduce #3 expression call operator "||"
	"<<=" => Reduce #3 expression call operator "||"
	">>=" => Reduce #3 expression call operator "||"
	"||" => Reduce #3 expression call operator "||"
	"&&" => Shift goto 133
	'|' => Shift goto 134
	"==" => Shift goto 135
	"!=" => Shift goto 136
	"<=" => Shift goto 137
	'<' => Shift goto 138
	">=" => Shift goto 139
	'>' => Shift goto 140
	'+' => Shift goto 141
	'-' => Shift goto 142
	'*' => Shift goto 143
	'/' => Shift goto 144
	'%' => Shift goto 145
	"<<" => Shift goto 146
	">>" => Shift goto 147
	'.' => Shift goto 148
	"->" => Reduce #3 expression call operator "||"
[205]
	'(' => Shift goto 115
	')' => Reduce #3 expression call operator "&&"
	';' => Reduce #3 expression call operator "&&"
	',' => Reduce #3 expression call operator "&&"
	'}' => Reduce #3 expression call operator "&&"
	'&' => Shift goto 117
	'^' => Shift goto 118
	'=' => Reduce #3 expression call operator "&&"
	'[' => Shift goto 120
	']' => Reduce #3 expression call operator "&&"
	"+=" => Reduce #3 expression call operator "&&"
	"-=" => Reduce #3 expression call operator "&&"
	"*=" => Reduce #3 expression call operator "&&"
	"/=" => Reduce #3 expression call operator "&&"
	"%=" => Reduce #3 expression call operator "&&"
	"&&=" => Reduce #3 expression call operator "&&"
	"||=" => Reduce #3 expression call operator "&&"
	"&=" => Reduce #3 expression call operator "&&"
	"|=" => Reduce #3 expression call operator "&&"
	"<<=" => Reduce #3 expression call operator "&&"
	">>=" => Reduce #3 expression call operator "&&"
	"||" => Reduce #3 expression call operator "&&"
	"&&" => Reduce #3 expression call operator "&&"
	'|' => Shift goto 134
	"==" => Shift goto 135
	"!=" => Shift goto 136
	"<=" => Shift goto 137
	'<' => Shift goto 138
	">=" => Shift goto 139
	'>' => Shift goto 140
	'+' => Shift goto 141
	'-' => Shift goto 142
	'*' => Shift goto 143
	'/' => Shift goto 144
	'%' => Shift goto 145
	"<<" => Shift goto 146
	">>" => Shift goto 147
	'.' => Shift goto 148
	"->" => Reduce #3 expression call operator "&&"
[206]
	'(' => Shift goto 115
	')' => Reduce #3 expression call operator "|"
	';' => Reduce #3 expression call operator "|"
	',' => Reduce #3 expression call operator "|"
	'}' => Reduce #3 expression call operator "|"
	'&' => Shift goto 117
	'^' => Shift goto 118
	'=' => Reduce #3 expression call operator "|"
	'[' => Shift goto 120
	']' => Reduce #3 expression call operator "|"
	"+=" => Reduce #3 expression call operator "|"
	"-=" => Reduce #3 expression call operator "|"
	"*=" => Reduce #3 expression call operator "|"
	"/=" => Reduce #3 expression call operator "|"
	"%=" => Reduce #3 expression call operator "|"
	"&&=" => Reduce #3 expression call operator "|"
	"||=" => Reduce #3 expression call operator "|"
	"&=" => Reduce #3 expression call operator "|"
	"|=" => Reduce #3 expression call operator "|"
	"<<=" => Reduce #3 expression call operator "|"
	">>=" => Reduce #3 expression call operator "|"
	"||" => Reduce #3 expression call operator "|"
	"&&" => Reduce #3 expression call operator "|"
	'|' => Reduce #3 expression call operator "|"
	"==" => Shift goto 135
	"!=" => Shift goto 136
	"<=" => Shift goto 137
	'<' => Shift goto 138
	">=" => Shift goto 139
	'>' => Shift goto 140
	'+' => Shift goto 141
	'-' => Shift goto 142
	'*' => Shift goto 143
	'/' => Shift goto 144
	'%' => Shift goto 145
	"<<" => Shift goto 146
	">>" => Shift goto 147
	'.' => Shift goto 148
	"->" => Reduce #3 expression call operator "|"
[207]
	'(' => Shift goto 115
	')' => Reduce #3 expression call operator "=="
	';' => Reduce #3 expression call operator "=="
	',' => Reduce #3 expression call operator "=="
	'}' => Reduce #3 expression call operator "=="
	'&' => Reduce #3 expression call operator "=="
	'^' => Reduce #3 expression call operator "=="
	'=' => Reduce #3 expression call operator "=="
	'[' => Shift goto 120
	']' => Reduce #3 expression call operator "=="
	"+=" => Reduce #3 expression call operator "=="
	"-=" => Reduce #3 expression call operator "=="
	"*=" => Reduce #3 expression call operator "=="
	"/=" => Reduce #3 expression call operator "=="
	"%=" => Reduce #3 expression call operator "=="
	"&&=" => Reduce #3 expression call operator "=="
	"||=" => Reduce #3 expression call operator "=="
	"&=" => Reduce #3 expression call operator "=="
	"|=" => Reduce #3 expression call operator "=="
	"<<=" => Reduce #3 expression call operator "=="
	">>=" => Reduce #3 expression call operator "=="
	"||" => Reduce #3 expression call operator "=="
	"&&" => Reduce #3 expression call operator "=="
	'|' => Reduce #3 expression call operator "=="
	"==" => Reduce #3 expression call operator "=="
	"!=" => Reduce #3 expression call operator "=="
	"<=" => Reduce #3 expression call operator "=="
	'<' => Reduce #3 expression call operator "=="
	">=" => Reduce #3 expression call operator "=="
	'>' => Reduce #3 expression call operator "=="
	'+' => Shift goto 141
	'-' => Shift goto 142
	'*' => Shift goto 143
	'/' => Shift goto 144
	'%' => Shift goto 145
	"<<" => Shift goto 146
	">>" => Shift goto 147
	'.' => Shift goto 148
	"->" => Reduce #3 expression call operator "=="
[208]
	'(' => Shift goto 115
	')' => Reduce #3 expression call operator "!="
	';' => Reduce #3 expression call operator "!="
	',' => Reduce #3 expression call operator "!="
	'}' => Reduce #3 expression call operator "!="
	'&' => Reduce #3 expression call operator "!="
	'^' => Reduce #3 expression call operator "!="
	'=' => Reduce #3 expression call operator "!="
	'[' => Shift goto 120
	']' => Reduce #3 expression call operator "!="
	"+=" => Reduce #3 expression call operator "!="
	"-=" => Reduce #3 expression call operator "!="
	"*=" => Reduce #3 expression call operator "!="
	"/=" => Reduce #3 expression call operator "!="
	"%=" => Reduce #3 expression call operator "!="
	"&&=" => Reduce #3 expression call operator "!="
	"||=" => Reduce #3 expression call operator "!="
	"&=" => Reduce #3 expression call operator "!="
	"|=" => Reduce #3 expression call operator "!="
	"<<=" => Reduce #3 expression call operator "!="
	">>=" => Reduce #3 expression call operator "!="
	"||" => Reduce #3 expression call operator "!="
	"&&" => Reduce #3 expression call operator "!="
	'|' => Reduce #3 expression call operator "!="
	"==" => Reduce #3 expression call operator "!="
	"!=" => Reduce #3 expression call operator "!="
	"<=" => Reduce #3 expression call operator "!="
	'<' => Reduce #3 expression call operator "!="
	">=" => Reduce #3 expression call operator "!="
	'>' => Reduce #3 expression call operator "!="
	'+' => Shift goto 141
	'-' => Shift goto 142
	'*' => Shift goto 143
	'/' => Shift goto 144
	'%' => Shift goto 145
	"<<" => Shift goto 146
	">>" => Shift goto 147
	'.' => Shift goto 148
	"->" => Reduce #3 expression call operator "!="
[209]
	'(' => Shift goto 115
	')' => Reduce #3 expression call operator "<="
	';' => Reduce #3 expression call operator "<="
	',' => Reduce #3 expression call operator "<="
	'}' => Reduce #3 expression call operator "<="
	'&' => Reduce #3 expression call operator "<="
	'^' => Reduce #3 expression call operator "<="
	'=' => Reduce #3 expression call operator "<="
	'[' => Shift goto 120
	']' => Reduce #3 expression call operator "<="
	"+=" => Reduce #3 expression call operator "<="
	"-=" => Reduce #3 expression call operator "<="
	"*=" => Reduce #3 expression call operator "<="
	"/=" => Reduce #3 expression call operator "<="
	"%=" => Reduce #3 expression call operator "<="
	"&&=" => Reduce #3 expression call operator "<="
	"||=" => Reduce #3 expression call operator "<="
	"&=" => Reduce #3 expression call operator "<="
	"|=" => Reduce #3 expression call operator "<="
	"<<=" => Reduce #3 expression call operator "<="
	">>=" => Reduce #3 expression call operator "<="
	"||" => Reduce #3 expression call operator "<="
	"&&" => Reduce #3 expression call operator "<="
	'|' => Reduce #3 expression call operator "<="
	"==" => Reduce #3 expression call operator "<="
	"!=" => Reduce #3 expression call operator "<="
	"<=" => Reduce #3 expression call operator "<="
	'<' => Reduce #3 expression call operator "<="
	">=" => Reduce #3 expression call operator "<="
	'>' => Reduce #3 expression call operator "<="
	'+' => Shift goto 141
	'-' => Shift goto 142
	'*' => Shift goto 143
	'/' => Shift goto 144
	'%' => Shift goto 145
	"<<" => Shift goto 146
	">>" => Shift goto 147
	'.' => Shift goto 148
	"->" => Reduce #3 expression call operator "<="
[210]
	'(' => Shift goto 115
	')' => Reduce #3 expression call operator "<"
	';' => Reduce #3 expression call operator "<"
	',' => Reduce #3 expression call operator "<"
	'}' => Reduce #3 expression call operator "<"
	'&' => Reduce #3 expression call operator "<"
	'^' => Reduce #3 expression call operator "<"
	'=' => Reduce #3 expression call operator "<"
	'[' => Shift goto 120
	']' => Reduce #3 expression call operator "<"
	"+=" => Reduce #3 expression call operator "<"
	"-=" => Reduce #3 expression call operator "<"
	"*=" => Reduce #3 expression call operator "<"
	"/=" => Reduce #3 expression call operator "<"
	"%=" => Reduce #3 expression call operator "<"
	"&&=" => Reduce #3 expression call operator "<"
	"||=" => Reduce #3 expression call operator "<"
	"&=" => Reduce #3 expression call operator "<"
	"|=" => Reduce #3 expression call operator "<"
	"<<=" => Reduce #3 expression call operator "<"
	">>=" => Reduce #3 expression call operator "<"
	"||" => Reduce #3 expression call operator "<"
	"&&" => Reduce #3 expression call operator "<"
	'|' => Reduce #3 expression call operator "<"
	"==" => Reduce #3 expression call operator "<"
	"!=" => Reduce #3 expression call operator "<"
	"<=" => Reduce #3 expression call operator "<"
	'<' => Reduce #3 expression call operator "<"
	">=" => Reduce #3 expression call operator "<"
	'>' => Reduce #3 expression call operator "<"
	'+' => Shift goto 141
	'-' => Shift goto 142
	'*' => Shift goto 143
	'/' => Shift goto 144
	'%' => Shift goto 145
	"<<" => Shift goto 146
	">>" => Shift goto 147
	'.' => Shift goto 148
	"->" => Reduce #3 expression call operator "<"
[211]
	'(' => Shift goto 115
	')' => Reduce #3 expression call operator ">="
	';' => Reduce #3 expression call operator ">="
	',' => Reduce #3 expression call operator ">="
	'}' => Reduce #3 expression call operator ">="
	'&' => Reduce #3 expression call operator ">="
	'^' => Reduce #3 expression call operator ">="
	'=' => Reduce #3 expression call operator ">="
	'[' => Shift goto 120
	']' => Reduce #3 expression call operator ">="
	"+=" => Reduce #3 expression call operator ">="
	"-=" => Reduce #3 expression call operator ">="
	"*=" => Reduce #3 expression call operator ">="
	"/=" => Reduce #3 expression call operator ">="
	"%=" => Reduce #3 expression call operator ">="
	"&&=" => Reduce #3 expression call operator ">="
	"||=" => Reduce #3 expression call operator ">="
	"&=" => Reduce #3 expression call operator ">="
	"|=" => Reduce #3 expression call operator ">="
	"<<=" => Reduce #3 expression call operator ">="
	">>=" => Reduce #3 expression call operator ">="
	"||" => Reduce #3 expression call operator ">="
	"&&" => Reduce #3 expression call operator ">="
	'|' => Reduce #3 expression call operator ">="
	"==" => Reduce #3 expression call operator ">="
	"!=" => Reduce #3 expression call operator ">="
	"<=" => Reduce #3 expression call operator ">="
	'<' => Reduce #3 expression call operator ">="
	">=" => Reduce #3 expression call operator ">="
	'>' => Reduce #3 expression call operator ">="
	'+' => Shift goto 141
	'-' => Shift goto 142
	'*' => Shift goto 143
	'/' => Shift goto 144
	'%' => Shift goto 145
	"<<" => Shift goto 146
	">>" => Shift goto 147
	'.' => Shift goto 148
	"->" => Reduce #3 expression call operator ">="
[212]
	'(' => Shift goto 115
	')' => Reduce #3 expression call operator ">"
	';' => Reduce #3 expression call operator ">"
	',' => Reduce #3 expression call operator ">"
	'}' => Reduce #3 expression call operator ">"
	'&' => Reduce #3 expression call operator ">"
	'^' => Reduce #3 expression call operator ">"
	'=' => Reduce #3 expression call operator ">"
	'[' => Shift goto 120
	']' => Reduce #3 expression call operator ">"
	"+=" => Reduce #3 expression call operator ">"
	"-=" => Reduce #3 expression call operator ">"
	"*=" => Reduce #3 expression call operator ">"
	"/=" => Reduce #3 expression call operator ">"
	"%=" => Reduce #3 expression call operator ">"
	"&&=" => Reduce #3 expression call operator ">"
	"||=" => Reduce #3 expression call operator ">"
	"&=" => Reduce #3 expression call operator ">"
	"|=" => Reduce #3 expression call operator ">"
	"<<=" => Reduce #3 expression call operator ">"
	">>=" => Reduce #3 expression call operator ">"
	"||" => Reduce #3 expression call operator ">"
	"&&" => Reduce #3 expression call operator ">"
	'|' => Reduce #3 expression call operator ">"
	"==" => Reduce #3 expression call operator ">"
	"!=" => Reduce #3 expression call operator ">"
	"<=" => Reduce #3 expression call operator ">"
	'<' => Reduce #3 expression call operator ">"
	">=" => Reduce #3 expression call operator ">"
	'>' => Reduce #3 expression call operator ">"
	'+' => Shift goto 141
	'-' => Shift goto 142
	'*' => Shift goto 143
	'/' => Shift goto 144
	'%' => Shift goto 145
	"<<" => Shift goto 146
	">>" => Shift goto 147
	'.' => Shift goto 148
	"->" => Reduce #3 expression call operator ">"
[213]
	'(' => Shift goto 115
	')' => Reduce #3 expression call operator "+"
	';' => Reduce #3 expression call operator "+"
	',' => Reduce #3 expression call operator "+"
	'}' => Reduce #3 expression call operator "+"
	'&' => Reduce #3 expression call operator "+"
	'^' => Reduce #3 expression call operator "+"
	'=' => Reduce #3 expression call operator "+"
	'[' => Shift goto 120
	']' => Reduce #3 expression call operator "+"
	"+=" => Reduce #3 expression call operator "+"
	"-=" => Reduce #3 expression call operator "+"
	"*=" => Reduce #3 expression call operator "+"
	"/=" => Reduce #3 expression call operator "+"
	"%=" => Reduce #3 expression call operator "+"
	"&&=" => Reduce #3 expression call operator "+"
	"||=" => Reduce #3 expression call operator "+"
	"&=" => Reduce #3 expression call operator "+"
	"|=" => Reduce #3 expression call operator "+"
	"<<=" => Reduce #3 expression call operator "+"
	">>=" => Reduce #3 expression call operator "+"
	"||" => Reduce #3 expression call operator "+"
	"&&" => Reduce #3 expression call operator "+"
	'|' => Reduce #3 expression call operator "+"
	"==" => Reduce #3 expression call operator "+"
	"!=" => Reduce #3 expression call operator "+"
	"<=" => Reduce #3 expression call operator "+"
	'<' => Reduce #3 expression call operator "+"
	">=" => Reduce #3 expression call operator "+"
	'>' => Reduce #3 expression call operator "+"
	'+' => Reduce #3 expression call operator "+"
	'-' => Reduce #3 expression call operator "+"
	'*' => Shift goto 143
	'/' => Shift goto 144
	'%' => Shift goto 145
	"<<" => Shift goto 146
	">>" => Shift goto 147
	'.' => Shift goto 148
	"->" => Reduce #3 expression call operator "+"
[214]
	'(' => Shift goto 115
	')' => Reduce #3 expression call operator "-"
	';' => Reduce #3 expression call operator "-"
	',' => Reduce #3 expression call operator "-"
	'}' => Reduce #3 expression call operator "-"
	'&' => Reduce #3 expression call operator "-"
	'^' => Reduce #3 expression call operator "-"
	'=' => Reduce #3 expression call operator "-"
	'[' => Shift goto 120
	']' => Reduce #3 expression call operator "-"
	"+=" => Reduce #3 expression call operator "-"
	"-=" => Reduce #3 expression call operator "-"
	"*=" => Reduce #3 expression call operator "-"
	"/=" => Reduce #3 expression call operator "-"
	"%=" => Reduce #3 expression call operator "-"
	"&&=" => Reduce #3 expression call operator "-"
	"||=" => Reduce #3 expression call operator "-"
	"&=" => Reduce #3 expression call operator "-"
	"|=" => Reduce #3 expression call operator "-"
	"<<=" => Reduce #3 expression call operator "-"
	">>=" => Reduce #3 expression call operator "-"
	"||" => Reduce #3 expression call operator "-"
	"&&" => Reduce #3 expression call operator "-"
	'|' => Reduce #3 expression call operator "-"
	"==" => Reduce #3 expression call operator "-"
	"!=" => Reduce #3 expression call operator "-"
	"<=" => Reduce #3 expression call operator "-"
	'<' => Reduce #3 expression call operator "-"
	">=" => Reduce #3 expression call operator "-"
	'>' => Reduce #3 expression call operator "-"
	'+' => Reduce #3 expression call operator "-"
	'-' => Reduce #3 expression call operator "-"
	'*' => Shift goto 143
	'/' => Shift goto 144
	'%' => Shift goto 145
	"<<" => Shift goto 146
	">>" => Shift goto 147
	'.' => Shift goto 148
	"->" => Reduce #3 expression call operator "-"
[215]
	'(' => Shift goto 115
	')' => Reduce #3 expression call operator "*"
	';' => Reduce #3 expression call operator "*"
	',' => Reduce #3 expression call operator "*"
	'}' => Reduce #3 expression call operator "*"
	'&' => Reduce #3 expression call operator "*"
	'^' => Reduce #3 expression call operator "*"
	'=' => Reduce #3 expression call operator "*"
	'[' => Shift goto 120
	']' => Reduce #3 expression call operator "*"
	"+=" => Reduce #3 expression call operator "*"
	"-=" => Reduce #3 expression call operator "*"
	"*=" => Reduce #3 expression call operator "*"
	"/=" => Reduce #3 expression call operator "*"
	"%=" => Reduce #3 expression call operator "*"
	"&&=" => Reduce #3 expression call operator "*"
	"||=" => Reduce #3 expression call operator "*"
	"&=" => Reduce #3 expression call operator "*"
	"|=" => Reduce #3 expression call operator "*"
	"<<=" => Reduce #3 expression call operator "*"
	">>=" => Reduce #3 expression call operator "*"
	"||" => Reduce #3 expression call operator "*"
	"&&" => Reduce #3 expression call operator "*"
	'|' => Reduce #3 expression call operator "*"
	"==" => Reduce #3 expression call operator "*"
	"!=" => Reduce #3 expression call operator "*"
	"<=" => Reduce #3 expression call operator "*"
	'<' => Reduce #3 expression call operator "*"
	">=" => Reduce #3 expression call operator "*"
	'>' => Reduce #3 expression call operator "*"
	'+' => Reduce #3 expression call operator "*"
	'-' => Reduce #3 expression call operator "*"
	'*' => Reduce #3 expression call operator "*"
	'/' => Reduce #3 expression call operator "*"
	'%' => Reduce #3 expression call operator "*"
	"<<" => Shift goto 146
	">>" => Shift goto 147
	'.' => Shift goto 148
	"->" => Reduce #3 expression call operator "*"
[216]
	'(' => Shift goto 115
	')' => Reduce #3 expression call operator "/"
	';' => Reduce #3 expression call operator "/"
	',' => Reduce #3 expression call operator "/"
	'}' => Reduce #3 expression call operator "/"
	'&' => Reduce #3 expression call operator "/"
	'^' => Reduce #3 expression call operator "/"
	'=' => Reduce #3 expression call operator "/"
	'[' => Shift goto 120
	']' => Reduce #3 expression call operator "/"
	"+=" => Reduce #3 expression call operator "/"
	"-=" => Reduce #3 expression call operator "/"
	"*=" => Reduce #3 expression call operator "/"
	"/=" => Reduce #3 expression call operator "/"
	"%=" => Reduce #3 expression call operator "/"
	"&&=" => Reduce #3 expression call operator "/"
	"||=" => Reduce #3 expression call operator "/"
	"&=" => Reduce #3 expression call operator "/"
	"|=" => Reduce #3 expression call operator "/"
	"<<=" => Reduce #3 expression call operator "/"
	">>=" => Reduce #3 expression call operator "/"
	"||" => Reduce #3 expression call operator "/"
	"&&" => Reduce #3 expression call operator "/"
	'|' => Reduce #3 expression call operator "/"
	"==" => Reduce #3 expression call operator "/"
	"!=" => Reduce #3 expression call operator "/"
	"<=" => Reduce #3 expression call operator "/"
	'<' => Reduce #3 expression call operator "/"
	">=" => Reduce #3 expression call operator "/"
	'>' => Reduce #3 expression call operator "/"
	'+' => Reduce #3 expression call operator "/"
	'-' => Reduce #3 expression call operator "/"
	'*' => Reduce #3 expression call operator "/"
	'/' => Reduce #3 expression call operator "/"
	'%' => Reduce #3 expression call operator "/"
	"<<" => Shift goto 146
	">>" => Shift goto 147
	'.' => Shift goto 148
	"->" => Reduce #3 expression call operator "/"
[217]
	'(' => Shift goto 115
	')' => Reduce #3 expression call operator "%"
	';' => Reduce #3 expression call operator "%"
	',' => Reduce #3 expression call operator "%"
	'}' => Reduce #3 expression call operator "%"
	'&' => Reduce #3 expression call operator "%"
	'^' => Reduce #3 expression call operator "%"
	'=' => Reduce #3 expression call operator "%"
	'[' => Shift goto 120
	']' => Reduce #3 expression call operator "%"
	"+=" => Reduce #3 expression call operator "%"
	"-=" => Reduce #3 expression call operator "%"
	"*=" => Reduce #3 expression call operator "%"
	"/=" => Reduce #3 expression call operator "%"
	"%=" => Reduce #3 expression call operator "%"
	"&&=" => Reduce #3 expression call operator "%"
	"||=" => Reduce #3 expression call operator "%"
	"&=" => Reduce #3 expression call operator "%"
	"|=" => Reduce #3 expression call operator "%"
	"<<=" => Reduce #3 expression call operator "%"
	">>=" => Reduce #3 expression call operator "%"
	"||" => Reduce #3 expression call operator "%"
	"&&" => Reduce #3 expression call operator "%"
	'|' => Reduce #3 expression call operator "%"
	"==" => Reduce #3 expression call operator "%"
	"!=" => Reduce #3 expression call operator "%"
	"<=" => Reduce #3 expression call operator "%"
	'<' => Reduce #3 expression call operator "%"
	">=" => Reduce #3 expression call operator "%"
	'>' => Reduce #3 expression call operator "%"
	'+' => Reduce #3 expression call operator "%"
	'-' => Reduce #3 expression call operator "%"
	'*' => Reduce #3 expression call operator "%"
	'/' => Reduce #3 expression call operator "%"
	'%' => Reduce #3 expression call operator "%"
	"<<" => Shift goto 146
	">>" => Shift goto 147
	'.' => Shift goto 148
	"->" => Reduce #3 expression call operator "%"
[218]
	'(' => Shift goto 115
	')' => Reduce #3 expression call operator "<<"
	';' => Reduce #3 expression call operator "<<"
	',' => Reduce #3 expression call operator "<<"
	'}' => Reduce #3 expression call operator "<<"
	'&' => Reduce #3 expression call operator "<<"
	'^' => Reduce #3 expression call operator "<<"
	'=' => Reduce #3 expression call operator "<<"
	'[' => Shift goto 120
	']' => Reduce #3 expression call operator "<<"
	"+=" => Reduce #3 expression call operator "<<"
	"-=" => Reduce #3 expression call operator "<<"
	"*=" => Reduce #3 expression call operator "<<"
	"/=" => Reduce #3 expression call operator "<<"
	"%=" => Reduce #3 expression call operator "<<"
	"&&=" => Reduce #3 expression call operator "<<"
	"||=" => Reduce #3 expression call operator "<<"
	"&=" => Reduce #3 expression call operator "<<"
	"|=" => Reduce #3 expression call operator "<<"
	"<<=" => Reduce #3 expression call operator "<<"
	">>=" => Reduce #3 expression call operator "<<"
	"||" => Reduce #3 expression call operator "<<"
	"&&" => Reduce #3 expression call operator "<<"
	'|' => Reduce #3 expression call operator "<<"
	"==" => Reduce #3 expression call operator "<<"
	"!=" => Reduce #3 expression call operator "<<"
	"<=" => Reduce #3 expression call operator "<<"
	'<' => Reduce #3 expression call operator "<<"
	">=" => Reduce #3 expression call operator "<<"
	'>' => Reduce #3 expression call operator "<<"
	'+' => Reduce #3 expression call operator "<<"
	'-' => Reduce #3 expression call operator "<<"
	'*' => Reduce #3 expression call operator "<<"
	'/' => Reduce #3 expression call operator "<<"
	'%' => Reduce #3 expression call operator "<<"
	"<<" => Reduce #3 expression call operator "<<"
	">>" => Reduce #3 expression call operator "<<"
	'.' => Shift goto 148
	"->" => Reduce #3 expression call operator "<<"
[219]
	'(' => Shift goto 115
	')' => Reduce #3 expression call operator ">>"
	';' => Reduce #3 expression call operator ">>"
	',' => Reduce #3 expression call operator ">>"
	'}' => Reduce #3 expression call operator ">>"
	'&' => Reduce #3 expression call operator ">>"
	'^' => Reduce #3 expression call operator ">>"
	'=' => Reduce #3 expression call operator ">>"
	'[' => Shift goto 120
	']' => Reduce #3 expression call operator ">>"
	"+=" => Reduce #3 expression call operator ">>"
	"-=" => Reduce #3 expression call operator ">>"
	"*=" => Reduce #3 expression call operator ">>"
	"/=" => Reduce #3 expression call operator ">>"
	"%=" => Reduce #3 expression call operator ">>"
	"&&=" => Reduce #3 expression call operator ">>"
	"||=" => Reduce #3 expression call operator ">>"
	"&=" => Reduce #3 expression call operator ">>"
	"|=" => Reduce #3 expression call operator ">>"
	"<<=" => Reduce #3 expression call operator ">>"
	">>=" => Reduce #3 expression call operator ">>"
	"||" => Reduce #3 expression call operator ">>"
	"&&" => Reduce #3 expression call operator ">>"
	'|' => Reduce #3 expression call operator ">>"
	"==" => Reduce #3 expression call operator ">>"
	"!=" => Reduce #3 expression call operator ">>"
	"<=" => Reduce #3 expression call operator ">>"
	'<' => Reduce #3 expression call operator ">>"
	">=" => Reduce #3 expression call operator ">>"
	'>' => Reduce #3 expression call operator ">>"
	'+' => Reduce #3 expression call operator ">>"
	'-' => Reduce #3 expression call operator ">>"
	'*' => Reduce #3 expression call operator ">>"
	'/' => Reduce #3 expression call operator ">>"
	'%' => Reduce #3 expression call operator ">>"
	"<<" => Reduce #3 expression call operator ">>"
	">>" => Reduce #3 expression call operator ">>"
	'.' => Shift goto 148
	"->" => Reduce #3 expression call operator ">>"
[220]
	'(' => Reduce #3 expression call member
	')' => Reduce #3 expression call member
	';' => Reduce #3 expression call member
	',' => Reduce #3 expression call member
	'}' => Reduce #3 expression call member
	'&' => Reduce #3 expression call member
	'^' => Reduce #3 expression call member
	'=' => Reduce #3 expression call member
	'[' => Reduce #3 expression call member
	']' => Reduce #3 expression call member
	"+=" => Reduce #3 expression call member
	"-=" => Reduce #3 expression call member
	"*=" => Reduce #3 expression call member
	"/=" => Reduce #3 expression call member
	"%=" => Reduce #3 expression call member
	"&&=" => Reduce #3 expression call member
	"||=" => Reduce #3 expression call member
	"&=" => Reduce #3 expression call member
	"|=" => Reduce #3 expression call member
	"<<=" => Reduce #3 expression call member
	">>=" => Reduce #3 expression call member
	"||" => Reduce #3 expression call member
	"&&" => Reduce #3 expression call member
	'|' => Reduce #3 expression call member
	"==" => Reduce #3 expression call member
	"!=" => Reduce #3 expression call member
	"<=" => Reduce #3 expression call member
	'<' => Reduce #3 expression call member
	">=" => Reduce #3 expression call member
	'>' => Reduce #3 expression call member
	'+' => Reduce #3 expression call member
	'-' => Reduce #3 expression call member
	'*' => Reduce #3 expression call member
	'/' => Reduce #3 expression call member
	'%' => Reduce #3 expression call member
	"<<" => Reduce #3 expression call member
	">>" => Reduce #3 expression call member
	'.' => Reduce #3 expression call member
	"->" => Reduce #3 expression call member
[221]
	IDENT => Reduce #2 indirection call count
[222]
	'(' => Reduce #3 expression
	')' => Reduce #3 expression
	';' => Reduce #3 expression
	',' => Reduce #3 expression
	'}' => Reduce #3 expression
	'&' => Reduce #3 expression
	'^' => Reduce #3 expression
	'=' => Reduce #3 expression
	'[' => Reduce #3 expression
	']' => Reduce #3 expression
	"+=" => Reduce #3 expression
	"-=" => Reduce #3 expression
	"*=" => Reduce #3 expression
	"/=" => Reduce #3 expression
	"%=" => Reduce #3 expression
	"&&=" => Reduce #3 expression
	"||=" => Reduce #3 expression
	"&=" => Reduce #3 expression
	"|=" => Reduce #3 expression
	"<<=" => Reduce #3 expression
	">>=" => Reduce #3 expression
	"||" => Reduce #3 expression
	"&&" => Reduce #3 expression
	'|' => Reduce #3 expression
	"==" => Reduce #3 expression
	"!=" => Reduce #3 expression
	"<=" => Reduce #3 expression
	'<' => Reduce #3 expression
	">=" => Reduce #3 expression
	'>' => Reduce #3 expression
	'+' => Reduce #3 expression
	'-' => Reduce #3 expression
	'*' => Reduce #3 expression
	'/' => Reduce #3 expression
	'%' => Reduce #3 expression
	"<<" => Reduce #3 expression
	">>" => Reduce #3 expression
	'.' => Reduce #3 expression
	"->" => Reduce #3 expression
[223]
	$ => Reduce #3 statement
	BOOLEAN => Reduce #3 statement
	IDENT => Reduce #3 statement
	DQSTRING => Reduce #3 statement
	SQSTRING => Reduce #3 statement
	CARDINAL => Reduce #3 statement
	INTEGER => Reduce #3 statement
	FLOAT => Reduce #3 statement
	"function" => Reduce #3 statement
	'(' => Reduce #3 statement
	"procedure" => Reduce #3 statement
	'{' => Reduce #3 statement
	'}' => Reduce #3 statement
	'&' => Reduce #3 statement
	"typedef" => Reduce #3 statement
	"private" => Reduce #3 statement
	"public" => Reduce #3 statement
	"var" => Reduce #3 statement
	"return" => Reduce #3 statement
	"delete" => Reduce #3 statement
	"if" => Reduce #3 statement
	"while" => Reduce #3 statement
	"new" => Reduce #3 statement
	"null" => Reduce #3 statement
	'+' => Reduce #3 statement
	'-' => Reduce #3 statement
	'~' => Reduce #3 statement
	'!' => Reduce #3 statement
	'*' => Reduce #3 statement
[224]
	BOOLEAN => Shift goto 71
	IDENT => Shift goto 72
	DQSTRING => Shift goto 73
	SQSTRING => Shift goto 74
	CARDINAL => Shift goto 75
	INTEGER => Shift goto 76
	FLOAT => Shift goto 77
	'(' => Shift goto 78
	'{' => Shift goto 95
	'&' => Shift goto 80
	"new" => Shift goto 86
	"null" => Shift goto 87
	'+' => Shift goto 88
	'-' => Shift goto 89
	'~' => Shift goto 90
	'!' => Shift goto 91
	'*' => Shift goto 92
[225]
	'(' => Reduce #3 expression call structure
	')' => Reduce #3 expression call structure
	';' => Reduce #3 expression call structure
	',' => Reduce #3 expression call structure
	'}' => Reduce #3 expression call structure
	'&' => Reduce #3 expression call structure
	'^' => Reduce #3 expression call structure
	'=' => Reduce #3 expression call structure
	'[' => Reduce #3 expression call structure
	']' => Reduce #3 expression call structure
	"+=" => Reduce #3 expression call structure
	"-=" => Reduce #3 expression call structure
	"*=" => Reduce #3 expression call structure
	"/=" => Reduce #3 expression call structure
	"%=" => Reduce #3 expression call structure
	"&&=" => Reduce #3 expression call structure
	"||=" => Reduce #3 expression call structure
	"&=" => Reduce #3 expression call structure
	"|=" => Reduce #3 expression call structure
	"<<=" => Reduce #3 expression call structure
	">>=" => Reduce #3 expression call structure
	"||" => Reduce #3 expression call structure
	"&&" => Reduce #3 expression call structure
	'|' => Reduce #3 expression call structure
	"==" => Reduce #3 expression call structure
	"!=" => Reduce #3 expression call structure
	"<=" => Reduce #3 expression call structure
	'<' => Reduce #3 expression call structure
	">=" => Reduce #3 expression call structure
	'>' => Reduce #3 expression call structure
	'+' => Reduce #3 expression call structure
	'-' => Reduce #3 expression call structure
	'*' => Reduce #3 expression call structure
	'/' => Reduce #3 expression call structure
	'%' => Reduce #3 expression call structure
	"<<" => Reduce #3 expression call structure
	">>" => Reduce #3 expression call structure
	'.' => Reduce #3 expression call structure
	"->" => Reduce #3 expression call structure
[226]
	$ => Reduce #3 statement call definition
	BOOLEAN => Reduce #3 statement call definition
	IDENT => Reduce #3 statement call definition
	DQSTRING => Reduce #3 statement call definition
	SQSTRING => Reduce #3 statement call definition
	CARDINAL => Reduce #3 statement call definition
	INTEGER => Reduce #3 statement call definition
	FLOAT => Reduce #3 statement call definition
	"function" => Reduce #3 statement call definition
	'(' => Reduce #3 statement call definition
	"procedure" => Reduce #3 statement call definition
	'{' => Reduce #3 statement call definition
	'}' => Reduce #3 statement call definition
	'&' => Reduce #3 statement call definition
	"typedef" => Reduce #3 statement call definition
	"private" => Reduce #3 statement call definition
	"public" => Reduce #3 statement call definition
	"var" => Reduce #3 statement call definition
	"return" => Reduce #3 statement call definition
	"delete" => Reduce #3 statement call definition
	"if" => Reduce #3 statement call definition
	"while" => Reduce #3 statement call definition
	"new" => Reduce #3 statement call definition
	"null" => Reduce #3 statement call definition
	'+' => Reduce #3 statement call definition
	'-' => Reduce #3 statement call definition
	'~' => Reduce #3 statement call definition
	'!' => Reduce #3 statement call definition
	'*' => Reduce #3 statement call definition
[227]
	$ => Reduce #3 statement call return_value
	BOOLEAN => Reduce #3 statement call return_value
	IDENT => Reduce #3 statement call return_value
	DQSTRING => Reduce #3 statement call return_value
	SQSTRING => Reduce #3 statement call return_value
	CARDINAL => Reduce #3 statement call return_value
	INTEGER => Reduce #3 statement call return_value
	FLOAT => Reduce #3 statement call return_value
	"function" => Reduce #3 statement call return_value
	'(' => Reduce #3 statement call return_value
	"procedure" => Reduce #3 statement call return_value
	'{' => Reduce #3 statement call return_value
	'}' => Reduce #3 statement call return_value
	'&' => Reduce #3 statement call return_value
	"typedef" => Reduce #3 statement call return_value
	"private" => Reduce #3 statement call return_value
	"public" => Reduce #3 statement call return_value
	"var" => Reduce #3 statement call return_value
	"return" => Reduce #3 statement call return_value
	"delete" => Reduce #3 statement call return_value
	"if" => Reduce #3 statement call return_value
	"while" => Reduce #3 statement call return_value
	"new" => Reduce #3 statement call return_value
	"null" => Reduce #3 statement call return_value
	'+' => Reduce #3 statement call return_value
	'-' => Reduce #3 statement call return_value
	'~' => Reduce #3 statement call return_value
	'!' => Reduce #3 statement call return_value
	'*' => Reduce #3 statement call return_value
[228]
	$ => Reduce #3 statement call delete
	BOOLEAN => Reduce #3 statement call delete
	IDENT => Reduce #3 statement call delete
	DQSTRING => Reduce #3 statement call delete
	SQSTRING => Reduce #3 statement call delete
	CARDINAL => Reduce #3 statement call delete
	INTEGER => Reduce #3 statement call delete
	FLOAT => Reduce #3 statement call delete
	"function" => Reduce #3 statement call delete
	'(' => Reduce #3 statement call delete
	"procedure" => Reduce #3 statement call delete
	'{' => Reduce #3 statement call delete
	'}' => Reduce #3 statement call delete
	'&' => Reduce #3 statement call delete
	"typedef" => Reduce #3 statement call delete
	"private" => Reduce #3 statement call delete
	"public" => Reduce #3 statement call delete
	"var" => Reduce #3 statement call delete
	"return" => Reduce #3 statement call delete
	"delete" => Reduce #3 statement call delete
	"if" => Reduce #3 statement call delete
	"while" => Reduce #3 statement call delete
	"new" => Reduce #3 statement call delete
	"null" => Reduce #3 statement call delete
	'+' => Reduce #3 statement call delete
	'-' => Reduce #3 statement call delete
	'~' => Reduce #3 statement call delete
	'!' => Reduce #3 statement call delete
	'*' => Reduce #3 statement call delete
[229]
	'(' => Shift goto 115
	')' => Shift goto 244
	'&' => Shift goto 117
	'^' => Shift goto 118
	'=' => Shift goto 119
	'[' => Shift goto 120
	"+=" => Shift goto 121
	"-=" => Shift goto 122
	"*=" => Shift goto 123
	"/=" => Shift goto 124
	"%=" => Shift goto 125
	"&&=" => Shift goto 126
	"||=" => Shift goto 127
	"&=" => Shift goto 128
	"|=" => Shift goto 129
	"<<=" => Shift goto 130
	">>=" => Shift goto 131
	"||" => Shift goto 132
	"&&" => Shift goto 133
	'|' => Shift goto 134
	"==" => Shift goto 135
	"!=" => Shift goto 136
	"<=" => Shift goto 137
	'<' => Shift goto 138
	">=" => Shift goto 139
	'>' => Shift goto 140
	'+' => Shift goto 141
	'-' => Shift goto 142
	'*' => Shift goto 143
	'/' => Shift goto 144
	'%' => Shift goto 145
	"<<" => Shift goto 146
	">>" => Shift goto 147
	'.' => Shift goto 148
	"->" => Shift goto 149
[230]
	'(' => Shift goto 115
	')' => Shift goto 245
	'&' => Shift goto 117
	'^' => Shift goto 118
	'=' => Shift goto 119
	'[' => Shift goto 120
	"+=" => Shift goto 121
	"-=" => Shift goto 122
	"*=" => Shift goto 123
	"/=" => Shift goto 124
	"%=" => Shift goto 125
	"&&=" => Shift goto 126
	"||=" => Shift goto 127
	"&=" => Shift goto 128
	"|=" => Shift goto 129
	"<<=" => Shift goto 130
	">>=" => Shift goto 131
	"||" => Shift goto 132
	"&&" => Shift goto 133
	'|' => Shift goto 134
	"==" => Shift goto 135
	"!=" => Shift goto 136
	"<=" => Shift goto 137
	'<' => Shift goto 138
	">=" => Shift goto 139
	'>' => Shift goto 140
	'+' => Shift goto 141
	'-' => Shift goto 142
	'*' => Shift goto 143
	'/' => Shift goto 144
	'%' => Shift goto 145
	"<<" => Shift goto 146
	">>" => Shift goto 147
	'.' => Shift goto 148
	"->" => Shift goto 149
[231]
	BOOLEAN => Shift goto 71
	IDENT => Shift goto 72
	DQSTRING => Shift goto 73
	SQSTRING => Shift goto 74
	CARDINAL => Shift goto 75
	INTEGER => Shift goto 76
	FLOAT => Shift goto 77
	'(' => Shift goto 78
	'{' => Shift goto 95
	'&' => Shift goto 80
	"new" => Shift goto 86
	"null" => Shift goto 87
	'+' => Shift goto 88
	'-' => Shift goto 89
	'~' => Shift goto 90
	'!' => Shift goto 91
	'*' => Shift goto 92
[232]
	BOOLEAN => Shift goto 71
	IDENT => Shift goto 72
	DQSTRING => Shift goto 73
	SQSTRING => Shift goto 74
	CARDINAL => Shift goto 75
	INTEGER => Shift goto 76
	FLOAT => Shift goto 77
	'(' => Shift goto 78
	'{' => Shift goto 95
	'&' => Shift goto 80
	"new" => Shift goto 86
	"null" => Shift goto 87
	'+' => Shift goto 88
	'-' => Shift goto 89
	'~' => Shift goto 90
	'!' => Shift goto 91
	'*' => Shift goto 92
[233]
	')' => Reduce #2 paramdecl call paramdef
	',' => Reduce #2 paramdecl call paramdef
[234]
	'{' => Shift goto 248
[235]
	IDENT => Shift goto 17
	"const" => Shift goto 18
[236]
	'(' => Shift goto 250
[237]
	IDENT => Shift goto 17
	')' => Reduce #0 parameterlist
	"const" => Shift goto 18
[238]
	')' => Shift goto 252
[239]
	';' => Shift goto 253
[240]
	IDENT => Shift goto 17
	"const" => Shift goto 18
[241]
	'(' => Reduce #4 expression call operator "()"
	')' => Reduce #4 expression call operator "()"
	';' => Reduce #4 expression call operator "()"
	',' => Reduce #4 expression call operator "()"
	'}' => Reduce #4 expression call operator "()"
	'&' => Reduce #4 expression call operator "()"
	'^' => Reduce #4 expression call operator "()"
	'=' => Reduce #4 expression call operator "()"
	'[' => Reduce #4 expression call operator "()"
	']' => Reduce #4 expression call operator "()"
	"+=" => Reduce #4 expression call operator "()"
	"-=" => Reduce #4 expression call operator "()"
	"*=" => Reduce #4 expression call operator "()"
	"/=" => Reduce #4 expression call operator "()"
	"%=" => Reduce #4 expression call operator "()"
	"&&=" => Reduce #4 expression call operator "()"
	"||=" => Reduce #4 expression call operator "()"
	"&=" => Reduce #4 expression call operator "()"
	"|=" => Reduce #4 expression call operator "()"
	"<<=" => Reduce #4 expression call operator "()"
	">>=" => Reduce #4 expression call operator "()"
	"||" => Reduce #4 expression call operator "()"
	"&&" => Reduce #4 expression call operator "()"
	'|' => Reduce #4 expression call operator "()"
	"==" => Reduce #4 expression call operator "()"
	"!=" => Reduce #4 expression call operator "()"
	"<=" => Reduce #4 expression call operator "()"
	'<' => Reduce #4 expression call operator "()"
	">=" => Reduce #4 expression call operator "()"
	'>' => Reduce #4 expression call operator "()"
	'+' => Reduce #4 expression call operator "()"
	'-' => Reduce #4 expression call operator "()"
	'*' => Reduce #4 expression call operator "()"
	'/' => Reduce #4 expression call operator "()"
	'%' => Reduce #4 expression call operator "()"
	"<<" => Reduce #4 expression call operator "()"
	">>" => Reduce #4 expression call operator "()"
	'.' => Reduce #4 expression call operator "()"
	"->" => Reduce #4 expression call operator "()"
[242]
	'(' => Reduce #4 expression call operator "[]"
	')' => Reduce #4 expression call operator "[]"
	';' => Reduce #4 expression call operator "[]"
	',' => Reduce #4 expression call operator "[]"
	'}' => Reduce #4 expression call operator "[]"
	'&' => Reduce #4 expression call operator "[]"
	'^' => Reduce #4 expression call operator "[]"
	'=' => Reduce #4 expression call operator "[]"
	'[' => Reduce #4 expression call operator "[]"
	']' => Reduce #4 expression call operator "[]"
	"+=" => Reduce #4 expression call operator "[]"
	"-=" => Reduce #4 expression call operator "[]"
	"*=" => Reduce #4 expression call operator "[]"
	"/=" => Reduce #4 expression call operator "[]"
	"%=" => Reduce #4 expression call operator "[]"
	"&&=" => Reduce #4 expression call operator "[]"
	"||=" => Reduce #4 expression call operator "[]"
	"&=" => Reduce #4 expression call operator "[]"
	"|=" => Reduce #4 expression call operator "[]"
	"<<=" => Reduce #4 expression call operator "[]"
	">>=" => Reduce #4 expression call operator "[]"
	"||" => Reduce #4 expression call operator "[]"
	"&&" => Reduce #4 expression call operator "[]"
	'|' => Reduce #4 expression call operator "[]"
	"==" => Reduce #4 expression call operator "[]"
	"!=" => Reduce #4 expression call operator "[]"
	"<=" => Reduce #4 expression call operator "[]"
	'<' => Reduce #4 expression call operator "[]"
	">=" => Reduce #4 expression call operator "[]"
	'>' => Reduce #4 expression call operator "[]"
	'+' => Reduce #4 expression call operator "[]"
	'-' => Reduce #4 expression call operator "[]"
	'*' => Reduce #4 expression call operator "[]"
	'/' => Reduce #4 expression call operator "[]"
	'%' => Reduce #4 expression call operator "[]"
	"<<" => Reduce #4 expression call operator "[]"
	">>" => Reduce #4 expression call operator "[]"
	'.' => Reduce #4 expression call operator "[]"
	"->" => Reduce #4 expression call operator "[]"
[243]
	')' => Reduce #3 expressionlist
	'}' => Reduce #3 expressionlist
	']' => Reduce #3 expressionlist
[244]
	'{' => Shift goto 255
[245]
	'{' => Shift goto 256
[246]
	'(' => Shift goto 115
	')' => Reduce #4 expression call allocate
	';' => Reduce #4 expression call allocate
	',' => Reduce #4 expression call allocate
	'}' => Reduce #4 expression call allocate
	'&' => Shift goto 117
	'^' => Shift goto 118
	'=' => Shift goto 119
	'[' => Shift goto 120
	']' => Reduce #4 expression call allocate
	"+=" => Shift goto 121
	"-=" => Shift goto 122
	"*=" => Shift goto 123
	"/=" => Shift goto 124
	"%=" => Shift goto 125
	"&&=" => Shift goto 126
	"||=" => Shift goto 127
	"&=" => Shift goto 128
	"|=" => Shift goto 129
	"<<=" => Shift goto 130
	">>=" => Shift goto 131
	"||" => Shift goto 132
	"&&" => Shift goto 133
	'|' => Shift goto 134
	"==" => Shift goto 135
	"!=" => Shift goto 136
	"<=" => Shift goto 137
	'<' => Shift goto 138
	">=" => Shift goto 139
	'>' => Shift goto 140
	'+' => Shift goto 141
	'-' => Shift goto 142
	'*' => Shift goto 143
	'/' => Shift goto 144
	'%' => Shift goto 145
	"<<" => Shift goto 146
	">>" => Shift goto 147
	'.' => Shift goto 148
	"->" => Reduce #4 expression call allocate
[247]
	'(' => Shift goto 115
	';' => Reduce #7 variabledefinition call vardef_array_assign
	'&' => Shift goto 117
	'^' => Shift goto 118
	'=' => Shift goto 119
	'[' => Shift goto 120
	"+=" => Shift goto 121
	"-=" => Shift goto 122
	"*=" => Shift goto 123
	"/=" => Shift goto 124
	"%=" => Shift goto 125
	"&&=" => Shift goto 126
	"||=" => Shift goto 127
	"&=" => Shift goto 128
	"|=" => Shift goto 129
	"<<=" => Shift goto 130
	">>=" => Shift goto 131
	"||" => Shift goto 132
	"&&" => Shift goto 133
	'|' => Shift goto 134
	"==" => Shift goto 135
	"!=" => Shift goto 136
	"<=" => Shift goto 137
	'<' => Shift goto 138
	">=" => Shift goto 139
	'>' => Shift goto 140
	'+' => Shift goto 141
	'-' => Shift goto 142
	'*' => Shift goto 143
	'/' => Shift goto 144
	'%' => Shift goto 145
	"<<" => Shift goto 146
	">>" => Shift goto 147
	'.' => Shift goto 148
	"->" => Shift goto 149
[248]
	BOOLEAN => Shift goto 71
	IDENT => Shift goto 72
	DQSTRING => Shift goto 73
	SQSTRING => Shift goto 74
	CARDINAL => Shift goto 75
	INTEGER => Shift goto 76
	FLOAT => Shift goto 77
	"function" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	'(' => Shift goto 78
	"procedure" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	'{' => Shift goto 79
	'}' => Reduce #0 statementlist
	'&' => Shift goto 80
	"typedef" => Shift goto 19
	"private" => Shift goto 23
	"public" => Shift goto 24
	"var" => Shift goto 81
	"return" => Shift goto 82
	"delete" => Shift goto 83
	"if" => Shift goto 84
	"while" => Shift goto 85
	"new" => Shift goto 86
	"null" => Shift goto 87
	'+' => Shift goto 88
	'-' => Shift goto 89
	'~' => Shift goto 90
	'!' => Shift goto 91
	'*' => Shift goto 92
[249]
	')' => Reduce #3 parameters
[250]
	IDENT => Shift goto 17
	')' => Reduce #0 parameterlist
	"const" => Shift goto 18
[251]
	')' => Shift goto 259
[252]
	';' => Shift goto 260
[253]
	$ => Reduce #8 externdefinition call extern_procdef
	IDENT => Reduce #8 externdefinition call extern_procdef
	"extern" => Reduce #8 externdefinition call extern_procdef
	"function" => Reduce #8 externdefinition call extern_procdef
	"procedure" => Reduce #8 externdefinition call extern_procdef
	"main" => Reduce #8 externdefinition call extern_procdef
	"const" => Reduce #8 externdefinition call extern_procdef
	"typedef" => Reduce #8 externdefinition call extern_procdef
	"struct" => Reduce #8 externdefinition call extern_procdef
	"interface" => Reduce #8 externdefinition call extern_procdef
	"class" => Reduce #8 externdefinition call extern_procdef
	"private" => Reduce #8 externdefinition call extern_procdef
	"public" => Reduce #8 externdefinition call extern_procdef
[254]
	')' => Reduce #3 externparameters
[255]
	BOOLEAN => Shift goto 71
	IDENT => Shift goto 72
	DQSTRING => Shift goto 73
	SQSTRING => Shift goto 74
	CARDINAL => Shift goto 75
	INTEGER => Shift goto 76
	FLOAT => Shift goto 77
	"function" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	'(' => Shift goto 78
	"procedure" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	'{' => Shift goto 79
	'}' => Reduce #0 statementlist
	'&' => Shift goto 80
	"typedef" => Shift goto 19
	"private" => Shift goto 23
	"public" => Shift goto 24
	"var" => Shift goto 81
	"return" => Shift goto 82
	"delete" => Shift goto 83
	"if" => Shift goto 84
	"while" => Shift goto 85
	"new" => Shift goto 86
	"null" => Shift goto 87
	'+' => Shift goto 88
	'-' => Shift goto 89
	'~' => Shift goto 90
	'!' => Shift goto 91
	'*' => Shift goto 92
[256]
	BOOLEAN => Shift goto 71
	IDENT => Shift goto 72
	DQSTRING => Shift goto 73
	SQSTRING => Shift goto 74
	CARDINAL => Shift goto 75
	INTEGER => Shift goto 76
	FLOAT => Shift goto 77
	"function" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	'(' => Shift goto 78
	"procedure" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	'{' => Shift goto 79
	'}' => Reduce #0 statementlist
	'&' => Shift goto 80
	"typedef" => Shift goto 19
	"private" => Shift goto 23
	"public" => Shift goto 24
	"var" => Shift goto 81
	"return" => Shift goto 82
	"delete" => Shift goto 83
	"if" => Shift goto 84
	"while" => Shift goto 85
	"new" => Shift goto 86
	"null" => Shift goto 87
	'+' => Shift goto 88
	'-' => Shift goto 89
	'~' => Shift goto 90
	'!' => Shift goto 91
	'*' => Shift goto 92
[257]
	'}' => Shift goto 263
[258]
	')' => Shift goto 264
[259]
	';' => Shift goto 265
[260]
	$ => Reduce #9 externdefinition call extern_funcdef
	IDENT => Reduce #9 externdefinition call extern_funcdef
	"extern" => Reduce #9 externdefinition call extern_funcdef
	"function" => Reduce #9 externdefinition call extern_funcdef
	"procedure" => Reduce #9 externdefinition call extern_funcdef
	"main" => Reduce #9 externdefinition call extern_funcdef
	"const" => Reduce #9 externdefinition call extern_funcdef
	"typedef" => Reduce #9 externdefinition call extern_funcdef
	"struct" => Reduce #9 externdefinition call extern_funcdef
	"interface" => Reduce #9 externdefinition call extern_funcdef
	"class" => Reduce #9 externdefinition call extern_funcdef
	"private" => Reduce #9 externdefinition call extern_funcdef
	"public" => Reduce #9 externdefinition call extern_funcdef
[261]
	'}' => Shift goto 266
[262]
	'}' => Shift goto 267
[263]
	$ => Reduce #6 callablebody call callablebody
	BOOLEAN => Reduce #6 callablebody call callablebody
	IDENT => Reduce #6 callablebody call callablebody
	DQSTRING => Reduce #6 callablebody call callablebody
	SQSTRING => Reduce #6 callablebody call callablebody
	CARDINAL => Reduce #6 callablebody call callablebody
	INTEGER => Reduce #6 callablebody call callablebody
	FLOAT => Reduce #6 callablebody call callablebody
	"function" => Reduce #6 callablebody call callablebody
	'(' => Reduce #6 callablebody call callablebody
	"procedure" => Reduce #6 callablebody call callablebody
	"main" => Reduce #6 callablebody call callablebody
	'{' => Reduce #6 callablebody call callablebody
	'}' => Reduce #6 callablebody call callablebody
	"const" => Reduce #6 callablebody call callablebody
	'&' => Reduce #6 callablebody call callablebody
	"typedef" => Reduce #6 callablebody call callablebody
	"struct" => Reduce #6 callablebody call callablebody
	"interface" => Reduce #6 callablebody call callablebody
	"class" => Reduce #6 callablebody call callablebody
	"private" => Reduce #6 callablebody call callablebody
	"public" => Reduce #6 callablebody call callablebody
	"var" => Reduce #6 callablebody call callablebody
	"return" => Reduce #6 callablebody call callablebody
	"delete" => Reduce #6 callablebody call callablebody
	"if" => Reduce #6 callablebody call callablebody
	"while" => Reduce #6 callablebody call callablebody
	"new" => Reduce #6 callablebody call callablebody
	"null" => Reduce #6 callablebody call callablebody
	'+' => Reduce #6 callablebody call callablebody
	'-' => Reduce #6 callablebody call callablebody
	'~' => Reduce #6 callablebody call callablebody
	'!' => Reduce #6 callablebody call callablebody
	'*' => Reduce #6 callablebody call callablebody
[264]
	';' => Shift goto 268
[265]
	$ => Reduce #6 methoddefinition call interface_procdef
	"function" => Reduce #6 methoddefinition call interface_procdef
	"procedure" => Reduce #6 methoddefinition call interface_procdef
	'}' => Reduce #6 methoddefinition call interface_procdef
[266]
	$ => Reduce #7 statement call conditional_if
	BOOLEAN => Reduce #7 statement call conditional_if
	IDENT => Reduce #7 statement call conditional_if
	DQSTRING => Reduce #7 statement call conditional_if
	SQSTRING => Reduce #7 statement call conditional_if
	CARDINAL => Reduce #7 statement call conditional_if
	INTEGER => Reduce #7 statement call conditional_if
	FLOAT => Reduce #7 statement call conditional_if
	"function" => Reduce #7 statement call conditional_if
	'(' => Reduce #7 statement call conditional_if
	"procedure" => Reduce #7 statement call conditional_if
	'{' => Reduce #7 statement call conditional_if
	'}' => Reduce #7 statement call conditional_if
	'&' => Reduce #7 statement call conditional_if
	"typedef" => Reduce #7 statement call conditional_if
	"private" => Reduce #7 statement call conditional_if
	"public" => Reduce #7 statement call conditional_if
	"var" => Reduce #7 statement call conditional_if
	"return" => Reduce #7 statement call conditional_if
	"delete" => Reduce #7 statement call conditional_if
	"if" => Reduce #7 statement call conditional_if
	"else" => Shift goto 269
	"while" => Reduce #7 statement call conditional_if
	"new" => Reduce #7 statement call conditional_if
	"null" => Reduce #7 statement call conditional_if
	'+' => Reduce #7 statement call conditional_if
	'-' => Reduce #7 statement call conditional_if
	'~' => Reduce #7 statement call conditional_if
	'!' => Reduce #7 statement call conditional_if
	'*' => Reduce #7 statement call conditional_if
[267]
	$ => Reduce #7 statement call conditional_while
	BOOLEAN => Reduce #7 statement call conditional_while
	IDENT => Reduce #7 statement call conditional_while
	DQSTRING => Reduce #7 statement call conditional_while
	SQSTRING => Reduce #7 statement call conditional_while
	CARDINAL => Reduce #7 statement call conditional_while
	INTEGER => Reduce #7 statement call conditional_while
	FLOAT => Reduce #7 statement call conditional_while
	"function" => Reduce #7 statement call conditional_while
	'(' => Reduce #7 statement call conditional_while
	"procedure" => Reduce #7 statement call conditional_while
	'{' => Reduce #7 statement call conditional_while
	'}' => Reduce #7 statement call conditional_while
	'&' => Reduce #7 statement call conditional_while
	"typedef" => Reduce #7 statement call conditional_while
	"private" => Reduce #7 statement call conditional_while
	"public" => Reduce #7 statement call conditional_while
	"var" => Reduce #7 statement call conditional_while
	"return" => Reduce #7 statement call conditional_while
	"delete" => Reduce #7 statement call conditional_while
	"if" => Reduce #7 statement call conditional_while
	"while" => Reduce #7 statement call conditional_while
	"new" => Reduce #7 statement call conditional_while
	"null" => Reduce #7 statement call conditional_while
	'+' => Reduce #7 statement call conditional_while
	'-' => Reduce #7 statement call conditional_while
	'~' => Reduce #7 statement call conditional_while
	'!' => Reduce #7 statement call conditional_while
	'*' => Reduce #7 statement call conditional_while
[268]
	$ => Reduce #7 methoddefinition call interface_funcdef
	"function" => Reduce #7 methoddefinition call interface_funcdef
	"procedure" => Reduce #7 methoddefinition call interface_funcdef
	'}' => Reduce #7 methoddefinition call interface_funcdef
[269]
	'{' => Shift goto 270
[270]
	BOOLEAN => Shift goto 71
	IDENT => Shift goto 72
	DQSTRING => Shift goto 73
	SQSTRING => Shift goto 74
	CARDINAL => Shift goto 75
	INTEGER => Shift goto 76
	FLOAT => Shift goto 77
	"function" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	'(' => Shift goto 78
	"procedure" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	'{' => Shift goto 79
	'}' => Reduce #0 statementlist
	'&' => Shift goto 80
	"typedef" => Shift goto 19
	"private" => Shift goto 23
	"public" => Shift goto 24
	"var" => Shift goto 81
	"return" => Shift goto 82
	"delete" => Shift goto 83
	"if" => Shift goto 84
	"while" => Shift goto 85
	"new" => Shift goto 86
	"null" => Shift goto 87
	'+' => Shift goto 88
	'-' => Shift goto 89
	'~' => Shift goto 90
	'!' => Shift goto 91
	'*' => Shift goto 92
[271]
	'}' => Shift goto 272
[272]
	$ => Reduce #11 statement call conditional_if_else
	BOOLEAN => Reduce #11 statement call conditional_if_else
	IDENT => Reduce #11 statement call conditional_if_else
	DQSTRING => Reduce #11 statement call conditional_if_else
	SQSTRING => Reduce #11 statement call conditional_if_else
	CARDINAL => Reduce #11 statement call conditional_if_else
	INTEGER => Reduce #11 statement call conditional_if_else
	FLOAT => Reduce #11 statement call conditional_if_else
	"function" => Reduce #11 statement call conditional_if_else
	'(' => Reduce #11 statement call conditional_if_else
	"procedure" => Reduce #11 statement call conditional_if_else
	'{' => Reduce #11 statement call conditional_if_else
	'}' => Reduce #11 statement call conditional_if_else
	'&' => Reduce #11 statement call conditional_if_else
	"typedef" => Reduce #11 statement call conditional_if_else
	"private" => Reduce #11 statement call conditional_if_else
	"public" => Reduce #11 statement call conditional_if_else
	"var" => Reduce #11 statement call conditional_if_else
	"return" => Reduce #11 statement call conditional_if_else
	"delete" => Reduce #11 statement call conditional_if_else
	"if" => Reduce #11 statement call conditional_if_else
	"while" => Reduce #11 statement call conditional_if_else
	"new" => Reduce #11 statement call conditional_if_else
	"null" => Reduce #11 statement call conditional_if_else
	'+' => Reduce #11 statement call conditional_if_else
	'-' => Reduce #11 statement call conditional_if_else
	'~' => Reduce #11 statement call conditional_if_else
	'!' => Reduce #11 statement call conditional_if_else
	'*' => Reduce #11 statement call conditional_if_else

-- Goto table:
[1]
	externlist => 2
	externdefinition => 3
[2]
	definitionlist => 5
	datadefinition => 6
	definition => 7
	typename => 8
	typespec => 9
	typedefinition => 10
	structdefinition => 11
	interfacedefinition => 12
	classdefinition => 13
	linkage => 14
	functiondefinition => 15
	variabledefinition => 16
[3]
	externlist => 25
	externdefinition => 3
[5]
	mainproc => 27
[7]
	definitionlist => 29
	datadefinition => 6
	definition => 7
	typename => 8
	typespec => 9
	typedefinition => 10
	structdefinition => 11
	interfacedefinition => 12
	classdefinition => 13
	linkage => 14
	functiondefinition => 15
	variabledefinition => 16
[18]
	typename => 41
[19]
	typename => 42
[37]
	typename => 8
	typespec => 53
[40]
	typename => 55
[46]
	typename => 8
	typespec => 62
[48]
	typedefinition => 64
	linkage => 14
	functiondefinition => 65
	codeblock => 66
	statementlist => 67
	statement => 68
	expression => 69
	iexpression => 70
[51]
	expression => 94
	iexpression => 70
[52]
	expression => 96
	iexpression => 70
[54]
	callablebody => 98
[59]
	datadefinitionlist => 102
	datadefinition => 103
	typename => 8
	typespec => 9
	typedefinition => 10
	structdefinition => 11
	variabledefinition => 16
[60]
	methoddefinitionlist => 104
	methoddefinition => 105
[61]
	definitionlist => 108
	datadefinition => 6
	definition => 7
	typename => 8
	typespec => 9
	typedefinition => 10
	structdefinition => 11
	interfacedefinition => 12
	classdefinition => 13
	linkage => 14
	functiondefinition => 15
	variabledefinition => 16
[68]
	typedefinition => 64
	linkage => 14
	functiondefinition => 65
	statementlist => 113
	statement => 68
	expression => 69
	iexpression => 70
[69]
	indirection => 114
[78]
	expression => 150
	iexpression => 70
[79]
	typedefinition => 64
	linkage => 14
	functiondefinition => 65
	codeblock => 151
	statementlist => 67
	statement => 68
	expression => 152
	iexpression => 70
	expressionlist => 153
[80]
	expression => 155
	iexpression => 70
[81]
	typename => 8
	typespec => 9
	variabledefinition => 156
[82]
	expression => 157
	iexpression => 70
[83]
	expression => 158
	iexpression => 70
[86]
	typename => 8
	typespec => 161
[88]
	expression => 162
	iexpression => 70
[89]
	expression => 163
	iexpression => 70
[90]
	expression => 164
	iexpression => 70
[91]
	expression => 165
	iexpression => 70
[92]
	expression => 166
	iexpression => 70
[94]
	indirection => 114
[95]
	expression => 167
	iexpression => 70
	expressionlist => 153
[96]
	indirection => 114
[97]
	callablebody => 169
[99]
	typename => 8
	typespec => 170
	parameterlist => 171
	parameters => 172
	paramdecl => 173
[103]
	datadefinitionlist => 176
	datadefinition => 103
	typename => 8
	typespec => 9
	typedefinition => 10
	structdefinition => 11
	variabledefinition => 16
[105]
	methoddefinitionlist => 178
	methoddefinition => 105
[106]
	typename => 8
	typespec => 179
[110]
	externparameterlist => 183
	externparameters => 184
	typename => 8
	typespec => 185
[115]
	expression => 167
	iexpression => 70
	expressionlist => 187
[117]
	expression => 189
	iexpression => 70
[118]
	expression => 190
	iexpression => 70
[119]
	expression => 191
	iexpression => 70
[120]
	expression => 167
	iexpression => 70
	expressionlist => 192
[121]
	expression => 193
	iexpression => 70
[122]
	expression => 194
	iexpression => 70
[123]
	expression => 195
	iexpression => 70
[124]
	expression => 196
	iexpression => 70
[125]
	expression => 197
	iexpression => 70
[126]
	expression => 198
	iexpression => 70
[127]
	expression => 199
	iexpression => 70
[128]
	expression => 200
	iexpression => 70
[129]
	expression => 201
	iexpression => 70
[130]
	expression => 202
	iexpression => 70
[131]
	expression => 203
	iexpression => 70
[132]
	expression => 204
	iexpression => 70
[133]
	expression => 205
	iexpression => 70
[134]
	expression => 206
	iexpression => 70
[135]
	expression => 207
	iexpression => 70
[136]
	expression => 208
	iexpression => 70
[137]
	expression => 209
	iexpression => 70
[138]
	expression => 210
	iexpression => 70
[139]
	expression => 211
	iexpression => 70
[140]
	expression => 212
	iexpression => 70
[141]
	expression => 213
	iexpression => 70
[142]
	expression => 214
	iexpression => 70
[143]
	expression => 215
	iexpression => 70
[144]
	expression => 216
	iexpression => 70
[145]
	expression => 217
	iexpression => 70
[146]
	expression => 218
	iexpression => 70
[147]
	expression => 219
	iexpression => 70
[149]
	indirection => 221
[150]
	indirection => 114
[152]
	indirection => 114
[155]
	indirection => 114
[157]
	indirection => 114
[158]
	indirection => 114
[159]
	expression => 229
	iexpression => 70
[160]
	expression => 230
	iexpression => 70
[162]
	indirection => 114
[163]
	indirection => 114
[164]
	indirection => 114
[165]
	indirection => 114
[166]
	indirection => 114
[167]
	indirection => 114
[182]
	externparameterlist => 238
	externparameters => 184
	typename => 8
	typespec => 185
[189]
	indirection => 114
[190]
	indirection => 114
[191]
	indirection => 114
[193]
	indirection => 114
[194]
	indirection => 114
[195]
	indirection => 114
[196]
	indirection => 114
[197]
	indirection => 114
[198]
	indirection => 114
[199]
	indirection => 114
[200]
	indirection => 114
[201]
	indirection => 114
[202]
	indirection => 114
[203]
	indirection => 114
[204]
	indirection => 114
[205]
	indirection => 114
[206]
	indirection => 114
[207]
	indirection => 114
[208]
	indirection => 114
[209]
	indirection => 114
[210]
	indirection => 114
[211]
	indirection => 114
[212]
	indirection => 114
[213]
	indirection => 114
[214]
	indirection => 114
[215]
	indirection => 114
[216]
	indirection => 114
[217]
	indirection => 114
[218]
	indirection => 114
[219]
	indirection => 114
[224]
	expression => 167
	iexpression => 70
	expressionlist => 243
[229]
	indirection => 114
[230]
	indirection => 114
[231]
	expression => 246
	iexpression => 70
[232]
	expression => 247
	iexpression => 70
[235]
	typename => 8
	typespec => 170
	parameters => 249
	paramdecl => 173
[237]
	typename => 8
	typespec => 170
	parameterlist => 251
	parameters => 172
	paramdecl => 173
[240]
	externparameters => 254
	typename => 8
	typespec => 185
[246]
	indirection => 114
[247]
	indirection => 114
[248]
	typedefinition => 64
	linkage => 14
	functiondefinition => 65
	codeblock => 257
	statementlist => 67
	statement => 68
	expression => 69
	iexpression => 70
[250]
	typename => 8
	typespec => 170
	parameterlist => 258
	parameters => 172
	paramdecl => 173
[255]
	typedefinition => 64
	linkage => 14
	functiondefinition => 65
	codeblock => 261
	statementlist => 67
	statement => 68
	expression => 69
	iexpression => 70
[256]
	typedefinition => 64
	linkage => 14
	functiondefinition => 65
	codeblock => 262
	statementlist => 67
	statement => 68
	expression => 69
	iexpression => 70
[270]
	typedefinition => 64
	linkage => 14
	functiondefinition => 65
	codeblock => 271
	statementlist => 67
	statement => 68
	expression => 69
	iexpression => 70

