== Language 'test', type system 'language1/typesystem' ==
-- Lexems:
TOKEN BOOLEAN ((true)|(false)) 0 [tf]  ~ 1
TOKEN IDENT [a-zA-Z_]+[a-zA-Z_0-9]* 0 [abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_]  ~ 2
TOKEN DQSTRING ["]((([^\\"\n]+)|([\\][^"\n]))*)["] 1 ["]  ~ 3
TOKEN SQSTRING [']((([^\\'\n]+)|([\\][^'\n]))*)['] 1 [']  ~ 4
TOKEN CARDINAL [0123456789]+ 0 [0123456789]  ~ 5
TOKEN INTEGER [-][0123456789]+ 0 [-]  ~ 6
TOKEN FLOAT [-]{0,1}[0123456789]+[.][0123456789]+ 0 [-]  ~ 7
TOKEN FLOAT [-]{0,1}[0123456789]+[.][0123456789]+[Ee][+-]{0,1}[0123456789]+ 0 [-]  ~ 7
KEYWORD extern [e] ~ 8
KEYWORD function [f] ~ 9
KEYWORD ( [(] ~ 10
KEYWORD ) [)] ~ 11
KEYWORD ; [;] ~ 12
KEYWORD procedure [p] ~ 13
KEYWORD ... [.] ~ 14
KEYWORD , [,] ~ 15
KEYWORD const [c] ~ 16
KEYWORD operator [o] ~ 17
KEYWORD :: [:] ~ 18
KEYWORD & [&] ~ 19
KEYWORD ^ [^] ~ 20
KEYWORD typedef [t] ~ 21
KEYWORD struct [s] ~ 22
KEYWORD { [{] ~ 23
KEYWORD } [}] ~ 24
KEYWORD interface [i] ~ 25
KEYWORD class [c] ~ 26
KEYWORD : [:] ~ 27
KEYWORD private [p] ~ 28
KEYWORD public [p] ~ 29
KEYWORD constructor [c] ~ 30
KEYWORD destructor [d] ~ 31
KEYWORD -> [-] ~ 32
KEYWORD = [=] ~ 33
KEYWORD + [+] ~ 34
KEYWORD - [-] ~ 35
KEYWORD * [*] ~ 36
KEYWORD / [/] ~ 37
KEYWORD % [%] ~ 38
KEYWORD && [&] ~ 39
KEYWORD || [|] ~ 40
KEYWORD | [|] ~ 41
KEYWORD << [<] ~ 42
KEYWORD >> [>] ~ 43
KEYWORD ~ [~] ~ 44
KEYWORD ! [!] ~ 45
KEYWORD [ [[] ~ 46
KEYWORD ] []] ~ 47
KEYWORD == [=] ~ 48
KEYWORD != [!] ~ 49
KEYWORD >= [>] ~ 50
KEYWORD <= [<] ~ 51
KEYWORD > [>] ~ 52
KEYWORD < [<] ~ 53
KEYWORD main [m] ~ 54
KEYWORD var [v] ~ 55
KEYWORD return [r] ~ 56
KEYWORD delete [d] ~ 57
KEYWORD if [i] ~ 58
KEYWORD else [e] ~ 59
KEYWORD while [w] ~ 60
KEYWORD new [n] ~ 61
KEYWORD cast [c] ~ 62
KEYWORD null [n] ~ 63
KEYWORD += [+] ~ 64
KEYWORD -= [-] ~ 65
KEYWORD *= [*] ~ 66
KEYWORD /= [/] ~ 67
KEYWORD ^= [^] ~ 68
KEYWORD &= [&] ~ 69
KEYWORD %= [%] ~ 70
KEYWORD &&= [&] ~ 71
KEYWORD ||= [|] ~ 72
KEYWORD |= [|] ~ 73
KEYWORD <<= [<] ~ 74
KEYWORD >>= [>] ~ 75
KEYWORD . [.] ~ 76
COMMENT /* */ [/]
COMMENT // [/]

-- Nonterminals:
(1) program
(2) extern_definitionlist
(3) free_definitionlist
(4) struct_definitionlist
(5) class_definitionlist
(6) interface_definitionlist
(7) extern_definition
(8) extern_parameters
(9) extern_paramlist
(10) interface_definition
(11) struct_definition
(12) class_definition
(13) free_definition
(14) typename
(15) typespec
(16) typepath
(17) typedefinition
(18) structdefinition
(19) interfacedefinition
(20) inheritlist
(21) classdefinition
(22) linkage
(23) functiondefinition
(24) constructordefinition
(25) operatordefinition
(26) operatordecl
(27) callablebody
(28) main_procedure
(29) parameterlist
(30) parameters
(31) paramdecl
(32) codeblock
(33) statementlist
(34) statement
(35) variabledefinition
(36) expression
(37) iexpression
(38) indirection
(39) expressionlist

-- Productions:
program = extern_definitionlist free_definitionlist main_procedure (1)
extern_definitionlist = extern_definition extern_definitionlist
extern_definitionlist = 
free_definitionlist = free_definition free_definitionlist
free_definitionlist = 
struct_definitionlist = struct_definition struct_definitionlist
struct_definitionlist = 
class_definitionlist = class_definition class_definitionlist
class_definitionlist = 
interface_definitionlist = interface_definition interface_definitionlist
interface_definitionlist = 
extern_definition = "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist ")" ";" (2)
extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist ")" ";" (3)
extern_definition = "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist "..." ")" ";" (4)
extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist "..." ")" ";" (5)
extern_parameters = typespec "," extern_parameters
extern_parameters = typespec
extern_paramlist = extern_parameters (6)
extern_paramlist =  (6)
interface_definition = "function" IDENT typespec "(" parameterlist ")" ";" (7)
interface_definition = "function" IDENT typespec "(" parameterlist ")" "const" ";" (8)
interface_definition = "procedure" IDENT "(" parameterlist ")" ";" (9)
interface_definition = "procedure" IDENT "(" parameterlist ")" "const" ";" (10)
interface_definition = "operator" operatordecl typespec "(" parameterlist ")" ";" (11)
interface_definition = "operator" operatordecl typespec "(" parameterlist ")" "const" ";" (12)
interface_definition = "operator" operatordecl "(" parameterlist ")" ";" (13)
interface_definition = "operator" operatordecl "(" parameterlist ")" "const" ";" (14)
struct_definition = typedefinition ";" (15)
struct_definition = variabledefinition ";" (15)
struct_definition = structdefinition (15)
class_definition = typedefinition ";" (15)
class_definition = variabledefinition ";" (15)
class_definition = structdefinition (15)
class_definition = classdefinition (15)
class_definition = interfacedefinition (15)
class_definition = constructordefinition (16)
class_definition = functiondefinition (16)
class_definition = operatordefinition (16)
free_definition = struct_definition
free_definition = functiondefinition (15)
free_definition = classdefinition (15)
free_definition = interfacedefinition (15)
typename/L1 = IDENT
typename/L1 = IDENT "::" typename
typespec/L1 = typename (17)
typespec/L1 = "const" typename (18)
typespec/L1 = typename "&" (19)
typespec/L1 = "const" typename "&" (20)
typespec/L1 = typename "^" (21)
typespec/L1 = "const" typename "^" (22)
typespec/L1 = typename "^" "&" (23)
typespec/L1 = "const" typename "^" "&" (24)
typespec/L1 = typename "^" "^" (25)
typespec/L1 = "const" typename "^" "^" (26)
typespec/L1 = typename "^" "^" "&" (27)
typespec/L1 = "const" typename "^" "^" "&" (28)
typepath/L1 = typename (17)
typedefinition = "typedef" typepath IDENT (step:29)
structdefinition = "struct" IDENT "{" struct_definitionlist "}" (step:30)
interfacedefinition = "interface" IDENT "{" interface_definitionlist "}" (step:31)
inheritlist = typepath "," inheritlist (step:32)
inheritlist = typepath (step:32)
classdefinition = "class" IDENT "{" class_definitionlist "}" (step:33)
classdefinition = "class" IDENT ":" inheritlist "{" class_definitionlist "}" (step:33)
linkage = "private" (34)
linkage = "public" (35)
linkage =  (34)
functiondefinition = linkage "function" IDENT typespec callablebody (36)
functiondefinition = linkage "procedure" IDENT callablebody (37)
constructordefinition = linkage "constructor" callablebody (38)
constructordefinition = "destructor" "{" codeblock "}" (39)
operatordefinition = linkage "operator" operatordecl typespec callablebody (40)
operatordefinition = linkage "operator" operatordecl callablebody (41)
operatordecl = "->" (42)
operatordecl = "=" (43)
operatordecl = "+" (44)
operatordecl = "-" (45)
operatordecl = "*" (46)
operatordecl = "/" (47)
operatordecl = "%" (48)
operatordecl = "&&" (49)
operatordecl = "||" (50)
operatordecl = "&" (51)
operatordecl = "|" (52)
operatordecl = "<<" (53)
operatordecl = ">>" (54)
operatordecl = "~" (55)
operatordecl = "!" (56)
operatordecl = "(" ")" (57)
operatordecl = "[" "]" (58)
operatordecl = "==" (59)
operatordecl = "!=" (60)
operatordecl = ">=" (61)
operatordecl = "<=" (62)
operatordecl = ">" (63)
operatordecl = "<" (64)
callablebody = "(" parameterlist ")" "{" codeblock "}" (scope:65)
callablebody = "(" parameterlist ")" "const" "{" codeblock "}" (scope:66)
main_procedure = "main" "{" codeblock "}" (scope:67)
main_procedure = 
parameterlist = parameters (68)
parameterlist =  (68)
parameters = paramdecl "," parameters
parameters = paramdecl
paramdecl = typespec IDENT (69)
codeblock = statementlist (70)
statementlist = statement statementlist (step)
statementlist = 
statement/L1 = functiondefinition (71)
statement/L1 = typedefinition ";" (71)
statement/L1 = "var" variabledefinition ";" (71)
statement/L1 = expression ";" (72)
statement/L1 = "return" expression ";" (step:73)
statement/L1 = "delete" expression ";" (74)
statement/L1 = "if" "(" expression ")" "{" codeblock "}" (scope:75)
statement/L1 = "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}" (scope:76)
statement/L1 = "while" "(" expression ")" "{" codeblock "}" (scope:77)
statement/L1 = "{" codeblock "}" (scope)
variabledefinition = typespec IDENT (step:78)
variabledefinition = typespec IDENT "=" expression (step:79)
variabledefinition = typespec IDENT "[" expression "]" "=" expression (step:80)
variabledefinition = typespec IDENT "[" expression "]" (step:81)
expression/L1 = "{" expressionlist "}" (82)
expression/L1 = "{" "}" (82)
expression/L1 = "new" typespec ":" expression (83)
expression/L1 = "cast" typespec ":" "{" expression "}" (84)
expression/L1 = "cast" typespec ":" "{" "}" (84)
expression/L2 = IDENT (85)
expression/L2 = BOOLEAN (86)
expression/L2 = CARDINAL (87)
expression/L2 = INTEGER (88)
expression/L2 = FLOAT (89)
expression/L2 = "null" (90)
expression/L2 = DQSTRING (91)
expression/L2 = SQSTRING (92)
expression/L2 = "(" expression ")"
expression/L3 = expression "=" expression (93)
expression/L3 = expression "+=" expression (94)
expression/L3 = expression "-=" expression (95)
expression/L3 = expression "*=" expression (96)
expression/L3 = expression "/=" expression (97)
expression/L3 = expression "^=" expression (98)
expression/L3 = expression "&=" expression (99)
expression/L3 = expression "%=" expression (100)
expression/L3 = expression "&&=" expression (101)
expression/L3 = expression "||=" expression (102)
expression/L3 = expression "&=" expression (99)
expression/L3 = expression "|=" expression (103)
expression/L3 = expression "<<=" expression (104)
expression/L3 = expression ">>=" expression (105)
expression/L4 = expression "||" expression (106)
expression/L5 = expression "&&" expression (107)
expression/L6 = expression "|" expression (108)
expression/L7 = expression "^" expression (109)
expression/L7 = expression "&" expression (110)
expression/L8 = expression "==" expression (111)
expression/L8 = expression "!=" expression (112)
expression/L8 = expression "<=" expression (113)
expression/L8 = expression "<" expression (114)
expression/L8 = expression ">=" expression (115)
expression/L8 = expression ">" expression (116)
expression/L9 = expression "+" expression (117)
expression/L9 = expression "-" expression (118)
expression/L9 = "&" expression (110)
expression/L9 = "-" expression (118)
expression/L9 = "+" expression (117)
expression/L9 = "~" expression (119)
expression/L9 = "!" expression (120)
expression/L10 = expression "*" expression (121)
expression/L10 = expression "/" expression (122)
expression/L10 = expression "%" expression (123)
expression/L11 = expression "<<" expression (124)
expression/L11 = expression ">>" expression (125)
expression/L12 = iexpression
expression/L12 = expression "." IDENT (126)
expression/L12 = "*" expression (127)
expression/L13 = expression "(" expressionlist ")" (128)
expression/L13 = expression "(" ")" (128)
expression/L13 = expression "[" expressionlist "]" (129)
iexpression = expression indirection IDENT (130)
indirection = "->" indirection (131)
indirection = "->" (131)
expressionlist = expression "," expressionlist
expressionlist = expression

-- LR(0) states:
[1]
	program = . extern_definitionlist free_definitionlist main_procedure
	extern_definitionlist = . extern_definition extern_definitionlist
	extern_definitionlist = .
	extern_definition = . "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist ")" ";"
	extern_definition = . "extern" DQSTRING "procedure" IDENT "(" extern_paramlist ")" ";"
	extern_definition = . "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist "..." ")" ";"
	extern_definition = . "extern" DQSTRING "procedure" IDENT "(" extern_paramlist "..." ")" ";"
[2]
	program = extern_definitionlist . free_definitionlist main_procedure
	free_definitionlist = . free_definition free_definitionlist
	free_definitionlist = .
	struct_definition = . typedefinition ";"
	struct_definition = . variabledefinition ";"
	struct_definition = . structdefinition
	free_definition = . struct_definition
	free_definition = . functiondefinition
	free_definition = . classdefinition
	free_definition = . interfacedefinition
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	typedefinition = . "typedef" typepath IDENT
	structdefinition = . "struct" IDENT "{" struct_definitionlist "}"
	interfacedefinition = . "interface" IDENT "{" interface_definitionlist "}"
	classdefinition = . "class" IDENT "{" class_definitionlist "}"
	classdefinition = . "class" IDENT ":" inheritlist "{" class_definitionlist "}"
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" IDENT typespec callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody
	variabledefinition = . typespec IDENT
	variabledefinition = . typespec IDENT "=" expression
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression
	variabledefinition = . typespec IDENT "[" expression "]"
[3]
	extern_definitionlist = . extern_definition extern_definitionlist
	extern_definitionlist = extern_definition . extern_definitionlist
	extern_definitionlist = .
	extern_definition = . "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist ")" ";"
	extern_definition = . "extern" DQSTRING "procedure" IDENT "(" extern_paramlist ")" ";"
	extern_definition = . "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist "..." ")" ";"
	extern_definition = . "extern" DQSTRING "procedure" IDENT "(" extern_paramlist "..." ")" ";"
[4]
	extern_definition = "extern" . DQSTRING "function" IDENT typespec "(" extern_paramlist ")" ";"
	extern_definition = "extern" . DQSTRING "procedure" IDENT "(" extern_paramlist ")" ";"
	extern_definition = "extern" . DQSTRING "function" IDENT typespec "(" extern_paramlist "..." ")" ";"
	extern_definition = "extern" . DQSTRING "procedure" IDENT "(" extern_paramlist "..." ")" ";"
[5]
	program = extern_definitionlist free_definitionlist . main_procedure
	main_procedure = . "main" "{" codeblock "}"
	main_procedure = .
[6]
	free_definition = struct_definition .
[7]
	free_definitionlist = . free_definition free_definitionlist
	free_definitionlist = free_definition . free_definitionlist
	free_definitionlist = .
	struct_definition = . typedefinition ";"
	struct_definition = . variabledefinition ";"
	struct_definition = . structdefinition
	free_definition = . struct_definition
	free_definition = . functiondefinition
	free_definition = . classdefinition
	free_definition = . interfacedefinition
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	typedefinition = . "typedef" typepath IDENT
	structdefinition = . "struct" IDENT "{" struct_definitionlist "}"
	interfacedefinition = . "interface" IDENT "{" interface_definitionlist "}"
	classdefinition = . "class" IDENT "{" class_definitionlist "}"
	classdefinition = . "class" IDENT ":" inheritlist "{" class_definitionlist "}"
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" IDENT typespec callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody
	variabledefinition = . typespec IDENT
	variabledefinition = . typespec IDENT "=" expression
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression
	variabledefinition = . typespec IDENT "[" expression "]"
[8]
	typespec/L1 = typename .
	typespec/L1 = typename . "&"
	typespec/L1 = typename . "^"
	typespec/L1 = typename . "^" "&"
	typespec/L1 = typename . "^" "^"
	typespec/L1 = typename . "^" "^" "&"
[9]
	variabledefinition = typespec . IDENT
	variabledefinition = typespec . IDENT "=" expression
	variabledefinition = typespec . IDENT "[" expression "]" "=" expression
	variabledefinition = typespec . IDENT "[" expression "]"
[10]
	struct_definition = typedefinition . ";"
[11]
	struct_definition = structdefinition .
[12]
	free_definition = interfacedefinition .
[13]
	free_definition = classdefinition .
[14]
	functiondefinition = linkage . "function" IDENT typespec callablebody
	functiondefinition = linkage . "procedure" IDENT callablebody
[15]
	free_definition = functiondefinition .
[16]
	struct_definition = variabledefinition . ";"
[17]
	typename/L1 = IDENT .
	typename/L1 = IDENT . "::" typename
[18]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = "const" . typename
	typespec/L1 = "const" . typename "&"
	typespec/L1 = "const" . typename "^"
	typespec/L1 = "const" . typename "^" "&"
	typespec/L1 = "const" . typename "^" "^"
	typespec/L1 = "const" . typename "^" "^" "&"
[19]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typepath/L1 = . typename
	typedefinition = "typedef" . typepath IDENT
[20]
	structdefinition = "struct" . IDENT "{" struct_definitionlist "}"
[21]
	interfacedefinition = "interface" . IDENT "{" interface_definitionlist "}"
[22]
	classdefinition = "class" . IDENT "{" class_definitionlist "}"
	classdefinition = "class" . IDENT ":" inheritlist "{" class_definitionlist "}"
[23]
	linkage = "private" .
[24]
	linkage = "public" .
[25]
	extern_definitionlist = extern_definition extern_definitionlist .
[26]
	extern_definition = "extern" DQSTRING . "function" IDENT typespec "(" extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING . "procedure" IDENT "(" extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING . "function" IDENT typespec "(" extern_paramlist "..." ")" ";"
	extern_definition = "extern" DQSTRING . "procedure" IDENT "(" extern_paramlist "..." ")" ";"
[27]
	program = extern_definitionlist free_definitionlist main_procedure .
[28]
	main_procedure = "main" . "{" codeblock "}"
[29]
	free_definitionlist = free_definition free_definitionlist .
[30]
	typespec/L1 = typename "&" .
[31]
	typespec/L1 = typename "^" .
	typespec/L1 = typename "^" . "&"
	typespec/L1 = typename "^" . "^"
	typespec/L1 = typename "^" . "^" "&"
[32]
	variabledefinition = typespec IDENT .
	variabledefinition = typespec IDENT . "=" expression
	variabledefinition = typespec IDENT . "[" expression "]" "=" expression
	variabledefinition = typespec IDENT . "[" expression "]"
[33]
	struct_definition = typedefinition ";" .
[34]
	functiondefinition = linkage "function" . IDENT typespec callablebody
[35]
	functiondefinition = linkage "procedure" . IDENT callablebody
[36]
	struct_definition = variabledefinition ";" .
[37]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typename/L1 = IDENT "::" . typename
[38]
	typespec/L1 = "const" typename .
	typespec/L1 = "const" typename . "&"
	typespec/L1 = "const" typename . "^"
	typespec/L1 = "const" typename . "^" "&"
	typespec/L1 = "const" typename . "^" "^"
	typespec/L1 = "const" typename . "^" "^" "&"
[39]
	typepath/L1 = typename .
[40]
	typedefinition = "typedef" typepath . IDENT
[41]
	structdefinition = "struct" IDENT . "{" struct_definitionlist "}"
[42]
	interfacedefinition = "interface" IDENT . "{" interface_definitionlist "}"
[43]
	classdefinition = "class" IDENT . "{" class_definitionlist "}"
	classdefinition = "class" IDENT . ":" inheritlist "{" class_definitionlist "}"
[44]
	extern_definition = "extern" DQSTRING "function" . IDENT typespec "(" extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING "function" . IDENT typespec "(" extern_paramlist "..." ")" ";"
[45]
	extern_definition = "extern" DQSTRING "procedure" . IDENT "(" extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING "procedure" . IDENT "(" extern_paramlist "..." ")" ";"
[46]
	typedefinition = . "typedef" typepath IDENT
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" IDENT typespec callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody
	main_procedure = "main" "{" . codeblock "}"
	codeblock = . statementlist
	statementlist = . statement statementlist
	statementlist = .
	statement/L1 = . functiondefinition
	statement/L1 = . typedefinition ";"
	statement/L1 = . "var" variabledefinition ";"
	statement/L1 = . expression ";"
	statement/L1 = . "return" expression ";"
	statement/L1 = . "delete" expression ";"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}"
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "{" codeblock "}"
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[47]
	typespec/L1 = typename "^" "&" .
[48]
	typespec/L1 = typename "^" "^" .
	typespec/L1 = typename "^" "^" . "&"
[49]
	variabledefinition = typespec IDENT "=" . expression
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[50]
	variabledefinition = typespec IDENT "[" . expression "]" "=" expression
	variabledefinition = typespec IDENT "[" . expression "]"
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[51]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	functiondefinition = linkage "function" IDENT . typespec callablebody
[52]
	functiondefinition = linkage "procedure" IDENT . callablebody
	callablebody = . "(" parameterlist ")" "{" codeblock "}"
	callablebody = . "(" parameterlist ")" "const" "{" codeblock "}"
[53]
	typename/L1 = IDENT "::" typename .
[54]
	typespec/L1 = "const" typename "&" .
[55]
	typespec/L1 = "const" typename "^" .
	typespec/L1 = "const" typename "^" . "&"
	typespec/L1 = "const" typename "^" . "^"
	typespec/L1 = "const" typename "^" . "^" "&"
[56]
	typedefinition = "typedef" typepath IDENT .
[57]
	struct_definitionlist = . struct_definition struct_definitionlist
	struct_definitionlist = .
	struct_definition = . typedefinition ";"
	struct_definition = . variabledefinition ";"
	struct_definition = . structdefinition
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	typedefinition = . "typedef" typepath IDENT
	structdefinition = . "struct" IDENT "{" struct_definitionlist "}"
	structdefinition = "struct" IDENT "{" . struct_definitionlist "}"
	variabledefinition = . typespec IDENT
	variabledefinition = . typespec IDENT "=" expression
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression
	variabledefinition = . typespec IDENT "[" expression "]"
[58]
	interface_definitionlist = . interface_definition interface_definitionlist
	interface_definitionlist = .
	interface_definition = . "function" IDENT typespec "(" parameterlist ")" ";"
	interface_definition = . "function" IDENT typespec "(" parameterlist ")" "const" ";"
	interface_definition = . "procedure" IDENT "(" parameterlist ")" ";"
	interface_definition = . "procedure" IDENT "(" parameterlist ")" "const" ";"
	interface_definition = . "operator" operatordecl typespec "(" parameterlist ")" ";"
	interface_definition = . "operator" operatordecl typespec "(" parameterlist ")" "const" ";"
	interface_definition = . "operator" operatordecl "(" parameterlist ")" ";"
	interface_definition = . "operator" operatordecl "(" parameterlist ")" "const" ";"
	interfacedefinition = "interface" IDENT "{" . interface_definitionlist "}"
[59]
	class_definitionlist = . class_definition class_definitionlist
	class_definitionlist = .
	class_definition = . typedefinition ";"
	class_definition = . variabledefinition ";"
	class_definition = . structdefinition
	class_definition = . classdefinition
	class_definition = . interfacedefinition
	class_definition = . constructordefinition
	class_definition = . functiondefinition
	class_definition = . operatordefinition
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	typedefinition = . "typedef" typepath IDENT
	structdefinition = . "struct" IDENT "{" struct_definitionlist "}"
	interfacedefinition = . "interface" IDENT "{" interface_definitionlist "}"
	classdefinition = . "class" IDENT "{" class_definitionlist "}"
	classdefinition = "class" IDENT "{" . class_definitionlist "}"
	classdefinition = . "class" IDENT ":" inheritlist "{" class_definitionlist "}"
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" IDENT typespec callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody
	constructordefinition = . linkage "constructor" callablebody
	constructordefinition = . "destructor" "{" codeblock "}"
	operatordefinition = . linkage "operator" operatordecl typespec callablebody
	operatordefinition = . linkage "operator" operatordecl callablebody
	variabledefinition = . typespec IDENT
	variabledefinition = . typespec IDENT "=" expression
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression
	variabledefinition = . typespec IDENT "[" expression "]"
[60]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typepath/L1 = . typename
	inheritlist = . typepath "," inheritlist
	inheritlist = . typepath
	classdefinition = "class" IDENT ":" . inheritlist "{" class_definitionlist "}"
[61]
	extern_definition = "extern" DQSTRING "function" IDENT . typespec "(" extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING "function" IDENT . typespec "(" extern_paramlist "..." ")" ";"
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
[62]
	extern_definition = "extern" DQSTRING "procedure" IDENT . "(" extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING "procedure" IDENT . "(" extern_paramlist "..." ")" ";"
[63]
	statement/L1 = typedefinition . ";"
[64]
	statement/L1 = functiondefinition .
[65]
	main_procedure = "main" "{" codeblock . "}"
[66]
	codeblock = statementlist .
[67]
	typedefinition = . "typedef" typepath IDENT
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" IDENT typespec callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody
	statementlist = . statement statementlist
	statementlist = statement . statementlist
	statementlist = .
	statement/L1 = . functiondefinition
	statement/L1 = . typedefinition ";"
	statement/L1 = . "var" variabledefinition ";"
	statement/L1 = . expression ";"
	statement/L1 = . "return" expression ";"
	statement/L1 = . "delete" expression ";"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}"
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "{" codeblock "}"
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[68]
	statement/L1 = expression . ";"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[69]
	expression/L12 = iexpression .
[70]
	expression/L2 = BOOLEAN .
[71]
	expression/L2 = IDENT .
[72]
	expression/L2 = DQSTRING .
[73]
	expression/L2 = SQSTRING .
[74]
	expression/L2 = CARDINAL .
[75]
	expression/L2 = INTEGER .
[76]
	expression/L2 = FLOAT .
[77]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L2 = "(" . expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[78]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = "&" . expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[79]
	typedefinition = . "typedef" typepath IDENT
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" IDENT typespec callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody
	codeblock = . statementlist
	statementlist = . statement statementlist
	statementlist = .
	statement/L1 = . functiondefinition
	statement/L1 = . typedefinition ";"
	statement/L1 = . "var" variabledefinition ";"
	statement/L1 = . expression ";"
	statement/L1 = . "return" expression ";"
	statement/L1 = . "delete" expression ";"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}"
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "{" codeblock "}"
	statement/L1 = "{" . codeblock "}"
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = "{" . expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = "{" . "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
	expressionlist = . expression "," expressionlist
	expressionlist = . expression
[80]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = "+" . expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[81]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = "-" . expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[82]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L12 = "*" . expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[83]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = "~" . expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[84]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L9 = "!" . expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[85]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	statement/L1 = "var" . variabledefinition ";"
	variabledefinition = . typespec IDENT
	variabledefinition = . typespec IDENT "=" expression
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression
	variabledefinition = . typespec IDENT "[" expression "]"
[86]
	statement/L1 = "return" . expression ";"
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[87]
	statement/L1 = "delete" . expression ";"
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[88]
	statement/L1 = "if" . "(" expression ")" "{" codeblock "}"
	statement/L1 = "if" . "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}"
[89]
	statement/L1 = "while" . "(" expression ")" "{" codeblock "}"
[90]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	expression/L1 = "new" . typespec ":" expression
[91]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	expression/L1 = "cast" . typespec ":" "{" expression "}"
	expression/L1 = "cast" . typespec ":" "{" "}"
[92]
	expression/L2 = "null" .
[93]
	typespec/L1 = typename "^" "^" "&" .
[94]
	variabledefinition = typespec IDENT "=" expression .
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[95]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = "{" . expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = "{" . "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
	expressionlist = . expression "," expressionlist
	expressionlist = . expression
[96]
	variabledefinition = typespec IDENT "[" expression . "]" "=" expression
	variabledefinition = typespec IDENT "[" expression . "]"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[97]
	functiondefinition = linkage "function" IDENT typespec . callablebody
	callablebody = . "(" parameterlist ")" "{" codeblock "}"
	callablebody = . "(" parameterlist ")" "const" "{" codeblock "}"
[98]
	functiondefinition = linkage "procedure" IDENT callablebody .
[99]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	callablebody = "(" . parameterlist ")" "{" codeblock "}"
	callablebody = "(" . parameterlist ")" "const" "{" codeblock "}"
	parameterlist = . parameters
	parameterlist = .
	parameters = . paramdecl "," parameters
	parameters = . paramdecl
	paramdecl = . typespec IDENT
[100]
	typespec/L1 = "const" typename "^" "&" .
[101]
	typespec/L1 = "const" typename "^" "^" .
	typespec/L1 = "const" typename "^" "^" . "&"
[102]
	structdefinition = "struct" IDENT "{" struct_definitionlist . "}"
[103]
	struct_definitionlist = . struct_definition struct_definitionlist
	struct_definitionlist = struct_definition . struct_definitionlist
	struct_definitionlist = .
	struct_definition = . typedefinition ";"
	struct_definition = . variabledefinition ";"
	struct_definition = . structdefinition
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	typedefinition = . "typedef" typepath IDENT
	structdefinition = . "struct" IDENT "{" struct_definitionlist "}"
	variabledefinition = . typespec IDENT
	variabledefinition = . typespec IDENT "=" expression
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression
	variabledefinition = . typespec IDENT "[" expression "]"
[104]
	interfacedefinition = "interface" IDENT "{" interface_definitionlist . "}"
[105]
	interface_definitionlist = . interface_definition interface_definitionlist
	interface_definitionlist = interface_definition . interface_definitionlist
	interface_definitionlist = .
	interface_definition = . "function" IDENT typespec "(" parameterlist ")" ";"
	interface_definition = . "function" IDENT typespec "(" parameterlist ")" "const" ";"
	interface_definition = . "procedure" IDENT "(" parameterlist ")" ";"
	interface_definition = . "procedure" IDENT "(" parameterlist ")" "const" ";"
	interface_definition = . "operator" operatordecl typespec "(" parameterlist ")" ";"
	interface_definition = . "operator" operatordecl typespec "(" parameterlist ")" "const" ";"
	interface_definition = . "operator" operatordecl "(" parameterlist ")" ";"
	interface_definition = . "operator" operatordecl "(" parameterlist ")" "const" ";"
[106]
	interface_definition = "function" . IDENT typespec "(" parameterlist ")" ";"
	interface_definition = "function" . IDENT typespec "(" parameterlist ")" "const" ";"
[107]
	interface_definition = "procedure" . IDENT "(" parameterlist ")" ";"
	interface_definition = "procedure" . IDENT "(" parameterlist ")" "const" ";"
[108]
	interface_definition = "operator" . operatordecl typespec "(" parameterlist ")" ";"
	interface_definition = "operator" . operatordecl typespec "(" parameterlist ")" "const" ";"
	interface_definition = "operator" . operatordecl "(" parameterlist ")" ";"
	interface_definition = "operator" . operatordecl "(" parameterlist ")" "const" ";"
	operatordecl = . "->"
	operatordecl = . "="
	operatordecl = . "+"
	operatordecl = . "-"
	operatordecl = . "*"
	operatordecl = . "/"
	operatordecl = . "%"
	operatordecl = . "&&"
	operatordecl = . "||"
	operatordecl = . "&"
	operatordecl = . "|"
	operatordecl = . "<<"
	operatordecl = . ">>"
	operatordecl = . "~"
	operatordecl = . "!"
	operatordecl = . "(" ")"
	operatordecl = . "[" "]"
	operatordecl = . "=="
	operatordecl = . "!="
	operatordecl = . ">="
	operatordecl = . "<="
	operatordecl = . ">"
	operatordecl = . "<"
[109]
	classdefinition = "class" IDENT "{" class_definitionlist . "}"
[110]
	class_definitionlist = . class_definition class_definitionlist
	class_definitionlist = class_definition . class_definitionlist
	class_definitionlist = .
	class_definition = . typedefinition ";"
	class_definition = . variabledefinition ";"
	class_definition = . structdefinition
	class_definition = . classdefinition
	class_definition = . interfacedefinition
	class_definition = . constructordefinition
	class_definition = . functiondefinition
	class_definition = . operatordefinition
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	typedefinition = . "typedef" typepath IDENT
	structdefinition = . "struct" IDENT "{" struct_definitionlist "}"
	interfacedefinition = . "interface" IDENT "{" interface_definitionlist "}"
	classdefinition = . "class" IDENT "{" class_definitionlist "}"
	classdefinition = . "class" IDENT ":" inheritlist "{" class_definitionlist "}"
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" IDENT typespec callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody
	constructordefinition = . linkage "constructor" callablebody
	constructordefinition = . "destructor" "{" codeblock "}"
	operatordefinition = . linkage "operator" operatordecl typespec callablebody
	operatordefinition = . linkage "operator" operatordecl callablebody
	variabledefinition = . typespec IDENT
	variabledefinition = . typespec IDENT "=" expression
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression
	variabledefinition = . typespec IDENT "[" expression "]"
[111]
	class_definition = typedefinition . ";"
[112]
	class_definition = structdefinition .
[113]
	class_definition = interfacedefinition .
[114]
	class_definition = classdefinition .
[115]
	functiondefinition = linkage . "function" IDENT typespec callablebody
	functiondefinition = linkage . "procedure" IDENT callablebody
	constructordefinition = linkage . "constructor" callablebody
	operatordefinition = linkage . "operator" operatordecl typespec callablebody
	operatordefinition = linkage . "operator" operatordecl callablebody
[116]
	class_definition = functiondefinition .
[117]
	class_definition = constructordefinition .
[118]
	class_definition = operatordefinition .
[119]
	class_definition = variabledefinition . ";"
[120]
	constructordefinition = "destructor" . "{" codeblock "}"
[121]
	inheritlist = typepath . "," inheritlist
	inheritlist = typepath .
[122]
	classdefinition = "class" IDENT ":" inheritlist . "{" class_definitionlist "}"
[123]
	extern_definition = "extern" DQSTRING "function" IDENT typespec . "(" extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING "function" IDENT typespec . "(" extern_paramlist "..." ")" ";"
[124]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" . extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" . extern_paramlist "..." ")" ";"
	extern_parameters = . typespec "," extern_parameters
	extern_parameters = . typespec
	extern_paramlist = . extern_parameters
	extern_paramlist = .
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
[125]
	statement/L1 = typedefinition ";" .
[126]
	main_procedure = "main" "{" codeblock "}" .
[127]
	statementlist = statement statementlist .
[128]
	iexpression = expression indirection . IDENT
[129]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = expression "(" . expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = expression "(" . ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
	expressionlist = . expression "," expressionlist
	expressionlist = . expression
[130]
	statement/L1 = expression ";" .
[131]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L7 = expression "&" . expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[132]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = expression "^" . expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[133]
	indirection = . "->" indirection
	indirection = "->" . indirection
	indirection = . "->"
	indirection = "->" .
[134]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = expression "=" . expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[135]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = expression "+" . expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[136]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = expression "-" . expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[137]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = expression "*" . expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[138]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = expression "/" . expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[139]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L10 = expression "%" . expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[140]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L5 = expression "&&" . expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[141]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L4 = expression "||" . expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[142]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L6 = expression "|" . expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[143]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = expression "<<" . expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[144]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L11 = expression ">>" . expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[145]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	expression/L13 = expression "[" . expressionlist "]"
	iexpression = . expression indirection IDENT
	expressionlist = . expression "," expressionlist
	expressionlist = . expression
[146]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = expression "==" . expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[147]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = expression "!=" . expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[148]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = expression ">=" . expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[149]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = expression "<=" . expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[150]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L8 = expression ">" . expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[151]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = expression "<" . expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[152]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = expression "+=" . expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[153]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = expression "-=" . expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[154]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = expression "*=" . expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[155]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = expression "/=" . expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[156]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = expression "^=" . expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[157]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = expression "&=" . expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = expression "&=" . expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[158]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = expression "%=" . expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[159]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = expression "&&=" . expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[160]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = expression "||=" . expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[161]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = expression "|=" . expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[162]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = expression "<<=" . expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[163]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L3 = expression ">>=" . expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[164]
	expression/L12 = expression "." . IDENT
[165]
	expression/L2 = "(" expression . ")"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[166]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L9 = "&" expression .
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[167]
	statement/L1 = "{" codeblock . "}"
[168]
	statement/L1 = expression . ";"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
	expressionlist = expression . "," expressionlist
	expressionlist = expression .
[169]
	expression/L1 = "{" expressionlist . "}"
[170]
	expression/L1 = "{" "}" .
[171]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L9 = "+" expression .
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[172]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L9 = "-" expression .
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[173]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L12 = "*" expression .
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[174]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L9 = "~" expression .
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[175]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L9 = "!" expression .
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[176]
	statement/L1 = "var" variabledefinition . ";"
[177]
	statement/L1 = "return" expression . ";"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[178]
	statement/L1 = "delete" expression . ";"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[179]
	statement/L1 = "if" "(" . expression ")" "{" codeblock "}"
	statement/L1 = "if" "(" . expression ")" "{" codeblock "}" "else" "{" codeblock "}"
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[180]
	statement/L1 = "while" "(" . expression ")" "{" codeblock "}"
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[181]
	expression/L1 = "new" typespec . ":" expression
[182]
	expression/L1 = "cast" typespec . ":" "{" expression "}"
	expression/L1 = "cast" typespec . ":" "{" "}"
[183]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
	expressionlist = expression . "," expressionlist
	expressionlist = expression .
[184]
	variabledefinition = typespec IDENT "[" expression "]" . "=" expression
	variabledefinition = typespec IDENT "[" expression "]" .
[185]
	functiondefinition = linkage "function" IDENT typespec callablebody .
[186]
	paramdecl = typespec . IDENT
[187]
	callablebody = "(" parameterlist . ")" "{" codeblock "}"
	callablebody = "(" parameterlist . ")" "const" "{" codeblock "}"
[188]
	parameterlist = parameters .
[189]
	parameters = paramdecl . "," parameters
	parameters = paramdecl .
[190]
	typespec/L1 = "const" typename "^" "^" "&" .
[191]
	structdefinition = "struct" IDENT "{" struct_definitionlist "}" .
[192]
	struct_definitionlist = struct_definition struct_definitionlist .
[193]
	interfacedefinition = "interface" IDENT "{" interface_definitionlist "}" .
[194]
	interface_definitionlist = interface_definition interface_definitionlist .
[195]
	interface_definition = "function" IDENT . typespec "(" parameterlist ")" ";"
	interface_definition = "function" IDENT . typespec "(" parameterlist ")" "const" ";"
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
[196]
	interface_definition = "procedure" IDENT . "(" parameterlist ")" ";"
	interface_definition = "procedure" IDENT . "(" parameterlist ")" "const" ";"
[197]
	interface_definition = "operator" operatordecl . typespec "(" parameterlist ")" ";"
	interface_definition = "operator" operatordecl . typespec "(" parameterlist ")" "const" ";"
	interface_definition = "operator" operatordecl . "(" parameterlist ")" ";"
	interface_definition = "operator" operatordecl . "(" parameterlist ")" "const" ";"
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
[198]
	operatordecl = "(" . ")"
[199]
	operatordecl = "&" .
[200]
	operatordecl = "->" .
[201]
	operatordecl = "=" .
[202]
	operatordecl = "+" .
[203]
	operatordecl = "-" .
[204]
	operatordecl = "*" .
[205]
	operatordecl = "/" .
[206]
	operatordecl = "%" .
[207]
	operatordecl = "&&" .
[208]
	operatordecl = "||" .
[209]
	operatordecl = "|" .
[210]
	operatordecl = "<<" .
[211]
	operatordecl = ">>" .
[212]
	operatordecl = "~" .
[213]
	operatordecl = "!" .
[214]
	operatordecl = "[" . "]"
[215]
	operatordecl = "==" .
[216]
	operatordecl = "!=" .
[217]
	operatordecl = ">=" .
[218]
	operatordecl = "<=" .
[219]
	operatordecl = ">" .
[220]
	operatordecl = "<" .
[221]
	classdefinition = "class" IDENT "{" class_definitionlist "}" .
[222]
	class_definitionlist = class_definition class_definitionlist .
[223]
	class_definition = typedefinition ";" .
[224]
	operatordefinition = linkage "operator" . operatordecl typespec callablebody
	operatordefinition = linkage "operator" . operatordecl callablebody
	operatordecl = . "->"
	operatordecl = . "="
	operatordecl = . "+"
	operatordecl = . "-"
	operatordecl = . "*"
	operatordecl = . "/"
	operatordecl = . "%"
	operatordecl = . "&&"
	operatordecl = . "||"
	operatordecl = . "&"
	operatordecl = . "|"
	operatordecl = . "<<"
	operatordecl = . ">>"
	operatordecl = . "~"
	operatordecl = . "!"
	operatordecl = . "(" ")"
	operatordecl = . "[" "]"
	operatordecl = . "=="
	operatordecl = . "!="
	operatordecl = . ">="
	operatordecl = . "<="
	operatordecl = . ">"
	operatordecl = . "<"
[225]
	constructordefinition = linkage "constructor" . callablebody
	callablebody = . "(" parameterlist ")" "{" codeblock "}"
	callablebody = . "(" parameterlist ")" "const" "{" codeblock "}"
[226]
	class_definition = variabledefinition ";" .
[227]
	typedefinition = . "typedef" typepath IDENT
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" IDENT typespec callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody
	constructordefinition = "destructor" "{" . codeblock "}"
	codeblock = . statementlist
	statementlist = . statement statementlist
	statementlist = .
	statement/L1 = . functiondefinition
	statement/L1 = . typedefinition ";"
	statement/L1 = . "var" variabledefinition ";"
	statement/L1 = . expression ";"
	statement/L1 = . "return" expression ";"
	statement/L1 = . "delete" expression ";"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}"
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "{" codeblock "}"
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[228]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typepath/L1 = . typename
	inheritlist = . typepath "," inheritlist
	inheritlist = typepath "," . inheritlist
	inheritlist = . typepath
[229]
	class_definitionlist = . class_definition class_definitionlist
	class_definitionlist = .
	class_definition = . typedefinition ";"
	class_definition = . variabledefinition ";"
	class_definition = . structdefinition
	class_definition = . classdefinition
	class_definition = . interfacedefinition
	class_definition = . constructordefinition
	class_definition = . functiondefinition
	class_definition = . operatordefinition
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	typedefinition = . "typedef" typepath IDENT
	structdefinition = . "struct" IDENT "{" struct_definitionlist "}"
	interfacedefinition = . "interface" IDENT "{" interface_definitionlist "}"
	classdefinition = . "class" IDENT "{" class_definitionlist "}"
	classdefinition = . "class" IDENT ":" inheritlist "{" class_definitionlist "}"
	classdefinition = "class" IDENT ":" inheritlist "{" . class_definitionlist "}"
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" IDENT typespec callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody
	constructordefinition = . linkage "constructor" callablebody
	constructordefinition = . "destructor" "{" codeblock "}"
	operatordefinition = . linkage "operator" operatordecl typespec callablebody
	operatordefinition = . linkage "operator" operatordecl callablebody
	variabledefinition = . typespec IDENT
	variabledefinition = . typespec IDENT "=" expression
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression
	variabledefinition = . typespec IDENT "[" expression "]"
[230]
	extern_definition = "extern" DQSTRING "function" IDENT typespec "(" . extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING "function" IDENT typespec "(" . extern_paramlist "..." ")" ";"
	extern_parameters = . typespec "," extern_parameters
	extern_parameters = . typespec
	extern_paramlist = . extern_parameters
	extern_paramlist = .
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
[231]
	extern_paramlist = extern_parameters .
[232]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist . ")" ";"
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist . "..." ")" ";"
[233]
	extern_parameters = typespec . "," extern_parameters
	extern_parameters = typespec .
[234]
	iexpression = expression indirection IDENT .
[235]
	expression/L13 = expression "(" expressionlist . ")"
[236]
	expression/L13 = expression "(" ")" .
[237]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L7 = expression "&" expression .
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[238]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression "^" expression .
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[239]
	indirection = "->" indirection .
[240]
	expression/L3 = expression . "=" expression
	expression/L3 = expression "=" expression .
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[241]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression "+" expression .
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[242]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L9 = expression "-" expression .
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[243]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression "*" expression .
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[244]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression "/" expression .
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[245]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L10 = expression "%" expression .
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[246]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L5 = expression "&&" expression .
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[247]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L4 = expression "||" expression .
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[248]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L6 = expression "|" expression .
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[249]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression "<<" expression .
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[250]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L11 = expression ">>" expression .
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[251]
	expression/L13 = expression "[" expressionlist . "]"
[252]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression "==" expression .
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[253]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression "!=" expression .
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[254]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression ">=" expression .
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[255]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression "<=" expression .
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[256]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L8 = expression ">" expression .
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[257]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression "<" expression .
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[258]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression "+=" expression .
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[259]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression "-=" expression .
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[260]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression "*=" expression .
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[261]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression "/=" expression .
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[262]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression "^=" expression .
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[263]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression "&=" expression .
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression "&=" expression .
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[264]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression "%=" expression .
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[265]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression "&&=" expression .
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[266]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression "||=" expression .
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[267]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression "|=" expression .
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[268]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression "<<=" expression .
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[269]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L3 = expression ">>=" expression .
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[270]
	expression/L12 = expression "." IDENT .
[271]
	expression/L2 = "(" expression ")" .
[272]
	statement/L1 = "{" codeblock "}" .
[273]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
	expressionlist = . expression "," expressionlist
	expressionlist = expression "," . expressionlist
	expressionlist = . expression
[274]
	expression/L1 = "{" expressionlist "}" .
[275]
	statement/L1 = "var" variabledefinition ";" .
[276]
	statement/L1 = "return" expression ";" .
[277]
	statement/L1 = "delete" expression ";" .
[278]
	statement/L1 = "if" "(" expression . ")" "{" codeblock "}"
	statement/L1 = "if" "(" expression . ")" "{" codeblock "}" "else" "{" codeblock "}"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[279]
	statement/L1 = "while" "(" expression . ")" "{" codeblock "}"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[280]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = "new" typespec ":" . expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[281]
	expression/L1 = "cast" typespec ":" . "{" expression "}"
	expression/L1 = "cast" typespec ":" . "{" "}"
[282]
	variabledefinition = typespec IDENT "[" expression "]" "=" . expression
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[283]
	paramdecl = typespec IDENT .
[284]
	callablebody = "(" parameterlist ")" . "{" codeblock "}"
	callablebody = "(" parameterlist ")" . "const" "{" codeblock "}"
[285]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	parameters = . paramdecl "," parameters
	parameters = paramdecl "," . parameters
	parameters = . paramdecl
	paramdecl = . typespec IDENT
[286]
	interface_definition = "function" IDENT typespec . "(" parameterlist ")" ";"
	interface_definition = "function" IDENT typespec . "(" parameterlist ")" "const" ";"
[287]
	interface_definition = "procedure" IDENT "(" . parameterlist ")" ";"
	interface_definition = "procedure" IDENT "(" . parameterlist ")" "const" ";"
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	parameterlist = . parameters
	parameterlist = .
	parameters = . paramdecl "," parameters
	parameters = . paramdecl
	paramdecl = . typespec IDENT
[288]
	interface_definition = "operator" operatordecl typespec . "(" parameterlist ")" ";"
	interface_definition = "operator" operatordecl typespec . "(" parameterlist ")" "const" ";"
[289]
	interface_definition = "operator" operatordecl "(" . parameterlist ")" ";"
	interface_definition = "operator" operatordecl "(" . parameterlist ")" "const" ";"
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	parameterlist = . parameters
	parameterlist = .
	parameters = . paramdecl "," parameters
	parameters = . paramdecl
	paramdecl = . typespec IDENT
[290]
	operatordecl = "(" ")" .
[291]
	operatordecl = "[" "]" .
[292]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	operatordefinition = linkage "operator" operatordecl . typespec callablebody
	operatordefinition = linkage "operator" operatordecl . callablebody
	callablebody = . "(" parameterlist ")" "{" codeblock "}"
	callablebody = . "(" parameterlist ")" "const" "{" codeblock "}"
[293]
	constructordefinition = linkage "constructor" callablebody .
[294]
	constructordefinition = "destructor" "{" codeblock . "}"
[295]
	inheritlist = typepath "," inheritlist .
[296]
	classdefinition = "class" IDENT ":" inheritlist "{" class_definitionlist . "}"
[297]
	extern_definition = "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist . ")" ";"
	extern_definition = "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist . "..." ")" ";"
[298]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist ")" . ";"
[299]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist "..." . ")" ";"
[300]
	extern_parameters = . typespec "," extern_parameters
	extern_parameters = typespec "," . extern_parameters
	extern_parameters = . typespec
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
[301]
	expression/L13 = expression "(" expressionlist ")" .
[302]
	expression/L13 = expression "[" expressionlist "]" .
[303]
	expressionlist = expression "," expressionlist .
[304]
	statement/L1 = "if" "(" expression ")" . "{" codeblock "}"
	statement/L1 = "if" "(" expression ")" . "{" codeblock "}" "else" "{" codeblock "}"
[305]
	statement/L1 = "while" "(" expression ")" . "{" codeblock "}"
[306]
	expression/L1 = "new" typespec ":" expression .
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[307]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = "cast" typespec ":" "{" . expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L1 = "cast" typespec ":" "{" . "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[308]
	variabledefinition = typespec IDENT "[" expression "]" "=" expression .
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[309]
	callablebody = "(" parameterlist ")" "const" . "{" codeblock "}"
[310]
	typedefinition = . "typedef" typepath IDENT
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" IDENT typespec callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody
	callablebody = "(" parameterlist ")" "{" . codeblock "}"
	codeblock = . statementlist
	statementlist = . statement statementlist
	statementlist = .
	statement/L1 = . functiondefinition
	statement/L1 = . typedefinition ";"
	statement/L1 = . "var" variabledefinition ";"
	statement/L1 = . expression ";"
	statement/L1 = . "return" expression ";"
	statement/L1 = . "delete" expression ";"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}"
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "{" codeblock "}"
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[311]
	parameters = paramdecl "," parameters .
[312]
	interface_definition = "function" IDENT typespec "(" . parameterlist ")" ";"
	interface_definition = "function" IDENT typespec "(" . parameterlist ")" "const" ";"
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	parameterlist = . parameters
	parameterlist = .
	parameters = . paramdecl "," parameters
	parameters = . paramdecl
	paramdecl = . typespec IDENT
[313]
	interface_definition = "procedure" IDENT "(" parameterlist . ")" ";"
	interface_definition = "procedure" IDENT "(" parameterlist . ")" "const" ";"
[314]
	interface_definition = "operator" operatordecl typespec "(" . parameterlist ")" ";"
	interface_definition = "operator" operatordecl typespec "(" . parameterlist ")" "const" ";"
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	parameterlist = . parameters
	parameterlist = .
	parameters = . paramdecl "," parameters
	parameters = . paramdecl
	paramdecl = . typespec IDENT
[315]
	interface_definition = "operator" operatordecl "(" parameterlist . ")" ";"
	interface_definition = "operator" operatordecl "(" parameterlist . ")" "const" ";"
[316]
	operatordefinition = linkage "operator" operatordecl typespec . callablebody
	callablebody = . "(" parameterlist ")" "{" codeblock "}"
	callablebody = . "(" parameterlist ")" "const" "{" codeblock "}"
[317]
	operatordefinition = linkage "operator" operatordecl callablebody .
[318]
	constructordefinition = "destructor" "{" codeblock "}" .
[319]
	classdefinition = "class" IDENT ":" inheritlist "{" class_definitionlist "}" .
[320]
	extern_definition = "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist ")" . ";"
[321]
	extern_definition = "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist "..." . ")" ";"
[322]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist ")" ";" .
[323]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist "..." ")" . ";"
[324]
	extern_parameters = typespec "," extern_parameters .
[325]
	typedefinition = . "typedef" typepath IDENT
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" IDENT typespec callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody
	codeblock = . statementlist
	statementlist = . statement statementlist
	statementlist = .
	statement/L1 = . functiondefinition
	statement/L1 = . typedefinition ";"
	statement/L1 = . "var" variabledefinition ";"
	statement/L1 = . expression ";"
	statement/L1 = . "return" expression ";"
	statement/L1 = . "delete" expression ";"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}"
	statement/L1 = "if" "(" expression ")" "{" . codeblock "}"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}"
	statement/L1 = "if" "(" expression ")" "{" . codeblock "}" "else" "{" codeblock "}"
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "{" codeblock "}"
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[326]
	typedefinition = . "typedef" typepath IDENT
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" IDENT typespec callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody
	codeblock = . statementlist
	statementlist = . statement statementlist
	statementlist = .
	statement/L1 = . functiondefinition
	statement/L1 = . typedefinition ";"
	statement/L1 = . "var" variabledefinition ";"
	statement/L1 = . expression ";"
	statement/L1 = . "return" expression ";"
	statement/L1 = . "delete" expression ";"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}"
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}"
	statement/L1 = "while" "(" expression ")" "{" . codeblock "}"
	statement/L1 = . "{" codeblock "}"
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[327]
	expression/L1 = "cast" typespec ":" "{" expression . "}"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[328]
	expression/L1 = "cast" typespec ":" "{" "}" .
[329]
	typedefinition = . "typedef" typepath IDENT
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" IDENT typespec callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody
	callablebody = "(" parameterlist ")" "const" "{" . codeblock "}"
	codeblock = . statementlist
	statementlist = . statement statementlist
	statementlist = .
	statement/L1 = . functiondefinition
	statement/L1 = . typedefinition ";"
	statement/L1 = . "var" variabledefinition ";"
	statement/L1 = . expression ";"
	statement/L1 = . "return" expression ";"
	statement/L1 = . "delete" expression ";"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}"
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "{" codeblock "}"
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[330]
	callablebody = "(" parameterlist ")" "{" codeblock . "}"
[331]
	interface_definition = "function" IDENT typespec "(" parameterlist . ")" ";"
	interface_definition = "function" IDENT typespec "(" parameterlist . ")" "const" ";"
[332]
	interface_definition = "procedure" IDENT "(" parameterlist ")" . ";"
	interface_definition = "procedure" IDENT "(" parameterlist ")" . "const" ";"
[333]
	interface_definition = "operator" operatordecl typespec "(" parameterlist . ")" ";"
	interface_definition = "operator" operatordecl typespec "(" parameterlist . ")" "const" ";"
[334]
	interface_definition = "operator" operatordecl "(" parameterlist ")" . ";"
	interface_definition = "operator" operatordecl "(" parameterlist ")" . "const" ";"
[335]
	operatordefinition = linkage "operator" operatordecl typespec callablebody .
[336]
	extern_definition = "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist ")" ";" .
[337]
	extern_definition = "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist "..." ")" . ";"
[338]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist "..." ")" ";" .
[339]
	statement/L1 = "if" "(" expression ")" "{" codeblock . "}"
	statement/L1 = "if" "(" expression ")" "{" codeblock . "}" "else" "{" codeblock "}"
[340]
	statement/L1 = "while" "(" expression ")" "{" codeblock . "}"
[341]
	expression/L1 = "cast" typespec ":" "{" expression "}" .
[342]
	callablebody = "(" parameterlist ")" "const" "{" codeblock . "}"
[343]
	callablebody = "(" parameterlist ")" "{" codeblock "}" .
[344]
	interface_definition = "function" IDENT typespec "(" parameterlist ")" . ";"
	interface_definition = "function" IDENT typespec "(" parameterlist ")" . "const" ";"
[345]
	interface_definition = "procedure" IDENT "(" parameterlist ")" ";" .
[346]
	interface_definition = "procedure" IDENT "(" parameterlist ")" "const" . ";"
[347]
	interface_definition = "operator" operatordecl typespec "(" parameterlist ")" . ";"
	interface_definition = "operator" operatordecl typespec "(" parameterlist ")" . "const" ";"
[348]
	interface_definition = "operator" operatordecl "(" parameterlist ")" ";" .
[349]
	interface_definition = "operator" operatordecl "(" parameterlist ")" "const" . ";"
[350]
	extern_definition = "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist "..." ")" ";" .
[351]
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" .
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" . "else" "{" codeblock "}"
[352]
	statement/L1 = "while" "(" expression ")" "{" codeblock "}" .
[353]
	callablebody = "(" parameterlist ")" "const" "{" codeblock "}" .
[354]
	interface_definition = "function" IDENT typespec "(" parameterlist ")" ";" .
[355]
	interface_definition = "function" IDENT typespec "(" parameterlist ")" "const" . ";"
[356]
	interface_definition = "procedure" IDENT "(" parameterlist ")" "const" ";" .
[357]
	interface_definition = "operator" operatordecl typespec "(" parameterlist ")" ";" .
[358]
	interface_definition = "operator" operatordecl typespec "(" parameterlist ")" "const" . ";"
[359]
	interface_definition = "operator" operatordecl "(" parameterlist ")" "const" ";" .
[360]
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" "else" . "{" codeblock "}"
[361]
	interface_definition = "function" IDENT typespec "(" parameterlist ")" "const" ";" .
[362]
	interface_definition = "operator" operatordecl typespec "(" parameterlist ")" "const" ";" .
[363]
	typedefinition = . "typedef" typepath IDENT
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" IDENT typespec callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody
	codeblock = . statementlist
	statementlist = . statement statementlist
	statementlist = .
	statement/L1 = . functiondefinition
	statement/L1 = . typedefinition ";"
	statement/L1 = . "var" variabledefinition ";"
	statement/L1 = . expression ";"
	statement/L1 = . "return" expression ";"
	statement/L1 = . "delete" expression ";"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}"
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" "else" "{" . codeblock "}"
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "{" codeblock "}"
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[364]
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock . "}"
[365]
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}" .

-- LR(0) state cores (for calculation of SHIFT follow state):
[2]
	program = extern_definitionlist . free_definitionlist main_procedure
[3]
	extern_definitionlist = extern_definition . extern_definitionlist
[4]
	extern_definition = "extern" . DQSTRING "function" IDENT typespec "(" extern_paramlist ")" ";"
	extern_definition = "extern" . DQSTRING "procedure" IDENT "(" extern_paramlist ")" ";"
	extern_definition = "extern" . DQSTRING "function" IDENT typespec "(" extern_paramlist "..." ")" ";"
	extern_definition = "extern" . DQSTRING "procedure" IDENT "(" extern_paramlist "..." ")" ";"
[5]
	program = extern_definitionlist free_definitionlist . main_procedure
[6]
	free_definition = struct_definition .
[7]
	free_definitionlist = free_definition . free_definitionlist
[8]
	typespec/L1 = typename .
	typespec/L1 = typename . "&"
	typespec/L1 = typename . "^"
	typespec/L1 = typename . "^" "&"
	typespec/L1 = typename . "^" "^"
	typespec/L1 = typename . "^" "^" "&"
[9]
	variabledefinition = typespec . IDENT
	variabledefinition = typespec . IDENT "=" expression
	variabledefinition = typespec . IDENT "[" expression "]" "=" expression
	variabledefinition = typespec . IDENT "[" expression "]"
[10]
	struct_definition = typedefinition . ";"
[11]
	struct_definition = structdefinition .
[12]
	free_definition = interfacedefinition .
[13]
	free_definition = classdefinition .
[14]
	functiondefinition = linkage . "function" IDENT typespec callablebody
	functiondefinition = linkage . "procedure" IDENT callablebody
[15]
	free_definition = functiondefinition .
[16]
	struct_definition = variabledefinition . ";"
[17]
	typename/L1 = IDENT .
	typename/L1 = IDENT . "::" typename
[18]
	typespec/L1 = "const" . typename
	typespec/L1 = "const" . typename "&"
	typespec/L1 = "const" . typename "^"
	typespec/L1 = "const" . typename "^" "&"
	typespec/L1 = "const" . typename "^" "^"
	typespec/L1 = "const" . typename "^" "^" "&"
[19]
	typedefinition = "typedef" . typepath IDENT
[20]
	structdefinition = "struct" . IDENT "{" struct_definitionlist "}"
[21]
	interfacedefinition = "interface" . IDENT "{" interface_definitionlist "}"
[22]
	classdefinition = "class" . IDENT "{" class_definitionlist "}"
	classdefinition = "class" . IDENT ":" inheritlist "{" class_definitionlist "}"
[23]
	linkage = "private" .
[24]
	linkage = "public" .
[25]
	extern_definitionlist = extern_definition extern_definitionlist .
[26]
	extern_definition = "extern" DQSTRING . "function" IDENT typespec "(" extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING . "procedure" IDENT "(" extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING . "function" IDENT typespec "(" extern_paramlist "..." ")" ";"
	extern_definition = "extern" DQSTRING . "procedure" IDENT "(" extern_paramlist "..." ")" ";"
[27]
	program = extern_definitionlist free_definitionlist main_procedure .
[28]
	main_procedure = "main" . "{" codeblock "}"
[29]
	free_definitionlist = free_definition free_definitionlist .
[30]
	typespec/L1 = typename "&" .
[31]
	typespec/L1 = typename "^" .
	typespec/L1 = typename "^" . "&"
	typespec/L1 = typename "^" . "^"
	typespec/L1 = typename "^" . "^" "&"
[32]
	variabledefinition = typespec IDENT .
	variabledefinition = typespec IDENT . "=" expression
	variabledefinition = typespec IDENT . "[" expression "]" "=" expression
	variabledefinition = typespec IDENT . "[" expression "]"
[33]
	struct_definition = typedefinition ";" .
[34]
	functiondefinition = linkage "function" . IDENT typespec callablebody
[35]
	functiondefinition = linkage "procedure" . IDENT callablebody
[36]
	struct_definition = variabledefinition ";" .
[37]
	typename/L1 = IDENT "::" . typename
[38]
	typespec/L1 = "const" typename .
	typespec/L1 = "const" typename . "&"
	typespec/L1 = "const" typename . "^"
	typespec/L1 = "const" typename . "^" "&"
	typespec/L1 = "const" typename . "^" "^"
	typespec/L1 = "const" typename . "^" "^" "&"
[39]
	typepath/L1 = typename .
[40]
	typedefinition = "typedef" typepath . IDENT
[41]
	structdefinition = "struct" IDENT . "{" struct_definitionlist "}"
[42]
	interfacedefinition = "interface" IDENT . "{" interface_definitionlist "}"
[43]
	classdefinition = "class" IDENT . "{" class_definitionlist "}"
	classdefinition = "class" IDENT . ":" inheritlist "{" class_definitionlist "}"
[44]
	extern_definition = "extern" DQSTRING "function" . IDENT typespec "(" extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING "function" . IDENT typespec "(" extern_paramlist "..." ")" ";"
[45]
	extern_definition = "extern" DQSTRING "procedure" . IDENT "(" extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING "procedure" . IDENT "(" extern_paramlist "..." ")" ";"
[46]
	main_procedure = "main" "{" . codeblock "}"
[47]
	typespec/L1 = typename "^" "&" .
[48]
	typespec/L1 = typename "^" "^" .
	typespec/L1 = typename "^" "^" . "&"
[49]
	variabledefinition = typespec IDENT "=" . expression
[50]
	variabledefinition = typespec IDENT "[" . expression "]" "=" expression
	variabledefinition = typespec IDENT "[" . expression "]"
[51]
	functiondefinition = linkage "function" IDENT . typespec callablebody
[52]
	functiondefinition = linkage "procedure" IDENT . callablebody
[53]
	typename/L1 = IDENT "::" typename .
[54]
	typespec/L1 = "const" typename "&" .
[55]
	typespec/L1 = "const" typename "^" .
	typespec/L1 = "const" typename "^" . "&"
	typespec/L1 = "const" typename "^" . "^"
	typespec/L1 = "const" typename "^" . "^" "&"
[56]
	typedefinition = "typedef" typepath IDENT .
[57]
	structdefinition = "struct" IDENT "{" . struct_definitionlist "}"
[58]
	interfacedefinition = "interface" IDENT "{" . interface_definitionlist "}"
[59]
	classdefinition = "class" IDENT "{" . class_definitionlist "}"
[60]
	classdefinition = "class" IDENT ":" . inheritlist "{" class_definitionlist "}"
[61]
	extern_definition = "extern" DQSTRING "function" IDENT . typespec "(" extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING "function" IDENT . typespec "(" extern_paramlist "..." ")" ";"
[62]
	extern_definition = "extern" DQSTRING "procedure" IDENT . "(" extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING "procedure" IDENT . "(" extern_paramlist "..." ")" ";"
[63]
	statement/L1 = typedefinition . ";"
[64]
	statement/L1 = functiondefinition .
[65]
	main_procedure = "main" "{" codeblock . "}"
[66]
	codeblock = statementlist .
[67]
	statementlist = statement . statementlist
[68]
	statement/L1 = expression . ";"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[69]
	expression/L12 = iexpression .
[70]
	expression/L2 = BOOLEAN .
[71]
	expression/L2 = IDENT .
[72]
	expression/L2 = DQSTRING .
[73]
	expression/L2 = SQSTRING .
[74]
	expression/L2 = CARDINAL .
[75]
	expression/L2 = INTEGER .
[76]
	expression/L2 = FLOAT .
[77]
	expression/L2 = "(" . expression ")"
[78]
	expression/L9 = "&" . expression
[79]
	statement/L1 = "{" . codeblock "}"
	expression/L1 = "{" . expressionlist "}"
	expression/L1 = "{" . "}"
[80]
	expression/L9 = "+" . expression
[81]
	expression/L9 = "-" . expression
[82]
	expression/L12 = "*" . expression
[83]
	expression/L9 = "~" . expression
[84]
	expression/L9 = "!" . expression
[85]
	statement/L1 = "var" . variabledefinition ";"
[86]
	statement/L1 = "return" . expression ";"
[87]
	statement/L1 = "delete" . expression ";"
[88]
	statement/L1 = "if" . "(" expression ")" "{" codeblock "}"
	statement/L1 = "if" . "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}"
[89]
	statement/L1 = "while" . "(" expression ")" "{" codeblock "}"
[90]
	expression/L1 = "new" . typespec ":" expression
[91]
	expression/L1 = "cast" . typespec ":" "{" expression "}"
	expression/L1 = "cast" . typespec ":" "{" "}"
[92]
	expression/L2 = "null" .
[93]
	typespec/L1 = typename "^" "^" "&" .
[94]
	variabledefinition = typespec IDENT "=" expression .
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[95]
	expression/L1 = "{" . expressionlist "}"
	expression/L1 = "{" . "}"
[96]
	variabledefinition = typespec IDENT "[" expression . "]" "=" expression
	variabledefinition = typespec IDENT "[" expression . "]"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[97]
	functiondefinition = linkage "function" IDENT typespec . callablebody
[98]
	functiondefinition = linkage "procedure" IDENT callablebody .
[99]
	callablebody = "(" . parameterlist ")" "{" codeblock "}"
	callablebody = "(" . parameterlist ")" "const" "{" codeblock "}"
[100]
	typespec/L1 = "const" typename "^" "&" .
[101]
	typespec/L1 = "const" typename "^" "^" .
	typespec/L1 = "const" typename "^" "^" . "&"
[102]
	structdefinition = "struct" IDENT "{" struct_definitionlist . "}"
[103]
	struct_definitionlist = struct_definition . struct_definitionlist
[104]
	interfacedefinition = "interface" IDENT "{" interface_definitionlist . "}"
[105]
	interface_definitionlist = interface_definition . interface_definitionlist
[106]
	interface_definition = "function" . IDENT typespec "(" parameterlist ")" ";"
	interface_definition = "function" . IDENT typespec "(" parameterlist ")" "const" ";"
[107]
	interface_definition = "procedure" . IDENT "(" parameterlist ")" ";"
	interface_definition = "procedure" . IDENT "(" parameterlist ")" "const" ";"
[108]
	interface_definition = "operator" . operatordecl typespec "(" parameterlist ")" ";"
	interface_definition = "operator" . operatordecl typespec "(" parameterlist ")" "const" ";"
	interface_definition = "operator" . operatordecl "(" parameterlist ")" ";"
	interface_definition = "operator" . operatordecl "(" parameterlist ")" "const" ";"
[109]
	classdefinition = "class" IDENT "{" class_definitionlist . "}"
[110]
	class_definitionlist = class_definition . class_definitionlist
[111]
	class_definition = typedefinition . ";"
[112]
	class_definition = structdefinition .
[113]
	class_definition = interfacedefinition .
[114]
	class_definition = classdefinition .
[115]
	functiondefinition = linkage . "function" IDENT typespec callablebody
	functiondefinition = linkage . "procedure" IDENT callablebody
	constructordefinition = linkage . "constructor" callablebody
	operatordefinition = linkage . "operator" operatordecl typespec callablebody
	operatordefinition = linkage . "operator" operatordecl callablebody
[116]
	class_definition = functiondefinition .
[117]
	class_definition = constructordefinition .
[118]
	class_definition = operatordefinition .
[119]
	class_definition = variabledefinition . ";"
[120]
	constructordefinition = "destructor" . "{" codeblock "}"
[121]
	inheritlist = typepath . "," inheritlist
	inheritlist = typepath .
[122]
	classdefinition = "class" IDENT ":" inheritlist . "{" class_definitionlist "}"
[123]
	extern_definition = "extern" DQSTRING "function" IDENT typespec . "(" extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING "function" IDENT typespec . "(" extern_paramlist "..." ")" ";"
[124]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" . extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" . extern_paramlist "..." ")" ";"
[125]
	statement/L1 = typedefinition ";" .
[126]
	main_procedure = "main" "{" codeblock "}" .
[127]
	statementlist = statement statementlist .
[128]
	iexpression = expression indirection . IDENT
[129]
	expression/L13 = expression "(" . expressionlist ")"
	expression/L13 = expression "(" . ")"
[130]
	statement/L1 = expression ";" .
[131]
	expression/L7 = expression "&" . expression
[132]
	expression/L7 = expression "^" . expression
[133]
	indirection = "->" . indirection
	indirection = "->" .
[134]
	expression/L3 = expression "=" . expression
[135]
	expression/L9 = expression "+" . expression
[136]
	expression/L9 = expression "-" . expression
[137]
	expression/L10 = expression "*" . expression
[138]
	expression/L10 = expression "/" . expression
[139]
	expression/L10 = expression "%" . expression
[140]
	expression/L5 = expression "&&" . expression
[141]
	expression/L4 = expression "||" . expression
[142]
	expression/L6 = expression "|" . expression
[143]
	expression/L11 = expression "<<" . expression
[144]
	expression/L11 = expression ">>" . expression
[145]
	expression/L13 = expression "[" . expressionlist "]"
[146]
	expression/L8 = expression "==" . expression
[147]
	expression/L8 = expression "!=" . expression
[148]
	expression/L8 = expression ">=" . expression
[149]
	expression/L8 = expression "<=" . expression
[150]
	expression/L8 = expression ">" . expression
[151]
	expression/L8 = expression "<" . expression
[152]
	expression/L3 = expression "+=" . expression
[153]
	expression/L3 = expression "-=" . expression
[154]
	expression/L3 = expression "*=" . expression
[155]
	expression/L3 = expression "/=" . expression
[156]
	expression/L3 = expression "^=" . expression
[157]
	expression/L3 = expression "&=" . expression
	expression/L3 = expression "&=" . expression
[158]
	expression/L3 = expression "%=" . expression
[159]
	expression/L3 = expression "&&=" . expression
[160]
	expression/L3 = expression "||=" . expression
[161]
	expression/L3 = expression "|=" . expression
[162]
	expression/L3 = expression "<<=" . expression
[163]
	expression/L3 = expression ">>=" . expression
[164]
	expression/L12 = expression "." . IDENT
[165]
	expression/L2 = "(" expression . ")"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[166]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L9 = "&" expression .
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[167]
	statement/L1 = "{" codeblock . "}"
[168]
	statement/L1 = expression . ";"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	expressionlist = expression . "," expressionlist
	expressionlist = expression .
[169]
	expression/L1 = "{" expressionlist . "}"
[170]
	expression/L1 = "{" "}" .
[171]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L9 = "+" expression .
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[172]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L9 = "-" expression .
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[173]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L12 = "*" expression .
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[174]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L9 = "~" expression .
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[175]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L9 = "!" expression .
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[176]
	statement/L1 = "var" variabledefinition . ";"
[177]
	statement/L1 = "return" expression . ";"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[178]
	statement/L1 = "delete" expression . ";"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[179]
	statement/L1 = "if" "(" . expression ")" "{" codeblock "}"
	statement/L1 = "if" "(" . expression ")" "{" codeblock "}" "else" "{" codeblock "}"
[180]
	statement/L1 = "while" "(" . expression ")" "{" codeblock "}"
[181]
	expression/L1 = "new" typespec . ":" expression
[182]
	expression/L1 = "cast" typespec . ":" "{" expression "}"
	expression/L1 = "cast" typespec . ":" "{" "}"
[183]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	expressionlist = expression . "," expressionlist
	expressionlist = expression .
[184]
	variabledefinition = typespec IDENT "[" expression "]" . "=" expression
	variabledefinition = typespec IDENT "[" expression "]" .
[185]
	functiondefinition = linkage "function" IDENT typespec callablebody .
[186]
	paramdecl = typespec . IDENT
[187]
	callablebody = "(" parameterlist . ")" "{" codeblock "}"
	callablebody = "(" parameterlist . ")" "const" "{" codeblock "}"
[188]
	parameterlist = parameters .
[189]
	parameters = paramdecl . "," parameters
	parameters = paramdecl .
[190]
	typespec/L1 = "const" typename "^" "^" "&" .
[191]
	structdefinition = "struct" IDENT "{" struct_definitionlist "}" .
[192]
	struct_definitionlist = struct_definition struct_definitionlist .
[193]
	interfacedefinition = "interface" IDENT "{" interface_definitionlist "}" .
[194]
	interface_definitionlist = interface_definition interface_definitionlist .
[195]
	interface_definition = "function" IDENT . typespec "(" parameterlist ")" ";"
	interface_definition = "function" IDENT . typespec "(" parameterlist ")" "const" ";"
[196]
	interface_definition = "procedure" IDENT . "(" parameterlist ")" ";"
	interface_definition = "procedure" IDENT . "(" parameterlist ")" "const" ";"
[197]
	interface_definition = "operator" operatordecl . typespec "(" parameterlist ")" ";"
	interface_definition = "operator" operatordecl . typespec "(" parameterlist ")" "const" ";"
	interface_definition = "operator" operatordecl . "(" parameterlist ")" ";"
	interface_definition = "operator" operatordecl . "(" parameterlist ")" "const" ";"
[198]
	operatordecl = "(" . ")"
[199]
	operatordecl = "&" .
[200]
	operatordecl = "->" .
[201]
	operatordecl = "=" .
[202]
	operatordecl = "+" .
[203]
	operatordecl = "-" .
[204]
	operatordecl = "*" .
[205]
	operatordecl = "/" .
[206]
	operatordecl = "%" .
[207]
	operatordecl = "&&" .
[208]
	operatordecl = "||" .
[209]
	operatordecl = "|" .
[210]
	operatordecl = "<<" .
[211]
	operatordecl = ">>" .
[212]
	operatordecl = "~" .
[213]
	operatordecl = "!" .
[214]
	operatordecl = "[" . "]"
[215]
	operatordecl = "==" .
[216]
	operatordecl = "!=" .
[217]
	operatordecl = ">=" .
[218]
	operatordecl = "<=" .
[219]
	operatordecl = ">" .
[220]
	operatordecl = "<" .
[221]
	classdefinition = "class" IDENT "{" class_definitionlist "}" .
[222]
	class_definitionlist = class_definition class_definitionlist .
[223]
	class_definition = typedefinition ";" .
[224]
	operatordefinition = linkage "operator" . operatordecl typespec callablebody
	operatordefinition = linkage "operator" . operatordecl callablebody
[225]
	constructordefinition = linkage "constructor" . callablebody
[226]
	class_definition = variabledefinition ";" .
[227]
	constructordefinition = "destructor" "{" . codeblock "}"
[228]
	inheritlist = typepath "," . inheritlist
[229]
	classdefinition = "class" IDENT ":" inheritlist "{" . class_definitionlist "}"
[230]
	extern_definition = "extern" DQSTRING "function" IDENT typespec "(" . extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING "function" IDENT typespec "(" . extern_paramlist "..." ")" ";"
[231]
	extern_paramlist = extern_parameters .
[232]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist . ")" ";"
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist . "..." ")" ";"
[233]
	extern_parameters = typespec . "," extern_parameters
	extern_parameters = typespec .
[234]
	iexpression = expression indirection IDENT .
[235]
	expression/L13 = expression "(" expressionlist . ")"
[236]
	expression/L13 = expression "(" ")" .
[237]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L7 = expression "&" expression .
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[238]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression "^" expression .
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[239]
	indirection = "->" indirection .
[240]
	expression/L3 = expression . "=" expression
	expression/L3 = expression "=" expression .
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[241]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression "+" expression .
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[242]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L9 = expression "-" expression .
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[243]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression "*" expression .
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[244]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression "/" expression .
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[245]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L10 = expression "%" expression .
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[246]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L5 = expression "&&" expression .
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[247]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L4 = expression "||" expression .
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[248]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L6 = expression "|" expression .
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[249]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression "<<" expression .
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[250]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L11 = expression ">>" expression .
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[251]
	expression/L13 = expression "[" expressionlist . "]"
[252]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression "==" expression .
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[253]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression "!=" expression .
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[254]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression ">=" expression .
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[255]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression "<=" expression .
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[256]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L8 = expression ">" expression .
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[257]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression "<" expression .
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[258]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression "+=" expression .
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[259]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression "-=" expression .
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[260]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression "*=" expression .
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[261]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression "/=" expression .
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[262]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression "^=" expression .
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[263]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression "&=" expression .
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression "&=" expression .
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[264]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression "%=" expression .
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[265]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression "&&=" expression .
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[266]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression "||=" expression .
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[267]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression "|=" expression .
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[268]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression "<<=" expression .
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[269]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L3 = expression ">>=" expression .
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[270]
	expression/L12 = expression "." IDENT .
[271]
	expression/L2 = "(" expression ")" .
[272]
	statement/L1 = "{" codeblock "}" .
[273]
	expressionlist = expression "," . expressionlist
[274]
	expression/L1 = "{" expressionlist "}" .
[275]
	statement/L1 = "var" variabledefinition ";" .
[276]
	statement/L1 = "return" expression ";" .
[277]
	statement/L1 = "delete" expression ";" .
[278]
	statement/L1 = "if" "(" expression . ")" "{" codeblock "}"
	statement/L1 = "if" "(" expression . ")" "{" codeblock "}" "else" "{" codeblock "}"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[279]
	statement/L1 = "while" "(" expression . ")" "{" codeblock "}"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[280]
	expression/L1 = "new" typespec ":" . expression
[281]
	expression/L1 = "cast" typespec ":" . "{" expression "}"
	expression/L1 = "cast" typespec ":" . "{" "}"
[282]
	variabledefinition = typespec IDENT "[" expression "]" "=" . expression
[283]
	paramdecl = typespec IDENT .
[284]
	callablebody = "(" parameterlist ")" . "{" codeblock "}"
	callablebody = "(" parameterlist ")" . "const" "{" codeblock "}"
[285]
	parameters = paramdecl "," . parameters
[286]
	interface_definition = "function" IDENT typespec . "(" parameterlist ")" ";"
	interface_definition = "function" IDENT typespec . "(" parameterlist ")" "const" ";"
[287]
	interface_definition = "procedure" IDENT "(" . parameterlist ")" ";"
	interface_definition = "procedure" IDENT "(" . parameterlist ")" "const" ";"
[288]
	interface_definition = "operator" operatordecl typespec . "(" parameterlist ")" ";"
	interface_definition = "operator" operatordecl typespec . "(" parameterlist ")" "const" ";"
[289]
	interface_definition = "operator" operatordecl "(" . parameterlist ")" ";"
	interface_definition = "operator" operatordecl "(" . parameterlist ")" "const" ";"
[290]
	operatordecl = "(" ")" .
[291]
	operatordecl = "[" "]" .
[292]
	operatordefinition = linkage "operator" operatordecl . typespec callablebody
	operatordefinition = linkage "operator" operatordecl . callablebody
[293]
	constructordefinition = linkage "constructor" callablebody .
[294]
	constructordefinition = "destructor" "{" codeblock . "}"
[295]
	inheritlist = typepath "," inheritlist .
[296]
	classdefinition = "class" IDENT ":" inheritlist "{" class_definitionlist . "}"
[297]
	extern_definition = "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist . ")" ";"
	extern_definition = "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist . "..." ")" ";"
[298]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist ")" . ";"
[299]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist "..." . ")" ";"
[300]
	extern_parameters = typespec "," . extern_parameters
[301]
	expression/L13 = expression "(" expressionlist ")" .
[302]
	expression/L13 = expression "[" expressionlist "]" .
[303]
	expressionlist = expression "," expressionlist .
[304]
	statement/L1 = "if" "(" expression ")" . "{" codeblock "}"
	statement/L1 = "if" "(" expression ")" . "{" codeblock "}" "else" "{" codeblock "}"
[305]
	statement/L1 = "while" "(" expression ")" . "{" codeblock "}"
[306]
	expression/L1 = "new" typespec ":" expression .
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[307]
	expression/L1 = "cast" typespec ":" "{" . expression "}"
	expression/L1 = "cast" typespec ":" "{" . "}"
[308]
	variabledefinition = typespec IDENT "[" expression "]" "=" expression .
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[309]
	callablebody = "(" parameterlist ")" "const" . "{" codeblock "}"
[310]
	callablebody = "(" parameterlist ")" "{" . codeblock "}"
[311]
	parameters = paramdecl "," parameters .
[312]
	interface_definition = "function" IDENT typespec "(" . parameterlist ")" ";"
	interface_definition = "function" IDENT typespec "(" . parameterlist ")" "const" ";"
[313]
	interface_definition = "procedure" IDENT "(" parameterlist . ")" ";"
	interface_definition = "procedure" IDENT "(" parameterlist . ")" "const" ";"
[314]
	interface_definition = "operator" operatordecl typespec "(" . parameterlist ")" ";"
	interface_definition = "operator" operatordecl typespec "(" . parameterlist ")" "const" ";"
[315]
	interface_definition = "operator" operatordecl "(" parameterlist . ")" ";"
	interface_definition = "operator" operatordecl "(" parameterlist . ")" "const" ";"
[316]
	operatordefinition = linkage "operator" operatordecl typespec . callablebody
[317]
	operatordefinition = linkage "operator" operatordecl callablebody .
[318]
	constructordefinition = "destructor" "{" codeblock "}" .
[319]
	classdefinition = "class" IDENT ":" inheritlist "{" class_definitionlist "}" .
[320]
	extern_definition = "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist ")" . ";"
[321]
	extern_definition = "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist "..." . ")" ";"
[322]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist ")" ";" .
[323]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist "..." ")" . ";"
[324]
	extern_parameters = typespec "," extern_parameters .
[325]
	statement/L1 = "if" "(" expression ")" "{" . codeblock "}"
	statement/L1 = "if" "(" expression ")" "{" . codeblock "}" "else" "{" codeblock "}"
[326]
	statement/L1 = "while" "(" expression ")" "{" . codeblock "}"
[327]
	expression/L1 = "cast" typespec ":" "{" expression . "}"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[328]
	expression/L1 = "cast" typespec ":" "{" "}" .
[329]
	callablebody = "(" parameterlist ")" "const" "{" . codeblock "}"
[330]
	callablebody = "(" parameterlist ")" "{" codeblock . "}"
[331]
	interface_definition = "function" IDENT typespec "(" parameterlist . ")" ";"
	interface_definition = "function" IDENT typespec "(" parameterlist . ")" "const" ";"
[332]
	interface_definition = "procedure" IDENT "(" parameterlist ")" . ";"
	interface_definition = "procedure" IDENT "(" parameterlist ")" . "const" ";"
[333]
	interface_definition = "operator" operatordecl typespec "(" parameterlist . ")" ";"
	interface_definition = "operator" operatordecl typespec "(" parameterlist . ")" "const" ";"
[334]
	interface_definition = "operator" operatordecl "(" parameterlist ")" . ";"
	interface_definition = "operator" operatordecl "(" parameterlist ")" . "const" ";"
[335]
	operatordefinition = linkage "operator" operatordecl typespec callablebody .
[336]
	extern_definition = "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist ")" ";" .
[337]
	extern_definition = "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist "..." ")" . ";"
[338]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist "..." ")" ";" .
[339]
	statement/L1 = "if" "(" expression ")" "{" codeblock . "}"
	statement/L1 = "if" "(" expression ")" "{" codeblock . "}" "else" "{" codeblock "}"
[340]
	statement/L1 = "while" "(" expression ")" "{" codeblock . "}"
[341]
	expression/L1 = "cast" typespec ":" "{" expression "}" .
[342]
	callablebody = "(" parameterlist ")" "const" "{" codeblock . "}"
[343]
	callablebody = "(" parameterlist ")" "{" codeblock "}" .
[344]
	interface_definition = "function" IDENT typespec "(" parameterlist ")" . ";"
	interface_definition = "function" IDENT typespec "(" parameterlist ")" . "const" ";"
[345]
	interface_definition = "procedure" IDENT "(" parameterlist ")" ";" .
[346]
	interface_definition = "procedure" IDENT "(" parameterlist ")" "const" . ";"
[347]
	interface_definition = "operator" operatordecl typespec "(" parameterlist ")" . ";"
	interface_definition = "operator" operatordecl typespec "(" parameterlist ")" . "const" ";"
[348]
	interface_definition = "operator" operatordecl "(" parameterlist ")" ";" .
[349]
	interface_definition = "operator" operatordecl "(" parameterlist ")" "const" . ";"
[350]
	extern_definition = "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist "..." ")" ";" .
[351]
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" .
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" . "else" "{" codeblock "}"
[352]
	statement/L1 = "while" "(" expression ")" "{" codeblock "}" .
[353]
	callablebody = "(" parameterlist ")" "const" "{" codeblock "}" .
[354]
	interface_definition = "function" IDENT typespec "(" parameterlist ")" ";" .
[355]
	interface_definition = "function" IDENT typespec "(" parameterlist ")" "const" . ";"
[356]
	interface_definition = "procedure" IDENT "(" parameterlist ")" "const" ";" .
[357]
	interface_definition = "operator" operatordecl typespec "(" parameterlist ")" ";" .
[358]
	interface_definition = "operator" operatordecl typespec "(" parameterlist ")" "const" . ";"
[359]
	interface_definition = "operator" operatordecl "(" parameterlist ")" "const" ";" .
[360]
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" "else" . "{" codeblock "}"
[361]
	interface_definition = "function" IDENT typespec "(" parameterlist ")" "const" ";" .
[362]
	interface_definition = "operator" operatordecl typespec "(" parameterlist ")" "const" ";" .
[363]
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" "else" "{" . codeblock "}"
[364]
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock . "}"
[365]
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}" .

-- LR(1) used FOLLOW sets labeled:
[0]: {$}
[1]: {$ IDENT "function" "procedure" "const" "typedef" "struct" "interface" "class" "private" "public" "main"}
[2]: {$ "main"}
[9]: {'('}
[10]: {')'}
[14]: {';'}
[17]: {IDENT}
[18]: {'}'}
[19]: {'{'}
[25]: {']'}
[26]: {':'}
[59]: {$ IDENT "extern" "function" "procedure" "const" "typedef" "struct" "interface" "class" "private" "public" "main"}
[61]: {"function" "procedure"}
[62]: {IDENT '&' '^'}
[97]: {'(' ';' '&' '^' "->" '=' '+' '-' '*' '/' '%' "&&" "||" '|' "<<" ">>" '[' "==" "!=" ">=" "<=" '>' '<' "+=" "-=" "*=" "/=" "^=" "&=" "%=" "&&=" "||=" "|=" "<<=" ">>=" '.'}
[98]: {$ BOOLEAN IDENT DQSTRING SQSTRING CARDINAL INTEGER FLOAT "function" '(' "procedure" '&' "typedef" '{' '}' "private" "public" '+' '-' '*' '~' '!' "var" "return" "delete" "if" "while" "new" "cast" "null"}
[167]: {'(' '&' '^' "->" '=' '+' '-' '*' '/' '%' "&&" "||" '|' "<<" ">>" '[' ']' "==" "!=" ">=" "<=" '>' '<' "+=" "-=" "*=" "/=" "^=" "&=" "%=" "&&=" "||=" "|=" "<<=" ">>=" '.'}
[168]: {'(' '&' '^'}
[169]: {$ IDENT "const" "typedef" "struct" '}'}
[170]: {$ IDENT "function" "procedure" "const" "typedef" "struct" '}' "interface" "class" "private" "public" "main"}
[171]: {$ "function" "procedure" "operator" '}'}
[173]: {"function" "procedure" "operator" "constructor"}
[174]: {$ IDENT "function" "procedure" "const" "operator" "typedef" "struct" '}' "interface" "class" "private" "public" "constructor" "destructor"}
[175]: {$ IDENT "function" "procedure" "const" "operator" "typedef" "struct" '}' "interface" "class" "private" "public" "constructor" "destructor" "main"}
[176]: {',' '{'}
[179]: {'(' ';' ',' '&' '^' '}' "->" '=' '+' '-' '*' '/' '%' "&&" "||" '|' "<<" ">>" '[' "==" "!=" ">=" "<=" '>' '<' "+=" "-=" "*=" "/=" "^=" "&=" "%=" "&&=" "||=" "|=" "<<=" ">>=" '.'}
[180]: {'&' '^' ':'}
[184]: {')' ','}
[185]: {IDENT '(' "const"}
[186]: {')' "..."}
[188]: {')' "..." ','}
[189]: {')' "..." ',' '&' '^'}
[227]: {'(' ')' '&' '^' "->" '=' '+' '-' '*' '/' '%' "&&" "||" '|' "<<" ">>" '[' "==" "!=" ">=" "<=" '>' '<' "+=" "-=" "*=" "/=" "^=" "&=" "%=" "&&=" "||=" "|=" "<<=" ">>=" '.'}
[229]: {'(' ')' ',' '&' '^' '}' "->" '=' '+' '-' '*' '/' '%' "&&" "||" '|' "<<" ">>" '[' ']' "==" "!=" ">=" "<=" '>' '<' "+=" "-=" "*=" "/=" "^=" "&=" "%=" "&&=" "||=" "|=" "<<=" ">>=" '.'}
[236]: {'(' ')' ';' ',' '&' '^' '}' "->" '=' '+' '-' '*' '/' '%' "&&" "||" '|' "<<" ">>" '[' ']' "==" "!=" ">=" "<=" '>' '<' "+=" "-=" "*=" "/=" "^=" "&=" "%=" "&&=" "||=" "|=" "<<=" ">>=" '.'}
[245]: {$ BOOLEAN IDENT DQSTRING SQSTRING CARDINAL INTEGER FLOAT "function" '(' "procedure" "const" '&' "typedef" "struct" '{' '}' "interface" "class" "private" "public" '+' '-' '*' '~' '!' "main" "var" "return" "delete" "if" "while" "new" "cast" "null"}
[246]: {$ BOOLEAN IDENT DQSTRING SQSTRING CARDINAL INTEGER FLOAT "function" '(' "procedure" "const" "operator" '&' "typedef" "struct" '{' '}' "interface" "class" "private" "public" "constructor" "destructor" '+' '-' '*' '~' '!' "main" "var" "return" "delete" "if" "while" "new" "cast" "null"}
[251]: {')' '}' ']'}
[255]: {IDENT '(' ')' "..." ',' ':'}
[264]: {IDENT ',' '{'}
[267]: {IDENT '(' ')' "..." ',' '&' '^' '{' ':'}
[270]: {IDENT '(' ')' "..." ',' '&' '^' ':'}

-- LALR(1) states (merged LR(1) elements assigned to LR(0) states):
[1]
	program = . extern_definitionlist free_definitionlist main_procedure, FOLLOW [0] -> GOTO 2
	extern_definitionlist = . extern_definition extern_definitionlist, FOLLOW [1] -> GOTO 3
	extern_definition = . "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist ")" ";", FOLLOW [59] -> SHIFT "extern" GOTO 4
	extern_definition = . "extern" DQSTRING "procedure" IDENT "(" extern_paramlist ")" ";", FOLLOW [59] -> SHIFT "extern" GOTO 4
	extern_definition = . "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist "..." ")" ";", FOLLOW [59] -> SHIFT "extern" GOTO 4
	extern_definition = . "extern" DQSTRING "procedure" IDENT "(" extern_paramlist "..." ")" ";", FOLLOW [59] -> SHIFT "extern" GOTO 4
	extern_definitionlist = ., FOLLOW [1] -> REDUCE extern_definitionlist #0
[2]
	program = extern_definitionlist . free_definitionlist main_procedure, FOLLOW [0] -> GOTO 5
	free_definition = . struct_definition, FOLLOW [1] -> GOTO 6
	free_definitionlist = . free_definition free_definitionlist, FOLLOW [2] -> GOTO 7
	typespec/L1 = . typename, FOLLOW [17] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [17] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [17] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [17] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [17] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [17] -> GOTO 8
	variabledefinition = . typespec IDENT, FOLLOW [14] -> GOTO 9
	variabledefinition = . typespec IDENT "=" expression, FOLLOW [14] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression, FOLLOW [14] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]", FOLLOW [14] -> GOTO 9
	struct_definition = . typedefinition ";", FOLLOW [1] -> GOTO 10
	struct_definition = . structdefinition, FOLLOW [1] -> GOTO 11
	free_definition = . interfacedefinition, FOLLOW [1] -> GOTO 12
	free_definition = . classdefinition, FOLLOW [1] -> GOTO 13
	functiondefinition = . linkage "function" IDENT typespec callablebody, FOLLOW [1] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [1] -> GOTO 14
	free_definition = . functiondefinition, FOLLOW [1] -> GOTO 15
	struct_definition = . variabledefinition ";", FOLLOW [1] -> GOTO 16
	typename/L1 = . IDENT, FOLLOW [62] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [62] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [17] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [17] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [17] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [17] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [17] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [17] -> SHIFT "const" GOTO 18
	typedefinition = . "typedef" typepath IDENT, FOLLOW [14] -> SHIFT "typedef" GOTO 19
	structdefinition = . "struct" IDENT "{" struct_definitionlist "}", FOLLOW [1] -> SHIFT "struct" GOTO 20
	interfacedefinition = . "interface" IDENT "{" interface_definitionlist "}", FOLLOW [1] -> SHIFT "interface" GOTO 21
	classdefinition = . "class" IDENT "{" class_definitionlist "}", FOLLOW [1] -> SHIFT "class" GOTO 22
	classdefinition = . "class" IDENT ":" inheritlist "{" class_definitionlist "}", FOLLOW [1] -> SHIFT "class" GOTO 22
	linkage = . "private", FOLLOW [61] -> SHIFT "private" GOTO 23
	linkage = . "public", FOLLOW [61] -> SHIFT "public" GOTO 24
	free_definitionlist = ., FOLLOW [2] -> REDUCE free_definitionlist #0
	linkage = . (34), FOLLOW [61] -> REDUCE linkage #0 CALL linkage {name="private",linkage="internal"}
[3]
	extern_definitionlist = extern_definition . extern_definitionlist, FOLLOW [1] -> GOTO 25
	extern_definitionlist = . extern_definition extern_definitionlist, FOLLOW [1] -> GOTO 3
	extern_definition = . "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist ")" ";", FOLLOW [59] -> SHIFT "extern" GOTO 4
	extern_definition = . "extern" DQSTRING "procedure" IDENT "(" extern_paramlist ")" ";", FOLLOW [59] -> SHIFT "extern" GOTO 4
	extern_definition = . "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist "..." ")" ";", FOLLOW [59] -> SHIFT "extern" GOTO 4
	extern_definition = . "extern" DQSTRING "procedure" IDENT "(" extern_paramlist "..." ")" ";", FOLLOW [59] -> SHIFT "extern" GOTO 4
	extern_definitionlist = ., FOLLOW [1] -> REDUCE extern_definitionlist #0
[4]
	extern_definition = "extern" . DQSTRING "function" IDENT typespec "(" extern_paramlist ")" ";", FOLLOW [59] -> SHIFT DQSTRING GOTO 26
	extern_definition = "extern" . DQSTRING "procedure" IDENT "(" extern_paramlist ")" ";", FOLLOW [59] -> SHIFT DQSTRING GOTO 26
	extern_definition = "extern" . DQSTRING "function" IDENT typespec "(" extern_paramlist "..." ")" ";", FOLLOW [59] -> SHIFT DQSTRING GOTO 26
	extern_definition = "extern" . DQSTRING "procedure" IDENT "(" extern_paramlist "..." ")" ";", FOLLOW [59] -> SHIFT DQSTRING GOTO 26
[5]
	program = extern_definitionlist free_definitionlist . main_procedure, FOLLOW [0] -> GOTO 27
	main_procedure = . "main" "{" codeblock "}", FOLLOW [0] -> SHIFT "main" GOTO 28
	main_procedure = ., FOLLOW [0] -> REDUCE main_procedure #0
[6]
	free_definition = struct_definition ., FOLLOW [1] -> REDUCE free_definition #1
[7]
	free_definitionlist = free_definition . free_definitionlist, FOLLOW [2] -> GOTO 29
	free_definition = . struct_definition, FOLLOW [1] -> GOTO 6
	free_definitionlist = . free_definition free_definitionlist, FOLLOW [2] -> GOTO 7
	typespec/L1 = . typename, FOLLOW [17] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [17] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [17] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [17] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [17] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [17] -> GOTO 8
	variabledefinition = . typespec IDENT, FOLLOW [14] -> GOTO 9
	variabledefinition = . typespec IDENT "=" expression, FOLLOW [14] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression, FOLLOW [14] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]", FOLLOW [14] -> GOTO 9
	struct_definition = . typedefinition ";", FOLLOW [1] -> GOTO 10
	struct_definition = . structdefinition, FOLLOW [1] -> GOTO 11
	free_definition = . interfacedefinition, FOLLOW [1] -> GOTO 12
	free_definition = . classdefinition, FOLLOW [1] -> GOTO 13
	functiondefinition = . linkage "function" IDENT typespec callablebody, FOLLOW [1] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [1] -> GOTO 14
	free_definition = . functiondefinition, FOLLOW [1] -> GOTO 15
	struct_definition = . variabledefinition ";", FOLLOW [1] -> GOTO 16
	typename/L1 = . IDENT, FOLLOW [62] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [62] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [17] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [17] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [17] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [17] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [17] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [17] -> SHIFT "const" GOTO 18
	typedefinition = . "typedef" typepath IDENT, FOLLOW [14] -> SHIFT "typedef" GOTO 19
	structdefinition = . "struct" IDENT "{" struct_definitionlist "}", FOLLOW [1] -> SHIFT "struct" GOTO 20
	interfacedefinition = . "interface" IDENT "{" interface_definitionlist "}", FOLLOW [1] -> SHIFT "interface" GOTO 21
	classdefinition = . "class" IDENT "{" class_definitionlist "}", FOLLOW [1] -> SHIFT "class" GOTO 22
	classdefinition = . "class" IDENT ":" inheritlist "{" class_definitionlist "}", FOLLOW [1] -> SHIFT "class" GOTO 22
	linkage = . "private", FOLLOW [61] -> SHIFT "private" GOTO 23
	linkage = . "public", FOLLOW [61] -> SHIFT "public" GOTO 24
	free_definitionlist = ., FOLLOW [2] -> REDUCE free_definitionlist #0
	linkage = . (34), FOLLOW [61] -> REDUCE linkage #0 CALL linkage {name="private",linkage="internal"}
[8]
	typespec/L1 = typename . "&", FOLLOW [255] -> SHIFT '&' GOTO 30
	typespec/L1 = typename . "^", FOLLOW [255] -> SHIFT '^' GOTO 31
	typespec/L1 = typename . "^" "&", FOLLOW [255] -> SHIFT '^' GOTO 31
	typespec/L1 = typename . "^" "^", FOLLOW [255] -> SHIFT '^' GOTO 31
	typespec/L1 = typename . "^" "^" "&", FOLLOW [255] -> SHIFT '^' GOTO 31
	typespec/L1 = typename . (17), FOLLOW [255] -> REDUCE typespec #1 CALL typespec ""
[9]
	variabledefinition = typespec . IDENT, FOLLOW [14] -> SHIFT IDENT GOTO 32
	variabledefinition = typespec . IDENT "=" expression, FOLLOW [14] -> SHIFT IDENT GOTO 32
	variabledefinition = typespec . IDENT "[" expression "]" "=" expression, FOLLOW [14] -> SHIFT IDENT GOTO 32
	variabledefinition = typespec . IDENT "[" expression "]", FOLLOW [14] -> SHIFT IDENT GOTO 32
[10]
	struct_definition = typedefinition . ";", FOLLOW [170] -> SHIFT ';' GOTO 33
[11]
	struct_definition = structdefinition . (15), FOLLOW [170] -> REDUCE struct_definition #1 CALL definition 1
[12]
	free_definition = interfacedefinition . (15), FOLLOW [1] -> REDUCE free_definition #1 CALL definition 1
[13]
	free_definition = classdefinition . (15), FOLLOW [1] -> REDUCE free_definition #1 CALL definition 1
[14]
	functiondefinition = linkage . "function" IDENT typespec callablebody, FOLLOW [245] -> SHIFT "function" GOTO 34
	functiondefinition = linkage . "procedure" IDENT callablebody, FOLLOW [245] -> SHIFT "procedure" GOTO 35
[15]
	free_definition = functiondefinition . (15), FOLLOW [1] -> REDUCE free_definition #1 CALL definition 1
[16]
	struct_definition = variabledefinition . ";", FOLLOW [170] -> SHIFT ';' GOTO 36
[17]
	typename/L1 = IDENT . "::" typename, FOLLOW [267] -> SHIFT "::" GOTO 37
	typename/L1 = IDENT ., FOLLOW [267] -> REDUCE typename #1
[18]
	typespec/L1 = "const" . typename, FOLLOW [255] -> GOTO 38
	typespec/L1 = "const" . typename "&", FOLLOW [255] -> GOTO 38
	typespec/L1 = "const" . typename "^", FOLLOW [255] -> GOTO 38
	typespec/L1 = "const" . typename "^" "&", FOLLOW [255] -> GOTO 38
	typespec/L1 = "const" . typename "^" "^", FOLLOW [255] -> GOTO 38
	typespec/L1 = "const" . typename "^" "^" "&", FOLLOW [255] -> GOTO 38
	typename/L1 = . IDENT, FOLLOW [270] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [270] -> SHIFT IDENT GOTO 17
[19]
	typepath/L1 = . typename, FOLLOW [17] -> GOTO 39
	typedefinition = "typedef" . typepath IDENT, FOLLOW [14] -> GOTO 40
	typename/L1 = . IDENT, FOLLOW [17] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [17] -> SHIFT IDENT GOTO 17
[20]
	structdefinition = "struct" . IDENT "{" struct_definitionlist "}", FOLLOW [175] -> SHIFT IDENT GOTO 41
[21]
	interfacedefinition = "interface" . IDENT "{" interface_definitionlist "}", FOLLOW [175] -> SHIFT IDENT GOTO 42
[22]
	classdefinition = "class" . IDENT "{" class_definitionlist "}", FOLLOW [175] -> SHIFT IDENT GOTO 43
	classdefinition = "class" . IDENT ":" inheritlist "{" class_definitionlist "}", FOLLOW [175] -> SHIFT IDENT GOTO 43
[23]
	linkage = "private" . (34), FOLLOW [173] -> REDUCE linkage #1 CALL linkage {name="private",linkage="internal"}
[24]
	linkage = "public" . (35), FOLLOW [173] -> REDUCE linkage #1 CALL linkage {name="public",linkage="external"}
[25]
	extern_definitionlist = extern_definition extern_definitionlist ., FOLLOW [1] -> REDUCE extern_definitionlist #2
[26]
	extern_definition = "extern" DQSTRING . "function" IDENT typespec "(" extern_paramlist ")" ";", FOLLOW [59] -> SHIFT "function" GOTO 44
	extern_definition = "extern" DQSTRING . "function" IDENT typespec "(" extern_paramlist "..." ")" ";", FOLLOW [59] -> SHIFT "function" GOTO 44
	extern_definition = "extern" DQSTRING . "procedure" IDENT "(" extern_paramlist ")" ";", FOLLOW [59] -> SHIFT "procedure" GOTO 45
	extern_definition = "extern" DQSTRING . "procedure" IDENT "(" extern_paramlist "..." ")" ";", FOLLOW [59] -> SHIFT "procedure" GOTO 45
[27]
	program = extern_definitionlist free_definitionlist main_procedure . (1) -> ACCEPT
	program = extern_definitionlist free_definitionlist main_procedure . (1), FOLLOW [0] -> REDUCE program #3 CALL program
[28]
	main_procedure = "main" . "{" codeblock "}", FOLLOW [0] -> SHIFT '{' GOTO 46
[29]
	free_definitionlist = free_definition free_definitionlist ., FOLLOW [2] -> REDUCE free_definitionlist #2
[30]
	typespec/L1 = typename "&" . (19), FOLLOW [255] -> REDUCE typespec #2 CALL typespec "&"
[31]
	typespec/L1 = typename "^" . "&", FOLLOW [255] -> SHIFT '&' GOTO 47
	typespec/L1 = typename "^" . "^", FOLLOW [255] -> SHIFT '^' GOTO 48
	typespec/L1 = typename "^" . "^" "&", FOLLOW [255] -> SHIFT '^' GOTO 48
	typespec/L1 = typename "^" . (21), FOLLOW [255] -> REDUCE typespec #2 CALL typespec "^"
[32]
	variabledefinition = typespec IDENT . "=" expression, FOLLOW [14] -> SHIFT '=' GOTO 49
	variabledefinition = typespec IDENT . "[" expression "]" "=" expression, FOLLOW [14] -> SHIFT '[' GOTO 50
	variabledefinition = typespec IDENT . "[" expression "]", FOLLOW [14] -> SHIFT '[' GOTO 50
	variabledefinition = typespec IDENT . (step:78), FOLLOW [14] -> REDUCE variabledefinition #2 CALL vardef
[33]
	struct_definition = typedefinition ";" . (15), FOLLOW [170] -> REDUCE struct_definition #2 CALL definition 1
[34]
	functiondefinition = linkage "function" . IDENT typespec callablebody, FOLLOW [246] -> SHIFT IDENT GOTO 51
[35]
	functiondefinition = linkage "procedure" . IDENT callablebody, FOLLOW [246] -> SHIFT IDENT GOTO 52
[36]
	struct_definition = variabledefinition ";" . (15), FOLLOW [170] -> REDUCE struct_definition #2 CALL definition 1
[37]
	typename/L1 = IDENT "::" . typename, FOLLOW [267] -> GOTO 53
	typename/L1 = . IDENT, FOLLOW [267] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [267] -> SHIFT IDENT GOTO 17
[38]
	typespec/L1 = "const" typename . "&", FOLLOW [255] -> SHIFT '&' GOTO 54
	typespec/L1 = "const" typename . "^", FOLLOW [255] -> SHIFT '^' GOTO 55
	typespec/L1 = "const" typename . "^" "&", FOLLOW [255] -> SHIFT '^' GOTO 55
	typespec/L1 = "const" typename . "^" "^", FOLLOW [255] -> SHIFT '^' GOTO 55
	typespec/L1 = "const" typename . "^" "^" "&", FOLLOW [255] -> SHIFT '^' GOTO 55
	typespec/L1 = "const" typename . (18), FOLLOW [255] -> REDUCE typespec #2 CALL typespec "const "
[39]
	typepath/L1 = typename . (17), FOLLOW [264] -> REDUCE typepath #1 CALL typespec ""
[40]
	typedefinition = "typedef" typepath . IDENT, FOLLOW [14] -> SHIFT IDENT GOTO 56
[41]
	structdefinition = "struct" IDENT . "{" struct_definitionlist "}", FOLLOW [175] -> SHIFT '{' GOTO 57
[42]
	interfacedefinition = "interface" IDENT . "{" interface_definitionlist "}", FOLLOW [175] -> SHIFT '{' GOTO 58
[43]
	classdefinition = "class" IDENT . "{" class_definitionlist "}", FOLLOW [175] -> SHIFT '{' GOTO 59
	classdefinition = "class" IDENT . ":" inheritlist "{" class_definitionlist "}", FOLLOW [175] -> SHIFT ':' GOTO 60
[44]
	extern_definition = "extern" DQSTRING "function" . IDENT typespec "(" extern_paramlist ")" ";", FOLLOW [59] -> SHIFT IDENT GOTO 61
	extern_definition = "extern" DQSTRING "function" . IDENT typespec "(" extern_paramlist "..." ")" ";", FOLLOW [59] -> SHIFT IDENT GOTO 61
[45]
	extern_definition = "extern" DQSTRING "procedure" . IDENT "(" extern_paramlist ")" ";", FOLLOW [59] -> SHIFT IDENT GOTO 62
	extern_definition = "extern" DQSTRING "procedure" . IDENT "(" extern_paramlist "..." ")" ";", FOLLOW [59] -> SHIFT IDENT GOTO 62
[46]
	statement/L1 = . typedefinition ";", FOLLOW [98] -> GOTO 63
	functiondefinition = . linkage "function" IDENT typespec callablebody, FOLLOW [98] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [98] -> GOTO 14
	statement/L1 = . functiondefinition, FOLLOW [98] -> GOTO 64
	main_procedure = "main" "{" . codeblock "}", FOLLOW [0] -> GOTO 65
	codeblock = . statementlist, FOLLOW [18] -> GOTO 66
	statementlist = . statement statementlist, FOLLOW [18] -> GOTO 67
	statement/L1 = . expression ";", FOLLOW [98] -> GOTO 68
	expression/L3 = . expression "=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "+=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "-=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "*=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "/=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "^=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "&=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "%=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "&&=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "||=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "&=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "|=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "<<=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression ">>=" expression, FOLLOW [97] -> GOTO 68
	expression/L4 = . expression "||" expression, FOLLOW [97] -> GOTO 68
	expression/L5 = . expression "&&" expression, FOLLOW [97] -> GOTO 68
	expression/L6 = . expression "|" expression, FOLLOW [97] -> GOTO 68
	expression/L7 = . expression "^" expression, FOLLOW [97] -> GOTO 68
	expression/L7 = . expression "&" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression "==" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression "!=" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression "<=" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression "<" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression ">=" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression ">" expression, FOLLOW [97] -> GOTO 68
	expression/L9 = . expression "+" expression, FOLLOW [97] -> GOTO 68
	expression/L9 = . expression "-" expression, FOLLOW [97] -> GOTO 68
	expression/L10 = . expression "*" expression, FOLLOW [97] -> GOTO 68
	expression/L10 = . expression "/" expression, FOLLOW [97] -> GOTO 68
	expression/L10 = . expression "%" expression, FOLLOW [97] -> GOTO 68
	expression/L11 = . expression "<<" expression, FOLLOW [97] -> GOTO 68
	expression/L11 = . expression ">>" expression, FOLLOW [97] -> GOTO 68
	expression/L12 = . expression "." IDENT, FOLLOW [97] -> GOTO 68
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [97] -> GOTO 68
	expression/L13 = . expression "(" ")", FOLLOW [97] -> GOTO 68
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [97] -> GOTO 68
	iexpression = . expression indirection IDENT, FOLLOW [97] -> GOTO 68
	expression/L12 = . iexpression, FOLLOW [97] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [97] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [97] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [97] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [97] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [97] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [97] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [97] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [97] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [97] -> SHIFT '&' GOTO 78
	typedefinition = . "typedef" typepath IDENT, FOLLOW [14] -> SHIFT "typedef" GOTO 19
	statement/L1 = . "{" codeblock "}", FOLLOW [98] -> SHIFT '{' GOTO 79
	expression/L1 = . "{" expressionlist "}", FOLLOW [97] -> SHIFT '{' GOTO 79
	expression/L1 = . "{" "}", FOLLOW [97] -> SHIFT '{' GOTO 79
	linkage = . "private", FOLLOW [61] -> SHIFT "private" GOTO 23
	linkage = . "public", FOLLOW [61] -> SHIFT "public" GOTO 24
	expression/L9 = . "+" expression, FOLLOW [97] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [97] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [97] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [97] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [97] -> SHIFT '!' GOTO 84
	statement/L1 = . "var" variabledefinition ";", FOLLOW [98] -> SHIFT "var" GOTO 85
	statement/L1 = . "return" expression ";", FOLLOW [98] -> SHIFT "return" GOTO 86
	statement/L1 = . "delete" expression ";", FOLLOW [98] -> SHIFT "delete" GOTO 87
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}", FOLLOW [98] -> SHIFT "if" GOTO 88
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}", FOLLOW [98] -> SHIFT "if" GOTO 88
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}", FOLLOW [98] -> SHIFT "while" GOTO 89
	expression/L1 = . "new" typespec ":" expression, FOLLOW [97] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [97] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [97] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [97] -> SHIFT "null" GOTO 92
	statementlist = ., FOLLOW [18] -> REDUCE statementlist #0
	linkage = . (34), FOLLOW [61] -> REDUCE linkage #0 CALL linkage {name="private",linkage="internal"}
[47]
	typespec/L1 = typename "^" "&" . (23), FOLLOW [255] -> REDUCE typespec #3 CALL typespec "^&"
[48]
	typespec/L1 = typename "^" "^" . "&", FOLLOW [255] -> SHIFT '&' GOTO 93
	typespec/L1 = typename "^" "^" . (25), FOLLOW [255] -> REDUCE typespec #3 CALL typespec "^^"
[49]
	variabledefinition = typespec IDENT "=" . expression, FOLLOW [14] -> GOTO 94
	expression/L3 = . expression "=" expression, FOLLOW [97] -> GOTO 94
	expression/L3 = . expression "+=" expression, FOLLOW [97] -> GOTO 94
	expression/L3 = . expression "-=" expression, FOLLOW [97] -> GOTO 94
	expression/L3 = . expression "*=" expression, FOLLOW [97] -> GOTO 94
	expression/L3 = . expression "/=" expression, FOLLOW [97] -> GOTO 94
	expression/L3 = . expression "^=" expression, FOLLOW [97] -> GOTO 94
	expression/L3 = . expression "&=" expression, FOLLOW [97] -> GOTO 94
	expression/L3 = . expression "%=" expression, FOLLOW [97] -> GOTO 94
	expression/L3 = . expression "&&=" expression, FOLLOW [97] -> GOTO 94
	expression/L3 = . expression "||=" expression, FOLLOW [97] -> GOTO 94
	expression/L3 = . expression "&=" expression, FOLLOW [97] -> GOTO 94
	expression/L3 = . expression "|=" expression, FOLLOW [97] -> GOTO 94
	expression/L3 = . expression "<<=" expression, FOLLOW [97] -> GOTO 94
	expression/L3 = . expression ">>=" expression, FOLLOW [97] -> GOTO 94
	expression/L4 = . expression "||" expression, FOLLOW [97] -> GOTO 94
	expression/L5 = . expression "&&" expression, FOLLOW [97] -> GOTO 94
	expression/L6 = . expression "|" expression, FOLLOW [97] -> GOTO 94
	expression/L7 = . expression "^" expression, FOLLOW [97] -> GOTO 94
	expression/L7 = . expression "&" expression, FOLLOW [97] -> GOTO 94
	expression/L8 = . expression "==" expression, FOLLOW [97] -> GOTO 94
	expression/L8 = . expression "!=" expression, FOLLOW [97] -> GOTO 94
	expression/L8 = . expression "<=" expression, FOLLOW [97] -> GOTO 94
	expression/L8 = . expression "<" expression, FOLLOW [97] -> GOTO 94
	expression/L8 = . expression ">=" expression, FOLLOW [97] -> GOTO 94
	expression/L8 = . expression ">" expression, FOLLOW [97] -> GOTO 94
	expression/L9 = . expression "+" expression, FOLLOW [97] -> GOTO 94
	expression/L9 = . expression "-" expression, FOLLOW [97] -> GOTO 94
	expression/L10 = . expression "*" expression, FOLLOW [97] -> GOTO 94
	expression/L10 = . expression "/" expression, FOLLOW [97] -> GOTO 94
	expression/L10 = . expression "%" expression, FOLLOW [97] -> GOTO 94
	expression/L11 = . expression "<<" expression, FOLLOW [97] -> GOTO 94
	expression/L11 = . expression ">>" expression, FOLLOW [97] -> GOTO 94
	expression/L12 = . expression "." IDENT, FOLLOW [97] -> GOTO 94
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [97] -> GOTO 94
	expression/L13 = . expression "(" ")", FOLLOW [97] -> GOTO 94
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [97] -> GOTO 94
	iexpression = . expression indirection IDENT, FOLLOW [97] -> GOTO 94
	expression/L12 = . iexpression, FOLLOW [97] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [97] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [97] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [97] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [97] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [97] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [97] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [97] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [97] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [97] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [97] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [97] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [97] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [97] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [97] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [97] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [97] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [97] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [97] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [97] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [97] -> SHIFT "null" GOTO 92
[50]
	variabledefinition = typespec IDENT "[" . expression "]" "=" expression, FOLLOW [14] -> GOTO 96
	variabledefinition = typespec IDENT "[" . expression "]", FOLLOW [14] -> GOTO 96
	expression/L3 = . expression "=" expression, FOLLOW [167] -> GOTO 96
	expression/L3 = . expression "+=" expression, FOLLOW [167] -> GOTO 96
	expression/L3 = . expression "-=" expression, FOLLOW [167] -> GOTO 96
	expression/L3 = . expression "*=" expression, FOLLOW [167] -> GOTO 96
	expression/L3 = . expression "/=" expression, FOLLOW [167] -> GOTO 96
	expression/L3 = . expression "^=" expression, FOLLOW [167] -> GOTO 96
	expression/L3 = . expression "&=" expression, FOLLOW [167] -> GOTO 96
	expression/L3 = . expression "%=" expression, FOLLOW [167] -> GOTO 96
	expression/L3 = . expression "&&=" expression, FOLLOW [167] -> GOTO 96
	expression/L3 = . expression "||=" expression, FOLLOW [167] -> GOTO 96
	expression/L3 = . expression "&=" expression, FOLLOW [167] -> GOTO 96
	expression/L3 = . expression "|=" expression, FOLLOW [167] -> GOTO 96
	expression/L3 = . expression "<<=" expression, FOLLOW [167] -> GOTO 96
	expression/L3 = . expression ">>=" expression, FOLLOW [167] -> GOTO 96
	expression/L4 = . expression "||" expression, FOLLOW [167] -> GOTO 96
	expression/L5 = . expression "&&" expression, FOLLOW [167] -> GOTO 96
	expression/L6 = . expression "|" expression, FOLLOW [167] -> GOTO 96
	expression/L7 = . expression "^" expression, FOLLOW [167] -> GOTO 96
	expression/L7 = . expression "&" expression, FOLLOW [167] -> GOTO 96
	expression/L8 = . expression "==" expression, FOLLOW [167] -> GOTO 96
	expression/L8 = . expression "!=" expression, FOLLOW [167] -> GOTO 96
	expression/L8 = . expression "<=" expression, FOLLOW [167] -> GOTO 96
	expression/L8 = . expression "<" expression, FOLLOW [167] -> GOTO 96
	expression/L8 = . expression ">=" expression, FOLLOW [167] -> GOTO 96
	expression/L8 = . expression ">" expression, FOLLOW [167] -> GOTO 96
	expression/L9 = . expression "+" expression, FOLLOW [167] -> GOTO 96
	expression/L9 = . expression "-" expression, FOLLOW [167] -> GOTO 96
	expression/L10 = . expression "*" expression, FOLLOW [167] -> GOTO 96
	expression/L10 = . expression "/" expression, FOLLOW [167] -> GOTO 96
	expression/L10 = . expression "%" expression, FOLLOW [167] -> GOTO 96
	expression/L11 = . expression "<<" expression, FOLLOW [167] -> GOTO 96
	expression/L11 = . expression ">>" expression, FOLLOW [167] -> GOTO 96
	expression/L12 = . expression "." IDENT, FOLLOW [167] -> GOTO 96
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [167] -> GOTO 96
	expression/L13 = . expression "(" ")", FOLLOW [167] -> GOTO 96
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [167] -> GOTO 96
	iexpression = . expression indirection IDENT, FOLLOW [167] -> GOTO 96
	expression/L12 = . iexpression, FOLLOW [167] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [167] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [167] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [167] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [167] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [167] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [167] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [167] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [167] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [167] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [167] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [167] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [167] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [167] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [167] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [167] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [167] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [167] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [167] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [167] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [167] -> SHIFT "null" GOTO 92
[51]
	typespec/L1 = . typename, FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [9] -> GOTO 8
	functiondefinition = linkage "function" IDENT . typespec callablebody, FOLLOW [246] -> GOTO 97
	typename/L1 = . IDENT, FOLLOW [168] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [168] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
[52]
	functiondefinition = linkage "procedure" IDENT . callablebody, FOLLOW [246] -> GOTO 98
	callablebody = . "(" parameterlist ")" "{" codeblock "}", FOLLOW [246] -> SHIFT '(' GOTO 99
	callablebody = . "(" parameterlist ")" "const" "{" codeblock "}", FOLLOW [246] -> SHIFT '(' GOTO 99
[53]
	typename/L1 = IDENT "::" typename ., FOLLOW [267] -> REDUCE typename #3
[54]
	typespec/L1 = "const" typename "&" . (20), FOLLOW [255] -> REDUCE typespec #3 CALL typespec "const&"
[55]
	typespec/L1 = "const" typename "^" . "&", FOLLOW [255] -> SHIFT '&' GOTO 100
	typespec/L1 = "const" typename "^" . "^", FOLLOW [255] -> SHIFT '^' GOTO 101
	typespec/L1 = "const" typename "^" . "^" "&", FOLLOW [255] -> SHIFT '^' GOTO 101
	typespec/L1 = "const" typename "^" . (22), FOLLOW [255] -> REDUCE typespec #3 CALL typespec "const^"
[56]
	typedefinition = "typedef" typepath IDENT . (step:29), FOLLOW [14] -> REDUCE typedefinition #3 CALL typedef
[57]
	structdefinition = "struct" IDENT "{" . struct_definitionlist "}", FOLLOW [175] -> GOTO 102
	struct_definitionlist = . struct_definition struct_definitionlist, FOLLOW [18] -> GOTO 103
	typespec/L1 = . typename, FOLLOW [17] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [17] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [17] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [17] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [17] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [17] -> GOTO 8
	variabledefinition = . typespec IDENT, FOLLOW [14] -> GOTO 9
	variabledefinition = . typespec IDENT "=" expression, FOLLOW [14] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression, FOLLOW [14] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]", FOLLOW [14] -> GOTO 9
	struct_definition = . typedefinition ";", FOLLOW [169] -> GOTO 10
	struct_definition = . structdefinition, FOLLOW [169] -> GOTO 11
	struct_definition = . variabledefinition ";", FOLLOW [169] -> GOTO 16
	typename/L1 = . IDENT, FOLLOW [62] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [62] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [17] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [17] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [17] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [17] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [17] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [17] -> SHIFT "const" GOTO 18
	typedefinition = . "typedef" typepath IDENT, FOLLOW [14] -> SHIFT "typedef" GOTO 19
	structdefinition = . "struct" IDENT "{" struct_definitionlist "}", FOLLOW [175] -> SHIFT "struct" GOTO 20
	struct_definitionlist = ., FOLLOW [18] -> REDUCE struct_definitionlist #0
[58]
	interfacedefinition = "interface" IDENT "{" . interface_definitionlist "}", FOLLOW [175] -> GOTO 104
	interface_definitionlist = . interface_definition interface_definitionlist, FOLLOW [18] -> GOTO 105
	interface_definition = . "function" IDENT typespec "(" parameterlist ")" ";", FOLLOW [171] -> SHIFT "function" GOTO 106
	interface_definition = . "function" IDENT typespec "(" parameterlist ")" "const" ";", FOLLOW [171] -> SHIFT "function" GOTO 106
	interface_definition = . "procedure" IDENT "(" parameterlist ")" ";", FOLLOW [171] -> SHIFT "procedure" GOTO 107
	interface_definition = . "procedure" IDENT "(" parameterlist ")" "const" ";", FOLLOW [171] -> SHIFT "procedure" GOTO 107
	interface_definition = . "operator" operatordecl typespec "(" parameterlist ")" ";", FOLLOW [171] -> SHIFT "operator" GOTO 108
	interface_definition = . "operator" operatordecl typespec "(" parameterlist ")" "const" ";", FOLLOW [171] -> SHIFT "operator" GOTO 108
	interface_definition = . "operator" operatordecl "(" parameterlist ")" ";", FOLLOW [171] -> SHIFT "operator" GOTO 108
	interface_definition = . "operator" operatordecl "(" parameterlist ")" "const" ";", FOLLOW [171] -> SHIFT "operator" GOTO 108
	interface_definitionlist = ., FOLLOW [18] -> REDUCE interface_definitionlist #0
[59]
	classdefinition = "class" IDENT "{" . class_definitionlist "}", FOLLOW [175] -> GOTO 109
	class_definitionlist = . class_definition class_definitionlist, FOLLOW [18] -> GOTO 110
	typespec/L1 = . typename, FOLLOW [17] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [17] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [17] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [17] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [17] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [17] -> GOTO 8
	variabledefinition = . typespec IDENT, FOLLOW [14] -> GOTO 9
	variabledefinition = . typespec IDENT "=" expression, FOLLOW [14] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression, FOLLOW [14] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]", FOLLOW [14] -> GOTO 9
	class_definition = . typedefinition ";", FOLLOW [174] -> GOTO 111
	class_definition = . structdefinition, FOLLOW [174] -> GOTO 112
	class_definition = . interfacedefinition, FOLLOW [174] -> GOTO 113
	class_definition = . classdefinition, FOLLOW [174] -> GOTO 114
	functiondefinition = . linkage "function" IDENT typespec callablebody, FOLLOW [174] -> GOTO 115
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [174] -> GOTO 115
	constructordefinition = . linkage "constructor" callablebody, FOLLOW [174] -> GOTO 115
	operatordefinition = . linkage "operator" operatordecl typespec callablebody, FOLLOW [174] -> GOTO 115
	operatordefinition = . linkage "operator" operatordecl callablebody, FOLLOW [174] -> GOTO 115
	class_definition = . functiondefinition, FOLLOW [174] -> GOTO 116
	class_definition = . constructordefinition, FOLLOW [174] -> GOTO 117
	class_definition = . operatordefinition, FOLLOW [174] -> GOTO 118
	class_definition = . variabledefinition ";", FOLLOW [174] -> GOTO 119
	typename/L1 = . IDENT, FOLLOW [62] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [62] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [17] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [17] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [17] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [17] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [17] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [17] -> SHIFT "const" GOTO 18
	typedefinition = . "typedef" typepath IDENT, FOLLOW [14] -> SHIFT "typedef" GOTO 19
	structdefinition = . "struct" IDENT "{" struct_definitionlist "}", FOLLOW [174] -> SHIFT "struct" GOTO 20
	interfacedefinition = . "interface" IDENT "{" interface_definitionlist "}", FOLLOW [174] -> SHIFT "interface" GOTO 21
	classdefinition = . "class" IDENT "{" class_definitionlist "}", FOLLOW [175] -> SHIFT "class" GOTO 22
	classdefinition = . "class" IDENT ":" inheritlist "{" class_definitionlist "}", FOLLOW [175] -> SHIFT "class" GOTO 22
	linkage = . "private", FOLLOW [173] -> SHIFT "private" GOTO 23
	linkage = . "public", FOLLOW [173] -> SHIFT "public" GOTO 24
	constructordefinition = . "destructor" "{" codeblock "}", FOLLOW [174] -> SHIFT "destructor" GOTO 120
	class_definitionlist = ., FOLLOW [18] -> REDUCE class_definitionlist #0
	linkage = . (34), FOLLOW [173] -> REDUCE linkage #0 CALL linkage {name="private",linkage="internal"}
[60]
	typepath/L1 = . typename, FOLLOW [176] -> GOTO 39
	inheritlist = . typepath "," inheritlist, FOLLOW [19] -> GOTO 121
	inheritlist = . typepath, FOLLOW [19] -> GOTO 121
	classdefinition = "class" IDENT ":" . inheritlist "{" class_definitionlist "}", FOLLOW [175] -> GOTO 122
	typename/L1 = . IDENT, FOLLOW [176] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [176] -> SHIFT IDENT GOTO 17
[61]
	typespec/L1 = . typename, FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [9] -> GOTO 8
	extern_definition = "extern" DQSTRING "function" IDENT . typespec "(" extern_paramlist ")" ";", FOLLOW [59] -> GOTO 123
	extern_definition = "extern" DQSTRING "function" IDENT . typespec "(" extern_paramlist "..." ")" ";", FOLLOW [59] -> GOTO 123
	typename/L1 = . IDENT, FOLLOW [168] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [168] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
[62]
	extern_definition = "extern" DQSTRING "procedure" IDENT . "(" extern_paramlist ")" ";", FOLLOW [59] -> SHIFT '(' GOTO 124
	extern_definition = "extern" DQSTRING "procedure" IDENT . "(" extern_paramlist "..." ")" ";", FOLLOW [59] -> SHIFT '(' GOTO 124
[63]
	statement/L1 = typedefinition . ";", FOLLOW [98] -> SHIFT ';' GOTO 125
[64]
	statement/L1 = functiondefinition . (71), FOLLOW [98] -> REDUCE statement #1 CALL definition
[65]
	main_procedure = "main" "{" codeblock . "}", FOLLOW [0] -> SHIFT '}' GOTO 126
[66]
	codeblock = statementlist . (70), FOLLOW [18] -> REDUCE codeblock #1 CALL codeblock
[67]
	statement/L1 = . typedefinition ";", FOLLOW [98] -> GOTO 63
	functiondefinition = . linkage "function" IDENT typespec callablebody, FOLLOW [98] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [98] -> GOTO 14
	statement/L1 = . functiondefinition, FOLLOW [98] -> GOTO 64
	statementlist = statement . statementlist, FOLLOW [18] -> GOTO 127
	statementlist = . statement statementlist, FOLLOW [18] -> GOTO 67
	statement/L1 = . expression ";", FOLLOW [98] -> GOTO 68
	expression/L3 = . expression "=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "+=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "-=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "*=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "/=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "^=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "&=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "%=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "&&=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "||=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "&=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "|=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "<<=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression ">>=" expression, FOLLOW [97] -> GOTO 68
	expression/L4 = . expression "||" expression, FOLLOW [97] -> GOTO 68
	expression/L5 = . expression "&&" expression, FOLLOW [97] -> GOTO 68
	expression/L6 = . expression "|" expression, FOLLOW [97] -> GOTO 68
	expression/L7 = . expression "^" expression, FOLLOW [97] -> GOTO 68
	expression/L7 = . expression "&" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression "==" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression "!=" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression "<=" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression "<" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression ">=" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression ">" expression, FOLLOW [97] -> GOTO 68
	expression/L9 = . expression "+" expression, FOLLOW [97] -> GOTO 68
	expression/L9 = . expression "-" expression, FOLLOW [97] -> GOTO 68
	expression/L10 = . expression "*" expression, FOLLOW [97] -> GOTO 68
	expression/L10 = . expression "/" expression, FOLLOW [97] -> GOTO 68
	expression/L10 = . expression "%" expression, FOLLOW [97] -> GOTO 68
	expression/L11 = . expression "<<" expression, FOLLOW [97] -> GOTO 68
	expression/L11 = . expression ">>" expression, FOLLOW [97] -> GOTO 68
	expression/L12 = . expression "." IDENT, FOLLOW [97] -> GOTO 68
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [97] -> GOTO 68
	expression/L13 = . expression "(" ")", FOLLOW [97] -> GOTO 68
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [97] -> GOTO 68
	iexpression = . expression indirection IDENT, FOLLOW [97] -> GOTO 68
	expression/L12 = . iexpression, FOLLOW [97] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [97] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [97] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [97] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [97] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [97] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [97] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [97] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [97] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [97] -> SHIFT '&' GOTO 78
	typedefinition = . "typedef" typepath IDENT, FOLLOW [14] -> SHIFT "typedef" GOTO 19
	statement/L1 = . "{" codeblock "}", FOLLOW [98] -> SHIFT '{' GOTO 79
	expression/L1 = . "{" expressionlist "}", FOLLOW [97] -> SHIFT '{' GOTO 79
	expression/L1 = . "{" "}", FOLLOW [97] -> SHIFT '{' GOTO 79
	linkage = . "private", FOLLOW [61] -> SHIFT "private" GOTO 23
	linkage = . "public", FOLLOW [61] -> SHIFT "public" GOTO 24
	expression/L9 = . "+" expression, FOLLOW [97] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [97] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [97] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [97] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [97] -> SHIFT '!' GOTO 84
	statement/L1 = . "var" variabledefinition ";", FOLLOW [98] -> SHIFT "var" GOTO 85
	statement/L1 = . "return" expression ";", FOLLOW [98] -> SHIFT "return" GOTO 86
	statement/L1 = . "delete" expression ";", FOLLOW [98] -> SHIFT "delete" GOTO 87
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}", FOLLOW [98] -> SHIFT "if" GOTO 88
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}", FOLLOW [98] -> SHIFT "if" GOTO 88
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}", FOLLOW [98] -> SHIFT "while" GOTO 89
	expression/L1 = . "new" typespec ":" expression, FOLLOW [97] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [97] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [97] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [97] -> SHIFT "null" GOTO 92
	statementlist = ., FOLLOW [18] -> REDUCE statementlist #0
	linkage = . (34), FOLLOW [61] -> REDUCE linkage #0 CALL linkage {name="private",linkage="internal"}
[68]
	iexpression = expression . indirection IDENT, FOLLOW [97] -> GOTO 128
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [97] -> SHIFT '(' GOTO 129
	expression/L13 = expression . "(" ")", FOLLOW [97] -> SHIFT '(' GOTO 129
	statement/L1 = expression . ";", FOLLOW [98] -> SHIFT ';' GOTO 130
	expression/L7 = expression . "&" expression, FOLLOW [97] -> SHIFT '&' GOTO 131
	expression/L7 = expression . "^" expression, FOLLOW [97] -> SHIFT '^' GOTO 132
	indirection = . "->" indirection, FOLLOW [17] -> SHIFT "->" GOTO 133
	indirection = . "->", FOLLOW [17] -> SHIFT "->" GOTO 133
	expression/L3 = expression . "=" expression, FOLLOW [97] -> SHIFT '=' GOTO 134
	expression/L9 = expression . "+" expression, FOLLOW [97] -> SHIFT '+' GOTO 135
	expression/L9 = expression . "-" expression, FOLLOW [97] -> SHIFT '-' GOTO 136
	expression/L10 = expression . "*" expression, FOLLOW [97] -> SHIFT '*' GOTO 137
	expression/L10 = expression . "/" expression, FOLLOW [97] -> SHIFT '/' GOTO 138
	expression/L10 = expression . "%" expression, FOLLOW [97] -> SHIFT '%' GOTO 139
	expression/L5 = expression . "&&" expression, FOLLOW [97] -> SHIFT "&&" GOTO 140
	expression/L4 = expression . "||" expression, FOLLOW [97] -> SHIFT "||" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [97] -> SHIFT '|' GOTO 142
	expression/L11 = expression . "<<" expression, FOLLOW [97] -> SHIFT "<<" GOTO 143
	expression/L11 = expression . ">>" expression, FOLLOW [97] -> SHIFT ">>" GOTO 144
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [97] -> SHIFT '[' GOTO 145
	expression/L8 = expression . "==" expression, FOLLOW [97] -> SHIFT "==" GOTO 146
	expression/L8 = expression . "!=" expression, FOLLOW [97] -> SHIFT "!=" GOTO 147
	expression/L8 = expression . ">=" expression, FOLLOW [97] -> SHIFT ">=" GOTO 148
	expression/L8 = expression . "<=" expression, FOLLOW [97] -> SHIFT "<=" GOTO 149
	expression/L8 = expression . ">" expression, FOLLOW [97] -> SHIFT '>' GOTO 150
	expression/L8 = expression . "<" expression, FOLLOW [97] -> SHIFT '<' GOTO 151
	expression/L3 = expression . "+=" expression, FOLLOW [97] -> SHIFT "+=" GOTO 152
	expression/L3 = expression . "-=" expression, FOLLOW [97] -> SHIFT "-=" GOTO 153
	expression/L3 = expression . "*=" expression, FOLLOW [97] -> SHIFT "*=" GOTO 154
	expression/L3 = expression . "/=" expression, FOLLOW [97] -> SHIFT "/=" GOTO 155
	expression/L3 = expression . "^=" expression, FOLLOW [97] -> SHIFT "^=" GOTO 156
	expression/L3 = expression . "&=" expression, FOLLOW [97] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [97] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "%=" expression, FOLLOW [97] -> SHIFT "%=" GOTO 158
	expression/L3 = expression . "&&=" expression, FOLLOW [97] -> SHIFT "&&=" GOTO 159
	expression/L3 = expression . "||=" expression, FOLLOW [97] -> SHIFT "||=" GOTO 160
	expression/L3 = expression . "|=" expression, FOLLOW [97] -> SHIFT "|=" GOTO 161
	expression/L3 = expression . "<<=" expression, FOLLOW [97] -> SHIFT "<<=" GOTO 162
	expression/L3 = expression . ">>=" expression, FOLLOW [97] -> SHIFT ">>=" GOTO 163
	expression/L12 = expression . "." IDENT, FOLLOW [97] -> SHIFT '.' GOTO 164
[69]
	expression/L12 = iexpression ., FOLLOW [236] -> REDUCE expression #1
[70]
	expression/L2 = BOOLEAN . (86), FOLLOW [236] -> REDUCE expression #1 CALL constant "constexpr bool"
[71]
	expression/L2 = IDENT . (85), FOLLOW [236] -> REDUCE expression #1 CALL variable
[72]
	expression/L2 = DQSTRING . (91), FOLLOW [236] -> REDUCE expression #1 CALL string_constant "constexpr float"
[73]
	expression/L2 = SQSTRING . (92), FOLLOW [236] -> REDUCE expression #1 CALL char_constant "constexpr float"
[74]
	expression/L2 = CARDINAL . (87), FOLLOW [236] -> REDUCE expression #1 CALL constant "constexpr uint"
[75]
	expression/L2 = INTEGER . (88), FOLLOW [236] -> REDUCE expression #1 CALL constant "constexpr int"
[76]
	expression/L2 = FLOAT . (89), FOLLOW [236] -> REDUCE expression #1 CALL constant "constexpr float"
[77]
	expression/L2 = "(" . expression ")", FOLLOW [236] -> GOTO 165
	expression/L3 = . expression "=" expression, FOLLOW [236] -> GOTO 165
	expression/L3 = . expression "+=" expression, FOLLOW [236] -> GOTO 165
	expression/L3 = . expression "-=" expression, FOLLOW [236] -> GOTO 165
	expression/L3 = . expression "*=" expression, FOLLOW [236] -> GOTO 165
	expression/L3 = . expression "/=" expression, FOLLOW [236] -> GOTO 165
	expression/L3 = . expression "^=" expression, FOLLOW [236] -> GOTO 165
	expression/L3 = . expression "&=" expression, FOLLOW [236] -> GOTO 165
	expression/L3 = . expression "%=" expression, FOLLOW [236] -> GOTO 165
	expression/L3 = . expression "&&=" expression, FOLLOW [236] -> GOTO 165
	expression/L3 = . expression "||=" expression, FOLLOW [236] -> GOTO 165
	expression/L3 = . expression "&=" expression, FOLLOW [236] -> GOTO 165
	expression/L3 = . expression "|=" expression, FOLLOW [236] -> GOTO 165
	expression/L3 = . expression "<<=" expression, FOLLOW [236] -> GOTO 165
	expression/L3 = . expression ">>=" expression, FOLLOW [236] -> GOTO 165
	expression/L4 = . expression "||" expression, FOLLOW [236] -> GOTO 165
	expression/L5 = . expression "&&" expression, FOLLOW [236] -> GOTO 165
	expression/L6 = . expression "|" expression, FOLLOW [236] -> GOTO 165
	expression/L7 = . expression "^" expression, FOLLOW [236] -> GOTO 165
	expression/L7 = . expression "&" expression, FOLLOW [236] -> GOTO 165
	expression/L8 = . expression "==" expression, FOLLOW [236] -> GOTO 165
	expression/L8 = . expression "!=" expression, FOLLOW [236] -> GOTO 165
	expression/L8 = . expression "<=" expression, FOLLOW [236] -> GOTO 165
	expression/L8 = . expression "<" expression, FOLLOW [236] -> GOTO 165
	expression/L8 = . expression ">=" expression, FOLLOW [236] -> GOTO 165
	expression/L8 = . expression ">" expression, FOLLOW [236] -> GOTO 165
	expression/L9 = . expression "+" expression, FOLLOW [236] -> GOTO 165
	expression/L9 = . expression "-" expression, FOLLOW [236] -> GOTO 165
	expression/L10 = . expression "*" expression, FOLLOW [236] -> GOTO 165
	expression/L10 = . expression "/" expression, FOLLOW [236] -> GOTO 165
	expression/L10 = . expression "%" expression, FOLLOW [236] -> GOTO 165
	expression/L11 = . expression "<<" expression, FOLLOW [236] -> GOTO 165
	expression/L11 = . expression ">>" expression, FOLLOW [236] -> GOTO 165
	expression/L12 = . expression "." IDENT, FOLLOW [236] -> GOTO 165
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [236] -> GOTO 165
	expression/L13 = . expression "(" ")", FOLLOW [236] -> GOTO 165
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [236] -> GOTO 165
	iexpression = . expression indirection IDENT, FOLLOW [236] -> GOTO 165
	expression/L12 = . iexpression, FOLLOW [236] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [236] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [236] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [236] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [236] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [236] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [236] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [236] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [236] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [236] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [236] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [236] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [236] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [236] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [236] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [236] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [236] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [236] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [236] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [236] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [236] -> SHIFT "null" GOTO 92
[78]
	expression/L3 = . expression "=" expression, FOLLOW [236] -> GOTO 166
	expression/L3 = . expression "+=" expression, FOLLOW [236] -> GOTO 166
	expression/L3 = . expression "-=" expression, FOLLOW [236] -> GOTO 166
	expression/L3 = . expression "*=" expression, FOLLOW [236] -> GOTO 166
	expression/L3 = . expression "/=" expression, FOLLOW [236] -> GOTO 166
	expression/L3 = . expression "^=" expression, FOLLOW [236] -> GOTO 166
	expression/L3 = . expression "&=" expression, FOLLOW [236] -> GOTO 166
	expression/L3 = . expression "%=" expression, FOLLOW [236] -> GOTO 166
	expression/L3 = . expression "&&=" expression, FOLLOW [236] -> GOTO 166
	expression/L3 = . expression "||=" expression, FOLLOW [236] -> GOTO 166
	expression/L3 = . expression "&=" expression, FOLLOW [236] -> GOTO 166
	expression/L3 = . expression "|=" expression, FOLLOW [236] -> GOTO 166
	expression/L3 = . expression "<<=" expression, FOLLOW [236] -> GOTO 166
	expression/L3 = . expression ">>=" expression, FOLLOW [236] -> GOTO 166
	expression/L4 = . expression "||" expression, FOLLOW [236] -> GOTO 166
	expression/L5 = . expression "&&" expression, FOLLOW [236] -> GOTO 166
	expression/L6 = . expression "|" expression, FOLLOW [236] -> GOTO 166
	expression/L7 = . expression "^" expression, FOLLOW [236] -> GOTO 166
	expression/L7 = . expression "&" expression, FOLLOW [236] -> GOTO 166
	expression/L8 = . expression "==" expression, FOLLOW [236] -> GOTO 166
	expression/L8 = . expression "!=" expression, FOLLOW [236] -> GOTO 166
	expression/L8 = . expression "<=" expression, FOLLOW [236] -> GOTO 166
	expression/L8 = . expression "<" expression, FOLLOW [236] -> GOTO 166
	expression/L8 = . expression ">=" expression, FOLLOW [236] -> GOTO 166
	expression/L8 = . expression ">" expression, FOLLOW [236] -> GOTO 166
	expression/L9 = . expression "+" expression, FOLLOW [236] -> GOTO 166
	expression/L9 = . expression "-" expression, FOLLOW [236] -> GOTO 166
	expression/L9 = "&" . expression, FOLLOW [236] -> GOTO 166
	expression/L10 = . expression "*" expression, FOLLOW [236] -> GOTO 166
	expression/L10 = . expression "/" expression, FOLLOW [236] -> GOTO 166
	expression/L10 = . expression "%" expression, FOLLOW [236] -> GOTO 166
	expression/L11 = . expression "<<" expression, FOLLOW [236] -> GOTO 166
	expression/L11 = . expression ">>" expression, FOLLOW [236] -> GOTO 166
	expression/L12 = . expression "." IDENT, FOLLOW [236] -> GOTO 166
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [236] -> GOTO 166
	expression/L13 = . expression "(" ")", FOLLOW [236] -> GOTO 166
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [236] -> GOTO 166
	iexpression = . expression indirection IDENT, FOLLOW [236] -> GOTO 166
	expression/L12 = . iexpression, FOLLOW [236] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [236] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [236] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [236] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [236] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [236] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [236] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [236] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [236] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [236] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [236] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [236] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [236] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [236] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [236] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [236] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [236] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [236] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [236] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [236] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [236] -> SHIFT "null" GOTO 92
[79]
	statement/L1 = . typedefinition ";", FOLLOW [98] -> GOTO 63
	functiondefinition = . linkage "function" IDENT typespec callablebody, FOLLOW [98] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [98] -> GOTO 14
	statement/L1 = . functiondefinition, FOLLOW [98] -> GOTO 64
	statement/L1 = "{" . codeblock "}", FOLLOW [98] -> GOTO 167
	codeblock = . statementlist, FOLLOW [18] -> GOTO 66
	statementlist = . statement statementlist, FOLLOW [18] -> GOTO 67
	statement/L1 = . expression ";", FOLLOW [98] -> GOTO 168
	expression/L3 = . expression "=" expression, FOLLOW [179] -> GOTO 168
	expression/L3 = . expression "+=" expression, FOLLOW [179] -> GOTO 168
	expression/L3 = . expression "-=" expression, FOLLOW [179] -> GOTO 168
	expression/L3 = . expression "*=" expression, FOLLOW [179] -> GOTO 168
	expression/L3 = . expression "/=" expression, FOLLOW [179] -> GOTO 168
	expression/L3 = . expression "^=" expression, FOLLOW [179] -> GOTO 168
	expression/L3 = . expression "&=" expression, FOLLOW [179] -> GOTO 168
	expression/L3 = . expression "%=" expression, FOLLOW [179] -> GOTO 168
	expression/L3 = . expression "&&=" expression, FOLLOW [179] -> GOTO 168
	expression/L3 = . expression "||=" expression, FOLLOW [179] -> GOTO 168
	expression/L3 = . expression "&=" expression, FOLLOW [179] -> GOTO 168
	expression/L3 = . expression "|=" expression, FOLLOW [179] -> GOTO 168
	expression/L3 = . expression "<<=" expression, FOLLOW [179] -> GOTO 168
	expression/L3 = . expression ">>=" expression, FOLLOW [179] -> GOTO 168
	expression/L4 = . expression "||" expression, FOLLOW [179] -> GOTO 168
	expression/L5 = . expression "&&" expression, FOLLOW [179] -> GOTO 168
	expression/L6 = . expression "|" expression, FOLLOW [179] -> GOTO 168
	expression/L7 = . expression "^" expression, FOLLOW [179] -> GOTO 168
	expression/L7 = . expression "&" expression, FOLLOW [179] -> GOTO 168
	expression/L8 = . expression "==" expression, FOLLOW [179] -> GOTO 168
	expression/L8 = . expression "!=" expression, FOLLOW [179] -> GOTO 168
	expression/L8 = . expression "<=" expression, FOLLOW [179] -> GOTO 168
	expression/L8 = . expression "<" expression, FOLLOW [179] -> GOTO 168
	expression/L8 = . expression ">=" expression, FOLLOW [179] -> GOTO 168
	expression/L8 = . expression ">" expression, FOLLOW [179] -> GOTO 168
	expression/L9 = . expression "+" expression, FOLLOW [179] -> GOTO 168
	expression/L9 = . expression "-" expression, FOLLOW [179] -> GOTO 168
	expression/L10 = . expression "*" expression, FOLLOW [179] -> GOTO 168
	expression/L10 = . expression "/" expression, FOLLOW [179] -> GOTO 168
	expression/L10 = . expression "%" expression, FOLLOW [179] -> GOTO 168
	expression/L11 = . expression "<<" expression, FOLLOW [179] -> GOTO 168
	expression/L11 = . expression ">>" expression, FOLLOW [179] -> GOTO 168
	expression/L12 = . expression "." IDENT, FOLLOW [179] -> GOTO 168
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [179] -> GOTO 168
	expression/L13 = . expression "(" ")", FOLLOW [179] -> GOTO 168
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [179] -> GOTO 168
	iexpression = . expression indirection IDENT, FOLLOW [179] -> GOTO 168
	expressionlist = . expression "," expressionlist, FOLLOW [18] -> GOTO 168
	expressionlist = . expression, FOLLOW [18] -> GOTO 168
	expression/L12 = . iexpression, FOLLOW [179] -> GOTO 69
	expression/L1 = "{" . expressionlist "}", FOLLOW [179] -> GOTO 169
	expression/L2 = . BOOLEAN, FOLLOW [179] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [179] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [179] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [179] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [179] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [179] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [179] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [179] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [179] -> SHIFT '&' GOTO 78
	typedefinition = . "typedef" typepath IDENT, FOLLOW [14] -> SHIFT "typedef" GOTO 19
	statement/L1 = . "{" codeblock "}", FOLLOW [98] -> SHIFT '{' GOTO 79
	expression/L1 = . "{" expressionlist "}", FOLLOW [179] -> SHIFT '{' GOTO 79
	expression/L1 = . "{" "}", FOLLOW [179] -> SHIFT '{' GOTO 79
	expression/L1 = "{" . "}", FOLLOW [179] -> SHIFT '}' GOTO 170
	linkage = . "private", FOLLOW [61] -> SHIFT "private" GOTO 23
	linkage = . "public", FOLLOW [61] -> SHIFT "public" GOTO 24
	expression/L9 = . "+" expression, FOLLOW [179] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [179] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [179] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [179] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [179] -> SHIFT '!' GOTO 84
	statement/L1 = . "var" variabledefinition ";", FOLLOW [98] -> SHIFT "var" GOTO 85
	statement/L1 = . "return" expression ";", FOLLOW [98] -> SHIFT "return" GOTO 86
	statement/L1 = . "delete" expression ";", FOLLOW [98] -> SHIFT "delete" GOTO 87
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}", FOLLOW [98] -> SHIFT "if" GOTO 88
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}", FOLLOW [98] -> SHIFT "if" GOTO 88
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}", FOLLOW [98] -> SHIFT "while" GOTO 89
	expression/L1 = . "new" typespec ":" expression, FOLLOW [179] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [179] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [179] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [179] -> SHIFT "null" GOTO 92
	statementlist = ., FOLLOW [18] -> REDUCE statementlist #0
	linkage = . (34), FOLLOW [61] -> REDUCE linkage #0 CALL linkage {name="private",linkage="internal"}
[80]
	expression/L3 = . expression "=" expression, FOLLOW [236] -> GOTO 171
	expression/L3 = . expression "+=" expression, FOLLOW [236] -> GOTO 171
	expression/L3 = . expression "-=" expression, FOLLOW [236] -> GOTO 171
	expression/L3 = . expression "*=" expression, FOLLOW [236] -> GOTO 171
	expression/L3 = . expression "/=" expression, FOLLOW [236] -> GOTO 171
	expression/L3 = . expression "^=" expression, FOLLOW [236] -> GOTO 171
	expression/L3 = . expression "&=" expression, FOLLOW [236] -> GOTO 171
	expression/L3 = . expression "%=" expression, FOLLOW [236] -> GOTO 171
	expression/L3 = . expression "&&=" expression, FOLLOW [236] -> GOTO 171
	expression/L3 = . expression "||=" expression, FOLLOW [236] -> GOTO 171
	expression/L3 = . expression "&=" expression, FOLLOW [236] -> GOTO 171
	expression/L3 = . expression "|=" expression, FOLLOW [236] -> GOTO 171
	expression/L3 = . expression "<<=" expression, FOLLOW [236] -> GOTO 171
	expression/L3 = . expression ">>=" expression, FOLLOW [236] -> GOTO 171
	expression/L4 = . expression "||" expression, FOLLOW [236] -> GOTO 171
	expression/L5 = . expression "&&" expression, FOLLOW [236] -> GOTO 171
	expression/L6 = . expression "|" expression, FOLLOW [236] -> GOTO 171
	expression/L7 = . expression "^" expression, FOLLOW [236] -> GOTO 171
	expression/L7 = . expression "&" expression, FOLLOW [236] -> GOTO 171
	expression/L8 = . expression "==" expression, FOLLOW [236] -> GOTO 171
	expression/L8 = . expression "!=" expression, FOLLOW [236] -> GOTO 171
	expression/L8 = . expression "<=" expression, FOLLOW [236] -> GOTO 171
	expression/L8 = . expression "<" expression, FOLLOW [236] -> GOTO 171
	expression/L8 = . expression ">=" expression, FOLLOW [236] -> GOTO 171
	expression/L8 = . expression ">" expression, FOLLOW [236] -> GOTO 171
	expression/L9 = . expression "+" expression, FOLLOW [236] -> GOTO 171
	expression/L9 = . expression "-" expression, FOLLOW [236] -> GOTO 171
	expression/L9 = "+" . expression, FOLLOW [236] -> GOTO 171
	expression/L10 = . expression "*" expression, FOLLOW [236] -> GOTO 171
	expression/L10 = . expression "/" expression, FOLLOW [236] -> GOTO 171
	expression/L10 = . expression "%" expression, FOLLOW [236] -> GOTO 171
	expression/L11 = . expression "<<" expression, FOLLOW [236] -> GOTO 171
	expression/L11 = . expression ">>" expression, FOLLOW [236] -> GOTO 171
	expression/L12 = . expression "." IDENT, FOLLOW [236] -> GOTO 171
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [236] -> GOTO 171
	expression/L13 = . expression "(" ")", FOLLOW [236] -> GOTO 171
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [236] -> GOTO 171
	iexpression = . expression indirection IDENT, FOLLOW [236] -> GOTO 171
	expression/L12 = . iexpression, FOLLOW [236] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [236] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [236] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [236] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [236] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [236] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [236] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [236] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [236] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [236] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [236] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [236] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [236] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [236] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [236] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [236] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [236] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [236] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [236] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [236] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [236] -> SHIFT "null" GOTO 92
[81]
	expression/L3 = . expression "=" expression, FOLLOW [236] -> GOTO 172
	expression/L3 = . expression "+=" expression, FOLLOW [236] -> GOTO 172
	expression/L3 = . expression "-=" expression, FOLLOW [236] -> GOTO 172
	expression/L3 = . expression "*=" expression, FOLLOW [236] -> GOTO 172
	expression/L3 = . expression "/=" expression, FOLLOW [236] -> GOTO 172
	expression/L3 = . expression "^=" expression, FOLLOW [236] -> GOTO 172
	expression/L3 = . expression "&=" expression, FOLLOW [236] -> GOTO 172
	expression/L3 = . expression "%=" expression, FOLLOW [236] -> GOTO 172
	expression/L3 = . expression "&&=" expression, FOLLOW [236] -> GOTO 172
	expression/L3 = . expression "||=" expression, FOLLOW [236] -> GOTO 172
	expression/L3 = . expression "&=" expression, FOLLOW [236] -> GOTO 172
	expression/L3 = . expression "|=" expression, FOLLOW [236] -> GOTO 172
	expression/L3 = . expression "<<=" expression, FOLLOW [236] -> GOTO 172
	expression/L3 = . expression ">>=" expression, FOLLOW [236] -> GOTO 172
	expression/L4 = . expression "||" expression, FOLLOW [236] -> GOTO 172
	expression/L5 = . expression "&&" expression, FOLLOW [236] -> GOTO 172
	expression/L6 = . expression "|" expression, FOLLOW [236] -> GOTO 172
	expression/L7 = . expression "^" expression, FOLLOW [236] -> GOTO 172
	expression/L7 = . expression "&" expression, FOLLOW [236] -> GOTO 172
	expression/L8 = . expression "==" expression, FOLLOW [236] -> GOTO 172
	expression/L8 = . expression "!=" expression, FOLLOW [236] -> GOTO 172
	expression/L8 = . expression "<=" expression, FOLLOW [236] -> GOTO 172
	expression/L8 = . expression "<" expression, FOLLOW [236] -> GOTO 172
	expression/L8 = . expression ">=" expression, FOLLOW [236] -> GOTO 172
	expression/L8 = . expression ">" expression, FOLLOW [236] -> GOTO 172
	expression/L9 = . expression "+" expression, FOLLOW [236] -> GOTO 172
	expression/L9 = . expression "-" expression, FOLLOW [236] -> GOTO 172
	expression/L9 = "-" . expression, FOLLOW [236] -> GOTO 172
	expression/L10 = . expression "*" expression, FOLLOW [236] -> GOTO 172
	expression/L10 = . expression "/" expression, FOLLOW [236] -> GOTO 172
	expression/L10 = . expression "%" expression, FOLLOW [236] -> GOTO 172
	expression/L11 = . expression "<<" expression, FOLLOW [236] -> GOTO 172
	expression/L11 = . expression ">>" expression, FOLLOW [236] -> GOTO 172
	expression/L12 = . expression "." IDENT, FOLLOW [236] -> GOTO 172
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [236] -> GOTO 172
	expression/L13 = . expression "(" ")", FOLLOW [236] -> GOTO 172
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [236] -> GOTO 172
	iexpression = . expression indirection IDENT, FOLLOW [236] -> GOTO 172
	expression/L12 = . iexpression, FOLLOW [236] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [236] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [236] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [236] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [236] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [236] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [236] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [236] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [236] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [236] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [236] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [236] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [236] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [236] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [236] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [236] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [236] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [236] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [236] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [236] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [236] -> SHIFT "null" GOTO 92
[82]
	expression/L3 = . expression "=" expression, FOLLOW [236] -> GOTO 173
	expression/L3 = . expression "+=" expression, FOLLOW [236] -> GOTO 173
	expression/L3 = . expression "-=" expression, FOLLOW [236] -> GOTO 173
	expression/L3 = . expression "*=" expression, FOLLOW [236] -> GOTO 173
	expression/L3 = . expression "/=" expression, FOLLOW [236] -> GOTO 173
	expression/L3 = . expression "^=" expression, FOLLOW [236] -> GOTO 173
	expression/L3 = . expression "&=" expression, FOLLOW [236] -> GOTO 173
	expression/L3 = . expression "%=" expression, FOLLOW [236] -> GOTO 173
	expression/L3 = . expression "&&=" expression, FOLLOW [236] -> GOTO 173
	expression/L3 = . expression "||=" expression, FOLLOW [236] -> GOTO 173
	expression/L3 = . expression "&=" expression, FOLLOW [236] -> GOTO 173
	expression/L3 = . expression "|=" expression, FOLLOW [236] -> GOTO 173
	expression/L3 = . expression "<<=" expression, FOLLOW [236] -> GOTO 173
	expression/L3 = . expression ">>=" expression, FOLLOW [236] -> GOTO 173
	expression/L4 = . expression "||" expression, FOLLOW [236] -> GOTO 173
	expression/L5 = . expression "&&" expression, FOLLOW [236] -> GOTO 173
	expression/L6 = . expression "|" expression, FOLLOW [236] -> GOTO 173
	expression/L7 = . expression "^" expression, FOLLOW [236] -> GOTO 173
	expression/L7 = . expression "&" expression, FOLLOW [236] -> GOTO 173
	expression/L8 = . expression "==" expression, FOLLOW [236] -> GOTO 173
	expression/L8 = . expression "!=" expression, FOLLOW [236] -> GOTO 173
	expression/L8 = . expression "<=" expression, FOLLOW [236] -> GOTO 173
	expression/L8 = . expression "<" expression, FOLLOW [236] -> GOTO 173
	expression/L8 = . expression ">=" expression, FOLLOW [236] -> GOTO 173
	expression/L8 = . expression ">" expression, FOLLOW [236] -> GOTO 173
	expression/L9 = . expression "+" expression, FOLLOW [236] -> GOTO 173
	expression/L9 = . expression "-" expression, FOLLOW [236] -> GOTO 173
	expression/L10 = . expression "*" expression, FOLLOW [236] -> GOTO 173
	expression/L10 = . expression "/" expression, FOLLOW [236] -> GOTO 173
	expression/L10 = . expression "%" expression, FOLLOW [236] -> GOTO 173
	expression/L11 = . expression "<<" expression, FOLLOW [236] -> GOTO 173
	expression/L11 = . expression ">>" expression, FOLLOW [236] -> GOTO 173
	expression/L12 = . expression "." IDENT, FOLLOW [236] -> GOTO 173
	expression/L12 = "*" . expression, FOLLOW [236] -> GOTO 173
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [236] -> GOTO 173
	expression/L13 = . expression "(" ")", FOLLOW [236] -> GOTO 173
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [236] -> GOTO 173
	iexpression = . expression indirection IDENT, FOLLOW [236] -> GOTO 173
	expression/L12 = . iexpression, FOLLOW [236] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [236] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [236] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [236] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [236] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [236] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [236] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [236] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [236] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [236] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [236] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [236] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [236] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [236] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [236] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [236] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [236] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [236] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [236] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [236] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [236] -> SHIFT "null" GOTO 92
[83]
	expression/L3 = . expression "=" expression, FOLLOW [236] -> GOTO 174
	expression/L3 = . expression "+=" expression, FOLLOW [236] -> GOTO 174
	expression/L3 = . expression "-=" expression, FOLLOW [236] -> GOTO 174
	expression/L3 = . expression "*=" expression, FOLLOW [236] -> GOTO 174
	expression/L3 = . expression "/=" expression, FOLLOW [236] -> GOTO 174
	expression/L3 = . expression "^=" expression, FOLLOW [236] -> GOTO 174
	expression/L3 = . expression "&=" expression, FOLLOW [236] -> GOTO 174
	expression/L3 = . expression "%=" expression, FOLLOW [236] -> GOTO 174
	expression/L3 = . expression "&&=" expression, FOLLOW [236] -> GOTO 174
	expression/L3 = . expression "||=" expression, FOLLOW [236] -> GOTO 174
	expression/L3 = . expression "&=" expression, FOLLOW [236] -> GOTO 174
	expression/L3 = . expression "|=" expression, FOLLOW [236] -> GOTO 174
	expression/L3 = . expression "<<=" expression, FOLLOW [236] -> GOTO 174
	expression/L3 = . expression ">>=" expression, FOLLOW [236] -> GOTO 174
	expression/L4 = . expression "||" expression, FOLLOW [236] -> GOTO 174
	expression/L5 = . expression "&&" expression, FOLLOW [236] -> GOTO 174
	expression/L6 = . expression "|" expression, FOLLOW [236] -> GOTO 174
	expression/L7 = . expression "^" expression, FOLLOW [236] -> GOTO 174
	expression/L7 = . expression "&" expression, FOLLOW [236] -> GOTO 174
	expression/L8 = . expression "==" expression, FOLLOW [236] -> GOTO 174
	expression/L8 = . expression "!=" expression, FOLLOW [236] -> GOTO 174
	expression/L8 = . expression "<=" expression, FOLLOW [236] -> GOTO 174
	expression/L8 = . expression "<" expression, FOLLOW [236] -> GOTO 174
	expression/L8 = . expression ">=" expression, FOLLOW [236] -> GOTO 174
	expression/L8 = . expression ">" expression, FOLLOW [236] -> GOTO 174
	expression/L9 = . expression "+" expression, FOLLOW [236] -> GOTO 174
	expression/L9 = . expression "-" expression, FOLLOW [236] -> GOTO 174
	expression/L9 = "~" . expression, FOLLOW [236] -> GOTO 174
	expression/L10 = . expression "*" expression, FOLLOW [236] -> GOTO 174
	expression/L10 = . expression "/" expression, FOLLOW [236] -> GOTO 174
	expression/L10 = . expression "%" expression, FOLLOW [236] -> GOTO 174
	expression/L11 = . expression "<<" expression, FOLLOW [236] -> GOTO 174
	expression/L11 = . expression ">>" expression, FOLLOW [236] -> GOTO 174
	expression/L12 = . expression "." IDENT, FOLLOW [236] -> GOTO 174
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [236] -> GOTO 174
	expression/L13 = . expression "(" ")", FOLLOW [236] -> GOTO 174
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [236] -> GOTO 174
	iexpression = . expression indirection IDENT, FOLLOW [236] -> GOTO 174
	expression/L12 = . iexpression, FOLLOW [236] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [236] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [236] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [236] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [236] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [236] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [236] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [236] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [236] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [236] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [236] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [236] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [236] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [236] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [236] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [236] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [236] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [236] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [236] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [236] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [236] -> SHIFT "null" GOTO 92
[84]
	expression/L3 = . expression "=" expression, FOLLOW [236] -> GOTO 175
	expression/L3 = . expression "+=" expression, FOLLOW [236] -> GOTO 175
	expression/L3 = . expression "-=" expression, FOLLOW [236] -> GOTO 175
	expression/L3 = . expression "*=" expression, FOLLOW [236] -> GOTO 175
	expression/L3 = . expression "/=" expression, FOLLOW [236] -> GOTO 175
	expression/L3 = . expression "^=" expression, FOLLOW [236] -> GOTO 175
	expression/L3 = . expression "&=" expression, FOLLOW [236] -> GOTO 175
	expression/L3 = . expression "%=" expression, FOLLOW [236] -> GOTO 175
	expression/L3 = . expression "&&=" expression, FOLLOW [236] -> GOTO 175
	expression/L3 = . expression "||=" expression, FOLLOW [236] -> GOTO 175
	expression/L3 = . expression "&=" expression, FOLLOW [236] -> GOTO 175
	expression/L3 = . expression "|=" expression, FOLLOW [236] -> GOTO 175
	expression/L3 = . expression "<<=" expression, FOLLOW [236] -> GOTO 175
	expression/L3 = . expression ">>=" expression, FOLLOW [236] -> GOTO 175
	expression/L4 = . expression "||" expression, FOLLOW [236] -> GOTO 175
	expression/L5 = . expression "&&" expression, FOLLOW [236] -> GOTO 175
	expression/L6 = . expression "|" expression, FOLLOW [236] -> GOTO 175
	expression/L7 = . expression "^" expression, FOLLOW [236] -> GOTO 175
	expression/L7 = . expression "&" expression, FOLLOW [236] -> GOTO 175
	expression/L8 = . expression "==" expression, FOLLOW [236] -> GOTO 175
	expression/L8 = . expression "!=" expression, FOLLOW [236] -> GOTO 175
	expression/L8 = . expression "<=" expression, FOLLOW [236] -> GOTO 175
	expression/L8 = . expression "<" expression, FOLLOW [236] -> GOTO 175
	expression/L8 = . expression ">=" expression, FOLLOW [236] -> GOTO 175
	expression/L8 = . expression ">" expression, FOLLOW [236] -> GOTO 175
	expression/L9 = . expression "+" expression, FOLLOW [236] -> GOTO 175
	expression/L9 = . expression "-" expression, FOLLOW [236] -> GOTO 175
	expression/L9 = "!" . expression, FOLLOW [236] -> GOTO 175
	expression/L10 = . expression "*" expression, FOLLOW [236] -> GOTO 175
	expression/L10 = . expression "/" expression, FOLLOW [236] -> GOTO 175
	expression/L10 = . expression "%" expression, FOLLOW [236] -> GOTO 175
	expression/L11 = . expression "<<" expression, FOLLOW [236] -> GOTO 175
	expression/L11 = . expression ">>" expression, FOLLOW [236] -> GOTO 175
	expression/L12 = . expression "." IDENT, FOLLOW [236] -> GOTO 175
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [236] -> GOTO 175
	expression/L13 = . expression "(" ")", FOLLOW [236] -> GOTO 175
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [236] -> GOTO 175
	iexpression = . expression indirection IDENT, FOLLOW [236] -> GOTO 175
	expression/L12 = . iexpression, FOLLOW [236] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [236] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [236] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [236] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [236] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [236] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [236] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [236] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [236] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [236] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [236] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [236] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [236] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [236] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [236] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [236] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [236] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [236] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [236] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [236] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [236] -> SHIFT "null" GOTO 92
[85]
	typespec/L1 = . typename, FOLLOW [17] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [17] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [17] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [17] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [17] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [17] -> GOTO 8
	variabledefinition = . typespec IDENT, FOLLOW [14] -> GOTO 9
	variabledefinition = . typespec IDENT "=" expression, FOLLOW [14] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression, FOLLOW [14] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]", FOLLOW [14] -> GOTO 9
	statement/L1 = "var" . variabledefinition ";", FOLLOW [98] -> GOTO 176
	typename/L1 = . IDENT, FOLLOW [62] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [62] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [17] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [17] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [17] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [17] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [17] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [17] -> SHIFT "const" GOTO 18
[86]
	statement/L1 = "return" . expression ";", FOLLOW [98] -> GOTO 177
	expression/L3 = . expression "=" expression, FOLLOW [97] -> GOTO 177
	expression/L3 = . expression "+=" expression, FOLLOW [97] -> GOTO 177
	expression/L3 = . expression "-=" expression, FOLLOW [97] -> GOTO 177
	expression/L3 = . expression "*=" expression, FOLLOW [97] -> GOTO 177
	expression/L3 = . expression "/=" expression, FOLLOW [97] -> GOTO 177
	expression/L3 = . expression "^=" expression, FOLLOW [97] -> GOTO 177
	expression/L3 = . expression "&=" expression, FOLLOW [97] -> GOTO 177
	expression/L3 = . expression "%=" expression, FOLLOW [97] -> GOTO 177
	expression/L3 = . expression "&&=" expression, FOLLOW [97] -> GOTO 177
	expression/L3 = . expression "||=" expression, FOLLOW [97] -> GOTO 177
	expression/L3 = . expression "&=" expression, FOLLOW [97] -> GOTO 177
	expression/L3 = . expression "|=" expression, FOLLOW [97] -> GOTO 177
	expression/L3 = . expression "<<=" expression, FOLLOW [97] -> GOTO 177
	expression/L3 = . expression ">>=" expression, FOLLOW [97] -> GOTO 177
	expression/L4 = . expression "||" expression, FOLLOW [97] -> GOTO 177
	expression/L5 = . expression "&&" expression, FOLLOW [97] -> GOTO 177
	expression/L6 = . expression "|" expression, FOLLOW [97] -> GOTO 177
	expression/L7 = . expression "^" expression, FOLLOW [97] -> GOTO 177
	expression/L7 = . expression "&" expression, FOLLOW [97] -> GOTO 177
	expression/L8 = . expression "==" expression, FOLLOW [97] -> GOTO 177
	expression/L8 = . expression "!=" expression, FOLLOW [97] -> GOTO 177
	expression/L8 = . expression "<=" expression, FOLLOW [97] -> GOTO 177
	expression/L8 = . expression "<" expression, FOLLOW [97] -> GOTO 177
	expression/L8 = . expression ">=" expression, FOLLOW [97] -> GOTO 177
	expression/L8 = . expression ">" expression, FOLLOW [97] -> GOTO 177
	expression/L9 = . expression "+" expression, FOLLOW [97] -> GOTO 177
	expression/L9 = . expression "-" expression, FOLLOW [97] -> GOTO 177
	expression/L10 = . expression "*" expression, FOLLOW [97] -> GOTO 177
	expression/L10 = . expression "/" expression, FOLLOW [97] -> GOTO 177
	expression/L10 = . expression "%" expression, FOLLOW [97] -> GOTO 177
	expression/L11 = . expression "<<" expression, FOLLOW [97] -> GOTO 177
	expression/L11 = . expression ">>" expression, FOLLOW [97] -> GOTO 177
	expression/L12 = . expression "." IDENT, FOLLOW [97] -> GOTO 177
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [97] -> GOTO 177
	expression/L13 = . expression "(" ")", FOLLOW [97] -> GOTO 177
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [97] -> GOTO 177
	iexpression = . expression indirection IDENT, FOLLOW [97] -> GOTO 177
	expression/L12 = . iexpression, FOLLOW [97] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [97] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [97] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [97] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [97] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [97] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [97] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [97] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [97] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [97] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [97] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [97] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [97] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [97] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [97] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [97] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [97] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [97] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [97] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [97] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [97] -> SHIFT "null" GOTO 92
[87]
	statement/L1 = "delete" . expression ";", FOLLOW [98] -> GOTO 178
	expression/L3 = . expression "=" expression, FOLLOW [97] -> GOTO 178
	expression/L3 = . expression "+=" expression, FOLLOW [97] -> GOTO 178
	expression/L3 = . expression "-=" expression, FOLLOW [97] -> GOTO 178
	expression/L3 = . expression "*=" expression, FOLLOW [97] -> GOTO 178
	expression/L3 = . expression "/=" expression, FOLLOW [97] -> GOTO 178
	expression/L3 = . expression "^=" expression, FOLLOW [97] -> GOTO 178
	expression/L3 = . expression "&=" expression, FOLLOW [97] -> GOTO 178
	expression/L3 = . expression "%=" expression, FOLLOW [97] -> GOTO 178
	expression/L3 = . expression "&&=" expression, FOLLOW [97] -> GOTO 178
	expression/L3 = . expression "||=" expression, FOLLOW [97] -> GOTO 178
	expression/L3 = . expression "&=" expression, FOLLOW [97] -> GOTO 178
	expression/L3 = . expression "|=" expression, FOLLOW [97] -> GOTO 178
	expression/L3 = . expression "<<=" expression, FOLLOW [97] -> GOTO 178
	expression/L3 = . expression ">>=" expression, FOLLOW [97] -> GOTO 178
	expression/L4 = . expression "||" expression, FOLLOW [97] -> GOTO 178
	expression/L5 = . expression "&&" expression, FOLLOW [97] -> GOTO 178
	expression/L6 = . expression "|" expression, FOLLOW [97] -> GOTO 178
	expression/L7 = . expression "^" expression, FOLLOW [97] -> GOTO 178
	expression/L7 = . expression "&" expression, FOLLOW [97] -> GOTO 178
	expression/L8 = . expression "==" expression, FOLLOW [97] -> GOTO 178
	expression/L8 = . expression "!=" expression, FOLLOW [97] -> GOTO 178
	expression/L8 = . expression "<=" expression, FOLLOW [97] -> GOTO 178
	expression/L8 = . expression "<" expression, FOLLOW [97] -> GOTO 178
	expression/L8 = . expression ">=" expression, FOLLOW [97] -> GOTO 178
	expression/L8 = . expression ">" expression, FOLLOW [97] -> GOTO 178
	expression/L9 = . expression "+" expression, FOLLOW [97] -> GOTO 178
	expression/L9 = . expression "-" expression, FOLLOW [97] -> GOTO 178
	expression/L10 = . expression "*" expression, FOLLOW [97] -> GOTO 178
	expression/L10 = . expression "/" expression, FOLLOW [97] -> GOTO 178
	expression/L10 = . expression "%" expression, FOLLOW [97] -> GOTO 178
	expression/L11 = . expression "<<" expression, FOLLOW [97] -> GOTO 178
	expression/L11 = . expression ">>" expression, FOLLOW [97] -> GOTO 178
	expression/L12 = . expression "." IDENT, FOLLOW [97] -> GOTO 178
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [97] -> GOTO 178
	expression/L13 = . expression "(" ")", FOLLOW [97] -> GOTO 178
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [97] -> GOTO 178
	iexpression = . expression indirection IDENT, FOLLOW [97] -> GOTO 178
	expression/L12 = . iexpression, FOLLOW [97] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [97] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [97] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [97] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [97] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [97] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [97] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [97] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [97] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [97] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [97] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [97] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [97] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [97] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [97] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [97] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [97] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [97] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [97] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [97] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [97] -> SHIFT "null" GOTO 92
[88]
	statement/L1 = "if" . "(" expression ")" "{" codeblock "}", FOLLOW [98] -> SHIFT '(' GOTO 179
	statement/L1 = "if" . "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}", FOLLOW [98] -> SHIFT '(' GOTO 179
[89]
	statement/L1 = "while" . "(" expression ")" "{" codeblock "}", FOLLOW [98] -> SHIFT '(' GOTO 180
[90]
	typespec/L1 = . typename, FOLLOW [26] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [26] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [26] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [26] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [26] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [26] -> GOTO 8
	expression/L1 = "new" . typespec ":" expression, FOLLOW [236] -> GOTO 181
	typename/L1 = . IDENT, FOLLOW [180] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [180] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [26] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [26] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [26] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [26] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [26] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [26] -> SHIFT "const" GOTO 18
[91]
	typespec/L1 = . typename, FOLLOW [26] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [26] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [26] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [26] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [26] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [26] -> GOTO 8
	expression/L1 = "cast" . typespec ":" "{" expression "}", FOLLOW [236] -> GOTO 182
	expression/L1 = "cast" . typespec ":" "{" "}", FOLLOW [236] -> GOTO 182
	typename/L1 = . IDENT, FOLLOW [180] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [180] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [26] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [26] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [26] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [26] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [26] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [26] -> SHIFT "const" GOTO 18
[92]
	expression/L2 = "null" . (90), FOLLOW [236] -> REDUCE expression #1 CALL null "constexpr float"
[93]
	typespec/L1 = typename "^" "^" "&" . (27), FOLLOW [255] -> REDUCE typespec #4 CALL typespec "^^&"
[94]
	iexpression = expression . indirection IDENT, FOLLOW [97] -> GOTO 128
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [97] -> SHIFT '(' GOTO 129
	expression/L13 = expression . "(" ")", FOLLOW [97] -> SHIFT '(' GOTO 129
	expression/L7 = expression . "&" expression, FOLLOW [97] -> SHIFT '&' GOTO 131
	expression/L7 = expression . "^" expression, FOLLOW [97] -> SHIFT '^' GOTO 132
	indirection = . "->" indirection, FOLLOW [17] -> SHIFT "->" GOTO 133
	indirection = . "->", FOLLOW [17] -> SHIFT "->" GOTO 133
	expression/L3 = expression . "=" expression, FOLLOW [97] -> SHIFT '=' GOTO 134
	expression/L9 = expression . "+" expression, FOLLOW [97] -> SHIFT '+' GOTO 135
	expression/L9 = expression . "-" expression, FOLLOW [97] -> SHIFT '-' GOTO 136
	expression/L10 = expression . "*" expression, FOLLOW [97] -> SHIFT '*' GOTO 137
	expression/L10 = expression . "/" expression, FOLLOW [97] -> SHIFT '/' GOTO 138
	expression/L10 = expression . "%" expression, FOLLOW [97] -> SHIFT '%' GOTO 139
	expression/L5 = expression . "&&" expression, FOLLOW [97] -> SHIFT "&&" GOTO 140
	expression/L4 = expression . "||" expression, FOLLOW [97] -> SHIFT "||" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [97] -> SHIFT '|' GOTO 142
	expression/L11 = expression . "<<" expression, FOLLOW [97] -> SHIFT "<<" GOTO 143
	expression/L11 = expression . ">>" expression, FOLLOW [97] -> SHIFT ">>" GOTO 144
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [97] -> SHIFT '[' GOTO 145
	expression/L8 = expression . "==" expression, FOLLOW [97] -> SHIFT "==" GOTO 146
	expression/L8 = expression . "!=" expression, FOLLOW [97] -> SHIFT "!=" GOTO 147
	expression/L8 = expression . ">=" expression, FOLLOW [97] -> SHIFT ">=" GOTO 148
	expression/L8 = expression . "<=" expression, FOLLOW [97] -> SHIFT "<=" GOTO 149
	expression/L8 = expression . ">" expression, FOLLOW [97] -> SHIFT '>' GOTO 150
	expression/L8 = expression . "<" expression, FOLLOW [97] -> SHIFT '<' GOTO 151
	expression/L3 = expression . "+=" expression, FOLLOW [97] -> SHIFT "+=" GOTO 152
	expression/L3 = expression . "-=" expression, FOLLOW [97] -> SHIFT "-=" GOTO 153
	expression/L3 = expression . "*=" expression, FOLLOW [97] -> SHIFT "*=" GOTO 154
	expression/L3 = expression . "/=" expression, FOLLOW [97] -> SHIFT "/=" GOTO 155
	expression/L3 = expression . "^=" expression, FOLLOW [97] -> SHIFT "^=" GOTO 156
	expression/L3 = expression . "&=" expression, FOLLOW [97] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [97] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "%=" expression, FOLLOW [97] -> SHIFT "%=" GOTO 158
	expression/L3 = expression . "&&=" expression, FOLLOW [97] -> SHIFT "&&=" GOTO 159
	expression/L3 = expression . "||=" expression, FOLLOW [97] -> SHIFT "||=" GOTO 160
	expression/L3 = expression . "|=" expression, FOLLOW [97] -> SHIFT "|=" GOTO 161
	expression/L3 = expression . "<<=" expression, FOLLOW [97] -> SHIFT "<<=" GOTO 162
	expression/L3 = expression . ">>=" expression, FOLLOW [97] -> SHIFT ">>=" GOTO 163
	expression/L12 = expression . "." IDENT, FOLLOW [97] -> SHIFT '.' GOTO 164
	variabledefinition = typespec IDENT "=" expression . (step:79), FOLLOW [14] -> REDUCE variabledefinition #4 CALL vardef_assign
[95]
	expression/L3 = . expression "=" expression, FOLLOW [236] -> GOTO 183
	expression/L3 = . expression "+=" expression, FOLLOW [236] -> GOTO 183
	expression/L3 = . expression "-=" expression, FOLLOW [236] -> GOTO 183
	expression/L3 = . expression "*=" expression, FOLLOW [236] -> GOTO 183
	expression/L3 = . expression "/=" expression, FOLLOW [236] -> GOTO 183
	expression/L3 = . expression "^=" expression, FOLLOW [236] -> GOTO 183
	expression/L3 = . expression "&=" expression, FOLLOW [236] -> GOTO 183
	expression/L3 = . expression "%=" expression, FOLLOW [236] -> GOTO 183
	expression/L3 = . expression "&&=" expression, FOLLOW [236] -> GOTO 183
	expression/L3 = . expression "||=" expression, FOLLOW [236] -> GOTO 183
	expression/L3 = . expression "&=" expression, FOLLOW [236] -> GOTO 183
	expression/L3 = . expression "|=" expression, FOLLOW [236] -> GOTO 183
	expression/L3 = . expression "<<=" expression, FOLLOW [236] -> GOTO 183
	expression/L3 = . expression ">>=" expression, FOLLOW [236] -> GOTO 183
	expression/L4 = . expression "||" expression, FOLLOW [236] -> GOTO 183
	expression/L5 = . expression "&&" expression, FOLLOW [236] -> GOTO 183
	expression/L6 = . expression "|" expression, FOLLOW [236] -> GOTO 183
	expression/L7 = . expression "^" expression, FOLLOW [236] -> GOTO 183
	expression/L7 = . expression "&" expression, FOLLOW [236] -> GOTO 183
	expression/L8 = . expression "==" expression, FOLLOW [236] -> GOTO 183
	expression/L8 = . expression "!=" expression, FOLLOW [236] -> GOTO 183
	expression/L8 = . expression "<=" expression, FOLLOW [236] -> GOTO 183
	expression/L8 = . expression "<" expression, FOLLOW [236] -> GOTO 183
	expression/L8 = . expression ">=" expression, FOLLOW [236] -> GOTO 183
	expression/L8 = . expression ">" expression, FOLLOW [236] -> GOTO 183
	expression/L9 = . expression "+" expression, FOLLOW [236] -> GOTO 183
	expression/L9 = . expression "-" expression, FOLLOW [236] -> GOTO 183
	expression/L10 = . expression "*" expression, FOLLOW [236] -> GOTO 183
	expression/L10 = . expression "/" expression, FOLLOW [236] -> GOTO 183
	expression/L10 = . expression "%" expression, FOLLOW [236] -> GOTO 183
	expression/L11 = . expression "<<" expression, FOLLOW [236] -> GOTO 183
	expression/L11 = . expression ">>" expression, FOLLOW [236] -> GOTO 183
	expression/L12 = . expression "." IDENT, FOLLOW [236] -> GOTO 183
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [236] -> GOTO 183
	expression/L13 = . expression "(" ")", FOLLOW [236] -> GOTO 183
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [236] -> GOTO 183
	iexpression = . expression indirection IDENT, FOLLOW [236] -> GOTO 183
	expressionlist = . expression "," expressionlist, FOLLOW [18] -> GOTO 183
	expressionlist = . expression, FOLLOW [18] -> GOTO 183
	expression/L12 = . iexpression, FOLLOW [236] -> GOTO 69
	expression/L1 = "{" . expressionlist "}", FOLLOW [236] -> GOTO 169
	expression/L2 = . BOOLEAN, FOLLOW [236] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [236] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [236] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [236] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [236] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [236] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [236] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [236] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [236] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [236] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [236] -> SHIFT '{' GOTO 95
	expression/L1 = "{" . "}", FOLLOW [236] -> SHIFT '}' GOTO 170
	expression/L9 = . "+" expression, FOLLOW [236] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [236] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [236] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [236] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [236] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [236] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [236] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [236] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [236] -> SHIFT "null" GOTO 92
[96]
	iexpression = expression . indirection IDENT, FOLLOW [167] -> GOTO 128
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [167] -> SHIFT '(' GOTO 129
	expression/L13 = expression . "(" ")", FOLLOW [167] -> SHIFT '(' GOTO 129
	expression/L7 = expression . "&" expression, FOLLOW [167] -> SHIFT '&' GOTO 131
	expression/L7 = expression . "^" expression, FOLLOW [167] -> SHIFT '^' GOTO 132
	indirection = . "->" indirection, FOLLOW [17] -> SHIFT "->" GOTO 133
	indirection = . "->", FOLLOW [17] -> SHIFT "->" GOTO 133
	expression/L3 = expression . "=" expression, FOLLOW [167] -> SHIFT '=' GOTO 134
	expression/L9 = expression . "+" expression, FOLLOW [167] -> SHIFT '+' GOTO 135
	expression/L9 = expression . "-" expression, FOLLOW [167] -> SHIFT '-' GOTO 136
	expression/L10 = expression . "*" expression, FOLLOW [167] -> SHIFT '*' GOTO 137
	expression/L10 = expression . "/" expression, FOLLOW [167] -> SHIFT '/' GOTO 138
	expression/L10 = expression . "%" expression, FOLLOW [167] -> SHIFT '%' GOTO 139
	expression/L5 = expression . "&&" expression, FOLLOW [167] -> SHIFT "&&" GOTO 140
	expression/L4 = expression . "||" expression, FOLLOW [167] -> SHIFT "||" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [167] -> SHIFT '|' GOTO 142
	expression/L11 = expression . "<<" expression, FOLLOW [167] -> SHIFT "<<" GOTO 143
	expression/L11 = expression . ">>" expression, FOLLOW [167] -> SHIFT ">>" GOTO 144
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [167] -> SHIFT '[' GOTO 145
	variabledefinition = typespec IDENT "[" expression . "]" "=" expression, FOLLOW [14] -> SHIFT ']' GOTO 184
	variabledefinition = typespec IDENT "[" expression . "]", FOLLOW [14] -> SHIFT ']' GOTO 184
	expression/L8 = expression . "==" expression, FOLLOW [167] -> SHIFT "==" GOTO 146
	expression/L8 = expression . "!=" expression, FOLLOW [167] -> SHIFT "!=" GOTO 147
	expression/L8 = expression . ">=" expression, FOLLOW [167] -> SHIFT ">=" GOTO 148
	expression/L8 = expression . "<=" expression, FOLLOW [167] -> SHIFT "<=" GOTO 149
	expression/L8 = expression . ">" expression, FOLLOW [167] -> SHIFT '>' GOTO 150
	expression/L8 = expression . "<" expression, FOLLOW [167] -> SHIFT '<' GOTO 151
	expression/L3 = expression . "+=" expression, FOLLOW [167] -> SHIFT "+=" GOTO 152
	expression/L3 = expression . "-=" expression, FOLLOW [167] -> SHIFT "-=" GOTO 153
	expression/L3 = expression . "*=" expression, FOLLOW [167] -> SHIFT "*=" GOTO 154
	expression/L3 = expression . "/=" expression, FOLLOW [167] -> SHIFT "/=" GOTO 155
	expression/L3 = expression . "^=" expression, FOLLOW [167] -> SHIFT "^=" GOTO 156
	expression/L3 = expression . "&=" expression, FOLLOW [167] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [167] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "%=" expression, FOLLOW [167] -> SHIFT "%=" GOTO 158
	expression/L3 = expression . "&&=" expression, FOLLOW [167] -> SHIFT "&&=" GOTO 159
	expression/L3 = expression . "||=" expression, FOLLOW [167] -> SHIFT "||=" GOTO 160
	expression/L3 = expression . "|=" expression, FOLLOW [167] -> SHIFT "|=" GOTO 161
	expression/L3 = expression . "<<=" expression, FOLLOW [167] -> SHIFT "<<=" GOTO 162
	expression/L3 = expression . ">>=" expression, FOLLOW [167] -> SHIFT ">>=" GOTO 163
	expression/L12 = expression . "." IDENT, FOLLOW [167] -> SHIFT '.' GOTO 164
[97]
	functiondefinition = linkage "function" IDENT typespec . callablebody, FOLLOW [246] -> GOTO 185
	callablebody = . "(" parameterlist ")" "{" codeblock "}", FOLLOW [246] -> SHIFT '(' GOTO 99
	callablebody = . "(" parameterlist ")" "const" "{" codeblock "}", FOLLOW [246] -> SHIFT '(' GOTO 99
[98]
	functiondefinition = linkage "procedure" IDENT callablebody . (37), FOLLOW [246] -> REDUCE functiondefinition #4 CALL procdef
[99]
	typespec/L1 = . typename, FOLLOW [17] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [17] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [17] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [17] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [17] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [17] -> GOTO 8
	paramdecl = . typespec IDENT, FOLLOW [184] -> GOTO 186
	callablebody = "(" . parameterlist ")" "{" codeblock "}", FOLLOW [246] -> GOTO 187
	callablebody = "(" . parameterlist ")" "const" "{" codeblock "}", FOLLOW [246] -> GOTO 187
	parameterlist = . parameters, FOLLOW [10] -> GOTO 188
	parameters = . paramdecl "," parameters, FOLLOW [10] -> GOTO 189
	parameters = . paramdecl, FOLLOW [10] -> GOTO 189
	typename/L1 = . IDENT, FOLLOW [62] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [62] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [17] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [17] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [17] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [17] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [17] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [17] -> SHIFT "const" GOTO 18
	parameterlist = . (68), FOLLOW [10] -> REDUCE parameterlist #0 CALL paramdeflist
[100]
	typespec/L1 = "const" typename "^" "&" . (24), FOLLOW [255] -> REDUCE typespec #4 CALL typespec "const^&"
[101]
	typespec/L1 = "const" typename "^" "^" . "&", FOLLOW [255] -> SHIFT '&' GOTO 190
	typespec/L1 = "const" typename "^" "^" . (26), FOLLOW [255] -> REDUCE typespec #4 CALL typespec "const^^"
[102]
	structdefinition = "struct" IDENT "{" struct_definitionlist . "}", FOLLOW [175] -> SHIFT '}' GOTO 191
[103]
	struct_definitionlist = struct_definition . struct_definitionlist, FOLLOW [18] -> GOTO 192
	struct_definitionlist = . struct_definition struct_definitionlist, FOLLOW [18] -> GOTO 103
	typespec/L1 = . typename, FOLLOW [17] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [17] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [17] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [17] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [17] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [17] -> GOTO 8
	variabledefinition = . typespec IDENT, FOLLOW [14] -> GOTO 9
	variabledefinition = . typespec IDENT "=" expression, FOLLOW [14] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression, FOLLOW [14] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]", FOLLOW [14] -> GOTO 9
	struct_definition = . typedefinition ";", FOLLOW [169] -> GOTO 10
	struct_definition = . structdefinition, FOLLOW [169] -> GOTO 11
	struct_definition = . variabledefinition ";", FOLLOW [169] -> GOTO 16
	typename/L1 = . IDENT, FOLLOW [62] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [62] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [17] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [17] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [17] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [17] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [17] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [17] -> SHIFT "const" GOTO 18
	typedefinition = . "typedef" typepath IDENT, FOLLOW [14] -> SHIFT "typedef" GOTO 19
	structdefinition = . "struct" IDENT "{" struct_definitionlist "}", FOLLOW [169] -> SHIFT "struct" GOTO 20
	struct_definitionlist = ., FOLLOW [18] -> REDUCE struct_definitionlist #0
[104]
	interfacedefinition = "interface" IDENT "{" interface_definitionlist . "}", FOLLOW [175] -> SHIFT '}' GOTO 193
[105]
	interface_definitionlist = interface_definition . interface_definitionlist, FOLLOW [18] -> GOTO 194
	interface_definitionlist = . interface_definition interface_definitionlist, FOLLOW [18] -> GOTO 105
	interface_definition = . "function" IDENT typespec "(" parameterlist ")" ";", FOLLOW [171] -> SHIFT "function" GOTO 106
	interface_definition = . "function" IDENT typespec "(" parameterlist ")" "const" ";", FOLLOW [171] -> SHIFT "function" GOTO 106
	interface_definition = . "procedure" IDENT "(" parameterlist ")" ";", FOLLOW [171] -> SHIFT "procedure" GOTO 107
	interface_definition = . "procedure" IDENT "(" parameterlist ")" "const" ";", FOLLOW [171] -> SHIFT "procedure" GOTO 107
	interface_definition = . "operator" operatordecl typespec "(" parameterlist ")" ";", FOLLOW [171] -> SHIFT "operator" GOTO 108
	interface_definition = . "operator" operatordecl typespec "(" parameterlist ")" "const" ";", FOLLOW [171] -> SHIFT "operator" GOTO 108
	interface_definition = . "operator" operatordecl "(" parameterlist ")" ";", FOLLOW [171] -> SHIFT "operator" GOTO 108
	interface_definition = . "operator" operatordecl "(" parameterlist ")" "const" ";", FOLLOW [171] -> SHIFT "operator" GOTO 108
	interface_definitionlist = ., FOLLOW [18] -> REDUCE interface_definitionlist #0
[106]
	interface_definition = "function" . IDENT typespec "(" parameterlist ")" ";", FOLLOW [171] -> SHIFT IDENT GOTO 195
	interface_definition = "function" . IDENT typespec "(" parameterlist ")" "const" ";", FOLLOW [171] -> SHIFT IDENT GOTO 195
[107]
	interface_definition = "procedure" . IDENT "(" parameterlist ")" ";", FOLLOW [171] -> SHIFT IDENT GOTO 196
	interface_definition = "procedure" . IDENT "(" parameterlist ")" "const" ";", FOLLOW [171] -> SHIFT IDENT GOTO 196
[108]
	interface_definition = "operator" . operatordecl typespec "(" parameterlist ")" ";", FOLLOW [171] -> GOTO 197
	interface_definition = "operator" . operatordecl typespec "(" parameterlist ")" "const" ";", FOLLOW [171] -> GOTO 197
	interface_definition = "operator" . operatordecl "(" parameterlist ")" ";", FOLLOW [171] -> GOTO 197
	interface_definition = "operator" . operatordecl "(" parameterlist ")" "const" ";", FOLLOW [171] -> GOTO 197
	operatordecl = . "(" ")", FOLLOW [185] -> SHIFT '(' GOTO 198
	operatordecl = . "&", FOLLOW [185] -> SHIFT '&' GOTO 199
	operatordecl = . "->", FOLLOW [185] -> SHIFT "->" GOTO 200
	operatordecl = . "=", FOLLOW [185] -> SHIFT '=' GOTO 201
	operatordecl = . "+", FOLLOW [185] -> SHIFT '+' GOTO 202
	operatordecl = . "-", FOLLOW [185] -> SHIFT '-' GOTO 203
	operatordecl = . "*", FOLLOW [185] -> SHIFT '*' GOTO 204
	operatordecl = . "/", FOLLOW [185] -> SHIFT '/' GOTO 205
	operatordecl = . "%", FOLLOW [185] -> SHIFT '%' GOTO 206
	operatordecl = . "&&", FOLLOW [185] -> SHIFT "&&" GOTO 207
	operatordecl = . "||", FOLLOW [185] -> SHIFT "||" GOTO 208
	operatordecl = . "|", FOLLOW [185] -> SHIFT '|' GOTO 209
	operatordecl = . "<<", FOLLOW [185] -> SHIFT "<<" GOTO 210
	operatordecl = . ">>", FOLLOW [185] -> SHIFT ">>" GOTO 211
	operatordecl = . "~", FOLLOW [185] -> SHIFT '~' GOTO 212
	operatordecl = . "!", FOLLOW [185] -> SHIFT '!' GOTO 213
	operatordecl = . "[" "]", FOLLOW [185] -> SHIFT '[' GOTO 214
	operatordecl = . "==", FOLLOW [185] -> SHIFT "==" GOTO 215
	operatordecl = . "!=", FOLLOW [185] -> SHIFT "!=" GOTO 216
	operatordecl = . ">=", FOLLOW [185] -> SHIFT ">=" GOTO 217
	operatordecl = . "<=", FOLLOW [185] -> SHIFT "<=" GOTO 218
	operatordecl = . ">", FOLLOW [185] -> SHIFT '>' GOTO 219
	operatordecl = . "<", FOLLOW [185] -> SHIFT '<' GOTO 220
[109]
	classdefinition = "class" IDENT "{" class_definitionlist . "}", FOLLOW [175] -> SHIFT '}' GOTO 221
[110]
	class_definitionlist = class_definition . class_definitionlist, FOLLOW [18] -> GOTO 222
	class_definitionlist = . class_definition class_definitionlist, FOLLOW [18] -> GOTO 110
	typespec/L1 = . typename, FOLLOW [17] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [17] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [17] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [17] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [17] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [17] -> GOTO 8
	variabledefinition = . typespec IDENT, FOLLOW [14] -> GOTO 9
	variabledefinition = . typespec IDENT "=" expression, FOLLOW [14] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression, FOLLOW [14] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]", FOLLOW [14] -> GOTO 9
	class_definition = . typedefinition ";", FOLLOW [174] -> GOTO 111
	class_definition = . structdefinition, FOLLOW [174] -> GOTO 112
	class_definition = . interfacedefinition, FOLLOW [174] -> GOTO 113
	class_definition = . classdefinition, FOLLOW [174] -> GOTO 114
	functiondefinition = . linkage "function" IDENT typespec callablebody, FOLLOW [174] -> GOTO 115
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [174] -> GOTO 115
	constructordefinition = . linkage "constructor" callablebody, FOLLOW [174] -> GOTO 115
	operatordefinition = . linkage "operator" operatordecl typespec callablebody, FOLLOW [174] -> GOTO 115
	operatordefinition = . linkage "operator" operatordecl callablebody, FOLLOW [174] -> GOTO 115
	class_definition = . functiondefinition, FOLLOW [174] -> GOTO 116
	class_definition = . constructordefinition, FOLLOW [174] -> GOTO 117
	class_definition = . operatordefinition, FOLLOW [174] -> GOTO 118
	class_definition = . variabledefinition ";", FOLLOW [174] -> GOTO 119
	typename/L1 = . IDENT, FOLLOW [62] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [62] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [17] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [17] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [17] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [17] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [17] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [17] -> SHIFT "const" GOTO 18
	typedefinition = . "typedef" typepath IDENT, FOLLOW [14] -> SHIFT "typedef" GOTO 19
	structdefinition = . "struct" IDENT "{" struct_definitionlist "}", FOLLOW [174] -> SHIFT "struct" GOTO 20
	interfacedefinition = . "interface" IDENT "{" interface_definitionlist "}", FOLLOW [174] -> SHIFT "interface" GOTO 21
	classdefinition = . "class" IDENT "{" class_definitionlist "}", FOLLOW [174] -> SHIFT "class" GOTO 22
	classdefinition = . "class" IDENT ":" inheritlist "{" class_definitionlist "}", FOLLOW [174] -> SHIFT "class" GOTO 22
	linkage = . "private", FOLLOW [173] -> SHIFT "private" GOTO 23
	linkage = . "public", FOLLOW [173] -> SHIFT "public" GOTO 24
	constructordefinition = . "destructor" "{" codeblock "}", FOLLOW [174] -> SHIFT "destructor" GOTO 120
	class_definitionlist = ., FOLLOW [18] -> REDUCE class_definitionlist #0
	linkage = . (34), FOLLOW [173] -> REDUCE linkage #0 CALL linkage {name="private",linkage="internal"}
[111]
	class_definition = typedefinition . ";", FOLLOW [174] -> SHIFT ';' GOTO 223
[112]
	class_definition = structdefinition . (15), FOLLOW [174] -> REDUCE class_definition #1 CALL definition 1
[113]
	class_definition = interfacedefinition . (15), FOLLOW [174] -> REDUCE class_definition #1 CALL definition 1
[114]
	class_definition = classdefinition . (15), FOLLOW [174] -> REDUCE class_definition #1 CALL definition 1
[115]
	functiondefinition = linkage . "function" IDENT typespec callablebody, FOLLOW [174] -> SHIFT "function" GOTO 34
	functiondefinition = linkage . "procedure" IDENT callablebody, FOLLOW [174] -> SHIFT "procedure" GOTO 35
	operatordefinition = linkage . "operator" operatordecl typespec callablebody, FOLLOW [174] -> SHIFT "operator" GOTO 224
	operatordefinition = linkage . "operator" operatordecl callablebody, FOLLOW [174] -> SHIFT "operator" GOTO 224
	constructordefinition = linkage . "constructor" callablebody, FOLLOW [174] -> SHIFT "constructor" GOTO 225
[116]
	class_definition = functiondefinition . (16), FOLLOW [174] -> REDUCE class_definition #1 CALL definition 2
[117]
	class_definition = constructordefinition . (16), FOLLOW [174] -> REDUCE class_definition #1 CALL definition 2
[118]
	class_definition = operatordefinition . (16), FOLLOW [174] -> REDUCE class_definition #1 CALL definition 2
[119]
	class_definition = variabledefinition . ";", FOLLOW [174] -> SHIFT ';' GOTO 226
[120]
	constructordefinition = "destructor" . "{" codeblock "}", FOLLOW [174] -> SHIFT '{' GOTO 227
[121]
	inheritlist = typepath . "," inheritlist, FOLLOW [19] -> SHIFT ',' GOTO 228
	inheritlist = typepath . (step:32), FOLLOW [19] -> REDUCE inheritlist #1 CALL inheritdef 1
[122]
	classdefinition = "class" IDENT ":" inheritlist . "{" class_definitionlist "}", FOLLOW [175] -> SHIFT '{' GOTO 229
[123]
	extern_definition = "extern" DQSTRING "function" IDENT typespec . "(" extern_paramlist ")" ";", FOLLOW [59] -> SHIFT '(' GOTO 230
	extern_definition = "extern" DQSTRING "function" IDENT typespec . "(" extern_paramlist "..." ")" ";", FOLLOW [59] -> SHIFT '(' GOTO 230
[124]
	extern_paramlist = . extern_parameters, FOLLOW [186] -> GOTO 231
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" . extern_paramlist ")" ";", FOLLOW [59] -> GOTO 232
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" . extern_paramlist "..." ")" ";", FOLLOW [59] -> GOTO 232
	typespec/L1 = . typename, FOLLOW [188] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [188] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [188] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [188] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [188] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [188] -> GOTO 8
	extern_parameters = . typespec "," extern_parameters, FOLLOW [186] -> GOTO 233
	extern_parameters = . typespec, FOLLOW [186] -> GOTO 233
	typename/L1 = . IDENT, FOLLOW [189] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [189] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [188] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [188] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [188] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [188] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [188] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [188] -> SHIFT "const" GOTO 18
	extern_paramlist = . (6), FOLLOW [186] -> REDUCE extern_paramlist #0 CALL extern_paramdeflist
[125]
	statement/L1 = typedefinition ";" . (71), FOLLOW [98] -> REDUCE statement #2 CALL definition
[126]
	main_procedure = "main" "{" codeblock "}" . (scope:67), FOLLOW [0] -> REDUCE main_procedure #4 CALL main_procdef
[127]
	statementlist = statement statementlist . (step), FOLLOW [18] -> REDUCE statementlist #2
[128]
	iexpression = expression indirection . IDENT, FOLLOW [236] -> SHIFT IDENT GOTO 234
[129]
	expression/L3 = . expression "=" expression, FOLLOW [236] -> GOTO 183
	expression/L3 = . expression "+=" expression, FOLLOW [236] -> GOTO 183
	expression/L3 = . expression "-=" expression, FOLLOW [236] -> GOTO 183
	expression/L3 = . expression "*=" expression, FOLLOW [236] -> GOTO 183
	expression/L3 = . expression "/=" expression, FOLLOW [236] -> GOTO 183
	expression/L3 = . expression "^=" expression, FOLLOW [236] -> GOTO 183
	expression/L3 = . expression "&=" expression, FOLLOW [236] -> GOTO 183
	expression/L3 = . expression "%=" expression, FOLLOW [236] -> GOTO 183
	expression/L3 = . expression "&&=" expression, FOLLOW [236] -> GOTO 183
	expression/L3 = . expression "||=" expression, FOLLOW [236] -> GOTO 183
	expression/L3 = . expression "&=" expression, FOLLOW [236] -> GOTO 183
	expression/L3 = . expression "|=" expression, FOLLOW [236] -> GOTO 183
	expression/L3 = . expression "<<=" expression, FOLLOW [236] -> GOTO 183
	expression/L3 = . expression ">>=" expression, FOLLOW [236] -> GOTO 183
	expression/L4 = . expression "||" expression, FOLLOW [236] -> GOTO 183
	expression/L5 = . expression "&&" expression, FOLLOW [236] -> GOTO 183
	expression/L6 = . expression "|" expression, FOLLOW [236] -> GOTO 183
	expression/L7 = . expression "^" expression, FOLLOW [236] -> GOTO 183
	expression/L7 = . expression "&" expression, FOLLOW [236] -> GOTO 183
	expression/L8 = . expression "==" expression, FOLLOW [236] -> GOTO 183
	expression/L8 = . expression "!=" expression, FOLLOW [236] -> GOTO 183
	expression/L8 = . expression "<=" expression, FOLLOW [236] -> GOTO 183
	expression/L8 = . expression "<" expression, FOLLOW [236] -> GOTO 183
	expression/L8 = . expression ">=" expression, FOLLOW [236] -> GOTO 183
	expression/L8 = . expression ">" expression, FOLLOW [236] -> GOTO 183
	expression/L9 = . expression "+" expression, FOLLOW [236] -> GOTO 183
	expression/L9 = . expression "-" expression, FOLLOW [236] -> GOTO 183
	expression/L10 = . expression "*" expression, FOLLOW [236] -> GOTO 183
	expression/L10 = . expression "/" expression, FOLLOW [236] -> GOTO 183
	expression/L10 = . expression "%" expression, FOLLOW [236] -> GOTO 183
	expression/L11 = . expression "<<" expression, FOLLOW [236] -> GOTO 183
	expression/L11 = . expression ">>" expression, FOLLOW [236] -> GOTO 183
	expression/L12 = . expression "." IDENT, FOLLOW [236] -> GOTO 183
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [236] -> GOTO 183
	expression/L13 = . expression "(" ")", FOLLOW [236] -> GOTO 183
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [236] -> GOTO 183
	iexpression = . expression indirection IDENT, FOLLOW [236] -> GOTO 183
	expressionlist = . expression "," expressionlist, FOLLOW [10] -> GOTO 183
	expressionlist = . expression, FOLLOW [10] -> GOTO 183
	expression/L12 = . iexpression, FOLLOW [236] -> GOTO 69
	expression/L13 = expression "(" . expressionlist ")", FOLLOW [236] -> GOTO 235
	expression/L2 = . BOOLEAN, FOLLOW [236] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [236] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [236] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [236] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [236] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [236] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [236] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [236] -> SHIFT '(' GOTO 77
	expression/L13 = expression "(" . ")", FOLLOW [236] -> SHIFT ')' GOTO 236
	expression/L9 = . "&" expression, FOLLOW [236] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [236] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [236] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [236] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [236] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [236] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [236] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [236] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [236] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [236] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [236] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [236] -> SHIFT "null" GOTO 92
[130]
	statement/L1 = expression ";" . (72), FOLLOW [98] -> REDUCE statement #2 CALL free_expression
[131]
	expression/L3 = . expression "=" expression, FOLLOW [236] -> GOTO 237
	expression/L3 = . expression "+=" expression, FOLLOW [236] -> GOTO 237
	expression/L3 = . expression "-=" expression, FOLLOW [236] -> GOTO 237
	expression/L3 = . expression "*=" expression, FOLLOW [236] -> GOTO 237
	expression/L3 = . expression "/=" expression, FOLLOW [236] -> GOTO 237
	expression/L3 = . expression "^=" expression, FOLLOW [236] -> GOTO 237
	expression/L3 = . expression "&=" expression, FOLLOW [236] -> GOTO 237
	expression/L3 = . expression "%=" expression, FOLLOW [236] -> GOTO 237
	expression/L3 = . expression "&&=" expression, FOLLOW [236] -> GOTO 237
	expression/L3 = . expression "||=" expression, FOLLOW [236] -> GOTO 237
	expression/L3 = . expression "&=" expression, FOLLOW [236] -> GOTO 237
	expression/L3 = . expression "|=" expression, FOLLOW [236] -> GOTO 237
	expression/L3 = . expression "<<=" expression, FOLLOW [236] -> GOTO 237
	expression/L3 = . expression ">>=" expression, FOLLOW [236] -> GOTO 237
	expression/L4 = . expression "||" expression, FOLLOW [236] -> GOTO 237
	expression/L5 = . expression "&&" expression, FOLLOW [236] -> GOTO 237
	expression/L6 = . expression "|" expression, FOLLOW [236] -> GOTO 237
	expression/L7 = . expression "^" expression, FOLLOW [236] -> GOTO 237
	expression/L7 = . expression "&" expression, FOLLOW [236] -> GOTO 237
	expression/L7 = expression "&" . expression, FOLLOW [236] -> GOTO 237
	expression/L8 = . expression "==" expression, FOLLOW [236] -> GOTO 237
	expression/L8 = . expression "!=" expression, FOLLOW [236] -> GOTO 237
	expression/L8 = . expression "<=" expression, FOLLOW [236] -> GOTO 237
	expression/L8 = . expression "<" expression, FOLLOW [236] -> GOTO 237
	expression/L8 = . expression ">=" expression, FOLLOW [236] -> GOTO 237
	expression/L8 = . expression ">" expression, FOLLOW [236] -> GOTO 237
	expression/L9 = . expression "+" expression, FOLLOW [236] -> GOTO 237
	expression/L9 = . expression "-" expression, FOLLOW [236] -> GOTO 237
	expression/L10 = . expression "*" expression, FOLLOW [236] -> GOTO 237
	expression/L10 = . expression "/" expression, FOLLOW [236] -> GOTO 237
	expression/L10 = . expression "%" expression, FOLLOW [236] -> GOTO 237
	expression/L11 = . expression "<<" expression, FOLLOW [236] -> GOTO 237
	expression/L11 = . expression ">>" expression, FOLLOW [236] -> GOTO 237
	expression/L12 = . expression "." IDENT, FOLLOW [236] -> GOTO 237
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [236] -> GOTO 237
	expression/L13 = . expression "(" ")", FOLLOW [236] -> GOTO 237
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [236] -> GOTO 237
	iexpression = . expression indirection IDENT, FOLLOW [236] -> GOTO 237
	expression/L12 = . iexpression, FOLLOW [236] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [236] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [236] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [236] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [236] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [236] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [236] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [236] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [236] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [236] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [236] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [236] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [236] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [236] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [236] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [236] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [236] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [236] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [236] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [236] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [236] -> SHIFT "null" GOTO 92
[132]
	expression/L3 = . expression "=" expression, FOLLOW [236] -> GOTO 238
	expression/L3 = . expression "+=" expression, FOLLOW [236] -> GOTO 238
	expression/L3 = . expression "-=" expression, FOLLOW [236] -> GOTO 238
	expression/L3 = . expression "*=" expression, FOLLOW [236] -> GOTO 238
	expression/L3 = . expression "/=" expression, FOLLOW [236] -> GOTO 238
	expression/L3 = . expression "^=" expression, FOLLOW [236] -> GOTO 238
	expression/L3 = . expression "&=" expression, FOLLOW [236] -> GOTO 238
	expression/L3 = . expression "%=" expression, FOLLOW [236] -> GOTO 238
	expression/L3 = . expression "&&=" expression, FOLLOW [236] -> GOTO 238
	expression/L3 = . expression "||=" expression, FOLLOW [236] -> GOTO 238
	expression/L3 = . expression "&=" expression, FOLLOW [236] -> GOTO 238
	expression/L3 = . expression "|=" expression, FOLLOW [236] -> GOTO 238
	expression/L3 = . expression "<<=" expression, FOLLOW [236] -> GOTO 238
	expression/L3 = . expression ">>=" expression, FOLLOW [236] -> GOTO 238
	expression/L4 = . expression "||" expression, FOLLOW [236] -> GOTO 238
	expression/L5 = . expression "&&" expression, FOLLOW [236] -> GOTO 238
	expression/L6 = . expression "|" expression, FOLLOW [236] -> GOTO 238
	expression/L7 = . expression "^" expression, FOLLOW [236] -> GOTO 238
	expression/L7 = expression "^" . expression, FOLLOW [236] -> GOTO 238
	expression/L7 = . expression "&" expression, FOLLOW [236] -> GOTO 238
	expression/L8 = . expression "==" expression, FOLLOW [236] -> GOTO 238
	expression/L8 = . expression "!=" expression, FOLLOW [236] -> GOTO 238
	expression/L8 = . expression "<=" expression, FOLLOW [236] -> GOTO 238
	expression/L8 = . expression "<" expression, FOLLOW [236] -> GOTO 238
	expression/L8 = . expression ">=" expression, FOLLOW [236] -> GOTO 238
	expression/L8 = . expression ">" expression, FOLLOW [236] -> GOTO 238
	expression/L9 = . expression "+" expression, FOLLOW [236] -> GOTO 238
	expression/L9 = . expression "-" expression, FOLLOW [236] -> GOTO 238
	expression/L10 = . expression "*" expression, FOLLOW [236] -> GOTO 238
	expression/L10 = . expression "/" expression, FOLLOW [236] -> GOTO 238
	expression/L10 = . expression "%" expression, FOLLOW [236] -> GOTO 238
	expression/L11 = . expression "<<" expression, FOLLOW [236] -> GOTO 238
	expression/L11 = . expression ">>" expression, FOLLOW [236] -> GOTO 238
	expression/L12 = . expression "." IDENT, FOLLOW [236] -> GOTO 238
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [236] -> GOTO 238
	expression/L13 = . expression "(" ")", FOLLOW [236] -> GOTO 238
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [236] -> GOTO 238
	iexpression = . expression indirection IDENT, FOLLOW [236] -> GOTO 238
	expression/L12 = . iexpression, FOLLOW [236] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [236] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [236] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [236] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [236] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [236] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [236] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [236] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [236] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [236] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [236] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [236] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [236] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [236] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [236] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [236] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [236] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [236] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [236] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [236] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [236] -> SHIFT "null" GOTO 92
[133]
	indirection = "->" . indirection, FOLLOW [17] -> GOTO 239
	indirection = . "->" indirection, FOLLOW [17] -> SHIFT "->" GOTO 133
	indirection = . "->", FOLLOW [17] -> SHIFT "->" GOTO 133
	indirection = "->" . (131), FOLLOW [17] -> REDUCE indirection #1 CALL count
[134]
	expression/L3 = . expression "=" expression, FOLLOW [236] -> GOTO 240
	expression/L3 = expression "=" . expression, FOLLOW [236] -> GOTO 240
	expression/L3 = . expression "+=" expression, FOLLOW [236] -> GOTO 240
	expression/L3 = . expression "-=" expression, FOLLOW [236] -> GOTO 240
	expression/L3 = . expression "*=" expression, FOLLOW [236] -> GOTO 240
	expression/L3 = . expression "/=" expression, FOLLOW [236] -> GOTO 240
	expression/L3 = . expression "^=" expression, FOLLOW [236] -> GOTO 240
	expression/L3 = . expression "&=" expression, FOLLOW [236] -> GOTO 240
	expression/L3 = . expression "%=" expression, FOLLOW [236] -> GOTO 240
	expression/L3 = . expression "&&=" expression, FOLLOW [236] -> GOTO 240
	expression/L3 = . expression "||=" expression, FOLLOW [236] -> GOTO 240
	expression/L3 = . expression "&=" expression, FOLLOW [236] -> GOTO 240
	expression/L3 = . expression "|=" expression, FOLLOW [236] -> GOTO 240
	expression/L3 = . expression "<<=" expression, FOLLOW [236] -> GOTO 240
	expression/L3 = . expression ">>=" expression, FOLLOW [236] -> GOTO 240
	expression/L4 = . expression "||" expression, FOLLOW [236] -> GOTO 240
	expression/L5 = . expression "&&" expression, FOLLOW [236] -> GOTO 240
	expression/L6 = . expression "|" expression, FOLLOW [236] -> GOTO 240
	expression/L7 = . expression "^" expression, FOLLOW [236] -> GOTO 240
	expression/L7 = . expression "&" expression, FOLLOW [236] -> GOTO 240
	expression/L8 = . expression "==" expression, FOLLOW [236] -> GOTO 240
	expression/L8 = . expression "!=" expression, FOLLOW [236] -> GOTO 240
	expression/L8 = . expression "<=" expression, FOLLOW [236] -> GOTO 240
	expression/L8 = . expression "<" expression, FOLLOW [236] -> GOTO 240
	expression/L8 = . expression ">=" expression, FOLLOW [236] -> GOTO 240
	expression/L8 = . expression ">" expression, FOLLOW [236] -> GOTO 240
	expression/L9 = . expression "+" expression, FOLLOW [236] -> GOTO 240
	expression/L9 = . expression "-" expression, FOLLOW [236] -> GOTO 240
	expression/L10 = . expression "*" expression, FOLLOW [236] -> GOTO 240
	expression/L10 = . expression "/" expression, FOLLOW [236] -> GOTO 240
	expression/L10 = . expression "%" expression, FOLLOW [236] -> GOTO 240
	expression/L11 = . expression "<<" expression, FOLLOW [236] -> GOTO 240
	expression/L11 = . expression ">>" expression, FOLLOW [236] -> GOTO 240
	expression/L12 = . expression "." IDENT, FOLLOW [236] -> GOTO 240
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [236] -> GOTO 240
	expression/L13 = . expression "(" ")", FOLLOW [236] -> GOTO 240
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [236] -> GOTO 240
	iexpression = . expression indirection IDENT, FOLLOW [236] -> GOTO 240
	expression/L12 = . iexpression, FOLLOW [236] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [236] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [236] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [236] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [236] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [236] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [236] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [236] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [236] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [236] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [236] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [236] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [236] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [236] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [236] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [236] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [236] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [236] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [236] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [236] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [236] -> SHIFT "null" GOTO 92
[135]
	expression/L3 = . expression "=" expression, FOLLOW [236] -> GOTO 241
	expression/L3 = . expression "+=" expression, FOLLOW [236] -> GOTO 241
	expression/L3 = . expression "-=" expression, FOLLOW [236] -> GOTO 241
	expression/L3 = . expression "*=" expression, FOLLOW [236] -> GOTO 241
	expression/L3 = . expression "/=" expression, FOLLOW [236] -> GOTO 241
	expression/L3 = . expression "^=" expression, FOLLOW [236] -> GOTO 241
	expression/L3 = . expression "&=" expression, FOLLOW [236] -> GOTO 241
	expression/L3 = . expression "%=" expression, FOLLOW [236] -> GOTO 241
	expression/L3 = . expression "&&=" expression, FOLLOW [236] -> GOTO 241
	expression/L3 = . expression "||=" expression, FOLLOW [236] -> GOTO 241
	expression/L3 = . expression "&=" expression, FOLLOW [236] -> GOTO 241
	expression/L3 = . expression "|=" expression, FOLLOW [236] -> GOTO 241
	expression/L3 = . expression "<<=" expression, FOLLOW [236] -> GOTO 241
	expression/L3 = . expression ">>=" expression, FOLLOW [236] -> GOTO 241
	expression/L4 = . expression "||" expression, FOLLOW [236] -> GOTO 241
	expression/L5 = . expression "&&" expression, FOLLOW [236] -> GOTO 241
	expression/L6 = . expression "|" expression, FOLLOW [236] -> GOTO 241
	expression/L7 = . expression "^" expression, FOLLOW [236] -> GOTO 241
	expression/L7 = . expression "&" expression, FOLLOW [236] -> GOTO 241
	expression/L8 = . expression "==" expression, FOLLOW [236] -> GOTO 241
	expression/L8 = . expression "!=" expression, FOLLOW [236] -> GOTO 241
	expression/L8 = . expression "<=" expression, FOLLOW [236] -> GOTO 241
	expression/L8 = . expression "<" expression, FOLLOW [236] -> GOTO 241
	expression/L8 = . expression ">=" expression, FOLLOW [236] -> GOTO 241
	expression/L8 = . expression ">" expression, FOLLOW [236] -> GOTO 241
	expression/L9 = . expression "+" expression, FOLLOW [236] -> GOTO 241
	expression/L9 = expression "+" . expression, FOLLOW [236] -> GOTO 241
	expression/L9 = . expression "-" expression, FOLLOW [236] -> GOTO 241
	expression/L10 = . expression "*" expression, FOLLOW [236] -> GOTO 241
	expression/L10 = . expression "/" expression, FOLLOW [236] -> GOTO 241
	expression/L10 = . expression "%" expression, FOLLOW [236] -> GOTO 241
	expression/L11 = . expression "<<" expression, FOLLOW [236] -> GOTO 241
	expression/L11 = . expression ">>" expression, FOLLOW [236] -> GOTO 241
	expression/L12 = . expression "." IDENT, FOLLOW [236] -> GOTO 241
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [236] -> GOTO 241
	expression/L13 = . expression "(" ")", FOLLOW [236] -> GOTO 241
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [236] -> GOTO 241
	iexpression = . expression indirection IDENT, FOLLOW [236] -> GOTO 241
	expression/L12 = . iexpression, FOLLOW [236] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [236] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [236] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [236] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [236] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [236] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [236] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [236] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [236] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [236] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [236] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [236] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [236] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [236] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [236] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [236] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [236] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [236] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [236] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [236] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [236] -> SHIFT "null" GOTO 92
[136]
	expression/L3 = . expression "=" expression, FOLLOW [236] -> GOTO 242
	expression/L3 = . expression "+=" expression, FOLLOW [236] -> GOTO 242
	expression/L3 = . expression "-=" expression, FOLLOW [236] -> GOTO 242
	expression/L3 = . expression "*=" expression, FOLLOW [236] -> GOTO 242
	expression/L3 = . expression "/=" expression, FOLLOW [236] -> GOTO 242
	expression/L3 = . expression "^=" expression, FOLLOW [236] -> GOTO 242
	expression/L3 = . expression "&=" expression, FOLLOW [236] -> GOTO 242
	expression/L3 = . expression "%=" expression, FOLLOW [236] -> GOTO 242
	expression/L3 = . expression "&&=" expression, FOLLOW [236] -> GOTO 242
	expression/L3 = . expression "||=" expression, FOLLOW [236] -> GOTO 242
	expression/L3 = . expression "&=" expression, FOLLOW [236] -> GOTO 242
	expression/L3 = . expression "|=" expression, FOLLOW [236] -> GOTO 242
	expression/L3 = . expression "<<=" expression, FOLLOW [236] -> GOTO 242
	expression/L3 = . expression ">>=" expression, FOLLOW [236] -> GOTO 242
	expression/L4 = . expression "||" expression, FOLLOW [236] -> GOTO 242
	expression/L5 = . expression "&&" expression, FOLLOW [236] -> GOTO 242
	expression/L6 = . expression "|" expression, FOLLOW [236] -> GOTO 242
	expression/L7 = . expression "^" expression, FOLLOW [236] -> GOTO 242
	expression/L7 = . expression "&" expression, FOLLOW [236] -> GOTO 242
	expression/L8 = . expression "==" expression, FOLLOW [236] -> GOTO 242
	expression/L8 = . expression "!=" expression, FOLLOW [236] -> GOTO 242
	expression/L8 = . expression "<=" expression, FOLLOW [236] -> GOTO 242
	expression/L8 = . expression "<" expression, FOLLOW [236] -> GOTO 242
	expression/L8 = . expression ">=" expression, FOLLOW [236] -> GOTO 242
	expression/L8 = . expression ">" expression, FOLLOW [236] -> GOTO 242
	expression/L9 = . expression "+" expression, FOLLOW [236] -> GOTO 242
	expression/L9 = . expression "-" expression, FOLLOW [236] -> GOTO 242
	expression/L9 = expression "-" . expression, FOLLOW [236] -> GOTO 242
	expression/L10 = . expression "*" expression, FOLLOW [236] -> GOTO 242
	expression/L10 = . expression "/" expression, FOLLOW [236] -> GOTO 242
	expression/L10 = . expression "%" expression, FOLLOW [236] -> GOTO 242
	expression/L11 = . expression "<<" expression, FOLLOW [236] -> GOTO 242
	expression/L11 = . expression ">>" expression, FOLLOW [236] -> GOTO 242
	expression/L12 = . expression "." IDENT, FOLLOW [236] -> GOTO 242
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [236] -> GOTO 242
	expression/L13 = . expression "(" ")", FOLLOW [236] -> GOTO 242
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [236] -> GOTO 242
	iexpression = . expression indirection IDENT, FOLLOW [236] -> GOTO 242
	expression/L12 = . iexpression, FOLLOW [236] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [236] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [236] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [236] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [236] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [236] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [236] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [236] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [236] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [236] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [236] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [236] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [236] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [236] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [236] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [236] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [236] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [236] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [236] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [236] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [236] -> SHIFT "null" GOTO 92
[137]
	expression/L3 = . expression "=" expression, FOLLOW [236] -> GOTO 243
	expression/L3 = . expression "+=" expression, FOLLOW [236] -> GOTO 243
	expression/L3 = . expression "-=" expression, FOLLOW [236] -> GOTO 243
	expression/L3 = . expression "*=" expression, FOLLOW [236] -> GOTO 243
	expression/L3 = . expression "/=" expression, FOLLOW [236] -> GOTO 243
	expression/L3 = . expression "^=" expression, FOLLOW [236] -> GOTO 243
	expression/L3 = . expression "&=" expression, FOLLOW [236] -> GOTO 243
	expression/L3 = . expression "%=" expression, FOLLOW [236] -> GOTO 243
	expression/L3 = . expression "&&=" expression, FOLLOW [236] -> GOTO 243
	expression/L3 = . expression "||=" expression, FOLLOW [236] -> GOTO 243
	expression/L3 = . expression "&=" expression, FOLLOW [236] -> GOTO 243
	expression/L3 = . expression "|=" expression, FOLLOW [236] -> GOTO 243
	expression/L3 = . expression "<<=" expression, FOLLOW [236] -> GOTO 243
	expression/L3 = . expression ">>=" expression, FOLLOW [236] -> GOTO 243
	expression/L4 = . expression "||" expression, FOLLOW [236] -> GOTO 243
	expression/L5 = . expression "&&" expression, FOLLOW [236] -> GOTO 243
	expression/L6 = . expression "|" expression, FOLLOW [236] -> GOTO 243
	expression/L7 = . expression "^" expression, FOLLOW [236] -> GOTO 243
	expression/L7 = . expression "&" expression, FOLLOW [236] -> GOTO 243
	expression/L8 = . expression "==" expression, FOLLOW [236] -> GOTO 243
	expression/L8 = . expression "!=" expression, FOLLOW [236] -> GOTO 243
	expression/L8 = . expression "<=" expression, FOLLOW [236] -> GOTO 243
	expression/L8 = . expression "<" expression, FOLLOW [236] -> GOTO 243
	expression/L8 = . expression ">=" expression, FOLLOW [236] -> GOTO 243
	expression/L8 = . expression ">" expression, FOLLOW [236] -> GOTO 243
	expression/L9 = . expression "+" expression, FOLLOW [236] -> GOTO 243
	expression/L9 = . expression "-" expression, FOLLOW [236] -> GOTO 243
	expression/L10 = . expression "*" expression, FOLLOW [236] -> GOTO 243
	expression/L10 = expression "*" . expression, FOLLOW [236] -> GOTO 243
	expression/L10 = . expression "/" expression, FOLLOW [236] -> GOTO 243
	expression/L10 = . expression "%" expression, FOLLOW [236] -> GOTO 243
	expression/L11 = . expression "<<" expression, FOLLOW [236] -> GOTO 243
	expression/L11 = . expression ">>" expression, FOLLOW [236] -> GOTO 243
	expression/L12 = . expression "." IDENT, FOLLOW [236] -> GOTO 243
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [236] -> GOTO 243
	expression/L13 = . expression "(" ")", FOLLOW [236] -> GOTO 243
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [236] -> GOTO 243
	iexpression = . expression indirection IDENT, FOLLOW [236] -> GOTO 243
	expression/L12 = . iexpression, FOLLOW [236] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [236] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [236] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [236] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [236] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [236] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [236] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [236] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [236] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [236] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [236] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [236] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [236] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [236] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [236] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [236] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [236] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [236] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [236] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [236] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [236] -> SHIFT "null" GOTO 92
[138]
	expression/L3 = . expression "=" expression, FOLLOW [236] -> GOTO 244
	expression/L3 = . expression "+=" expression, FOLLOW [236] -> GOTO 244
	expression/L3 = . expression "-=" expression, FOLLOW [236] -> GOTO 244
	expression/L3 = . expression "*=" expression, FOLLOW [236] -> GOTO 244
	expression/L3 = . expression "/=" expression, FOLLOW [236] -> GOTO 244
	expression/L3 = . expression "^=" expression, FOLLOW [236] -> GOTO 244
	expression/L3 = . expression "&=" expression, FOLLOW [236] -> GOTO 244
	expression/L3 = . expression "%=" expression, FOLLOW [236] -> GOTO 244
	expression/L3 = . expression "&&=" expression, FOLLOW [236] -> GOTO 244
	expression/L3 = . expression "||=" expression, FOLLOW [236] -> GOTO 244
	expression/L3 = . expression "&=" expression, FOLLOW [236] -> GOTO 244
	expression/L3 = . expression "|=" expression, FOLLOW [236] -> GOTO 244
	expression/L3 = . expression "<<=" expression, FOLLOW [236] -> GOTO 244
	expression/L3 = . expression ">>=" expression, FOLLOW [236] -> GOTO 244
	expression/L4 = . expression "||" expression, FOLLOW [236] -> GOTO 244
	expression/L5 = . expression "&&" expression, FOLLOW [236] -> GOTO 244
	expression/L6 = . expression "|" expression, FOLLOW [236] -> GOTO 244
	expression/L7 = . expression "^" expression, FOLLOW [236] -> GOTO 244
	expression/L7 = . expression "&" expression, FOLLOW [236] -> GOTO 244
	expression/L8 = . expression "==" expression, FOLLOW [236] -> GOTO 244
	expression/L8 = . expression "!=" expression, FOLLOW [236] -> GOTO 244
	expression/L8 = . expression "<=" expression, FOLLOW [236] -> GOTO 244
	expression/L8 = . expression "<" expression, FOLLOW [236] -> GOTO 244
	expression/L8 = . expression ">=" expression, FOLLOW [236] -> GOTO 244
	expression/L8 = . expression ">" expression, FOLLOW [236] -> GOTO 244
	expression/L9 = . expression "+" expression, FOLLOW [236] -> GOTO 244
	expression/L9 = . expression "-" expression, FOLLOW [236] -> GOTO 244
	expression/L10 = . expression "*" expression, FOLLOW [236] -> GOTO 244
	expression/L10 = . expression "/" expression, FOLLOW [236] -> GOTO 244
	expression/L10 = expression "/" . expression, FOLLOW [236] -> GOTO 244
	expression/L10 = . expression "%" expression, FOLLOW [236] -> GOTO 244
	expression/L11 = . expression "<<" expression, FOLLOW [236] -> GOTO 244
	expression/L11 = . expression ">>" expression, FOLLOW [236] -> GOTO 244
	expression/L12 = . expression "." IDENT, FOLLOW [236] -> GOTO 244
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [236] -> GOTO 244
	expression/L13 = . expression "(" ")", FOLLOW [236] -> GOTO 244
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [236] -> GOTO 244
	iexpression = . expression indirection IDENT, FOLLOW [236] -> GOTO 244
	expression/L12 = . iexpression, FOLLOW [236] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [236] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [236] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [236] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [236] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [236] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [236] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [236] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [236] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [236] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [236] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [236] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [236] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [236] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [236] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [236] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [236] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [236] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [236] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [236] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [236] -> SHIFT "null" GOTO 92
[139]
	expression/L3 = . expression "=" expression, FOLLOW [236] -> GOTO 245
	expression/L3 = . expression "+=" expression, FOLLOW [236] -> GOTO 245
	expression/L3 = . expression "-=" expression, FOLLOW [236] -> GOTO 245
	expression/L3 = . expression "*=" expression, FOLLOW [236] -> GOTO 245
	expression/L3 = . expression "/=" expression, FOLLOW [236] -> GOTO 245
	expression/L3 = . expression "^=" expression, FOLLOW [236] -> GOTO 245
	expression/L3 = . expression "&=" expression, FOLLOW [236] -> GOTO 245
	expression/L3 = . expression "%=" expression, FOLLOW [236] -> GOTO 245
	expression/L3 = . expression "&&=" expression, FOLLOW [236] -> GOTO 245
	expression/L3 = . expression "||=" expression, FOLLOW [236] -> GOTO 245
	expression/L3 = . expression "&=" expression, FOLLOW [236] -> GOTO 245
	expression/L3 = . expression "|=" expression, FOLLOW [236] -> GOTO 245
	expression/L3 = . expression "<<=" expression, FOLLOW [236] -> GOTO 245
	expression/L3 = . expression ">>=" expression, FOLLOW [236] -> GOTO 245
	expression/L4 = . expression "||" expression, FOLLOW [236] -> GOTO 245
	expression/L5 = . expression "&&" expression, FOLLOW [236] -> GOTO 245
	expression/L6 = . expression "|" expression, FOLLOW [236] -> GOTO 245
	expression/L7 = . expression "^" expression, FOLLOW [236] -> GOTO 245
	expression/L7 = . expression "&" expression, FOLLOW [236] -> GOTO 245
	expression/L8 = . expression "==" expression, FOLLOW [236] -> GOTO 245
	expression/L8 = . expression "!=" expression, FOLLOW [236] -> GOTO 245
	expression/L8 = . expression "<=" expression, FOLLOW [236] -> GOTO 245
	expression/L8 = . expression "<" expression, FOLLOW [236] -> GOTO 245
	expression/L8 = . expression ">=" expression, FOLLOW [236] -> GOTO 245
	expression/L8 = . expression ">" expression, FOLLOW [236] -> GOTO 245
	expression/L9 = . expression "+" expression, FOLLOW [236] -> GOTO 245
	expression/L9 = . expression "-" expression, FOLLOW [236] -> GOTO 245
	expression/L10 = . expression "*" expression, FOLLOW [236] -> GOTO 245
	expression/L10 = . expression "/" expression, FOLLOW [236] -> GOTO 245
	expression/L10 = . expression "%" expression, FOLLOW [236] -> GOTO 245
	expression/L10 = expression "%" . expression, FOLLOW [236] -> GOTO 245
	expression/L11 = . expression "<<" expression, FOLLOW [236] -> GOTO 245
	expression/L11 = . expression ">>" expression, FOLLOW [236] -> GOTO 245
	expression/L12 = . expression "." IDENT, FOLLOW [236] -> GOTO 245
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [236] -> GOTO 245
	expression/L13 = . expression "(" ")", FOLLOW [236] -> GOTO 245
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [236] -> GOTO 245
	iexpression = . expression indirection IDENT, FOLLOW [236] -> GOTO 245
	expression/L12 = . iexpression, FOLLOW [236] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [236] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [236] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [236] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [236] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [236] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [236] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [236] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [236] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [236] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [236] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [236] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [236] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [236] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [236] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [236] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [236] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [236] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [236] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [236] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [236] -> SHIFT "null" GOTO 92
[140]
	expression/L3 = . expression "=" expression, FOLLOW [236] -> GOTO 246
	expression/L3 = . expression "+=" expression, FOLLOW [236] -> GOTO 246
	expression/L3 = . expression "-=" expression, FOLLOW [236] -> GOTO 246
	expression/L3 = . expression "*=" expression, FOLLOW [236] -> GOTO 246
	expression/L3 = . expression "/=" expression, FOLLOW [236] -> GOTO 246
	expression/L3 = . expression "^=" expression, FOLLOW [236] -> GOTO 246
	expression/L3 = . expression "&=" expression, FOLLOW [236] -> GOTO 246
	expression/L3 = . expression "%=" expression, FOLLOW [236] -> GOTO 246
	expression/L3 = . expression "&&=" expression, FOLLOW [236] -> GOTO 246
	expression/L3 = . expression "||=" expression, FOLLOW [236] -> GOTO 246
	expression/L3 = . expression "&=" expression, FOLLOW [236] -> GOTO 246
	expression/L3 = . expression "|=" expression, FOLLOW [236] -> GOTO 246
	expression/L3 = . expression "<<=" expression, FOLLOW [236] -> GOTO 246
	expression/L3 = . expression ">>=" expression, FOLLOW [236] -> GOTO 246
	expression/L4 = . expression "||" expression, FOLLOW [236] -> GOTO 246
	expression/L5 = . expression "&&" expression, FOLLOW [236] -> GOTO 246
	expression/L5 = expression "&&" . expression, FOLLOW [236] -> GOTO 246
	expression/L6 = . expression "|" expression, FOLLOW [236] -> GOTO 246
	expression/L7 = . expression "^" expression, FOLLOW [236] -> GOTO 246
	expression/L7 = . expression "&" expression, FOLLOW [236] -> GOTO 246
	expression/L8 = . expression "==" expression, FOLLOW [236] -> GOTO 246
	expression/L8 = . expression "!=" expression, FOLLOW [236] -> GOTO 246
	expression/L8 = . expression "<=" expression, FOLLOW [236] -> GOTO 246
	expression/L8 = . expression "<" expression, FOLLOW [236] -> GOTO 246
	expression/L8 = . expression ">=" expression, FOLLOW [236] -> GOTO 246
	expression/L8 = . expression ">" expression, FOLLOW [236] -> GOTO 246
	expression/L9 = . expression "+" expression, FOLLOW [236] -> GOTO 246
	expression/L9 = . expression "-" expression, FOLLOW [236] -> GOTO 246
	expression/L10 = . expression "*" expression, FOLLOW [236] -> GOTO 246
	expression/L10 = . expression "/" expression, FOLLOW [236] -> GOTO 246
	expression/L10 = . expression "%" expression, FOLLOW [236] -> GOTO 246
	expression/L11 = . expression "<<" expression, FOLLOW [236] -> GOTO 246
	expression/L11 = . expression ">>" expression, FOLLOW [236] -> GOTO 246
	expression/L12 = . expression "." IDENT, FOLLOW [236] -> GOTO 246
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [236] -> GOTO 246
	expression/L13 = . expression "(" ")", FOLLOW [236] -> GOTO 246
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [236] -> GOTO 246
	iexpression = . expression indirection IDENT, FOLLOW [236] -> GOTO 246
	expression/L12 = . iexpression, FOLLOW [236] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [236] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [236] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [236] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [236] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [236] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [236] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [236] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [236] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [236] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [236] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [236] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [236] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [236] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [236] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [236] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [236] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [236] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [236] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [236] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [236] -> SHIFT "null" GOTO 92
[141]
	expression/L3 = . expression "=" expression, FOLLOW [236] -> GOTO 247
	expression/L3 = . expression "+=" expression, FOLLOW [236] -> GOTO 247
	expression/L3 = . expression "-=" expression, FOLLOW [236] -> GOTO 247
	expression/L3 = . expression "*=" expression, FOLLOW [236] -> GOTO 247
	expression/L3 = . expression "/=" expression, FOLLOW [236] -> GOTO 247
	expression/L3 = . expression "^=" expression, FOLLOW [236] -> GOTO 247
	expression/L3 = . expression "&=" expression, FOLLOW [236] -> GOTO 247
	expression/L3 = . expression "%=" expression, FOLLOW [236] -> GOTO 247
	expression/L3 = . expression "&&=" expression, FOLLOW [236] -> GOTO 247
	expression/L3 = . expression "||=" expression, FOLLOW [236] -> GOTO 247
	expression/L3 = . expression "&=" expression, FOLLOW [236] -> GOTO 247
	expression/L3 = . expression "|=" expression, FOLLOW [236] -> GOTO 247
	expression/L3 = . expression "<<=" expression, FOLLOW [236] -> GOTO 247
	expression/L3 = . expression ">>=" expression, FOLLOW [236] -> GOTO 247
	expression/L4 = . expression "||" expression, FOLLOW [236] -> GOTO 247
	expression/L4 = expression "||" . expression, FOLLOW [236] -> GOTO 247
	expression/L5 = . expression "&&" expression, FOLLOW [236] -> GOTO 247
	expression/L6 = . expression "|" expression, FOLLOW [236] -> GOTO 247
	expression/L7 = . expression "^" expression, FOLLOW [236] -> GOTO 247
	expression/L7 = . expression "&" expression, FOLLOW [236] -> GOTO 247
	expression/L8 = . expression "==" expression, FOLLOW [236] -> GOTO 247
	expression/L8 = . expression "!=" expression, FOLLOW [236] -> GOTO 247
	expression/L8 = . expression "<=" expression, FOLLOW [236] -> GOTO 247
	expression/L8 = . expression "<" expression, FOLLOW [236] -> GOTO 247
	expression/L8 = . expression ">=" expression, FOLLOW [236] -> GOTO 247
	expression/L8 = . expression ">" expression, FOLLOW [236] -> GOTO 247
	expression/L9 = . expression "+" expression, FOLLOW [236] -> GOTO 247
	expression/L9 = . expression "-" expression, FOLLOW [236] -> GOTO 247
	expression/L10 = . expression "*" expression, FOLLOW [236] -> GOTO 247
	expression/L10 = . expression "/" expression, FOLLOW [236] -> GOTO 247
	expression/L10 = . expression "%" expression, FOLLOW [236] -> GOTO 247
	expression/L11 = . expression "<<" expression, FOLLOW [236] -> GOTO 247
	expression/L11 = . expression ">>" expression, FOLLOW [236] -> GOTO 247
	expression/L12 = . expression "." IDENT, FOLLOW [236] -> GOTO 247
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [236] -> GOTO 247
	expression/L13 = . expression "(" ")", FOLLOW [236] -> GOTO 247
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [236] -> GOTO 247
	iexpression = . expression indirection IDENT, FOLLOW [236] -> GOTO 247
	expression/L12 = . iexpression, FOLLOW [236] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [236] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [236] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [236] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [236] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [236] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [236] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [236] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [236] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [236] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [236] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [236] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [236] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [236] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [236] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [236] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [236] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [236] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [236] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [236] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [236] -> SHIFT "null" GOTO 92
[142]
	expression/L3 = . expression "=" expression, FOLLOW [236] -> GOTO 248
	expression/L3 = . expression "+=" expression, FOLLOW [236] -> GOTO 248
	expression/L3 = . expression "-=" expression, FOLLOW [236] -> GOTO 248
	expression/L3 = . expression "*=" expression, FOLLOW [236] -> GOTO 248
	expression/L3 = . expression "/=" expression, FOLLOW [236] -> GOTO 248
	expression/L3 = . expression "^=" expression, FOLLOW [236] -> GOTO 248
	expression/L3 = . expression "&=" expression, FOLLOW [236] -> GOTO 248
	expression/L3 = . expression "%=" expression, FOLLOW [236] -> GOTO 248
	expression/L3 = . expression "&&=" expression, FOLLOW [236] -> GOTO 248
	expression/L3 = . expression "||=" expression, FOLLOW [236] -> GOTO 248
	expression/L3 = . expression "&=" expression, FOLLOW [236] -> GOTO 248
	expression/L3 = . expression "|=" expression, FOLLOW [236] -> GOTO 248
	expression/L3 = . expression "<<=" expression, FOLLOW [236] -> GOTO 248
	expression/L3 = . expression ">>=" expression, FOLLOW [236] -> GOTO 248
	expression/L4 = . expression "||" expression, FOLLOW [236] -> GOTO 248
	expression/L5 = . expression "&&" expression, FOLLOW [236] -> GOTO 248
	expression/L6 = . expression "|" expression, FOLLOW [236] -> GOTO 248
	expression/L6 = expression "|" . expression, FOLLOW [236] -> GOTO 248
	expression/L7 = . expression "^" expression, FOLLOW [236] -> GOTO 248
	expression/L7 = . expression "&" expression, FOLLOW [236] -> GOTO 248
	expression/L8 = . expression "==" expression, FOLLOW [236] -> GOTO 248
	expression/L8 = . expression "!=" expression, FOLLOW [236] -> GOTO 248
	expression/L8 = . expression "<=" expression, FOLLOW [236] -> GOTO 248
	expression/L8 = . expression "<" expression, FOLLOW [236] -> GOTO 248
	expression/L8 = . expression ">=" expression, FOLLOW [236] -> GOTO 248
	expression/L8 = . expression ">" expression, FOLLOW [236] -> GOTO 248
	expression/L9 = . expression "+" expression, FOLLOW [236] -> GOTO 248
	expression/L9 = . expression "-" expression, FOLLOW [236] -> GOTO 248
	expression/L10 = . expression "*" expression, FOLLOW [236] -> GOTO 248
	expression/L10 = . expression "/" expression, FOLLOW [236] -> GOTO 248
	expression/L10 = . expression "%" expression, FOLLOW [236] -> GOTO 248
	expression/L11 = . expression "<<" expression, FOLLOW [236] -> GOTO 248
	expression/L11 = . expression ">>" expression, FOLLOW [236] -> GOTO 248
	expression/L12 = . expression "." IDENT, FOLLOW [236] -> GOTO 248
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [236] -> GOTO 248
	expression/L13 = . expression "(" ")", FOLLOW [236] -> GOTO 248
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [236] -> GOTO 248
	iexpression = . expression indirection IDENT, FOLLOW [236] -> GOTO 248
	expression/L12 = . iexpression, FOLLOW [236] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [236] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [236] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [236] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [236] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [236] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [236] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [236] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [236] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [236] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [236] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [236] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [236] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [236] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [236] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [236] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [236] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [236] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [236] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [236] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [236] -> SHIFT "null" GOTO 92
[143]
	expression/L3 = . expression "=" expression, FOLLOW [236] -> GOTO 249
	expression/L3 = . expression "+=" expression, FOLLOW [236] -> GOTO 249
	expression/L3 = . expression "-=" expression, FOLLOW [236] -> GOTO 249
	expression/L3 = . expression "*=" expression, FOLLOW [236] -> GOTO 249
	expression/L3 = . expression "/=" expression, FOLLOW [236] -> GOTO 249
	expression/L3 = . expression "^=" expression, FOLLOW [236] -> GOTO 249
	expression/L3 = . expression "&=" expression, FOLLOW [236] -> GOTO 249
	expression/L3 = . expression "%=" expression, FOLLOW [236] -> GOTO 249
	expression/L3 = . expression "&&=" expression, FOLLOW [236] -> GOTO 249
	expression/L3 = . expression "||=" expression, FOLLOW [236] -> GOTO 249
	expression/L3 = . expression "&=" expression, FOLLOW [236] -> GOTO 249
	expression/L3 = . expression "|=" expression, FOLLOW [236] -> GOTO 249
	expression/L3 = . expression "<<=" expression, FOLLOW [236] -> GOTO 249
	expression/L3 = . expression ">>=" expression, FOLLOW [236] -> GOTO 249
	expression/L4 = . expression "||" expression, FOLLOW [236] -> GOTO 249
	expression/L5 = . expression "&&" expression, FOLLOW [236] -> GOTO 249
	expression/L6 = . expression "|" expression, FOLLOW [236] -> GOTO 249
	expression/L7 = . expression "^" expression, FOLLOW [236] -> GOTO 249
	expression/L7 = . expression "&" expression, FOLLOW [236] -> GOTO 249
	expression/L8 = . expression "==" expression, FOLLOW [236] -> GOTO 249
	expression/L8 = . expression "!=" expression, FOLLOW [236] -> GOTO 249
	expression/L8 = . expression "<=" expression, FOLLOW [236] -> GOTO 249
	expression/L8 = . expression "<" expression, FOLLOW [236] -> GOTO 249
	expression/L8 = . expression ">=" expression, FOLLOW [236] -> GOTO 249
	expression/L8 = . expression ">" expression, FOLLOW [236] -> GOTO 249
	expression/L9 = . expression "+" expression, FOLLOW [236] -> GOTO 249
	expression/L9 = . expression "-" expression, FOLLOW [236] -> GOTO 249
	expression/L10 = . expression "*" expression, FOLLOW [236] -> GOTO 249
	expression/L10 = . expression "/" expression, FOLLOW [236] -> GOTO 249
	expression/L10 = . expression "%" expression, FOLLOW [236] -> GOTO 249
	expression/L11 = . expression "<<" expression, FOLLOW [236] -> GOTO 249
	expression/L11 = expression "<<" . expression, FOLLOW [236] -> GOTO 249
	expression/L11 = . expression ">>" expression, FOLLOW [236] -> GOTO 249
	expression/L12 = . expression "." IDENT, FOLLOW [236] -> GOTO 249
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [236] -> GOTO 249
	expression/L13 = . expression "(" ")", FOLLOW [236] -> GOTO 249
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [236] -> GOTO 249
	iexpression = . expression indirection IDENT, FOLLOW [236] -> GOTO 249
	expression/L12 = . iexpression, FOLLOW [236] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [236] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [236] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [236] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [236] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [236] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [236] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [236] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [236] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [236] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [236] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [236] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [236] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [236] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [236] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [236] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [236] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [236] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [236] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [236] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [236] -> SHIFT "null" GOTO 92
[144]
	expression/L3 = . expression "=" expression, FOLLOW [236] -> GOTO 250
	expression/L3 = . expression "+=" expression, FOLLOW [236] -> GOTO 250
	expression/L3 = . expression "-=" expression, FOLLOW [236] -> GOTO 250
	expression/L3 = . expression "*=" expression, FOLLOW [236] -> GOTO 250
	expression/L3 = . expression "/=" expression, FOLLOW [236] -> GOTO 250
	expression/L3 = . expression "^=" expression, FOLLOW [236] -> GOTO 250
	expression/L3 = . expression "&=" expression, FOLLOW [236] -> GOTO 250
	expression/L3 = . expression "%=" expression, FOLLOW [236] -> GOTO 250
	expression/L3 = . expression "&&=" expression, FOLLOW [236] -> GOTO 250
	expression/L3 = . expression "||=" expression, FOLLOW [236] -> GOTO 250
	expression/L3 = . expression "&=" expression, FOLLOW [236] -> GOTO 250
	expression/L3 = . expression "|=" expression, FOLLOW [236] -> GOTO 250
	expression/L3 = . expression "<<=" expression, FOLLOW [236] -> GOTO 250
	expression/L3 = . expression ">>=" expression, FOLLOW [236] -> GOTO 250
	expression/L4 = . expression "||" expression, FOLLOW [236] -> GOTO 250
	expression/L5 = . expression "&&" expression, FOLLOW [236] -> GOTO 250
	expression/L6 = . expression "|" expression, FOLLOW [236] -> GOTO 250
	expression/L7 = . expression "^" expression, FOLLOW [236] -> GOTO 250
	expression/L7 = . expression "&" expression, FOLLOW [236] -> GOTO 250
	expression/L8 = . expression "==" expression, FOLLOW [236] -> GOTO 250
	expression/L8 = . expression "!=" expression, FOLLOW [236] -> GOTO 250
	expression/L8 = . expression "<=" expression, FOLLOW [236] -> GOTO 250
	expression/L8 = . expression "<" expression, FOLLOW [236] -> GOTO 250
	expression/L8 = . expression ">=" expression, FOLLOW [236] -> GOTO 250
	expression/L8 = . expression ">" expression, FOLLOW [236] -> GOTO 250
	expression/L9 = . expression "+" expression, FOLLOW [236] -> GOTO 250
	expression/L9 = . expression "-" expression, FOLLOW [236] -> GOTO 250
	expression/L10 = . expression "*" expression, FOLLOW [236] -> GOTO 250
	expression/L10 = . expression "/" expression, FOLLOW [236] -> GOTO 250
	expression/L10 = . expression "%" expression, FOLLOW [236] -> GOTO 250
	expression/L11 = . expression "<<" expression, FOLLOW [236] -> GOTO 250
	expression/L11 = . expression ">>" expression, FOLLOW [236] -> GOTO 250
	expression/L11 = expression ">>" . expression, FOLLOW [236] -> GOTO 250
	expression/L12 = . expression "." IDENT, FOLLOW [236] -> GOTO 250
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [236] -> GOTO 250
	expression/L13 = . expression "(" ")", FOLLOW [236] -> GOTO 250
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [236] -> GOTO 250
	iexpression = . expression indirection IDENT, FOLLOW [236] -> GOTO 250
	expression/L12 = . iexpression, FOLLOW [236] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [236] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [236] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [236] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [236] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [236] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [236] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [236] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [236] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [236] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [236] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [236] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [236] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [236] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [236] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [236] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [236] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [236] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [236] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [236] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [236] -> SHIFT "null" GOTO 92
[145]
	expression/L3 = . expression "=" expression, FOLLOW [236] -> GOTO 183
	expression/L3 = . expression "+=" expression, FOLLOW [236] -> GOTO 183
	expression/L3 = . expression "-=" expression, FOLLOW [236] -> GOTO 183
	expression/L3 = . expression "*=" expression, FOLLOW [236] -> GOTO 183
	expression/L3 = . expression "/=" expression, FOLLOW [236] -> GOTO 183
	expression/L3 = . expression "^=" expression, FOLLOW [236] -> GOTO 183
	expression/L3 = . expression "&=" expression, FOLLOW [236] -> GOTO 183
	expression/L3 = . expression "%=" expression, FOLLOW [236] -> GOTO 183
	expression/L3 = . expression "&&=" expression, FOLLOW [236] -> GOTO 183
	expression/L3 = . expression "||=" expression, FOLLOW [236] -> GOTO 183
	expression/L3 = . expression "&=" expression, FOLLOW [236] -> GOTO 183
	expression/L3 = . expression "|=" expression, FOLLOW [236] -> GOTO 183
	expression/L3 = . expression "<<=" expression, FOLLOW [236] -> GOTO 183
	expression/L3 = . expression ">>=" expression, FOLLOW [236] -> GOTO 183
	expression/L4 = . expression "||" expression, FOLLOW [236] -> GOTO 183
	expression/L5 = . expression "&&" expression, FOLLOW [236] -> GOTO 183
	expression/L6 = . expression "|" expression, FOLLOW [236] -> GOTO 183
	expression/L7 = . expression "^" expression, FOLLOW [236] -> GOTO 183
	expression/L7 = . expression "&" expression, FOLLOW [236] -> GOTO 183
	expression/L8 = . expression "==" expression, FOLLOW [236] -> GOTO 183
	expression/L8 = . expression "!=" expression, FOLLOW [236] -> GOTO 183
	expression/L8 = . expression "<=" expression, FOLLOW [236] -> GOTO 183
	expression/L8 = . expression "<" expression, FOLLOW [236] -> GOTO 183
	expression/L8 = . expression ">=" expression, FOLLOW [236] -> GOTO 183
	expression/L8 = . expression ">" expression, FOLLOW [236] -> GOTO 183
	expression/L9 = . expression "+" expression, FOLLOW [236] -> GOTO 183
	expression/L9 = . expression "-" expression, FOLLOW [236] -> GOTO 183
	expression/L10 = . expression "*" expression, FOLLOW [236] -> GOTO 183
	expression/L10 = . expression "/" expression, FOLLOW [236] -> GOTO 183
	expression/L10 = . expression "%" expression, FOLLOW [236] -> GOTO 183
	expression/L11 = . expression "<<" expression, FOLLOW [236] -> GOTO 183
	expression/L11 = . expression ">>" expression, FOLLOW [236] -> GOTO 183
	expression/L12 = . expression "." IDENT, FOLLOW [236] -> GOTO 183
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [236] -> GOTO 183
	expression/L13 = . expression "(" ")", FOLLOW [236] -> GOTO 183
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [236] -> GOTO 183
	iexpression = . expression indirection IDENT, FOLLOW [236] -> GOTO 183
	expressionlist = . expression "," expressionlist, FOLLOW [25] -> GOTO 183
	expressionlist = . expression, FOLLOW [25] -> GOTO 183
	expression/L12 = . iexpression, FOLLOW [236] -> GOTO 69
	expression/L13 = expression "[" . expressionlist "]", FOLLOW [236] -> GOTO 251
	expression/L2 = . BOOLEAN, FOLLOW [236] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [236] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [236] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [236] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [236] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [236] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [236] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [236] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [236] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [236] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [236] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [236] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [236] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [236] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [236] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [236] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [236] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [236] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [236] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [236] -> SHIFT "null" GOTO 92
[146]
	expression/L3 = . expression "=" expression, FOLLOW [236] -> GOTO 252
	expression/L3 = . expression "+=" expression, FOLLOW [236] -> GOTO 252
	expression/L3 = . expression "-=" expression, FOLLOW [236] -> GOTO 252
	expression/L3 = . expression "*=" expression, FOLLOW [236] -> GOTO 252
	expression/L3 = . expression "/=" expression, FOLLOW [236] -> GOTO 252
	expression/L3 = . expression "^=" expression, FOLLOW [236] -> GOTO 252
	expression/L3 = . expression "&=" expression, FOLLOW [236] -> GOTO 252
	expression/L3 = . expression "%=" expression, FOLLOW [236] -> GOTO 252
	expression/L3 = . expression "&&=" expression, FOLLOW [236] -> GOTO 252
	expression/L3 = . expression "||=" expression, FOLLOW [236] -> GOTO 252
	expression/L3 = . expression "&=" expression, FOLLOW [236] -> GOTO 252
	expression/L3 = . expression "|=" expression, FOLLOW [236] -> GOTO 252
	expression/L3 = . expression "<<=" expression, FOLLOW [236] -> GOTO 252
	expression/L3 = . expression ">>=" expression, FOLLOW [236] -> GOTO 252
	expression/L4 = . expression "||" expression, FOLLOW [236] -> GOTO 252
	expression/L5 = . expression "&&" expression, FOLLOW [236] -> GOTO 252
	expression/L6 = . expression "|" expression, FOLLOW [236] -> GOTO 252
	expression/L7 = . expression "^" expression, FOLLOW [236] -> GOTO 252
	expression/L7 = . expression "&" expression, FOLLOW [236] -> GOTO 252
	expression/L8 = . expression "==" expression, FOLLOW [236] -> GOTO 252
	expression/L8 = expression "==" . expression, FOLLOW [236] -> GOTO 252
	expression/L8 = . expression "!=" expression, FOLLOW [236] -> GOTO 252
	expression/L8 = . expression "<=" expression, FOLLOW [236] -> GOTO 252
	expression/L8 = . expression "<" expression, FOLLOW [236] -> GOTO 252
	expression/L8 = . expression ">=" expression, FOLLOW [236] -> GOTO 252
	expression/L8 = . expression ">" expression, FOLLOW [236] -> GOTO 252
	expression/L9 = . expression "+" expression, FOLLOW [236] -> GOTO 252
	expression/L9 = . expression "-" expression, FOLLOW [236] -> GOTO 252
	expression/L10 = . expression "*" expression, FOLLOW [236] -> GOTO 252
	expression/L10 = . expression "/" expression, FOLLOW [236] -> GOTO 252
	expression/L10 = . expression "%" expression, FOLLOW [236] -> GOTO 252
	expression/L11 = . expression "<<" expression, FOLLOW [236] -> GOTO 252
	expression/L11 = . expression ">>" expression, FOLLOW [236] -> GOTO 252
	expression/L12 = . expression "." IDENT, FOLLOW [236] -> GOTO 252
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [236] -> GOTO 252
	expression/L13 = . expression "(" ")", FOLLOW [236] -> GOTO 252
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [236] -> GOTO 252
	iexpression = . expression indirection IDENT, FOLLOW [236] -> GOTO 252
	expression/L12 = . iexpression, FOLLOW [236] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [236] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [236] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [236] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [236] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [236] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [236] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [236] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [236] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [236] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [236] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [236] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [236] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [236] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [236] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [236] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [236] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [236] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [236] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [236] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [236] -> SHIFT "null" GOTO 92
[147]
	expression/L3 = . expression "=" expression, FOLLOW [236] -> GOTO 253
	expression/L3 = . expression "+=" expression, FOLLOW [236] -> GOTO 253
	expression/L3 = . expression "-=" expression, FOLLOW [236] -> GOTO 253
	expression/L3 = . expression "*=" expression, FOLLOW [236] -> GOTO 253
	expression/L3 = . expression "/=" expression, FOLLOW [236] -> GOTO 253
	expression/L3 = . expression "^=" expression, FOLLOW [236] -> GOTO 253
	expression/L3 = . expression "&=" expression, FOLLOW [236] -> GOTO 253
	expression/L3 = . expression "%=" expression, FOLLOW [236] -> GOTO 253
	expression/L3 = . expression "&&=" expression, FOLLOW [236] -> GOTO 253
	expression/L3 = . expression "||=" expression, FOLLOW [236] -> GOTO 253
	expression/L3 = . expression "&=" expression, FOLLOW [236] -> GOTO 253
	expression/L3 = . expression "|=" expression, FOLLOW [236] -> GOTO 253
	expression/L3 = . expression "<<=" expression, FOLLOW [236] -> GOTO 253
	expression/L3 = . expression ">>=" expression, FOLLOW [236] -> GOTO 253
	expression/L4 = . expression "||" expression, FOLLOW [236] -> GOTO 253
	expression/L5 = . expression "&&" expression, FOLLOW [236] -> GOTO 253
	expression/L6 = . expression "|" expression, FOLLOW [236] -> GOTO 253
	expression/L7 = . expression "^" expression, FOLLOW [236] -> GOTO 253
	expression/L7 = . expression "&" expression, FOLLOW [236] -> GOTO 253
	expression/L8 = . expression "==" expression, FOLLOW [236] -> GOTO 253
	expression/L8 = . expression "!=" expression, FOLLOW [236] -> GOTO 253
	expression/L8 = expression "!=" . expression, FOLLOW [236] -> GOTO 253
	expression/L8 = . expression "<=" expression, FOLLOW [236] -> GOTO 253
	expression/L8 = . expression "<" expression, FOLLOW [236] -> GOTO 253
	expression/L8 = . expression ">=" expression, FOLLOW [236] -> GOTO 253
	expression/L8 = . expression ">" expression, FOLLOW [236] -> GOTO 253
	expression/L9 = . expression "+" expression, FOLLOW [236] -> GOTO 253
	expression/L9 = . expression "-" expression, FOLLOW [236] -> GOTO 253
	expression/L10 = . expression "*" expression, FOLLOW [236] -> GOTO 253
	expression/L10 = . expression "/" expression, FOLLOW [236] -> GOTO 253
	expression/L10 = . expression "%" expression, FOLLOW [236] -> GOTO 253
	expression/L11 = . expression "<<" expression, FOLLOW [236] -> GOTO 253
	expression/L11 = . expression ">>" expression, FOLLOW [236] -> GOTO 253
	expression/L12 = . expression "." IDENT, FOLLOW [236] -> GOTO 253
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [236] -> GOTO 253
	expression/L13 = . expression "(" ")", FOLLOW [236] -> GOTO 253
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [236] -> GOTO 253
	iexpression = . expression indirection IDENT, FOLLOW [236] -> GOTO 253
	expression/L12 = . iexpression, FOLLOW [236] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [236] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [236] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [236] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [236] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [236] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [236] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [236] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [236] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [236] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [236] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [236] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [236] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [236] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [236] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [236] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [236] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [236] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [236] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [236] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [236] -> SHIFT "null" GOTO 92
[148]
	expression/L3 = . expression "=" expression, FOLLOW [236] -> GOTO 254
	expression/L3 = . expression "+=" expression, FOLLOW [236] -> GOTO 254
	expression/L3 = . expression "-=" expression, FOLLOW [236] -> GOTO 254
	expression/L3 = . expression "*=" expression, FOLLOW [236] -> GOTO 254
	expression/L3 = . expression "/=" expression, FOLLOW [236] -> GOTO 254
	expression/L3 = . expression "^=" expression, FOLLOW [236] -> GOTO 254
	expression/L3 = . expression "&=" expression, FOLLOW [236] -> GOTO 254
	expression/L3 = . expression "%=" expression, FOLLOW [236] -> GOTO 254
	expression/L3 = . expression "&&=" expression, FOLLOW [236] -> GOTO 254
	expression/L3 = . expression "||=" expression, FOLLOW [236] -> GOTO 254
	expression/L3 = . expression "&=" expression, FOLLOW [236] -> GOTO 254
	expression/L3 = . expression "|=" expression, FOLLOW [236] -> GOTO 254
	expression/L3 = . expression "<<=" expression, FOLLOW [236] -> GOTO 254
	expression/L3 = . expression ">>=" expression, FOLLOW [236] -> GOTO 254
	expression/L4 = . expression "||" expression, FOLLOW [236] -> GOTO 254
	expression/L5 = . expression "&&" expression, FOLLOW [236] -> GOTO 254
	expression/L6 = . expression "|" expression, FOLLOW [236] -> GOTO 254
	expression/L7 = . expression "^" expression, FOLLOW [236] -> GOTO 254
	expression/L7 = . expression "&" expression, FOLLOW [236] -> GOTO 254
	expression/L8 = . expression "==" expression, FOLLOW [236] -> GOTO 254
	expression/L8 = . expression "!=" expression, FOLLOW [236] -> GOTO 254
	expression/L8 = . expression "<=" expression, FOLLOW [236] -> GOTO 254
	expression/L8 = . expression "<" expression, FOLLOW [236] -> GOTO 254
	expression/L8 = . expression ">=" expression, FOLLOW [236] -> GOTO 254
	expression/L8 = expression ">=" . expression, FOLLOW [236] -> GOTO 254
	expression/L8 = . expression ">" expression, FOLLOW [236] -> GOTO 254
	expression/L9 = . expression "+" expression, FOLLOW [236] -> GOTO 254
	expression/L9 = . expression "-" expression, FOLLOW [236] -> GOTO 254
	expression/L10 = . expression "*" expression, FOLLOW [236] -> GOTO 254
	expression/L10 = . expression "/" expression, FOLLOW [236] -> GOTO 254
	expression/L10 = . expression "%" expression, FOLLOW [236] -> GOTO 254
	expression/L11 = . expression "<<" expression, FOLLOW [236] -> GOTO 254
	expression/L11 = . expression ">>" expression, FOLLOW [236] -> GOTO 254
	expression/L12 = . expression "." IDENT, FOLLOW [236] -> GOTO 254
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [236] -> GOTO 254
	expression/L13 = . expression "(" ")", FOLLOW [236] -> GOTO 254
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [236] -> GOTO 254
	iexpression = . expression indirection IDENT, FOLLOW [236] -> GOTO 254
	expression/L12 = . iexpression, FOLLOW [236] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [236] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [236] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [236] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [236] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [236] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [236] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [236] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [236] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [236] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [236] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [236] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [236] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [236] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [236] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [236] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [236] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [236] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [236] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [236] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [236] -> SHIFT "null" GOTO 92
[149]
	expression/L3 = . expression "=" expression, FOLLOW [236] -> GOTO 255
	expression/L3 = . expression "+=" expression, FOLLOW [236] -> GOTO 255
	expression/L3 = . expression "-=" expression, FOLLOW [236] -> GOTO 255
	expression/L3 = . expression "*=" expression, FOLLOW [236] -> GOTO 255
	expression/L3 = . expression "/=" expression, FOLLOW [236] -> GOTO 255
	expression/L3 = . expression "^=" expression, FOLLOW [236] -> GOTO 255
	expression/L3 = . expression "&=" expression, FOLLOW [236] -> GOTO 255
	expression/L3 = . expression "%=" expression, FOLLOW [236] -> GOTO 255
	expression/L3 = . expression "&&=" expression, FOLLOW [236] -> GOTO 255
	expression/L3 = . expression "||=" expression, FOLLOW [236] -> GOTO 255
	expression/L3 = . expression "&=" expression, FOLLOW [236] -> GOTO 255
	expression/L3 = . expression "|=" expression, FOLLOW [236] -> GOTO 255
	expression/L3 = . expression "<<=" expression, FOLLOW [236] -> GOTO 255
	expression/L3 = . expression ">>=" expression, FOLLOW [236] -> GOTO 255
	expression/L4 = . expression "||" expression, FOLLOW [236] -> GOTO 255
	expression/L5 = . expression "&&" expression, FOLLOW [236] -> GOTO 255
	expression/L6 = . expression "|" expression, FOLLOW [236] -> GOTO 255
	expression/L7 = . expression "^" expression, FOLLOW [236] -> GOTO 255
	expression/L7 = . expression "&" expression, FOLLOW [236] -> GOTO 255
	expression/L8 = . expression "==" expression, FOLLOW [236] -> GOTO 255
	expression/L8 = . expression "!=" expression, FOLLOW [236] -> GOTO 255
	expression/L8 = . expression "<=" expression, FOLLOW [236] -> GOTO 255
	expression/L8 = expression "<=" . expression, FOLLOW [236] -> GOTO 255
	expression/L8 = . expression "<" expression, FOLLOW [236] -> GOTO 255
	expression/L8 = . expression ">=" expression, FOLLOW [236] -> GOTO 255
	expression/L8 = . expression ">" expression, FOLLOW [236] -> GOTO 255
	expression/L9 = . expression "+" expression, FOLLOW [236] -> GOTO 255
	expression/L9 = . expression "-" expression, FOLLOW [236] -> GOTO 255
	expression/L10 = . expression "*" expression, FOLLOW [236] -> GOTO 255
	expression/L10 = . expression "/" expression, FOLLOW [236] -> GOTO 255
	expression/L10 = . expression "%" expression, FOLLOW [236] -> GOTO 255
	expression/L11 = . expression "<<" expression, FOLLOW [236] -> GOTO 255
	expression/L11 = . expression ">>" expression, FOLLOW [236] -> GOTO 255
	expression/L12 = . expression "." IDENT, FOLLOW [236] -> GOTO 255
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [236] -> GOTO 255
	expression/L13 = . expression "(" ")", FOLLOW [236] -> GOTO 255
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [236] -> GOTO 255
	iexpression = . expression indirection IDENT, FOLLOW [236] -> GOTO 255
	expression/L12 = . iexpression, FOLLOW [236] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [236] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [236] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [236] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [236] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [236] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [236] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [236] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [236] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [236] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [236] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [236] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [236] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [236] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [236] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [236] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [236] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [236] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [236] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [236] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [236] -> SHIFT "null" GOTO 92
[150]
	expression/L3 = . expression "=" expression, FOLLOW [236] -> GOTO 256
	expression/L3 = . expression "+=" expression, FOLLOW [236] -> GOTO 256
	expression/L3 = . expression "-=" expression, FOLLOW [236] -> GOTO 256
	expression/L3 = . expression "*=" expression, FOLLOW [236] -> GOTO 256
	expression/L3 = . expression "/=" expression, FOLLOW [236] -> GOTO 256
	expression/L3 = . expression "^=" expression, FOLLOW [236] -> GOTO 256
	expression/L3 = . expression "&=" expression, FOLLOW [236] -> GOTO 256
	expression/L3 = . expression "%=" expression, FOLLOW [236] -> GOTO 256
	expression/L3 = . expression "&&=" expression, FOLLOW [236] -> GOTO 256
	expression/L3 = . expression "||=" expression, FOLLOW [236] -> GOTO 256
	expression/L3 = . expression "&=" expression, FOLLOW [236] -> GOTO 256
	expression/L3 = . expression "|=" expression, FOLLOW [236] -> GOTO 256
	expression/L3 = . expression "<<=" expression, FOLLOW [236] -> GOTO 256
	expression/L3 = . expression ">>=" expression, FOLLOW [236] -> GOTO 256
	expression/L4 = . expression "||" expression, FOLLOW [236] -> GOTO 256
	expression/L5 = . expression "&&" expression, FOLLOW [236] -> GOTO 256
	expression/L6 = . expression "|" expression, FOLLOW [236] -> GOTO 256
	expression/L7 = . expression "^" expression, FOLLOW [236] -> GOTO 256
	expression/L7 = . expression "&" expression, FOLLOW [236] -> GOTO 256
	expression/L8 = . expression "==" expression, FOLLOW [236] -> GOTO 256
	expression/L8 = . expression "!=" expression, FOLLOW [236] -> GOTO 256
	expression/L8 = . expression "<=" expression, FOLLOW [236] -> GOTO 256
	expression/L8 = . expression "<" expression, FOLLOW [236] -> GOTO 256
	expression/L8 = . expression ">=" expression, FOLLOW [236] -> GOTO 256
	expression/L8 = . expression ">" expression, FOLLOW [236] -> GOTO 256
	expression/L8 = expression ">" . expression, FOLLOW [236] -> GOTO 256
	expression/L9 = . expression "+" expression, FOLLOW [236] -> GOTO 256
	expression/L9 = . expression "-" expression, FOLLOW [236] -> GOTO 256
	expression/L10 = . expression "*" expression, FOLLOW [236] -> GOTO 256
	expression/L10 = . expression "/" expression, FOLLOW [236] -> GOTO 256
	expression/L10 = . expression "%" expression, FOLLOW [236] -> GOTO 256
	expression/L11 = . expression "<<" expression, FOLLOW [236] -> GOTO 256
	expression/L11 = . expression ">>" expression, FOLLOW [236] -> GOTO 256
	expression/L12 = . expression "." IDENT, FOLLOW [236] -> GOTO 256
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [236] -> GOTO 256
	expression/L13 = . expression "(" ")", FOLLOW [236] -> GOTO 256
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [236] -> GOTO 256
	iexpression = . expression indirection IDENT, FOLLOW [236] -> GOTO 256
	expression/L12 = . iexpression, FOLLOW [236] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [236] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [236] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [236] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [236] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [236] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [236] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [236] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [236] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [236] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [236] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [236] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [236] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [236] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [236] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [236] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [236] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [236] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [236] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [236] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [236] -> SHIFT "null" GOTO 92
[151]
	expression/L3 = . expression "=" expression, FOLLOW [236] -> GOTO 257
	expression/L3 = . expression "+=" expression, FOLLOW [236] -> GOTO 257
	expression/L3 = . expression "-=" expression, FOLLOW [236] -> GOTO 257
	expression/L3 = . expression "*=" expression, FOLLOW [236] -> GOTO 257
	expression/L3 = . expression "/=" expression, FOLLOW [236] -> GOTO 257
	expression/L3 = . expression "^=" expression, FOLLOW [236] -> GOTO 257
	expression/L3 = . expression "&=" expression, FOLLOW [236] -> GOTO 257
	expression/L3 = . expression "%=" expression, FOLLOW [236] -> GOTO 257
	expression/L3 = . expression "&&=" expression, FOLLOW [236] -> GOTO 257
	expression/L3 = . expression "||=" expression, FOLLOW [236] -> GOTO 257
	expression/L3 = . expression "&=" expression, FOLLOW [236] -> GOTO 257
	expression/L3 = . expression "|=" expression, FOLLOW [236] -> GOTO 257
	expression/L3 = . expression "<<=" expression, FOLLOW [236] -> GOTO 257
	expression/L3 = . expression ">>=" expression, FOLLOW [236] -> GOTO 257
	expression/L4 = . expression "||" expression, FOLLOW [236] -> GOTO 257
	expression/L5 = . expression "&&" expression, FOLLOW [236] -> GOTO 257
	expression/L6 = . expression "|" expression, FOLLOW [236] -> GOTO 257
	expression/L7 = . expression "^" expression, FOLLOW [236] -> GOTO 257
	expression/L7 = . expression "&" expression, FOLLOW [236] -> GOTO 257
	expression/L8 = . expression "==" expression, FOLLOW [236] -> GOTO 257
	expression/L8 = . expression "!=" expression, FOLLOW [236] -> GOTO 257
	expression/L8 = . expression "<=" expression, FOLLOW [236] -> GOTO 257
	expression/L8 = . expression "<" expression, FOLLOW [236] -> GOTO 257
	expression/L8 = expression "<" . expression, FOLLOW [236] -> GOTO 257
	expression/L8 = . expression ">=" expression, FOLLOW [236] -> GOTO 257
	expression/L8 = . expression ">" expression, FOLLOW [236] -> GOTO 257
	expression/L9 = . expression "+" expression, FOLLOW [236] -> GOTO 257
	expression/L9 = . expression "-" expression, FOLLOW [236] -> GOTO 257
	expression/L10 = . expression "*" expression, FOLLOW [236] -> GOTO 257
	expression/L10 = . expression "/" expression, FOLLOW [236] -> GOTO 257
	expression/L10 = . expression "%" expression, FOLLOW [236] -> GOTO 257
	expression/L11 = . expression "<<" expression, FOLLOW [236] -> GOTO 257
	expression/L11 = . expression ">>" expression, FOLLOW [236] -> GOTO 257
	expression/L12 = . expression "." IDENT, FOLLOW [236] -> GOTO 257
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [236] -> GOTO 257
	expression/L13 = . expression "(" ")", FOLLOW [236] -> GOTO 257
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [236] -> GOTO 257
	iexpression = . expression indirection IDENT, FOLLOW [236] -> GOTO 257
	expression/L12 = . iexpression, FOLLOW [236] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [236] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [236] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [236] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [236] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [236] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [236] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [236] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [236] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [236] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [236] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [236] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [236] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [236] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [236] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [236] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [236] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [236] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [236] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [236] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [236] -> SHIFT "null" GOTO 92
[152]
	expression/L3 = . expression "=" expression, FOLLOW [236] -> GOTO 258
	expression/L3 = . expression "+=" expression, FOLLOW [236] -> GOTO 258
	expression/L3 = expression "+=" . expression, FOLLOW [236] -> GOTO 258
	expression/L3 = . expression "-=" expression, FOLLOW [236] -> GOTO 258
	expression/L3 = . expression "*=" expression, FOLLOW [236] -> GOTO 258
	expression/L3 = . expression "/=" expression, FOLLOW [236] -> GOTO 258
	expression/L3 = . expression "^=" expression, FOLLOW [236] -> GOTO 258
	expression/L3 = . expression "&=" expression, FOLLOW [236] -> GOTO 258
	expression/L3 = . expression "%=" expression, FOLLOW [236] -> GOTO 258
	expression/L3 = . expression "&&=" expression, FOLLOW [236] -> GOTO 258
	expression/L3 = . expression "||=" expression, FOLLOW [236] -> GOTO 258
	expression/L3 = . expression "&=" expression, FOLLOW [236] -> GOTO 258
	expression/L3 = . expression "|=" expression, FOLLOW [236] -> GOTO 258
	expression/L3 = . expression "<<=" expression, FOLLOW [236] -> GOTO 258
	expression/L3 = . expression ">>=" expression, FOLLOW [236] -> GOTO 258
	expression/L4 = . expression "||" expression, FOLLOW [236] -> GOTO 258
	expression/L5 = . expression "&&" expression, FOLLOW [236] -> GOTO 258
	expression/L6 = . expression "|" expression, FOLLOW [236] -> GOTO 258
	expression/L7 = . expression "^" expression, FOLLOW [236] -> GOTO 258
	expression/L7 = . expression "&" expression, FOLLOW [236] -> GOTO 258
	expression/L8 = . expression "==" expression, FOLLOW [236] -> GOTO 258
	expression/L8 = . expression "!=" expression, FOLLOW [236] -> GOTO 258
	expression/L8 = . expression "<=" expression, FOLLOW [236] -> GOTO 258
	expression/L8 = . expression "<" expression, FOLLOW [236] -> GOTO 258
	expression/L8 = . expression ">=" expression, FOLLOW [236] -> GOTO 258
	expression/L8 = . expression ">" expression, FOLLOW [236] -> GOTO 258
	expression/L9 = . expression "+" expression, FOLLOW [236] -> GOTO 258
	expression/L9 = . expression "-" expression, FOLLOW [236] -> GOTO 258
	expression/L10 = . expression "*" expression, FOLLOW [236] -> GOTO 258
	expression/L10 = . expression "/" expression, FOLLOW [236] -> GOTO 258
	expression/L10 = . expression "%" expression, FOLLOW [236] -> GOTO 258
	expression/L11 = . expression "<<" expression, FOLLOW [236] -> GOTO 258
	expression/L11 = . expression ">>" expression, FOLLOW [236] -> GOTO 258
	expression/L12 = . expression "." IDENT, FOLLOW [236] -> GOTO 258
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [236] -> GOTO 258
	expression/L13 = . expression "(" ")", FOLLOW [236] -> GOTO 258
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [236] -> GOTO 258
	iexpression = . expression indirection IDENT, FOLLOW [236] -> GOTO 258
	expression/L12 = . iexpression, FOLLOW [236] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [236] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [236] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [236] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [236] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [236] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [236] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [236] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [236] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [236] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [236] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [236] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [236] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [236] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [236] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [236] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [236] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [236] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [236] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [236] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [236] -> SHIFT "null" GOTO 92
[153]
	expression/L3 = . expression "=" expression, FOLLOW [236] -> GOTO 259
	expression/L3 = . expression "+=" expression, FOLLOW [236] -> GOTO 259
	expression/L3 = . expression "-=" expression, FOLLOW [236] -> GOTO 259
	expression/L3 = expression "-=" . expression, FOLLOW [236] -> GOTO 259
	expression/L3 = . expression "*=" expression, FOLLOW [236] -> GOTO 259
	expression/L3 = . expression "/=" expression, FOLLOW [236] -> GOTO 259
	expression/L3 = . expression "^=" expression, FOLLOW [236] -> GOTO 259
	expression/L3 = . expression "&=" expression, FOLLOW [236] -> GOTO 259
	expression/L3 = . expression "%=" expression, FOLLOW [236] -> GOTO 259
	expression/L3 = . expression "&&=" expression, FOLLOW [236] -> GOTO 259
	expression/L3 = . expression "||=" expression, FOLLOW [236] -> GOTO 259
	expression/L3 = . expression "&=" expression, FOLLOW [236] -> GOTO 259
	expression/L3 = . expression "|=" expression, FOLLOW [236] -> GOTO 259
	expression/L3 = . expression "<<=" expression, FOLLOW [236] -> GOTO 259
	expression/L3 = . expression ">>=" expression, FOLLOW [236] -> GOTO 259
	expression/L4 = . expression "||" expression, FOLLOW [236] -> GOTO 259
	expression/L5 = . expression "&&" expression, FOLLOW [236] -> GOTO 259
	expression/L6 = . expression "|" expression, FOLLOW [236] -> GOTO 259
	expression/L7 = . expression "^" expression, FOLLOW [236] -> GOTO 259
	expression/L7 = . expression "&" expression, FOLLOW [236] -> GOTO 259
	expression/L8 = . expression "==" expression, FOLLOW [236] -> GOTO 259
	expression/L8 = . expression "!=" expression, FOLLOW [236] -> GOTO 259
	expression/L8 = . expression "<=" expression, FOLLOW [236] -> GOTO 259
	expression/L8 = . expression "<" expression, FOLLOW [236] -> GOTO 259
	expression/L8 = . expression ">=" expression, FOLLOW [236] -> GOTO 259
	expression/L8 = . expression ">" expression, FOLLOW [236] -> GOTO 259
	expression/L9 = . expression "+" expression, FOLLOW [236] -> GOTO 259
	expression/L9 = . expression "-" expression, FOLLOW [236] -> GOTO 259
	expression/L10 = . expression "*" expression, FOLLOW [236] -> GOTO 259
	expression/L10 = . expression "/" expression, FOLLOW [236] -> GOTO 259
	expression/L10 = . expression "%" expression, FOLLOW [236] -> GOTO 259
	expression/L11 = . expression "<<" expression, FOLLOW [236] -> GOTO 259
	expression/L11 = . expression ">>" expression, FOLLOW [236] -> GOTO 259
	expression/L12 = . expression "." IDENT, FOLLOW [236] -> GOTO 259
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [236] -> GOTO 259
	expression/L13 = . expression "(" ")", FOLLOW [236] -> GOTO 259
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [236] -> GOTO 259
	iexpression = . expression indirection IDENT, FOLLOW [236] -> GOTO 259
	expression/L12 = . iexpression, FOLLOW [236] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [236] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [236] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [236] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [236] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [236] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [236] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [236] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [236] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [236] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [236] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [236] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [236] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [236] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [236] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [236] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [236] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [236] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [236] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [236] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [236] -> SHIFT "null" GOTO 92
[154]
	expression/L3 = . expression "=" expression, FOLLOW [236] -> GOTO 260
	expression/L3 = . expression "+=" expression, FOLLOW [236] -> GOTO 260
	expression/L3 = . expression "-=" expression, FOLLOW [236] -> GOTO 260
	expression/L3 = . expression "*=" expression, FOLLOW [236] -> GOTO 260
	expression/L3 = expression "*=" . expression, FOLLOW [236] -> GOTO 260
	expression/L3 = . expression "/=" expression, FOLLOW [236] -> GOTO 260
	expression/L3 = . expression "^=" expression, FOLLOW [236] -> GOTO 260
	expression/L3 = . expression "&=" expression, FOLLOW [236] -> GOTO 260
	expression/L3 = . expression "%=" expression, FOLLOW [236] -> GOTO 260
	expression/L3 = . expression "&&=" expression, FOLLOW [236] -> GOTO 260
	expression/L3 = . expression "||=" expression, FOLLOW [236] -> GOTO 260
	expression/L3 = . expression "&=" expression, FOLLOW [236] -> GOTO 260
	expression/L3 = . expression "|=" expression, FOLLOW [236] -> GOTO 260
	expression/L3 = . expression "<<=" expression, FOLLOW [236] -> GOTO 260
	expression/L3 = . expression ">>=" expression, FOLLOW [236] -> GOTO 260
	expression/L4 = . expression "||" expression, FOLLOW [236] -> GOTO 260
	expression/L5 = . expression "&&" expression, FOLLOW [236] -> GOTO 260
	expression/L6 = . expression "|" expression, FOLLOW [236] -> GOTO 260
	expression/L7 = . expression "^" expression, FOLLOW [236] -> GOTO 260
	expression/L7 = . expression "&" expression, FOLLOW [236] -> GOTO 260
	expression/L8 = . expression "==" expression, FOLLOW [236] -> GOTO 260
	expression/L8 = . expression "!=" expression, FOLLOW [236] -> GOTO 260
	expression/L8 = . expression "<=" expression, FOLLOW [236] -> GOTO 260
	expression/L8 = . expression "<" expression, FOLLOW [236] -> GOTO 260
	expression/L8 = . expression ">=" expression, FOLLOW [236] -> GOTO 260
	expression/L8 = . expression ">" expression, FOLLOW [236] -> GOTO 260
	expression/L9 = . expression "+" expression, FOLLOW [236] -> GOTO 260
	expression/L9 = . expression "-" expression, FOLLOW [236] -> GOTO 260
	expression/L10 = . expression "*" expression, FOLLOW [236] -> GOTO 260
	expression/L10 = . expression "/" expression, FOLLOW [236] -> GOTO 260
	expression/L10 = . expression "%" expression, FOLLOW [236] -> GOTO 260
	expression/L11 = . expression "<<" expression, FOLLOW [236] -> GOTO 260
	expression/L11 = . expression ">>" expression, FOLLOW [236] -> GOTO 260
	expression/L12 = . expression "." IDENT, FOLLOW [236] -> GOTO 260
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [236] -> GOTO 260
	expression/L13 = . expression "(" ")", FOLLOW [236] -> GOTO 260
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [236] -> GOTO 260
	iexpression = . expression indirection IDENT, FOLLOW [236] -> GOTO 260
	expression/L12 = . iexpression, FOLLOW [236] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [236] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [236] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [236] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [236] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [236] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [236] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [236] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [236] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [236] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [236] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [236] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [236] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [236] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [236] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [236] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [236] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [236] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [236] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [236] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [236] -> SHIFT "null" GOTO 92
[155]
	expression/L3 = . expression "=" expression, FOLLOW [236] -> GOTO 261
	expression/L3 = . expression "+=" expression, FOLLOW [236] -> GOTO 261
	expression/L3 = . expression "-=" expression, FOLLOW [236] -> GOTO 261
	expression/L3 = . expression "*=" expression, FOLLOW [236] -> GOTO 261
	expression/L3 = . expression "/=" expression, FOLLOW [236] -> GOTO 261
	expression/L3 = expression "/=" . expression, FOLLOW [236] -> GOTO 261
	expression/L3 = . expression "^=" expression, FOLLOW [236] -> GOTO 261
	expression/L3 = . expression "&=" expression, FOLLOW [236] -> GOTO 261
	expression/L3 = . expression "%=" expression, FOLLOW [236] -> GOTO 261
	expression/L3 = . expression "&&=" expression, FOLLOW [236] -> GOTO 261
	expression/L3 = . expression "||=" expression, FOLLOW [236] -> GOTO 261
	expression/L3 = . expression "&=" expression, FOLLOW [236] -> GOTO 261
	expression/L3 = . expression "|=" expression, FOLLOW [236] -> GOTO 261
	expression/L3 = . expression "<<=" expression, FOLLOW [236] -> GOTO 261
	expression/L3 = . expression ">>=" expression, FOLLOW [236] -> GOTO 261
	expression/L4 = . expression "||" expression, FOLLOW [236] -> GOTO 261
	expression/L5 = . expression "&&" expression, FOLLOW [236] -> GOTO 261
	expression/L6 = . expression "|" expression, FOLLOW [236] -> GOTO 261
	expression/L7 = . expression "^" expression, FOLLOW [236] -> GOTO 261
	expression/L7 = . expression "&" expression, FOLLOW [236] -> GOTO 261
	expression/L8 = . expression "==" expression, FOLLOW [236] -> GOTO 261
	expression/L8 = . expression "!=" expression, FOLLOW [236] -> GOTO 261
	expression/L8 = . expression "<=" expression, FOLLOW [236] -> GOTO 261
	expression/L8 = . expression "<" expression, FOLLOW [236] -> GOTO 261
	expression/L8 = . expression ">=" expression, FOLLOW [236] -> GOTO 261
	expression/L8 = . expression ">" expression, FOLLOW [236] -> GOTO 261
	expression/L9 = . expression "+" expression, FOLLOW [236] -> GOTO 261
	expression/L9 = . expression "-" expression, FOLLOW [236] -> GOTO 261
	expression/L10 = . expression "*" expression, FOLLOW [236] -> GOTO 261
	expression/L10 = . expression "/" expression, FOLLOW [236] -> GOTO 261
	expression/L10 = . expression "%" expression, FOLLOW [236] -> GOTO 261
	expression/L11 = . expression "<<" expression, FOLLOW [236] -> GOTO 261
	expression/L11 = . expression ">>" expression, FOLLOW [236] -> GOTO 261
	expression/L12 = . expression "." IDENT, FOLLOW [236] -> GOTO 261
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [236] -> GOTO 261
	expression/L13 = . expression "(" ")", FOLLOW [236] -> GOTO 261
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [236] -> GOTO 261
	iexpression = . expression indirection IDENT, FOLLOW [236] -> GOTO 261
	expression/L12 = . iexpression, FOLLOW [236] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [236] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [236] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [236] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [236] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [236] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [236] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [236] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [236] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [236] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [236] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [236] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [236] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [236] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [236] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [236] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [236] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [236] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [236] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [236] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [236] -> SHIFT "null" GOTO 92
[156]
	expression/L3 = . expression "=" expression, FOLLOW [236] -> GOTO 262
	expression/L3 = . expression "+=" expression, FOLLOW [236] -> GOTO 262
	expression/L3 = . expression "-=" expression, FOLLOW [236] -> GOTO 262
	expression/L3 = . expression "*=" expression, FOLLOW [236] -> GOTO 262
	expression/L3 = . expression "/=" expression, FOLLOW [236] -> GOTO 262
	expression/L3 = . expression "^=" expression, FOLLOW [236] -> GOTO 262
	expression/L3 = expression "^=" . expression, FOLLOW [236] -> GOTO 262
	expression/L3 = . expression "&=" expression, FOLLOW [236] -> GOTO 262
	expression/L3 = . expression "%=" expression, FOLLOW [236] -> GOTO 262
	expression/L3 = . expression "&&=" expression, FOLLOW [236] -> GOTO 262
	expression/L3 = . expression "||=" expression, FOLLOW [236] -> GOTO 262
	expression/L3 = . expression "&=" expression, FOLLOW [236] -> GOTO 262
	expression/L3 = . expression "|=" expression, FOLLOW [236] -> GOTO 262
	expression/L3 = . expression "<<=" expression, FOLLOW [236] -> GOTO 262
	expression/L3 = . expression ">>=" expression, FOLLOW [236] -> GOTO 262
	expression/L4 = . expression "||" expression, FOLLOW [236] -> GOTO 262
	expression/L5 = . expression "&&" expression, FOLLOW [236] -> GOTO 262
	expression/L6 = . expression "|" expression, FOLLOW [236] -> GOTO 262
	expression/L7 = . expression "^" expression, FOLLOW [236] -> GOTO 262
	expression/L7 = . expression "&" expression, FOLLOW [236] -> GOTO 262
	expression/L8 = . expression "==" expression, FOLLOW [236] -> GOTO 262
	expression/L8 = . expression "!=" expression, FOLLOW [236] -> GOTO 262
	expression/L8 = . expression "<=" expression, FOLLOW [236] -> GOTO 262
	expression/L8 = . expression "<" expression, FOLLOW [236] -> GOTO 262
	expression/L8 = . expression ">=" expression, FOLLOW [236] -> GOTO 262
	expression/L8 = . expression ">" expression, FOLLOW [236] -> GOTO 262
	expression/L9 = . expression "+" expression, FOLLOW [236] -> GOTO 262
	expression/L9 = . expression "-" expression, FOLLOW [236] -> GOTO 262
	expression/L10 = . expression "*" expression, FOLLOW [236] -> GOTO 262
	expression/L10 = . expression "/" expression, FOLLOW [236] -> GOTO 262
	expression/L10 = . expression "%" expression, FOLLOW [236] -> GOTO 262
	expression/L11 = . expression "<<" expression, FOLLOW [236] -> GOTO 262
	expression/L11 = . expression ">>" expression, FOLLOW [236] -> GOTO 262
	expression/L12 = . expression "." IDENT, FOLLOW [236] -> GOTO 262
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [236] -> GOTO 262
	expression/L13 = . expression "(" ")", FOLLOW [236] -> GOTO 262
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [236] -> GOTO 262
	iexpression = . expression indirection IDENT, FOLLOW [236] -> GOTO 262
	expression/L12 = . iexpression, FOLLOW [236] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [236] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [236] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [236] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [236] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [236] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [236] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [236] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [236] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [236] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [236] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [236] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [236] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [236] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [236] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [236] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [236] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [236] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [236] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [236] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [236] -> SHIFT "null" GOTO 92
[157]
	expression/L3 = . expression "=" expression, FOLLOW [236] -> GOTO 263
	expression/L3 = . expression "+=" expression, FOLLOW [236] -> GOTO 263
	expression/L3 = . expression "-=" expression, FOLLOW [236] -> GOTO 263
	expression/L3 = . expression "*=" expression, FOLLOW [236] -> GOTO 263
	expression/L3 = . expression "/=" expression, FOLLOW [236] -> GOTO 263
	expression/L3 = . expression "^=" expression, FOLLOW [236] -> GOTO 263
	expression/L3 = . expression "&=" expression, FOLLOW [236] -> GOTO 263
	expression/L3 = expression "&=" . expression, FOLLOW [236] -> GOTO 263
	expression/L3 = . expression "%=" expression, FOLLOW [236] -> GOTO 263
	expression/L3 = . expression "&&=" expression, FOLLOW [236] -> GOTO 263
	expression/L3 = . expression "||=" expression, FOLLOW [236] -> GOTO 263
	expression/L3 = . expression "&=" expression, FOLLOW [236] -> GOTO 263
	expression/L3 = expression "&=" . expression, FOLLOW [236] -> GOTO 263
	expression/L3 = . expression "|=" expression, FOLLOW [236] -> GOTO 263
	expression/L3 = . expression "<<=" expression, FOLLOW [236] -> GOTO 263
	expression/L3 = . expression ">>=" expression, FOLLOW [236] -> GOTO 263
	expression/L4 = . expression "||" expression, FOLLOW [236] -> GOTO 263
	expression/L5 = . expression "&&" expression, FOLLOW [236] -> GOTO 263
	expression/L6 = . expression "|" expression, FOLLOW [236] -> GOTO 263
	expression/L7 = . expression "^" expression, FOLLOW [236] -> GOTO 263
	expression/L7 = . expression "&" expression, FOLLOW [236] -> GOTO 263
	expression/L8 = . expression "==" expression, FOLLOW [236] -> GOTO 263
	expression/L8 = . expression "!=" expression, FOLLOW [236] -> GOTO 263
	expression/L8 = . expression "<=" expression, FOLLOW [236] -> GOTO 263
	expression/L8 = . expression "<" expression, FOLLOW [236] -> GOTO 263
	expression/L8 = . expression ">=" expression, FOLLOW [236] -> GOTO 263
	expression/L8 = . expression ">" expression, FOLLOW [236] -> GOTO 263
	expression/L9 = . expression "+" expression, FOLLOW [236] -> GOTO 263
	expression/L9 = . expression "-" expression, FOLLOW [236] -> GOTO 263
	expression/L10 = . expression "*" expression, FOLLOW [236] -> GOTO 263
	expression/L10 = . expression "/" expression, FOLLOW [236] -> GOTO 263
	expression/L10 = . expression "%" expression, FOLLOW [236] -> GOTO 263
	expression/L11 = . expression "<<" expression, FOLLOW [236] -> GOTO 263
	expression/L11 = . expression ">>" expression, FOLLOW [236] -> GOTO 263
	expression/L12 = . expression "." IDENT, FOLLOW [236] -> GOTO 263
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [236] -> GOTO 263
	expression/L13 = . expression "(" ")", FOLLOW [236] -> GOTO 263
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [236] -> GOTO 263
	iexpression = . expression indirection IDENT, FOLLOW [236] -> GOTO 263
	expression/L12 = . iexpression, FOLLOW [236] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [236] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [236] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [236] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [236] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [236] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [236] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [236] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [236] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [236] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [236] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [236] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [236] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [236] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [236] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [236] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [236] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [236] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [236] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [236] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [236] -> SHIFT "null" GOTO 92
[158]
	expression/L3 = . expression "=" expression, FOLLOW [236] -> GOTO 264
	expression/L3 = . expression "+=" expression, FOLLOW [236] -> GOTO 264
	expression/L3 = . expression "-=" expression, FOLLOW [236] -> GOTO 264
	expression/L3 = . expression "*=" expression, FOLLOW [236] -> GOTO 264
	expression/L3 = . expression "/=" expression, FOLLOW [236] -> GOTO 264
	expression/L3 = . expression "^=" expression, FOLLOW [236] -> GOTO 264
	expression/L3 = . expression "&=" expression, FOLLOW [236] -> GOTO 264
	expression/L3 = . expression "%=" expression, FOLLOW [236] -> GOTO 264
	expression/L3 = expression "%=" . expression, FOLLOW [236] -> GOTO 264
	expression/L3 = . expression "&&=" expression, FOLLOW [236] -> GOTO 264
	expression/L3 = . expression "||=" expression, FOLLOW [236] -> GOTO 264
	expression/L3 = . expression "&=" expression, FOLLOW [236] -> GOTO 264
	expression/L3 = . expression "|=" expression, FOLLOW [236] -> GOTO 264
	expression/L3 = . expression "<<=" expression, FOLLOW [236] -> GOTO 264
	expression/L3 = . expression ">>=" expression, FOLLOW [236] -> GOTO 264
	expression/L4 = . expression "||" expression, FOLLOW [236] -> GOTO 264
	expression/L5 = . expression "&&" expression, FOLLOW [236] -> GOTO 264
	expression/L6 = . expression "|" expression, FOLLOW [236] -> GOTO 264
	expression/L7 = . expression "^" expression, FOLLOW [236] -> GOTO 264
	expression/L7 = . expression "&" expression, FOLLOW [236] -> GOTO 264
	expression/L8 = . expression "==" expression, FOLLOW [236] -> GOTO 264
	expression/L8 = . expression "!=" expression, FOLLOW [236] -> GOTO 264
	expression/L8 = . expression "<=" expression, FOLLOW [236] -> GOTO 264
	expression/L8 = . expression "<" expression, FOLLOW [236] -> GOTO 264
	expression/L8 = . expression ">=" expression, FOLLOW [236] -> GOTO 264
	expression/L8 = . expression ">" expression, FOLLOW [236] -> GOTO 264
	expression/L9 = . expression "+" expression, FOLLOW [236] -> GOTO 264
	expression/L9 = . expression "-" expression, FOLLOW [236] -> GOTO 264
	expression/L10 = . expression "*" expression, FOLLOW [236] -> GOTO 264
	expression/L10 = . expression "/" expression, FOLLOW [236] -> GOTO 264
	expression/L10 = . expression "%" expression, FOLLOW [236] -> GOTO 264
	expression/L11 = . expression "<<" expression, FOLLOW [236] -> GOTO 264
	expression/L11 = . expression ">>" expression, FOLLOW [236] -> GOTO 264
	expression/L12 = . expression "." IDENT, FOLLOW [236] -> GOTO 264
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [236] -> GOTO 264
	expression/L13 = . expression "(" ")", FOLLOW [236] -> GOTO 264
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [236] -> GOTO 264
	iexpression = . expression indirection IDENT, FOLLOW [236] -> GOTO 264
	expression/L12 = . iexpression, FOLLOW [236] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [236] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [236] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [236] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [236] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [236] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [236] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [236] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [236] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [236] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [236] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [236] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [236] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [236] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [236] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [236] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [236] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [236] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [236] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [236] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [236] -> SHIFT "null" GOTO 92
[159]
	expression/L3 = . expression "=" expression, FOLLOW [236] -> GOTO 265
	expression/L3 = . expression "+=" expression, FOLLOW [236] -> GOTO 265
	expression/L3 = . expression "-=" expression, FOLLOW [236] -> GOTO 265
	expression/L3 = . expression "*=" expression, FOLLOW [236] -> GOTO 265
	expression/L3 = . expression "/=" expression, FOLLOW [236] -> GOTO 265
	expression/L3 = . expression "^=" expression, FOLLOW [236] -> GOTO 265
	expression/L3 = . expression "&=" expression, FOLLOW [236] -> GOTO 265
	expression/L3 = . expression "%=" expression, FOLLOW [236] -> GOTO 265
	expression/L3 = . expression "&&=" expression, FOLLOW [236] -> GOTO 265
	expression/L3 = expression "&&=" . expression, FOLLOW [236] -> GOTO 265
	expression/L3 = . expression "||=" expression, FOLLOW [236] -> GOTO 265
	expression/L3 = . expression "&=" expression, FOLLOW [236] -> GOTO 265
	expression/L3 = . expression "|=" expression, FOLLOW [236] -> GOTO 265
	expression/L3 = . expression "<<=" expression, FOLLOW [236] -> GOTO 265
	expression/L3 = . expression ">>=" expression, FOLLOW [236] -> GOTO 265
	expression/L4 = . expression "||" expression, FOLLOW [236] -> GOTO 265
	expression/L5 = . expression "&&" expression, FOLLOW [236] -> GOTO 265
	expression/L6 = . expression "|" expression, FOLLOW [236] -> GOTO 265
	expression/L7 = . expression "^" expression, FOLLOW [236] -> GOTO 265
	expression/L7 = . expression "&" expression, FOLLOW [236] -> GOTO 265
	expression/L8 = . expression "==" expression, FOLLOW [236] -> GOTO 265
	expression/L8 = . expression "!=" expression, FOLLOW [236] -> GOTO 265
	expression/L8 = . expression "<=" expression, FOLLOW [236] -> GOTO 265
	expression/L8 = . expression "<" expression, FOLLOW [236] -> GOTO 265
	expression/L8 = . expression ">=" expression, FOLLOW [236] -> GOTO 265
	expression/L8 = . expression ">" expression, FOLLOW [236] -> GOTO 265
	expression/L9 = . expression "+" expression, FOLLOW [236] -> GOTO 265
	expression/L9 = . expression "-" expression, FOLLOW [236] -> GOTO 265
	expression/L10 = . expression "*" expression, FOLLOW [236] -> GOTO 265
	expression/L10 = . expression "/" expression, FOLLOW [236] -> GOTO 265
	expression/L10 = . expression "%" expression, FOLLOW [236] -> GOTO 265
	expression/L11 = . expression "<<" expression, FOLLOW [236] -> GOTO 265
	expression/L11 = . expression ">>" expression, FOLLOW [236] -> GOTO 265
	expression/L12 = . expression "." IDENT, FOLLOW [236] -> GOTO 265
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [236] -> GOTO 265
	expression/L13 = . expression "(" ")", FOLLOW [236] -> GOTO 265
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [236] -> GOTO 265
	iexpression = . expression indirection IDENT, FOLLOW [236] -> GOTO 265
	expression/L12 = . iexpression, FOLLOW [236] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [236] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [236] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [236] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [236] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [236] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [236] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [236] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [236] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [236] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [236] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [236] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [236] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [236] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [236] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [236] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [236] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [236] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [236] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [236] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [236] -> SHIFT "null" GOTO 92
[160]
	expression/L3 = . expression "=" expression, FOLLOW [236] -> GOTO 266
	expression/L3 = . expression "+=" expression, FOLLOW [236] -> GOTO 266
	expression/L3 = . expression "-=" expression, FOLLOW [236] -> GOTO 266
	expression/L3 = . expression "*=" expression, FOLLOW [236] -> GOTO 266
	expression/L3 = . expression "/=" expression, FOLLOW [236] -> GOTO 266
	expression/L3 = . expression "^=" expression, FOLLOW [236] -> GOTO 266
	expression/L3 = . expression "&=" expression, FOLLOW [236] -> GOTO 266
	expression/L3 = . expression "%=" expression, FOLLOW [236] -> GOTO 266
	expression/L3 = . expression "&&=" expression, FOLLOW [236] -> GOTO 266
	expression/L3 = . expression "||=" expression, FOLLOW [236] -> GOTO 266
	expression/L3 = expression "||=" . expression, FOLLOW [236] -> GOTO 266
	expression/L3 = . expression "&=" expression, FOLLOW [236] -> GOTO 266
	expression/L3 = . expression "|=" expression, FOLLOW [236] -> GOTO 266
	expression/L3 = . expression "<<=" expression, FOLLOW [236] -> GOTO 266
	expression/L3 = . expression ">>=" expression, FOLLOW [236] -> GOTO 266
	expression/L4 = . expression "||" expression, FOLLOW [236] -> GOTO 266
	expression/L5 = . expression "&&" expression, FOLLOW [236] -> GOTO 266
	expression/L6 = . expression "|" expression, FOLLOW [236] -> GOTO 266
	expression/L7 = . expression "^" expression, FOLLOW [236] -> GOTO 266
	expression/L7 = . expression "&" expression, FOLLOW [236] -> GOTO 266
	expression/L8 = . expression "==" expression, FOLLOW [236] -> GOTO 266
	expression/L8 = . expression "!=" expression, FOLLOW [236] -> GOTO 266
	expression/L8 = . expression "<=" expression, FOLLOW [236] -> GOTO 266
	expression/L8 = . expression "<" expression, FOLLOW [236] -> GOTO 266
	expression/L8 = . expression ">=" expression, FOLLOW [236] -> GOTO 266
	expression/L8 = . expression ">" expression, FOLLOW [236] -> GOTO 266
	expression/L9 = . expression "+" expression, FOLLOW [236] -> GOTO 266
	expression/L9 = . expression "-" expression, FOLLOW [236] -> GOTO 266
	expression/L10 = . expression "*" expression, FOLLOW [236] -> GOTO 266
	expression/L10 = . expression "/" expression, FOLLOW [236] -> GOTO 266
	expression/L10 = . expression "%" expression, FOLLOW [236] -> GOTO 266
	expression/L11 = . expression "<<" expression, FOLLOW [236] -> GOTO 266
	expression/L11 = . expression ">>" expression, FOLLOW [236] -> GOTO 266
	expression/L12 = . expression "." IDENT, FOLLOW [236] -> GOTO 266
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [236] -> GOTO 266
	expression/L13 = . expression "(" ")", FOLLOW [236] -> GOTO 266
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [236] -> GOTO 266
	iexpression = . expression indirection IDENT, FOLLOW [236] -> GOTO 266
	expression/L12 = . iexpression, FOLLOW [236] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [236] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [236] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [236] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [236] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [236] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [236] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [236] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [236] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [236] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [236] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [236] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [236] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [236] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [236] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [236] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [236] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [236] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [236] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [236] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [236] -> SHIFT "null" GOTO 92
[161]
	expression/L3 = . expression "=" expression, FOLLOW [236] -> GOTO 267
	expression/L3 = . expression "+=" expression, FOLLOW [236] -> GOTO 267
	expression/L3 = . expression "-=" expression, FOLLOW [236] -> GOTO 267
	expression/L3 = . expression "*=" expression, FOLLOW [236] -> GOTO 267
	expression/L3 = . expression "/=" expression, FOLLOW [236] -> GOTO 267
	expression/L3 = . expression "^=" expression, FOLLOW [236] -> GOTO 267
	expression/L3 = . expression "&=" expression, FOLLOW [236] -> GOTO 267
	expression/L3 = . expression "%=" expression, FOLLOW [236] -> GOTO 267
	expression/L3 = . expression "&&=" expression, FOLLOW [236] -> GOTO 267
	expression/L3 = . expression "||=" expression, FOLLOW [236] -> GOTO 267
	expression/L3 = . expression "&=" expression, FOLLOW [236] -> GOTO 267
	expression/L3 = . expression "|=" expression, FOLLOW [236] -> GOTO 267
	expression/L3 = expression "|=" . expression, FOLLOW [236] -> GOTO 267
	expression/L3 = . expression "<<=" expression, FOLLOW [236] -> GOTO 267
	expression/L3 = . expression ">>=" expression, FOLLOW [236] -> GOTO 267
	expression/L4 = . expression "||" expression, FOLLOW [236] -> GOTO 267
	expression/L5 = . expression "&&" expression, FOLLOW [236] -> GOTO 267
	expression/L6 = . expression "|" expression, FOLLOW [236] -> GOTO 267
	expression/L7 = . expression "^" expression, FOLLOW [236] -> GOTO 267
	expression/L7 = . expression "&" expression, FOLLOW [236] -> GOTO 267
	expression/L8 = . expression "==" expression, FOLLOW [236] -> GOTO 267
	expression/L8 = . expression "!=" expression, FOLLOW [236] -> GOTO 267
	expression/L8 = . expression "<=" expression, FOLLOW [236] -> GOTO 267
	expression/L8 = . expression "<" expression, FOLLOW [236] -> GOTO 267
	expression/L8 = . expression ">=" expression, FOLLOW [236] -> GOTO 267
	expression/L8 = . expression ">" expression, FOLLOW [236] -> GOTO 267
	expression/L9 = . expression "+" expression, FOLLOW [236] -> GOTO 267
	expression/L9 = . expression "-" expression, FOLLOW [236] -> GOTO 267
	expression/L10 = . expression "*" expression, FOLLOW [236] -> GOTO 267
	expression/L10 = . expression "/" expression, FOLLOW [236] -> GOTO 267
	expression/L10 = . expression "%" expression, FOLLOW [236] -> GOTO 267
	expression/L11 = . expression "<<" expression, FOLLOW [236] -> GOTO 267
	expression/L11 = . expression ">>" expression, FOLLOW [236] -> GOTO 267
	expression/L12 = . expression "." IDENT, FOLLOW [236] -> GOTO 267
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [236] -> GOTO 267
	expression/L13 = . expression "(" ")", FOLLOW [236] -> GOTO 267
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [236] -> GOTO 267
	iexpression = . expression indirection IDENT, FOLLOW [236] -> GOTO 267
	expression/L12 = . iexpression, FOLLOW [236] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [236] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [236] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [236] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [236] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [236] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [236] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [236] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [236] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [236] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [236] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [236] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [236] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [236] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [236] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [236] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [236] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [236] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [236] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [236] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [236] -> SHIFT "null" GOTO 92
[162]
	expression/L3 = . expression "=" expression, FOLLOW [236] -> GOTO 268
	expression/L3 = . expression "+=" expression, FOLLOW [236] -> GOTO 268
	expression/L3 = . expression "-=" expression, FOLLOW [236] -> GOTO 268
	expression/L3 = . expression "*=" expression, FOLLOW [236] -> GOTO 268
	expression/L3 = . expression "/=" expression, FOLLOW [236] -> GOTO 268
	expression/L3 = . expression "^=" expression, FOLLOW [236] -> GOTO 268
	expression/L3 = . expression "&=" expression, FOLLOW [236] -> GOTO 268
	expression/L3 = . expression "%=" expression, FOLLOW [236] -> GOTO 268
	expression/L3 = . expression "&&=" expression, FOLLOW [236] -> GOTO 268
	expression/L3 = . expression "||=" expression, FOLLOW [236] -> GOTO 268
	expression/L3 = . expression "&=" expression, FOLLOW [236] -> GOTO 268
	expression/L3 = . expression "|=" expression, FOLLOW [236] -> GOTO 268
	expression/L3 = . expression "<<=" expression, FOLLOW [236] -> GOTO 268
	expression/L3 = expression "<<=" . expression, FOLLOW [236] -> GOTO 268
	expression/L3 = . expression ">>=" expression, FOLLOW [236] -> GOTO 268
	expression/L4 = . expression "||" expression, FOLLOW [236] -> GOTO 268
	expression/L5 = . expression "&&" expression, FOLLOW [236] -> GOTO 268
	expression/L6 = . expression "|" expression, FOLLOW [236] -> GOTO 268
	expression/L7 = . expression "^" expression, FOLLOW [236] -> GOTO 268
	expression/L7 = . expression "&" expression, FOLLOW [236] -> GOTO 268
	expression/L8 = . expression "==" expression, FOLLOW [236] -> GOTO 268
	expression/L8 = . expression "!=" expression, FOLLOW [236] -> GOTO 268
	expression/L8 = . expression "<=" expression, FOLLOW [236] -> GOTO 268
	expression/L8 = . expression "<" expression, FOLLOW [236] -> GOTO 268
	expression/L8 = . expression ">=" expression, FOLLOW [236] -> GOTO 268
	expression/L8 = . expression ">" expression, FOLLOW [236] -> GOTO 268
	expression/L9 = . expression "+" expression, FOLLOW [236] -> GOTO 268
	expression/L9 = . expression "-" expression, FOLLOW [236] -> GOTO 268
	expression/L10 = . expression "*" expression, FOLLOW [236] -> GOTO 268
	expression/L10 = . expression "/" expression, FOLLOW [236] -> GOTO 268
	expression/L10 = . expression "%" expression, FOLLOW [236] -> GOTO 268
	expression/L11 = . expression "<<" expression, FOLLOW [236] -> GOTO 268
	expression/L11 = . expression ">>" expression, FOLLOW [236] -> GOTO 268
	expression/L12 = . expression "." IDENT, FOLLOW [236] -> GOTO 268
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [236] -> GOTO 268
	expression/L13 = . expression "(" ")", FOLLOW [236] -> GOTO 268
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [236] -> GOTO 268
	iexpression = . expression indirection IDENT, FOLLOW [236] -> GOTO 268
	expression/L12 = . iexpression, FOLLOW [236] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [236] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [236] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [236] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [236] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [236] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [236] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [236] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [236] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [236] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [236] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [236] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [236] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [236] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [236] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [236] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [236] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [236] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [236] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [236] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [236] -> SHIFT "null" GOTO 92
[163]
	expression/L3 = . expression "=" expression, FOLLOW [236] -> GOTO 269
	expression/L3 = . expression "+=" expression, FOLLOW [236] -> GOTO 269
	expression/L3 = . expression "-=" expression, FOLLOW [236] -> GOTO 269
	expression/L3 = . expression "*=" expression, FOLLOW [236] -> GOTO 269
	expression/L3 = . expression "/=" expression, FOLLOW [236] -> GOTO 269
	expression/L3 = . expression "^=" expression, FOLLOW [236] -> GOTO 269
	expression/L3 = . expression "&=" expression, FOLLOW [236] -> GOTO 269
	expression/L3 = . expression "%=" expression, FOLLOW [236] -> GOTO 269
	expression/L3 = . expression "&&=" expression, FOLLOW [236] -> GOTO 269
	expression/L3 = . expression "||=" expression, FOLLOW [236] -> GOTO 269
	expression/L3 = . expression "&=" expression, FOLLOW [236] -> GOTO 269
	expression/L3 = . expression "|=" expression, FOLLOW [236] -> GOTO 269
	expression/L3 = . expression "<<=" expression, FOLLOW [236] -> GOTO 269
	expression/L3 = . expression ">>=" expression, FOLLOW [236] -> GOTO 269
	expression/L3 = expression ">>=" . expression, FOLLOW [236] -> GOTO 269
	expression/L4 = . expression "||" expression, FOLLOW [236] -> GOTO 269
	expression/L5 = . expression "&&" expression, FOLLOW [236] -> GOTO 269
	expression/L6 = . expression "|" expression, FOLLOW [236] -> GOTO 269
	expression/L7 = . expression "^" expression, FOLLOW [236] -> GOTO 269
	expression/L7 = . expression "&" expression, FOLLOW [236] -> GOTO 269
	expression/L8 = . expression "==" expression, FOLLOW [236] -> GOTO 269
	expression/L8 = . expression "!=" expression, FOLLOW [236] -> GOTO 269
	expression/L8 = . expression "<=" expression, FOLLOW [236] -> GOTO 269
	expression/L8 = . expression "<" expression, FOLLOW [236] -> GOTO 269
	expression/L8 = . expression ">=" expression, FOLLOW [236] -> GOTO 269
	expression/L8 = . expression ">" expression, FOLLOW [236] -> GOTO 269
	expression/L9 = . expression "+" expression, FOLLOW [236] -> GOTO 269
	expression/L9 = . expression "-" expression, FOLLOW [236] -> GOTO 269
	expression/L10 = . expression "*" expression, FOLLOW [236] -> GOTO 269
	expression/L10 = . expression "/" expression, FOLLOW [236] -> GOTO 269
	expression/L10 = . expression "%" expression, FOLLOW [236] -> GOTO 269
	expression/L11 = . expression "<<" expression, FOLLOW [236] -> GOTO 269
	expression/L11 = . expression ">>" expression, FOLLOW [236] -> GOTO 269
	expression/L12 = . expression "." IDENT, FOLLOW [236] -> GOTO 269
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [236] -> GOTO 269
	expression/L13 = . expression "(" ")", FOLLOW [236] -> GOTO 269
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [236] -> GOTO 269
	iexpression = . expression indirection IDENT, FOLLOW [236] -> GOTO 269
	expression/L12 = . iexpression, FOLLOW [236] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [236] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [236] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [236] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [236] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [236] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [236] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [236] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [236] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [236] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [236] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [236] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [236] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [236] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [236] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [236] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [236] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [236] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [236] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [236] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [236] -> SHIFT "null" GOTO 92
[164]
	expression/L12 = expression "." . IDENT, FOLLOW [236] -> SHIFT IDENT GOTO 270
[165]
	iexpression = expression . indirection IDENT, FOLLOW [236] -> GOTO 128
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [236] -> SHIFT '(' GOTO 129
	expression/L13 = expression . "(" ")", FOLLOW [236] -> SHIFT '(' GOTO 129
	expression/L2 = "(" expression . ")", FOLLOW [236] -> SHIFT ')' GOTO 271
	expression/L7 = expression . "&" expression, FOLLOW [236] -> SHIFT '&' GOTO 131
	expression/L7 = expression . "^" expression, FOLLOW [236] -> SHIFT '^' GOTO 132
	indirection = . "->" indirection, FOLLOW [17] -> SHIFT "->" GOTO 133
	indirection = . "->", FOLLOW [17] -> SHIFT "->" GOTO 133
	expression/L3 = expression . "=" expression, FOLLOW [236] -> SHIFT '=' GOTO 134
	expression/L9 = expression . "+" expression, FOLLOW [236] -> SHIFT '+' GOTO 135
	expression/L9 = expression . "-" expression, FOLLOW [236] -> SHIFT '-' GOTO 136
	expression/L10 = expression . "*" expression, FOLLOW [236] -> SHIFT '*' GOTO 137
	expression/L10 = expression . "/" expression, FOLLOW [236] -> SHIFT '/' GOTO 138
	expression/L10 = expression . "%" expression, FOLLOW [236] -> SHIFT '%' GOTO 139
	expression/L5 = expression . "&&" expression, FOLLOW [236] -> SHIFT "&&" GOTO 140
	expression/L4 = expression . "||" expression, FOLLOW [236] -> SHIFT "||" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [236] -> SHIFT '|' GOTO 142
	expression/L11 = expression . "<<" expression, FOLLOW [236] -> SHIFT "<<" GOTO 143
	expression/L11 = expression . ">>" expression, FOLLOW [236] -> SHIFT ">>" GOTO 144
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [236] -> SHIFT '[' GOTO 145
	expression/L8 = expression . "==" expression, FOLLOW [236] -> SHIFT "==" GOTO 146
	expression/L8 = expression . "!=" expression, FOLLOW [236] -> SHIFT "!=" GOTO 147
	expression/L8 = expression . ">=" expression, FOLLOW [236] -> SHIFT ">=" GOTO 148
	expression/L8 = expression . "<=" expression, FOLLOW [236] -> SHIFT "<=" GOTO 149
	expression/L8 = expression . ">" expression, FOLLOW [236] -> SHIFT '>' GOTO 150
	expression/L8 = expression . "<" expression, FOLLOW [236] -> SHIFT '<' GOTO 151
	expression/L3 = expression . "+=" expression, FOLLOW [236] -> SHIFT "+=" GOTO 152
	expression/L3 = expression . "-=" expression, FOLLOW [236] -> SHIFT "-=" GOTO 153
	expression/L3 = expression . "*=" expression, FOLLOW [236] -> SHIFT "*=" GOTO 154
	expression/L3 = expression . "/=" expression, FOLLOW [236] -> SHIFT "/=" GOTO 155
	expression/L3 = expression . "^=" expression, FOLLOW [236] -> SHIFT "^=" GOTO 156
	expression/L3 = expression . "&=" expression, FOLLOW [236] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [236] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "%=" expression, FOLLOW [236] -> SHIFT "%=" GOTO 158
	expression/L3 = expression . "&&=" expression, FOLLOW [236] -> SHIFT "&&=" GOTO 159
	expression/L3 = expression . "||=" expression, FOLLOW [236] -> SHIFT "||=" GOTO 160
	expression/L3 = expression . "|=" expression, FOLLOW [236] -> SHIFT "|=" GOTO 161
	expression/L3 = expression . "<<=" expression, FOLLOW [236] -> SHIFT "<<=" GOTO 162
	expression/L3 = expression . ">>=" expression, FOLLOW [236] -> SHIFT ">>=" GOTO 163
	expression/L12 = expression . "." IDENT, FOLLOW [236] -> SHIFT '.' GOTO 164
[166]
	iexpression = expression . indirection IDENT, FOLLOW [236] -> GOTO 128
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [236] -> SHIFT '(' GOTO 129
	expression/L13 = expression . "(" ")", FOLLOW [236] -> SHIFT '(' GOTO 129
	expression/L7 = expression . "&" expression, FOLLOW [236] -> SHIFT '&' GOTO 131
	expression/L7 = expression . "^" expression, FOLLOW [236] -> SHIFT '^' GOTO 132
	indirection = . "->" indirection, FOLLOW [17] -> SHIFT "->" GOTO 133
	indirection = . "->", FOLLOW [17] -> SHIFT "->" GOTO 133
	expression/L3 = expression . "=" expression, FOLLOW [236] -> SHIFT '=' GOTO 134
	expression/L9 = expression . "+" expression, FOLLOW [236] -> SHIFT '+' GOTO 135
	expression/L9 = expression . "-" expression, FOLLOW [236] -> SHIFT '-' GOTO 136
	expression/L10 = expression . "*" expression, FOLLOW [236] -> SHIFT '*' GOTO 137
	expression/L10 = expression . "/" expression, FOLLOW [236] -> SHIFT '/' GOTO 138
	expression/L10 = expression . "%" expression, FOLLOW [236] -> SHIFT '%' GOTO 139
	expression/L5 = expression . "&&" expression, FOLLOW [236] -> SHIFT "&&" GOTO 140
	expression/L4 = expression . "||" expression, FOLLOW [236] -> SHIFT "||" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [236] -> SHIFT '|' GOTO 142
	expression/L11 = expression . "<<" expression, FOLLOW [236] -> SHIFT "<<" GOTO 143
	expression/L11 = expression . ">>" expression, FOLLOW [236] -> SHIFT ">>" GOTO 144
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [236] -> SHIFT '[' GOTO 145
	expression/L8 = expression . "==" expression, FOLLOW [236] -> SHIFT "==" GOTO 146
	expression/L8 = expression . "!=" expression, FOLLOW [236] -> SHIFT "!=" GOTO 147
	expression/L8 = expression . ">=" expression, FOLLOW [236] -> SHIFT ">=" GOTO 148
	expression/L8 = expression . "<=" expression, FOLLOW [236] -> SHIFT "<=" GOTO 149
	expression/L8 = expression . ">" expression, FOLLOW [236] -> SHIFT '>' GOTO 150
	expression/L8 = expression . "<" expression, FOLLOW [236] -> SHIFT '<' GOTO 151
	expression/L3 = expression . "+=" expression, FOLLOW [236] -> SHIFT "+=" GOTO 152
	expression/L3 = expression . "-=" expression, FOLLOW [236] -> SHIFT "-=" GOTO 153
	expression/L3 = expression . "*=" expression, FOLLOW [236] -> SHIFT "*=" GOTO 154
	expression/L3 = expression . "/=" expression, FOLLOW [236] -> SHIFT "/=" GOTO 155
	expression/L3 = expression . "^=" expression, FOLLOW [236] -> SHIFT "^=" GOTO 156
	expression/L3 = expression . "&=" expression, FOLLOW [236] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [236] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "%=" expression, FOLLOW [236] -> SHIFT "%=" GOTO 158
	expression/L3 = expression . "&&=" expression, FOLLOW [236] -> SHIFT "&&=" GOTO 159
	expression/L3 = expression . "||=" expression, FOLLOW [236] -> SHIFT "||=" GOTO 160
	expression/L3 = expression . "|=" expression, FOLLOW [236] -> SHIFT "|=" GOTO 161
	expression/L3 = expression . "<<=" expression, FOLLOW [236] -> SHIFT "<<=" GOTO 162
	expression/L3 = expression . ">>=" expression, FOLLOW [236] -> SHIFT ">>=" GOTO 163
	expression/L12 = expression . "." IDENT, FOLLOW [236] -> SHIFT '.' GOTO 164
	expression/L9 = "&" expression . (110), FOLLOW [236] -> REDUCE expression #2 CALL operator "&"
[167]
	statement/L1 = "{" codeblock . "}", FOLLOW [98] -> SHIFT '}' GOTO 272
[168]
	iexpression = expression . indirection IDENT, FOLLOW [179] -> GOTO 128
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [179] -> SHIFT '(' GOTO 129
	expression/L13 = expression . "(" ")", FOLLOW [179] -> SHIFT '(' GOTO 129
	statement/L1 = expression . ";", FOLLOW [98] -> SHIFT ';' GOTO 130
	expressionlist = expression . "," expressionlist, FOLLOW [18] -> SHIFT ',' GOTO 273
	expression/L7 = expression . "&" expression, FOLLOW [179] -> SHIFT '&' GOTO 131
	expression/L7 = expression . "^" expression, FOLLOW [179] -> SHIFT '^' GOTO 132
	indirection = . "->" indirection, FOLLOW [17] -> SHIFT "->" GOTO 133
	indirection = . "->", FOLLOW [17] -> SHIFT "->" GOTO 133
	expression/L3 = expression . "=" expression, FOLLOW [179] -> SHIFT '=' GOTO 134
	expression/L9 = expression . "+" expression, FOLLOW [179] -> SHIFT '+' GOTO 135
	expression/L9 = expression . "-" expression, FOLLOW [179] -> SHIFT '-' GOTO 136
	expression/L10 = expression . "*" expression, FOLLOW [179] -> SHIFT '*' GOTO 137
	expression/L10 = expression . "/" expression, FOLLOW [179] -> SHIFT '/' GOTO 138
	expression/L10 = expression . "%" expression, FOLLOW [179] -> SHIFT '%' GOTO 139
	expression/L5 = expression . "&&" expression, FOLLOW [179] -> SHIFT "&&" GOTO 140
	expression/L4 = expression . "||" expression, FOLLOW [179] -> SHIFT "||" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [179] -> SHIFT '|' GOTO 142
	expression/L11 = expression . "<<" expression, FOLLOW [179] -> SHIFT "<<" GOTO 143
	expression/L11 = expression . ">>" expression, FOLLOW [179] -> SHIFT ">>" GOTO 144
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [179] -> SHIFT '[' GOTO 145
	expression/L8 = expression . "==" expression, FOLLOW [179] -> SHIFT "==" GOTO 146
	expression/L8 = expression . "!=" expression, FOLLOW [179] -> SHIFT "!=" GOTO 147
	expression/L8 = expression . ">=" expression, FOLLOW [179] -> SHIFT ">=" GOTO 148
	expression/L8 = expression . "<=" expression, FOLLOW [179] -> SHIFT "<=" GOTO 149
	expression/L8 = expression . ">" expression, FOLLOW [179] -> SHIFT '>' GOTO 150
	expression/L8 = expression . "<" expression, FOLLOW [179] -> SHIFT '<' GOTO 151
	expression/L3 = expression . "+=" expression, FOLLOW [179] -> SHIFT "+=" GOTO 152
	expression/L3 = expression . "-=" expression, FOLLOW [179] -> SHIFT "-=" GOTO 153
	expression/L3 = expression . "*=" expression, FOLLOW [179] -> SHIFT "*=" GOTO 154
	expression/L3 = expression . "/=" expression, FOLLOW [179] -> SHIFT "/=" GOTO 155
	expression/L3 = expression . "^=" expression, FOLLOW [179] -> SHIFT "^=" GOTO 156
	expression/L3 = expression . "&=" expression, FOLLOW [179] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [179] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "%=" expression, FOLLOW [179] -> SHIFT "%=" GOTO 158
	expression/L3 = expression . "&&=" expression, FOLLOW [179] -> SHIFT "&&=" GOTO 159
	expression/L3 = expression . "||=" expression, FOLLOW [179] -> SHIFT "||=" GOTO 160
	expression/L3 = expression . "|=" expression, FOLLOW [179] -> SHIFT "|=" GOTO 161
	expression/L3 = expression . "<<=" expression, FOLLOW [179] -> SHIFT "<<=" GOTO 162
	expression/L3 = expression . ">>=" expression, FOLLOW [179] -> SHIFT ">>=" GOTO 163
	expression/L12 = expression . "." IDENT, FOLLOW [179] -> SHIFT '.' GOTO 164
	expressionlist = expression ., FOLLOW [18] -> REDUCE expressionlist #1
[169]
	expression/L1 = "{" expressionlist . "}", FOLLOW [236] -> SHIFT '}' GOTO 274
[170]
	expression/L1 = "{" "}" . (82), FOLLOW [236] -> REDUCE expression #2 CALL structure
[171]
	iexpression = expression . indirection IDENT, FOLLOW [236] -> GOTO 128
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [236] -> SHIFT '(' GOTO 129
	expression/L13 = expression . "(" ")", FOLLOW [236] -> SHIFT '(' GOTO 129
	expression/L7 = expression . "&" expression, FOLLOW [236] -> SHIFT '&' GOTO 131
	expression/L7 = expression . "^" expression, FOLLOW [236] -> SHIFT '^' GOTO 132
	indirection = . "->" indirection, FOLLOW [17] -> SHIFT "->" GOTO 133
	indirection = . "->", FOLLOW [17] -> SHIFT "->" GOTO 133
	expression/L3 = expression . "=" expression, FOLLOW [236] -> SHIFT '=' GOTO 134
	expression/L9 = expression . "+" expression, FOLLOW [236] -> SHIFT '+' GOTO 135
	expression/L9 = expression . "-" expression, FOLLOW [236] -> SHIFT '-' GOTO 136
	expression/L10 = expression . "*" expression, FOLLOW [236] -> SHIFT '*' GOTO 137
	expression/L10 = expression . "/" expression, FOLLOW [236] -> SHIFT '/' GOTO 138
	expression/L10 = expression . "%" expression, FOLLOW [236] -> SHIFT '%' GOTO 139
	expression/L5 = expression . "&&" expression, FOLLOW [236] -> SHIFT "&&" GOTO 140
	expression/L4 = expression . "||" expression, FOLLOW [236] -> SHIFT "||" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [236] -> SHIFT '|' GOTO 142
	expression/L11 = expression . "<<" expression, FOLLOW [236] -> SHIFT "<<" GOTO 143
	expression/L11 = expression . ">>" expression, FOLLOW [236] -> SHIFT ">>" GOTO 144
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [236] -> SHIFT '[' GOTO 145
	expression/L8 = expression . "==" expression, FOLLOW [236] -> SHIFT "==" GOTO 146
	expression/L8 = expression . "!=" expression, FOLLOW [236] -> SHIFT "!=" GOTO 147
	expression/L8 = expression . ">=" expression, FOLLOW [236] -> SHIFT ">=" GOTO 148
	expression/L8 = expression . "<=" expression, FOLLOW [236] -> SHIFT "<=" GOTO 149
	expression/L8 = expression . ">" expression, FOLLOW [236] -> SHIFT '>' GOTO 150
	expression/L8 = expression . "<" expression, FOLLOW [236] -> SHIFT '<' GOTO 151
	expression/L3 = expression . "+=" expression, FOLLOW [236] -> SHIFT "+=" GOTO 152
	expression/L3 = expression . "-=" expression, FOLLOW [236] -> SHIFT "-=" GOTO 153
	expression/L3 = expression . "*=" expression, FOLLOW [236] -> SHIFT "*=" GOTO 154
	expression/L3 = expression . "/=" expression, FOLLOW [236] -> SHIFT "/=" GOTO 155
	expression/L3 = expression . "^=" expression, FOLLOW [236] -> SHIFT "^=" GOTO 156
	expression/L3 = expression . "&=" expression, FOLLOW [236] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [236] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "%=" expression, FOLLOW [236] -> SHIFT "%=" GOTO 158
	expression/L3 = expression . "&&=" expression, FOLLOW [236] -> SHIFT "&&=" GOTO 159
	expression/L3 = expression . "||=" expression, FOLLOW [236] -> SHIFT "||=" GOTO 160
	expression/L3 = expression . "|=" expression, FOLLOW [236] -> SHIFT "|=" GOTO 161
	expression/L3 = expression . "<<=" expression, FOLLOW [236] -> SHIFT "<<=" GOTO 162
	expression/L3 = expression . ">>=" expression, FOLLOW [236] -> SHIFT ">>=" GOTO 163
	expression/L12 = expression . "." IDENT, FOLLOW [236] -> SHIFT '.' GOTO 164
	expression/L9 = "+" expression . (117), FOLLOW [236] -> REDUCE expression #2 CALL operator "+"
[172]
	iexpression = expression . indirection IDENT, FOLLOW [236] -> GOTO 128
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [236] -> SHIFT '(' GOTO 129
	expression/L13 = expression . "(" ")", FOLLOW [236] -> SHIFT '(' GOTO 129
	expression/L7 = expression . "&" expression, FOLLOW [236] -> SHIFT '&' GOTO 131
	expression/L7 = expression . "^" expression, FOLLOW [236] -> SHIFT '^' GOTO 132
	indirection = . "->" indirection, FOLLOW [17] -> SHIFT "->" GOTO 133
	indirection = . "->", FOLLOW [17] -> SHIFT "->" GOTO 133
	expression/L3 = expression . "=" expression, FOLLOW [236] -> SHIFT '=' GOTO 134
	expression/L9 = expression . "+" expression, FOLLOW [236] -> SHIFT '+' GOTO 135
	expression/L9 = expression . "-" expression, FOLLOW [236] -> SHIFT '-' GOTO 136
	expression/L10 = expression . "*" expression, FOLLOW [236] -> SHIFT '*' GOTO 137
	expression/L10 = expression . "/" expression, FOLLOW [236] -> SHIFT '/' GOTO 138
	expression/L10 = expression . "%" expression, FOLLOW [236] -> SHIFT '%' GOTO 139
	expression/L5 = expression . "&&" expression, FOLLOW [236] -> SHIFT "&&" GOTO 140
	expression/L4 = expression . "||" expression, FOLLOW [236] -> SHIFT "||" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [236] -> SHIFT '|' GOTO 142
	expression/L11 = expression . "<<" expression, FOLLOW [236] -> SHIFT "<<" GOTO 143
	expression/L11 = expression . ">>" expression, FOLLOW [236] -> SHIFT ">>" GOTO 144
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [236] -> SHIFT '[' GOTO 145
	expression/L8 = expression . "==" expression, FOLLOW [236] -> SHIFT "==" GOTO 146
	expression/L8 = expression . "!=" expression, FOLLOW [236] -> SHIFT "!=" GOTO 147
	expression/L8 = expression . ">=" expression, FOLLOW [236] -> SHIFT ">=" GOTO 148
	expression/L8 = expression . "<=" expression, FOLLOW [236] -> SHIFT "<=" GOTO 149
	expression/L8 = expression . ">" expression, FOLLOW [236] -> SHIFT '>' GOTO 150
	expression/L8 = expression . "<" expression, FOLLOW [236] -> SHIFT '<' GOTO 151
	expression/L3 = expression . "+=" expression, FOLLOW [236] -> SHIFT "+=" GOTO 152
	expression/L3 = expression . "-=" expression, FOLLOW [236] -> SHIFT "-=" GOTO 153
	expression/L3 = expression . "*=" expression, FOLLOW [236] -> SHIFT "*=" GOTO 154
	expression/L3 = expression . "/=" expression, FOLLOW [236] -> SHIFT "/=" GOTO 155
	expression/L3 = expression . "^=" expression, FOLLOW [236] -> SHIFT "^=" GOTO 156
	expression/L3 = expression . "&=" expression, FOLLOW [236] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [236] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "%=" expression, FOLLOW [236] -> SHIFT "%=" GOTO 158
	expression/L3 = expression . "&&=" expression, FOLLOW [236] -> SHIFT "&&=" GOTO 159
	expression/L3 = expression . "||=" expression, FOLLOW [236] -> SHIFT "||=" GOTO 160
	expression/L3 = expression . "|=" expression, FOLLOW [236] -> SHIFT "|=" GOTO 161
	expression/L3 = expression . "<<=" expression, FOLLOW [236] -> SHIFT "<<=" GOTO 162
	expression/L3 = expression . ">>=" expression, FOLLOW [236] -> SHIFT ">>=" GOTO 163
	expression/L12 = expression . "." IDENT, FOLLOW [236] -> SHIFT '.' GOTO 164
	expression/L9 = "-" expression . (118), FOLLOW [236] -> REDUCE expression #2 CALL operator "-"
[173]
	iexpression = expression . indirection IDENT, FOLLOW [236] -> GOTO 128
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [236] -> SHIFT '(' GOTO 129
	expression/L13 = expression . "(" ")", FOLLOW [236] -> SHIFT '(' GOTO 129
	expression/L7 = expression . "&" expression, FOLLOW [236] -> SHIFT '&' GOTO 131
	expression/L7 = expression . "^" expression, FOLLOW [236] -> SHIFT '^' GOTO 132
	indirection = . "->" indirection, FOLLOW [17] -> SHIFT "->" GOTO 133
	indirection = . "->", FOLLOW [17] -> SHIFT "->" GOTO 133
	expression/L3 = expression . "=" expression, FOLLOW [236] -> SHIFT '=' GOTO 134
	expression/L9 = expression . "+" expression, FOLLOW [236] -> SHIFT '+' GOTO 135
	expression/L9 = expression . "-" expression, FOLLOW [236] -> SHIFT '-' GOTO 136
	expression/L10 = expression . "*" expression, FOLLOW [236] -> SHIFT '*' GOTO 137
	expression/L10 = expression . "/" expression, FOLLOW [236] -> SHIFT '/' GOTO 138
	expression/L10 = expression . "%" expression, FOLLOW [236] -> SHIFT '%' GOTO 139
	expression/L5 = expression . "&&" expression, FOLLOW [236] -> SHIFT "&&" GOTO 140
	expression/L4 = expression . "||" expression, FOLLOW [236] -> SHIFT "||" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [236] -> SHIFT '|' GOTO 142
	expression/L11 = expression . "<<" expression, FOLLOW [236] -> SHIFT "<<" GOTO 143
	expression/L11 = expression . ">>" expression, FOLLOW [236] -> SHIFT ">>" GOTO 144
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [236] -> SHIFT '[' GOTO 145
	expression/L8 = expression . "==" expression, FOLLOW [236] -> SHIFT "==" GOTO 146
	expression/L8 = expression . "!=" expression, FOLLOW [236] -> SHIFT "!=" GOTO 147
	expression/L8 = expression . ">=" expression, FOLLOW [236] -> SHIFT ">=" GOTO 148
	expression/L8 = expression . "<=" expression, FOLLOW [236] -> SHIFT "<=" GOTO 149
	expression/L8 = expression . ">" expression, FOLLOW [236] -> SHIFT '>' GOTO 150
	expression/L8 = expression . "<" expression, FOLLOW [236] -> SHIFT '<' GOTO 151
	expression/L3 = expression . "+=" expression, FOLLOW [236] -> SHIFT "+=" GOTO 152
	expression/L3 = expression . "-=" expression, FOLLOW [236] -> SHIFT "-=" GOTO 153
	expression/L3 = expression . "*=" expression, FOLLOW [236] -> SHIFT "*=" GOTO 154
	expression/L3 = expression . "/=" expression, FOLLOW [236] -> SHIFT "/=" GOTO 155
	expression/L3 = expression . "^=" expression, FOLLOW [236] -> SHIFT "^=" GOTO 156
	expression/L3 = expression . "&=" expression, FOLLOW [236] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [236] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "%=" expression, FOLLOW [236] -> SHIFT "%=" GOTO 158
	expression/L3 = expression . "&&=" expression, FOLLOW [236] -> SHIFT "&&=" GOTO 159
	expression/L3 = expression . "||=" expression, FOLLOW [236] -> SHIFT "||=" GOTO 160
	expression/L3 = expression . "|=" expression, FOLLOW [236] -> SHIFT "|=" GOTO 161
	expression/L3 = expression . "<<=" expression, FOLLOW [236] -> SHIFT "<<=" GOTO 162
	expression/L3 = expression . ">>=" expression, FOLLOW [236] -> SHIFT ">>=" GOTO 163
	expression/L12 = expression . "." IDENT, FOLLOW [236] -> SHIFT '.' GOTO 164
	expression/L12 = "*" expression . (127), FOLLOW [236] -> REDUCE expression #2 CALL operator "->"
[174]
	iexpression = expression . indirection IDENT, FOLLOW [236] -> GOTO 128
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [236] -> SHIFT '(' GOTO 129
	expression/L13 = expression . "(" ")", FOLLOW [236] -> SHIFT '(' GOTO 129
	expression/L7 = expression . "&" expression, FOLLOW [236] -> SHIFT '&' GOTO 131
	expression/L7 = expression . "^" expression, FOLLOW [236] -> SHIFT '^' GOTO 132
	indirection = . "->" indirection, FOLLOW [17] -> SHIFT "->" GOTO 133
	indirection = . "->", FOLLOW [17] -> SHIFT "->" GOTO 133
	expression/L3 = expression . "=" expression, FOLLOW [236] -> SHIFT '=' GOTO 134
	expression/L9 = expression . "+" expression, FOLLOW [236] -> SHIFT '+' GOTO 135
	expression/L9 = expression . "-" expression, FOLLOW [236] -> SHIFT '-' GOTO 136
	expression/L10 = expression . "*" expression, FOLLOW [236] -> SHIFT '*' GOTO 137
	expression/L10 = expression . "/" expression, FOLLOW [236] -> SHIFT '/' GOTO 138
	expression/L10 = expression . "%" expression, FOLLOW [236] -> SHIFT '%' GOTO 139
	expression/L5 = expression . "&&" expression, FOLLOW [236] -> SHIFT "&&" GOTO 140
	expression/L4 = expression . "||" expression, FOLLOW [236] -> SHIFT "||" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [236] -> SHIFT '|' GOTO 142
	expression/L11 = expression . "<<" expression, FOLLOW [236] -> SHIFT "<<" GOTO 143
	expression/L11 = expression . ">>" expression, FOLLOW [236] -> SHIFT ">>" GOTO 144
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [236] -> SHIFT '[' GOTO 145
	expression/L8 = expression . "==" expression, FOLLOW [236] -> SHIFT "==" GOTO 146
	expression/L8 = expression . "!=" expression, FOLLOW [236] -> SHIFT "!=" GOTO 147
	expression/L8 = expression . ">=" expression, FOLLOW [236] -> SHIFT ">=" GOTO 148
	expression/L8 = expression . "<=" expression, FOLLOW [236] -> SHIFT "<=" GOTO 149
	expression/L8 = expression . ">" expression, FOLLOW [236] -> SHIFT '>' GOTO 150
	expression/L8 = expression . "<" expression, FOLLOW [236] -> SHIFT '<' GOTO 151
	expression/L3 = expression . "+=" expression, FOLLOW [236] -> SHIFT "+=" GOTO 152
	expression/L3 = expression . "-=" expression, FOLLOW [236] -> SHIFT "-=" GOTO 153
	expression/L3 = expression . "*=" expression, FOLLOW [236] -> SHIFT "*=" GOTO 154
	expression/L3 = expression . "/=" expression, FOLLOW [236] -> SHIFT "/=" GOTO 155
	expression/L3 = expression . "^=" expression, FOLLOW [236] -> SHIFT "^=" GOTO 156
	expression/L3 = expression . "&=" expression, FOLLOW [236] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [236] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "%=" expression, FOLLOW [236] -> SHIFT "%=" GOTO 158
	expression/L3 = expression . "&&=" expression, FOLLOW [236] -> SHIFT "&&=" GOTO 159
	expression/L3 = expression . "||=" expression, FOLLOW [236] -> SHIFT "||=" GOTO 160
	expression/L3 = expression . "|=" expression, FOLLOW [236] -> SHIFT "|=" GOTO 161
	expression/L3 = expression . "<<=" expression, FOLLOW [236] -> SHIFT "<<=" GOTO 162
	expression/L3 = expression . ">>=" expression, FOLLOW [236] -> SHIFT ">>=" GOTO 163
	expression/L12 = expression . "." IDENT, FOLLOW [236] -> SHIFT '.' GOTO 164
	expression/L9 = "~" expression . (119), FOLLOW [236] -> REDUCE expression #2 CALL operator "~"
[175]
	iexpression = expression . indirection IDENT, FOLLOW [236] -> GOTO 128
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [236] -> SHIFT '(' GOTO 129
	expression/L13 = expression . "(" ")", FOLLOW [236] -> SHIFT '(' GOTO 129
	expression/L7 = expression . "&" expression, FOLLOW [236] -> SHIFT '&' GOTO 131
	expression/L7 = expression . "^" expression, FOLLOW [236] -> SHIFT '^' GOTO 132
	indirection = . "->" indirection, FOLLOW [17] -> SHIFT "->" GOTO 133
	indirection = . "->", FOLLOW [17] -> SHIFT "->" GOTO 133
	expression/L3 = expression . "=" expression, FOLLOW [236] -> SHIFT '=' GOTO 134
	expression/L9 = expression . "+" expression, FOLLOW [236] -> SHIFT '+' GOTO 135
	expression/L9 = expression . "-" expression, FOLLOW [236] -> SHIFT '-' GOTO 136
	expression/L10 = expression . "*" expression, FOLLOW [236] -> SHIFT '*' GOTO 137
	expression/L10 = expression . "/" expression, FOLLOW [236] -> SHIFT '/' GOTO 138
	expression/L10 = expression . "%" expression, FOLLOW [236] -> SHIFT '%' GOTO 139
	expression/L5 = expression . "&&" expression, FOLLOW [236] -> SHIFT "&&" GOTO 140
	expression/L4 = expression . "||" expression, FOLLOW [236] -> SHIFT "||" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [236] -> SHIFT '|' GOTO 142
	expression/L11 = expression . "<<" expression, FOLLOW [236] -> SHIFT "<<" GOTO 143
	expression/L11 = expression . ">>" expression, FOLLOW [236] -> SHIFT ">>" GOTO 144
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [236] -> SHIFT '[' GOTO 145
	expression/L8 = expression . "==" expression, FOLLOW [236] -> SHIFT "==" GOTO 146
	expression/L8 = expression . "!=" expression, FOLLOW [236] -> SHIFT "!=" GOTO 147
	expression/L8 = expression . ">=" expression, FOLLOW [236] -> SHIFT ">=" GOTO 148
	expression/L8 = expression . "<=" expression, FOLLOW [236] -> SHIFT "<=" GOTO 149
	expression/L8 = expression . ">" expression, FOLLOW [236] -> SHIFT '>' GOTO 150
	expression/L8 = expression . "<" expression, FOLLOW [236] -> SHIFT '<' GOTO 151
	expression/L3 = expression . "+=" expression, FOLLOW [236] -> SHIFT "+=" GOTO 152
	expression/L3 = expression . "-=" expression, FOLLOW [236] -> SHIFT "-=" GOTO 153
	expression/L3 = expression . "*=" expression, FOLLOW [236] -> SHIFT "*=" GOTO 154
	expression/L3 = expression . "/=" expression, FOLLOW [236] -> SHIFT "/=" GOTO 155
	expression/L3 = expression . "^=" expression, FOLLOW [236] -> SHIFT "^=" GOTO 156
	expression/L3 = expression . "&=" expression, FOLLOW [236] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [236] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "%=" expression, FOLLOW [236] -> SHIFT "%=" GOTO 158
	expression/L3 = expression . "&&=" expression, FOLLOW [236] -> SHIFT "&&=" GOTO 159
	expression/L3 = expression . "||=" expression, FOLLOW [236] -> SHIFT "||=" GOTO 160
	expression/L3 = expression . "|=" expression, FOLLOW [236] -> SHIFT "|=" GOTO 161
	expression/L3 = expression . "<<=" expression, FOLLOW [236] -> SHIFT "<<=" GOTO 162
	expression/L3 = expression . ">>=" expression, FOLLOW [236] -> SHIFT ">>=" GOTO 163
	expression/L12 = expression . "." IDENT, FOLLOW [236] -> SHIFT '.' GOTO 164
	expression/L9 = "!" expression . (120), FOLLOW [236] -> REDUCE expression #2 CALL operator "!"
[176]
	statement/L1 = "var" variabledefinition . ";", FOLLOW [98] -> SHIFT ';' GOTO 275
[177]
	iexpression = expression . indirection IDENT, FOLLOW [97] -> GOTO 128
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [97] -> SHIFT '(' GOTO 129
	expression/L13 = expression . "(" ")", FOLLOW [97] -> SHIFT '(' GOTO 129
	statement/L1 = "return" expression . ";", FOLLOW [98] -> SHIFT ';' GOTO 276
	expression/L7 = expression . "&" expression, FOLLOW [97] -> SHIFT '&' GOTO 131
	expression/L7 = expression . "^" expression, FOLLOW [97] -> SHIFT '^' GOTO 132
	indirection = . "->" indirection, FOLLOW [17] -> SHIFT "->" GOTO 133
	indirection = . "->", FOLLOW [17] -> SHIFT "->" GOTO 133
	expression/L3 = expression . "=" expression, FOLLOW [97] -> SHIFT '=' GOTO 134
	expression/L9 = expression . "+" expression, FOLLOW [97] -> SHIFT '+' GOTO 135
	expression/L9 = expression . "-" expression, FOLLOW [97] -> SHIFT '-' GOTO 136
	expression/L10 = expression . "*" expression, FOLLOW [97] -> SHIFT '*' GOTO 137
	expression/L10 = expression . "/" expression, FOLLOW [97] -> SHIFT '/' GOTO 138
	expression/L10 = expression . "%" expression, FOLLOW [97] -> SHIFT '%' GOTO 139
	expression/L5 = expression . "&&" expression, FOLLOW [97] -> SHIFT "&&" GOTO 140
	expression/L4 = expression . "||" expression, FOLLOW [97] -> SHIFT "||" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [97] -> SHIFT '|' GOTO 142
	expression/L11 = expression . "<<" expression, FOLLOW [97] -> SHIFT "<<" GOTO 143
	expression/L11 = expression . ">>" expression, FOLLOW [97] -> SHIFT ">>" GOTO 144
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [97] -> SHIFT '[' GOTO 145
	expression/L8 = expression . "==" expression, FOLLOW [97] -> SHIFT "==" GOTO 146
	expression/L8 = expression . "!=" expression, FOLLOW [97] -> SHIFT "!=" GOTO 147
	expression/L8 = expression . ">=" expression, FOLLOW [97] -> SHIFT ">=" GOTO 148
	expression/L8 = expression . "<=" expression, FOLLOW [97] -> SHIFT "<=" GOTO 149
	expression/L8 = expression . ">" expression, FOLLOW [97] -> SHIFT '>' GOTO 150
	expression/L8 = expression . "<" expression, FOLLOW [97] -> SHIFT '<' GOTO 151
	expression/L3 = expression . "+=" expression, FOLLOW [97] -> SHIFT "+=" GOTO 152
	expression/L3 = expression . "-=" expression, FOLLOW [97] -> SHIFT "-=" GOTO 153
	expression/L3 = expression . "*=" expression, FOLLOW [97] -> SHIFT "*=" GOTO 154
	expression/L3 = expression . "/=" expression, FOLLOW [97] -> SHIFT "/=" GOTO 155
	expression/L3 = expression . "^=" expression, FOLLOW [97] -> SHIFT "^=" GOTO 156
	expression/L3 = expression . "&=" expression, FOLLOW [97] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [97] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "%=" expression, FOLLOW [97] -> SHIFT "%=" GOTO 158
	expression/L3 = expression . "&&=" expression, FOLLOW [97] -> SHIFT "&&=" GOTO 159
	expression/L3 = expression . "||=" expression, FOLLOW [97] -> SHIFT "||=" GOTO 160
	expression/L3 = expression . "|=" expression, FOLLOW [97] -> SHIFT "|=" GOTO 161
	expression/L3 = expression . "<<=" expression, FOLLOW [97] -> SHIFT "<<=" GOTO 162
	expression/L3 = expression . ">>=" expression, FOLLOW [97] -> SHIFT ">>=" GOTO 163
	expression/L12 = expression . "." IDENT, FOLLOW [97] -> SHIFT '.' GOTO 164
[178]
	iexpression = expression . indirection IDENT, FOLLOW [97] -> GOTO 128
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [97] -> SHIFT '(' GOTO 129
	expression/L13 = expression . "(" ")", FOLLOW [97] -> SHIFT '(' GOTO 129
	statement/L1 = "delete" expression . ";", FOLLOW [98] -> SHIFT ';' GOTO 277
	expression/L7 = expression . "&" expression, FOLLOW [97] -> SHIFT '&' GOTO 131
	expression/L7 = expression . "^" expression, FOLLOW [97] -> SHIFT '^' GOTO 132
	indirection = . "->" indirection, FOLLOW [17] -> SHIFT "->" GOTO 133
	indirection = . "->", FOLLOW [17] -> SHIFT "->" GOTO 133
	expression/L3 = expression . "=" expression, FOLLOW [97] -> SHIFT '=' GOTO 134
	expression/L9 = expression . "+" expression, FOLLOW [97] -> SHIFT '+' GOTO 135
	expression/L9 = expression . "-" expression, FOLLOW [97] -> SHIFT '-' GOTO 136
	expression/L10 = expression . "*" expression, FOLLOW [97] -> SHIFT '*' GOTO 137
	expression/L10 = expression . "/" expression, FOLLOW [97] -> SHIFT '/' GOTO 138
	expression/L10 = expression . "%" expression, FOLLOW [97] -> SHIFT '%' GOTO 139
	expression/L5 = expression . "&&" expression, FOLLOW [97] -> SHIFT "&&" GOTO 140
	expression/L4 = expression . "||" expression, FOLLOW [97] -> SHIFT "||" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [97] -> SHIFT '|' GOTO 142
	expression/L11 = expression . "<<" expression, FOLLOW [97] -> SHIFT "<<" GOTO 143
	expression/L11 = expression . ">>" expression, FOLLOW [97] -> SHIFT ">>" GOTO 144
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [97] -> SHIFT '[' GOTO 145
	expression/L8 = expression . "==" expression, FOLLOW [97] -> SHIFT "==" GOTO 146
	expression/L8 = expression . "!=" expression, FOLLOW [97] -> SHIFT "!=" GOTO 147
	expression/L8 = expression . ">=" expression, FOLLOW [97] -> SHIFT ">=" GOTO 148
	expression/L8 = expression . "<=" expression, FOLLOW [97] -> SHIFT "<=" GOTO 149
	expression/L8 = expression . ">" expression, FOLLOW [97] -> SHIFT '>' GOTO 150
	expression/L8 = expression . "<" expression, FOLLOW [97] -> SHIFT '<' GOTO 151
	expression/L3 = expression . "+=" expression, FOLLOW [97] -> SHIFT "+=" GOTO 152
	expression/L3 = expression . "-=" expression, FOLLOW [97] -> SHIFT "-=" GOTO 153
	expression/L3 = expression . "*=" expression, FOLLOW [97] -> SHIFT "*=" GOTO 154
	expression/L3 = expression . "/=" expression, FOLLOW [97] -> SHIFT "/=" GOTO 155
	expression/L3 = expression . "^=" expression, FOLLOW [97] -> SHIFT "^=" GOTO 156
	expression/L3 = expression . "&=" expression, FOLLOW [97] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [97] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "%=" expression, FOLLOW [97] -> SHIFT "%=" GOTO 158
	expression/L3 = expression . "&&=" expression, FOLLOW [97] -> SHIFT "&&=" GOTO 159
	expression/L3 = expression . "||=" expression, FOLLOW [97] -> SHIFT "||=" GOTO 160
	expression/L3 = expression . "|=" expression, FOLLOW [97] -> SHIFT "|=" GOTO 161
	expression/L3 = expression . "<<=" expression, FOLLOW [97] -> SHIFT "<<=" GOTO 162
	expression/L3 = expression . ">>=" expression, FOLLOW [97] -> SHIFT ">>=" GOTO 163
	expression/L12 = expression . "." IDENT, FOLLOW [97] -> SHIFT '.' GOTO 164
[179]
	statement/L1 = "if" "(" . expression ")" "{" codeblock "}", FOLLOW [98] -> GOTO 278
	statement/L1 = "if" "(" . expression ")" "{" codeblock "}" "else" "{" codeblock "}", FOLLOW [98] -> GOTO 278
	expression/L3 = . expression "=" expression, FOLLOW [227] -> GOTO 278
	expression/L3 = . expression "+=" expression, FOLLOW [227] -> GOTO 278
	expression/L3 = . expression "-=" expression, FOLLOW [227] -> GOTO 278
	expression/L3 = . expression "*=" expression, FOLLOW [227] -> GOTO 278
	expression/L3 = . expression "/=" expression, FOLLOW [227] -> GOTO 278
	expression/L3 = . expression "^=" expression, FOLLOW [227] -> GOTO 278
	expression/L3 = . expression "&=" expression, FOLLOW [227] -> GOTO 278
	expression/L3 = . expression "%=" expression, FOLLOW [227] -> GOTO 278
	expression/L3 = . expression "&&=" expression, FOLLOW [227] -> GOTO 278
	expression/L3 = . expression "||=" expression, FOLLOW [227] -> GOTO 278
	expression/L3 = . expression "&=" expression, FOLLOW [227] -> GOTO 278
	expression/L3 = . expression "|=" expression, FOLLOW [227] -> GOTO 278
	expression/L3 = . expression "<<=" expression, FOLLOW [227] -> GOTO 278
	expression/L3 = . expression ">>=" expression, FOLLOW [227] -> GOTO 278
	expression/L4 = . expression "||" expression, FOLLOW [227] -> GOTO 278
	expression/L5 = . expression "&&" expression, FOLLOW [227] -> GOTO 278
	expression/L6 = . expression "|" expression, FOLLOW [227] -> GOTO 278
	expression/L7 = . expression "^" expression, FOLLOW [227] -> GOTO 278
	expression/L7 = . expression "&" expression, FOLLOW [227] -> GOTO 278
	expression/L8 = . expression "==" expression, FOLLOW [227] -> GOTO 278
	expression/L8 = . expression "!=" expression, FOLLOW [227] -> GOTO 278
	expression/L8 = . expression "<=" expression, FOLLOW [227] -> GOTO 278
	expression/L8 = . expression "<" expression, FOLLOW [227] -> GOTO 278
	expression/L8 = . expression ">=" expression, FOLLOW [227] -> GOTO 278
	expression/L8 = . expression ">" expression, FOLLOW [227] -> GOTO 278
	expression/L9 = . expression "+" expression, FOLLOW [227] -> GOTO 278
	expression/L9 = . expression "-" expression, FOLLOW [227] -> GOTO 278
	expression/L10 = . expression "*" expression, FOLLOW [227] -> GOTO 278
	expression/L10 = . expression "/" expression, FOLLOW [227] -> GOTO 278
	expression/L10 = . expression "%" expression, FOLLOW [227] -> GOTO 278
	expression/L11 = . expression "<<" expression, FOLLOW [227] -> GOTO 278
	expression/L11 = . expression ">>" expression, FOLLOW [227] -> GOTO 278
	expression/L12 = . expression "." IDENT, FOLLOW [227] -> GOTO 278
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [227] -> GOTO 278
	expression/L13 = . expression "(" ")", FOLLOW [227] -> GOTO 278
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [227] -> GOTO 278
	iexpression = . expression indirection IDENT, FOLLOW [227] -> GOTO 278
	expression/L12 = . iexpression, FOLLOW [227] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [227] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [227] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [227] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [227] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [227] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [227] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [227] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [227] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [227] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [227] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [227] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [227] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [227] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [227] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [227] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [227] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [227] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [227] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [227] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [227] -> SHIFT "null" GOTO 92
[180]
	statement/L1 = "while" "(" . expression ")" "{" codeblock "}", FOLLOW [98] -> GOTO 279
	expression/L3 = . expression "=" expression, FOLLOW [227] -> GOTO 279
	expression/L3 = . expression "+=" expression, FOLLOW [227] -> GOTO 279
	expression/L3 = . expression "-=" expression, FOLLOW [227] -> GOTO 279
	expression/L3 = . expression "*=" expression, FOLLOW [227] -> GOTO 279
	expression/L3 = . expression "/=" expression, FOLLOW [227] -> GOTO 279
	expression/L3 = . expression "^=" expression, FOLLOW [227] -> GOTO 279
	expression/L3 = . expression "&=" expression, FOLLOW [227] -> GOTO 279
	expression/L3 = . expression "%=" expression, FOLLOW [227] -> GOTO 279
	expression/L3 = . expression "&&=" expression, FOLLOW [227] -> GOTO 279
	expression/L3 = . expression "||=" expression, FOLLOW [227] -> GOTO 279
	expression/L3 = . expression "&=" expression, FOLLOW [227] -> GOTO 279
	expression/L3 = . expression "|=" expression, FOLLOW [227] -> GOTO 279
	expression/L3 = . expression "<<=" expression, FOLLOW [227] -> GOTO 279
	expression/L3 = . expression ">>=" expression, FOLLOW [227] -> GOTO 279
	expression/L4 = . expression "||" expression, FOLLOW [227] -> GOTO 279
	expression/L5 = . expression "&&" expression, FOLLOW [227] -> GOTO 279
	expression/L6 = . expression "|" expression, FOLLOW [227] -> GOTO 279
	expression/L7 = . expression "^" expression, FOLLOW [227] -> GOTO 279
	expression/L7 = . expression "&" expression, FOLLOW [227] -> GOTO 279
	expression/L8 = . expression "==" expression, FOLLOW [227] -> GOTO 279
	expression/L8 = . expression "!=" expression, FOLLOW [227] -> GOTO 279
	expression/L8 = . expression "<=" expression, FOLLOW [227] -> GOTO 279
	expression/L8 = . expression "<" expression, FOLLOW [227] -> GOTO 279
	expression/L8 = . expression ">=" expression, FOLLOW [227] -> GOTO 279
	expression/L8 = . expression ">" expression, FOLLOW [227] -> GOTO 279
	expression/L9 = . expression "+" expression, FOLLOW [227] -> GOTO 279
	expression/L9 = . expression "-" expression, FOLLOW [227] -> GOTO 279
	expression/L10 = . expression "*" expression, FOLLOW [227] -> GOTO 279
	expression/L10 = . expression "/" expression, FOLLOW [227] -> GOTO 279
	expression/L10 = . expression "%" expression, FOLLOW [227] -> GOTO 279
	expression/L11 = . expression "<<" expression, FOLLOW [227] -> GOTO 279
	expression/L11 = . expression ">>" expression, FOLLOW [227] -> GOTO 279
	expression/L12 = . expression "." IDENT, FOLLOW [227] -> GOTO 279
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [227] -> GOTO 279
	expression/L13 = . expression "(" ")", FOLLOW [227] -> GOTO 279
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [227] -> GOTO 279
	iexpression = . expression indirection IDENT, FOLLOW [227] -> GOTO 279
	expression/L12 = . iexpression, FOLLOW [227] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [227] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [227] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [227] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [227] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [227] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [227] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [227] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [227] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [227] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [227] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [227] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [227] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [227] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [227] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [227] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [227] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [227] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [227] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [227] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [227] -> SHIFT "null" GOTO 92
[181]
	expression/L1 = "new" typespec . ":" expression, FOLLOW [236] -> SHIFT ':' GOTO 280
[182]
	expression/L1 = "cast" typespec . ":" "{" expression "}", FOLLOW [236] -> SHIFT ':' GOTO 281
	expression/L1 = "cast" typespec . ":" "{" "}", FOLLOW [236] -> SHIFT ':' GOTO 281
[183]
	iexpression = expression . indirection IDENT, FOLLOW [236] -> GOTO 128
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [236] -> SHIFT '(' GOTO 129
	expression/L13 = expression . "(" ")", FOLLOW [236] -> SHIFT '(' GOTO 129
	expressionlist = expression . "," expressionlist, FOLLOW [251] -> SHIFT ',' GOTO 273
	expression/L7 = expression . "&" expression, FOLLOW [236] -> SHIFT '&' GOTO 131
	expression/L7 = expression . "^" expression, FOLLOW [236] -> SHIFT '^' GOTO 132
	indirection = . "->" indirection, FOLLOW [17] -> SHIFT "->" GOTO 133
	indirection = . "->", FOLLOW [17] -> SHIFT "->" GOTO 133
	expression/L3 = expression . "=" expression, FOLLOW [236] -> SHIFT '=' GOTO 134
	expression/L9 = expression . "+" expression, FOLLOW [236] -> SHIFT '+' GOTO 135
	expression/L9 = expression . "-" expression, FOLLOW [236] -> SHIFT '-' GOTO 136
	expression/L10 = expression . "*" expression, FOLLOW [236] -> SHIFT '*' GOTO 137
	expression/L10 = expression . "/" expression, FOLLOW [236] -> SHIFT '/' GOTO 138
	expression/L10 = expression . "%" expression, FOLLOW [236] -> SHIFT '%' GOTO 139
	expression/L5 = expression . "&&" expression, FOLLOW [236] -> SHIFT "&&" GOTO 140
	expression/L4 = expression . "||" expression, FOLLOW [236] -> SHIFT "||" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [236] -> SHIFT '|' GOTO 142
	expression/L11 = expression . "<<" expression, FOLLOW [236] -> SHIFT "<<" GOTO 143
	expression/L11 = expression . ">>" expression, FOLLOW [236] -> SHIFT ">>" GOTO 144
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [236] -> SHIFT '[' GOTO 145
	expression/L8 = expression . "==" expression, FOLLOW [236] -> SHIFT "==" GOTO 146
	expression/L8 = expression . "!=" expression, FOLLOW [236] -> SHIFT "!=" GOTO 147
	expression/L8 = expression . ">=" expression, FOLLOW [236] -> SHIFT ">=" GOTO 148
	expression/L8 = expression . "<=" expression, FOLLOW [236] -> SHIFT "<=" GOTO 149
	expression/L8 = expression . ">" expression, FOLLOW [236] -> SHIFT '>' GOTO 150
	expression/L8 = expression . "<" expression, FOLLOW [236] -> SHIFT '<' GOTO 151
	expression/L3 = expression . "+=" expression, FOLLOW [236] -> SHIFT "+=" GOTO 152
	expression/L3 = expression . "-=" expression, FOLLOW [236] -> SHIFT "-=" GOTO 153
	expression/L3 = expression . "*=" expression, FOLLOW [236] -> SHIFT "*=" GOTO 154
	expression/L3 = expression . "/=" expression, FOLLOW [236] -> SHIFT "/=" GOTO 155
	expression/L3 = expression . "^=" expression, FOLLOW [236] -> SHIFT "^=" GOTO 156
	expression/L3 = expression . "&=" expression, FOLLOW [236] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [236] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "%=" expression, FOLLOW [236] -> SHIFT "%=" GOTO 158
	expression/L3 = expression . "&&=" expression, FOLLOW [236] -> SHIFT "&&=" GOTO 159
	expression/L3 = expression . "||=" expression, FOLLOW [236] -> SHIFT "||=" GOTO 160
	expression/L3 = expression . "|=" expression, FOLLOW [236] -> SHIFT "|=" GOTO 161
	expression/L3 = expression . "<<=" expression, FOLLOW [236] -> SHIFT "<<=" GOTO 162
	expression/L3 = expression . ">>=" expression, FOLLOW [236] -> SHIFT ">>=" GOTO 163
	expression/L12 = expression . "." IDENT, FOLLOW [236] -> SHIFT '.' GOTO 164
	expressionlist = expression ., FOLLOW [251] -> REDUCE expressionlist #1
[184]
	variabledefinition = typespec IDENT "[" expression "]" . "=" expression, FOLLOW [14] -> SHIFT '=' GOTO 282
	variabledefinition = typespec IDENT "[" expression "]" . (step:81), FOLLOW [14] -> REDUCE variabledefinition #5 CALL vardef_array
[185]
	functiondefinition = linkage "function" IDENT typespec callablebody . (36), FOLLOW [246] -> REDUCE functiondefinition #5 CALL funcdef
[186]
	paramdecl = typespec . IDENT, FOLLOW [184] -> SHIFT IDENT GOTO 283
[187]
	callablebody = "(" parameterlist . ")" "{" codeblock "}", FOLLOW [246] -> SHIFT ')' GOTO 284
	callablebody = "(" parameterlist . ")" "const" "{" codeblock "}", FOLLOW [246] -> SHIFT ')' GOTO 284
[188]
	parameterlist = parameters . (68), FOLLOW [10] -> REDUCE parameterlist #1 CALL paramdeflist
[189]
	parameters = paramdecl . "," parameters, FOLLOW [10] -> SHIFT ',' GOTO 285
	parameters = paramdecl ., FOLLOW [10] -> REDUCE parameters #1
[190]
	typespec/L1 = "const" typename "^" "^" "&" . (28), FOLLOW [255] -> REDUCE typespec #5 CALL typespec "const^^&"
[191]
	structdefinition = "struct" IDENT "{" struct_definitionlist "}" . (step:30), FOLLOW [175] -> REDUCE structdefinition #5 CALL structdef
[192]
	struct_definitionlist = struct_definition struct_definitionlist ., FOLLOW [18] -> REDUCE struct_definitionlist #2
[193]
	interfacedefinition = "interface" IDENT "{" interface_definitionlist "}" . (step:31), FOLLOW [175] -> REDUCE interfacedefinition #5 CALL interfacedef
[194]
	interface_definitionlist = interface_definition interface_definitionlist ., FOLLOW [18] -> REDUCE interface_definitionlist #2
[195]
	typespec/L1 = . typename, FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [9] -> GOTO 8
	interface_definition = "function" IDENT . typespec "(" parameterlist ")" ";", FOLLOW [171] -> GOTO 286
	interface_definition = "function" IDENT . typespec "(" parameterlist ")" "const" ";", FOLLOW [171] -> GOTO 286
	typename/L1 = . IDENT, FOLLOW [168] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [168] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
[196]
	interface_definition = "procedure" IDENT . "(" parameterlist ")" ";", FOLLOW [171] -> SHIFT '(' GOTO 287
	interface_definition = "procedure" IDENT . "(" parameterlist ")" "const" ";", FOLLOW [171] -> SHIFT '(' GOTO 287
[197]
	typespec/L1 = . typename, FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [9] -> GOTO 8
	interface_definition = "operator" operatordecl . typespec "(" parameterlist ")" ";", FOLLOW [171] -> GOTO 288
	interface_definition = "operator" operatordecl . typespec "(" parameterlist ")" "const" ";", FOLLOW [171] -> GOTO 288
	typename/L1 = . IDENT, FOLLOW [168] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [168] -> SHIFT IDENT GOTO 17
	interface_definition = "operator" operatordecl . "(" parameterlist ")" ";", FOLLOW [171] -> SHIFT '(' GOTO 289
	interface_definition = "operator" operatordecl . "(" parameterlist ")" "const" ";", FOLLOW [171] -> SHIFT '(' GOTO 289
	typespec/L1 = . "const" typename, FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
[198]
	operatordecl = "(" . ")", FOLLOW [185] -> SHIFT ')' GOTO 290
[199]
	operatordecl = "&" . (51), FOLLOW [185] -> REDUCE operatordecl #1 CALL operatordecl {name="&",symbol="__bitand"}
[200]
	operatordecl = "->" . (42), FOLLOW [185] -> REDUCE operatordecl #1 CALL operatordecl {name="->",symbol="__arrow"}
[201]
	operatordecl = "=" . (43), FOLLOW [185] -> REDUCE operatordecl #1 CALL operatordecl {name="=",symbol="__assign"}
[202]
	operatordecl = "+" . (44), FOLLOW [185] -> REDUCE operatordecl #1 CALL operatordecl {name="+",symbol="__plus"}
[203]
	operatordecl = "-" . (45), FOLLOW [185] -> REDUCE operatordecl #1 CALL operatordecl {name="-",symbol="__minus"}
[204]
	operatordecl = "*" . (46), FOLLOW [185] -> REDUCE operatordecl #1 CALL operatordecl {name="*",symbol="__mul"}
[205]
	operatordecl = "/" . (47), FOLLOW [185] -> REDUCE operatordecl #1 CALL operatordecl {name="/",symbol="__div"}
[206]
	operatordecl = "%" . (48), FOLLOW [185] -> REDUCE operatordecl #1 CALL operatordecl {name="%",symbol="__mod"}
[207]
	operatordecl = "&&" . (49), FOLLOW [185] -> REDUCE operatordecl #1 CALL operatordecl {name="&&",symbol="__and"}
[208]
	operatordecl = "||" . (50), FOLLOW [185] -> REDUCE operatordecl #1 CALL operatordecl {name="||",symbol="__or"}
[209]
	operatordecl = "|" . (52), FOLLOW [185] -> REDUCE operatordecl #1 CALL operatordecl {name="|",symbol="__bitor"}
[210]
	operatordecl = "<<" . (53), FOLLOW [185] -> REDUCE operatordecl #1 CALL operatordecl {name="<<",symbol="__lsh"}
[211]
	operatordecl = ">>" . (54), FOLLOW [185] -> REDUCE operatordecl #1 CALL operatordecl {name=">>",symbol="__rsh"}
[212]
	operatordecl = "~" . (55), FOLLOW [185] -> REDUCE operatordecl #1 CALL operatordecl {name="~",symbol="__lneg"}
[213]
	operatordecl = "!" . (56), FOLLOW [185] -> REDUCE operatordecl #1 CALL operatordecl {name="!",symbol="__not"}
[214]
	operatordecl = "[" . "]", FOLLOW [185] -> SHIFT ']' GOTO 291
[215]
	operatordecl = "==" . (59), FOLLOW [185] -> REDUCE operatordecl #1 CALL operatordecl {name="==",symbol="__eq"}
[216]
	operatordecl = "!=" . (60), FOLLOW [185] -> REDUCE operatordecl #1 CALL operatordecl {name="!=",symbol="__ne"}
[217]
	operatordecl = ">=" . (61), FOLLOW [185] -> REDUCE operatordecl #1 CALL operatordecl {name=">=",symbol="__ge"}
[218]
	operatordecl = "<=" . (62), FOLLOW [185] -> REDUCE operatordecl #1 CALL operatordecl {name="<=",symbol="__le"}
[219]
	operatordecl = ">" . (63), FOLLOW [185] -> REDUCE operatordecl #1 CALL operatordecl {name=">",symbol="__gt"}
[220]
	operatordecl = "<" . (64), FOLLOW [185] -> REDUCE operatordecl #1 CALL operatordecl {name="<",symbol="__lt"}
[221]
	classdefinition = "class" IDENT "{" class_definitionlist "}" . (step:33), FOLLOW [175] -> REDUCE classdefinition #5 CALL classdef
[222]
	class_definitionlist = class_definition class_definitionlist ., FOLLOW [18] -> REDUCE class_definitionlist #2
[223]
	class_definition = typedefinition ";" . (15), FOLLOW [174] -> REDUCE class_definition #2 CALL definition 1
[224]
	operatordefinition = linkage "operator" . operatordecl typespec callablebody, FOLLOW [174] -> GOTO 292
	operatordefinition = linkage "operator" . operatordecl callablebody, FOLLOW [174] -> GOTO 292
	operatordecl = . "(" ")", FOLLOW [185] -> SHIFT '(' GOTO 198
	operatordecl = . "&", FOLLOW [185] -> SHIFT '&' GOTO 199
	operatordecl = . "->", FOLLOW [185] -> SHIFT "->" GOTO 200
	operatordecl = . "=", FOLLOW [185] -> SHIFT '=' GOTO 201
	operatordecl = . "+", FOLLOW [185] -> SHIFT '+' GOTO 202
	operatordecl = . "-", FOLLOW [185] -> SHIFT '-' GOTO 203
	operatordecl = . "*", FOLLOW [185] -> SHIFT '*' GOTO 204
	operatordecl = . "/", FOLLOW [185] -> SHIFT '/' GOTO 205
	operatordecl = . "%", FOLLOW [185] -> SHIFT '%' GOTO 206
	operatordecl = . "&&", FOLLOW [185] -> SHIFT "&&" GOTO 207
	operatordecl = . "||", FOLLOW [185] -> SHIFT "||" GOTO 208
	operatordecl = . "|", FOLLOW [185] -> SHIFT '|' GOTO 209
	operatordecl = . "<<", FOLLOW [185] -> SHIFT "<<" GOTO 210
	operatordecl = . ">>", FOLLOW [185] -> SHIFT ">>" GOTO 211
	operatordecl = . "~", FOLLOW [185] -> SHIFT '~' GOTO 212
	operatordecl = . "!", FOLLOW [185] -> SHIFT '!' GOTO 213
	operatordecl = . "[" "]", FOLLOW [185] -> SHIFT '[' GOTO 214
	operatordecl = . "==", FOLLOW [185] -> SHIFT "==" GOTO 215
	operatordecl = . "!=", FOLLOW [185] -> SHIFT "!=" GOTO 216
	operatordecl = . ">=", FOLLOW [185] -> SHIFT ">=" GOTO 217
	operatordecl = . "<=", FOLLOW [185] -> SHIFT "<=" GOTO 218
	operatordecl = . ">", FOLLOW [185] -> SHIFT '>' GOTO 219
	operatordecl = . "<", FOLLOW [185] -> SHIFT '<' GOTO 220
[225]
	constructordefinition = linkage "constructor" . callablebody, FOLLOW [174] -> GOTO 293
	callablebody = . "(" parameterlist ")" "{" codeblock "}", FOLLOW [174] -> SHIFT '(' GOTO 99
	callablebody = . "(" parameterlist ")" "const" "{" codeblock "}", FOLLOW [174] -> SHIFT '(' GOTO 99
[226]
	class_definition = variabledefinition ";" . (15), FOLLOW [174] -> REDUCE class_definition #2 CALL definition 1
[227]
	statement/L1 = . typedefinition ";", FOLLOW [98] -> GOTO 63
	functiondefinition = . linkage "function" IDENT typespec callablebody, FOLLOW [98] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [98] -> GOTO 14
	statement/L1 = . functiondefinition, FOLLOW [98] -> GOTO 64
	constructordefinition = "destructor" "{" . codeblock "}", FOLLOW [174] -> GOTO 294
	codeblock = . statementlist, FOLLOW [18] -> GOTO 66
	statementlist = . statement statementlist, FOLLOW [18] -> GOTO 67
	statement/L1 = . expression ";", FOLLOW [98] -> GOTO 68
	expression/L3 = . expression "=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "+=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "-=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "*=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "/=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "^=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "&=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "%=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "&&=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "||=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "&=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "|=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "<<=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression ">>=" expression, FOLLOW [97] -> GOTO 68
	expression/L4 = . expression "||" expression, FOLLOW [97] -> GOTO 68
	expression/L5 = . expression "&&" expression, FOLLOW [97] -> GOTO 68
	expression/L6 = . expression "|" expression, FOLLOW [97] -> GOTO 68
	expression/L7 = . expression "^" expression, FOLLOW [97] -> GOTO 68
	expression/L7 = . expression "&" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression "==" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression "!=" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression "<=" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression "<" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression ">=" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression ">" expression, FOLLOW [97] -> GOTO 68
	expression/L9 = . expression "+" expression, FOLLOW [97] -> GOTO 68
	expression/L9 = . expression "-" expression, FOLLOW [97] -> GOTO 68
	expression/L10 = . expression "*" expression, FOLLOW [97] -> GOTO 68
	expression/L10 = . expression "/" expression, FOLLOW [97] -> GOTO 68
	expression/L10 = . expression "%" expression, FOLLOW [97] -> GOTO 68
	expression/L11 = . expression "<<" expression, FOLLOW [97] -> GOTO 68
	expression/L11 = . expression ">>" expression, FOLLOW [97] -> GOTO 68
	expression/L12 = . expression "." IDENT, FOLLOW [97] -> GOTO 68
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [97] -> GOTO 68
	expression/L13 = . expression "(" ")", FOLLOW [97] -> GOTO 68
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [97] -> GOTO 68
	iexpression = . expression indirection IDENT, FOLLOW [97] -> GOTO 68
	expression/L12 = . iexpression, FOLLOW [97] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [97] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [97] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [97] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [97] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [97] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [97] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [97] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [97] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [97] -> SHIFT '&' GOTO 78
	typedefinition = . "typedef" typepath IDENT, FOLLOW [14] -> SHIFT "typedef" GOTO 19
	statement/L1 = . "{" codeblock "}", FOLLOW [98] -> SHIFT '{' GOTO 79
	expression/L1 = . "{" expressionlist "}", FOLLOW [97] -> SHIFT '{' GOTO 79
	expression/L1 = . "{" "}", FOLLOW [97] -> SHIFT '{' GOTO 79
	linkage = . "private", FOLLOW [61] -> SHIFT "private" GOTO 23
	linkage = . "public", FOLLOW [61] -> SHIFT "public" GOTO 24
	expression/L9 = . "+" expression, FOLLOW [97] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [97] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [97] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [97] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [97] -> SHIFT '!' GOTO 84
	statement/L1 = . "var" variabledefinition ";", FOLLOW [98] -> SHIFT "var" GOTO 85
	statement/L1 = . "return" expression ";", FOLLOW [98] -> SHIFT "return" GOTO 86
	statement/L1 = . "delete" expression ";", FOLLOW [98] -> SHIFT "delete" GOTO 87
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}", FOLLOW [98] -> SHIFT "if" GOTO 88
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}", FOLLOW [98] -> SHIFT "if" GOTO 88
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}", FOLLOW [98] -> SHIFT "while" GOTO 89
	expression/L1 = . "new" typespec ":" expression, FOLLOW [97] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [97] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [97] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [97] -> SHIFT "null" GOTO 92
	statementlist = ., FOLLOW [18] -> REDUCE statementlist #0
	linkage = . (34), FOLLOW [61] -> REDUCE linkage #0 CALL linkage {name="private",linkage="internal"}
[228]
	typepath/L1 = . typename, FOLLOW [176] -> GOTO 39
	inheritlist = . typepath "," inheritlist, FOLLOW [19] -> GOTO 121
	inheritlist = . typepath, FOLLOW [19] -> GOTO 121
	inheritlist = typepath "," . inheritlist, FOLLOW [19] -> GOTO 295
	typename/L1 = . IDENT, FOLLOW [176] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [176] -> SHIFT IDENT GOTO 17
[229]
	classdefinition = "class" IDENT ":" inheritlist "{" . class_definitionlist "}", FOLLOW [175] -> GOTO 296
	class_definitionlist = . class_definition class_definitionlist, FOLLOW [18] -> GOTO 110
	typespec/L1 = . typename, FOLLOW [17] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [17] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [17] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [17] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [17] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [17] -> GOTO 8
	variabledefinition = . typespec IDENT, FOLLOW [14] -> GOTO 9
	variabledefinition = . typespec IDENT "=" expression, FOLLOW [14] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression, FOLLOW [14] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]", FOLLOW [14] -> GOTO 9
	class_definition = . typedefinition ";", FOLLOW [174] -> GOTO 111
	class_definition = . structdefinition, FOLLOW [174] -> GOTO 112
	class_definition = . interfacedefinition, FOLLOW [174] -> GOTO 113
	class_definition = . classdefinition, FOLLOW [174] -> GOTO 114
	functiondefinition = . linkage "function" IDENT typespec callablebody, FOLLOW [174] -> GOTO 115
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [174] -> GOTO 115
	constructordefinition = . linkage "constructor" callablebody, FOLLOW [174] -> GOTO 115
	operatordefinition = . linkage "operator" operatordecl typespec callablebody, FOLLOW [174] -> GOTO 115
	operatordefinition = . linkage "operator" operatordecl callablebody, FOLLOW [174] -> GOTO 115
	class_definition = . functiondefinition, FOLLOW [174] -> GOTO 116
	class_definition = . constructordefinition, FOLLOW [174] -> GOTO 117
	class_definition = . operatordefinition, FOLLOW [174] -> GOTO 118
	class_definition = . variabledefinition ";", FOLLOW [174] -> GOTO 119
	typename/L1 = . IDENT, FOLLOW [62] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [62] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [17] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [17] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [17] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [17] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [17] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [17] -> SHIFT "const" GOTO 18
	typedefinition = . "typedef" typepath IDENT, FOLLOW [14] -> SHIFT "typedef" GOTO 19
	structdefinition = . "struct" IDENT "{" struct_definitionlist "}", FOLLOW [174] -> SHIFT "struct" GOTO 20
	interfacedefinition = . "interface" IDENT "{" interface_definitionlist "}", FOLLOW [174] -> SHIFT "interface" GOTO 21
	classdefinition = . "class" IDENT "{" class_definitionlist "}", FOLLOW [175] -> SHIFT "class" GOTO 22
	classdefinition = . "class" IDENT ":" inheritlist "{" class_definitionlist "}", FOLLOW [175] -> SHIFT "class" GOTO 22
	linkage = . "private", FOLLOW [173] -> SHIFT "private" GOTO 23
	linkage = . "public", FOLLOW [173] -> SHIFT "public" GOTO 24
	constructordefinition = . "destructor" "{" codeblock "}", FOLLOW [174] -> SHIFT "destructor" GOTO 120
	class_definitionlist = ., FOLLOW [18] -> REDUCE class_definitionlist #0
	linkage = . (34), FOLLOW [173] -> REDUCE linkage #0 CALL linkage {name="private",linkage="internal"}
[230]
	extern_paramlist = . extern_parameters, FOLLOW [186] -> GOTO 231
	extern_definition = "extern" DQSTRING "function" IDENT typespec "(" . extern_paramlist ")" ";", FOLLOW [59] -> GOTO 297
	extern_definition = "extern" DQSTRING "function" IDENT typespec "(" . extern_paramlist "..." ")" ";", FOLLOW [59] -> GOTO 297
	typespec/L1 = . typename, FOLLOW [188] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [188] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [188] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [188] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [188] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [188] -> GOTO 8
	extern_parameters = . typespec "," extern_parameters, FOLLOW [186] -> GOTO 233
	extern_parameters = . typespec, FOLLOW [186] -> GOTO 233
	typename/L1 = . IDENT, FOLLOW [189] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [189] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [188] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [188] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [188] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [188] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [188] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [188] -> SHIFT "const" GOTO 18
	extern_paramlist = . (6), FOLLOW [186] -> REDUCE extern_paramlist #0 CALL extern_paramdeflist
[231]
	extern_paramlist = extern_parameters . (6), FOLLOW [186] -> REDUCE extern_paramlist #1 CALL extern_paramdeflist
[232]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist . ")" ";", FOLLOW [59] -> SHIFT ')' GOTO 298
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist . "..." ")" ";", FOLLOW [59] -> SHIFT "..." GOTO 299
[233]
	extern_parameters = typespec . "," extern_parameters, FOLLOW [186] -> SHIFT ',' GOTO 300
	extern_parameters = typespec ., FOLLOW [186] -> REDUCE extern_parameters #1
[234]
	iexpression = expression indirection IDENT . (130), FOLLOW [236] -> REDUCE iexpression #3 CALL rep_operator "->"
[235]
	expression/L13 = expression "(" expressionlist . ")", FOLLOW [236] -> SHIFT ')' GOTO 301
[236]
	expression/L13 = expression "(" ")" . (128), FOLLOW [236] -> REDUCE expression #3 CALL operator "()"
[237]
	iexpression = expression . indirection IDENT, FOLLOW [236] -> GOTO 128
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [236] -> SHIFT '(' GOTO 129
	expression/L13 = expression . "(" ")", FOLLOW [236] -> SHIFT '(' GOTO 129
	expression/L7 = expression . "&" expression, FOLLOW [236] -> SHIFT '&' GOTO 131
	expression/L7 = expression . "^" expression, FOLLOW [236] -> SHIFT '^' GOTO 132
	indirection = . "->" indirection, FOLLOW [17] -> SHIFT "->" GOTO 133
	indirection = . "->", FOLLOW [17] -> SHIFT "->" GOTO 133
	expression/L3 = expression . "=" expression, FOLLOW [236] -> SHIFT '=' GOTO 134
	expression/L9 = expression . "+" expression, FOLLOW [236] -> SHIFT '+' GOTO 135
	expression/L9 = expression . "-" expression, FOLLOW [236] -> SHIFT '-' GOTO 136
	expression/L10 = expression . "*" expression, FOLLOW [236] -> SHIFT '*' GOTO 137
	expression/L10 = expression . "/" expression, FOLLOW [236] -> SHIFT '/' GOTO 138
	expression/L10 = expression . "%" expression, FOLLOW [236] -> SHIFT '%' GOTO 139
	expression/L5 = expression . "&&" expression, FOLLOW [236] -> SHIFT "&&" GOTO 140
	expression/L4 = expression . "||" expression, FOLLOW [236] -> SHIFT "||" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [236] -> SHIFT '|' GOTO 142
	expression/L11 = expression . "<<" expression, FOLLOW [236] -> SHIFT "<<" GOTO 143
	expression/L11 = expression . ">>" expression, FOLLOW [236] -> SHIFT ">>" GOTO 144
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [236] -> SHIFT '[' GOTO 145
	expression/L8 = expression . "==" expression, FOLLOW [236] -> SHIFT "==" GOTO 146
	expression/L8 = expression . "!=" expression, FOLLOW [236] -> SHIFT "!=" GOTO 147
	expression/L8 = expression . ">=" expression, FOLLOW [236] -> SHIFT ">=" GOTO 148
	expression/L8 = expression . "<=" expression, FOLLOW [236] -> SHIFT "<=" GOTO 149
	expression/L8 = expression . ">" expression, FOLLOW [236] -> SHIFT '>' GOTO 150
	expression/L8 = expression . "<" expression, FOLLOW [236] -> SHIFT '<' GOTO 151
	expression/L3 = expression . "+=" expression, FOLLOW [236] -> SHIFT "+=" GOTO 152
	expression/L3 = expression . "-=" expression, FOLLOW [236] -> SHIFT "-=" GOTO 153
	expression/L3 = expression . "*=" expression, FOLLOW [236] -> SHIFT "*=" GOTO 154
	expression/L3 = expression . "/=" expression, FOLLOW [236] -> SHIFT "/=" GOTO 155
	expression/L3 = expression . "^=" expression, FOLLOW [236] -> SHIFT "^=" GOTO 156
	expression/L3 = expression . "&=" expression, FOLLOW [236] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [236] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "%=" expression, FOLLOW [236] -> SHIFT "%=" GOTO 158
	expression/L3 = expression . "&&=" expression, FOLLOW [236] -> SHIFT "&&=" GOTO 159
	expression/L3 = expression . "||=" expression, FOLLOW [236] -> SHIFT "||=" GOTO 160
	expression/L3 = expression . "|=" expression, FOLLOW [236] -> SHIFT "|=" GOTO 161
	expression/L3 = expression . "<<=" expression, FOLLOW [236] -> SHIFT "<<=" GOTO 162
	expression/L3 = expression . ">>=" expression, FOLLOW [236] -> SHIFT ">>=" GOTO 163
	expression/L12 = expression . "." IDENT, FOLLOW [236] -> SHIFT '.' GOTO 164
	expression/L7 = expression "&" expression . (110), FOLLOW [236] -> REDUCE expression #3 CALL operator "&"
[238]
	iexpression = expression . indirection IDENT, FOLLOW [236] -> GOTO 128
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [236] -> SHIFT '(' GOTO 129
	expression/L13 = expression . "(" ")", FOLLOW [236] -> SHIFT '(' GOTO 129
	expression/L7 = expression . "&" expression, FOLLOW [236] -> SHIFT '&' GOTO 131
	expression/L7 = expression . "^" expression, FOLLOW [236] -> SHIFT '^' GOTO 132
	indirection = . "->" indirection, FOLLOW [17] -> SHIFT "->" GOTO 133
	indirection = . "->", FOLLOW [17] -> SHIFT "->" GOTO 133
	expression/L3 = expression . "=" expression, FOLLOW [236] -> SHIFT '=' GOTO 134
	expression/L9 = expression . "+" expression, FOLLOW [236] -> SHIFT '+' GOTO 135
	expression/L9 = expression . "-" expression, FOLLOW [236] -> SHIFT '-' GOTO 136
	expression/L10 = expression . "*" expression, FOLLOW [236] -> SHIFT '*' GOTO 137
	expression/L10 = expression . "/" expression, FOLLOW [236] -> SHIFT '/' GOTO 138
	expression/L10 = expression . "%" expression, FOLLOW [236] -> SHIFT '%' GOTO 139
	expression/L5 = expression . "&&" expression, FOLLOW [236] -> SHIFT "&&" GOTO 140
	expression/L4 = expression . "||" expression, FOLLOW [236] -> SHIFT "||" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [236] -> SHIFT '|' GOTO 142
	expression/L11 = expression . "<<" expression, FOLLOW [236] -> SHIFT "<<" GOTO 143
	expression/L11 = expression . ">>" expression, FOLLOW [236] -> SHIFT ">>" GOTO 144
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [236] -> SHIFT '[' GOTO 145
	expression/L8 = expression . "==" expression, FOLLOW [236] -> SHIFT "==" GOTO 146
	expression/L8 = expression . "!=" expression, FOLLOW [236] -> SHIFT "!=" GOTO 147
	expression/L8 = expression . ">=" expression, FOLLOW [236] -> SHIFT ">=" GOTO 148
	expression/L8 = expression . "<=" expression, FOLLOW [236] -> SHIFT "<=" GOTO 149
	expression/L8 = expression . ">" expression, FOLLOW [236] -> SHIFT '>' GOTO 150
	expression/L8 = expression . "<" expression, FOLLOW [236] -> SHIFT '<' GOTO 151
	expression/L3 = expression . "+=" expression, FOLLOW [236] -> SHIFT "+=" GOTO 152
	expression/L3 = expression . "-=" expression, FOLLOW [236] -> SHIFT "-=" GOTO 153
	expression/L3 = expression . "*=" expression, FOLLOW [236] -> SHIFT "*=" GOTO 154
	expression/L3 = expression . "/=" expression, FOLLOW [236] -> SHIFT "/=" GOTO 155
	expression/L3 = expression . "^=" expression, FOLLOW [236] -> SHIFT "^=" GOTO 156
	expression/L3 = expression . "&=" expression, FOLLOW [236] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [236] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "%=" expression, FOLLOW [236] -> SHIFT "%=" GOTO 158
	expression/L3 = expression . "&&=" expression, FOLLOW [236] -> SHIFT "&&=" GOTO 159
	expression/L3 = expression . "||=" expression, FOLLOW [236] -> SHIFT "||=" GOTO 160
	expression/L3 = expression . "|=" expression, FOLLOW [236] -> SHIFT "|=" GOTO 161
	expression/L3 = expression . "<<=" expression, FOLLOW [236] -> SHIFT "<<=" GOTO 162
	expression/L3 = expression . ">>=" expression, FOLLOW [236] -> SHIFT ">>=" GOTO 163
	expression/L12 = expression . "." IDENT, FOLLOW [236] -> SHIFT '.' GOTO 164
	expression/L7 = expression "^" expression . (109), FOLLOW [236] -> REDUCE expression #3 CALL operator "^"
[239]
	indirection = "->" indirection . (131), FOLLOW [17] -> REDUCE indirection #2 CALL count
[240]
	iexpression = expression . indirection IDENT, FOLLOW [236] -> GOTO 128
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [236] -> SHIFT '(' GOTO 129
	expression/L13 = expression . "(" ")", FOLLOW [236] -> SHIFT '(' GOTO 129
	expression/L7 = expression . "&" expression, FOLLOW [236] -> SHIFT '&' GOTO 131
	expression/L7 = expression . "^" expression, FOLLOW [236] -> SHIFT '^' GOTO 132
	indirection = . "->" indirection, FOLLOW [17] -> SHIFT "->" GOTO 133
	indirection = . "->", FOLLOW [17] -> SHIFT "->" GOTO 133
	expression/L3 = expression . "=" expression, FOLLOW [236] -> SHIFT '=' GOTO 134
	expression/L9 = expression . "+" expression, FOLLOW [236] -> SHIFT '+' GOTO 135
	expression/L9 = expression . "-" expression, FOLLOW [236] -> SHIFT '-' GOTO 136
	expression/L10 = expression . "*" expression, FOLLOW [236] -> SHIFT '*' GOTO 137
	expression/L10 = expression . "/" expression, FOLLOW [236] -> SHIFT '/' GOTO 138
	expression/L10 = expression . "%" expression, FOLLOW [236] -> SHIFT '%' GOTO 139
	expression/L5 = expression . "&&" expression, FOLLOW [236] -> SHIFT "&&" GOTO 140
	expression/L4 = expression . "||" expression, FOLLOW [236] -> SHIFT "||" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [236] -> SHIFT '|' GOTO 142
	expression/L11 = expression . "<<" expression, FOLLOW [236] -> SHIFT "<<" GOTO 143
	expression/L11 = expression . ">>" expression, FOLLOW [236] -> SHIFT ">>" GOTO 144
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [236] -> SHIFT '[' GOTO 145
	expression/L8 = expression . "==" expression, FOLLOW [236] -> SHIFT "==" GOTO 146
	expression/L8 = expression . "!=" expression, FOLLOW [236] -> SHIFT "!=" GOTO 147
	expression/L8 = expression . ">=" expression, FOLLOW [236] -> SHIFT ">=" GOTO 148
	expression/L8 = expression . "<=" expression, FOLLOW [236] -> SHIFT "<=" GOTO 149
	expression/L8 = expression . ">" expression, FOLLOW [236] -> SHIFT '>' GOTO 150
	expression/L8 = expression . "<" expression, FOLLOW [236] -> SHIFT '<' GOTO 151
	expression/L3 = expression . "+=" expression, FOLLOW [236] -> SHIFT "+=" GOTO 152
	expression/L3 = expression . "-=" expression, FOLLOW [236] -> SHIFT "-=" GOTO 153
	expression/L3 = expression . "*=" expression, FOLLOW [236] -> SHIFT "*=" GOTO 154
	expression/L3 = expression . "/=" expression, FOLLOW [236] -> SHIFT "/=" GOTO 155
	expression/L3 = expression . "^=" expression, FOLLOW [236] -> SHIFT "^=" GOTO 156
	expression/L3 = expression . "&=" expression, FOLLOW [236] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [236] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "%=" expression, FOLLOW [236] -> SHIFT "%=" GOTO 158
	expression/L3 = expression . "&&=" expression, FOLLOW [236] -> SHIFT "&&=" GOTO 159
	expression/L3 = expression . "||=" expression, FOLLOW [236] -> SHIFT "||=" GOTO 160
	expression/L3 = expression . "|=" expression, FOLLOW [236] -> SHIFT "|=" GOTO 161
	expression/L3 = expression . "<<=" expression, FOLLOW [236] -> SHIFT "<<=" GOTO 162
	expression/L3 = expression . ">>=" expression, FOLLOW [236] -> SHIFT ">>=" GOTO 163
	expression/L12 = expression . "." IDENT, FOLLOW [236] -> SHIFT '.' GOTO 164
	expression/L3 = expression "=" expression . (93), FOLLOW [236] -> REDUCE expression #3 CALL operator "="
[241]
	iexpression = expression . indirection IDENT, FOLLOW [236] -> GOTO 128
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [236] -> SHIFT '(' GOTO 129
	expression/L13 = expression . "(" ")", FOLLOW [236] -> SHIFT '(' GOTO 129
	expression/L7 = expression . "&" expression, FOLLOW [236] -> SHIFT '&' GOTO 131
	expression/L7 = expression . "^" expression, FOLLOW [236] -> SHIFT '^' GOTO 132
	indirection = . "->" indirection, FOLLOW [17] -> SHIFT "->" GOTO 133
	indirection = . "->", FOLLOW [17] -> SHIFT "->" GOTO 133
	expression/L3 = expression . "=" expression, FOLLOW [236] -> SHIFT '=' GOTO 134
	expression/L9 = expression . "+" expression, FOLLOW [236] -> SHIFT '+' GOTO 135
	expression/L9 = expression . "-" expression, FOLLOW [236] -> SHIFT '-' GOTO 136
	expression/L10 = expression . "*" expression, FOLLOW [236] -> SHIFT '*' GOTO 137
	expression/L10 = expression . "/" expression, FOLLOW [236] -> SHIFT '/' GOTO 138
	expression/L10 = expression . "%" expression, FOLLOW [236] -> SHIFT '%' GOTO 139
	expression/L5 = expression . "&&" expression, FOLLOW [236] -> SHIFT "&&" GOTO 140
	expression/L4 = expression . "||" expression, FOLLOW [236] -> SHIFT "||" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [236] -> SHIFT '|' GOTO 142
	expression/L11 = expression . "<<" expression, FOLLOW [236] -> SHIFT "<<" GOTO 143
	expression/L11 = expression . ">>" expression, FOLLOW [236] -> SHIFT ">>" GOTO 144
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [236] -> SHIFT '[' GOTO 145
	expression/L8 = expression . "==" expression, FOLLOW [236] -> SHIFT "==" GOTO 146
	expression/L8 = expression . "!=" expression, FOLLOW [236] -> SHIFT "!=" GOTO 147
	expression/L8 = expression . ">=" expression, FOLLOW [236] -> SHIFT ">=" GOTO 148
	expression/L8 = expression . "<=" expression, FOLLOW [236] -> SHIFT "<=" GOTO 149
	expression/L8 = expression . ">" expression, FOLLOW [236] -> SHIFT '>' GOTO 150
	expression/L8 = expression . "<" expression, FOLLOW [236] -> SHIFT '<' GOTO 151
	expression/L3 = expression . "+=" expression, FOLLOW [236] -> SHIFT "+=" GOTO 152
	expression/L3 = expression . "-=" expression, FOLLOW [236] -> SHIFT "-=" GOTO 153
	expression/L3 = expression . "*=" expression, FOLLOW [236] -> SHIFT "*=" GOTO 154
	expression/L3 = expression . "/=" expression, FOLLOW [236] -> SHIFT "/=" GOTO 155
	expression/L3 = expression . "^=" expression, FOLLOW [236] -> SHIFT "^=" GOTO 156
	expression/L3 = expression . "&=" expression, FOLLOW [236] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [236] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "%=" expression, FOLLOW [236] -> SHIFT "%=" GOTO 158
	expression/L3 = expression . "&&=" expression, FOLLOW [236] -> SHIFT "&&=" GOTO 159
	expression/L3 = expression . "||=" expression, FOLLOW [236] -> SHIFT "||=" GOTO 160
	expression/L3 = expression . "|=" expression, FOLLOW [236] -> SHIFT "|=" GOTO 161
	expression/L3 = expression . "<<=" expression, FOLLOW [236] -> SHIFT "<<=" GOTO 162
	expression/L3 = expression . ">>=" expression, FOLLOW [236] -> SHIFT ">>=" GOTO 163
	expression/L12 = expression . "." IDENT, FOLLOW [236] -> SHIFT '.' GOTO 164
	expression/L9 = expression "+" expression . (117), FOLLOW [236] -> REDUCE expression #3 CALL operator "+"
[242]
	iexpression = expression . indirection IDENT, FOLLOW [236] -> GOTO 128
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [236] -> SHIFT '(' GOTO 129
	expression/L13 = expression . "(" ")", FOLLOW [236] -> SHIFT '(' GOTO 129
	expression/L7 = expression . "&" expression, FOLLOW [236] -> SHIFT '&' GOTO 131
	expression/L7 = expression . "^" expression, FOLLOW [236] -> SHIFT '^' GOTO 132
	indirection = . "->" indirection, FOLLOW [17] -> SHIFT "->" GOTO 133
	indirection = . "->", FOLLOW [17] -> SHIFT "->" GOTO 133
	expression/L3 = expression . "=" expression, FOLLOW [236] -> SHIFT '=' GOTO 134
	expression/L9 = expression . "+" expression, FOLLOW [236] -> SHIFT '+' GOTO 135
	expression/L9 = expression . "-" expression, FOLLOW [236] -> SHIFT '-' GOTO 136
	expression/L10 = expression . "*" expression, FOLLOW [236] -> SHIFT '*' GOTO 137
	expression/L10 = expression . "/" expression, FOLLOW [236] -> SHIFT '/' GOTO 138
	expression/L10 = expression . "%" expression, FOLLOW [236] -> SHIFT '%' GOTO 139
	expression/L5 = expression . "&&" expression, FOLLOW [236] -> SHIFT "&&" GOTO 140
	expression/L4 = expression . "||" expression, FOLLOW [236] -> SHIFT "||" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [236] -> SHIFT '|' GOTO 142
	expression/L11 = expression . "<<" expression, FOLLOW [236] -> SHIFT "<<" GOTO 143
	expression/L11 = expression . ">>" expression, FOLLOW [236] -> SHIFT ">>" GOTO 144
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [236] -> SHIFT '[' GOTO 145
	expression/L8 = expression . "==" expression, FOLLOW [236] -> SHIFT "==" GOTO 146
	expression/L8 = expression . "!=" expression, FOLLOW [236] -> SHIFT "!=" GOTO 147
	expression/L8 = expression . ">=" expression, FOLLOW [236] -> SHIFT ">=" GOTO 148
	expression/L8 = expression . "<=" expression, FOLLOW [236] -> SHIFT "<=" GOTO 149
	expression/L8 = expression . ">" expression, FOLLOW [236] -> SHIFT '>' GOTO 150
	expression/L8 = expression . "<" expression, FOLLOW [236] -> SHIFT '<' GOTO 151
	expression/L3 = expression . "+=" expression, FOLLOW [236] -> SHIFT "+=" GOTO 152
	expression/L3 = expression . "-=" expression, FOLLOW [236] -> SHIFT "-=" GOTO 153
	expression/L3 = expression . "*=" expression, FOLLOW [236] -> SHIFT "*=" GOTO 154
	expression/L3 = expression . "/=" expression, FOLLOW [236] -> SHIFT "/=" GOTO 155
	expression/L3 = expression . "^=" expression, FOLLOW [236] -> SHIFT "^=" GOTO 156
	expression/L3 = expression . "&=" expression, FOLLOW [236] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [236] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "%=" expression, FOLLOW [236] -> SHIFT "%=" GOTO 158
	expression/L3 = expression . "&&=" expression, FOLLOW [236] -> SHIFT "&&=" GOTO 159
	expression/L3 = expression . "||=" expression, FOLLOW [236] -> SHIFT "||=" GOTO 160
	expression/L3 = expression . "|=" expression, FOLLOW [236] -> SHIFT "|=" GOTO 161
	expression/L3 = expression . "<<=" expression, FOLLOW [236] -> SHIFT "<<=" GOTO 162
	expression/L3 = expression . ">>=" expression, FOLLOW [236] -> SHIFT ">>=" GOTO 163
	expression/L12 = expression . "." IDENT, FOLLOW [236] -> SHIFT '.' GOTO 164
	expression/L9 = expression "-" expression . (118), FOLLOW [236] -> REDUCE expression #3 CALL operator "-"
[243]
	iexpression = expression . indirection IDENT, FOLLOW [236] -> GOTO 128
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [236] -> SHIFT '(' GOTO 129
	expression/L13 = expression . "(" ")", FOLLOW [236] -> SHIFT '(' GOTO 129
	expression/L7 = expression . "&" expression, FOLLOW [236] -> SHIFT '&' GOTO 131
	expression/L7 = expression . "^" expression, FOLLOW [236] -> SHIFT '^' GOTO 132
	indirection = . "->" indirection, FOLLOW [17] -> SHIFT "->" GOTO 133
	indirection = . "->", FOLLOW [17] -> SHIFT "->" GOTO 133
	expression/L3 = expression . "=" expression, FOLLOW [236] -> SHIFT '=' GOTO 134
	expression/L9 = expression . "+" expression, FOLLOW [236] -> SHIFT '+' GOTO 135
	expression/L9 = expression . "-" expression, FOLLOW [236] -> SHIFT '-' GOTO 136
	expression/L10 = expression . "*" expression, FOLLOW [236] -> SHIFT '*' GOTO 137
	expression/L10 = expression . "/" expression, FOLLOW [236] -> SHIFT '/' GOTO 138
	expression/L10 = expression . "%" expression, FOLLOW [236] -> SHIFT '%' GOTO 139
	expression/L5 = expression . "&&" expression, FOLLOW [236] -> SHIFT "&&" GOTO 140
	expression/L4 = expression . "||" expression, FOLLOW [236] -> SHIFT "||" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [236] -> SHIFT '|' GOTO 142
	expression/L11 = expression . "<<" expression, FOLLOW [236] -> SHIFT "<<" GOTO 143
	expression/L11 = expression . ">>" expression, FOLLOW [236] -> SHIFT ">>" GOTO 144
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [236] -> SHIFT '[' GOTO 145
	expression/L8 = expression . "==" expression, FOLLOW [236] -> SHIFT "==" GOTO 146
	expression/L8 = expression . "!=" expression, FOLLOW [236] -> SHIFT "!=" GOTO 147
	expression/L8 = expression . ">=" expression, FOLLOW [236] -> SHIFT ">=" GOTO 148
	expression/L8 = expression . "<=" expression, FOLLOW [236] -> SHIFT "<=" GOTO 149
	expression/L8 = expression . ">" expression, FOLLOW [236] -> SHIFT '>' GOTO 150
	expression/L8 = expression . "<" expression, FOLLOW [236] -> SHIFT '<' GOTO 151
	expression/L3 = expression . "+=" expression, FOLLOW [236] -> SHIFT "+=" GOTO 152
	expression/L3 = expression . "-=" expression, FOLLOW [236] -> SHIFT "-=" GOTO 153
	expression/L3 = expression . "*=" expression, FOLLOW [236] -> SHIFT "*=" GOTO 154
	expression/L3 = expression . "/=" expression, FOLLOW [236] -> SHIFT "/=" GOTO 155
	expression/L3 = expression . "^=" expression, FOLLOW [236] -> SHIFT "^=" GOTO 156
	expression/L3 = expression . "&=" expression, FOLLOW [236] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [236] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "%=" expression, FOLLOW [236] -> SHIFT "%=" GOTO 158
	expression/L3 = expression . "&&=" expression, FOLLOW [236] -> SHIFT "&&=" GOTO 159
	expression/L3 = expression . "||=" expression, FOLLOW [236] -> SHIFT "||=" GOTO 160
	expression/L3 = expression . "|=" expression, FOLLOW [236] -> SHIFT "|=" GOTO 161
	expression/L3 = expression . "<<=" expression, FOLLOW [236] -> SHIFT "<<=" GOTO 162
	expression/L3 = expression . ">>=" expression, FOLLOW [236] -> SHIFT ">>=" GOTO 163
	expression/L12 = expression . "." IDENT, FOLLOW [236] -> SHIFT '.' GOTO 164
	expression/L10 = expression "*" expression . (121), FOLLOW [236] -> REDUCE expression #3 CALL operator "*"
[244]
	iexpression = expression . indirection IDENT, FOLLOW [236] -> GOTO 128
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [236] -> SHIFT '(' GOTO 129
	expression/L13 = expression . "(" ")", FOLLOW [236] -> SHIFT '(' GOTO 129
	expression/L7 = expression . "&" expression, FOLLOW [236] -> SHIFT '&' GOTO 131
	expression/L7 = expression . "^" expression, FOLLOW [236] -> SHIFT '^' GOTO 132
	indirection = . "->" indirection, FOLLOW [17] -> SHIFT "->" GOTO 133
	indirection = . "->", FOLLOW [17] -> SHIFT "->" GOTO 133
	expression/L3 = expression . "=" expression, FOLLOW [236] -> SHIFT '=' GOTO 134
	expression/L9 = expression . "+" expression, FOLLOW [236] -> SHIFT '+' GOTO 135
	expression/L9 = expression . "-" expression, FOLLOW [236] -> SHIFT '-' GOTO 136
	expression/L10 = expression . "*" expression, FOLLOW [236] -> SHIFT '*' GOTO 137
	expression/L10 = expression . "/" expression, FOLLOW [236] -> SHIFT '/' GOTO 138
	expression/L10 = expression . "%" expression, FOLLOW [236] -> SHIFT '%' GOTO 139
	expression/L5 = expression . "&&" expression, FOLLOW [236] -> SHIFT "&&" GOTO 140
	expression/L4 = expression . "||" expression, FOLLOW [236] -> SHIFT "||" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [236] -> SHIFT '|' GOTO 142
	expression/L11 = expression . "<<" expression, FOLLOW [236] -> SHIFT "<<" GOTO 143
	expression/L11 = expression . ">>" expression, FOLLOW [236] -> SHIFT ">>" GOTO 144
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [236] -> SHIFT '[' GOTO 145
	expression/L8 = expression . "==" expression, FOLLOW [236] -> SHIFT "==" GOTO 146
	expression/L8 = expression . "!=" expression, FOLLOW [236] -> SHIFT "!=" GOTO 147
	expression/L8 = expression . ">=" expression, FOLLOW [236] -> SHIFT ">=" GOTO 148
	expression/L8 = expression . "<=" expression, FOLLOW [236] -> SHIFT "<=" GOTO 149
	expression/L8 = expression . ">" expression, FOLLOW [236] -> SHIFT '>' GOTO 150
	expression/L8 = expression . "<" expression, FOLLOW [236] -> SHIFT '<' GOTO 151
	expression/L3 = expression . "+=" expression, FOLLOW [236] -> SHIFT "+=" GOTO 152
	expression/L3 = expression . "-=" expression, FOLLOW [236] -> SHIFT "-=" GOTO 153
	expression/L3 = expression . "*=" expression, FOLLOW [236] -> SHIFT "*=" GOTO 154
	expression/L3 = expression . "/=" expression, FOLLOW [236] -> SHIFT "/=" GOTO 155
	expression/L3 = expression . "^=" expression, FOLLOW [236] -> SHIFT "^=" GOTO 156
	expression/L3 = expression . "&=" expression, FOLLOW [236] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [236] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "%=" expression, FOLLOW [236] -> SHIFT "%=" GOTO 158
	expression/L3 = expression . "&&=" expression, FOLLOW [236] -> SHIFT "&&=" GOTO 159
	expression/L3 = expression . "||=" expression, FOLLOW [236] -> SHIFT "||=" GOTO 160
	expression/L3 = expression . "|=" expression, FOLLOW [236] -> SHIFT "|=" GOTO 161
	expression/L3 = expression . "<<=" expression, FOLLOW [236] -> SHIFT "<<=" GOTO 162
	expression/L3 = expression . ">>=" expression, FOLLOW [236] -> SHIFT ">>=" GOTO 163
	expression/L12 = expression . "." IDENT, FOLLOW [236] -> SHIFT '.' GOTO 164
	expression/L10 = expression "/" expression . (122), FOLLOW [236] -> REDUCE expression #3 CALL operator "/"
[245]
	iexpression = expression . indirection IDENT, FOLLOW [236] -> GOTO 128
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [236] -> SHIFT '(' GOTO 129
	expression/L13 = expression . "(" ")", FOLLOW [236] -> SHIFT '(' GOTO 129
	expression/L7 = expression . "&" expression, FOLLOW [236] -> SHIFT '&' GOTO 131
	expression/L7 = expression . "^" expression, FOLLOW [236] -> SHIFT '^' GOTO 132
	indirection = . "->" indirection, FOLLOW [17] -> SHIFT "->" GOTO 133
	indirection = . "->", FOLLOW [17] -> SHIFT "->" GOTO 133
	expression/L3 = expression . "=" expression, FOLLOW [236] -> SHIFT '=' GOTO 134
	expression/L9 = expression . "+" expression, FOLLOW [236] -> SHIFT '+' GOTO 135
	expression/L9 = expression . "-" expression, FOLLOW [236] -> SHIFT '-' GOTO 136
	expression/L10 = expression . "*" expression, FOLLOW [236] -> SHIFT '*' GOTO 137
	expression/L10 = expression . "/" expression, FOLLOW [236] -> SHIFT '/' GOTO 138
	expression/L10 = expression . "%" expression, FOLLOW [236] -> SHIFT '%' GOTO 139
	expression/L5 = expression . "&&" expression, FOLLOW [236] -> SHIFT "&&" GOTO 140
	expression/L4 = expression . "||" expression, FOLLOW [236] -> SHIFT "||" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [236] -> SHIFT '|' GOTO 142
	expression/L11 = expression . "<<" expression, FOLLOW [236] -> SHIFT "<<" GOTO 143
	expression/L11 = expression . ">>" expression, FOLLOW [236] -> SHIFT ">>" GOTO 144
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [236] -> SHIFT '[' GOTO 145
	expression/L8 = expression . "==" expression, FOLLOW [236] -> SHIFT "==" GOTO 146
	expression/L8 = expression . "!=" expression, FOLLOW [236] -> SHIFT "!=" GOTO 147
	expression/L8 = expression . ">=" expression, FOLLOW [236] -> SHIFT ">=" GOTO 148
	expression/L8 = expression . "<=" expression, FOLLOW [236] -> SHIFT "<=" GOTO 149
	expression/L8 = expression . ">" expression, FOLLOW [236] -> SHIFT '>' GOTO 150
	expression/L8 = expression . "<" expression, FOLLOW [236] -> SHIFT '<' GOTO 151
	expression/L3 = expression . "+=" expression, FOLLOW [236] -> SHIFT "+=" GOTO 152
	expression/L3 = expression . "-=" expression, FOLLOW [236] -> SHIFT "-=" GOTO 153
	expression/L3 = expression . "*=" expression, FOLLOW [236] -> SHIFT "*=" GOTO 154
	expression/L3 = expression . "/=" expression, FOLLOW [236] -> SHIFT "/=" GOTO 155
	expression/L3 = expression . "^=" expression, FOLLOW [236] -> SHIFT "^=" GOTO 156
	expression/L3 = expression . "&=" expression, FOLLOW [236] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [236] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "%=" expression, FOLLOW [236] -> SHIFT "%=" GOTO 158
	expression/L3 = expression . "&&=" expression, FOLLOW [236] -> SHIFT "&&=" GOTO 159
	expression/L3 = expression . "||=" expression, FOLLOW [236] -> SHIFT "||=" GOTO 160
	expression/L3 = expression . "|=" expression, FOLLOW [236] -> SHIFT "|=" GOTO 161
	expression/L3 = expression . "<<=" expression, FOLLOW [236] -> SHIFT "<<=" GOTO 162
	expression/L3 = expression . ">>=" expression, FOLLOW [236] -> SHIFT ">>=" GOTO 163
	expression/L12 = expression . "." IDENT, FOLLOW [236] -> SHIFT '.' GOTO 164
	expression/L10 = expression "%" expression . (123), FOLLOW [236] -> REDUCE expression #3 CALL operator "%"
[246]
	iexpression = expression . indirection IDENT, FOLLOW [236] -> GOTO 128
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [236] -> SHIFT '(' GOTO 129
	expression/L13 = expression . "(" ")", FOLLOW [236] -> SHIFT '(' GOTO 129
	expression/L7 = expression . "&" expression, FOLLOW [236] -> SHIFT '&' GOTO 131
	expression/L7 = expression . "^" expression, FOLLOW [236] -> SHIFT '^' GOTO 132
	indirection = . "->" indirection, FOLLOW [17] -> SHIFT "->" GOTO 133
	indirection = . "->", FOLLOW [17] -> SHIFT "->" GOTO 133
	expression/L3 = expression . "=" expression, FOLLOW [236] -> SHIFT '=' GOTO 134
	expression/L9 = expression . "+" expression, FOLLOW [236] -> SHIFT '+' GOTO 135
	expression/L9 = expression . "-" expression, FOLLOW [236] -> SHIFT '-' GOTO 136
	expression/L10 = expression . "*" expression, FOLLOW [236] -> SHIFT '*' GOTO 137
	expression/L10 = expression . "/" expression, FOLLOW [236] -> SHIFT '/' GOTO 138
	expression/L10 = expression . "%" expression, FOLLOW [236] -> SHIFT '%' GOTO 139
	expression/L5 = expression . "&&" expression, FOLLOW [236] -> SHIFT "&&" GOTO 140
	expression/L4 = expression . "||" expression, FOLLOW [236] -> SHIFT "||" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [236] -> SHIFT '|' GOTO 142
	expression/L11 = expression . "<<" expression, FOLLOW [236] -> SHIFT "<<" GOTO 143
	expression/L11 = expression . ">>" expression, FOLLOW [236] -> SHIFT ">>" GOTO 144
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [236] -> SHIFT '[' GOTO 145
	expression/L8 = expression . "==" expression, FOLLOW [236] -> SHIFT "==" GOTO 146
	expression/L8 = expression . "!=" expression, FOLLOW [236] -> SHIFT "!=" GOTO 147
	expression/L8 = expression . ">=" expression, FOLLOW [236] -> SHIFT ">=" GOTO 148
	expression/L8 = expression . "<=" expression, FOLLOW [236] -> SHIFT "<=" GOTO 149
	expression/L8 = expression . ">" expression, FOLLOW [236] -> SHIFT '>' GOTO 150
	expression/L8 = expression . "<" expression, FOLLOW [236] -> SHIFT '<' GOTO 151
	expression/L3 = expression . "+=" expression, FOLLOW [236] -> SHIFT "+=" GOTO 152
	expression/L3 = expression . "-=" expression, FOLLOW [236] -> SHIFT "-=" GOTO 153
	expression/L3 = expression . "*=" expression, FOLLOW [236] -> SHIFT "*=" GOTO 154
	expression/L3 = expression . "/=" expression, FOLLOW [236] -> SHIFT "/=" GOTO 155
	expression/L3 = expression . "^=" expression, FOLLOW [236] -> SHIFT "^=" GOTO 156
	expression/L3 = expression . "&=" expression, FOLLOW [236] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [236] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "%=" expression, FOLLOW [236] -> SHIFT "%=" GOTO 158
	expression/L3 = expression . "&&=" expression, FOLLOW [236] -> SHIFT "&&=" GOTO 159
	expression/L3 = expression . "||=" expression, FOLLOW [236] -> SHIFT "||=" GOTO 160
	expression/L3 = expression . "|=" expression, FOLLOW [236] -> SHIFT "|=" GOTO 161
	expression/L3 = expression . "<<=" expression, FOLLOW [236] -> SHIFT "<<=" GOTO 162
	expression/L3 = expression . ">>=" expression, FOLLOW [236] -> SHIFT ">>=" GOTO 163
	expression/L12 = expression . "." IDENT, FOLLOW [236] -> SHIFT '.' GOTO 164
	expression/L5 = expression "&&" expression . (107), FOLLOW [236] -> REDUCE expression #3 CALL operator "&&"
[247]
	iexpression = expression . indirection IDENT, FOLLOW [236] -> GOTO 128
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [236] -> SHIFT '(' GOTO 129
	expression/L13 = expression . "(" ")", FOLLOW [236] -> SHIFT '(' GOTO 129
	expression/L7 = expression . "&" expression, FOLLOW [236] -> SHIFT '&' GOTO 131
	expression/L7 = expression . "^" expression, FOLLOW [236] -> SHIFT '^' GOTO 132
	indirection = . "->" indirection, FOLLOW [17] -> SHIFT "->" GOTO 133
	indirection = . "->", FOLLOW [17] -> SHIFT "->" GOTO 133
	expression/L3 = expression . "=" expression, FOLLOW [236] -> SHIFT '=' GOTO 134
	expression/L9 = expression . "+" expression, FOLLOW [236] -> SHIFT '+' GOTO 135
	expression/L9 = expression . "-" expression, FOLLOW [236] -> SHIFT '-' GOTO 136
	expression/L10 = expression . "*" expression, FOLLOW [236] -> SHIFT '*' GOTO 137
	expression/L10 = expression . "/" expression, FOLLOW [236] -> SHIFT '/' GOTO 138
	expression/L10 = expression . "%" expression, FOLLOW [236] -> SHIFT '%' GOTO 139
	expression/L5 = expression . "&&" expression, FOLLOW [236] -> SHIFT "&&" GOTO 140
	expression/L4 = expression . "||" expression, FOLLOW [236] -> SHIFT "||" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [236] -> SHIFT '|' GOTO 142
	expression/L11 = expression . "<<" expression, FOLLOW [236] -> SHIFT "<<" GOTO 143
	expression/L11 = expression . ">>" expression, FOLLOW [236] -> SHIFT ">>" GOTO 144
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [236] -> SHIFT '[' GOTO 145
	expression/L8 = expression . "==" expression, FOLLOW [236] -> SHIFT "==" GOTO 146
	expression/L8 = expression . "!=" expression, FOLLOW [236] -> SHIFT "!=" GOTO 147
	expression/L8 = expression . ">=" expression, FOLLOW [236] -> SHIFT ">=" GOTO 148
	expression/L8 = expression . "<=" expression, FOLLOW [236] -> SHIFT "<=" GOTO 149
	expression/L8 = expression . ">" expression, FOLLOW [236] -> SHIFT '>' GOTO 150
	expression/L8 = expression . "<" expression, FOLLOW [236] -> SHIFT '<' GOTO 151
	expression/L3 = expression . "+=" expression, FOLLOW [236] -> SHIFT "+=" GOTO 152
	expression/L3 = expression . "-=" expression, FOLLOW [236] -> SHIFT "-=" GOTO 153
	expression/L3 = expression . "*=" expression, FOLLOW [236] -> SHIFT "*=" GOTO 154
	expression/L3 = expression . "/=" expression, FOLLOW [236] -> SHIFT "/=" GOTO 155
	expression/L3 = expression . "^=" expression, FOLLOW [236] -> SHIFT "^=" GOTO 156
	expression/L3 = expression . "&=" expression, FOLLOW [236] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [236] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "%=" expression, FOLLOW [236] -> SHIFT "%=" GOTO 158
	expression/L3 = expression . "&&=" expression, FOLLOW [236] -> SHIFT "&&=" GOTO 159
	expression/L3 = expression . "||=" expression, FOLLOW [236] -> SHIFT "||=" GOTO 160
	expression/L3 = expression . "|=" expression, FOLLOW [236] -> SHIFT "|=" GOTO 161
	expression/L3 = expression . "<<=" expression, FOLLOW [236] -> SHIFT "<<=" GOTO 162
	expression/L3 = expression . ">>=" expression, FOLLOW [236] -> SHIFT ">>=" GOTO 163
	expression/L12 = expression . "." IDENT, FOLLOW [236] -> SHIFT '.' GOTO 164
	expression/L4 = expression "||" expression . (106), FOLLOW [236] -> REDUCE expression #3 CALL operator "||"
[248]
	iexpression = expression . indirection IDENT, FOLLOW [236] -> GOTO 128
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [236] -> SHIFT '(' GOTO 129
	expression/L13 = expression . "(" ")", FOLLOW [236] -> SHIFT '(' GOTO 129
	expression/L7 = expression . "&" expression, FOLLOW [236] -> SHIFT '&' GOTO 131
	expression/L7 = expression . "^" expression, FOLLOW [236] -> SHIFT '^' GOTO 132
	indirection = . "->" indirection, FOLLOW [17] -> SHIFT "->" GOTO 133
	indirection = . "->", FOLLOW [17] -> SHIFT "->" GOTO 133
	expression/L3 = expression . "=" expression, FOLLOW [236] -> SHIFT '=' GOTO 134
	expression/L9 = expression . "+" expression, FOLLOW [236] -> SHIFT '+' GOTO 135
	expression/L9 = expression . "-" expression, FOLLOW [236] -> SHIFT '-' GOTO 136
	expression/L10 = expression . "*" expression, FOLLOW [236] -> SHIFT '*' GOTO 137
	expression/L10 = expression . "/" expression, FOLLOW [236] -> SHIFT '/' GOTO 138
	expression/L10 = expression . "%" expression, FOLLOW [236] -> SHIFT '%' GOTO 139
	expression/L5 = expression . "&&" expression, FOLLOW [236] -> SHIFT "&&" GOTO 140
	expression/L4 = expression . "||" expression, FOLLOW [236] -> SHIFT "||" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [236] -> SHIFT '|' GOTO 142
	expression/L11 = expression . "<<" expression, FOLLOW [236] -> SHIFT "<<" GOTO 143
	expression/L11 = expression . ">>" expression, FOLLOW [236] -> SHIFT ">>" GOTO 144
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [236] -> SHIFT '[' GOTO 145
	expression/L8 = expression . "==" expression, FOLLOW [236] -> SHIFT "==" GOTO 146
	expression/L8 = expression . "!=" expression, FOLLOW [236] -> SHIFT "!=" GOTO 147
	expression/L8 = expression . ">=" expression, FOLLOW [236] -> SHIFT ">=" GOTO 148
	expression/L8 = expression . "<=" expression, FOLLOW [236] -> SHIFT "<=" GOTO 149
	expression/L8 = expression . ">" expression, FOLLOW [236] -> SHIFT '>' GOTO 150
	expression/L8 = expression . "<" expression, FOLLOW [236] -> SHIFT '<' GOTO 151
	expression/L3 = expression . "+=" expression, FOLLOW [236] -> SHIFT "+=" GOTO 152
	expression/L3 = expression . "-=" expression, FOLLOW [236] -> SHIFT "-=" GOTO 153
	expression/L3 = expression . "*=" expression, FOLLOW [236] -> SHIFT "*=" GOTO 154
	expression/L3 = expression . "/=" expression, FOLLOW [236] -> SHIFT "/=" GOTO 155
	expression/L3 = expression . "^=" expression, FOLLOW [236] -> SHIFT "^=" GOTO 156
	expression/L3 = expression . "&=" expression, FOLLOW [236] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [236] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "%=" expression, FOLLOW [236] -> SHIFT "%=" GOTO 158
	expression/L3 = expression . "&&=" expression, FOLLOW [236] -> SHIFT "&&=" GOTO 159
	expression/L3 = expression . "||=" expression, FOLLOW [236] -> SHIFT "||=" GOTO 160
	expression/L3 = expression . "|=" expression, FOLLOW [236] -> SHIFT "|=" GOTO 161
	expression/L3 = expression . "<<=" expression, FOLLOW [236] -> SHIFT "<<=" GOTO 162
	expression/L3 = expression . ">>=" expression, FOLLOW [236] -> SHIFT ">>=" GOTO 163
	expression/L12 = expression . "." IDENT, FOLLOW [236] -> SHIFT '.' GOTO 164
	expression/L6 = expression "|" expression . (108), FOLLOW [236] -> REDUCE expression #3 CALL operator "|"
[249]
	iexpression = expression . indirection IDENT, FOLLOW [236] -> GOTO 128
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [236] -> SHIFT '(' GOTO 129
	expression/L13 = expression . "(" ")", FOLLOW [236] -> SHIFT '(' GOTO 129
	expression/L7 = expression . "&" expression, FOLLOW [236] -> SHIFT '&' GOTO 131
	expression/L7 = expression . "^" expression, FOLLOW [236] -> SHIFT '^' GOTO 132
	indirection = . "->" indirection, FOLLOW [17] -> SHIFT "->" GOTO 133
	indirection = . "->", FOLLOW [17] -> SHIFT "->" GOTO 133
	expression/L3 = expression . "=" expression, FOLLOW [236] -> SHIFT '=' GOTO 134
	expression/L9 = expression . "+" expression, FOLLOW [236] -> SHIFT '+' GOTO 135
	expression/L9 = expression . "-" expression, FOLLOW [236] -> SHIFT '-' GOTO 136
	expression/L10 = expression . "*" expression, FOLLOW [236] -> SHIFT '*' GOTO 137
	expression/L10 = expression . "/" expression, FOLLOW [236] -> SHIFT '/' GOTO 138
	expression/L10 = expression . "%" expression, FOLLOW [236] -> SHIFT '%' GOTO 139
	expression/L5 = expression . "&&" expression, FOLLOW [236] -> SHIFT "&&" GOTO 140
	expression/L4 = expression . "||" expression, FOLLOW [236] -> SHIFT "||" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [236] -> SHIFT '|' GOTO 142
	expression/L11 = expression . "<<" expression, FOLLOW [236] -> SHIFT "<<" GOTO 143
	expression/L11 = expression . ">>" expression, FOLLOW [236] -> SHIFT ">>" GOTO 144
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [236] -> SHIFT '[' GOTO 145
	expression/L8 = expression . "==" expression, FOLLOW [236] -> SHIFT "==" GOTO 146
	expression/L8 = expression . "!=" expression, FOLLOW [236] -> SHIFT "!=" GOTO 147
	expression/L8 = expression . ">=" expression, FOLLOW [236] -> SHIFT ">=" GOTO 148
	expression/L8 = expression . "<=" expression, FOLLOW [236] -> SHIFT "<=" GOTO 149
	expression/L8 = expression . ">" expression, FOLLOW [236] -> SHIFT '>' GOTO 150
	expression/L8 = expression . "<" expression, FOLLOW [236] -> SHIFT '<' GOTO 151
	expression/L3 = expression . "+=" expression, FOLLOW [236] -> SHIFT "+=" GOTO 152
	expression/L3 = expression . "-=" expression, FOLLOW [236] -> SHIFT "-=" GOTO 153
	expression/L3 = expression . "*=" expression, FOLLOW [236] -> SHIFT "*=" GOTO 154
	expression/L3 = expression . "/=" expression, FOLLOW [236] -> SHIFT "/=" GOTO 155
	expression/L3 = expression . "^=" expression, FOLLOW [236] -> SHIFT "^=" GOTO 156
	expression/L3 = expression . "&=" expression, FOLLOW [236] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [236] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "%=" expression, FOLLOW [236] -> SHIFT "%=" GOTO 158
	expression/L3 = expression . "&&=" expression, FOLLOW [236] -> SHIFT "&&=" GOTO 159
	expression/L3 = expression . "||=" expression, FOLLOW [236] -> SHIFT "||=" GOTO 160
	expression/L3 = expression . "|=" expression, FOLLOW [236] -> SHIFT "|=" GOTO 161
	expression/L3 = expression . "<<=" expression, FOLLOW [236] -> SHIFT "<<=" GOTO 162
	expression/L3 = expression . ">>=" expression, FOLLOW [236] -> SHIFT ">>=" GOTO 163
	expression/L12 = expression . "." IDENT, FOLLOW [236] -> SHIFT '.' GOTO 164
	expression/L11 = expression "<<" expression . (124), FOLLOW [236] -> REDUCE expression #3 CALL operator "<<"
[250]
	iexpression = expression . indirection IDENT, FOLLOW [236] -> GOTO 128
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [236] -> SHIFT '(' GOTO 129
	expression/L13 = expression . "(" ")", FOLLOW [236] -> SHIFT '(' GOTO 129
	expression/L7 = expression . "&" expression, FOLLOW [236] -> SHIFT '&' GOTO 131
	expression/L7 = expression . "^" expression, FOLLOW [236] -> SHIFT '^' GOTO 132
	indirection = . "->" indirection, FOLLOW [17] -> SHIFT "->" GOTO 133
	indirection = . "->", FOLLOW [17] -> SHIFT "->" GOTO 133
	expression/L3 = expression . "=" expression, FOLLOW [236] -> SHIFT '=' GOTO 134
	expression/L9 = expression . "+" expression, FOLLOW [236] -> SHIFT '+' GOTO 135
	expression/L9 = expression . "-" expression, FOLLOW [236] -> SHIFT '-' GOTO 136
	expression/L10 = expression . "*" expression, FOLLOW [236] -> SHIFT '*' GOTO 137
	expression/L10 = expression . "/" expression, FOLLOW [236] -> SHIFT '/' GOTO 138
	expression/L10 = expression . "%" expression, FOLLOW [236] -> SHIFT '%' GOTO 139
	expression/L5 = expression . "&&" expression, FOLLOW [236] -> SHIFT "&&" GOTO 140
	expression/L4 = expression . "||" expression, FOLLOW [236] -> SHIFT "||" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [236] -> SHIFT '|' GOTO 142
	expression/L11 = expression . "<<" expression, FOLLOW [236] -> SHIFT "<<" GOTO 143
	expression/L11 = expression . ">>" expression, FOLLOW [236] -> SHIFT ">>" GOTO 144
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [236] -> SHIFT '[' GOTO 145
	expression/L8 = expression . "==" expression, FOLLOW [236] -> SHIFT "==" GOTO 146
	expression/L8 = expression . "!=" expression, FOLLOW [236] -> SHIFT "!=" GOTO 147
	expression/L8 = expression . ">=" expression, FOLLOW [236] -> SHIFT ">=" GOTO 148
	expression/L8 = expression . "<=" expression, FOLLOW [236] -> SHIFT "<=" GOTO 149
	expression/L8 = expression . ">" expression, FOLLOW [236] -> SHIFT '>' GOTO 150
	expression/L8 = expression . "<" expression, FOLLOW [236] -> SHIFT '<' GOTO 151
	expression/L3 = expression . "+=" expression, FOLLOW [236] -> SHIFT "+=" GOTO 152
	expression/L3 = expression . "-=" expression, FOLLOW [236] -> SHIFT "-=" GOTO 153
	expression/L3 = expression . "*=" expression, FOLLOW [236] -> SHIFT "*=" GOTO 154
	expression/L3 = expression . "/=" expression, FOLLOW [236] -> SHIFT "/=" GOTO 155
	expression/L3 = expression . "^=" expression, FOLLOW [236] -> SHIFT "^=" GOTO 156
	expression/L3 = expression . "&=" expression, FOLLOW [236] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [236] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "%=" expression, FOLLOW [236] -> SHIFT "%=" GOTO 158
	expression/L3 = expression . "&&=" expression, FOLLOW [236] -> SHIFT "&&=" GOTO 159
	expression/L3 = expression . "||=" expression, FOLLOW [236] -> SHIFT "||=" GOTO 160
	expression/L3 = expression . "|=" expression, FOLLOW [236] -> SHIFT "|=" GOTO 161
	expression/L3 = expression . "<<=" expression, FOLLOW [236] -> SHIFT "<<=" GOTO 162
	expression/L3 = expression . ">>=" expression, FOLLOW [236] -> SHIFT ">>=" GOTO 163
	expression/L12 = expression . "." IDENT, FOLLOW [236] -> SHIFT '.' GOTO 164
	expression/L11 = expression ">>" expression . (125), FOLLOW [236] -> REDUCE expression #3 CALL operator ">>"
[251]
	expression/L13 = expression "[" expressionlist . "]", FOLLOW [236] -> SHIFT ']' GOTO 302
[252]
	iexpression = expression . indirection IDENT, FOLLOW [236] -> GOTO 128
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [236] -> SHIFT '(' GOTO 129
	expression/L13 = expression . "(" ")", FOLLOW [236] -> SHIFT '(' GOTO 129
	expression/L7 = expression . "&" expression, FOLLOW [236] -> SHIFT '&' GOTO 131
	expression/L7 = expression . "^" expression, FOLLOW [236] -> SHIFT '^' GOTO 132
	indirection = . "->" indirection, FOLLOW [17] -> SHIFT "->" GOTO 133
	indirection = . "->", FOLLOW [17] -> SHIFT "->" GOTO 133
	expression/L3 = expression . "=" expression, FOLLOW [236] -> SHIFT '=' GOTO 134
	expression/L9 = expression . "+" expression, FOLLOW [236] -> SHIFT '+' GOTO 135
	expression/L9 = expression . "-" expression, FOLLOW [236] -> SHIFT '-' GOTO 136
	expression/L10 = expression . "*" expression, FOLLOW [236] -> SHIFT '*' GOTO 137
	expression/L10 = expression . "/" expression, FOLLOW [236] -> SHIFT '/' GOTO 138
	expression/L10 = expression . "%" expression, FOLLOW [236] -> SHIFT '%' GOTO 139
	expression/L5 = expression . "&&" expression, FOLLOW [236] -> SHIFT "&&" GOTO 140
	expression/L4 = expression . "||" expression, FOLLOW [236] -> SHIFT "||" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [236] -> SHIFT '|' GOTO 142
	expression/L11 = expression . "<<" expression, FOLLOW [236] -> SHIFT "<<" GOTO 143
	expression/L11 = expression . ">>" expression, FOLLOW [236] -> SHIFT ">>" GOTO 144
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [236] -> SHIFT '[' GOTO 145
	expression/L8 = expression . "==" expression, FOLLOW [236] -> SHIFT "==" GOTO 146
	expression/L8 = expression . "!=" expression, FOLLOW [236] -> SHIFT "!=" GOTO 147
	expression/L8 = expression . ">=" expression, FOLLOW [236] -> SHIFT ">=" GOTO 148
	expression/L8 = expression . "<=" expression, FOLLOW [236] -> SHIFT "<=" GOTO 149
	expression/L8 = expression . ">" expression, FOLLOW [236] -> SHIFT '>' GOTO 150
	expression/L8 = expression . "<" expression, FOLLOW [236] -> SHIFT '<' GOTO 151
	expression/L3 = expression . "+=" expression, FOLLOW [236] -> SHIFT "+=" GOTO 152
	expression/L3 = expression . "-=" expression, FOLLOW [236] -> SHIFT "-=" GOTO 153
	expression/L3 = expression . "*=" expression, FOLLOW [236] -> SHIFT "*=" GOTO 154
	expression/L3 = expression . "/=" expression, FOLLOW [236] -> SHIFT "/=" GOTO 155
	expression/L3 = expression . "^=" expression, FOLLOW [236] -> SHIFT "^=" GOTO 156
	expression/L3 = expression . "&=" expression, FOLLOW [236] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [236] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "%=" expression, FOLLOW [236] -> SHIFT "%=" GOTO 158
	expression/L3 = expression . "&&=" expression, FOLLOW [236] -> SHIFT "&&=" GOTO 159
	expression/L3 = expression . "||=" expression, FOLLOW [236] -> SHIFT "||=" GOTO 160
	expression/L3 = expression . "|=" expression, FOLLOW [236] -> SHIFT "|=" GOTO 161
	expression/L3 = expression . "<<=" expression, FOLLOW [236] -> SHIFT "<<=" GOTO 162
	expression/L3 = expression . ">>=" expression, FOLLOW [236] -> SHIFT ">>=" GOTO 163
	expression/L12 = expression . "." IDENT, FOLLOW [236] -> SHIFT '.' GOTO 164
	expression/L8 = expression "==" expression . (111), FOLLOW [236] -> REDUCE expression #3 CALL operator "=="
[253]
	iexpression = expression . indirection IDENT, FOLLOW [236] -> GOTO 128
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [236] -> SHIFT '(' GOTO 129
	expression/L13 = expression . "(" ")", FOLLOW [236] -> SHIFT '(' GOTO 129
	expression/L7 = expression . "&" expression, FOLLOW [236] -> SHIFT '&' GOTO 131
	expression/L7 = expression . "^" expression, FOLLOW [236] -> SHIFT '^' GOTO 132
	indirection = . "->" indirection, FOLLOW [17] -> SHIFT "->" GOTO 133
	indirection = . "->", FOLLOW [17] -> SHIFT "->" GOTO 133
	expression/L3 = expression . "=" expression, FOLLOW [236] -> SHIFT '=' GOTO 134
	expression/L9 = expression . "+" expression, FOLLOW [236] -> SHIFT '+' GOTO 135
	expression/L9 = expression . "-" expression, FOLLOW [236] -> SHIFT '-' GOTO 136
	expression/L10 = expression . "*" expression, FOLLOW [236] -> SHIFT '*' GOTO 137
	expression/L10 = expression . "/" expression, FOLLOW [236] -> SHIFT '/' GOTO 138
	expression/L10 = expression . "%" expression, FOLLOW [236] -> SHIFT '%' GOTO 139
	expression/L5 = expression . "&&" expression, FOLLOW [236] -> SHIFT "&&" GOTO 140
	expression/L4 = expression . "||" expression, FOLLOW [236] -> SHIFT "||" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [236] -> SHIFT '|' GOTO 142
	expression/L11 = expression . "<<" expression, FOLLOW [236] -> SHIFT "<<" GOTO 143
	expression/L11 = expression . ">>" expression, FOLLOW [236] -> SHIFT ">>" GOTO 144
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [236] -> SHIFT '[' GOTO 145
	expression/L8 = expression . "==" expression, FOLLOW [236] -> SHIFT "==" GOTO 146
	expression/L8 = expression . "!=" expression, FOLLOW [236] -> SHIFT "!=" GOTO 147
	expression/L8 = expression . ">=" expression, FOLLOW [236] -> SHIFT ">=" GOTO 148
	expression/L8 = expression . "<=" expression, FOLLOW [236] -> SHIFT "<=" GOTO 149
	expression/L8 = expression . ">" expression, FOLLOW [236] -> SHIFT '>' GOTO 150
	expression/L8 = expression . "<" expression, FOLLOW [236] -> SHIFT '<' GOTO 151
	expression/L3 = expression . "+=" expression, FOLLOW [236] -> SHIFT "+=" GOTO 152
	expression/L3 = expression . "-=" expression, FOLLOW [236] -> SHIFT "-=" GOTO 153
	expression/L3 = expression . "*=" expression, FOLLOW [236] -> SHIFT "*=" GOTO 154
	expression/L3 = expression . "/=" expression, FOLLOW [236] -> SHIFT "/=" GOTO 155
	expression/L3 = expression . "^=" expression, FOLLOW [236] -> SHIFT "^=" GOTO 156
	expression/L3 = expression . "&=" expression, FOLLOW [236] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [236] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "%=" expression, FOLLOW [236] -> SHIFT "%=" GOTO 158
	expression/L3 = expression . "&&=" expression, FOLLOW [236] -> SHIFT "&&=" GOTO 159
	expression/L3 = expression . "||=" expression, FOLLOW [236] -> SHIFT "||=" GOTO 160
	expression/L3 = expression . "|=" expression, FOLLOW [236] -> SHIFT "|=" GOTO 161
	expression/L3 = expression . "<<=" expression, FOLLOW [236] -> SHIFT "<<=" GOTO 162
	expression/L3 = expression . ">>=" expression, FOLLOW [236] -> SHIFT ">>=" GOTO 163
	expression/L12 = expression . "." IDENT, FOLLOW [236] -> SHIFT '.' GOTO 164
	expression/L8 = expression "!=" expression . (112), FOLLOW [236] -> REDUCE expression #3 CALL operator "!="
[254]
	iexpression = expression . indirection IDENT, FOLLOW [236] -> GOTO 128
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [236] -> SHIFT '(' GOTO 129
	expression/L13 = expression . "(" ")", FOLLOW [236] -> SHIFT '(' GOTO 129
	expression/L7 = expression . "&" expression, FOLLOW [236] -> SHIFT '&' GOTO 131
	expression/L7 = expression . "^" expression, FOLLOW [236] -> SHIFT '^' GOTO 132
	indirection = . "->" indirection, FOLLOW [17] -> SHIFT "->" GOTO 133
	indirection = . "->", FOLLOW [17] -> SHIFT "->" GOTO 133
	expression/L3 = expression . "=" expression, FOLLOW [236] -> SHIFT '=' GOTO 134
	expression/L9 = expression . "+" expression, FOLLOW [236] -> SHIFT '+' GOTO 135
	expression/L9 = expression . "-" expression, FOLLOW [236] -> SHIFT '-' GOTO 136
	expression/L10 = expression . "*" expression, FOLLOW [236] -> SHIFT '*' GOTO 137
	expression/L10 = expression . "/" expression, FOLLOW [236] -> SHIFT '/' GOTO 138
	expression/L10 = expression . "%" expression, FOLLOW [236] -> SHIFT '%' GOTO 139
	expression/L5 = expression . "&&" expression, FOLLOW [236] -> SHIFT "&&" GOTO 140
	expression/L4 = expression . "||" expression, FOLLOW [236] -> SHIFT "||" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [236] -> SHIFT '|' GOTO 142
	expression/L11 = expression . "<<" expression, FOLLOW [236] -> SHIFT "<<" GOTO 143
	expression/L11 = expression . ">>" expression, FOLLOW [236] -> SHIFT ">>" GOTO 144
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [236] -> SHIFT '[' GOTO 145
	expression/L8 = expression . "==" expression, FOLLOW [236] -> SHIFT "==" GOTO 146
	expression/L8 = expression . "!=" expression, FOLLOW [236] -> SHIFT "!=" GOTO 147
	expression/L8 = expression . ">=" expression, FOLLOW [236] -> SHIFT ">=" GOTO 148
	expression/L8 = expression . "<=" expression, FOLLOW [236] -> SHIFT "<=" GOTO 149
	expression/L8 = expression . ">" expression, FOLLOW [236] -> SHIFT '>' GOTO 150
	expression/L8 = expression . "<" expression, FOLLOW [236] -> SHIFT '<' GOTO 151
	expression/L3 = expression . "+=" expression, FOLLOW [236] -> SHIFT "+=" GOTO 152
	expression/L3 = expression . "-=" expression, FOLLOW [236] -> SHIFT "-=" GOTO 153
	expression/L3 = expression . "*=" expression, FOLLOW [236] -> SHIFT "*=" GOTO 154
	expression/L3 = expression . "/=" expression, FOLLOW [236] -> SHIFT "/=" GOTO 155
	expression/L3 = expression . "^=" expression, FOLLOW [236] -> SHIFT "^=" GOTO 156
	expression/L3 = expression . "&=" expression, FOLLOW [236] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [236] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "%=" expression, FOLLOW [236] -> SHIFT "%=" GOTO 158
	expression/L3 = expression . "&&=" expression, FOLLOW [236] -> SHIFT "&&=" GOTO 159
	expression/L3 = expression . "||=" expression, FOLLOW [236] -> SHIFT "||=" GOTO 160
	expression/L3 = expression . "|=" expression, FOLLOW [236] -> SHIFT "|=" GOTO 161
	expression/L3 = expression . "<<=" expression, FOLLOW [236] -> SHIFT "<<=" GOTO 162
	expression/L3 = expression . ">>=" expression, FOLLOW [236] -> SHIFT ">>=" GOTO 163
	expression/L12 = expression . "." IDENT, FOLLOW [236] -> SHIFT '.' GOTO 164
	expression/L8 = expression ">=" expression . (115), FOLLOW [236] -> REDUCE expression #3 CALL operator ">="
[255]
	iexpression = expression . indirection IDENT, FOLLOW [236] -> GOTO 128
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [236] -> SHIFT '(' GOTO 129
	expression/L13 = expression . "(" ")", FOLLOW [236] -> SHIFT '(' GOTO 129
	expression/L7 = expression . "&" expression, FOLLOW [236] -> SHIFT '&' GOTO 131
	expression/L7 = expression . "^" expression, FOLLOW [236] -> SHIFT '^' GOTO 132
	indirection = . "->" indirection, FOLLOW [17] -> SHIFT "->" GOTO 133
	indirection = . "->", FOLLOW [17] -> SHIFT "->" GOTO 133
	expression/L3 = expression . "=" expression, FOLLOW [236] -> SHIFT '=' GOTO 134
	expression/L9 = expression . "+" expression, FOLLOW [236] -> SHIFT '+' GOTO 135
	expression/L9 = expression . "-" expression, FOLLOW [236] -> SHIFT '-' GOTO 136
	expression/L10 = expression . "*" expression, FOLLOW [236] -> SHIFT '*' GOTO 137
	expression/L10 = expression . "/" expression, FOLLOW [236] -> SHIFT '/' GOTO 138
	expression/L10 = expression . "%" expression, FOLLOW [236] -> SHIFT '%' GOTO 139
	expression/L5 = expression . "&&" expression, FOLLOW [236] -> SHIFT "&&" GOTO 140
	expression/L4 = expression . "||" expression, FOLLOW [236] -> SHIFT "||" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [236] -> SHIFT '|' GOTO 142
	expression/L11 = expression . "<<" expression, FOLLOW [236] -> SHIFT "<<" GOTO 143
	expression/L11 = expression . ">>" expression, FOLLOW [236] -> SHIFT ">>" GOTO 144
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [236] -> SHIFT '[' GOTO 145
	expression/L8 = expression . "==" expression, FOLLOW [236] -> SHIFT "==" GOTO 146
	expression/L8 = expression . "!=" expression, FOLLOW [236] -> SHIFT "!=" GOTO 147
	expression/L8 = expression . ">=" expression, FOLLOW [236] -> SHIFT ">=" GOTO 148
	expression/L8 = expression . "<=" expression, FOLLOW [236] -> SHIFT "<=" GOTO 149
	expression/L8 = expression . ">" expression, FOLLOW [236] -> SHIFT '>' GOTO 150
	expression/L8 = expression . "<" expression, FOLLOW [236] -> SHIFT '<' GOTO 151
	expression/L3 = expression . "+=" expression, FOLLOW [236] -> SHIFT "+=" GOTO 152
	expression/L3 = expression . "-=" expression, FOLLOW [236] -> SHIFT "-=" GOTO 153
	expression/L3 = expression . "*=" expression, FOLLOW [236] -> SHIFT "*=" GOTO 154
	expression/L3 = expression . "/=" expression, FOLLOW [236] -> SHIFT "/=" GOTO 155
	expression/L3 = expression . "^=" expression, FOLLOW [236] -> SHIFT "^=" GOTO 156
	expression/L3 = expression . "&=" expression, FOLLOW [236] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [236] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "%=" expression, FOLLOW [236] -> SHIFT "%=" GOTO 158
	expression/L3 = expression . "&&=" expression, FOLLOW [236] -> SHIFT "&&=" GOTO 159
	expression/L3 = expression . "||=" expression, FOLLOW [236] -> SHIFT "||=" GOTO 160
	expression/L3 = expression . "|=" expression, FOLLOW [236] -> SHIFT "|=" GOTO 161
	expression/L3 = expression . "<<=" expression, FOLLOW [236] -> SHIFT "<<=" GOTO 162
	expression/L3 = expression . ">>=" expression, FOLLOW [236] -> SHIFT ">>=" GOTO 163
	expression/L12 = expression . "." IDENT, FOLLOW [236] -> SHIFT '.' GOTO 164
	expression/L8 = expression "<=" expression . (113), FOLLOW [236] -> REDUCE expression #3 CALL operator "<="
[256]
	iexpression = expression . indirection IDENT, FOLLOW [236] -> GOTO 128
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [236] -> SHIFT '(' GOTO 129
	expression/L13 = expression . "(" ")", FOLLOW [236] -> SHIFT '(' GOTO 129
	expression/L7 = expression . "&" expression, FOLLOW [236] -> SHIFT '&' GOTO 131
	expression/L7 = expression . "^" expression, FOLLOW [236] -> SHIFT '^' GOTO 132
	indirection = . "->" indirection, FOLLOW [17] -> SHIFT "->" GOTO 133
	indirection = . "->", FOLLOW [17] -> SHIFT "->" GOTO 133
	expression/L3 = expression . "=" expression, FOLLOW [236] -> SHIFT '=' GOTO 134
	expression/L9 = expression . "+" expression, FOLLOW [236] -> SHIFT '+' GOTO 135
	expression/L9 = expression . "-" expression, FOLLOW [236] -> SHIFT '-' GOTO 136
	expression/L10 = expression . "*" expression, FOLLOW [236] -> SHIFT '*' GOTO 137
	expression/L10 = expression . "/" expression, FOLLOW [236] -> SHIFT '/' GOTO 138
	expression/L10 = expression . "%" expression, FOLLOW [236] -> SHIFT '%' GOTO 139
	expression/L5 = expression . "&&" expression, FOLLOW [236] -> SHIFT "&&" GOTO 140
	expression/L4 = expression . "||" expression, FOLLOW [236] -> SHIFT "||" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [236] -> SHIFT '|' GOTO 142
	expression/L11 = expression . "<<" expression, FOLLOW [236] -> SHIFT "<<" GOTO 143
	expression/L11 = expression . ">>" expression, FOLLOW [236] -> SHIFT ">>" GOTO 144
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [236] -> SHIFT '[' GOTO 145
	expression/L8 = expression . "==" expression, FOLLOW [236] -> SHIFT "==" GOTO 146
	expression/L8 = expression . "!=" expression, FOLLOW [236] -> SHIFT "!=" GOTO 147
	expression/L8 = expression . ">=" expression, FOLLOW [236] -> SHIFT ">=" GOTO 148
	expression/L8 = expression . "<=" expression, FOLLOW [236] -> SHIFT "<=" GOTO 149
	expression/L8 = expression . ">" expression, FOLLOW [236] -> SHIFT '>' GOTO 150
	expression/L8 = expression . "<" expression, FOLLOW [236] -> SHIFT '<' GOTO 151
	expression/L3 = expression . "+=" expression, FOLLOW [236] -> SHIFT "+=" GOTO 152
	expression/L3 = expression . "-=" expression, FOLLOW [236] -> SHIFT "-=" GOTO 153
	expression/L3 = expression . "*=" expression, FOLLOW [236] -> SHIFT "*=" GOTO 154
	expression/L3 = expression . "/=" expression, FOLLOW [236] -> SHIFT "/=" GOTO 155
	expression/L3 = expression . "^=" expression, FOLLOW [236] -> SHIFT "^=" GOTO 156
	expression/L3 = expression . "&=" expression, FOLLOW [236] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [236] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "%=" expression, FOLLOW [236] -> SHIFT "%=" GOTO 158
	expression/L3 = expression . "&&=" expression, FOLLOW [236] -> SHIFT "&&=" GOTO 159
	expression/L3 = expression . "||=" expression, FOLLOW [236] -> SHIFT "||=" GOTO 160
	expression/L3 = expression . "|=" expression, FOLLOW [236] -> SHIFT "|=" GOTO 161
	expression/L3 = expression . "<<=" expression, FOLLOW [236] -> SHIFT "<<=" GOTO 162
	expression/L3 = expression . ">>=" expression, FOLLOW [236] -> SHIFT ">>=" GOTO 163
	expression/L12 = expression . "." IDENT, FOLLOW [236] -> SHIFT '.' GOTO 164
	expression/L8 = expression ">" expression . (116), FOLLOW [236] -> REDUCE expression #3 CALL operator ">"
[257]
	iexpression = expression . indirection IDENT, FOLLOW [236] -> GOTO 128
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [236] -> SHIFT '(' GOTO 129
	expression/L13 = expression . "(" ")", FOLLOW [236] -> SHIFT '(' GOTO 129
	expression/L7 = expression . "&" expression, FOLLOW [236] -> SHIFT '&' GOTO 131
	expression/L7 = expression . "^" expression, FOLLOW [236] -> SHIFT '^' GOTO 132
	indirection = . "->" indirection, FOLLOW [17] -> SHIFT "->" GOTO 133
	indirection = . "->", FOLLOW [17] -> SHIFT "->" GOTO 133
	expression/L3 = expression . "=" expression, FOLLOW [236] -> SHIFT '=' GOTO 134
	expression/L9 = expression . "+" expression, FOLLOW [236] -> SHIFT '+' GOTO 135
	expression/L9 = expression . "-" expression, FOLLOW [236] -> SHIFT '-' GOTO 136
	expression/L10 = expression . "*" expression, FOLLOW [236] -> SHIFT '*' GOTO 137
	expression/L10 = expression . "/" expression, FOLLOW [236] -> SHIFT '/' GOTO 138
	expression/L10 = expression . "%" expression, FOLLOW [236] -> SHIFT '%' GOTO 139
	expression/L5 = expression . "&&" expression, FOLLOW [236] -> SHIFT "&&" GOTO 140
	expression/L4 = expression . "||" expression, FOLLOW [236] -> SHIFT "||" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [236] -> SHIFT '|' GOTO 142
	expression/L11 = expression . "<<" expression, FOLLOW [236] -> SHIFT "<<" GOTO 143
	expression/L11 = expression . ">>" expression, FOLLOW [236] -> SHIFT ">>" GOTO 144
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [236] -> SHIFT '[' GOTO 145
	expression/L8 = expression . "==" expression, FOLLOW [236] -> SHIFT "==" GOTO 146
	expression/L8 = expression . "!=" expression, FOLLOW [236] -> SHIFT "!=" GOTO 147
	expression/L8 = expression . ">=" expression, FOLLOW [236] -> SHIFT ">=" GOTO 148
	expression/L8 = expression . "<=" expression, FOLLOW [236] -> SHIFT "<=" GOTO 149
	expression/L8 = expression . ">" expression, FOLLOW [236] -> SHIFT '>' GOTO 150
	expression/L8 = expression . "<" expression, FOLLOW [236] -> SHIFT '<' GOTO 151
	expression/L3 = expression . "+=" expression, FOLLOW [236] -> SHIFT "+=" GOTO 152
	expression/L3 = expression . "-=" expression, FOLLOW [236] -> SHIFT "-=" GOTO 153
	expression/L3 = expression . "*=" expression, FOLLOW [236] -> SHIFT "*=" GOTO 154
	expression/L3 = expression . "/=" expression, FOLLOW [236] -> SHIFT "/=" GOTO 155
	expression/L3 = expression . "^=" expression, FOLLOW [236] -> SHIFT "^=" GOTO 156
	expression/L3 = expression . "&=" expression, FOLLOW [236] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [236] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "%=" expression, FOLLOW [236] -> SHIFT "%=" GOTO 158
	expression/L3 = expression . "&&=" expression, FOLLOW [236] -> SHIFT "&&=" GOTO 159
	expression/L3 = expression . "||=" expression, FOLLOW [236] -> SHIFT "||=" GOTO 160
	expression/L3 = expression . "|=" expression, FOLLOW [236] -> SHIFT "|=" GOTO 161
	expression/L3 = expression . "<<=" expression, FOLLOW [236] -> SHIFT "<<=" GOTO 162
	expression/L3 = expression . ">>=" expression, FOLLOW [236] -> SHIFT ">>=" GOTO 163
	expression/L12 = expression . "." IDENT, FOLLOW [236] -> SHIFT '.' GOTO 164
	expression/L8 = expression "<" expression . (114), FOLLOW [236] -> REDUCE expression #3 CALL operator "<"
[258]
	iexpression = expression . indirection IDENT, FOLLOW [236] -> GOTO 128
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [236] -> SHIFT '(' GOTO 129
	expression/L13 = expression . "(" ")", FOLLOW [236] -> SHIFT '(' GOTO 129
	expression/L7 = expression . "&" expression, FOLLOW [236] -> SHIFT '&' GOTO 131
	expression/L7 = expression . "^" expression, FOLLOW [236] -> SHIFT '^' GOTO 132
	indirection = . "->" indirection, FOLLOW [17] -> SHIFT "->" GOTO 133
	indirection = . "->", FOLLOW [17] -> SHIFT "->" GOTO 133
	expression/L3 = expression . "=" expression, FOLLOW [236] -> SHIFT '=' GOTO 134
	expression/L9 = expression . "+" expression, FOLLOW [236] -> SHIFT '+' GOTO 135
	expression/L9 = expression . "-" expression, FOLLOW [236] -> SHIFT '-' GOTO 136
	expression/L10 = expression . "*" expression, FOLLOW [236] -> SHIFT '*' GOTO 137
	expression/L10 = expression . "/" expression, FOLLOW [236] -> SHIFT '/' GOTO 138
	expression/L10 = expression . "%" expression, FOLLOW [236] -> SHIFT '%' GOTO 139
	expression/L5 = expression . "&&" expression, FOLLOW [236] -> SHIFT "&&" GOTO 140
	expression/L4 = expression . "||" expression, FOLLOW [236] -> SHIFT "||" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [236] -> SHIFT '|' GOTO 142
	expression/L11 = expression . "<<" expression, FOLLOW [236] -> SHIFT "<<" GOTO 143
	expression/L11 = expression . ">>" expression, FOLLOW [236] -> SHIFT ">>" GOTO 144
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [236] -> SHIFT '[' GOTO 145
	expression/L8 = expression . "==" expression, FOLLOW [236] -> SHIFT "==" GOTO 146
	expression/L8 = expression . "!=" expression, FOLLOW [236] -> SHIFT "!=" GOTO 147
	expression/L8 = expression . ">=" expression, FOLLOW [236] -> SHIFT ">=" GOTO 148
	expression/L8 = expression . "<=" expression, FOLLOW [236] -> SHIFT "<=" GOTO 149
	expression/L8 = expression . ">" expression, FOLLOW [236] -> SHIFT '>' GOTO 150
	expression/L8 = expression . "<" expression, FOLLOW [236] -> SHIFT '<' GOTO 151
	expression/L3 = expression . "+=" expression, FOLLOW [236] -> SHIFT "+=" GOTO 152
	expression/L3 = expression . "-=" expression, FOLLOW [236] -> SHIFT "-=" GOTO 153
	expression/L3 = expression . "*=" expression, FOLLOW [236] -> SHIFT "*=" GOTO 154
	expression/L3 = expression . "/=" expression, FOLLOW [236] -> SHIFT "/=" GOTO 155
	expression/L3 = expression . "^=" expression, FOLLOW [236] -> SHIFT "^=" GOTO 156
	expression/L3 = expression . "&=" expression, FOLLOW [236] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [236] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "%=" expression, FOLLOW [236] -> SHIFT "%=" GOTO 158
	expression/L3 = expression . "&&=" expression, FOLLOW [236] -> SHIFT "&&=" GOTO 159
	expression/L3 = expression . "||=" expression, FOLLOW [236] -> SHIFT "||=" GOTO 160
	expression/L3 = expression . "|=" expression, FOLLOW [236] -> SHIFT "|=" GOTO 161
	expression/L3 = expression . "<<=" expression, FOLLOW [236] -> SHIFT "<<=" GOTO 162
	expression/L3 = expression . ">>=" expression, FOLLOW [236] -> SHIFT ">>=" GOTO 163
	expression/L12 = expression . "." IDENT, FOLLOW [236] -> SHIFT '.' GOTO 164
	expression/L3 = expression "+=" expression . (94), FOLLOW [236] -> REDUCE expression #3 CALL assign_operator "+"
[259]
	iexpression = expression . indirection IDENT, FOLLOW [236] -> GOTO 128
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [236] -> SHIFT '(' GOTO 129
	expression/L13 = expression . "(" ")", FOLLOW [236] -> SHIFT '(' GOTO 129
	expression/L7 = expression . "&" expression, FOLLOW [236] -> SHIFT '&' GOTO 131
	expression/L7 = expression . "^" expression, FOLLOW [236] -> SHIFT '^' GOTO 132
	indirection = . "->" indirection, FOLLOW [17] -> SHIFT "->" GOTO 133
	indirection = . "->", FOLLOW [17] -> SHIFT "->" GOTO 133
	expression/L3 = expression . "=" expression, FOLLOW [236] -> SHIFT '=' GOTO 134
	expression/L9 = expression . "+" expression, FOLLOW [236] -> SHIFT '+' GOTO 135
	expression/L9 = expression . "-" expression, FOLLOW [236] -> SHIFT '-' GOTO 136
	expression/L10 = expression . "*" expression, FOLLOW [236] -> SHIFT '*' GOTO 137
	expression/L10 = expression . "/" expression, FOLLOW [236] -> SHIFT '/' GOTO 138
	expression/L10 = expression . "%" expression, FOLLOW [236] -> SHIFT '%' GOTO 139
	expression/L5 = expression . "&&" expression, FOLLOW [236] -> SHIFT "&&" GOTO 140
	expression/L4 = expression . "||" expression, FOLLOW [236] -> SHIFT "||" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [236] -> SHIFT '|' GOTO 142
	expression/L11 = expression . "<<" expression, FOLLOW [236] -> SHIFT "<<" GOTO 143
	expression/L11 = expression . ">>" expression, FOLLOW [236] -> SHIFT ">>" GOTO 144
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [236] -> SHIFT '[' GOTO 145
	expression/L8 = expression . "==" expression, FOLLOW [236] -> SHIFT "==" GOTO 146
	expression/L8 = expression . "!=" expression, FOLLOW [236] -> SHIFT "!=" GOTO 147
	expression/L8 = expression . ">=" expression, FOLLOW [236] -> SHIFT ">=" GOTO 148
	expression/L8 = expression . "<=" expression, FOLLOW [236] -> SHIFT "<=" GOTO 149
	expression/L8 = expression . ">" expression, FOLLOW [236] -> SHIFT '>' GOTO 150
	expression/L8 = expression . "<" expression, FOLLOW [236] -> SHIFT '<' GOTO 151
	expression/L3 = expression . "+=" expression, FOLLOW [236] -> SHIFT "+=" GOTO 152
	expression/L3 = expression . "-=" expression, FOLLOW [236] -> SHIFT "-=" GOTO 153
	expression/L3 = expression . "*=" expression, FOLLOW [236] -> SHIFT "*=" GOTO 154
	expression/L3 = expression . "/=" expression, FOLLOW [236] -> SHIFT "/=" GOTO 155
	expression/L3 = expression . "^=" expression, FOLLOW [236] -> SHIFT "^=" GOTO 156
	expression/L3 = expression . "&=" expression, FOLLOW [236] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [236] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "%=" expression, FOLLOW [236] -> SHIFT "%=" GOTO 158
	expression/L3 = expression . "&&=" expression, FOLLOW [236] -> SHIFT "&&=" GOTO 159
	expression/L3 = expression . "||=" expression, FOLLOW [236] -> SHIFT "||=" GOTO 160
	expression/L3 = expression . "|=" expression, FOLLOW [236] -> SHIFT "|=" GOTO 161
	expression/L3 = expression . "<<=" expression, FOLLOW [236] -> SHIFT "<<=" GOTO 162
	expression/L3 = expression . ">>=" expression, FOLLOW [236] -> SHIFT ">>=" GOTO 163
	expression/L12 = expression . "." IDENT, FOLLOW [236] -> SHIFT '.' GOTO 164
	expression/L3 = expression "-=" expression . (95), FOLLOW [236] -> REDUCE expression #3 CALL assign_operator "-"
[260]
	iexpression = expression . indirection IDENT, FOLLOW [236] -> GOTO 128
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [236] -> SHIFT '(' GOTO 129
	expression/L13 = expression . "(" ")", FOLLOW [236] -> SHIFT '(' GOTO 129
	expression/L7 = expression . "&" expression, FOLLOW [236] -> SHIFT '&' GOTO 131
	expression/L7 = expression . "^" expression, FOLLOW [236] -> SHIFT '^' GOTO 132
	indirection = . "->" indirection, FOLLOW [17] -> SHIFT "->" GOTO 133
	indirection = . "->", FOLLOW [17] -> SHIFT "->" GOTO 133
	expression/L3 = expression . "=" expression, FOLLOW [236] -> SHIFT '=' GOTO 134
	expression/L9 = expression . "+" expression, FOLLOW [236] -> SHIFT '+' GOTO 135
	expression/L9 = expression . "-" expression, FOLLOW [236] -> SHIFT '-' GOTO 136
	expression/L10 = expression . "*" expression, FOLLOW [236] -> SHIFT '*' GOTO 137
	expression/L10 = expression . "/" expression, FOLLOW [236] -> SHIFT '/' GOTO 138
	expression/L10 = expression . "%" expression, FOLLOW [236] -> SHIFT '%' GOTO 139
	expression/L5 = expression . "&&" expression, FOLLOW [236] -> SHIFT "&&" GOTO 140
	expression/L4 = expression . "||" expression, FOLLOW [236] -> SHIFT "||" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [236] -> SHIFT '|' GOTO 142
	expression/L11 = expression . "<<" expression, FOLLOW [236] -> SHIFT "<<" GOTO 143
	expression/L11 = expression . ">>" expression, FOLLOW [236] -> SHIFT ">>" GOTO 144
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [236] -> SHIFT '[' GOTO 145
	expression/L8 = expression . "==" expression, FOLLOW [236] -> SHIFT "==" GOTO 146
	expression/L8 = expression . "!=" expression, FOLLOW [236] -> SHIFT "!=" GOTO 147
	expression/L8 = expression . ">=" expression, FOLLOW [236] -> SHIFT ">=" GOTO 148
	expression/L8 = expression . "<=" expression, FOLLOW [236] -> SHIFT "<=" GOTO 149
	expression/L8 = expression . ">" expression, FOLLOW [236] -> SHIFT '>' GOTO 150
	expression/L8 = expression . "<" expression, FOLLOW [236] -> SHIFT '<' GOTO 151
	expression/L3 = expression . "+=" expression, FOLLOW [236] -> SHIFT "+=" GOTO 152
	expression/L3 = expression . "-=" expression, FOLLOW [236] -> SHIFT "-=" GOTO 153
	expression/L3 = expression . "*=" expression, FOLLOW [236] -> SHIFT "*=" GOTO 154
	expression/L3 = expression . "/=" expression, FOLLOW [236] -> SHIFT "/=" GOTO 155
	expression/L3 = expression . "^=" expression, FOLLOW [236] -> SHIFT "^=" GOTO 156
	expression/L3 = expression . "&=" expression, FOLLOW [236] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [236] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "%=" expression, FOLLOW [236] -> SHIFT "%=" GOTO 158
	expression/L3 = expression . "&&=" expression, FOLLOW [236] -> SHIFT "&&=" GOTO 159
	expression/L3 = expression . "||=" expression, FOLLOW [236] -> SHIFT "||=" GOTO 160
	expression/L3 = expression . "|=" expression, FOLLOW [236] -> SHIFT "|=" GOTO 161
	expression/L3 = expression . "<<=" expression, FOLLOW [236] -> SHIFT "<<=" GOTO 162
	expression/L3 = expression . ">>=" expression, FOLLOW [236] -> SHIFT ">>=" GOTO 163
	expression/L12 = expression . "." IDENT, FOLLOW [236] -> SHIFT '.' GOTO 164
	expression/L3 = expression "*=" expression . (96), FOLLOW [236] -> REDUCE expression #3 CALL assign_operator "*"
[261]
	iexpression = expression . indirection IDENT, FOLLOW [236] -> GOTO 128
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [236] -> SHIFT '(' GOTO 129
	expression/L13 = expression . "(" ")", FOLLOW [236] -> SHIFT '(' GOTO 129
	expression/L7 = expression . "&" expression, FOLLOW [236] -> SHIFT '&' GOTO 131
	expression/L7 = expression . "^" expression, FOLLOW [236] -> SHIFT '^' GOTO 132
	indirection = . "->" indirection, FOLLOW [17] -> SHIFT "->" GOTO 133
	indirection = . "->", FOLLOW [17] -> SHIFT "->" GOTO 133
	expression/L3 = expression . "=" expression, FOLLOW [236] -> SHIFT '=' GOTO 134
	expression/L9 = expression . "+" expression, FOLLOW [236] -> SHIFT '+' GOTO 135
	expression/L9 = expression . "-" expression, FOLLOW [236] -> SHIFT '-' GOTO 136
	expression/L10 = expression . "*" expression, FOLLOW [236] -> SHIFT '*' GOTO 137
	expression/L10 = expression . "/" expression, FOLLOW [236] -> SHIFT '/' GOTO 138
	expression/L10 = expression . "%" expression, FOLLOW [236] -> SHIFT '%' GOTO 139
	expression/L5 = expression . "&&" expression, FOLLOW [236] -> SHIFT "&&" GOTO 140
	expression/L4 = expression . "||" expression, FOLLOW [236] -> SHIFT "||" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [236] -> SHIFT '|' GOTO 142
	expression/L11 = expression . "<<" expression, FOLLOW [236] -> SHIFT "<<" GOTO 143
	expression/L11 = expression . ">>" expression, FOLLOW [236] -> SHIFT ">>" GOTO 144
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [236] -> SHIFT '[' GOTO 145
	expression/L8 = expression . "==" expression, FOLLOW [236] -> SHIFT "==" GOTO 146
	expression/L8 = expression . "!=" expression, FOLLOW [236] -> SHIFT "!=" GOTO 147
	expression/L8 = expression . ">=" expression, FOLLOW [236] -> SHIFT ">=" GOTO 148
	expression/L8 = expression . "<=" expression, FOLLOW [236] -> SHIFT "<=" GOTO 149
	expression/L8 = expression . ">" expression, FOLLOW [236] -> SHIFT '>' GOTO 150
	expression/L8 = expression . "<" expression, FOLLOW [236] -> SHIFT '<' GOTO 151
	expression/L3 = expression . "+=" expression, FOLLOW [236] -> SHIFT "+=" GOTO 152
	expression/L3 = expression . "-=" expression, FOLLOW [236] -> SHIFT "-=" GOTO 153
	expression/L3 = expression . "*=" expression, FOLLOW [236] -> SHIFT "*=" GOTO 154
	expression/L3 = expression . "/=" expression, FOLLOW [236] -> SHIFT "/=" GOTO 155
	expression/L3 = expression . "^=" expression, FOLLOW [236] -> SHIFT "^=" GOTO 156
	expression/L3 = expression . "&=" expression, FOLLOW [236] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [236] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "%=" expression, FOLLOW [236] -> SHIFT "%=" GOTO 158
	expression/L3 = expression . "&&=" expression, FOLLOW [236] -> SHIFT "&&=" GOTO 159
	expression/L3 = expression . "||=" expression, FOLLOW [236] -> SHIFT "||=" GOTO 160
	expression/L3 = expression . "|=" expression, FOLLOW [236] -> SHIFT "|=" GOTO 161
	expression/L3 = expression . "<<=" expression, FOLLOW [236] -> SHIFT "<<=" GOTO 162
	expression/L3 = expression . ">>=" expression, FOLLOW [236] -> SHIFT ">>=" GOTO 163
	expression/L12 = expression . "." IDENT, FOLLOW [236] -> SHIFT '.' GOTO 164
	expression/L3 = expression "/=" expression . (97), FOLLOW [236] -> REDUCE expression #3 CALL assign_operator "/"
[262]
	iexpression = expression . indirection IDENT, FOLLOW [236] -> GOTO 128
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [236] -> SHIFT '(' GOTO 129
	expression/L13 = expression . "(" ")", FOLLOW [236] -> SHIFT '(' GOTO 129
	expression/L7 = expression . "&" expression, FOLLOW [236] -> SHIFT '&' GOTO 131
	expression/L7 = expression . "^" expression, FOLLOW [236] -> SHIFT '^' GOTO 132
	indirection = . "->" indirection, FOLLOW [17] -> SHIFT "->" GOTO 133
	indirection = . "->", FOLLOW [17] -> SHIFT "->" GOTO 133
	expression/L3 = expression . "=" expression, FOLLOW [236] -> SHIFT '=' GOTO 134
	expression/L9 = expression . "+" expression, FOLLOW [236] -> SHIFT '+' GOTO 135
	expression/L9 = expression . "-" expression, FOLLOW [236] -> SHIFT '-' GOTO 136
	expression/L10 = expression . "*" expression, FOLLOW [236] -> SHIFT '*' GOTO 137
	expression/L10 = expression . "/" expression, FOLLOW [236] -> SHIFT '/' GOTO 138
	expression/L10 = expression . "%" expression, FOLLOW [236] -> SHIFT '%' GOTO 139
	expression/L5 = expression . "&&" expression, FOLLOW [236] -> SHIFT "&&" GOTO 140
	expression/L4 = expression . "||" expression, FOLLOW [236] -> SHIFT "||" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [236] -> SHIFT '|' GOTO 142
	expression/L11 = expression . "<<" expression, FOLLOW [236] -> SHIFT "<<" GOTO 143
	expression/L11 = expression . ">>" expression, FOLLOW [236] -> SHIFT ">>" GOTO 144
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [236] -> SHIFT '[' GOTO 145
	expression/L8 = expression . "==" expression, FOLLOW [236] -> SHIFT "==" GOTO 146
	expression/L8 = expression . "!=" expression, FOLLOW [236] -> SHIFT "!=" GOTO 147
	expression/L8 = expression . ">=" expression, FOLLOW [236] -> SHIFT ">=" GOTO 148
	expression/L8 = expression . "<=" expression, FOLLOW [236] -> SHIFT "<=" GOTO 149
	expression/L8 = expression . ">" expression, FOLLOW [236] -> SHIFT '>' GOTO 150
	expression/L8 = expression . "<" expression, FOLLOW [236] -> SHIFT '<' GOTO 151
	expression/L3 = expression . "+=" expression, FOLLOW [236] -> SHIFT "+=" GOTO 152
	expression/L3 = expression . "-=" expression, FOLLOW [236] -> SHIFT "-=" GOTO 153
	expression/L3 = expression . "*=" expression, FOLLOW [236] -> SHIFT "*=" GOTO 154
	expression/L3 = expression . "/=" expression, FOLLOW [236] -> SHIFT "/=" GOTO 155
	expression/L3 = expression . "^=" expression, FOLLOW [236] -> SHIFT "^=" GOTO 156
	expression/L3 = expression . "&=" expression, FOLLOW [236] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [236] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "%=" expression, FOLLOW [236] -> SHIFT "%=" GOTO 158
	expression/L3 = expression . "&&=" expression, FOLLOW [236] -> SHIFT "&&=" GOTO 159
	expression/L3 = expression . "||=" expression, FOLLOW [236] -> SHIFT "||=" GOTO 160
	expression/L3 = expression . "|=" expression, FOLLOW [236] -> SHIFT "|=" GOTO 161
	expression/L3 = expression . "<<=" expression, FOLLOW [236] -> SHIFT "<<=" GOTO 162
	expression/L3 = expression . ">>=" expression, FOLLOW [236] -> SHIFT ">>=" GOTO 163
	expression/L12 = expression . "." IDENT, FOLLOW [236] -> SHIFT '.' GOTO 164
	expression/L3 = expression "^=" expression . (98), FOLLOW [236] -> REDUCE expression #3 CALL assign_operator "^"
[263]
	iexpression = expression . indirection IDENT, FOLLOW [236] -> GOTO 128
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [236] -> SHIFT '(' GOTO 129
	expression/L13 = expression . "(" ")", FOLLOW [236] -> SHIFT '(' GOTO 129
	expression/L7 = expression . "&" expression, FOLLOW [236] -> SHIFT '&' GOTO 131
	expression/L7 = expression . "^" expression, FOLLOW [236] -> SHIFT '^' GOTO 132
	indirection = . "->" indirection, FOLLOW [17] -> SHIFT "->" GOTO 133
	indirection = . "->", FOLLOW [17] -> SHIFT "->" GOTO 133
	expression/L3 = expression . "=" expression, FOLLOW [236] -> SHIFT '=' GOTO 134
	expression/L9 = expression . "+" expression, FOLLOW [236] -> SHIFT '+' GOTO 135
	expression/L9 = expression . "-" expression, FOLLOW [236] -> SHIFT '-' GOTO 136
	expression/L10 = expression . "*" expression, FOLLOW [236] -> SHIFT '*' GOTO 137
	expression/L10 = expression . "/" expression, FOLLOW [236] -> SHIFT '/' GOTO 138
	expression/L10 = expression . "%" expression, FOLLOW [236] -> SHIFT '%' GOTO 139
	expression/L5 = expression . "&&" expression, FOLLOW [236] -> SHIFT "&&" GOTO 140
	expression/L4 = expression . "||" expression, FOLLOW [236] -> SHIFT "||" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [236] -> SHIFT '|' GOTO 142
	expression/L11 = expression . "<<" expression, FOLLOW [236] -> SHIFT "<<" GOTO 143
	expression/L11 = expression . ">>" expression, FOLLOW [236] -> SHIFT ">>" GOTO 144
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [236] -> SHIFT '[' GOTO 145
	expression/L8 = expression . "==" expression, FOLLOW [236] -> SHIFT "==" GOTO 146
	expression/L8 = expression . "!=" expression, FOLLOW [236] -> SHIFT "!=" GOTO 147
	expression/L8 = expression . ">=" expression, FOLLOW [236] -> SHIFT ">=" GOTO 148
	expression/L8 = expression . "<=" expression, FOLLOW [236] -> SHIFT "<=" GOTO 149
	expression/L8 = expression . ">" expression, FOLLOW [236] -> SHIFT '>' GOTO 150
	expression/L8 = expression . "<" expression, FOLLOW [236] -> SHIFT '<' GOTO 151
	expression/L3 = expression . "+=" expression, FOLLOW [236] -> SHIFT "+=" GOTO 152
	expression/L3 = expression . "-=" expression, FOLLOW [236] -> SHIFT "-=" GOTO 153
	expression/L3 = expression . "*=" expression, FOLLOW [236] -> SHIFT "*=" GOTO 154
	expression/L3 = expression . "/=" expression, FOLLOW [236] -> SHIFT "/=" GOTO 155
	expression/L3 = expression . "^=" expression, FOLLOW [236] -> SHIFT "^=" GOTO 156
	expression/L3 = expression . "&=" expression, FOLLOW [236] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [236] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "%=" expression, FOLLOW [236] -> SHIFT "%=" GOTO 158
	expression/L3 = expression . "&&=" expression, FOLLOW [236] -> SHIFT "&&=" GOTO 159
	expression/L3 = expression . "||=" expression, FOLLOW [236] -> SHIFT "||=" GOTO 160
	expression/L3 = expression . "|=" expression, FOLLOW [236] -> SHIFT "|=" GOTO 161
	expression/L3 = expression . "<<=" expression, FOLLOW [236] -> SHIFT "<<=" GOTO 162
	expression/L3 = expression . ">>=" expression, FOLLOW [236] -> SHIFT ">>=" GOTO 163
	expression/L12 = expression . "." IDENT, FOLLOW [236] -> SHIFT '.' GOTO 164
	expression/L3 = expression "&=" expression . (99), FOLLOW [236] -> REDUCE expression #3 CALL assign_operator "&"
[264]
	iexpression = expression . indirection IDENT, FOLLOW [236] -> GOTO 128
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [236] -> SHIFT '(' GOTO 129
	expression/L13 = expression . "(" ")", FOLLOW [236] -> SHIFT '(' GOTO 129
	expression/L7 = expression . "&" expression, FOLLOW [236] -> SHIFT '&' GOTO 131
	expression/L7 = expression . "^" expression, FOLLOW [236] -> SHIFT '^' GOTO 132
	indirection = . "->" indirection, FOLLOW [17] -> SHIFT "->" GOTO 133
	indirection = . "->", FOLLOW [17] -> SHIFT "->" GOTO 133
	expression/L3 = expression . "=" expression, FOLLOW [236] -> SHIFT '=' GOTO 134
	expression/L9 = expression . "+" expression, FOLLOW [236] -> SHIFT '+' GOTO 135
	expression/L9 = expression . "-" expression, FOLLOW [236] -> SHIFT '-' GOTO 136
	expression/L10 = expression . "*" expression, FOLLOW [236] -> SHIFT '*' GOTO 137
	expression/L10 = expression . "/" expression, FOLLOW [236] -> SHIFT '/' GOTO 138
	expression/L10 = expression . "%" expression, FOLLOW [236] -> SHIFT '%' GOTO 139
	expression/L5 = expression . "&&" expression, FOLLOW [236] -> SHIFT "&&" GOTO 140
	expression/L4 = expression . "||" expression, FOLLOW [236] -> SHIFT "||" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [236] -> SHIFT '|' GOTO 142
	expression/L11 = expression . "<<" expression, FOLLOW [236] -> SHIFT "<<" GOTO 143
	expression/L11 = expression . ">>" expression, FOLLOW [236] -> SHIFT ">>" GOTO 144
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [236] -> SHIFT '[' GOTO 145
	expression/L8 = expression . "==" expression, FOLLOW [236] -> SHIFT "==" GOTO 146
	expression/L8 = expression . "!=" expression, FOLLOW [236] -> SHIFT "!=" GOTO 147
	expression/L8 = expression . ">=" expression, FOLLOW [236] -> SHIFT ">=" GOTO 148
	expression/L8 = expression . "<=" expression, FOLLOW [236] -> SHIFT "<=" GOTO 149
	expression/L8 = expression . ">" expression, FOLLOW [236] -> SHIFT '>' GOTO 150
	expression/L8 = expression . "<" expression, FOLLOW [236] -> SHIFT '<' GOTO 151
	expression/L3 = expression . "+=" expression, FOLLOW [236] -> SHIFT "+=" GOTO 152
	expression/L3 = expression . "-=" expression, FOLLOW [236] -> SHIFT "-=" GOTO 153
	expression/L3 = expression . "*=" expression, FOLLOW [236] -> SHIFT "*=" GOTO 154
	expression/L3 = expression . "/=" expression, FOLLOW [236] -> SHIFT "/=" GOTO 155
	expression/L3 = expression . "^=" expression, FOLLOW [236] -> SHIFT "^=" GOTO 156
	expression/L3 = expression . "&=" expression, FOLLOW [236] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [236] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "%=" expression, FOLLOW [236] -> SHIFT "%=" GOTO 158
	expression/L3 = expression . "&&=" expression, FOLLOW [236] -> SHIFT "&&=" GOTO 159
	expression/L3 = expression . "||=" expression, FOLLOW [236] -> SHIFT "||=" GOTO 160
	expression/L3 = expression . "|=" expression, FOLLOW [236] -> SHIFT "|=" GOTO 161
	expression/L3 = expression . "<<=" expression, FOLLOW [236] -> SHIFT "<<=" GOTO 162
	expression/L3 = expression . ">>=" expression, FOLLOW [236] -> SHIFT ">>=" GOTO 163
	expression/L12 = expression . "." IDENT, FOLLOW [236] -> SHIFT '.' GOTO 164
	expression/L3 = expression "%=" expression . (100), FOLLOW [236] -> REDUCE expression #3 CALL assign_operator "%"
[265]
	iexpression = expression . indirection IDENT, FOLLOW [236] -> GOTO 128
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [236] -> SHIFT '(' GOTO 129
	expression/L13 = expression . "(" ")", FOLLOW [236] -> SHIFT '(' GOTO 129
	expression/L7 = expression . "&" expression, FOLLOW [236] -> SHIFT '&' GOTO 131
	expression/L7 = expression . "^" expression, FOLLOW [236] -> SHIFT '^' GOTO 132
	indirection = . "->" indirection, FOLLOW [17] -> SHIFT "->" GOTO 133
	indirection = . "->", FOLLOW [17] -> SHIFT "->" GOTO 133
	expression/L3 = expression . "=" expression, FOLLOW [236] -> SHIFT '=' GOTO 134
	expression/L9 = expression . "+" expression, FOLLOW [236] -> SHIFT '+' GOTO 135
	expression/L9 = expression . "-" expression, FOLLOW [236] -> SHIFT '-' GOTO 136
	expression/L10 = expression . "*" expression, FOLLOW [236] -> SHIFT '*' GOTO 137
	expression/L10 = expression . "/" expression, FOLLOW [236] -> SHIFT '/' GOTO 138
	expression/L10 = expression . "%" expression, FOLLOW [236] -> SHIFT '%' GOTO 139
	expression/L5 = expression . "&&" expression, FOLLOW [236] -> SHIFT "&&" GOTO 140
	expression/L4 = expression . "||" expression, FOLLOW [236] -> SHIFT "||" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [236] -> SHIFT '|' GOTO 142
	expression/L11 = expression . "<<" expression, FOLLOW [236] -> SHIFT "<<" GOTO 143
	expression/L11 = expression . ">>" expression, FOLLOW [236] -> SHIFT ">>" GOTO 144
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [236] -> SHIFT '[' GOTO 145
	expression/L8 = expression . "==" expression, FOLLOW [236] -> SHIFT "==" GOTO 146
	expression/L8 = expression . "!=" expression, FOLLOW [236] -> SHIFT "!=" GOTO 147
	expression/L8 = expression . ">=" expression, FOLLOW [236] -> SHIFT ">=" GOTO 148
	expression/L8 = expression . "<=" expression, FOLLOW [236] -> SHIFT "<=" GOTO 149
	expression/L8 = expression . ">" expression, FOLLOW [236] -> SHIFT '>' GOTO 150
	expression/L8 = expression . "<" expression, FOLLOW [236] -> SHIFT '<' GOTO 151
	expression/L3 = expression . "+=" expression, FOLLOW [236] -> SHIFT "+=" GOTO 152
	expression/L3 = expression . "-=" expression, FOLLOW [236] -> SHIFT "-=" GOTO 153
	expression/L3 = expression . "*=" expression, FOLLOW [236] -> SHIFT "*=" GOTO 154
	expression/L3 = expression . "/=" expression, FOLLOW [236] -> SHIFT "/=" GOTO 155
	expression/L3 = expression . "^=" expression, FOLLOW [236] -> SHIFT "^=" GOTO 156
	expression/L3 = expression . "&=" expression, FOLLOW [236] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [236] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "%=" expression, FOLLOW [236] -> SHIFT "%=" GOTO 158
	expression/L3 = expression . "&&=" expression, FOLLOW [236] -> SHIFT "&&=" GOTO 159
	expression/L3 = expression . "||=" expression, FOLLOW [236] -> SHIFT "||=" GOTO 160
	expression/L3 = expression . "|=" expression, FOLLOW [236] -> SHIFT "|=" GOTO 161
	expression/L3 = expression . "<<=" expression, FOLLOW [236] -> SHIFT "<<=" GOTO 162
	expression/L3 = expression . ">>=" expression, FOLLOW [236] -> SHIFT ">>=" GOTO 163
	expression/L12 = expression . "." IDENT, FOLLOW [236] -> SHIFT '.' GOTO 164
	expression/L3 = expression "&&=" expression . (101), FOLLOW [236] -> REDUCE expression #3 CALL assign_operator "&&"
[266]
	iexpression = expression . indirection IDENT, FOLLOW [236] -> GOTO 128
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [236] -> SHIFT '(' GOTO 129
	expression/L13 = expression . "(" ")", FOLLOW [236] -> SHIFT '(' GOTO 129
	expression/L7 = expression . "&" expression, FOLLOW [236] -> SHIFT '&' GOTO 131
	expression/L7 = expression . "^" expression, FOLLOW [236] -> SHIFT '^' GOTO 132
	indirection = . "->" indirection, FOLLOW [17] -> SHIFT "->" GOTO 133
	indirection = . "->", FOLLOW [17] -> SHIFT "->" GOTO 133
	expression/L3 = expression . "=" expression, FOLLOW [236] -> SHIFT '=' GOTO 134
	expression/L9 = expression . "+" expression, FOLLOW [236] -> SHIFT '+' GOTO 135
	expression/L9 = expression . "-" expression, FOLLOW [236] -> SHIFT '-' GOTO 136
	expression/L10 = expression . "*" expression, FOLLOW [236] -> SHIFT '*' GOTO 137
	expression/L10 = expression . "/" expression, FOLLOW [236] -> SHIFT '/' GOTO 138
	expression/L10 = expression . "%" expression, FOLLOW [236] -> SHIFT '%' GOTO 139
	expression/L5 = expression . "&&" expression, FOLLOW [236] -> SHIFT "&&" GOTO 140
	expression/L4 = expression . "||" expression, FOLLOW [236] -> SHIFT "||" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [236] -> SHIFT '|' GOTO 142
	expression/L11 = expression . "<<" expression, FOLLOW [236] -> SHIFT "<<" GOTO 143
	expression/L11 = expression . ">>" expression, FOLLOW [236] -> SHIFT ">>" GOTO 144
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [236] -> SHIFT '[' GOTO 145
	expression/L8 = expression . "==" expression, FOLLOW [236] -> SHIFT "==" GOTO 146
	expression/L8 = expression . "!=" expression, FOLLOW [236] -> SHIFT "!=" GOTO 147
	expression/L8 = expression . ">=" expression, FOLLOW [236] -> SHIFT ">=" GOTO 148
	expression/L8 = expression . "<=" expression, FOLLOW [236] -> SHIFT "<=" GOTO 149
	expression/L8 = expression . ">" expression, FOLLOW [236] -> SHIFT '>' GOTO 150
	expression/L8 = expression . "<" expression, FOLLOW [236] -> SHIFT '<' GOTO 151
	expression/L3 = expression . "+=" expression, FOLLOW [236] -> SHIFT "+=" GOTO 152
	expression/L3 = expression . "-=" expression, FOLLOW [236] -> SHIFT "-=" GOTO 153
	expression/L3 = expression . "*=" expression, FOLLOW [236] -> SHIFT "*=" GOTO 154
	expression/L3 = expression . "/=" expression, FOLLOW [236] -> SHIFT "/=" GOTO 155
	expression/L3 = expression . "^=" expression, FOLLOW [236] -> SHIFT "^=" GOTO 156
	expression/L3 = expression . "&=" expression, FOLLOW [236] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [236] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "%=" expression, FOLLOW [236] -> SHIFT "%=" GOTO 158
	expression/L3 = expression . "&&=" expression, FOLLOW [236] -> SHIFT "&&=" GOTO 159
	expression/L3 = expression . "||=" expression, FOLLOW [236] -> SHIFT "||=" GOTO 160
	expression/L3 = expression . "|=" expression, FOLLOW [236] -> SHIFT "|=" GOTO 161
	expression/L3 = expression . "<<=" expression, FOLLOW [236] -> SHIFT "<<=" GOTO 162
	expression/L3 = expression . ">>=" expression, FOLLOW [236] -> SHIFT ">>=" GOTO 163
	expression/L12 = expression . "." IDENT, FOLLOW [236] -> SHIFT '.' GOTO 164
	expression/L3 = expression "||=" expression . (102), FOLLOW [236] -> REDUCE expression #3 CALL assign_operator "||"
[267]
	iexpression = expression . indirection IDENT, FOLLOW [236] -> GOTO 128
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [236] -> SHIFT '(' GOTO 129
	expression/L13 = expression . "(" ")", FOLLOW [236] -> SHIFT '(' GOTO 129
	expression/L7 = expression . "&" expression, FOLLOW [236] -> SHIFT '&' GOTO 131
	expression/L7 = expression . "^" expression, FOLLOW [236] -> SHIFT '^' GOTO 132
	indirection = . "->" indirection, FOLLOW [17] -> SHIFT "->" GOTO 133
	indirection = . "->", FOLLOW [17] -> SHIFT "->" GOTO 133
	expression/L3 = expression . "=" expression, FOLLOW [236] -> SHIFT '=' GOTO 134
	expression/L9 = expression . "+" expression, FOLLOW [236] -> SHIFT '+' GOTO 135
	expression/L9 = expression . "-" expression, FOLLOW [236] -> SHIFT '-' GOTO 136
	expression/L10 = expression . "*" expression, FOLLOW [236] -> SHIFT '*' GOTO 137
	expression/L10 = expression . "/" expression, FOLLOW [236] -> SHIFT '/' GOTO 138
	expression/L10 = expression . "%" expression, FOLLOW [236] -> SHIFT '%' GOTO 139
	expression/L5 = expression . "&&" expression, FOLLOW [236] -> SHIFT "&&" GOTO 140
	expression/L4 = expression . "||" expression, FOLLOW [236] -> SHIFT "||" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [236] -> SHIFT '|' GOTO 142
	expression/L11 = expression . "<<" expression, FOLLOW [236] -> SHIFT "<<" GOTO 143
	expression/L11 = expression . ">>" expression, FOLLOW [236] -> SHIFT ">>" GOTO 144
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [236] -> SHIFT '[' GOTO 145
	expression/L8 = expression . "==" expression, FOLLOW [236] -> SHIFT "==" GOTO 146
	expression/L8 = expression . "!=" expression, FOLLOW [236] -> SHIFT "!=" GOTO 147
	expression/L8 = expression . ">=" expression, FOLLOW [236] -> SHIFT ">=" GOTO 148
	expression/L8 = expression . "<=" expression, FOLLOW [236] -> SHIFT "<=" GOTO 149
	expression/L8 = expression . ">" expression, FOLLOW [236] -> SHIFT '>' GOTO 150
	expression/L8 = expression . "<" expression, FOLLOW [236] -> SHIFT '<' GOTO 151
	expression/L3 = expression . "+=" expression, FOLLOW [236] -> SHIFT "+=" GOTO 152
	expression/L3 = expression . "-=" expression, FOLLOW [236] -> SHIFT "-=" GOTO 153
	expression/L3 = expression . "*=" expression, FOLLOW [236] -> SHIFT "*=" GOTO 154
	expression/L3 = expression . "/=" expression, FOLLOW [236] -> SHIFT "/=" GOTO 155
	expression/L3 = expression . "^=" expression, FOLLOW [236] -> SHIFT "^=" GOTO 156
	expression/L3 = expression . "&=" expression, FOLLOW [236] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [236] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "%=" expression, FOLLOW [236] -> SHIFT "%=" GOTO 158
	expression/L3 = expression . "&&=" expression, FOLLOW [236] -> SHIFT "&&=" GOTO 159
	expression/L3 = expression . "||=" expression, FOLLOW [236] -> SHIFT "||=" GOTO 160
	expression/L3 = expression . "|=" expression, FOLLOW [236] -> SHIFT "|=" GOTO 161
	expression/L3 = expression . "<<=" expression, FOLLOW [236] -> SHIFT "<<=" GOTO 162
	expression/L3 = expression . ">>=" expression, FOLLOW [236] -> SHIFT ">>=" GOTO 163
	expression/L12 = expression . "." IDENT, FOLLOW [236] -> SHIFT '.' GOTO 164
	expression/L3 = expression "|=" expression . (103), FOLLOW [236] -> REDUCE expression #3 CALL assign_operator "|"
[268]
	iexpression = expression . indirection IDENT, FOLLOW [236] -> GOTO 128
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [236] -> SHIFT '(' GOTO 129
	expression/L13 = expression . "(" ")", FOLLOW [236] -> SHIFT '(' GOTO 129
	expression/L7 = expression . "&" expression, FOLLOW [236] -> SHIFT '&' GOTO 131
	expression/L7 = expression . "^" expression, FOLLOW [236] -> SHIFT '^' GOTO 132
	indirection = . "->" indirection, FOLLOW [17] -> SHIFT "->" GOTO 133
	indirection = . "->", FOLLOW [17] -> SHIFT "->" GOTO 133
	expression/L3 = expression . "=" expression, FOLLOW [236] -> SHIFT '=' GOTO 134
	expression/L9 = expression . "+" expression, FOLLOW [236] -> SHIFT '+' GOTO 135
	expression/L9 = expression . "-" expression, FOLLOW [236] -> SHIFT '-' GOTO 136
	expression/L10 = expression . "*" expression, FOLLOW [236] -> SHIFT '*' GOTO 137
	expression/L10 = expression . "/" expression, FOLLOW [236] -> SHIFT '/' GOTO 138
	expression/L10 = expression . "%" expression, FOLLOW [236] -> SHIFT '%' GOTO 139
	expression/L5 = expression . "&&" expression, FOLLOW [236] -> SHIFT "&&" GOTO 140
	expression/L4 = expression . "||" expression, FOLLOW [236] -> SHIFT "||" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [236] -> SHIFT '|' GOTO 142
	expression/L11 = expression . "<<" expression, FOLLOW [236] -> SHIFT "<<" GOTO 143
	expression/L11 = expression . ">>" expression, FOLLOW [236] -> SHIFT ">>" GOTO 144
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [236] -> SHIFT '[' GOTO 145
	expression/L8 = expression . "==" expression, FOLLOW [236] -> SHIFT "==" GOTO 146
	expression/L8 = expression . "!=" expression, FOLLOW [236] -> SHIFT "!=" GOTO 147
	expression/L8 = expression . ">=" expression, FOLLOW [236] -> SHIFT ">=" GOTO 148
	expression/L8 = expression . "<=" expression, FOLLOW [236] -> SHIFT "<=" GOTO 149
	expression/L8 = expression . ">" expression, FOLLOW [236] -> SHIFT '>' GOTO 150
	expression/L8 = expression . "<" expression, FOLLOW [236] -> SHIFT '<' GOTO 151
	expression/L3 = expression . "+=" expression, FOLLOW [236] -> SHIFT "+=" GOTO 152
	expression/L3 = expression . "-=" expression, FOLLOW [236] -> SHIFT "-=" GOTO 153
	expression/L3 = expression . "*=" expression, FOLLOW [236] -> SHIFT "*=" GOTO 154
	expression/L3 = expression . "/=" expression, FOLLOW [236] -> SHIFT "/=" GOTO 155
	expression/L3 = expression . "^=" expression, FOLLOW [236] -> SHIFT "^=" GOTO 156
	expression/L3 = expression . "&=" expression, FOLLOW [236] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [236] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "%=" expression, FOLLOW [236] -> SHIFT "%=" GOTO 158
	expression/L3 = expression . "&&=" expression, FOLLOW [236] -> SHIFT "&&=" GOTO 159
	expression/L3 = expression . "||=" expression, FOLLOW [236] -> SHIFT "||=" GOTO 160
	expression/L3 = expression . "|=" expression, FOLLOW [236] -> SHIFT "|=" GOTO 161
	expression/L3 = expression . "<<=" expression, FOLLOW [236] -> SHIFT "<<=" GOTO 162
	expression/L3 = expression . ">>=" expression, FOLLOW [236] -> SHIFT ">>=" GOTO 163
	expression/L12 = expression . "." IDENT, FOLLOW [236] -> SHIFT '.' GOTO 164
	expression/L3 = expression "<<=" expression . (104), FOLLOW [236] -> REDUCE expression #3 CALL assign_operator "<<"
[269]
	iexpression = expression . indirection IDENT, FOLLOW [236] -> GOTO 128
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [236] -> SHIFT '(' GOTO 129
	expression/L13 = expression . "(" ")", FOLLOW [236] -> SHIFT '(' GOTO 129
	expression/L7 = expression . "&" expression, FOLLOW [236] -> SHIFT '&' GOTO 131
	expression/L7 = expression . "^" expression, FOLLOW [236] -> SHIFT '^' GOTO 132
	indirection = . "->" indirection, FOLLOW [17] -> SHIFT "->" GOTO 133
	indirection = . "->", FOLLOW [17] -> SHIFT "->" GOTO 133
	expression/L3 = expression . "=" expression, FOLLOW [236] -> SHIFT '=' GOTO 134
	expression/L9 = expression . "+" expression, FOLLOW [236] -> SHIFT '+' GOTO 135
	expression/L9 = expression . "-" expression, FOLLOW [236] -> SHIFT '-' GOTO 136
	expression/L10 = expression . "*" expression, FOLLOW [236] -> SHIFT '*' GOTO 137
	expression/L10 = expression . "/" expression, FOLLOW [236] -> SHIFT '/' GOTO 138
	expression/L10 = expression . "%" expression, FOLLOW [236] -> SHIFT '%' GOTO 139
	expression/L5 = expression . "&&" expression, FOLLOW [236] -> SHIFT "&&" GOTO 140
	expression/L4 = expression . "||" expression, FOLLOW [236] -> SHIFT "||" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [236] -> SHIFT '|' GOTO 142
	expression/L11 = expression . "<<" expression, FOLLOW [236] -> SHIFT "<<" GOTO 143
	expression/L11 = expression . ">>" expression, FOLLOW [236] -> SHIFT ">>" GOTO 144
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [236] -> SHIFT '[' GOTO 145
	expression/L8 = expression . "==" expression, FOLLOW [236] -> SHIFT "==" GOTO 146
	expression/L8 = expression . "!=" expression, FOLLOW [236] -> SHIFT "!=" GOTO 147
	expression/L8 = expression . ">=" expression, FOLLOW [236] -> SHIFT ">=" GOTO 148
	expression/L8 = expression . "<=" expression, FOLLOW [236] -> SHIFT "<=" GOTO 149
	expression/L8 = expression . ">" expression, FOLLOW [236] -> SHIFT '>' GOTO 150
	expression/L8 = expression . "<" expression, FOLLOW [236] -> SHIFT '<' GOTO 151
	expression/L3 = expression . "+=" expression, FOLLOW [236] -> SHIFT "+=" GOTO 152
	expression/L3 = expression . "-=" expression, FOLLOW [236] -> SHIFT "-=" GOTO 153
	expression/L3 = expression . "*=" expression, FOLLOW [236] -> SHIFT "*=" GOTO 154
	expression/L3 = expression . "/=" expression, FOLLOW [236] -> SHIFT "/=" GOTO 155
	expression/L3 = expression . "^=" expression, FOLLOW [236] -> SHIFT "^=" GOTO 156
	expression/L3 = expression . "&=" expression, FOLLOW [236] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [236] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "%=" expression, FOLLOW [236] -> SHIFT "%=" GOTO 158
	expression/L3 = expression . "&&=" expression, FOLLOW [236] -> SHIFT "&&=" GOTO 159
	expression/L3 = expression . "||=" expression, FOLLOW [236] -> SHIFT "||=" GOTO 160
	expression/L3 = expression . "|=" expression, FOLLOW [236] -> SHIFT "|=" GOTO 161
	expression/L3 = expression . "<<=" expression, FOLLOW [236] -> SHIFT "<<=" GOTO 162
	expression/L3 = expression . ">>=" expression, FOLLOW [236] -> SHIFT ">>=" GOTO 163
	expression/L12 = expression . "." IDENT, FOLLOW [236] -> SHIFT '.' GOTO 164
	expression/L3 = expression ">>=" expression . (105), FOLLOW [236] -> REDUCE expression #3 CALL assign_operator ">>"
[270]
	expression/L12 = expression "." IDENT . (126), FOLLOW [236] -> REDUCE expression #3 CALL member
[271]
	expression/L2 = "(" expression ")" ., FOLLOW [236] -> REDUCE expression #3
[272]
	statement/L1 = "{" codeblock "}" . (scope), FOLLOW [98] -> REDUCE statement #3
[273]
	expression/L3 = . expression "=" expression, FOLLOW [229] -> GOTO 183
	expression/L3 = . expression "+=" expression, FOLLOW [229] -> GOTO 183
	expression/L3 = . expression "-=" expression, FOLLOW [229] -> GOTO 183
	expression/L3 = . expression "*=" expression, FOLLOW [229] -> GOTO 183
	expression/L3 = . expression "/=" expression, FOLLOW [229] -> GOTO 183
	expression/L3 = . expression "^=" expression, FOLLOW [229] -> GOTO 183
	expression/L3 = . expression "&=" expression, FOLLOW [229] -> GOTO 183
	expression/L3 = . expression "%=" expression, FOLLOW [229] -> GOTO 183
	expression/L3 = . expression "&&=" expression, FOLLOW [229] -> GOTO 183
	expression/L3 = . expression "||=" expression, FOLLOW [229] -> GOTO 183
	expression/L3 = . expression "&=" expression, FOLLOW [229] -> GOTO 183
	expression/L3 = . expression "|=" expression, FOLLOW [229] -> GOTO 183
	expression/L3 = . expression "<<=" expression, FOLLOW [229] -> GOTO 183
	expression/L3 = . expression ">>=" expression, FOLLOW [229] -> GOTO 183
	expression/L4 = . expression "||" expression, FOLLOW [229] -> GOTO 183
	expression/L5 = . expression "&&" expression, FOLLOW [229] -> GOTO 183
	expression/L6 = . expression "|" expression, FOLLOW [229] -> GOTO 183
	expression/L7 = . expression "^" expression, FOLLOW [229] -> GOTO 183
	expression/L7 = . expression "&" expression, FOLLOW [229] -> GOTO 183
	expression/L8 = . expression "==" expression, FOLLOW [229] -> GOTO 183
	expression/L8 = . expression "!=" expression, FOLLOW [229] -> GOTO 183
	expression/L8 = . expression "<=" expression, FOLLOW [229] -> GOTO 183
	expression/L8 = . expression "<" expression, FOLLOW [229] -> GOTO 183
	expression/L8 = . expression ">=" expression, FOLLOW [229] -> GOTO 183
	expression/L8 = . expression ">" expression, FOLLOW [229] -> GOTO 183
	expression/L9 = . expression "+" expression, FOLLOW [229] -> GOTO 183
	expression/L9 = . expression "-" expression, FOLLOW [229] -> GOTO 183
	expression/L10 = . expression "*" expression, FOLLOW [229] -> GOTO 183
	expression/L10 = . expression "/" expression, FOLLOW [229] -> GOTO 183
	expression/L10 = . expression "%" expression, FOLLOW [229] -> GOTO 183
	expression/L11 = . expression "<<" expression, FOLLOW [229] -> GOTO 183
	expression/L11 = . expression ">>" expression, FOLLOW [229] -> GOTO 183
	expression/L12 = . expression "." IDENT, FOLLOW [229] -> GOTO 183
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [229] -> GOTO 183
	expression/L13 = . expression "(" ")", FOLLOW [229] -> GOTO 183
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [229] -> GOTO 183
	iexpression = . expression indirection IDENT, FOLLOW [229] -> GOTO 183
	expressionlist = . expression "," expressionlist, FOLLOW [251] -> GOTO 183
	expressionlist = . expression, FOLLOW [251] -> GOTO 183
	expression/L12 = . iexpression, FOLLOW [229] -> GOTO 69
	expressionlist = expression "," . expressionlist, FOLLOW [251] -> GOTO 303
	expression/L2 = . BOOLEAN, FOLLOW [229] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [229] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [229] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [229] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [229] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [229] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [229] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [229] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [229] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [229] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [229] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [229] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [229] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [229] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [229] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [229] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [229] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [229] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [229] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [229] -> SHIFT "null" GOTO 92
[274]
	expression/L1 = "{" expressionlist "}" . (82), FOLLOW [236] -> REDUCE expression #3 CALL structure
[275]
	statement/L1 = "var" variabledefinition ";" . (71), FOLLOW [98] -> REDUCE statement #3 CALL definition
[276]
	statement/L1 = "return" expression ";" . (step:73), FOLLOW [98] -> REDUCE statement #3 CALL return_value
[277]
	statement/L1 = "delete" expression ";" . (74), FOLLOW [98] -> REDUCE statement #3 CALL delete
[278]
	iexpression = expression . indirection IDENT, FOLLOW [227] -> GOTO 128
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [227] -> SHIFT '(' GOTO 129
	expression/L13 = expression . "(" ")", FOLLOW [227] -> SHIFT '(' GOTO 129
	statement/L1 = "if" "(" expression . ")" "{" codeblock "}", FOLLOW [98] -> SHIFT ')' GOTO 304
	statement/L1 = "if" "(" expression . ")" "{" codeblock "}" "else" "{" codeblock "}", FOLLOW [98] -> SHIFT ')' GOTO 304
	expression/L7 = expression . "&" expression, FOLLOW [227] -> SHIFT '&' GOTO 131
	expression/L7 = expression . "^" expression, FOLLOW [227] -> SHIFT '^' GOTO 132
	indirection = . "->" indirection, FOLLOW [17] -> SHIFT "->" GOTO 133
	indirection = . "->", FOLLOW [17] -> SHIFT "->" GOTO 133
	expression/L3 = expression . "=" expression, FOLLOW [227] -> SHIFT '=' GOTO 134
	expression/L9 = expression . "+" expression, FOLLOW [227] -> SHIFT '+' GOTO 135
	expression/L9 = expression . "-" expression, FOLLOW [227] -> SHIFT '-' GOTO 136
	expression/L10 = expression . "*" expression, FOLLOW [227] -> SHIFT '*' GOTO 137
	expression/L10 = expression . "/" expression, FOLLOW [227] -> SHIFT '/' GOTO 138
	expression/L10 = expression . "%" expression, FOLLOW [227] -> SHIFT '%' GOTO 139
	expression/L5 = expression . "&&" expression, FOLLOW [227] -> SHIFT "&&" GOTO 140
	expression/L4 = expression . "||" expression, FOLLOW [227] -> SHIFT "||" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [227] -> SHIFT '|' GOTO 142
	expression/L11 = expression . "<<" expression, FOLLOW [227] -> SHIFT "<<" GOTO 143
	expression/L11 = expression . ">>" expression, FOLLOW [227] -> SHIFT ">>" GOTO 144
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [227] -> SHIFT '[' GOTO 145
	expression/L8 = expression . "==" expression, FOLLOW [227] -> SHIFT "==" GOTO 146
	expression/L8 = expression . "!=" expression, FOLLOW [227] -> SHIFT "!=" GOTO 147
	expression/L8 = expression . ">=" expression, FOLLOW [227] -> SHIFT ">=" GOTO 148
	expression/L8 = expression . "<=" expression, FOLLOW [227] -> SHIFT "<=" GOTO 149
	expression/L8 = expression . ">" expression, FOLLOW [227] -> SHIFT '>' GOTO 150
	expression/L8 = expression . "<" expression, FOLLOW [227] -> SHIFT '<' GOTO 151
	expression/L3 = expression . "+=" expression, FOLLOW [227] -> SHIFT "+=" GOTO 152
	expression/L3 = expression . "-=" expression, FOLLOW [227] -> SHIFT "-=" GOTO 153
	expression/L3 = expression . "*=" expression, FOLLOW [227] -> SHIFT "*=" GOTO 154
	expression/L3 = expression . "/=" expression, FOLLOW [227] -> SHIFT "/=" GOTO 155
	expression/L3 = expression . "^=" expression, FOLLOW [227] -> SHIFT "^=" GOTO 156
	expression/L3 = expression . "&=" expression, FOLLOW [227] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [227] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "%=" expression, FOLLOW [227] -> SHIFT "%=" GOTO 158
	expression/L3 = expression . "&&=" expression, FOLLOW [227] -> SHIFT "&&=" GOTO 159
	expression/L3 = expression . "||=" expression, FOLLOW [227] -> SHIFT "||=" GOTO 160
	expression/L3 = expression . "|=" expression, FOLLOW [227] -> SHIFT "|=" GOTO 161
	expression/L3 = expression . "<<=" expression, FOLLOW [227] -> SHIFT "<<=" GOTO 162
	expression/L3 = expression . ">>=" expression, FOLLOW [227] -> SHIFT ">>=" GOTO 163
	expression/L12 = expression . "." IDENT, FOLLOW [227] -> SHIFT '.' GOTO 164
[279]
	iexpression = expression . indirection IDENT, FOLLOW [227] -> GOTO 128
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [227] -> SHIFT '(' GOTO 129
	expression/L13 = expression . "(" ")", FOLLOW [227] -> SHIFT '(' GOTO 129
	statement/L1 = "while" "(" expression . ")" "{" codeblock "}", FOLLOW [98] -> SHIFT ')' GOTO 305
	expression/L7 = expression . "&" expression, FOLLOW [227] -> SHIFT '&' GOTO 131
	expression/L7 = expression . "^" expression, FOLLOW [227] -> SHIFT '^' GOTO 132
	indirection = . "->" indirection, FOLLOW [17] -> SHIFT "->" GOTO 133
	indirection = . "->", FOLLOW [17] -> SHIFT "->" GOTO 133
	expression/L3 = expression . "=" expression, FOLLOW [227] -> SHIFT '=' GOTO 134
	expression/L9 = expression . "+" expression, FOLLOW [227] -> SHIFT '+' GOTO 135
	expression/L9 = expression . "-" expression, FOLLOW [227] -> SHIFT '-' GOTO 136
	expression/L10 = expression . "*" expression, FOLLOW [227] -> SHIFT '*' GOTO 137
	expression/L10 = expression . "/" expression, FOLLOW [227] -> SHIFT '/' GOTO 138
	expression/L10 = expression . "%" expression, FOLLOW [227] -> SHIFT '%' GOTO 139
	expression/L5 = expression . "&&" expression, FOLLOW [227] -> SHIFT "&&" GOTO 140
	expression/L4 = expression . "||" expression, FOLLOW [227] -> SHIFT "||" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [227] -> SHIFT '|' GOTO 142
	expression/L11 = expression . "<<" expression, FOLLOW [227] -> SHIFT "<<" GOTO 143
	expression/L11 = expression . ">>" expression, FOLLOW [227] -> SHIFT ">>" GOTO 144
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [227] -> SHIFT '[' GOTO 145
	expression/L8 = expression . "==" expression, FOLLOW [227] -> SHIFT "==" GOTO 146
	expression/L8 = expression . "!=" expression, FOLLOW [227] -> SHIFT "!=" GOTO 147
	expression/L8 = expression . ">=" expression, FOLLOW [227] -> SHIFT ">=" GOTO 148
	expression/L8 = expression . "<=" expression, FOLLOW [227] -> SHIFT "<=" GOTO 149
	expression/L8 = expression . ">" expression, FOLLOW [227] -> SHIFT '>' GOTO 150
	expression/L8 = expression . "<" expression, FOLLOW [227] -> SHIFT '<' GOTO 151
	expression/L3 = expression . "+=" expression, FOLLOW [227] -> SHIFT "+=" GOTO 152
	expression/L3 = expression . "-=" expression, FOLLOW [227] -> SHIFT "-=" GOTO 153
	expression/L3 = expression . "*=" expression, FOLLOW [227] -> SHIFT "*=" GOTO 154
	expression/L3 = expression . "/=" expression, FOLLOW [227] -> SHIFT "/=" GOTO 155
	expression/L3 = expression . "^=" expression, FOLLOW [227] -> SHIFT "^=" GOTO 156
	expression/L3 = expression . "&=" expression, FOLLOW [227] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [227] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "%=" expression, FOLLOW [227] -> SHIFT "%=" GOTO 158
	expression/L3 = expression . "&&=" expression, FOLLOW [227] -> SHIFT "&&=" GOTO 159
	expression/L3 = expression . "||=" expression, FOLLOW [227] -> SHIFT "||=" GOTO 160
	expression/L3 = expression . "|=" expression, FOLLOW [227] -> SHIFT "|=" GOTO 161
	expression/L3 = expression . "<<=" expression, FOLLOW [227] -> SHIFT "<<=" GOTO 162
	expression/L3 = expression . ">>=" expression, FOLLOW [227] -> SHIFT ">>=" GOTO 163
	expression/L12 = expression . "." IDENT, FOLLOW [227] -> SHIFT '.' GOTO 164
[280]
	expression/L1 = "new" typespec ":" . expression, FOLLOW [236] -> GOTO 306
	expression/L3 = . expression "=" expression, FOLLOW [236] -> GOTO 306
	expression/L3 = . expression "+=" expression, FOLLOW [236] -> GOTO 306
	expression/L3 = . expression "-=" expression, FOLLOW [236] -> GOTO 306
	expression/L3 = . expression "*=" expression, FOLLOW [236] -> GOTO 306
	expression/L3 = . expression "/=" expression, FOLLOW [236] -> GOTO 306
	expression/L3 = . expression "^=" expression, FOLLOW [236] -> GOTO 306
	expression/L3 = . expression "&=" expression, FOLLOW [236] -> GOTO 306
	expression/L3 = . expression "%=" expression, FOLLOW [236] -> GOTO 306
	expression/L3 = . expression "&&=" expression, FOLLOW [236] -> GOTO 306
	expression/L3 = . expression "||=" expression, FOLLOW [236] -> GOTO 306
	expression/L3 = . expression "&=" expression, FOLLOW [236] -> GOTO 306
	expression/L3 = . expression "|=" expression, FOLLOW [236] -> GOTO 306
	expression/L3 = . expression "<<=" expression, FOLLOW [236] -> GOTO 306
	expression/L3 = . expression ">>=" expression, FOLLOW [236] -> GOTO 306
	expression/L4 = . expression "||" expression, FOLLOW [236] -> GOTO 306
	expression/L5 = . expression "&&" expression, FOLLOW [236] -> GOTO 306
	expression/L6 = . expression "|" expression, FOLLOW [236] -> GOTO 306
	expression/L7 = . expression "^" expression, FOLLOW [236] -> GOTO 306
	expression/L7 = . expression "&" expression, FOLLOW [236] -> GOTO 306
	expression/L8 = . expression "==" expression, FOLLOW [236] -> GOTO 306
	expression/L8 = . expression "!=" expression, FOLLOW [236] -> GOTO 306
	expression/L8 = . expression "<=" expression, FOLLOW [236] -> GOTO 306
	expression/L8 = . expression "<" expression, FOLLOW [236] -> GOTO 306
	expression/L8 = . expression ">=" expression, FOLLOW [236] -> GOTO 306
	expression/L8 = . expression ">" expression, FOLLOW [236] -> GOTO 306
	expression/L9 = . expression "+" expression, FOLLOW [236] -> GOTO 306
	expression/L9 = . expression "-" expression, FOLLOW [236] -> GOTO 306
	expression/L10 = . expression "*" expression, FOLLOW [236] -> GOTO 306
	expression/L10 = . expression "/" expression, FOLLOW [236] -> GOTO 306
	expression/L10 = . expression "%" expression, FOLLOW [236] -> GOTO 306
	expression/L11 = . expression "<<" expression, FOLLOW [236] -> GOTO 306
	expression/L11 = . expression ">>" expression, FOLLOW [236] -> GOTO 306
	expression/L12 = . expression "." IDENT, FOLLOW [236] -> GOTO 306
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [236] -> GOTO 306
	expression/L13 = . expression "(" ")", FOLLOW [236] -> GOTO 306
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [236] -> GOTO 306
	iexpression = . expression indirection IDENT, FOLLOW [236] -> GOTO 306
	expression/L12 = . iexpression, FOLLOW [236] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [236] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [236] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [236] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [236] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [236] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [236] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [236] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [236] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [236] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [236] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [236] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [236] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [236] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [236] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [236] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [236] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [236] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [236] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [236] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [236] -> SHIFT "null" GOTO 92
[281]
	expression/L1 = "cast" typespec ":" . "{" expression "}", FOLLOW [236] -> SHIFT '{' GOTO 307
	expression/L1 = "cast" typespec ":" . "{" "}", FOLLOW [236] -> SHIFT '{' GOTO 307
[282]
	variabledefinition = typespec IDENT "[" expression "]" "=" . expression, FOLLOW [14] -> GOTO 308
	expression/L3 = . expression "=" expression, FOLLOW [97] -> GOTO 308
	expression/L3 = . expression "+=" expression, FOLLOW [97] -> GOTO 308
	expression/L3 = . expression "-=" expression, FOLLOW [97] -> GOTO 308
	expression/L3 = . expression "*=" expression, FOLLOW [97] -> GOTO 308
	expression/L3 = . expression "/=" expression, FOLLOW [97] -> GOTO 308
	expression/L3 = . expression "^=" expression, FOLLOW [97] -> GOTO 308
	expression/L3 = . expression "&=" expression, FOLLOW [97] -> GOTO 308
	expression/L3 = . expression "%=" expression, FOLLOW [97] -> GOTO 308
	expression/L3 = . expression "&&=" expression, FOLLOW [97] -> GOTO 308
	expression/L3 = . expression "||=" expression, FOLLOW [97] -> GOTO 308
	expression/L3 = . expression "&=" expression, FOLLOW [97] -> GOTO 308
	expression/L3 = . expression "|=" expression, FOLLOW [97] -> GOTO 308
	expression/L3 = . expression "<<=" expression, FOLLOW [97] -> GOTO 308
	expression/L3 = . expression ">>=" expression, FOLLOW [97] -> GOTO 308
	expression/L4 = . expression "||" expression, FOLLOW [97] -> GOTO 308
	expression/L5 = . expression "&&" expression, FOLLOW [97] -> GOTO 308
	expression/L6 = . expression "|" expression, FOLLOW [97] -> GOTO 308
	expression/L7 = . expression "^" expression, FOLLOW [97] -> GOTO 308
	expression/L7 = . expression "&" expression, FOLLOW [97] -> GOTO 308
	expression/L8 = . expression "==" expression, FOLLOW [97] -> GOTO 308
	expression/L8 = . expression "!=" expression, FOLLOW [97] -> GOTO 308
	expression/L8 = . expression "<=" expression, FOLLOW [97] -> GOTO 308
	expression/L8 = . expression "<" expression, FOLLOW [97] -> GOTO 308
	expression/L8 = . expression ">=" expression, FOLLOW [97] -> GOTO 308
	expression/L8 = . expression ">" expression, FOLLOW [97] -> GOTO 308
	expression/L9 = . expression "+" expression, FOLLOW [97] -> GOTO 308
	expression/L9 = . expression "-" expression, FOLLOW [97] -> GOTO 308
	expression/L10 = . expression "*" expression, FOLLOW [97] -> GOTO 308
	expression/L10 = . expression "/" expression, FOLLOW [97] -> GOTO 308
	expression/L10 = . expression "%" expression, FOLLOW [97] -> GOTO 308
	expression/L11 = . expression "<<" expression, FOLLOW [97] -> GOTO 308
	expression/L11 = . expression ">>" expression, FOLLOW [97] -> GOTO 308
	expression/L12 = . expression "." IDENT, FOLLOW [97] -> GOTO 308
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [97] -> GOTO 308
	expression/L13 = . expression "(" ")", FOLLOW [97] -> GOTO 308
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [97] -> GOTO 308
	iexpression = . expression indirection IDENT, FOLLOW [97] -> GOTO 308
	expression/L12 = . iexpression, FOLLOW [97] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [97] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [97] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [97] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [97] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [97] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [97] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [97] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [97] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [97] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [97] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [97] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [97] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [97] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [97] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [97] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [97] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [97] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [97] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [97] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [97] -> SHIFT "null" GOTO 92
[283]
	paramdecl = typespec IDENT . (69), FOLLOW [184] -> REDUCE paramdecl #2 CALL paramdef
[284]
	callablebody = "(" parameterlist ")" . "const" "{" codeblock "}", FOLLOW [246] -> SHIFT "const" GOTO 309
	callablebody = "(" parameterlist ")" . "{" codeblock "}", FOLLOW [246] -> SHIFT '{' GOTO 310
[285]
	typespec/L1 = . typename, FOLLOW [17] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [17] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [17] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [17] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [17] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [17] -> GOTO 8
	paramdecl = . typespec IDENT, FOLLOW [184] -> GOTO 186
	parameters = paramdecl "," . parameters, FOLLOW [10] -> GOTO 311
	parameters = . paramdecl "," parameters, FOLLOW [10] -> GOTO 189
	parameters = . paramdecl, FOLLOW [10] -> GOTO 189
	typename/L1 = . IDENT, FOLLOW [62] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [62] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [17] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [17] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [17] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [17] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [17] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [17] -> SHIFT "const" GOTO 18
[286]
	interface_definition = "function" IDENT typespec . "(" parameterlist ")" ";", FOLLOW [171] -> SHIFT '(' GOTO 312
	interface_definition = "function" IDENT typespec . "(" parameterlist ")" "const" ";", FOLLOW [171] -> SHIFT '(' GOTO 312
[287]
	typespec/L1 = . typename, FOLLOW [17] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [17] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [17] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [17] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [17] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [17] -> GOTO 8
	paramdecl = . typespec IDENT, FOLLOW [184] -> GOTO 186
	interface_definition = "procedure" IDENT "(" . parameterlist ")" ";", FOLLOW [171] -> GOTO 313
	interface_definition = "procedure" IDENT "(" . parameterlist ")" "const" ";", FOLLOW [171] -> GOTO 313
	parameterlist = . parameters, FOLLOW [10] -> GOTO 188
	parameters = . paramdecl "," parameters, FOLLOW [10] -> GOTO 189
	parameters = . paramdecl, FOLLOW [10] -> GOTO 189
	typename/L1 = . IDENT, FOLLOW [62] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [62] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [17] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [17] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [17] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [17] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [17] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [17] -> SHIFT "const" GOTO 18
	parameterlist = . (68), FOLLOW [10] -> REDUCE parameterlist #0 CALL paramdeflist
[288]
	interface_definition = "operator" operatordecl typespec . "(" parameterlist ")" ";", FOLLOW [171] -> SHIFT '(' GOTO 314
	interface_definition = "operator" operatordecl typespec . "(" parameterlist ")" "const" ";", FOLLOW [171] -> SHIFT '(' GOTO 314
[289]
	typespec/L1 = . typename, FOLLOW [17] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [17] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [17] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [17] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [17] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [17] -> GOTO 8
	paramdecl = . typespec IDENT, FOLLOW [184] -> GOTO 186
	interface_definition = "operator" operatordecl "(" . parameterlist ")" ";", FOLLOW [171] -> GOTO 315
	interface_definition = "operator" operatordecl "(" . parameterlist ")" "const" ";", FOLLOW [171] -> GOTO 315
	parameterlist = . parameters, FOLLOW [10] -> GOTO 188
	parameters = . paramdecl "," parameters, FOLLOW [10] -> GOTO 189
	parameters = . paramdecl, FOLLOW [10] -> GOTO 189
	typename/L1 = . IDENT, FOLLOW [62] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [62] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [17] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [17] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [17] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [17] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [17] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [17] -> SHIFT "const" GOTO 18
	parameterlist = . (68), FOLLOW [10] -> REDUCE parameterlist #0 CALL paramdeflist
[290]
	operatordecl = "(" ")" . (57), FOLLOW [185] -> REDUCE operatordecl #2 CALL operatordecl {name="()",symbol="__call"}
[291]
	operatordecl = "[" "]" . (58), FOLLOW [185] -> REDUCE operatordecl #2 CALL operatordecl {name="[]",symbol="__get"}
[292]
	typespec/L1 = . typename, FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [9] -> GOTO 8
	operatordefinition = linkage "operator" operatordecl . typespec callablebody, FOLLOW [174] -> GOTO 316
	operatordefinition = linkage "operator" operatordecl . callablebody, FOLLOW [174] -> GOTO 317
	typename/L1 = . IDENT, FOLLOW [168] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [168] -> SHIFT IDENT GOTO 17
	callablebody = . "(" parameterlist ")" "{" codeblock "}", FOLLOW [174] -> SHIFT '(' GOTO 99
	callablebody = . "(" parameterlist ")" "const" "{" codeblock "}", FOLLOW [174] -> SHIFT '(' GOTO 99
	typespec/L1 = . "const" typename, FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
[293]
	constructordefinition = linkage "constructor" callablebody . (38), FOLLOW [174] -> REDUCE constructordefinition #3 CALL constructordef
[294]
	constructordefinition = "destructor" "{" codeblock . "}", FOLLOW [174] -> SHIFT '}' GOTO 318
[295]
	inheritlist = typepath "," inheritlist . (step:32), FOLLOW [19] -> REDUCE inheritlist #3 CALL inheritdef 1
[296]
	classdefinition = "class" IDENT ":" inheritlist "{" class_definitionlist . "}", FOLLOW [175] -> SHIFT '}' GOTO 319
[297]
	extern_definition = "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist . ")" ";", FOLLOW [59] -> SHIFT ')' GOTO 320
	extern_definition = "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist . "..." ")" ";", FOLLOW [59] -> SHIFT "..." GOTO 321
[298]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist ")" . ";", FOLLOW [59] -> SHIFT ';' GOTO 322
[299]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist "..." . ")" ";", FOLLOW [59] -> SHIFT ')' GOTO 323
[300]
	extern_parameters = typespec "," . extern_parameters, FOLLOW [186] -> GOTO 324
	typespec/L1 = . typename, FOLLOW [188] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [188] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [188] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [188] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [188] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [188] -> GOTO 8
	extern_parameters = . typespec "," extern_parameters, FOLLOW [186] -> GOTO 233
	extern_parameters = . typespec, FOLLOW [186] -> GOTO 233
	typename/L1 = . IDENT, FOLLOW [189] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [189] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [188] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [188] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [188] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [188] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [188] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [188] -> SHIFT "const" GOTO 18
[301]
	expression/L13 = expression "(" expressionlist ")" . (128), FOLLOW [236] -> REDUCE expression #4 CALL operator "()"
[302]
	expression/L13 = expression "[" expressionlist "]" . (129), FOLLOW [236] -> REDUCE expression #4 CALL operator "[]"
[303]
	expressionlist = expression "," expressionlist ., FOLLOW [251] -> REDUCE expressionlist #3
[304]
	statement/L1 = "if" "(" expression ")" . "{" codeblock "}", FOLLOW [98] -> SHIFT '{' GOTO 325
	statement/L1 = "if" "(" expression ")" . "{" codeblock "}" "else" "{" codeblock "}", FOLLOW [98] -> SHIFT '{' GOTO 325
[305]
	statement/L1 = "while" "(" expression ")" . "{" codeblock "}", FOLLOW [98] -> SHIFT '{' GOTO 326
[306]
	iexpression = expression . indirection IDENT, FOLLOW [236] -> GOTO 128
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [236] -> SHIFT '(' GOTO 129
	expression/L13 = expression . "(" ")", FOLLOW [236] -> SHIFT '(' GOTO 129
	expression/L7 = expression . "&" expression, FOLLOW [236] -> SHIFT '&' GOTO 131
	expression/L7 = expression . "^" expression, FOLLOW [236] -> SHIFT '^' GOTO 132
	indirection = . "->" indirection, FOLLOW [17] -> SHIFT "->" GOTO 133
	indirection = . "->", FOLLOW [17] -> SHIFT "->" GOTO 133
	expression/L3 = expression . "=" expression, FOLLOW [236] -> SHIFT '=' GOTO 134
	expression/L9 = expression . "+" expression, FOLLOW [236] -> SHIFT '+' GOTO 135
	expression/L9 = expression . "-" expression, FOLLOW [236] -> SHIFT '-' GOTO 136
	expression/L10 = expression . "*" expression, FOLLOW [236] -> SHIFT '*' GOTO 137
	expression/L10 = expression . "/" expression, FOLLOW [236] -> SHIFT '/' GOTO 138
	expression/L10 = expression . "%" expression, FOLLOW [236] -> SHIFT '%' GOTO 139
	expression/L5 = expression . "&&" expression, FOLLOW [236] -> SHIFT "&&" GOTO 140
	expression/L4 = expression . "||" expression, FOLLOW [236] -> SHIFT "||" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [236] -> SHIFT '|' GOTO 142
	expression/L11 = expression . "<<" expression, FOLLOW [236] -> SHIFT "<<" GOTO 143
	expression/L11 = expression . ">>" expression, FOLLOW [236] -> SHIFT ">>" GOTO 144
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [236] -> SHIFT '[' GOTO 145
	expression/L8 = expression . "==" expression, FOLLOW [236] -> SHIFT "==" GOTO 146
	expression/L8 = expression . "!=" expression, FOLLOW [236] -> SHIFT "!=" GOTO 147
	expression/L8 = expression . ">=" expression, FOLLOW [236] -> SHIFT ">=" GOTO 148
	expression/L8 = expression . "<=" expression, FOLLOW [236] -> SHIFT "<=" GOTO 149
	expression/L8 = expression . ">" expression, FOLLOW [236] -> SHIFT '>' GOTO 150
	expression/L8 = expression . "<" expression, FOLLOW [236] -> SHIFT '<' GOTO 151
	expression/L3 = expression . "+=" expression, FOLLOW [236] -> SHIFT "+=" GOTO 152
	expression/L3 = expression . "-=" expression, FOLLOW [236] -> SHIFT "-=" GOTO 153
	expression/L3 = expression . "*=" expression, FOLLOW [236] -> SHIFT "*=" GOTO 154
	expression/L3 = expression . "/=" expression, FOLLOW [236] -> SHIFT "/=" GOTO 155
	expression/L3 = expression . "^=" expression, FOLLOW [236] -> SHIFT "^=" GOTO 156
	expression/L3 = expression . "&=" expression, FOLLOW [236] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [236] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "%=" expression, FOLLOW [236] -> SHIFT "%=" GOTO 158
	expression/L3 = expression . "&&=" expression, FOLLOW [236] -> SHIFT "&&=" GOTO 159
	expression/L3 = expression . "||=" expression, FOLLOW [236] -> SHIFT "||=" GOTO 160
	expression/L3 = expression . "|=" expression, FOLLOW [236] -> SHIFT "|=" GOTO 161
	expression/L3 = expression . "<<=" expression, FOLLOW [236] -> SHIFT "<<=" GOTO 162
	expression/L3 = expression . ">>=" expression, FOLLOW [236] -> SHIFT ">>=" GOTO 163
	expression/L12 = expression . "." IDENT, FOLLOW [236] -> SHIFT '.' GOTO 164
	expression/L1 = "new" typespec ":" expression . (83), FOLLOW [236] -> REDUCE expression #4 CALL allocate
[307]
	expression/L1 = "cast" typespec ":" "{" . expression "}", FOLLOW [236] -> GOTO 327
	expression/L3 = . expression "=" expression, FOLLOW [236] -> GOTO 327
	expression/L3 = . expression "+=" expression, FOLLOW [236] -> GOTO 327
	expression/L3 = . expression "-=" expression, FOLLOW [236] -> GOTO 327
	expression/L3 = . expression "*=" expression, FOLLOW [236] -> GOTO 327
	expression/L3 = . expression "/=" expression, FOLLOW [236] -> GOTO 327
	expression/L3 = . expression "^=" expression, FOLLOW [236] -> GOTO 327
	expression/L3 = . expression "&=" expression, FOLLOW [236] -> GOTO 327
	expression/L3 = . expression "%=" expression, FOLLOW [236] -> GOTO 327
	expression/L3 = . expression "&&=" expression, FOLLOW [236] -> GOTO 327
	expression/L3 = . expression "||=" expression, FOLLOW [236] -> GOTO 327
	expression/L3 = . expression "&=" expression, FOLLOW [236] -> GOTO 327
	expression/L3 = . expression "|=" expression, FOLLOW [236] -> GOTO 327
	expression/L3 = . expression "<<=" expression, FOLLOW [236] -> GOTO 327
	expression/L3 = . expression ">>=" expression, FOLLOW [236] -> GOTO 327
	expression/L4 = . expression "||" expression, FOLLOW [236] -> GOTO 327
	expression/L5 = . expression "&&" expression, FOLLOW [236] -> GOTO 327
	expression/L6 = . expression "|" expression, FOLLOW [236] -> GOTO 327
	expression/L7 = . expression "^" expression, FOLLOW [236] -> GOTO 327
	expression/L7 = . expression "&" expression, FOLLOW [236] -> GOTO 327
	expression/L8 = . expression "==" expression, FOLLOW [236] -> GOTO 327
	expression/L8 = . expression "!=" expression, FOLLOW [236] -> GOTO 327
	expression/L8 = . expression "<=" expression, FOLLOW [236] -> GOTO 327
	expression/L8 = . expression "<" expression, FOLLOW [236] -> GOTO 327
	expression/L8 = . expression ">=" expression, FOLLOW [236] -> GOTO 327
	expression/L8 = . expression ">" expression, FOLLOW [236] -> GOTO 327
	expression/L9 = . expression "+" expression, FOLLOW [236] -> GOTO 327
	expression/L9 = . expression "-" expression, FOLLOW [236] -> GOTO 327
	expression/L10 = . expression "*" expression, FOLLOW [236] -> GOTO 327
	expression/L10 = . expression "/" expression, FOLLOW [236] -> GOTO 327
	expression/L10 = . expression "%" expression, FOLLOW [236] -> GOTO 327
	expression/L11 = . expression "<<" expression, FOLLOW [236] -> GOTO 327
	expression/L11 = . expression ">>" expression, FOLLOW [236] -> GOTO 327
	expression/L12 = . expression "." IDENT, FOLLOW [236] -> GOTO 327
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [236] -> GOTO 327
	expression/L13 = . expression "(" ")", FOLLOW [236] -> GOTO 327
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [236] -> GOTO 327
	iexpression = . expression indirection IDENT, FOLLOW [236] -> GOTO 327
	expression/L12 = . iexpression, FOLLOW [236] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [236] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [236] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [236] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [236] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [236] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [236] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [236] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [236] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [236] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [236] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [236] -> SHIFT '{' GOTO 95
	expression/L1 = "cast" typespec ":" "{" . "}", FOLLOW [236] -> SHIFT '}' GOTO 328
	expression/L9 = . "+" expression, FOLLOW [236] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [236] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [236] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [236] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [236] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [236] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [236] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [236] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [236] -> SHIFT "null" GOTO 92
[308]
	iexpression = expression . indirection IDENT, FOLLOW [97] -> GOTO 128
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [97] -> SHIFT '(' GOTO 129
	expression/L13 = expression . "(" ")", FOLLOW [97] -> SHIFT '(' GOTO 129
	expression/L7 = expression . "&" expression, FOLLOW [97] -> SHIFT '&' GOTO 131
	expression/L7 = expression . "^" expression, FOLLOW [97] -> SHIFT '^' GOTO 132
	indirection = . "->" indirection, FOLLOW [17] -> SHIFT "->" GOTO 133
	indirection = . "->", FOLLOW [17] -> SHIFT "->" GOTO 133
	expression/L3 = expression . "=" expression, FOLLOW [97] -> SHIFT '=' GOTO 134
	expression/L9 = expression . "+" expression, FOLLOW [97] -> SHIFT '+' GOTO 135
	expression/L9 = expression . "-" expression, FOLLOW [97] -> SHIFT '-' GOTO 136
	expression/L10 = expression . "*" expression, FOLLOW [97] -> SHIFT '*' GOTO 137
	expression/L10 = expression . "/" expression, FOLLOW [97] -> SHIFT '/' GOTO 138
	expression/L10 = expression . "%" expression, FOLLOW [97] -> SHIFT '%' GOTO 139
	expression/L5 = expression . "&&" expression, FOLLOW [97] -> SHIFT "&&" GOTO 140
	expression/L4 = expression . "||" expression, FOLLOW [97] -> SHIFT "||" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [97] -> SHIFT '|' GOTO 142
	expression/L11 = expression . "<<" expression, FOLLOW [97] -> SHIFT "<<" GOTO 143
	expression/L11 = expression . ">>" expression, FOLLOW [97] -> SHIFT ">>" GOTO 144
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [97] -> SHIFT '[' GOTO 145
	expression/L8 = expression . "==" expression, FOLLOW [97] -> SHIFT "==" GOTO 146
	expression/L8 = expression . "!=" expression, FOLLOW [97] -> SHIFT "!=" GOTO 147
	expression/L8 = expression . ">=" expression, FOLLOW [97] -> SHIFT ">=" GOTO 148
	expression/L8 = expression . "<=" expression, FOLLOW [97] -> SHIFT "<=" GOTO 149
	expression/L8 = expression . ">" expression, FOLLOW [97] -> SHIFT '>' GOTO 150
	expression/L8 = expression . "<" expression, FOLLOW [97] -> SHIFT '<' GOTO 151
	expression/L3 = expression . "+=" expression, FOLLOW [97] -> SHIFT "+=" GOTO 152
	expression/L3 = expression . "-=" expression, FOLLOW [97] -> SHIFT "-=" GOTO 153
	expression/L3 = expression . "*=" expression, FOLLOW [97] -> SHIFT "*=" GOTO 154
	expression/L3 = expression . "/=" expression, FOLLOW [97] -> SHIFT "/=" GOTO 155
	expression/L3 = expression . "^=" expression, FOLLOW [97] -> SHIFT "^=" GOTO 156
	expression/L3 = expression . "&=" expression, FOLLOW [97] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [97] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "%=" expression, FOLLOW [97] -> SHIFT "%=" GOTO 158
	expression/L3 = expression . "&&=" expression, FOLLOW [97] -> SHIFT "&&=" GOTO 159
	expression/L3 = expression . "||=" expression, FOLLOW [97] -> SHIFT "||=" GOTO 160
	expression/L3 = expression . "|=" expression, FOLLOW [97] -> SHIFT "|=" GOTO 161
	expression/L3 = expression . "<<=" expression, FOLLOW [97] -> SHIFT "<<=" GOTO 162
	expression/L3 = expression . ">>=" expression, FOLLOW [97] -> SHIFT ">>=" GOTO 163
	expression/L12 = expression . "." IDENT, FOLLOW [97] -> SHIFT '.' GOTO 164
	variabledefinition = typespec IDENT "[" expression "]" "=" expression . (step:80), FOLLOW [14] -> REDUCE variabledefinition #7 CALL vardef_array_assign
[309]
	callablebody = "(" parameterlist ")" "const" . "{" codeblock "}", FOLLOW [246] -> SHIFT '{' GOTO 329
[310]
	statement/L1 = . typedefinition ";", FOLLOW [98] -> GOTO 63
	functiondefinition = . linkage "function" IDENT typespec callablebody, FOLLOW [98] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [98] -> GOTO 14
	statement/L1 = . functiondefinition, FOLLOW [98] -> GOTO 64
	callablebody = "(" parameterlist ")" "{" . codeblock "}", FOLLOW [246] -> GOTO 330
	codeblock = . statementlist, FOLLOW [18] -> GOTO 66
	statementlist = . statement statementlist, FOLLOW [18] -> GOTO 67
	statement/L1 = . expression ";", FOLLOW [98] -> GOTO 68
	expression/L3 = . expression "=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "+=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "-=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "*=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "/=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "^=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "&=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "%=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "&&=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "||=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "&=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "|=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "<<=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression ">>=" expression, FOLLOW [97] -> GOTO 68
	expression/L4 = . expression "||" expression, FOLLOW [97] -> GOTO 68
	expression/L5 = . expression "&&" expression, FOLLOW [97] -> GOTO 68
	expression/L6 = . expression "|" expression, FOLLOW [97] -> GOTO 68
	expression/L7 = . expression "^" expression, FOLLOW [97] -> GOTO 68
	expression/L7 = . expression "&" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression "==" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression "!=" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression "<=" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression "<" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression ">=" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression ">" expression, FOLLOW [97] -> GOTO 68
	expression/L9 = . expression "+" expression, FOLLOW [97] -> GOTO 68
	expression/L9 = . expression "-" expression, FOLLOW [97] -> GOTO 68
	expression/L10 = . expression "*" expression, FOLLOW [97] -> GOTO 68
	expression/L10 = . expression "/" expression, FOLLOW [97] -> GOTO 68
	expression/L10 = . expression "%" expression, FOLLOW [97] -> GOTO 68
	expression/L11 = . expression "<<" expression, FOLLOW [97] -> GOTO 68
	expression/L11 = . expression ">>" expression, FOLLOW [97] -> GOTO 68
	expression/L12 = . expression "." IDENT, FOLLOW [97] -> GOTO 68
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [97] -> GOTO 68
	expression/L13 = . expression "(" ")", FOLLOW [97] -> GOTO 68
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [97] -> GOTO 68
	iexpression = . expression indirection IDENT, FOLLOW [97] -> GOTO 68
	expression/L12 = . iexpression, FOLLOW [97] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [97] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [97] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [97] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [97] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [97] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [97] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [97] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [97] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [97] -> SHIFT '&' GOTO 78
	typedefinition = . "typedef" typepath IDENT, FOLLOW [14] -> SHIFT "typedef" GOTO 19
	statement/L1 = . "{" codeblock "}", FOLLOW [98] -> SHIFT '{' GOTO 79
	expression/L1 = . "{" expressionlist "}", FOLLOW [97] -> SHIFT '{' GOTO 79
	expression/L1 = . "{" "}", FOLLOW [97] -> SHIFT '{' GOTO 79
	linkage = . "private", FOLLOW [61] -> SHIFT "private" GOTO 23
	linkage = . "public", FOLLOW [61] -> SHIFT "public" GOTO 24
	expression/L9 = . "+" expression, FOLLOW [97] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [97] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [97] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [97] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [97] -> SHIFT '!' GOTO 84
	statement/L1 = . "var" variabledefinition ";", FOLLOW [98] -> SHIFT "var" GOTO 85
	statement/L1 = . "return" expression ";", FOLLOW [98] -> SHIFT "return" GOTO 86
	statement/L1 = . "delete" expression ";", FOLLOW [98] -> SHIFT "delete" GOTO 87
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}", FOLLOW [98] -> SHIFT "if" GOTO 88
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}", FOLLOW [98] -> SHIFT "if" GOTO 88
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}", FOLLOW [98] -> SHIFT "while" GOTO 89
	expression/L1 = . "new" typespec ":" expression, FOLLOW [97] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [97] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [97] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [97] -> SHIFT "null" GOTO 92
	statementlist = ., FOLLOW [18] -> REDUCE statementlist #0
	linkage = . (34), FOLLOW [61] -> REDUCE linkage #0 CALL linkage {name="private",linkage="internal"}
[311]
	parameters = paramdecl "," parameters ., FOLLOW [10] -> REDUCE parameters #3
[312]
	typespec/L1 = . typename, FOLLOW [17] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [17] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [17] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [17] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [17] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [17] -> GOTO 8
	paramdecl = . typespec IDENT, FOLLOW [184] -> GOTO 186
	interface_definition = "function" IDENT typespec "(" . parameterlist ")" ";", FOLLOW [171] -> GOTO 331
	interface_definition = "function" IDENT typespec "(" . parameterlist ")" "const" ";", FOLLOW [171] -> GOTO 331
	parameterlist = . parameters, FOLLOW [10] -> GOTO 188
	parameters = . paramdecl "," parameters, FOLLOW [10] -> GOTO 189
	parameters = . paramdecl, FOLLOW [10] -> GOTO 189
	typename/L1 = . IDENT, FOLLOW [62] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [62] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [17] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [17] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [17] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [17] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [17] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [17] -> SHIFT "const" GOTO 18
	parameterlist = . (68), FOLLOW [10] -> REDUCE parameterlist #0 CALL paramdeflist
[313]
	interface_definition = "procedure" IDENT "(" parameterlist . ")" ";", FOLLOW [171] -> SHIFT ')' GOTO 332
	interface_definition = "procedure" IDENT "(" parameterlist . ")" "const" ";", FOLLOW [171] -> SHIFT ')' GOTO 332
[314]
	typespec/L1 = . typename, FOLLOW [17] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [17] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [17] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [17] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [17] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [17] -> GOTO 8
	paramdecl = . typespec IDENT, FOLLOW [184] -> GOTO 186
	interface_definition = "operator" operatordecl typespec "(" . parameterlist ")" ";", FOLLOW [171] -> GOTO 333
	interface_definition = "operator" operatordecl typespec "(" . parameterlist ")" "const" ";", FOLLOW [171] -> GOTO 333
	parameterlist = . parameters, FOLLOW [10] -> GOTO 188
	parameters = . paramdecl "," parameters, FOLLOW [10] -> GOTO 189
	parameters = . paramdecl, FOLLOW [10] -> GOTO 189
	typename/L1 = . IDENT, FOLLOW [62] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [62] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [17] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [17] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [17] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [17] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [17] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [17] -> SHIFT "const" GOTO 18
	parameterlist = . (68), FOLLOW [10] -> REDUCE parameterlist #0 CALL paramdeflist
[315]
	interface_definition = "operator" operatordecl "(" parameterlist . ")" ";", FOLLOW [171] -> SHIFT ')' GOTO 334
	interface_definition = "operator" operatordecl "(" parameterlist . ")" "const" ";", FOLLOW [171] -> SHIFT ')' GOTO 334
[316]
	operatordefinition = linkage "operator" operatordecl typespec . callablebody, FOLLOW [174] -> GOTO 335
	callablebody = . "(" parameterlist ")" "{" codeblock "}", FOLLOW [174] -> SHIFT '(' GOTO 99
	callablebody = . "(" parameterlist ")" "const" "{" codeblock "}", FOLLOW [174] -> SHIFT '(' GOTO 99
[317]
	operatordefinition = linkage "operator" operatordecl callablebody . (41), FOLLOW [174] -> REDUCE operatordefinition #4 CALL operator_funcdef
[318]
	constructordefinition = "destructor" "{" codeblock "}" . (39), FOLLOW [174] -> REDUCE constructordefinition #4 CALL destructordef
[319]
	classdefinition = "class" IDENT ":" inheritlist "{" class_definitionlist "}" . (step:33), FOLLOW [175] -> REDUCE classdefinition #7 CALL classdef
[320]
	extern_definition = "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist ")" . ";", FOLLOW [59] -> SHIFT ';' GOTO 336
[321]
	extern_definition = "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist "..." . ")" ";", FOLLOW [59] -> SHIFT ')' GOTO 337
[322]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist ")" ";" . (3), FOLLOW [59] -> REDUCE extern_definition #8 CALL extern_procdef
[323]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist "..." ")" . ";", FOLLOW [59] -> SHIFT ';' GOTO 338
[324]
	extern_parameters = typespec "," extern_parameters ., FOLLOW [186] -> REDUCE extern_parameters #3
[325]
	statement/L1 = . typedefinition ";", FOLLOW [98] -> GOTO 63
	functiondefinition = . linkage "function" IDENT typespec callablebody, FOLLOW [98] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [98] -> GOTO 14
	statement/L1 = . functiondefinition, FOLLOW [98] -> GOTO 64
	statement/L1 = "if" "(" expression ")" "{" . codeblock "}", FOLLOW [98] -> GOTO 339
	statement/L1 = "if" "(" expression ")" "{" . codeblock "}" "else" "{" codeblock "}", FOLLOW [98] -> GOTO 339
	codeblock = . statementlist, FOLLOW [18] -> GOTO 66
	statementlist = . statement statementlist, FOLLOW [18] -> GOTO 67
	statement/L1 = . expression ";", FOLLOW [98] -> GOTO 68
	expression/L3 = . expression "=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "+=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "-=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "*=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "/=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "^=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "&=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "%=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "&&=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "||=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "&=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "|=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "<<=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression ">>=" expression, FOLLOW [97] -> GOTO 68
	expression/L4 = . expression "||" expression, FOLLOW [97] -> GOTO 68
	expression/L5 = . expression "&&" expression, FOLLOW [97] -> GOTO 68
	expression/L6 = . expression "|" expression, FOLLOW [97] -> GOTO 68
	expression/L7 = . expression "^" expression, FOLLOW [97] -> GOTO 68
	expression/L7 = . expression "&" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression "==" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression "!=" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression "<=" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression "<" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression ">=" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression ">" expression, FOLLOW [97] -> GOTO 68
	expression/L9 = . expression "+" expression, FOLLOW [97] -> GOTO 68
	expression/L9 = . expression "-" expression, FOLLOW [97] -> GOTO 68
	expression/L10 = . expression "*" expression, FOLLOW [97] -> GOTO 68
	expression/L10 = . expression "/" expression, FOLLOW [97] -> GOTO 68
	expression/L10 = . expression "%" expression, FOLLOW [97] -> GOTO 68
	expression/L11 = . expression "<<" expression, FOLLOW [97] -> GOTO 68
	expression/L11 = . expression ">>" expression, FOLLOW [97] -> GOTO 68
	expression/L12 = . expression "." IDENT, FOLLOW [97] -> GOTO 68
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [97] -> GOTO 68
	expression/L13 = . expression "(" ")", FOLLOW [97] -> GOTO 68
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [97] -> GOTO 68
	iexpression = . expression indirection IDENT, FOLLOW [97] -> GOTO 68
	expression/L12 = . iexpression, FOLLOW [97] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [97] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [97] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [97] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [97] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [97] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [97] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [97] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [97] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [97] -> SHIFT '&' GOTO 78
	typedefinition = . "typedef" typepath IDENT, FOLLOW [14] -> SHIFT "typedef" GOTO 19
	statement/L1 = . "{" codeblock "}", FOLLOW [98] -> SHIFT '{' GOTO 79
	expression/L1 = . "{" expressionlist "}", FOLLOW [97] -> SHIFT '{' GOTO 79
	expression/L1 = . "{" "}", FOLLOW [97] -> SHIFT '{' GOTO 79
	linkage = . "private", FOLLOW [61] -> SHIFT "private" GOTO 23
	linkage = . "public", FOLLOW [61] -> SHIFT "public" GOTO 24
	expression/L9 = . "+" expression, FOLLOW [97] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [97] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [97] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [97] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [97] -> SHIFT '!' GOTO 84
	statement/L1 = . "var" variabledefinition ";", FOLLOW [98] -> SHIFT "var" GOTO 85
	statement/L1 = . "return" expression ";", FOLLOW [98] -> SHIFT "return" GOTO 86
	statement/L1 = . "delete" expression ";", FOLLOW [98] -> SHIFT "delete" GOTO 87
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}", FOLLOW [98] -> SHIFT "if" GOTO 88
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}", FOLLOW [98] -> SHIFT "if" GOTO 88
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}", FOLLOW [98] -> SHIFT "while" GOTO 89
	expression/L1 = . "new" typespec ":" expression, FOLLOW [97] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [97] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [97] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [97] -> SHIFT "null" GOTO 92
	statementlist = ., FOLLOW [18] -> REDUCE statementlist #0
	linkage = . (34), FOLLOW [61] -> REDUCE linkage #0 CALL linkage {name="private",linkage="internal"}
[326]
	statement/L1 = . typedefinition ";", FOLLOW [98] -> GOTO 63
	functiondefinition = . linkage "function" IDENT typespec callablebody, FOLLOW [98] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [98] -> GOTO 14
	statement/L1 = . functiondefinition, FOLLOW [98] -> GOTO 64
	statement/L1 = "while" "(" expression ")" "{" . codeblock "}", FOLLOW [98] -> GOTO 340
	codeblock = . statementlist, FOLLOW [18] -> GOTO 66
	statementlist = . statement statementlist, FOLLOW [18] -> GOTO 67
	statement/L1 = . expression ";", FOLLOW [98] -> GOTO 68
	expression/L3 = . expression "=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "+=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "-=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "*=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "/=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "^=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "&=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "%=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "&&=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "||=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "&=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "|=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "<<=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression ">>=" expression, FOLLOW [97] -> GOTO 68
	expression/L4 = . expression "||" expression, FOLLOW [97] -> GOTO 68
	expression/L5 = . expression "&&" expression, FOLLOW [97] -> GOTO 68
	expression/L6 = . expression "|" expression, FOLLOW [97] -> GOTO 68
	expression/L7 = . expression "^" expression, FOLLOW [97] -> GOTO 68
	expression/L7 = . expression "&" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression "==" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression "!=" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression "<=" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression "<" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression ">=" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression ">" expression, FOLLOW [97] -> GOTO 68
	expression/L9 = . expression "+" expression, FOLLOW [97] -> GOTO 68
	expression/L9 = . expression "-" expression, FOLLOW [97] -> GOTO 68
	expression/L10 = . expression "*" expression, FOLLOW [97] -> GOTO 68
	expression/L10 = . expression "/" expression, FOLLOW [97] -> GOTO 68
	expression/L10 = . expression "%" expression, FOLLOW [97] -> GOTO 68
	expression/L11 = . expression "<<" expression, FOLLOW [97] -> GOTO 68
	expression/L11 = . expression ">>" expression, FOLLOW [97] -> GOTO 68
	expression/L12 = . expression "." IDENT, FOLLOW [97] -> GOTO 68
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [97] -> GOTO 68
	expression/L13 = . expression "(" ")", FOLLOW [97] -> GOTO 68
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [97] -> GOTO 68
	iexpression = . expression indirection IDENT, FOLLOW [97] -> GOTO 68
	expression/L12 = . iexpression, FOLLOW [97] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [97] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [97] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [97] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [97] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [97] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [97] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [97] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [97] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [97] -> SHIFT '&' GOTO 78
	typedefinition = . "typedef" typepath IDENT, FOLLOW [14] -> SHIFT "typedef" GOTO 19
	statement/L1 = . "{" codeblock "}", FOLLOW [98] -> SHIFT '{' GOTO 79
	expression/L1 = . "{" expressionlist "}", FOLLOW [97] -> SHIFT '{' GOTO 79
	expression/L1 = . "{" "}", FOLLOW [97] -> SHIFT '{' GOTO 79
	linkage = . "private", FOLLOW [61] -> SHIFT "private" GOTO 23
	linkage = . "public", FOLLOW [61] -> SHIFT "public" GOTO 24
	expression/L9 = . "+" expression, FOLLOW [97] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [97] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [97] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [97] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [97] -> SHIFT '!' GOTO 84
	statement/L1 = . "var" variabledefinition ";", FOLLOW [98] -> SHIFT "var" GOTO 85
	statement/L1 = . "return" expression ";", FOLLOW [98] -> SHIFT "return" GOTO 86
	statement/L1 = . "delete" expression ";", FOLLOW [98] -> SHIFT "delete" GOTO 87
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}", FOLLOW [98] -> SHIFT "if" GOTO 88
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}", FOLLOW [98] -> SHIFT "if" GOTO 88
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}", FOLLOW [98] -> SHIFT "while" GOTO 89
	expression/L1 = . "new" typespec ":" expression, FOLLOW [97] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [97] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [97] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [97] -> SHIFT "null" GOTO 92
	statementlist = ., FOLLOW [18] -> REDUCE statementlist #0
	linkage = . (34), FOLLOW [61] -> REDUCE linkage #0 CALL linkage {name="private",linkage="internal"}
[327]
	iexpression = expression . indirection IDENT, FOLLOW [236] -> GOTO 128
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [236] -> SHIFT '(' GOTO 129
	expression/L13 = expression . "(" ")", FOLLOW [236] -> SHIFT '(' GOTO 129
	expression/L7 = expression . "&" expression, FOLLOW [236] -> SHIFT '&' GOTO 131
	expression/L7 = expression . "^" expression, FOLLOW [236] -> SHIFT '^' GOTO 132
	expression/L1 = "cast" typespec ":" "{" expression . "}", FOLLOW [236] -> SHIFT '}' GOTO 341
	indirection = . "->" indirection, FOLLOW [17] -> SHIFT "->" GOTO 133
	indirection = . "->", FOLLOW [17] -> SHIFT "->" GOTO 133
	expression/L3 = expression . "=" expression, FOLLOW [236] -> SHIFT '=' GOTO 134
	expression/L9 = expression . "+" expression, FOLLOW [236] -> SHIFT '+' GOTO 135
	expression/L9 = expression . "-" expression, FOLLOW [236] -> SHIFT '-' GOTO 136
	expression/L10 = expression . "*" expression, FOLLOW [236] -> SHIFT '*' GOTO 137
	expression/L10 = expression . "/" expression, FOLLOW [236] -> SHIFT '/' GOTO 138
	expression/L10 = expression . "%" expression, FOLLOW [236] -> SHIFT '%' GOTO 139
	expression/L5 = expression . "&&" expression, FOLLOW [236] -> SHIFT "&&" GOTO 140
	expression/L4 = expression . "||" expression, FOLLOW [236] -> SHIFT "||" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [236] -> SHIFT '|' GOTO 142
	expression/L11 = expression . "<<" expression, FOLLOW [236] -> SHIFT "<<" GOTO 143
	expression/L11 = expression . ">>" expression, FOLLOW [236] -> SHIFT ">>" GOTO 144
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [236] -> SHIFT '[' GOTO 145
	expression/L8 = expression . "==" expression, FOLLOW [236] -> SHIFT "==" GOTO 146
	expression/L8 = expression . "!=" expression, FOLLOW [236] -> SHIFT "!=" GOTO 147
	expression/L8 = expression . ">=" expression, FOLLOW [236] -> SHIFT ">=" GOTO 148
	expression/L8 = expression . "<=" expression, FOLLOW [236] -> SHIFT "<=" GOTO 149
	expression/L8 = expression . ">" expression, FOLLOW [236] -> SHIFT '>' GOTO 150
	expression/L8 = expression . "<" expression, FOLLOW [236] -> SHIFT '<' GOTO 151
	expression/L3 = expression . "+=" expression, FOLLOW [236] -> SHIFT "+=" GOTO 152
	expression/L3 = expression . "-=" expression, FOLLOW [236] -> SHIFT "-=" GOTO 153
	expression/L3 = expression . "*=" expression, FOLLOW [236] -> SHIFT "*=" GOTO 154
	expression/L3 = expression . "/=" expression, FOLLOW [236] -> SHIFT "/=" GOTO 155
	expression/L3 = expression . "^=" expression, FOLLOW [236] -> SHIFT "^=" GOTO 156
	expression/L3 = expression . "&=" expression, FOLLOW [236] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [236] -> SHIFT "&=" GOTO 157
	expression/L3 = expression . "%=" expression, FOLLOW [236] -> SHIFT "%=" GOTO 158
	expression/L3 = expression . "&&=" expression, FOLLOW [236] -> SHIFT "&&=" GOTO 159
	expression/L3 = expression . "||=" expression, FOLLOW [236] -> SHIFT "||=" GOTO 160
	expression/L3 = expression . "|=" expression, FOLLOW [236] -> SHIFT "|=" GOTO 161
	expression/L3 = expression . "<<=" expression, FOLLOW [236] -> SHIFT "<<=" GOTO 162
	expression/L3 = expression . ">>=" expression, FOLLOW [236] -> SHIFT ">>=" GOTO 163
	expression/L12 = expression . "." IDENT, FOLLOW [236] -> SHIFT '.' GOTO 164
[328]
	expression/L1 = "cast" typespec ":" "{" "}" . (84), FOLLOW [236] -> REDUCE expression #5 CALL typecast
[329]
	statement/L1 = . typedefinition ";", FOLLOW [98] -> GOTO 63
	functiondefinition = . linkage "function" IDENT typespec callablebody, FOLLOW [98] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [98] -> GOTO 14
	statement/L1 = . functiondefinition, FOLLOW [98] -> GOTO 64
	callablebody = "(" parameterlist ")" "const" "{" . codeblock "}", FOLLOW [246] -> GOTO 342
	codeblock = . statementlist, FOLLOW [18] -> GOTO 66
	statementlist = . statement statementlist, FOLLOW [18] -> GOTO 67
	statement/L1 = . expression ";", FOLLOW [98] -> GOTO 68
	expression/L3 = . expression "=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "+=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "-=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "*=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "/=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "^=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "&=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "%=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "&&=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "||=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "&=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "|=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "<<=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression ">>=" expression, FOLLOW [97] -> GOTO 68
	expression/L4 = . expression "||" expression, FOLLOW [97] -> GOTO 68
	expression/L5 = . expression "&&" expression, FOLLOW [97] -> GOTO 68
	expression/L6 = . expression "|" expression, FOLLOW [97] -> GOTO 68
	expression/L7 = . expression "^" expression, FOLLOW [97] -> GOTO 68
	expression/L7 = . expression "&" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression "==" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression "!=" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression "<=" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression "<" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression ">=" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression ">" expression, FOLLOW [97] -> GOTO 68
	expression/L9 = . expression "+" expression, FOLLOW [97] -> GOTO 68
	expression/L9 = . expression "-" expression, FOLLOW [97] -> GOTO 68
	expression/L10 = . expression "*" expression, FOLLOW [97] -> GOTO 68
	expression/L10 = . expression "/" expression, FOLLOW [97] -> GOTO 68
	expression/L10 = . expression "%" expression, FOLLOW [97] -> GOTO 68
	expression/L11 = . expression "<<" expression, FOLLOW [97] -> GOTO 68
	expression/L11 = . expression ">>" expression, FOLLOW [97] -> GOTO 68
	expression/L12 = . expression "." IDENT, FOLLOW [97] -> GOTO 68
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [97] -> GOTO 68
	expression/L13 = . expression "(" ")", FOLLOW [97] -> GOTO 68
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [97] -> GOTO 68
	iexpression = . expression indirection IDENT, FOLLOW [97] -> GOTO 68
	expression/L12 = . iexpression, FOLLOW [97] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [97] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [97] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [97] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [97] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [97] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [97] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [97] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [97] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [97] -> SHIFT '&' GOTO 78
	typedefinition = . "typedef" typepath IDENT, FOLLOW [14] -> SHIFT "typedef" GOTO 19
	statement/L1 = . "{" codeblock "}", FOLLOW [98] -> SHIFT '{' GOTO 79
	expression/L1 = . "{" expressionlist "}", FOLLOW [97] -> SHIFT '{' GOTO 79
	expression/L1 = . "{" "}", FOLLOW [97] -> SHIFT '{' GOTO 79
	linkage = . "private", FOLLOW [61] -> SHIFT "private" GOTO 23
	linkage = . "public", FOLLOW [61] -> SHIFT "public" GOTO 24
	expression/L9 = . "+" expression, FOLLOW [97] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [97] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [97] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [97] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [97] -> SHIFT '!' GOTO 84
	statement/L1 = . "var" variabledefinition ";", FOLLOW [98] -> SHIFT "var" GOTO 85
	statement/L1 = . "return" expression ";", FOLLOW [98] -> SHIFT "return" GOTO 86
	statement/L1 = . "delete" expression ";", FOLLOW [98] -> SHIFT "delete" GOTO 87
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}", FOLLOW [98] -> SHIFT "if" GOTO 88
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}", FOLLOW [98] -> SHIFT "if" GOTO 88
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}", FOLLOW [98] -> SHIFT "while" GOTO 89
	expression/L1 = . "new" typespec ":" expression, FOLLOW [97] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [97] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [97] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [97] -> SHIFT "null" GOTO 92
	statementlist = ., FOLLOW [18] -> REDUCE statementlist #0
	linkage = . (34), FOLLOW [61] -> REDUCE linkage #0 CALL linkage {name="private",linkage="internal"}
[330]
	callablebody = "(" parameterlist ")" "{" codeblock . "}", FOLLOW [246] -> SHIFT '}' GOTO 343
[331]
	interface_definition = "function" IDENT typespec "(" parameterlist . ")" ";", FOLLOW [171] -> SHIFT ')' GOTO 344
	interface_definition = "function" IDENT typespec "(" parameterlist . ")" "const" ";", FOLLOW [171] -> SHIFT ')' GOTO 344
[332]
	interface_definition = "procedure" IDENT "(" parameterlist ")" . ";", FOLLOW [171] -> SHIFT ';' GOTO 345
	interface_definition = "procedure" IDENT "(" parameterlist ")" . "const" ";", FOLLOW [171] -> SHIFT "const" GOTO 346
[333]
	interface_definition = "operator" operatordecl typespec "(" parameterlist . ")" ";", FOLLOW [171] -> SHIFT ')' GOTO 347
	interface_definition = "operator" operatordecl typespec "(" parameterlist . ")" "const" ";", FOLLOW [171] -> SHIFT ')' GOTO 347
[334]
	interface_definition = "operator" operatordecl "(" parameterlist ")" . ";", FOLLOW [171] -> SHIFT ';' GOTO 348
	interface_definition = "operator" operatordecl "(" parameterlist ")" . "const" ";", FOLLOW [171] -> SHIFT "const" GOTO 349
[335]
	operatordefinition = linkage "operator" operatordecl typespec callablebody . (40), FOLLOW [174] -> REDUCE operatordefinition #5 CALL operator_procdef
[336]
	extern_definition = "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist ")" ";" . (2), FOLLOW [59] -> REDUCE extern_definition #9 CALL extern_funcdef
[337]
	extern_definition = "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist "..." ")" . ";", FOLLOW [59] -> SHIFT ';' GOTO 350
[338]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist "..." ")" ";" . (5), FOLLOW [59] -> REDUCE extern_definition #9 CALL extern_procdef_vararg
[339]
	statement/L1 = "if" "(" expression ")" "{" codeblock . "}", FOLLOW [98] -> SHIFT '}' GOTO 351
	statement/L1 = "if" "(" expression ")" "{" codeblock . "}" "else" "{" codeblock "}", FOLLOW [98] -> SHIFT '}' GOTO 351
[340]
	statement/L1 = "while" "(" expression ")" "{" codeblock . "}", FOLLOW [98] -> SHIFT '}' GOTO 352
[341]
	expression/L1 = "cast" typespec ":" "{" expression "}" . (84), FOLLOW [236] -> REDUCE expression #6 CALL typecast
[342]
	callablebody = "(" parameterlist ")" "const" "{" codeblock . "}", FOLLOW [246] -> SHIFT '}' GOTO 353
[343]
	callablebody = "(" parameterlist ")" "{" codeblock "}" . (scope:65), FOLLOW [246] -> REDUCE callablebody #6 CALL callablebody "&"
[344]
	interface_definition = "function" IDENT typespec "(" parameterlist ")" . ";", FOLLOW [171] -> SHIFT ';' GOTO 354
	interface_definition = "function" IDENT typespec "(" parameterlist ")" . "const" ";", FOLLOW [171] -> SHIFT "const" GOTO 355
[345]
	interface_definition = "procedure" IDENT "(" parameterlist ")" ";" . (9), FOLLOW [171] -> REDUCE interface_definition #6 CALL interface_procdef "&"
[346]
	interface_definition = "procedure" IDENT "(" parameterlist ")" "const" . ";", FOLLOW [171] -> SHIFT ';' GOTO 356
[347]
	interface_definition = "operator" operatordecl typespec "(" parameterlist ")" . ";", FOLLOW [171] -> SHIFT ';' GOTO 357
	interface_definition = "operator" operatordecl typespec "(" parameterlist ")" . "const" ";", FOLLOW [171] -> SHIFT "const" GOTO 358
[348]
	interface_definition = "operator" operatordecl "(" parameterlist ")" ";" . (13), FOLLOW [171] -> REDUCE interface_definition #6 CALL interface_operator_procdef "&"
[349]
	interface_definition = "operator" operatordecl "(" parameterlist ")" "const" . ";", FOLLOW [171] -> SHIFT ';' GOTO 359
[350]
	extern_definition = "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist "..." ")" ";" . (4), FOLLOW [59] -> REDUCE extern_definition #10 CALL extern_funcdef_vararg
[351]
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" . "else" "{" codeblock "}", FOLLOW [98] -> SHIFT "else" GOTO 360
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" . (scope:75), FOLLOW [98] -> REDUCE statement #7 CALL conditional_if
[352]
	statement/L1 = "while" "(" expression ")" "{" codeblock "}" . (scope:77), FOLLOW [98] -> REDUCE statement #7 CALL conditional_while
[353]
	callablebody = "(" parameterlist ")" "const" "{" codeblock "}" . (scope:66), FOLLOW [246] -> REDUCE callablebody #7 CALL callablebody "const&"
[354]
	interface_definition = "function" IDENT typespec "(" parameterlist ")" ";" . (7), FOLLOW [171] -> REDUCE interface_definition #7 CALL interface_funcdef "&"
[355]
	interface_definition = "function" IDENT typespec "(" parameterlist ")" "const" . ";", FOLLOW [171] -> SHIFT ';' GOTO 361
[356]
	interface_definition = "procedure" IDENT "(" parameterlist ")" "const" ";" . (10), FOLLOW [171] -> REDUCE interface_definition #7 CALL interface_procdef "const&"
[357]
	interface_definition = "operator" operatordecl typespec "(" parameterlist ")" ";" . (11), FOLLOW [171] -> REDUCE interface_definition #7 CALL interface_operator_funcdef "&"
[358]
	interface_definition = "operator" operatordecl typespec "(" parameterlist ")" "const" . ";", FOLLOW [171] -> SHIFT ';' GOTO 362
[359]
	interface_definition = "operator" operatordecl "(" parameterlist ")" "const" ";" . (14), FOLLOW [171] -> REDUCE interface_definition #7 CALL interface_operator_procdef "const&"
[360]
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" "else" . "{" codeblock "}", FOLLOW [98] -> SHIFT '{' GOTO 363
[361]
	interface_definition = "function" IDENT typespec "(" parameterlist ")" "const" ";" . (8), FOLLOW [171] -> REDUCE interface_definition #8 CALL interface_funcdef "const&"
[362]
	interface_definition = "operator" operatordecl typespec "(" parameterlist ")" "const" ";" . (12), FOLLOW [171] -> REDUCE interface_definition #8 CALL interface_operator_funcdef "const&"
[363]
	statement/L1 = . typedefinition ";", FOLLOW [98] -> GOTO 63
	functiondefinition = . linkage "function" IDENT typespec callablebody, FOLLOW [98] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [98] -> GOTO 14
	statement/L1 = . functiondefinition, FOLLOW [98] -> GOTO 64
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" "else" "{" . codeblock "}", FOLLOW [98] -> GOTO 364
	codeblock = . statementlist, FOLLOW [18] -> GOTO 66
	statementlist = . statement statementlist, FOLLOW [18] -> GOTO 67
	statement/L1 = . expression ";", FOLLOW [98] -> GOTO 68
	expression/L3 = . expression "=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "+=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "-=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "*=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "/=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "^=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "&=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "%=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "&&=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "||=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "&=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "|=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "<<=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression ">>=" expression, FOLLOW [97] -> GOTO 68
	expression/L4 = . expression "||" expression, FOLLOW [97] -> GOTO 68
	expression/L5 = . expression "&&" expression, FOLLOW [97] -> GOTO 68
	expression/L6 = . expression "|" expression, FOLLOW [97] -> GOTO 68
	expression/L7 = . expression "^" expression, FOLLOW [97] -> GOTO 68
	expression/L7 = . expression "&" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression "==" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression "!=" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression "<=" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression "<" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression ">=" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression ">" expression, FOLLOW [97] -> GOTO 68
	expression/L9 = . expression "+" expression, FOLLOW [97] -> GOTO 68
	expression/L9 = . expression "-" expression, FOLLOW [97] -> GOTO 68
	expression/L10 = . expression "*" expression, FOLLOW [97] -> GOTO 68
	expression/L10 = . expression "/" expression, FOLLOW [97] -> GOTO 68
	expression/L10 = . expression "%" expression, FOLLOW [97] -> GOTO 68
	expression/L11 = . expression "<<" expression, FOLLOW [97] -> GOTO 68
	expression/L11 = . expression ">>" expression, FOLLOW [97] -> GOTO 68
	expression/L12 = . expression "." IDENT, FOLLOW [97] -> GOTO 68
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [97] -> GOTO 68
	expression/L13 = . expression "(" ")", FOLLOW [97] -> GOTO 68
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [97] -> GOTO 68
	iexpression = . expression indirection IDENT, FOLLOW [97] -> GOTO 68
	expression/L12 = . iexpression, FOLLOW [97] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [97] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [97] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [97] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [97] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [97] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [97] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [97] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [97] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [97] -> SHIFT '&' GOTO 78
	typedefinition = . "typedef" typepath IDENT, FOLLOW [14] -> SHIFT "typedef" GOTO 19
	statement/L1 = . "{" codeblock "}", FOLLOW [98] -> SHIFT '{' GOTO 79
	expression/L1 = . "{" expressionlist "}", FOLLOW [97] -> SHIFT '{' GOTO 79
	expression/L1 = . "{" "}", FOLLOW [97] -> SHIFT '{' GOTO 79
	linkage = . "private", FOLLOW [61] -> SHIFT "private" GOTO 23
	linkage = . "public", FOLLOW [61] -> SHIFT "public" GOTO 24
	expression/L9 = . "+" expression, FOLLOW [97] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [97] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [97] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [97] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [97] -> SHIFT '!' GOTO 84
	statement/L1 = . "var" variabledefinition ";", FOLLOW [98] -> SHIFT "var" GOTO 85
	statement/L1 = . "return" expression ";", FOLLOW [98] -> SHIFT "return" GOTO 86
	statement/L1 = . "delete" expression ";", FOLLOW [98] -> SHIFT "delete" GOTO 87
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}", FOLLOW [98] -> SHIFT "if" GOTO 88
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}", FOLLOW [98] -> SHIFT "if" GOTO 88
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}", FOLLOW [98] -> SHIFT "while" GOTO 89
	expression/L1 = . "new" typespec ":" expression, FOLLOW [97] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [97] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [97] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [97] -> SHIFT "null" GOTO 92
	statementlist = ., FOLLOW [18] -> REDUCE statementlist #0
	linkage = . (34), FOLLOW [61] -> REDUCE linkage #0 CALL linkage {name="private",linkage="internal"}
[364]
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock . "}", FOLLOW [98] -> SHIFT '}' GOTO 365
[365]
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}" . (scope:76), FOLLOW [98] -> REDUCE statement #11 CALL conditional_if_else

-- Function calls:
(1) program
(2) extern_funcdef
(3) extern_procdef
(4) extern_funcdef_vararg
(5) extern_procdef_vararg
(6) extern_paramdeflist
(7) interface_funcdef, "&"
(8) interface_funcdef, "const&"
(9) interface_procdef, "&"
(10) interface_procdef, "const&"
(11) interface_operator_funcdef, "&"
(12) interface_operator_funcdef, "const&"
(13) interface_operator_procdef, "&"
(14) interface_operator_procdef, "const&"
(15) definition, 1
(16) definition, 2
(17) typespec, ""
(18) typespec, "const "
(19) typespec, "&"
(20) typespec, "const&"
(21) typespec, "^"
(22) typespec, "const^"
(23) typespec, "^&"
(24) typespec, "const^&"
(25) typespec, "^^"
(26) typespec, "const^^"
(27) typespec, "^^&"
(28) typespec, "const^^&"
(29) typedef
(30) structdef
(31) interfacedef
(32) inheritdef, 1
(33) classdef
(34) linkage, {name="private",linkage="internal"}
(35) linkage, {name="public",linkage="external"}
(36) funcdef
(37) procdef
(38) constructordef
(39) destructordef
(40) operator_procdef
(41) operator_funcdef
(42) operatordecl, {name="->",symbol="__arrow"}
(43) operatordecl, {name="=",symbol="__assign"}
(44) operatordecl, {name="+",symbol="__plus"}
(45) operatordecl, {name="-",symbol="__minus"}
(46) operatordecl, {name="*",symbol="__mul"}
(47) operatordecl, {name="/",symbol="__div"}
(48) operatordecl, {name="%",symbol="__mod"}
(49) operatordecl, {name="&&",symbol="__and"}
(50) operatordecl, {name="||",symbol="__or"}
(51) operatordecl, {name="&",symbol="__bitand"}
(52) operatordecl, {name="|",symbol="__bitor"}
(53) operatordecl, {name="<<",symbol="__lsh"}
(54) operatordecl, {name=">>",symbol="__rsh"}
(55) operatordecl, {name="~",symbol="__lneg"}
(56) operatordecl, {name="!",symbol="__not"}
(57) operatordecl, {name="()",symbol="__call"}
(58) operatordecl, {name="[]",symbol="__get"}
(59) operatordecl, {name="==",symbol="__eq"}
(60) operatordecl, {name="!=",symbol="__ne"}
(61) operatordecl, {name=">=",symbol="__ge"}
(62) operatordecl, {name="<=",symbol="__le"}
(63) operatordecl, {name=">",symbol="__gt"}
(64) operatordecl, {name="<",symbol="__lt"}
(65) callablebody, "&"
(66) callablebody, "const&"
(67) main_procdef
(68) paramdeflist
(69) paramdef
(70) codeblock
(71) definition
(72) free_expression
(73) return_value
(74) delete
(75) conditional_if
(76) conditional_if_else
(77) conditional_while
(78) vardef
(79) vardef_assign
(80) vardef_array_assign
(81) vardef_array
(82) structure
(83) allocate
(84) typecast
(85) variable
(86) constant, "constexpr bool"
(87) constant, "constexpr uint"
(88) constant, "constexpr int"
(89) constant, "constexpr float"
(90) null, "constexpr float"
(91) string_constant, "constexpr float"
(92) char_constant, "constexpr float"
(93) operator, "="
(94) assign_operator, "+"
(95) assign_operator, "-"
(96) assign_operator, "*"
(97) assign_operator, "/"
(98) assign_operator, "^"
(99) assign_operator, "&"
(100) assign_operator, "%"
(101) assign_operator, "&&"
(102) assign_operator, "||"
(103) assign_operator, "|"
(104) assign_operator, "<<"
(105) assign_operator, ">>"
(106) operator, "||"
(107) operator, "&&"
(108) operator, "|"
(109) operator, "^"
(110) operator, "&"
(111) operator, "=="
(112) operator, "!="
(113) operator, "<="
(114) operator, "<"
(115) operator, ">="
(116) operator, ">"
(117) operator, "+"
(118) operator, "-"
(119) operator, "~"
(120) operator, "!"
(121) operator, "*"
(122) operator, "/"
(123) operator, "%"
(124) operator, "<<"
(125) operator, ">>"
(126) member
(127) operator, "->"
(128) operator, "()"
(129) operator, "[]"
(130) rep_operator, "->"
(131) count

-- Action table:
[1]
	$ => Reduce #0 extern_definitionlist
	IDENT => Reduce #0 extern_definitionlist
	"extern" => Shift goto 4
	"function" => Reduce #0 extern_definitionlist
	"procedure" => Reduce #0 extern_definitionlist
	"const" => Reduce #0 extern_definitionlist
	"typedef" => Reduce #0 extern_definitionlist
	"struct" => Reduce #0 extern_definitionlist
	"interface" => Reduce #0 extern_definitionlist
	"class" => Reduce #0 extern_definitionlist
	"private" => Reduce #0 extern_definitionlist
	"public" => Reduce #0 extern_definitionlist
	"main" => Reduce #0 extern_definitionlist
[2]
	$ => Reduce #0 free_definitionlist
	IDENT => Shift goto 17
	"function" => Reduce #0 linkage call linkage {name="private",linkage="internal"}
	"procedure" => Reduce #0 linkage call linkage {name="private",linkage="internal"}
	"const" => Shift goto 18
	"typedef" => Shift goto 19
	"struct" => Shift goto 20
	"interface" => Shift goto 21
	"class" => Shift goto 22
	"private" => Shift goto 23
	"public" => Shift goto 24
	"main" => Reduce #0 free_definitionlist
[3]
	$ => Reduce #0 extern_definitionlist
	IDENT => Reduce #0 extern_definitionlist
	"extern" => Shift goto 4
	"function" => Reduce #0 extern_definitionlist
	"procedure" => Reduce #0 extern_definitionlist
	"const" => Reduce #0 extern_definitionlist
	"typedef" => Reduce #0 extern_definitionlist
	"struct" => Reduce #0 extern_definitionlist
	"interface" => Reduce #0 extern_definitionlist
	"class" => Reduce #0 extern_definitionlist
	"private" => Reduce #0 extern_definitionlist
	"public" => Reduce #0 extern_definitionlist
	"main" => Reduce #0 extern_definitionlist
[4]
	DQSTRING => Shift goto 26
[5]
	$ => Reduce #0 main_procedure
	"main" => Shift goto 28
[6]
	$ => Reduce #1 free_definition
	IDENT => Reduce #1 free_definition
	"function" => Reduce #1 free_definition
	"procedure" => Reduce #1 free_definition
	"const" => Reduce #1 free_definition
	"typedef" => Reduce #1 free_definition
	"struct" => Reduce #1 free_definition
	"interface" => Reduce #1 free_definition
	"class" => Reduce #1 free_definition
	"private" => Reduce #1 free_definition
	"public" => Reduce #1 free_definition
	"main" => Reduce #1 free_definition
[7]
	$ => Reduce #0 free_definitionlist
	IDENT => Shift goto 17
	"function" => Reduce #0 linkage call linkage {name="private",linkage="internal"}
	"procedure" => Reduce #0 linkage call linkage {name="private",linkage="internal"}
	"const" => Shift goto 18
	"typedef" => Shift goto 19
	"struct" => Shift goto 20
	"interface" => Shift goto 21
	"class" => Shift goto 22
	"private" => Shift goto 23
	"public" => Shift goto 24
	"main" => Reduce #0 free_definitionlist
[8]
	IDENT => Reduce #1 typespec call typespec ""
	'(' => Reduce #1 typespec call typespec ""
	')' => Reduce #1 typespec call typespec ""
	"..." => Reduce #1 typespec call typespec ""
	',' => Reduce #1 typespec call typespec ""
	'&' => Shift goto 30
	'^' => Shift goto 31
	':' => Reduce #1 typespec call typespec ""
[9]
	IDENT => Shift goto 32
[10]
	';' => Shift goto 33
[11]
	$ => Reduce #1 struct_definition call definition 1
	IDENT => Reduce #1 struct_definition call definition 1
	"function" => Reduce #1 struct_definition call definition 1
	"procedure" => Reduce #1 struct_definition call definition 1
	"const" => Reduce #1 struct_definition call definition 1
	"typedef" => Reduce #1 struct_definition call definition 1
	"struct" => Reduce #1 struct_definition call definition 1
	'}' => Reduce #1 struct_definition call definition 1
	"interface" => Reduce #1 struct_definition call definition 1
	"class" => Reduce #1 struct_definition call definition 1
	"private" => Reduce #1 struct_definition call definition 1
	"public" => Reduce #1 struct_definition call definition 1
	"main" => Reduce #1 struct_definition call definition 1
[12]
	$ => Reduce #1 free_definition call definition 1
	IDENT => Reduce #1 free_definition call definition 1
	"function" => Reduce #1 free_definition call definition 1
	"procedure" => Reduce #1 free_definition call definition 1
	"const" => Reduce #1 free_definition call definition 1
	"typedef" => Reduce #1 free_definition call definition 1
	"struct" => Reduce #1 free_definition call definition 1
	"interface" => Reduce #1 free_definition call definition 1
	"class" => Reduce #1 free_definition call definition 1
	"private" => Reduce #1 free_definition call definition 1
	"public" => Reduce #1 free_definition call definition 1
	"main" => Reduce #1 free_definition call definition 1
[13]
	$ => Reduce #1 free_definition call definition 1
	IDENT => Reduce #1 free_definition call definition 1
	"function" => Reduce #1 free_definition call definition 1
	"procedure" => Reduce #1 free_definition call definition 1
	"const" => Reduce #1 free_definition call definition 1
	"typedef" => Reduce #1 free_definition call definition 1
	"struct" => Reduce #1 free_definition call definition 1
	"interface" => Reduce #1 free_definition call definition 1
	"class" => Reduce #1 free_definition call definition 1
	"private" => Reduce #1 free_definition call definition 1
	"public" => Reduce #1 free_definition call definition 1
	"main" => Reduce #1 free_definition call definition 1
[14]
	"function" => Shift goto 34
	"procedure" => Shift goto 35
[15]
	$ => Reduce #1 free_definition call definition 1
	IDENT => Reduce #1 free_definition call definition 1
	"function" => Reduce #1 free_definition call definition 1
	"procedure" => Reduce #1 free_definition call definition 1
	"const" => Reduce #1 free_definition call definition 1
	"typedef" => Reduce #1 free_definition call definition 1
	"struct" => Reduce #1 free_definition call definition 1
	"interface" => Reduce #1 free_definition call definition 1
	"class" => Reduce #1 free_definition call definition 1
	"private" => Reduce #1 free_definition call definition 1
	"public" => Reduce #1 free_definition call definition 1
	"main" => Reduce #1 free_definition call definition 1
[16]
	';' => Shift goto 36
[17]
	IDENT => Reduce #1 typename
	'(' => Reduce #1 typename
	')' => Reduce #1 typename
	"..." => Reduce #1 typename
	',' => Reduce #1 typename
	"::" => Shift goto 37
	'&' => Reduce #1 typename
	'^' => Reduce #1 typename
	'{' => Reduce #1 typename
	':' => Reduce #1 typename
[18]
	IDENT => Shift goto 17
[19]
	IDENT => Shift goto 17
[20]
	IDENT => Shift goto 41
[21]
	IDENT => Shift goto 42
[22]
	IDENT => Shift goto 43
[23]
	"function" => Reduce #1 linkage call linkage {name="private",linkage="internal"}
	"procedure" => Reduce #1 linkage call linkage {name="private",linkage="internal"}
	"operator" => Reduce #1 linkage call linkage {name="private",linkage="internal"}
	"constructor" => Reduce #1 linkage call linkage {name="private",linkage="internal"}
[24]
	"function" => Reduce #1 linkage call linkage {name="public",linkage="external"}
	"procedure" => Reduce #1 linkage call linkage {name="public",linkage="external"}
	"operator" => Reduce #1 linkage call linkage {name="public",linkage="external"}
	"constructor" => Reduce #1 linkage call linkage {name="public",linkage="external"}
[25]
	$ => Reduce #2 extern_definitionlist
	IDENT => Reduce #2 extern_definitionlist
	"function" => Reduce #2 extern_definitionlist
	"procedure" => Reduce #2 extern_definitionlist
	"const" => Reduce #2 extern_definitionlist
	"typedef" => Reduce #2 extern_definitionlist
	"struct" => Reduce #2 extern_definitionlist
	"interface" => Reduce #2 extern_definitionlist
	"class" => Reduce #2 extern_definitionlist
	"private" => Reduce #2 extern_definitionlist
	"public" => Reduce #2 extern_definitionlist
	"main" => Reduce #2 extern_definitionlist
[26]
	"function" => Shift goto 44
	"procedure" => Shift goto 45
[27]
	$ => Accept
[28]
	'{' => Shift goto 46
[29]
	$ => Reduce #2 free_definitionlist
	"main" => Reduce #2 free_definitionlist
[30]
	IDENT => Reduce #2 typespec call typespec "&"
	'(' => Reduce #2 typespec call typespec "&"
	')' => Reduce #2 typespec call typespec "&"
	"..." => Reduce #2 typespec call typespec "&"
	',' => Reduce #2 typespec call typespec "&"
	':' => Reduce #2 typespec call typespec "&"
[31]
	IDENT => Reduce #2 typespec call typespec "^"
	'(' => Reduce #2 typespec call typespec "^"
	')' => Reduce #2 typespec call typespec "^"
	"..." => Reduce #2 typespec call typespec "^"
	',' => Reduce #2 typespec call typespec "^"
	'&' => Shift goto 47
	'^' => Shift goto 48
	':' => Reduce #2 typespec call typespec "^"
[32]
	';' => Reduce #2 variabledefinition call vardef
	'=' => Shift goto 49
	'[' => Shift goto 50
[33]
	$ => Reduce #2 struct_definition call definition 1
	IDENT => Reduce #2 struct_definition call definition 1
	"function" => Reduce #2 struct_definition call definition 1
	"procedure" => Reduce #2 struct_definition call definition 1
	"const" => Reduce #2 struct_definition call definition 1
	"typedef" => Reduce #2 struct_definition call definition 1
	"struct" => Reduce #2 struct_definition call definition 1
	'}' => Reduce #2 struct_definition call definition 1
	"interface" => Reduce #2 struct_definition call definition 1
	"class" => Reduce #2 struct_definition call definition 1
	"private" => Reduce #2 struct_definition call definition 1
	"public" => Reduce #2 struct_definition call definition 1
	"main" => Reduce #2 struct_definition call definition 1
[34]
	IDENT => Shift goto 51
[35]
	IDENT => Shift goto 52
[36]
	$ => Reduce #2 struct_definition call definition 1
	IDENT => Reduce #2 struct_definition call definition 1
	"function" => Reduce #2 struct_definition call definition 1
	"procedure" => Reduce #2 struct_definition call definition 1
	"const" => Reduce #2 struct_definition call definition 1
	"typedef" => Reduce #2 struct_definition call definition 1
	"struct" => Reduce #2 struct_definition call definition 1
	'}' => Reduce #2 struct_definition call definition 1
	"interface" => Reduce #2 struct_definition call definition 1
	"class" => Reduce #2 struct_definition call definition 1
	"private" => Reduce #2 struct_definition call definition 1
	"public" => Reduce #2 struct_definition call definition 1
	"main" => Reduce #2 struct_definition call definition 1
[37]
	IDENT => Shift goto 17
[38]
	IDENT => Reduce #2 typespec call typespec "const "
	'(' => Reduce #2 typespec call typespec "const "
	')' => Reduce #2 typespec call typespec "const "
	"..." => Reduce #2 typespec call typespec "const "
	',' => Reduce #2 typespec call typespec "const "
	'&' => Shift goto 54
	'^' => Shift goto 55
	':' => Reduce #2 typespec call typespec "const "
[39]
	IDENT => Reduce #1 typepath call typespec ""
	',' => Reduce #1 typepath call typespec ""
	'{' => Reduce #1 typepath call typespec ""
[40]
	IDENT => Shift goto 56
[41]
	'{' => Shift goto 57
[42]
	'{' => Shift goto 58
[43]
	'{' => Shift goto 59
	':' => Shift goto 60
[44]
	IDENT => Shift goto 61
[45]
	IDENT => Shift goto 62
[46]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	"function" => Reduce #0 linkage call linkage {name="private",linkage="internal"}
	'(' => Shift goto 77
	"procedure" => Reduce #0 linkage call linkage {name="private",linkage="internal"}
	'&' => Shift goto 78
	"typedef" => Shift goto 19
	'{' => Shift goto 79
	'}' => Reduce #0 statementlist
	"private" => Shift goto 23
	"public" => Shift goto 24
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"var" => Shift goto 85
	"return" => Shift goto 86
	"delete" => Shift goto 87
	"if" => Shift goto 88
	"while" => Shift goto 89
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[47]
	IDENT => Reduce #3 typespec call typespec "^&"
	'(' => Reduce #3 typespec call typespec "^&"
	')' => Reduce #3 typespec call typespec "^&"
	"..." => Reduce #3 typespec call typespec "^&"
	',' => Reduce #3 typespec call typespec "^&"
	':' => Reduce #3 typespec call typespec "^&"
[48]
	IDENT => Reduce #3 typespec call typespec "^^"
	'(' => Reduce #3 typespec call typespec "^^"
	')' => Reduce #3 typespec call typespec "^^"
	"..." => Reduce #3 typespec call typespec "^^"
	',' => Reduce #3 typespec call typespec "^^"
	'&' => Shift goto 93
	':' => Reduce #3 typespec call typespec "^^"
[49]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[50]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[51]
	IDENT => Shift goto 17
	"const" => Shift goto 18
[52]
	'(' => Shift goto 99
[53]
	IDENT => Reduce #3 typename
	'(' => Reduce #3 typename
	')' => Reduce #3 typename
	"..." => Reduce #3 typename
	',' => Reduce #3 typename
	'&' => Reduce #3 typename
	'^' => Reduce #3 typename
	'{' => Reduce #3 typename
	':' => Reduce #3 typename
[54]
	IDENT => Reduce #3 typespec call typespec "const&"
	'(' => Reduce #3 typespec call typespec "const&"
	')' => Reduce #3 typespec call typespec "const&"
	"..." => Reduce #3 typespec call typespec "const&"
	',' => Reduce #3 typespec call typespec "const&"
	':' => Reduce #3 typespec call typespec "const&"
[55]
	IDENT => Reduce #3 typespec call typespec "const^"
	'(' => Reduce #3 typespec call typespec "const^"
	')' => Reduce #3 typespec call typespec "const^"
	"..." => Reduce #3 typespec call typespec "const^"
	',' => Reduce #3 typespec call typespec "const^"
	'&' => Shift goto 100
	'^' => Shift goto 101
	':' => Reduce #3 typespec call typespec "const^"
[56]
	';' => Reduce #3 typedefinition call typedef
[57]
	IDENT => Shift goto 17
	"const" => Shift goto 18
	"typedef" => Shift goto 19
	"struct" => Shift goto 20
	'}' => Reduce #0 struct_definitionlist
[58]
	"function" => Shift goto 106
	"procedure" => Shift goto 107
	"operator" => Shift goto 108
	'}' => Reduce #0 interface_definitionlist
[59]
	IDENT => Shift goto 17
	"function" => Reduce #0 linkage call linkage {name="private",linkage="internal"}
	"procedure" => Reduce #0 linkage call linkage {name="private",linkage="internal"}
	"const" => Shift goto 18
	"operator" => Reduce #0 linkage call linkage {name="private",linkage="internal"}
	"typedef" => Shift goto 19
	"struct" => Shift goto 20
	'}' => Reduce #0 class_definitionlist
	"interface" => Shift goto 21
	"class" => Shift goto 22
	"private" => Shift goto 23
	"public" => Shift goto 24
	"constructor" => Reduce #0 linkage call linkage {name="private",linkage="internal"}
	"destructor" => Shift goto 120
[60]
	IDENT => Shift goto 17
[61]
	IDENT => Shift goto 17
	"const" => Shift goto 18
[62]
	'(' => Shift goto 124
[63]
	';' => Shift goto 125
[64]
	$ => Reduce #1 statement call definition
	BOOLEAN => Reduce #1 statement call definition
	IDENT => Reduce #1 statement call definition
	DQSTRING => Reduce #1 statement call definition
	SQSTRING => Reduce #1 statement call definition
	CARDINAL => Reduce #1 statement call definition
	INTEGER => Reduce #1 statement call definition
	FLOAT => Reduce #1 statement call definition
	"function" => Reduce #1 statement call definition
	'(' => Reduce #1 statement call definition
	"procedure" => Reduce #1 statement call definition
	'&' => Reduce #1 statement call definition
	"typedef" => Reduce #1 statement call definition
	'{' => Reduce #1 statement call definition
	'}' => Reduce #1 statement call definition
	"private" => Reduce #1 statement call definition
	"public" => Reduce #1 statement call definition
	'+' => Reduce #1 statement call definition
	'-' => Reduce #1 statement call definition
	'*' => Reduce #1 statement call definition
	'~' => Reduce #1 statement call definition
	'!' => Reduce #1 statement call definition
	"var" => Reduce #1 statement call definition
	"return" => Reduce #1 statement call definition
	"delete" => Reduce #1 statement call definition
	"if" => Reduce #1 statement call definition
	"while" => Reduce #1 statement call definition
	"new" => Reduce #1 statement call definition
	"cast" => Reduce #1 statement call definition
	"null" => Reduce #1 statement call definition
[65]
	'}' => Shift goto 126
[66]
	'}' => Reduce #1 codeblock call codeblock
[67]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	"function" => Reduce #0 linkage call linkage {name="private",linkage="internal"}
	'(' => Shift goto 77
	"procedure" => Reduce #0 linkage call linkage {name="private",linkage="internal"}
	'&' => Shift goto 78
	"typedef" => Shift goto 19
	'{' => Shift goto 79
	'}' => Reduce #0 statementlist
	"private" => Shift goto 23
	"public" => Shift goto 24
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"var" => Shift goto 85
	"return" => Shift goto 86
	"delete" => Shift goto 87
	"if" => Shift goto 88
	"while" => Shift goto 89
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[68]
	'(' => Shift goto 129
	';' => Shift goto 130
	'&' => Shift goto 131
	'^' => Shift goto 132
	"->" => Shift goto 133
	'=' => Shift goto 134
	'+' => Shift goto 135
	'-' => Shift goto 136
	'*' => Shift goto 137
	'/' => Shift goto 138
	'%' => Shift goto 139
	"&&" => Shift goto 140
	"||" => Shift goto 141
	'|' => Shift goto 142
	"<<" => Shift goto 143
	">>" => Shift goto 144
	'[' => Shift goto 145
	"==" => Shift goto 146
	"!=" => Shift goto 147
	">=" => Shift goto 148
	"<=" => Shift goto 149
	'>' => Shift goto 150
	'<' => Shift goto 151
	"+=" => Shift goto 152
	"-=" => Shift goto 153
	"*=" => Shift goto 154
	"/=" => Shift goto 155
	"^=" => Shift goto 156
	"&=" => Shift goto 157
	"%=" => Shift goto 158
	"&&=" => Shift goto 159
	"||=" => Shift goto 160
	"|=" => Shift goto 161
	"<<=" => Shift goto 162
	">>=" => Shift goto 163
	'.' => Shift goto 164
[69]
	'(' => Reduce #1 expression
	')' => Reduce #1 expression
	';' => Reduce #1 expression
	',' => Reduce #1 expression
	'&' => Reduce #1 expression
	'^' => Reduce #1 expression
	'}' => Reduce #1 expression
	"->" => Reduce #1 expression
	'=' => Reduce #1 expression
	'+' => Reduce #1 expression
	'-' => Reduce #1 expression
	'*' => Reduce #1 expression
	'/' => Reduce #1 expression
	'%' => Reduce #1 expression
	"&&" => Reduce #1 expression
	"||" => Reduce #1 expression
	'|' => Reduce #1 expression
	"<<" => Reduce #1 expression
	">>" => Reduce #1 expression
	'[' => Reduce #1 expression
	']' => Reduce #1 expression
	"==" => Reduce #1 expression
	"!=" => Reduce #1 expression
	">=" => Reduce #1 expression
	"<=" => Reduce #1 expression
	'>' => Reduce #1 expression
	'<' => Reduce #1 expression
	"+=" => Reduce #1 expression
	"-=" => Reduce #1 expression
	"*=" => Reduce #1 expression
	"/=" => Reduce #1 expression
	"^=" => Reduce #1 expression
	"&=" => Reduce #1 expression
	"%=" => Reduce #1 expression
	"&&=" => Reduce #1 expression
	"||=" => Reduce #1 expression
	"|=" => Reduce #1 expression
	"<<=" => Reduce #1 expression
	">>=" => Reduce #1 expression
	'.' => Reduce #1 expression
[70]
	'(' => Reduce #1 expression call constant "constexpr bool"
	')' => Reduce #1 expression call constant "constexpr bool"
	';' => Reduce #1 expression call constant "constexpr bool"
	',' => Reduce #1 expression call constant "constexpr bool"
	'&' => Reduce #1 expression call constant "constexpr bool"
	'^' => Reduce #1 expression call constant "constexpr bool"
	'}' => Reduce #1 expression call constant "constexpr bool"
	"->" => Reduce #1 expression call constant "constexpr bool"
	'=' => Reduce #1 expression call constant "constexpr bool"
	'+' => Reduce #1 expression call constant "constexpr bool"
	'-' => Reduce #1 expression call constant "constexpr bool"
	'*' => Reduce #1 expression call constant "constexpr bool"
	'/' => Reduce #1 expression call constant "constexpr bool"
	'%' => Reduce #1 expression call constant "constexpr bool"
	"&&" => Reduce #1 expression call constant "constexpr bool"
	"||" => Reduce #1 expression call constant "constexpr bool"
	'|' => Reduce #1 expression call constant "constexpr bool"
	"<<" => Reduce #1 expression call constant "constexpr bool"
	">>" => Reduce #1 expression call constant "constexpr bool"
	'[' => Reduce #1 expression call constant "constexpr bool"
	']' => Reduce #1 expression call constant "constexpr bool"
	"==" => Reduce #1 expression call constant "constexpr bool"
	"!=" => Reduce #1 expression call constant "constexpr bool"
	">=" => Reduce #1 expression call constant "constexpr bool"
	"<=" => Reduce #1 expression call constant "constexpr bool"
	'>' => Reduce #1 expression call constant "constexpr bool"
	'<' => Reduce #1 expression call constant "constexpr bool"
	"+=" => Reduce #1 expression call constant "constexpr bool"
	"-=" => Reduce #1 expression call constant "constexpr bool"
	"*=" => Reduce #1 expression call constant "constexpr bool"
	"/=" => Reduce #1 expression call constant "constexpr bool"
	"^=" => Reduce #1 expression call constant "constexpr bool"
	"&=" => Reduce #1 expression call constant "constexpr bool"
	"%=" => Reduce #1 expression call constant "constexpr bool"
	"&&=" => Reduce #1 expression call constant "constexpr bool"
	"||=" => Reduce #1 expression call constant "constexpr bool"
	"|=" => Reduce #1 expression call constant "constexpr bool"
	"<<=" => Reduce #1 expression call constant "constexpr bool"
	">>=" => Reduce #1 expression call constant "constexpr bool"
	'.' => Reduce #1 expression call constant "constexpr bool"
[71]
	'(' => Reduce #1 expression call variable
	')' => Reduce #1 expression call variable
	';' => Reduce #1 expression call variable
	',' => Reduce #1 expression call variable
	'&' => Reduce #1 expression call variable
	'^' => Reduce #1 expression call variable
	'}' => Reduce #1 expression call variable
	"->" => Reduce #1 expression call variable
	'=' => Reduce #1 expression call variable
	'+' => Reduce #1 expression call variable
	'-' => Reduce #1 expression call variable
	'*' => Reduce #1 expression call variable
	'/' => Reduce #1 expression call variable
	'%' => Reduce #1 expression call variable
	"&&" => Reduce #1 expression call variable
	"||" => Reduce #1 expression call variable
	'|' => Reduce #1 expression call variable
	"<<" => Reduce #1 expression call variable
	">>" => Reduce #1 expression call variable
	'[' => Reduce #1 expression call variable
	']' => Reduce #1 expression call variable
	"==" => Reduce #1 expression call variable
	"!=" => Reduce #1 expression call variable
	">=" => Reduce #1 expression call variable
	"<=" => Reduce #1 expression call variable
	'>' => Reduce #1 expression call variable
	'<' => Reduce #1 expression call variable
	"+=" => Reduce #1 expression call variable
	"-=" => Reduce #1 expression call variable
	"*=" => Reduce #1 expression call variable
	"/=" => Reduce #1 expression call variable
	"^=" => Reduce #1 expression call variable
	"&=" => Reduce #1 expression call variable
	"%=" => Reduce #1 expression call variable
	"&&=" => Reduce #1 expression call variable
	"||=" => Reduce #1 expression call variable
	"|=" => Reduce #1 expression call variable
	"<<=" => Reduce #1 expression call variable
	">>=" => Reduce #1 expression call variable
	'.' => Reduce #1 expression call variable
[72]
	'(' => Reduce #1 expression call string_constant "constexpr float"
	')' => Reduce #1 expression call string_constant "constexpr float"
	';' => Reduce #1 expression call string_constant "constexpr float"
	',' => Reduce #1 expression call string_constant "constexpr float"
	'&' => Reduce #1 expression call string_constant "constexpr float"
	'^' => Reduce #1 expression call string_constant "constexpr float"
	'}' => Reduce #1 expression call string_constant "constexpr float"
	"->" => Reduce #1 expression call string_constant "constexpr float"
	'=' => Reduce #1 expression call string_constant "constexpr float"
	'+' => Reduce #1 expression call string_constant "constexpr float"
	'-' => Reduce #1 expression call string_constant "constexpr float"
	'*' => Reduce #1 expression call string_constant "constexpr float"
	'/' => Reduce #1 expression call string_constant "constexpr float"
	'%' => Reduce #1 expression call string_constant "constexpr float"
	"&&" => Reduce #1 expression call string_constant "constexpr float"
	"||" => Reduce #1 expression call string_constant "constexpr float"
	'|' => Reduce #1 expression call string_constant "constexpr float"
	"<<" => Reduce #1 expression call string_constant "constexpr float"
	">>" => Reduce #1 expression call string_constant "constexpr float"
	'[' => Reduce #1 expression call string_constant "constexpr float"
	']' => Reduce #1 expression call string_constant "constexpr float"
	"==" => Reduce #1 expression call string_constant "constexpr float"
	"!=" => Reduce #1 expression call string_constant "constexpr float"
	">=" => Reduce #1 expression call string_constant "constexpr float"
	"<=" => Reduce #1 expression call string_constant "constexpr float"
	'>' => Reduce #1 expression call string_constant "constexpr float"
	'<' => Reduce #1 expression call string_constant "constexpr float"
	"+=" => Reduce #1 expression call string_constant "constexpr float"
	"-=" => Reduce #1 expression call string_constant "constexpr float"
	"*=" => Reduce #1 expression call string_constant "constexpr float"
	"/=" => Reduce #1 expression call string_constant "constexpr float"
	"^=" => Reduce #1 expression call string_constant "constexpr float"
	"&=" => Reduce #1 expression call string_constant "constexpr float"
	"%=" => Reduce #1 expression call string_constant "constexpr float"
	"&&=" => Reduce #1 expression call string_constant "constexpr float"
	"||=" => Reduce #1 expression call string_constant "constexpr float"
	"|=" => Reduce #1 expression call string_constant "constexpr float"
	"<<=" => Reduce #1 expression call string_constant "constexpr float"
	">>=" => Reduce #1 expression call string_constant "constexpr float"
	'.' => Reduce #1 expression call string_constant "constexpr float"
[73]
	'(' => Reduce #1 expression call char_constant "constexpr float"
	')' => Reduce #1 expression call char_constant "constexpr float"
	';' => Reduce #1 expression call char_constant "constexpr float"
	',' => Reduce #1 expression call char_constant "constexpr float"
	'&' => Reduce #1 expression call char_constant "constexpr float"
	'^' => Reduce #1 expression call char_constant "constexpr float"
	'}' => Reduce #1 expression call char_constant "constexpr float"
	"->" => Reduce #1 expression call char_constant "constexpr float"
	'=' => Reduce #1 expression call char_constant "constexpr float"
	'+' => Reduce #1 expression call char_constant "constexpr float"
	'-' => Reduce #1 expression call char_constant "constexpr float"
	'*' => Reduce #1 expression call char_constant "constexpr float"
	'/' => Reduce #1 expression call char_constant "constexpr float"
	'%' => Reduce #1 expression call char_constant "constexpr float"
	"&&" => Reduce #1 expression call char_constant "constexpr float"
	"||" => Reduce #1 expression call char_constant "constexpr float"
	'|' => Reduce #1 expression call char_constant "constexpr float"
	"<<" => Reduce #1 expression call char_constant "constexpr float"
	">>" => Reduce #1 expression call char_constant "constexpr float"
	'[' => Reduce #1 expression call char_constant "constexpr float"
	']' => Reduce #1 expression call char_constant "constexpr float"
	"==" => Reduce #1 expression call char_constant "constexpr float"
	"!=" => Reduce #1 expression call char_constant "constexpr float"
	">=" => Reduce #1 expression call char_constant "constexpr float"
	"<=" => Reduce #1 expression call char_constant "constexpr float"
	'>' => Reduce #1 expression call char_constant "constexpr float"
	'<' => Reduce #1 expression call char_constant "constexpr float"
	"+=" => Reduce #1 expression call char_constant "constexpr float"
	"-=" => Reduce #1 expression call char_constant "constexpr float"
	"*=" => Reduce #1 expression call char_constant "constexpr float"
	"/=" => Reduce #1 expression call char_constant "constexpr float"
	"^=" => Reduce #1 expression call char_constant "constexpr float"
	"&=" => Reduce #1 expression call char_constant "constexpr float"
	"%=" => Reduce #1 expression call char_constant "constexpr float"
	"&&=" => Reduce #1 expression call char_constant "constexpr float"
	"||=" => Reduce #1 expression call char_constant "constexpr float"
	"|=" => Reduce #1 expression call char_constant "constexpr float"
	"<<=" => Reduce #1 expression call char_constant "constexpr float"
	">>=" => Reduce #1 expression call char_constant "constexpr float"
	'.' => Reduce #1 expression call char_constant "constexpr float"
[74]
	'(' => Reduce #1 expression call constant "constexpr uint"
	')' => Reduce #1 expression call constant "constexpr uint"
	';' => Reduce #1 expression call constant "constexpr uint"
	',' => Reduce #1 expression call constant "constexpr uint"
	'&' => Reduce #1 expression call constant "constexpr uint"
	'^' => Reduce #1 expression call constant "constexpr uint"
	'}' => Reduce #1 expression call constant "constexpr uint"
	"->" => Reduce #1 expression call constant "constexpr uint"
	'=' => Reduce #1 expression call constant "constexpr uint"
	'+' => Reduce #1 expression call constant "constexpr uint"
	'-' => Reduce #1 expression call constant "constexpr uint"
	'*' => Reduce #1 expression call constant "constexpr uint"
	'/' => Reduce #1 expression call constant "constexpr uint"
	'%' => Reduce #1 expression call constant "constexpr uint"
	"&&" => Reduce #1 expression call constant "constexpr uint"
	"||" => Reduce #1 expression call constant "constexpr uint"
	'|' => Reduce #1 expression call constant "constexpr uint"
	"<<" => Reduce #1 expression call constant "constexpr uint"
	">>" => Reduce #1 expression call constant "constexpr uint"
	'[' => Reduce #1 expression call constant "constexpr uint"
	']' => Reduce #1 expression call constant "constexpr uint"
	"==" => Reduce #1 expression call constant "constexpr uint"
	"!=" => Reduce #1 expression call constant "constexpr uint"
	">=" => Reduce #1 expression call constant "constexpr uint"
	"<=" => Reduce #1 expression call constant "constexpr uint"
	'>' => Reduce #1 expression call constant "constexpr uint"
	'<' => Reduce #1 expression call constant "constexpr uint"
	"+=" => Reduce #1 expression call constant "constexpr uint"
	"-=" => Reduce #1 expression call constant "constexpr uint"
	"*=" => Reduce #1 expression call constant "constexpr uint"
	"/=" => Reduce #1 expression call constant "constexpr uint"
	"^=" => Reduce #1 expression call constant "constexpr uint"
	"&=" => Reduce #1 expression call constant "constexpr uint"
	"%=" => Reduce #1 expression call constant "constexpr uint"
	"&&=" => Reduce #1 expression call constant "constexpr uint"
	"||=" => Reduce #1 expression call constant "constexpr uint"
	"|=" => Reduce #1 expression call constant "constexpr uint"
	"<<=" => Reduce #1 expression call constant "constexpr uint"
	">>=" => Reduce #1 expression call constant "constexpr uint"
	'.' => Reduce #1 expression call constant "constexpr uint"
[75]
	'(' => Reduce #1 expression call constant "constexpr int"
	')' => Reduce #1 expression call constant "constexpr int"
	';' => Reduce #1 expression call constant "constexpr int"
	',' => Reduce #1 expression call constant "constexpr int"
	'&' => Reduce #1 expression call constant "constexpr int"
	'^' => Reduce #1 expression call constant "constexpr int"
	'}' => Reduce #1 expression call constant "constexpr int"
	"->" => Reduce #1 expression call constant "constexpr int"
	'=' => Reduce #1 expression call constant "constexpr int"
	'+' => Reduce #1 expression call constant "constexpr int"
	'-' => Reduce #1 expression call constant "constexpr int"
	'*' => Reduce #1 expression call constant "constexpr int"
	'/' => Reduce #1 expression call constant "constexpr int"
	'%' => Reduce #1 expression call constant "constexpr int"
	"&&" => Reduce #1 expression call constant "constexpr int"
	"||" => Reduce #1 expression call constant "constexpr int"
	'|' => Reduce #1 expression call constant "constexpr int"
	"<<" => Reduce #1 expression call constant "constexpr int"
	">>" => Reduce #1 expression call constant "constexpr int"
	'[' => Reduce #1 expression call constant "constexpr int"
	']' => Reduce #1 expression call constant "constexpr int"
	"==" => Reduce #1 expression call constant "constexpr int"
	"!=" => Reduce #1 expression call constant "constexpr int"
	">=" => Reduce #1 expression call constant "constexpr int"
	"<=" => Reduce #1 expression call constant "constexpr int"
	'>' => Reduce #1 expression call constant "constexpr int"
	'<' => Reduce #1 expression call constant "constexpr int"
	"+=" => Reduce #1 expression call constant "constexpr int"
	"-=" => Reduce #1 expression call constant "constexpr int"
	"*=" => Reduce #1 expression call constant "constexpr int"
	"/=" => Reduce #1 expression call constant "constexpr int"
	"^=" => Reduce #1 expression call constant "constexpr int"
	"&=" => Reduce #1 expression call constant "constexpr int"
	"%=" => Reduce #1 expression call constant "constexpr int"
	"&&=" => Reduce #1 expression call constant "constexpr int"
	"||=" => Reduce #1 expression call constant "constexpr int"
	"|=" => Reduce #1 expression call constant "constexpr int"
	"<<=" => Reduce #1 expression call constant "constexpr int"
	">>=" => Reduce #1 expression call constant "constexpr int"
	'.' => Reduce #1 expression call constant "constexpr int"
[76]
	'(' => Reduce #1 expression call constant "constexpr float"
	')' => Reduce #1 expression call constant "constexpr float"
	';' => Reduce #1 expression call constant "constexpr float"
	',' => Reduce #1 expression call constant "constexpr float"
	'&' => Reduce #1 expression call constant "constexpr float"
	'^' => Reduce #1 expression call constant "constexpr float"
	'}' => Reduce #1 expression call constant "constexpr float"
	"->" => Reduce #1 expression call constant "constexpr float"
	'=' => Reduce #1 expression call constant "constexpr float"
	'+' => Reduce #1 expression call constant "constexpr float"
	'-' => Reduce #1 expression call constant "constexpr float"
	'*' => Reduce #1 expression call constant "constexpr float"
	'/' => Reduce #1 expression call constant "constexpr float"
	'%' => Reduce #1 expression call constant "constexpr float"
	"&&" => Reduce #1 expression call constant "constexpr float"
	"||" => Reduce #1 expression call constant "constexpr float"
	'|' => Reduce #1 expression call constant "constexpr float"
	"<<" => Reduce #1 expression call constant "constexpr float"
	">>" => Reduce #1 expression call constant "constexpr float"
	'[' => Reduce #1 expression call constant "constexpr float"
	']' => Reduce #1 expression call constant "constexpr float"
	"==" => Reduce #1 expression call constant "constexpr float"
	"!=" => Reduce #1 expression call constant "constexpr float"
	">=" => Reduce #1 expression call constant "constexpr float"
	"<=" => Reduce #1 expression call constant "constexpr float"
	'>' => Reduce #1 expression call constant "constexpr float"
	'<' => Reduce #1 expression call constant "constexpr float"
	"+=" => Reduce #1 expression call constant "constexpr float"
	"-=" => Reduce #1 expression call constant "constexpr float"
	"*=" => Reduce #1 expression call constant "constexpr float"
	"/=" => Reduce #1 expression call constant "constexpr float"
	"^=" => Reduce #1 expression call constant "constexpr float"
	"&=" => Reduce #1 expression call constant "constexpr float"
	"%=" => Reduce #1 expression call constant "constexpr float"
	"&&=" => Reduce #1 expression call constant "constexpr float"
	"||=" => Reduce #1 expression call constant "constexpr float"
	"|=" => Reduce #1 expression call constant "constexpr float"
	"<<=" => Reduce #1 expression call constant "constexpr float"
	">>=" => Reduce #1 expression call constant "constexpr float"
	'.' => Reduce #1 expression call constant "constexpr float"
[77]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[78]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[79]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	"function" => Reduce #0 linkage call linkage {name="private",linkage="internal"}
	'(' => Shift goto 77
	"procedure" => Reduce #0 linkage call linkage {name="private",linkage="internal"}
	'&' => Shift goto 78
	"typedef" => Shift goto 19
	'{' => Shift goto 79
	'}' => Shift goto 170
	"private" => Shift goto 23
	"public" => Shift goto 24
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"var" => Shift goto 85
	"return" => Shift goto 86
	"delete" => Shift goto 87
	"if" => Shift goto 88
	"while" => Shift goto 89
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[80]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[81]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[82]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[83]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[84]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[85]
	IDENT => Shift goto 17
	"const" => Shift goto 18
[86]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[87]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[88]
	'(' => Shift goto 179
[89]
	'(' => Shift goto 180
[90]
	IDENT => Shift goto 17
	"const" => Shift goto 18
[91]
	IDENT => Shift goto 17
	"const" => Shift goto 18
[92]
	'(' => Reduce #1 expression call null "constexpr float"
	')' => Reduce #1 expression call null "constexpr float"
	';' => Reduce #1 expression call null "constexpr float"
	',' => Reduce #1 expression call null "constexpr float"
	'&' => Reduce #1 expression call null "constexpr float"
	'^' => Reduce #1 expression call null "constexpr float"
	'}' => Reduce #1 expression call null "constexpr float"
	"->" => Reduce #1 expression call null "constexpr float"
	'=' => Reduce #1 expression call null "constexpr float"
	'+' => Reduce #1 expression call null "constexpr float"
	'-' => Reduce #1 expression call null "constexpr float"
	'*' => Reduce #1 expression call null "constexpr float"
	'/' => Reduce #1 expression call null "constexpr float"
	'%' => Reduce #1 expression call null "constexpr float"
	"&&" => Reduce #1 expression call null "constexpr float"
	"||" => Reduce #1 expression call null "constexpr float"
	'|' => Reduce #1 expression call null "constexpr float"
	"<<" => Reduce #1 expression call null "constexpr float"
	">>" => Reduce #1 expression call null "constexpr float"
	'[' => Reduce #1 expression call null "constexpr float"
	']' => Reduce #1 expression call null "constexpr float"
	"==" => Reduce #1 expression call null "constexpr float"
	"!=" => Reduce #1 expression call null "constexpr float"
	">=" => Reduce #1 expression call null "constexpr float"
	"<=" => Reduce #1 expression call null "constexpr float"
	'>' => Reduce #1 expression call null "constexpr float"
	'<' => Reduce #1 expression call null "constexpr float"
	"+=" => Reduce #1 expression call null "constexpr float"
	"-=" => Reduce #1 expression call null "constexpr float"
	"*=" => Reduce #1 expression call null "constexpr float"
	"/=" => Reduce #1 expression call null "constexpr float"
	"^=" => Reduce #1 expression call null "constexpr float"
	"&=" => Reduce #1 expression call null "constexpr float"
	"%=" => Reduce #1 expression call null "constexpr float"
	"&&=" => Reduce #1 expression call null "constexpr float"
	"||=" => Reduce #1 expression call null "constexpr float"
	"|=" => Reduce #1 expression call null "constexpr float"
	"<<=" => Reduce #1 expression call null "constexpr float"
	">>=" => Reduce #1 expression call null "constexpr float"
	'.' => Reduce #1 expression call null "constexpr float"
[93]
	IDENT => Reduce #4 typespec call typespec "^^&"
	'(' => Reduce #4 typespec call typespec "^^&"
	')' => Reduce #4 typespec call typespec "^^&"
	"..." => Reduce #4 typespec call typespec "^^&"
	',' => Reduce #4 typespec call typespec "^^&"
	':' => Reduce #4 typespec call typespec "^^&"
[94]
	'(' => Shift goto 129
	';' => Reduce #4 variabledefinition call vardef_assign
	'&' => Shift goto 131
	'^' => Shift goto 132
	"->" => Shift goto 133
	'=' => Shift goto 134
	'+' => Shift goto 135
	'-' => Shift goto 136
	'*' => Shift goto 137
	'/' => Shift goto 138
	'%' => Shift goto 139
	"&&" => Shift goto 140
	"||" => Shift goto 141
	'|' => Shift goto 142
	"<<" => Shift goto 143
	">>" => Shift goto 144
	'[' => Shift goto 145
	"==" => Shift goto 146
	"!=" => Shift goto 147
	">=" => Shift goto 148
	"<=" => Shift goto 149
	'>' => Shift goto 150
	'<' => Shift goto 151
	"+=" => Shift goto 152
	"-=" => Shift goto 153
	"*=" => Shift goto 154
	"/=" => Shift goto 155
	"^=" => Shift goto 156
	"&=" => Shift goto 157
	"%=" => Shift goto 158
	"&&=" => Shift goto 159
	"||=" => Shift goto 160
	"|=" => Shift goto 161
	"<<=" => Shift goto 162
	">>=" => Shift goto 163
	'.' => Shift goto 164
[95]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'}' => Shift goto 170
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[96]
	'(' => Shift goto 129
	'&' => Shift goto 131
	'^' => Shift goto 132
	"->" => Shift goto 133
	'=' => Shift goto 134
	'+' => Shift goto 135
	'-' => Shift goto 136
	'*' => Shift goto 137
	'/' => Shift goto 138
	'%' => Shift goto 139
	"&&" => Shift goto 140
	"||" => Shift goto 141
	'|' => Shift goto 142
	"<<" => Shift goto 143
	">>" => Shift goto 144
	'[' => Shift goto 145
	']' => Shift goto 184
	"==" => Shift goto 146
	"!=" => Shift goto 147
	">=" => Shift goto 148
	"<=" => Shift goto 149
	'>' => Shift goto 150
	'<' => Shift goto 151
	"+=" => Shift goto 152
	"-=" => Shift goto 153
	"*=" => Shift goto 154
	"/=" => Shift goto 155
	"^=" => Shift goto 156
	"&=" => Shift goto 157
	"%=" => Shift goto 158
	"&&=" => Shift goto 159
	"||=" => Shift goto 160
	"|=" => Shift goto 161
	"<<=" => Shift goto 162
	">>=" => Shift goto 163
	'.' => Shift goto 164
[97]
	'(' => Shift goto 99
[98]
	$ => Reduce #4 functiondefinition call procdef
	BOOLEAN => Reduce #4 functiondefinition call procdef
	IDENT => Reduce #4 functiondefinition call procdef
	DQSTRING => Reduce #4 functiondefinition call procdef
	SQSTRING => Reduce #4 functiondefinition call procdef
	CARDINAL => Reduce #4 functiondefinition call procdef
	INTEGER => Reduce #4 functiondefinition call procdef
	FLOAT => Reduce #4 functiondefinition call procdef
	"function" => Reduce #4 functiondefinition call procdef
	'(' => Reduce #4 functiondefinition call procdef
	"procedure" => Reduce #4 functiondefinition call procdef
	"const" => Reduce #4 functiondefinition call procdef
	"operator" => Reduce #4 functiondefinition call procdef
	'&' => Reduce #4 functiondefinition call procdef
	"typedef" => Reduce #4 functiondefinition call procdef
	"struct" => Reduce #4 functiondefinition call procdef
	'{' => Reduce #4 functiondefinition call procdef
	'}' => Reduce #4 functiondefinition call procdef
	"interface" => Reduce #4 functiondefinition call procdef
	"class" => Reduce #4 functiondefinition call procdef
	"private" => Reduce #4 functiondefinition call procdef
	"public" => Reduce #4 functiondefinition call procdef
	"constructor" => Reduce #4 functiondefinition call procdef
	"destructor" => Reduce #4 functiondefinition call procdef
	'+' => Reduce #4 functiondefinition call procdef
	'-' => Reduce #4 functiondefinition call procdef
	'*' => Reduce #4 functiondefinition call procdef
	'~' => Reduce #4 functiondefinition call procdef
	'!' => Reduce #4 functiondefinition call procdef
	"main" => Reduce #4 functiondefinition call procdef
	"var" => Reduce #4 functiondefinition call procdef
	"return" => Reduce #4 functiondefinition call procdef
	"delete" => Reduce #4 functiondefinition call procdef
	"if" => Reduce #4 functiondefinition call procdef
	"while" => Reduce #4 functiondefinition call procdef
	"new" => Reduce #4 functiondefinition call procdef
	"cast" => Reduce #4 functiondefinition call procdef
	"null" => Reduce #4 functiondefinition call procdef
[99]
	IDENT => Shift goto 17
	')' => Reduce #0 parameterlist call paramdeflist
	"const" => Shift goto 18
[100]
	IDENT => Reduce #4 typespec call typespec "const^&"
	'(' => Reduce #4 typespec call typespec "const^&"
	')' => Reduce #4 typespec call typespec "const^&"
	"..." => Reduce #4 typespec call typespec "const^&"
	',' => Reduce #4 typespec call typespec "const^&"
	':' => Reduce #4 typespec call typespec "const^&"
[101]
	IDENT => Reduce #4 typespec call typespec "const^^"
	'(' => Reduce #4 typespec call typespec "const^^"
	')' => Reduce #4 typespec call typespec "const^^"
	"..." => Reduce #4 typespec call typespec "const^^"
	',' => Reduce #4 typespec call typespec "const^^"
	'&' => Shift goto 190
	':' => Reduce #4 typespec call typespec "const^^"
[102]
	'}' => Shift goto 191
[103]
	IDENT => Shift goto 17
	"const" => Shift goto 18
	"typedef" => Shift goto 19
	"struct" => Shift goto 20
	'}' => Reduce #0 struct_definitionlist
[104]
	'}' => Shift goto 193
[105]
	"function" => Shift goto 106
	"procedure" => Shift goto 107
	"operator" => Shift goto 108
	'}' => Reduce #0 interface_definitionlist
[106]
	IDENT => Shift goto 195
[107]
	IDENT => Shift goto 196
[108]
	'(' => Shift goto 198
	'&' => Shift goto 199
	"->" => Shift goto 200
	'=' => Shift goto 201
	'+' => Shift goto 202
	'-' => Shift goto 203
	'*' => Shift goto 204
	'/' => Shift goto 205
	'%' => Shift goto 206
	"&&" => Shift goto 207
	"||" => Shift goto 208
	'|' => Shift goto 209
	"<<" => Shift goto 210
	">>" => Shift goto 211
	'~' => Shift goto 212
	'!' => Shift goto 213
	'[' => Shift goto 214
	"==" => Shift goto 215
	"!=" => Shift goto 216
	">=" => Shift goto 217
	"<=" => Shift goto 218
	'>' => Shift goto 219
	'<' => Shift goto 220
[109]
	'}' => Shift goto 221
[110]
	IDENT => Shift goto 17
	"function" => Reduce #0 linkage call linkage {name="private",linkage="internal"}
	"procedure" => Reduce #0 linkage call linkage {name="private",linkage="internal"}
	"const" => Shift goto 18
	"operator" => Reduce #0 linkage call linkage {name="private",linkage="internal"}
	"typedef" => Shift goto 19
	"struct" => Shift goto 20
	'}' => Reduce #0 class_definitionlist
	"interface" => Shift goto 21
	"class" => Shift goto 22
	"private" => Shift goto 23
	"public" => Shift goto 24
	"constructor" => Reduce #0 linkage call linkage {name="private",linkage="internal"}
	"destructor" => Shift goto 120
[111]
	';' => Shift goto 223
[112]
	$ => Reduce #1 class_definition call definition 1
	IDENT => Reduce #1 class_definition call definition 1
	"function" => Reduce #1 class_definition call definition 1
	"procedure" => Reduce #1 class_definition call definition 1
	"const" => Reduce #1 class_definition call definition 1
	"operator" => Reduce #1 class_definition call definition 1
	"typedef" => Reduce #1 class_definition call definition 1
	"struct" => Reduce #1 class_definition call definition 1
	'}' => Reduce #1 class_definition call definition 1
	"interface" => Reduce #1 class_definition call definition 1
	"class" => Reduce #1 class_definition call definition 1
	"private" => Reduce #1 class_definition call definition 1
	"public" => Reduce #1 class_definition call definition 1
	"constructor" => Reduce #1 class_definition call definition 1
	"destructor" => Reduce #1 class_definition call definition 1
[113]
	$ => Reduce #1 class_definition call definition 1
	IDENT => Reduce #1 class_definition call definition 1
	"function" => Reduce #1 class_definition call definition 1
	"procedure" => Reduce #1 class_definition call definition 1
	"const" => Reduce #1 class_definition call definition 1
	"operator" => Reduce #1 class_definition call definition 1
	"typedef" => Reduce #1 class_definition call definition 1
	"struct" => Reduce #1 class_definition call definition 1
	'}' => Reduce #1 class_definition call definition 1
	"interface" => Reduce #1 class_definition call definition 1
	"class" => Reduce #1 class_definition call definition 1
	"private" => Reduce #1 class_definition call definition 1
	"public" => Reduce #1 class_definition call definition 1
	"constructor" => Reduce #1 class_definition call definition 1
	"destructor" => Reduce #1 class_definition call definition 1
[114]
	$ => Reduce #1 class_definition call definition 1
	IDENT => Reduce #1 class_definition call definition 1
	"function" => Reduce #1 class_definition call definition 1
	"procedure" => Reduce #1 class_definition call definition 1
	"const" => Reduce #1 class_definition call definition 1
	"operator" => Reduce #1 class_definition call definition 1
	"typedef" => Reduce #1 class_definition call definition 1
	"struct" => Reduce #1 class_definition call definition 1
	'}' => Reduce #1 class_definition call definition 1
	"interface" => Reduce #1 class_definition call definition 1
	"class" => Reduce #1 class_definition call definition 1
	"private" => Reduce #1 class_definition call definition 1
	"public" => Reduce #1 class_definition call definition 1
	"constructor" => Reduce #1 class_definition call definition 1
	"destructor" => Reduce #1 class_definition call definition 1
[115]
	"function" => Shift goto 34
	"procedure" => Shift goto 35
	"operator" => Shift goto 224
	"constructor" => Shift goto 225
[116]
	$ => Reduce #1 class_definition call definition 2
	IDENT => Reduce #1 class_definition call definition 2
	"function" => Reduce #1 class_definition call definition 2
	"procedure" => Reduce #1 class_definition call definition 2
	"const" => Reduce #1 class_definition call definition 2
	"operator" => Reduce #1 class_definition call definition 2
	"typedef" => Reduce #1 class_definition call definition 2
	"struct" => Reduce #1 class_definition call definition 2
	'}' => Reduce #1 class_definition call definition 2
	"interface" => Reduce #1 class_definition call definition 2
	"class" => Reduce #1 class_definition call definition 2
	"private" => Reduce #1 class_definition call definition 2
	"public" => Reduce #1 class_definition call definition 2
	"constructor" => Reduce #1 class_definition call definition 2
	"destructor" => Reduce #1 class_definition call definition 2
[117]
	$ => Reduce #1 class_definition call definition 2
	IDENT => Reduce #1 class_definition call definition 2
	"function" => Reduce #1 class_definition call definition 2
	"procedure" => Reduce #1 class_definition call definition 2
	"const" => Reduce #1 class_definition call definition 2
	"operator" => Reduce #1 class_definition call definition 2
	"typedef" => Reduce #1 class_definition call definition 2
	"struct" => Reduce #1 class_definition call definition 2
	'}' => Reduce #1 class_definition call definition 2
	"interface" => Reduce #1 class_definition call definition 2
	"class" => Reduce #1 class_definition call definition 2
	"private" => Reduce #1 class_definition call definition 2
	"public" => Reduce #1 class_definition call definition 2
	"constructor" => Reduce #1 class_definition call definition 2
	"destructor" => Reduce #1 class_definition call definition 2
[118]
	$ => Reduce #1 class_definition call definition 2
	IDENT => Reduce #1 class_definition call definition 2
	"function" => Reduce #1 class_definition call definition 2
	"procedure" => Reduce #1 class_definition call definition 2
	"const" => Reduce #1 class_definition call definition 2
	"operator" => Reduce #1 class_definition call definition 2
	"typedef" => Reduce #1 class_definition call definition 2
	"struct" => Reduce #1 class_definition call definition 2
	'}' => Reduce #1 class_definition call definition 2
	"interface" => Reduce #1 class_definition call definition 2
	"class" => Reduce #1 class_definition call definition 2
	"private" => Reduce #1 class_definition call definition 2
	"public" => Reduce #1 class_definition call definition 2
	"constructor" => Reduce #1 class_definition call definition 2
	"destructor" => Reduce #1 class_definition call definition 2
[119]
	';' => Shift goto 226
[120]
	'{' => Shift goto 227
[121]
	',' => Shift goto 228
	'{' => Reduce #1 inheritlist call inheritdef 1
[122]
	'{' => Shift goto 229
[123]
	'(' => Shift goto 230
[124]
	IDENT => Shift goto 17
	')' => Reduce #0 extern_paramlist call extern_paramdeflist
	"..." => Reduce #0 extern_paramlist call extern_paramdeflist
	"const" => Shift goto 18
[125]
	$ => Reduce #2 statement call definition
	BOOLEAN => Reduce #2 statement call definition
	IDENT => Reduce #2 statement call definition
	DQSTRING => Reduce #2 statement call definition
	SQSTRING => Reduce #2 statement call definition
	CARDINAL => Reduce #2 statement call definition
	INTEGER => Reduce #2 statement call definition
	FLOAT => Reduce #2 statement call definition
	"function" => Reduce #2 statement call definition
	'(' => Reduce #2 statement call definition
	"procedure" => Reduce #2 statement call definition
	'&' => Reduce #2 statement call definition
	"typedef" => Reduce #2 statement call definition
	'{' => Reduce #2 statement call definition
	'}' => Reduce #2 statement call definition
	"private" => Reduce #2 statement call definition
	"public" => Reduce #2 statement call definition
	'+' => Reduce #2 statement call definition
	'-' => Reduce #2 statement call definition
	'*' => Reduce #2 statement call definition
	'~' => Reduce #2 statement call definition
	'!' => Reduce #2 statement call definition
	"var" => Reduce #2 statement call definition
	"return" => Reduce #2 statement call definition
	"delete" => Reduce #2 statement call definition
	"if" => Reduce #2 statement call definition
	"while" => Reduce #2 statement call definition
	"new" => Reduce #2 statement call definition
	"cast" => Reduce #2 statement call definition
	"null" => Reduce #2 statement call definition
[126]
	$ => Reduce #4 main_procedure call main_procdef
[127]
	'}' => Reduce #2 statementlist
[128]
	IDENT => Shift goto 234
[129]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	')' => Shift goto 236
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[130]
	$ => Reduce #2 statement call free_expression
	BOOLEAN => Reduce #2 statement call free_expression
	IDENT => Reduce #2 statement call free_expression
	DQSTRING => Reduce #2 statement call free_expression
	SQSTRING => Reduce #2 statement call free_expression
	CARDINAL => Reduce #2 statement call free_expression
	INTEGER => Reduce #2 statement call free_expression
	FLOAT => Reduce #2 statement call free_expression
	"function" => Reduce #2 statement call free_expression
	'(' => Reduce #2 statement call free_expression
	"procedure" => Reduce #2 statement call free_expression
	'&' => Reduce #2 statement call free_expression
	"typedef" => Reduce #2 statement call free_expression
	'{' => Reduce #2 statement call free_expression
	'}' => Reduce #2 statement call free_expression
	"private" => Reduce #2 statement call free_expression
	"public" => Reduce #2 statement call free_expression
	'+' => Reduce #2 statement call free_expression
	'-' => Reduce #2 statement call free_expression
	'*' => Reduce #2 statement call free_expression
	'~' => Reduce #2 statement call free_expression
	'!' => Reduce #2 statement call free_expression
	"var" => Reduce #2 statement call free_expression
	"return" => Reduce #2 statement call free_expression
	"delete" => Reduce #2 statement call free_expression
	"if" => Reduce #2 statement call free_expression
	"while" => Reduce #2 statement call free_expression
	"new" => Reduce #2 statement call free_expression
	"cast" => Reduce #2 statement call free_expression
	"null" => Reduce #2 statement call free_expression
[131]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[132]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[133]
	IDENT => Reduce #1 indirection call count
	"->" => Shift goto 133
[134]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[135]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[136]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[137]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[138]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[139]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[140]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[141]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[142]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[143]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[144]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[145]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[146]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[147]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[148]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[149]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[150]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[151]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[152]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[153]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[154]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[155]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[156]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[157]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[158]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[159]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[160]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[161]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[162]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[163]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[164]
	IDENT => Shift goto 270
[165]
	'(' => Shift goto 129
	')' => Shift goto 271
	'&' => Shift goto 131
	'^' => Shift goto 132
	"->" => Shift goto 133
	'=' => Shift goto 134
	'+' => Shift goto 135
	'-' => Shift goto 136
	'*' => Shift goto 137
	'/' => Shift goto 138
	'%' => Shift goto 139
	"&&" => Shift goto 140
	"||" => Shift goto 141
	'|' => Shift goto 142
	"<<" => Shift goto 143
	">>" => Shift goto 144
	'[' => Shift goto 145
	"==" => Shift goto 146
	"!=" => Shift goto 147
	">=" => Shift goto 148
	"<=" => Shift goto 149
	'>' => Shift goto 150
	'<' => Shift goto 151
	"+=" => Shift goto 152
	"-=" => Shift goto 153
	"*=" => Shift goto 154
	"/=" => Shift goto 155
	"^=" => Shift goto 156
	"&=" => Shift goto 157
	"%=" => Shift goto 158
	"&&=" => Shift goto 159
	"||=" => Shift goto 160
	"|=" => Shift goto 161
	"<<=" => Shift goto 162
	">>=" => Shift goto 163
	'.' => Shift goto 164
[166]
	'(' => Shift goto 129
	')' => Reduce #2 expression call operator "&"
	';' => Reduce #2 expression call operator "&"
	',' => Reduce #2 expression call operator "&"
	'&' => Reduce #2 expression call operator "&"
	'^' => Reduce #2 expression call operator "&"
	'}' => Reduce #2 expression call operator "&"
	"->" => Reduce #2 expression call operator "&"
	'=' => Reduce #2 expression call operator "&"
	'+' => Reduce #2 expression call operator "&"
	'-' => Reduce #2 expression call operator "&"
	'*' => Shift goto 137
	'/' => Shift goto 138
	'%' => Shift goto 139
	"&&" => Reduce #2 expression call operator "&"
	"||" => Reduce #2 expression call operator "&"
	'|' => Reduce #2 expression call operator "&"
	"<<" => Shift goto 143
	">>" => Shift goto 144
	'[' => Shift goto 145
	']' => Reduce #2 expression call operator "&"
	"==" => Reduce #2 expression call operator "&"
	"!=" => Reduce #2 expression call operator "&"
	">=" => Reduce #2 expression call operator "&"
	"<=" => Reduce #2 expression call operator "&"
	'>' => Reduce #2 expression call operator "&"
	'<' => Reduce #2 expression call operator "&"
	"+=" => Reduce #2 expression call operator "&"
	"-=" => Reduce #2 expression call operator "&"
	"*=" => Reduce #2 expression call operator "&"
	"/=" => Reduce #2 expression call operator "&"
	"^=" => Reduce #2 expression call operator "&"
	"&=" => Reduce #2 expression call operator "&"
	"%=" => Reduce #2 expression call operator "&"
	"&&=" => Reduce #2 expression call operator "&"
	"||=" => Reduce #2 expression call operator "&"
	"|=" => Reduce #2 expression call operator "&"
	"<<=" => Reduce #2 expression call operator "&"
	">>=" => Reduce #2 expression call operator "&"
	'.' => Shift goto 164
[167]
	'}' => Shift goto 272
[168]
	'(' => Shift goto 129
	';' => Shift goto 130
	',' => Shift goto 273
	'&' => Shift goto 131
	'^' => Shift goto 132
	'}' => Reduce #1 expressionlist
	"->" => Shift goto 133
	'=' => Shift goto 134
	'+' => Shift goto 135
	'-' => Shift goto 136
	'*' => Shift goto 137
	'/' => Shift goto 138
	'%' => Shift goto 139
	"&&" => Shift goto 140
	"||" => Shift goto 141
	'|' => Shift goto 142
	"<<" => Shift goto 143
	">>" => Shift goto 144
	'[' => Shift goto 145
	"==" => Shift goto 146
	"!=" => Shift goto 147
	">=" => Shift goto 148
	"<=" => Shift goto 149
	'>' => Shift goto 150
	'<' => Shift goto 151
	"+=" => Shift goto 152
	"-=" => Shift goto 153
	"*=" => Shift goto 154
	"/=" => Shift goto 155
	"^=" => Shift goto 156
	"&=" => Shift goto 157
	"%=" => Shift goto 158
	"&&=" => Shift goto 159
	"||=" => Shift goto 160
	"|=" => Shift goto 161
	"<<=" => Shift goto 162
	">>=" => Shift goto 163
	'.' => Shift goto 164
[169]
	'}' => Shift goto 274
[170]
	'(' => Reduce #2 expression call structure
	')' => Reduce #2 expression call structure
	';' => Reduce #2 expression call structure
	',' => Reduce #2 expression call structure
	'&' => Reduce #2 expression call structure
	'^' => Reduce #2 expression call structure
	'}' => Reduce #2 expression call structure
	"->" => Reduce #2 expression call structure
	'=' => Reduce #2 expression call structure
	'+' => Reduce #2 expression call structure
	'-' => Reduce #2 expression call structure
	'*' => Reduce #2 expression call structure
	'/' => Reduce #2 expression call structure
	'%' => Reduce #2 expression call structure
	"&&" => Reduce #2 expression call structure
	"||" => Reduce #2 expression call structure
	'|' => Reduce #2 expression call structure
	"<<" => Reduce #2 expression call structure
	">>" => Reduce #2 expression call structure
	'[' => Reduce #2 expression call structure
	']' => Reduce #2 expression call structure
	"==" => Reduce #2 expression call structure
	"!=" => Reduce #2 expression call structure
	">=" => Reduce #2 expression call structure
	"<=" => Reduce #2 expression call structure
	'>' => Reduce #2 expression call structure
	'<' => Reduce #2 expression call structure
	"+=" => Reduce #2 expression call structure
	"-=" => Reduce #2 expression call structure
	"*=" => Reduce #2 expression call structure
	"/=" => Reduce #2 expression call structure
	"^=" => Reduce #2 expression call structure
	"&=" => Reduce #2 expression call structure
	"%=" => Reduce #2 expression call structure
	"&&=" => Reduce #2 expression call structure
	"||=" => Reduce #2 expression call structure
	"|=" => Reduce #2 expression call structure
	"<<=" => Reduce #2 expression call structure
	">>=" => Reduce #2 expression call structure
	'.' => Reduce #2 expression call structure
[171]
	'(' => Shift goto 129
	')' => Reduce #2 expression call operator "+"
	';' => Reduce #2 expression call operator "+"
	',' => Reduce #2 expression call operator "+"
	'&' => Reduce #2 expression call operator "+"
	'^' => Reduce #2 expression call operator "+"
	'}' => Reduce #2 expression call operator "+"
	"->" => Reduce #2 expression call operator "+"
	'=' => Reduce #2 expression call operator "+"
	'+' => Reduce #2 expression call operator "+"
	'-' => Reduce #2 expression call operator "+"
	'*' => Shift goto 137
	'/' => Shift goto 138
	'%' => Shift goto 139
	"&&" => Reduce #2 expression call operator "+"
	"||" => Reduce #2 expression call operator "+"
	'|' => Reduce #2 expression call operator "+"
	"<<" => Shift goto 143
	">>" => Shift goto 144
	'[' => Shift goto 145
	']' => Reduce #2 expression call operator "+"
	"==" => Reduce #2 expression call operator "+"
	"!=" => Reduce #2 expression call operator "+"
	">=" => Reduce #2 expression call operator "+"
	"<=" => Reduce #2 expression call operator "+"
	'>' => Reduce #2 expression call operator "+"
	'<' => Reduce #2 expression call operator "+"
	"+=" => Reduce #2 expression call operator "+"
	"-=" => Reduce #2 expression call operator "+"
	"*=" => Reduce #2 expression call operator "+"
	"/=" => Reduce #2 expression call operator "+"
	"^=" => Reduce #2 expression call operator "+"
	"&=" => Reduce #2 expression call operator "+"
	"%=" => Reduce #2 expression call operator "+"
	"&&=" => Reduce #2 expression call operator "+"
	"||=" => Reduce #2 expression call operator "+"
	"|=" => Reduce #2 expression call operator "+"
	"<<=" => Reduce #2 expression call operator "+"
	">>=" => Reduce #2 expression call operator "+"
	'.' => Shift goto 164
[172]
	'(' => Shift goto 129
	')' => Reduce #2 expression call operator "-"
	';' => Reduce #2 expression call operator "-"
	',' => Reduce #2 expression call operator "-"
	'&' => Reduce #2 expression call operator "-"
	'^' => Reduce #2 expression call operator "-"
	'}' => Reduce #2 expression call operator "-"
	"->" => Reduce #2 expression call operator "-"
	'=' => Reduce #2 expression call operator "-"
	'+' => Reduce #2 expression call operator "-"
	'-' => Reduce #2 expression call operator "-"
	'*' => Shift goto 137
	'/' => Shift goto 138
	'%' => Shift goto 139
	"&&" => Reduce #2 expression call operator "-"
	"||" => Reduce #2 expression call operator "-"
	'|' => Reduce #2 expression call operator "-"
	"<<" => Shift goto 143
	">>" => Shift goto 144
	'[' => Shift goto 145
	']' => Reduce #2 expression call operator "-"
	"==" => Reduce #2 expression call operator "-"
	"!=" => Reduce #2 expression call operator "-"
	">=" => Reduce #2 expression call operator "-"
	"<=" => Reduce #2 expression call operator "-"
	'>' => Reduce #2 expression call operator "-"
	'<' => Reduce #2 expression call operator "-"
	"+=" => Reduce #2 expression call operator "-"
	"-=" => Reduce #2 expression call operator "-"
	"*=" => Reduce #2 expression call operator "-"
	"/=" => Reduce #2 expression call operator "-"
	"^=" => Reduce #2 expression call operator "-"
	"&=" => Reduce #2 expression call operator "-"
	"%=" => Reduce #2 expression call operator "-"
	"&&=" => Reduce #2 expression call operator "-"
	"||=" => Reduce #2 expression call operator "-"
	"|=" => Reduce #2 expression call operator "-"
	"<<=" => Reduce #2 expression call operator "-"
	">>=" => Reduce #2 expression call operator "-"
	'.' => Shift goto 164
[173]
	'(' => Shift goto 129
	')' => Reduce #2 expression call operator "->"
	';' => Reduce #2 expression call operator "->"
	',' => Reduce #2 expression call operator "->"
	'&' => Reduce #2 expression call operator "->"
	'^' => Reduce #2 expression call operator "->"
	'}' => Reduce #2 expression call operator "->"
	"->" => Reduce #2 expression call operator "->"
	'=' => Reduce #2 expression call operator "->"
	'+' => Reduce #2 expression call operator "->"
	'-' => Reduce #2 expression call operator "->"
	'*' => Reduce #2 expression call operator "->"
	'/' => Reduce #2 expression call operator "->"
	'%' => Reduce #2 expression call operator "->"
	"&&" => Reduce #2 expression call operator "->"
	"||" => Reduce #2 expression call operator "->"
	'|' => Reduce #2 expression call operator "->"
	"<<" => Reduce #2 expression call operator "->"
	">>" => Reduce #2 expression call operator "->"
	'[' => Shift goto 145
	']' => Reduce #2 expression call operator "->"
	"==" => Reduce #2 expression call operator "->"
	"!=" => Reduce #2 expression call operator "->"
	">=" => Reduce #2 expression call operator "->"
	"<=" => Reduce #2 expression call operator "->"
	'>' => Reduce #2 expression call operator "->"
	'<' => Reduce #2 expression call operator "->"
	"+=" => Reduce #2 expression call operator "->"
	"-=" => Reduce #2 expression call operator "->"
	"*=" => Reduce #2 expression call operator "->"
	"/=" => Reduce #2 expression call operator "->"
	"^=" => Reduce #2 expression call operator "->"
	"&=" => Reduce #2 expression call operator "->"
	"%=" => Reduce #2 expression call operator "->"
	"&&=" => Reduce #2 expression call operator "->"
	"||=" => Reduce #2 expression call operator "->"
	"|=" => Reduce #2 expression call operator "->"
	"<<=" => Reduce #2 expression call operator "->"
	">>=" => Reduce #2 expression call operator "->"
	'.' => Reduce #2 expression call operator "->"
[174]
	'(' => Shift goto 129
	')' => Reduce #2 expression call operator "~"
	';' => Reduce #2 expression call operator "~"
	',' => Reduce #2 expression call operator "~"
	'&' => Reduce #2 expression call operator "~"
	'^' => Reduce #2 expression call operator "~"
	'}' => Reduce #2 expression call operator "~"
	"->" => Reduce #2 expression call operator "~"
	'=' => Reduce #2 expression call operator "~"
	'+' => Reduce #2 expression call operator "~"
	'-' => Reduce #2 expression call operator "~"
	'*' => Shift goto 137
	'/' => Shift goto 138
	'%' => Shift goto 139
	"&&" => Reduce #2 expression call operator "~"
	"||" => Reduce #2 expression call operator "~"
	'|' => Reduce #2 expression call operator "~"
	"<<" => Shift goto 143
	">>" => Shift goto 144
	'[' => Shift goto 145
	']' => Reduce #2 expression call operator "~"
	"==" => Reduce #2 expression call operator "~"
	"!=" => Reduce #2 expression call operator "~"
	">=" => Reduce #2 expression call operator "~"
	"<=" => Reduce #2 expression call operator "~"
	'>' => Reduce #2 expression call operator "~"
	'<' => Reduce #2 expression call operator "~"
	"+=" => Reduce #2 expression call operator "~"
	"-=" => Reduce #2 expression call operator "~"
	"*=" => Reduce #2 expression call operator "~"
	"/=" => Reduce #2 expression call operator "~"
	"^=" => Reduce #2 expression call operator "~"
	"&=" => Reduce #2 expression call operator "~"
	"%=" => Reduce #2 expression call operator "~"
	"&&=" => Reduce #2 expression call operator "~"
	"||=" => Reduce #2 expression call operator "~"
	"|=" => Reduce #2 expression call operator "~"
	"<<=" => Reduce #2 expression call operator "~"
	">>=" => Reduce #2 expression call operator "~"
	'.' => Shift goto 164
[175]
	'(' => Shift goto 129
	')' => Reduce #2 expression call operator "!"
	';' => Reduce #2 expression call operator "!"
	',' => Reduce #2 expression call operator "!"
	'&' => Reduce #2 expression call operator "!"
	'^' => Reduce #2 expression call operator "!"
	'}' => Reduce #2 expression call operator "!"
	"->" => Reduce #2 expression call operator "!"
	'=' => Reduce #2 expression call operator "!"
	'+' => Reduce #2 expression call operator "!"
	'-' => Reduce #2 expression call operator "!"
	'*' => Shift goto 137
	'/' => Shift goto 138
	'%' => Shift goto 139
	"&&" => Reduce #2 expression call operator "!"
	"||" => Reduce #2 expression call operator "!"
	'|' => Reduce #2 expression call operator "!"
	"<<" => Shift goto 143
	">>" => Shift goto 144
	'[' => Shift goto 145
	']' => Reduce #2 expression call operator "!"
	"==" => Reduce #2 expression call operator "!"
	"!=" => Reduce #2 expression call operator "!"
	">=" => Reduce #2 expression call operator "!"
	"<=" => Reduce #2 expression call operator "!"
	'>' => Reduce #2 expression call operator "!"
	'<' => Reduce #2 expression call operator "!"
	"+=" => Reduce #2 expression call operator "!"
	"-=" => Reduce #2 expression call operator "!"
	"*=" => Reduce #2 expression call operator "!"
	"/=" => Reduce #2 expression call operator "!"
	"^=" => Reduce #2 expression call operator "!"
	"&=" => Reduce #2 expression call operator "!"
	"%=" => Reduce #2 expression call operator "!"
	"&&=" => Reduce #2 expression call operator "!"
	"||=" => Reduce #2 expression call operator "!"
	"|=" => Reduce #2 expression call operator "!"
	"<<=" => Reduce #2 expression call operator "!"
	">>=" => Reduce #2 expression call operator "!"
	'.' => Shift goto 164
[176]
	';' => Shift goto 275
[177]
	'(' => Shift goto 129
	';' => Shift goto 276
	'&' => Shift goto 131
	'^' => Shift goto 132
	"->" => Shift goto 133
	'=' => Shift goto 134
	'+' => Shift goto 135
	'-' => Shift goto 136
	'*' => Shift goto 137
	'/' => Shift goto 138
	'%' => Shift goto 139
	"&&" => Shift goto 140
	"||" => Shift goto 141
	'|' => Shift goto 142
	"<<" => Shift goto 143
	">>" => Shift goto 144
	'[' => Shift goto 145
	"==" => Shift goto 146
	"!=" => Shift goto 147
	">=" => Shift goto 148
	"<=" => Shift goto 149
	'>' => Shift goto 150
	'<' => Shift goto 151
	"+=" => Shift goto 152
	"-=" => Shift goto 153
	"*=" => Shift goto 154
	"/=" => Shift goto 155
	"^=" => Shift goto 156
	"&=" => Shift goto 157
	"%=" => Shift goto 158
	"&&=" => Shift goto 159
	"||=" => Shift goto 160
	"|=" => Shift goto 161
	"<<=" => Shift goto 162
	">>=" => Shift goto 163
	'.' => Shift goto 164
[178]
	'(' => Shift goto 129
	';' => Shift goto 277
	'&' => Shift goto 131
	'^' => Shift goto 132
	"->" => Shift goto 133
	'=' => Shift goto 134
	'+' => Shift goto 135
	'-' => Shift goto 136
	'*' => Shift goto 137
	'/' => Shift goto 138
	'%' => Shift goto 139
	"&&" => Shift goto 140
	"||" => Shift goto 141
	'|' => Shift goto 142
	"<<" => Shift goto 143
	">>" => Shift goto 144
	'[' => Shift goto 145
	"==" => Shift goto 146
	"!=" => Shift goto 147
	">=" => Shift goto 148
	"<=" => Shift goto 149
	'>' => Shift goto 150
	'<' => Shift goto 151
	"+=" => Shift goto 152
	"-=" => Shift goto 153
	"*=" => Shift goto 154
	"/=" => Shift goto 155
	"^=" => Shift goto 156
	"&=" => Shift goto 157
	"%=" => Shift goto 158
	"&&=" => Shift goto 159
	"||=" => Shift goto 160
	"|=" => Shift goto 161
	"<<=" => Shift goto 162
	">>=" => Shift goto 163
	'.' => Shift goto 164
[179]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[180]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[181]
	':' => Shift goto 280
[182]
	':' => Shift goto 281
[183]
	'(' => Shift goto 129
	')' => Reduce #1 expressionlist
	',' => Shift goto 273
	'&' => Shift goto 131
	'^' => Shift goto 132
	'}' => Reduce #1 expressionlist
	"->" => Shift goto 133
	'=' => Shift goto 134
	'+' => Shift goto 135
	'-' => Shift goto 136
	'*' => Shift goto 137
	'/' => Shift goto 138
	'%' => Shift goto 139
	"&&" => Shift goto 140
	"||" => Shift goto 141
	'|' => Shift goto 142
	"<<" => Shift goto 143
	">>" => Shift goto 144
	'[' => Shift goto 145
	']' => Reduce #1 expressionlist
	"==" => Shift goto 146
	"!=" => Shift goto 147
	">=" => Shift goto 148
	"<=" => Shift goto 149
	'>' => Shift goto 150
	'<' => Shift goto 151
	"+=" => Shift goto 152
	"-=" => Shift goto 153
	"*=" => Shift goto 154
	"/=" => Shift goto 155
	"^=" => Shift goto 156
	"&=" => Shift goto 157
	"%=" => Shift goto 158
	"&&=" => Shift goto 159
	"||=" => Shift goto 160
	"|=" => Shift goto 161
	"<<=" => Shift goto 162
	">>=" => Shift goto 163
	'.' => Shift goto 164
[184]
	';' => Reduce #5 variabledefinition call vardef_array
	'=' => Shift goto 282
[185]
	$ => Reduce #5 functiondefinition call funcdef
	BOOLEAN => Reduce #5 functiondefinition call funcdef
	IDENT => Reduce #5 functiondefinition call funcdef
	DQSTRING => Reduce #5 functiondefinition call funcdef
	SQSTRING => Reduce #5 functiondefinition call funcdef
	CARDINAL => Reduce #5 functiondefinition call funcdef
	INTEGER => Reduce #5 functiondefinition call funcdef
	FLOAT => Reduce #5 functiondefinition call funcdef
	"function" => Reduce #5 functiondefinition call funcdef
	'(' => Reduce #5 functiondefinition call funcdef
	"procedure" => Reduce #5 functiondefinition call funcdef
	"const" => Reduce #5 functiondefinition call funcdef
	"operator" => Reduce #5 functiondefinition call funcdef
	'&' => Reduce #5 functiondefinition call funcdef
	"typedef" => Reduce #5 functiondefinition call funcdef
	"struct" => Reduce #5 functiondefinition call funcdef
	'{' => Reduce #5 functiondefinition call funcdef
	'}' => Reduce #5 functiondefinition call funcdef
	"interface" => Reduce #5 functiondefinition call funcdef
	"class" => Reduce #5 functiondefinition call funcdef
	"private" => Reduce #5 functiondefinition call funcdef
	"public" => Reduce #5 functiondefinition call funcdef
	"constructor" => Reduce #5 functiondefinition call funcdef
	"destructor" => Reduce #5 functiondefinition call funcdef
	'+' => Reduce #5 functiondefinition call funcdef
	'-' => Reduce #5 functiondefinition call funcdef
	'*' => Reduce #5 functiondefinition call funcdef
	'~' => Reduce #5 functiondefinition call funcdef
	'!' => Reduce #5 functiondefinition call funcdef
	"main" => Reduce #5 functiondefinition call funcdef
	"var" => Reduce #5 functiondefinition call funcdef
	"return" => Reduce #5 functiondefinition call funcdef
	"delete" => Reduce #5 functiondefinition call funcdef
	"if" => Reduce #5 functiondefinition call funcdef
	"while" => Reduce #5 functiondefinition call funcdef
	"new" => Reduce #5 functiondefinition call funcdef
	"cast" => Reduce #5 functiondefinition call funcdef
	"null" => Reduce #5 functiondefinition call funcdef
[186]
	IDENT => Shift goto 283
[187]
	')' => Shift goto 284
[188]
	')' => Reduce #1 parameterlist call paramdeflist
[189]
	')' => Reduce #1 parameters
	',' => Shift goto 285
[190]
	IDENT => Reduce #5 typespec call typespec "const^^&"
	'(' => Reduce #5 typespec call typespec "const^^&"
	')' => Reduce #5 typespec call typespec "const^^&"
	"..." => Reduce #5 typespec call typespec "const^^&"
	',' => Reduce #5 typespec call typespec "const^^&"
	':' => Reduce #5 typespec call typespec "const^^&"
[191]
	$ => Reduce #5 structdefinition call structdef
	IDENT => Reduce #5 structdefinition call structdef
	"function" => Reduce #5 structdefinition call structdef
	"procedure" => Reduce #5 structdefinition call structdef
	"const" => Reduce #5 structdefinition call structdef
	"operator" => Reduce #5 structdefinition call structdef
	"typedef" => Reduce #5 structdefinition call structdef
	"struct" => Reduce #5 structdefinition call structdef
	'}' => Reduce #5 structdefinition call structdef
	"interface" => Reduce #5 structdefinition call structdef
	"class" => Reduce #5 structdefinition call structdef
	"private" => Reduce #5 structdefinition call structdef
	"public" => Reduce #5 structdefinition call structdef
	"constructor" => Reduce #5 structdefinition call structdef
	"destructor" => Reduce #5 structdefinition call structdef
	"main" => Reduce #5 structdefinition call structdef
[192]
	'}' => Reduce #2 struct_definitionlist
[193]
	$ => Reduce #5 interfacedefinition call interfacedef
	IDENT => Reduce #5 interfacedefinition call interfacedef
	"function" => Reduce #5 interfacedefinition call interfacedef
	"procedure" => Reduce #5 interfacedefinition call interfacedef
	"const" => Reduce #5 interfacedefinition call interfacedef
	"operator" => Reduce #5 interfacedefinition call interfacedef
	"typedef" => Reduce #5 interfacedefinition call interfacedef
	"struct" => Reduce #5 interfacedefinition call interfacedef
	'}' => Reduce #5 interfacedefinition call interfacedef
	"interface" => Reduce #5 interfacedefinition call interfacedef
	"class" => Reduce #5 interfacedefinition call interfacedef
	"private" => Reduce #5 interfacedefinition call interfacedef
	"public" => Reduce #5 interfacedefinition call interfacedef
	"constructor" => Reduce #5 interfacedefinition call interfacedef
	"destructor" => Reduce #5 interfacedefinition call interfacedef
	"main" => Reduce #5 interfacedefinition call interfacedef
[194]
	'}' => Reduce #2 interface_definitionlist
[195]
	IDENT => Shift goto 17
	"const" => Shift goto 18
[196]
	'(' => Shift goto 287
[197]
	IDENT => Shift goto 17
	'(' => Shift goto 289
	"const" => Shift goto 18
[198]
	')' => Shift goto 290
[199]
	IDENT => Reduce #1 operatordecl call operatordecl {name="&",symbol="__bitand"}
	'(' => Reduce #1 operatordecl call operatordecl {name="&",symbol="__bitand"}
	"const" => Reduce #1 operatordecl call operatordecl {name="&",symbol="__bitand"}
[200]
	IDENT => Reduce #1 operatordecl call operatordecl {name="->",symbol="__arrow"}
	'(' => Reduce #1 operatordecl call operatordecl {name="->",symbol="__arrow"}
	"const" => Reduce #1 operatordecl call operatordecl {name="->",symbol="__arrow"}
[201]
	IDENT => Reduce #1 operatordecl call operatordecl {name="=",symbol="__assign"}
	'(' => Reduce #1 operatordecl call operatordecl {name="=",symbol="__assign"}
	"const" => Reduce #1 operatordecl call operatordecl {name="=",symbol="__assign"}
[202]
	IDENT => Reduce #1 operatordecl call operatordecl {name="+",symbol="__plus"}
	'(' => Reduce #1 operatordecl call operatordecl {name="+",symbol="__plus"}
	"const" => Reduce #1 operatordecl call operatordecl {name="+",symbol="__plus"}
[203]
	IDENT => Reduce #1 operatordecl call operatordecl {name="-",symbol="__minus"}
	'(' => Reduce #1 operatordecl call operatordecl {name="-",symbol="__minus"}
	"const" => Reduce #1 operatordecl call operatordecl {name="-",symbol="__minus"}
[204]
	IDENT => Reduce #1 operatordecl call operatordecl {name="*",symbol="__mul"}
	'(' => Reduce #1 operatordecl call operatordecl {name="*",symbol="__mul"}
	"const" => Reduce #1 operatordecl call operatordecl {name="*",symbol="__mul"}
[205]
	IDENT => Reduce #1 operatordecl call operatordecl {name="/",symbol="__div"}
	'(' => Reduce #1 operatordecl call operatordecl {name="/",symbol="__div"}
	"const" => Reduce #1 operatordecl call operatordecl {name="/",symbol="__div"}
[206]
	IDENT => Reduce #1 operatordecl call operatordecl {name="%",symbol="__mod"}
	'(' => Reduce #1 operatordecl call operatordecl {name="%",symbol="__mod"}
	"const" => Reduce #1 operatordecl call operatordecl {name="%",symbol="__mod"}
[207]
	IDENT => Reduce #1 operatordecl call operatordecl {name="&&",symbol="__and"}
	'(' => Reduce #1 operatordecl call operatordecl {name="&&",symbol="__and"}
	"const" => Reduce #1 operatordecl call operatordecl {name="&&",symbol="__and"}
[208]
	IDENT => Reduce #1 operatordecl call operatordecl {name="||",symbol="__or"}
	'(' => Reduce #1 operatordecl call operatordecl {name="||",symbol="__or"}
	"const" => Reduce #1 operatordecl call operatordecl {name="||",symbol="__or"}
[209]
	IDENT => Reduce #1 operatordecl call operatordecl {name="|",symbol="__bitor"}
	'(' => Reduce #1 operatordecl call operatordecl {name="|",symbol="__bitor"}
	"const" => Reduce #1 operatordecl call operatordecl {name="|",symbol="__bitor"}
[210]
	IDENT => Reduce #1 operatordecl call operatordecl {name="<<",symbol="__lsh"}
	'(' => Reduce #1 operatordecl call operatordecl {name="<<",symbol="__lsh"}
	"const" => Reduce #1 operatordecl call operatordecl {name="<<",symbol="__lsh"}
[211]
	IDENT => Reduce #1 operatordecl call operatordecl {name=">>",symbol="__rsh"}
	'(' => Reduce #1 operatordecl call operatordecl {name=">>",symbol="__rsh"}
	"const" => Reduce #1 operatordecl call operatordecl {name=">>",symbol="__rsh"}
[212]
	IDENT => Reduce #1 operatordecl call operatordecl {name="~",symbol="__lneg"}
	'(' => Reduce #1 operatordecl call operatordecl {name="~",symbol="__lneg"}
	"const" => Reduce #1 operatordecl call operatordecl {name="~",symbol="__lneg"}
[213]
	IDENT => Reduce #1 operatordecl call operatordecl {name="!",symbol="__not"}
	'(' => Reduce #1 operatordecl call operatordecl {name="!",symbol="__not"}
	"const" => Reduce #1 operatordecl call operatordecl {name="!",symbol="__not"}
[214]
	']' => Shift goto 291
[215]
	IDENT => Reduce #1 operatordecl call operatordecl {name="==",symbol="__eq"}
	'(' => Reduce #1 operatordecl call operatordecl {name="==",symbol="__eq"}
	"const" => Reduce #1 operatordecl call operatordecl {name="==",symbol="__eq"}
[216]
	IDENT => Reduce #1 operatordecl call operatordecl {name="!=",symbol="__ne"}
	'(' => Reduce #1 operatordecl call operatordecl {name="!=",symbol="__ne"}
	"const" => Reduce #1 operatordecl call operatordecl {name="!=",symbol="__ne"}
[217]
	IDENT => Reduce #1 operatordecl call operatordecl {name=">=",symbol="__ge"}
	'(' => Reduce #1 operatordecl call operatordecl {name=">=",symbol="__ge"}
	"const" => Reduce #1 operatordecl call operatordecl {name=">=",symbol="__ge"}
[218]
	IDENT => Reduce #1 operatordecl call operatordecl {name="<=",symbol="__le"}
	'(' => Reduce #1 operatordecl call operatordecl {name="<=",symbol="__le"}
	"const" => Reduce #1 operatordecl call operatordecl {name="<=",symbol="__le"}
[219]
	IDENT => Reduce #1 operatordecl call operatordecl {name=">",symbol="__gt"}
	'(' => Reduce #1 operatordecl call operatordecl {name=">",symbol="__gt"}
	"const" => Reduce #1 operatordecl call operatordecl {name=">",symbol="__gt"}
[220]
	IDENT => Reduce #1 operatordecl call operatordecl {name="<",symbol="__lt"}
	'(' => Reduce #1 operatordecl call operatordecl {name="<",symbol="__lt"}
	"const" => Reduce #1 operatordecl call operatordecl {name="<",symbol="__lt"}
[221]
	$ => Reduce #5 classdefinition call classdef
	IDENT => Reduce #5 classdefinition call classdef
	"function" => Reduce #5 classdefinition call classdef
	"procedure" => Reduce #5 classdefinition call classdef
	"const" => Reduce #5 classdefinition call classdef
	"operator" => Reduce #5 classdefinition call classdef
	"typedef" => Reduce #5 classdefinition call classdef
	"struct" => Reduce #5 classdefinition call classdef
	'}' => Reduce #5 classdefinition call classdef
	"interface" => Reduce #5 classdefinition call classdef
	"class" => Reduce #5 classdefinition call classdef
	"private" => Reduce #5 classdefinition call classdef
	"public" => Reduce #5 classdefinition call classdef
	"constructor" => Reduce #5 classdefinition call classdef
	"destructor" => Reduce #5 classdefinition call classdef
	"main" => Reduce #5 classdefinition call classdef
[222]
	'}' => Reduce #2 class_definitionlist
[223]
	$ => Reduce #2 class_definition call definition 1
	IDENT => Reduce #2 class_definition call definition 1
	"function" => Reduce #2 class_definition call definition 1
	"procedure" => Reduce #2 class_definition call definition 1
	"const" => Reduce #2 class_definition call definition 1
	"operator" => Reduce #2 class_definition call definition 1
	"typedef" => Reduce #2 class_definition call definition 1
	"struct" => Reduce #2 class_definition call definition 1
	'}' => Reduce #2 class_definition call definition 1
	"interface" => Reduce #2 class_definition call definition 1
	"class" => Reduce #2 class_definition call definition 1
	"private" => Reduce #2 class_definition call definition 1
	"public" => Reduce #2 class_definition call definition 1
	"constructor" => Reduce #2 class_definition call definition 1
	"destructor" => Reduce #2 class_definition call definition 1
[224]
	'(' => Shift goto 198
	'&' => Shift goto 199
	"->" => Shift goto 200
	'=' => Shift goto 201
	'+' => Shift goto 202
	'-' => Shift goto 203
	'*' => Shift goto 204
	'/' => Shift goto 205
	'%' => Shift goto 206
	"&&" => Shift goto 207
	"||" => Shift goto 208
	'|' => Shift goto 209
	"<<" => Shift goto 210
	">>" => Shift goto 211
	'~' => Shift goto 212
	'!' => Shift goto 213
	'[' => Shift goto 214
	"==" => Shift goto 215
	"!=" => Shift goto 216
	">=" => Shift goto 217
	"<=" => Shift goto 218
	'>' => Shift goto 219
	'<' => Shift goto 220
[225]
	'(' => Shift goto 99
[226]
	$ => Reduce #2 class_definition call definition 1
	IDENT => Reduce #2 class_definition call definition 1
	"function" => Reduce #2 class_definition call definition 1
	"procedure" => Reduce #2 class_definition call definition 1
	"const" => Reduce #2 class_definition call definition 1
	"operator" => Reduce #2 class_definition call definition 1
	"typedef" => Reduce #2 class_definition call definition 1
	"struct" => Reduce #2 class_definition call definition 1
	'}' => Reduce #2 class_definition call definition 1
	"interface" => Reduce #2 class_definition call definition 1
	"class" => Reduce #2 class_definition call definition 1
	"private" => Reduce #2 class_definition call definition 1
	"public" => Reduce #2 class_definition call definition 1
	"constructor" => Reduce #2 class_definition call definition 1
	"destructor" => Reduce #2 class_definition call definition 1
[227]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	"function" => Reduce #0 linkage call linkage {name="private",linkage="internal"}
	'(' => Shift goto 77
	"procedure" => Reduce #0 linkage call linkage {name="private",linkage="internal"}
	'&' => Shift goto 78
	"typedef" => Shift goto 19
	'{' => Shift goto 79
	'}' => Reduce #0 statementlist
	"private" => Shift goto 23
	"public" => Shift goto 24
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"var" => Shift goto 85
	"return" => Shift goto 86
	"delete" => Shift goto 87
	"if" => Shift goto 88
	"while" => Shift goto 89
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[228]
	IDENT => Shift goto 17
[229]
	IDENT => Shift goto 17
	"function" => Reduce #0 linkage call linkage {name="private",linkage="internal"}
	"procedure" => Reduce #0 linkage call linkage {name="private",linkage="internal"}
	"const" => Shift goto 18
	"operator" => Reduce #0 linkage call linkage {name="private",linkage="internal"}
	"typedef" => Shift goto 19
	"struct" => Shift goto 20
	'}' => Reduce #0 class_definitionlist
	"interface" => Shift goto 21
	"class" => Shift goto 22
	"private" => Shift goto 23
	"public" => Shift goto 24
	"constructor" => Reduce #0 linkage call linkage {name="private",linkage="internal"}
	"destructor" => Shift goto 120
[230]
	IDENT => Shift goto 17
	')' => Reduce #0 extern_paramlist call extern_paramdeflist
	"..." => Reduce #0 extern_paramlist call extern_paramdeflist
	"const" => Shift goto 18
[231]
	')' => Reduce #1 extern_paramlist call extern_paramdeflist
	"..." => Reduce #1 extern_paramlist call extern_paramdeflist
[232]
	')' => Shift goto 298
	"..." => Shift goto 299
[233]
	')' => Reduce #1 extern_parameters
	"..." => Reduce #1 extern_parameters
	',' => Shift goto 300
[234]
	'(' => Reduce #3 iexpression call rep_operator "->"
	')' => Reduce #3 iexpression call rep_operator "->"
	';' => Reduce #3 iexpression call rep_operator "->"
	',' => Reduce #3 iexpression call rep_operator "->"
	'&' => Reduce #3 iexpression call rep_operator "->"
	'^' => Reduce #3 iexpression call rep_operator "->"
	'}' => Reduce #3 iexpression call rep_operator "->"
	"->" => Reduce #3 iexpression call rep_operator "->"
	'=' => Reduce #3 iexpression call rep_operator "->"
	'+' => Reduce #3 iexpression call rep_operator "->"
	'-' => Reduce #3 iexpression call rep_operator "->"
	'*' => Reduce #3 iexpression call rep_operator "->"
	'/' => Reduce #3 iexpression call rep_operator "->"
	'%' => Reduce #3 iexpression call rep_operator "->"
	"&&" => Reduce #3 iexpression call rep_operator "->"
	"||" => Reduce #3 iexpression call rep_operator "->"
	'|' => Reduce #3 iexpression call rep_operator "->"
	"<<" => Reduce #3 iexpression call rep_operator "->"
	">>" => Reduce #3 iexpression call rep_operator "->"
	'[' => Reduce #3 iexpression call rep_operator "->"
	']' => Reduce #3 iexpression call rep_operator "->"
	"==" => Reduce #3 iexpression call rep_operator "->"
	"!=" => Reduce #3 iexpression call rep_operator "->"
	">=" => Reduce #3 iexpression call rep_operator "->"
	"<=" => Reduce #3 iexpression call rep_operator "->"
	'>' => Reduce #3 iexpression call rep_operator "->"
	'<' => Reduce #3 iexpression call rep_operator "->"
	"+=" => Reduce #3 iexpression call rep_operator "->"
	"-=" => Reduce #3 iexpression call rep_operator "->"
	"*=" => Reduce #3 iexpression call rep_operator "->"
	"/=" => Reduce #3 iexpression call rep_operator "->"
	"^=" => Reduce #3 iexpression call rep_operator "->"
	"&=" => Reduce #3 iexpression call rep_operator "->"
	"%=" => Reduce #3 iexpression call rep_operator "->"
	"&&=" => Reduce #3 iexpression call rep_operator "->"
	"||=" => Reduce #3 iexpression call rep_operator "->"
	"|=" => Reduce #3 iexpression call rep_operator "->"
	"<<=" => Reduce #3 iexpression call rep_operator "->"
	">>=" => Reduce #3 iexpression call rep_operator "->"
	'.' => Reduce #3 iexpression call rep_operator "->"
[235]
	')' => Shift goto 301
[236]
	'(' => Reduce #3 expression call operator "()"
	')' => Reduce #3 expression call operator "()"
	';' => Reduce #3 expression call operator "()"
	',' => Reduce #3 expression call operator "()"
	'&' => Reduce #3 expression call operator "()"
	'^' => Reduce #3 expression call operator "()"
	'}' => Reduce #3 expression call operator "()"
	"->" => Reduce #3 expression call operator "()"
	'=' => Reduce #3 expression call operator "()"
	'+' => Reduce #3 expression call operator "()"
	'-' => Reduce #3 expression call operator "()"
	'*' => Reduce #3 expression call operator "()"
	'/' => Reduce #3 expression call operator "()"
	'%' => Reduce #3 expression call operator "()"
	"&&" => Reduce #3 expression call operator "()"
	"||" => Reduce #3 expression call operator "()"
	'|' => Reduce #3 expression call operator "()"
	"<<" => Reduce #3 expression call operator "()"
	">>" => Reduce #3 expression call operator "()"
	'[' => Reduce #3 expression call operator "()"
	']' => Reduce #3 expression call operator "()"
	"==" => Reduce #3 expression call operator "()"
	"!=" => Reduce #3 expression call operator "()"
	">=" => Reduce #3 expression call operator "()"
	"<=" => Reduce #3 expression call operator "()"
	'>' => Reduce #3 expression call operator "()"
	'<' => Reduce #3 expression call operator "()"
	"+=" => Reduce #3 expression call operator "()"
	"-=" => Reduce #3 expression call operator "()"
	"*=" => Reduce #3 expression call operator "()"
	"/=" => Reduce #3 expression call operator "()"
	"^=" => Reduce #3 expression call operator "()"
	"&=" => Reduce #3 expression call operator "()"
	"%=" => Reduce #3 expression call operator "()"
	"&&=" => Reduce #3 expression call operator "()"
	"||=" => Reduce #3 expression call operator "()"
	"|=" => Reduce #3 expression call operator "()"
	"<<=" => Reduce #3 expression call operator "()"
	">>=" => Reduce #3 expression call operator "()"
	'.' => Reduce #3 expression call operator "()"
[237]
	'(' => Shift goto 129
	')' => Reduce #3 expression call operator "&"
	';' => Reduce #3 expression call operator "&"
	',' => Reduce #3 expression call operator "&"
	'&' => Reduce #3 expression call operator "&"
	'^' => Reduce #3 expression call operator "&"
	'}' => Reduce #3 expression call operator "&"
	"->" => Reduce #3 expression call operator "&"
	'=' => Reduce #3 expression call operator "&"
	'+' => Shift goto 135
	'-' => Shift goto 136
	'*' => Shift goto 137
	'/' => Shift goto 138
	'%' => Shift goto 139
	"&&" => Reduce #3 expression call operator "&"
	"||" => Reduce #3 expression call operator "&"
	'|' => Reduce #3 expression call operator "&"
	"<<" => Shift goto 143
	">>" => Shift goto 144
	'[' => Shift goto 145
	']' => Reduce #3 expression call operator "&"
	"==" => Shift goto 146
	"!=" => Shift goto 147
	">=" => Shift goto 148
	"<=" => Shift goto 149
	'>' => Shift goto 150
	'<' => Shift goto 151
	"+=" => Reduce #3 expression call operator "&"
	"-=" => Reduce #3 expression call operator "&"
	"*=" => Reduce #3 expression call operator "&"
	"/=" => Reduce #3 expression call operator "&"
	"^=" => Reduce #3 expression call operator "&"
	"&=" => Reduce #3 expression call operator "&"
	"%=" => Reduce #3 expression call operator "&"
	"&&=" => Reduce #3 expression call operator "&"
	"||=" => Reduce #3 expression call operator "&"
	"|=" => Reduce #3 expression call operator "&"
	"<<=" => Reduce #3 expression call operator "&"
	">>=" => Reduce #3 expression call operator "&"
	'.' => Shift goto 164
[238]
	'(' => Shift goto 129
	')' => Reduce #3 expression call operator "^"
	';' => Reduce #3 expression call operator "^"
	',' => Reduce #3 expression call operator "^"
	'&' => Reduce #3 expression call operator "^"
	'^' => Reduce #3 expression call operator "^"
	'}' => Reduce #3 expression call operator "^"
	"->" => Reduce #3 expression call operator "^"
	'=' => Reduce #3 expression call operator "^"
	'+' => Shift goto 135
	'-' => Shift goto 136
	'*' => Shift goto 137
	'/' => Shift goto 138
	'%' => Shift goto 139
	"&&" => Reduce #3 expression call operator "^"
	"||" => Reduce #3 expression call operator "^"
	'|' => Reduce #3 expression call operator "^"
	"<<" => Shift goto 143
	">>" => Shift goto 144
	'[' => Shift goto 145
	']' => Reduce #3 expression call operator "^"
	"==" => Shift goto 146
	"!=" => Shift goto 147
	">=" => Shift goto 148
	"<=" => Shift goto 149
	'>' => Shift goto 150
	'<' => Shift goto 151
	"+=" => Reduce #3 expression call operator "^"
	"-=" => Reduce #3 expression call operator "^"
	"*=" => Reduce #3 expression call operator "^"
	"/=" => Reduce #3 expression call operator "^"
	"^=" => Reduce #3 expression call operator "^"
	"&=" => Reduce #3 expression call operator "^"
	"%=" => Reduce #3 expression call operator "^"
	"&&=" => Reduce #3 expression call operator "^"
	"||=" => Reduce #3 expression call operator "^"
	"|=" => Reduce #3 expression call operator "^"
	"<<=" => Reduce #3 expression call operator "^"
	">>=" => Reduce #3 expression call operator "^"
	'.' => Shift goto 164
[239]
	IDENT => Reduce #2 indirection call count
[240]
	'(' => Shift goto 129
	')' => Reduce #3 expression call operator "="
	';' => Reduce #3 expression call operator "="
	',' => Reduce #3 expression call operator "="
	'&' => Shift goto 131
	'^' => Shift goto 132
	'}' => Reduce #3 expression call operator "="
	"->" => Reduce #3 expression call operator "="
	'=' => Reduce #3 expression call operator "="
	'+' => Shift goto 135
	'-' => Shift goto 136
	'*' => Shift goto 137
	'/' => Shift goto 138
	'%' => Shift goto 139
	"&&" => Shift goto 140
	"||" => Shift goto 141
	'|' => Shift goto 142
	"<<" => Shift goto 143
	">>" => Shift goto 144
	'[' => Shift goto 145
	']' => Reduce #3 expression call operator "="
	"==" => Shift goto 146
	"!=" => Shift goto 147
	">=" => Shift goto 148
	"<=" => Shift goto 149
	'>' => Shift goto 150
	'<' => Shift goto 151
	"+=" => Reduce #3 expression call operator "="
	"-=" => Reduce #3 expression call operator "="
	"*=" => Reduce #3 expression call operator "="
	"/=" => Reduce #3 expression call operator "="
	"^=" => Reduce #3 expression call operator "="
	"&=" => Reduce #3 expression call operator "="
	"%=" => Reduce #3 expression call operator "="
	"&&=" => Reduce #3 expression call operator "="
	"||=" => Reduce #3 expression call operator "="
	"|=" => Reduce #3 expression call operator "="
	"<<=" => Reduce #3 expression call operator "="
	">>=" => Reduce #3 expression call operator "="
	'.' => Shift goto 164
[241]
	'(' => Shift goto 129
	')' => Reduce #3 expression call operator "+"
	';' => Reduce #3 expression call operator "+"
	',' => Reduce #3 expression call operator "+"
	'&' => Reduce #3 expression call operator "+"
	'^' => Reduce #3 expression call operator "+"
	'}' => Reduce #3 expression call operator "+"
	"->" => Reduce #3 expression call operator "+"
	'=' => Reduce #3 expression call operator "+"
	'+' => Reduce #3 expression call operator "+"
	'-' => Reduce #3 expression call operator "+"
	'*' => Shift goto 137
	'/' => Shift goto 138
	'%' => Shift goto 139
	"&&" => Reduce #3 expression call operator "+"
	"||" => Reduce #3 expression call operator "+"
	'|' => Reduce #3 expression call operator "+"
	"<<" => Shift goto 143
	">>" => Shift goto 144
	'[' => Shift goto 145
	']' => Reduce #3 expression call operator "+"
	"==" => Reduce #3 expression call operator "+"
	"!=" => Reduce #3 expression call operator "+"
	">=" => Reduce #3 expression call operator "+"
	"<=" => Reduce #3 expression call operator "+"
	'>' => Reduce #3 expression call operator "+"
	'<' => Reduce #3 expression call operator "+"
	"+=" => Reduce #3 expression call operator "+"
	"-=" => Reduce #3 expression call operator "+"
	"*=" => Reduce #3 expression call operator "+"
	"/=" => Reduce #3 expression call operator "+"
	"^=" => Reduce #3 expression call operator "+"
	"&=" => Reduce #3 expression call operator "+"
	"%=" => Reduce #3 expression call operator "+"
	"&&=" => Reduce #3 expression call operator "+"
	"||=" => Reduce #3 expression call operator "+"
	"|=" => Reduce #3 expression call operator "+"
	"<<=" => Reduce #3 expression call operator "+"
	">>=" => Reduce #3 expression call operator "+"
	'.' => Shift goto 164
[242]
	'(' => Shift goto 129
	')' => Reduce #3 expression call operator "-"
	';' => Reduce #3 expression call operator "-"
	',' => Reduce #3 expression call operator "-"
	'&' => Reduce #3 expression call operator "-"
	'^' => Reduce #3 expression call operator "-"
	'}' => Reduce #3 expression call operator "-"
	"->" => Reduce #3 expression call operator "-"
	'=' => Reduce #3 expression call operator "-"
	'+' => Reduce #3 expression call operator "-"
	'-' => Reduce #3 expression call operator "-"
	'*' => Shift goto 137
	'/' => Shift goto 138
	'%' => Shift goto 139
	"&&" => Reduce #3 expression call operator "-"
	"||" => Reduce #3 expression call operator "-"
	'|' => Reduce #3 expression call operator "-"
	"<<" => Shift goto 143
	">>" => Shift goto 144
	'[' => Shift goto 145
	']' => Reduce #3 expression call operator "-"
	"==" => Reduce #3 expression call operator "-"
	"!=" => Reduce #3 expression call operator "-"
	">=" => Reduce #3 expression call operator "-"
	"<=" => Reduce #3 expression call operator "-"
	'>' => Reduce #3 expression call operator "-"
	'<' => Reduce #3 expression call operator "-"
	"+=" => Reduce #3 expression call operator "-"
	"-=" => Reduce #3 expression call operator "-"
	"*=" => Reduce #3 expression call operator "-"
	"/=" => Reduce #3 expression call operator "-"
	"^=" => Reduce #3 expression call operator "-"
	"&=" => Reduce #3 expression call operator "-"
	"%=" => Reduce #3 expression call operator "-"
	"&&=" => Reduce #3 expression call operator "-"
	"||=" => Reduce #3 expression call operator "-"
	"|=" => Reduce #3 expression call operator "-"
	"<<=" => Reduce #3 expression call operator "-"
	">>=" => Reduce #3 expression call operator "-"
	'.' => Shift goto 164
[243]
	'(' => Shift goto 129
	')' => Reduce #3 expression call operator "*"
	';' => Reduce #3 expression call operator "*"
	',' => Reduce #3 expression call operator "*"
	'&' => Reduce #3 expression call operator "*"
	'^' => Reduce #3 expression call operator "*"
	'}' => Reduce #3 expression call operator "*"
	"->" => Reduce #3 expression call operator "*"
	'=' => Reduce #3 expression call operator "*"
	'+' => Reduce #3 expression call operator "*"
	'-' => Reduce #3 expression call operator "*"
	'*' => Reduce #3 expression call operator "*"
	'/' => Reduce #3 expression call operator "*"
	'%' => Reduce #3 expression call operator "*"
	"&&" => Reduce #3 expression call operator "*"
	"||" => Reduce #3 expression call operator "*"
	'|' => Reduce #3 expression call operator "*"
	"<<" => Shift goto 143
	">>" => Shift goto 144
	'[' => Shift goto 145
	']' => Reduce #3 expression call operator "*"
	"==" => Reduce #3 expression call operator "*"
	"!=" => Reduce #3 expression call operator "*"
	">=" => Reduce #3 expression call operator "*"
	"<=" => Reduce #3 expression call operator "*"
	'>' => Reduce #3 expression call operator "*"
	'<' => Reduce #3 expression call operator "*"
	"+=" => Reduce #3 expression call operator "*"
	"-=" => Reduce #3 expression call operator "*"
	"*=" => Reduce #3 expression call operator "*"
	"/=" => Reduce #3 expression call operator "*"
	"^=" => Reduce #3 expression call operator "*"
	"&=" => Reduce #3 expression call operator "*"
	"%=" => Reduce #3 expression call operator "*"
	"&&=" => Reduce #3 expression call operator "*"
	"||=" => Reduce #3 expression call operator "*"
	"|=" => Reduce #3 expression call operator "*"
	"<<=" => Reduce #3 expression call operator "*"
	">>=" => Reduce #3 expression call operator "*"
	'.' => Shift goto 164
[244]
	'(' => Shift goto 129
	')' => Reduce #3 expression call operator "/"
	';' => Reduce #3 expression call operator "/"
	',' => Reduce #3 expression call operator "/"
	'&' => Reduce #3 expression call operator "/"
	'^' => Reduce #3 expression call operator "/"
	'}' => Reduce #3 expression call operator "/"
	"->" => Reduce #3 expression call operator "/"
	'=' => Reduce #3 expression call operator "/"
	'+' => Reduce #3 expression call operator "/"
	'-' => Reduce #3 expression call operator "/"
	'*' => Reduce #3 expression call operator "/"
	'/' => Reduce #3 expression call operator "/"
	'%' => Reduce #3 expression call operator "/"
	"&&" => Reduce #3 expression call operator "/"
	"||" => Reduce #3 expression call operator "/"
	'|' => Reduce #3 expression call operator "/"
	"<<" => Shift goto 143
	">>" => Shift goto 144
	'[' => Shift goto 145
	']' => Reduce #3 expression call operator "/"
	"==" => Reduce #3 expression call operator "/"
	"!=" => Reduce #3 expression call operator "/"
	">=" => Reduce #3 expression call operator "/"
	"<=" => Reduce #3 expression call operator "/"
	'>' => Reduce #3 expression call operator "/"
	'<' => Reduce #3 expression call operator "/"
	"+=" => Reduce #3 expression call operator "/"
	"-=" => Reduce #3 expression call operator "/"
	"*=" => Reduce #3 expression call operator "/"
	"/=" => Reduce #3 expression call operator "/"
	"^=" => Reduce #3 expression call operator "/"
	"&=" => Reduce #3 expression call operator "/"
	"%=" => Reduce #3 expression call operator "/"
	"&&=" => Reduce #3 expression call operator "/"
	"||=" => Reduce #3 expression call operator "/"
	"|=" => Reduce #3 expression call operator "/"
	"<<=" => Reduce #3 expression call operator "/"
	">>=" => Reduce #3 expression call operator "/"
	'.' => Shift goto 164
[245]
	'(' => Shift goto 129
	')' => Reduce #3 expression call operator "%"
	';' => Reduce #3 expression call operator "%"
	',' => Reduce #3 expression call operator "%"
	'&' => Reduce #3 expression call operator "%"
	'^' => Reduce #3 expression call operator "%"
	'}' => Reduce #3 expression call operator "%"
	"->" => Reduce #3 expression call operator "%"
	'=' => Reduce #3 expression call operator "%"
	'+' => Reduce #3 expression call operator "%"
	'-' => Reduce #3 expression call operator "%"
	'*' => Reduce #3 expression call operator "%"
	'/' => Reduce #3 expression call operator "%"
	'%' => Reduce #3 expression call operator "%"
	"&&" => Reduce #3 expression call operator "%"
	"||" => Reduce #3 expression call operator "%"
	'|' => Reduce #3 expression call operator "%"
	"<<" => Shift goto 143
	">>" => Shift goto 144
	'[' => Shift goto 145
	']' => Reduce #3 expression call operator "%"
	"==" => Reduce #3 expression call operator "%"
	"!=" => Reduce #3 expression call operator "%"
	">=" => Reduce #3 expression call operator "%"
	"<=" => Reduce #3 expression call operator "%"
	'>' => Reduce #3 expression call operator "%"
	'<' => Reduce #3 expression call operator "%"
	"+=" => Reduce #3 expression call operator "%"
	"-=" => Reduce #3 expression call operator "%"
	"*=" => Reduce #3 expression call operator "%"
	"/=" => Reduce #3 expression call operator "%"
	"^=" => Reduce #3 expression call operator "%"
	"&=" => Reduce #3 expression call operator "%"
	"%=" => Reduce #3 expression call operator "%"
	"&&=" => Reduce #3 expression call operator "%"
	"||=" => Reduce #3 expression call operator "%"
	"|=" => Reduce #3 expression call operator "%"
	"<<=" => Reduce #3 expression call operator "%"
	">>=" => Reduce #3 expression call operator "%"
	'.' => Shift goto 164
[246]
	'(' => Shift goto 129
	')' => Reduce #3 expression call operator "&&"
	';' => Reduce #3 expression call operator "&&"
	',' => Reduce #3 expression call operator "&&"
	'&' => Shift goto 131
	'^' => Shift goto 132
	'}' => Reduce #3 expression call operator "&&"
	"->" => Reduce #3 expression call operator "&&"
	'=' => Reduce #3 expression call operator "&&"
	'+' => Shift goto 135
	'-' => Shift goto 136
	'*' => Shift goto 137
	'/' => Shift goto 138
	'%' => Shift goto 139
	"&&" => Reduce #3 expression call operator "&&"
	"||" => Reduce #3 expression call operator "&&"
	'|' => Shift goto 142
	"<<" => Shift goto 143
	">>" => Shift goto 144
	'[' => Shift goto 145
	']' => Reduce #3 expression call operator "&&"
	"==" => Shift goto 146
	"!=" => Shift goto 147
	">=" => Shift goto 148
	"<=" => Shift goto 149
	'>' => Shift goto 150
	'<' => Shift goto 151
	"+=" => Reduce #3 expression call operator "&&"
	"-=" => Reduce #3 expression call operator "&&"
	"*=" => Reduce #3 expression call operator "&&"
	"/=" => Reduce #3 expression call operator "&&"
	"^=" => Reduce #3 expression call operator "&&"
	"&=" => Reduce #3 expression call operator "&&"
	"%=" => Reduce #3 expression call operator "&&"
	"&&=" => Reduce #3 expression call operator "&&"
	"||=" => Reduce #3 expression call operator "&&"
	"|=" => Reduce #3 expression call operator "&&"
	"<<=" => Reduce #3 expression call operator "&&"
	">>=" => Reduce #3 expression call operator "&&"
	'.' => Shift goto 164
[247]
	'(' => Shift goto 129
	')' => Reduce #3 expression call operator "||"
	';' => Reduce #3 expression call operator "||"
	',' => Reduce #3 expression call operator "||"
	'&' => Shift goto 131
	'^' => Shift goto 132
	'}' => Reduce #3 expression call operator "||"
	"->" => Reduce #3 expression call operator "||"
	'=' => Reduce #3 expression call operator "||"
	'+' => Shift goto 135
	'-' => Shift goto 136
	'*' => Shift goto 137
	'/' => Shift goto 138
	'%' => Shift goto 139
	"&&" => Shift goto 140
	"||" => Reduce #3 expression call operator "||"
	'|' => Shift goto 142
	"<<" => Shift goto 143
	">>" => Shift goto 144
	'[' => Shift goto 145
	']' => Reduce #3 expression call operator "||"
	"==" => Shift goto 146
	"!=" => Shift goto 147
	">=" => Shift goto 148
	"<=" => Shift goto 149
	'>' => Shift goto 150
	'<' => Shift goto 151
	"+=" => Reduce #3 expression call operator "||"
	"-=" => Reduce #3 expression call operator "||"
	"*=" => Reduce #3 expression call operator "||"
	"/=" => Reduce #3 expression call operator "||"
	"^=" => Reduce #3 expression call operator "||"
	"&=" => Reduce #3 expression call operator "||"
	"%=" => Reduce #3 expression call operator "||"
	"&&=" => Reduce #3 expression call operator "||"
	"||=" => Reduce #3 expression call operator "||"
	"|=" => Reduce #3 expression call operator "||"
	"<<=" => Reduce #3 expression call operator "||"
	">>=" => Reduce #3 expression call operator "||"
	'.' => Shift goto 164
[248]
	'(' => Shift goto 129
	')' => Reduce #3 expression call operator "|"
	';' => Reduce #3 expression call operator "|"
	',' => Reduce #3 expression call operator "|"
	'&' => Shift goto 131
	'^' => Shift goto 132
	'}' => Reduce #3 expression call operator "|"
	"->" => Reduce #3 expression call operator "|"
	'=' => Reduce #3 expression call operator "|"
	'+' => Shift goto 135
	'-' => Shift goto 136
	'*' => Shift goto 137
	'/' => Shift goto 138
	'%' => Shift goto 139
	"&&" => Reduce #3 expression call operator "|"
	"||" => Reduce #3 expression call operator "|"
	'|' => Reduce #3 expression call operator "|"
	"<<" => Shift goto 143
	">>" => Shift goto 144
	'[' => Shift goto 145
	']' => Reduce #3 expression call operator "|"
	"==" => Shift goto 146
	"!=" => Shift goto 147
	">=" => Shift goto 148
	"<=" => Shift goto 149
	'>' => Shift goto 150
	'<' => Shift goto 151
	"+=" => Reduce #3 expression call operator "|"
	"-=" => Reduce #3 expression call operator "|"
	"*=" => Reduce #3 expression call operator "|"
	"/=" => Reduce #3 expression call operator "|"
	"^=" => Reduce #3 expression call operator "|"
	"&=" => Reduce #3 expression call operator "|"
	"%=" => Reduce #3 expression call operator "|"
	"&&=" => Reduce #3 expression call operator "|"
	"||=" => Reduce #3 expression call operator "|"
	"|=" => Reduce #3 expression call operator "|"
	"<<=" => Reduce #3 expression call operator "|"
	">>=" => Reduce #3 expression call operator "|"
	'.' => Shift goto 164
[249]
	'(' => Shift goto 129
	')' => Reduce #3 expression call operator "<<"
	';' => Reduce #3 expression call operator "<<"
	',' => Reduce #3 expression call operator "<<"
	'&' => Reduce #3 expression call operator "<<"
	'^' => Reduce #3 expression call operator "<<"
	'}' => Reduce #3 expression call operator "<<"
	"->" => Reduce #3 expression call operator "<<"
	'=' => Reduce #3 expression call operator "<<"
	'+' => Reduce #3 expression call operator "<<"
	'-' => Reduce #3 expression call operator "<<"
	'*' => Reduce #3 expression call operator "<<"
	'/' => Reduce #3 expression call operator "<<"
	'%' => Reduce #3 expression call operator "<<"
	"&&" => Reduce #3 expression call operator "<<"
	"||" => Reduce #3 expression call operator "<<"
	'|' => Reduce #3 expression call operator "<<"
	"<<" => Reduce #3 expression call operator "<<"
	">>" => Reduce #3 expression call operator "<<"
	'[' => Shift goto 145
	']' => Reduce #3 expression call operator "<<"
	"==" => Reduce #3 expression call operator "<<"
	"!=" => Reduce #3 expression call operator "<<"
	">=" => Reduce #3 expression call operator "<<"
	"<=" => Reduce #3 expression call operator "<<"
	'>' => Reduce #3 expression call operator "<<"
	'<' => Reduce #3 expression call operator "<<"
	"+=" => Reduce #3 expression call operator "<<"
	"-=" => Reduce #3 expression call operator "<<"
	"*=" => Reduce #3 expression call operator "<<"
	"/=" => Reduce #3 expression call operator "<<"
	"^=" => Reduce #3 expression call operator "<<"
	"&=" => Reduce #3 expression call operator "<<"
	"%=" => Reduce #3 expression call operator "<<"
	"&&=" => Reduce #3 expression call operator "<<"
	"||=" => Reduce #3 expression call operator "<<"
	"|=" => Reduce #3 expression call operator "<<"
	"<<=" => Reduce #3 expression call operator "<<"
	">>=" => Reduce #3 expression call operator "<<"
	'.' => Shift goto 164
[250]
	'(' => Shift goto 129
	')' => Reduce #3 expression call operator ">>"
	';' => Reduce #3 expression call operator ">>"
	',' => Reduce #3 expression call operator ">>"
	'&' => Reduce #3 expression call operator ">>"
	'^' => Reduce #3 expression call operator ">>"
	'}' => Reduce #3 expression call operator ">>"
	"->" => Reduce #3 expression call operator ">>"
	'=' => Reduce #3 expression call operator ">>"
	'+' => Reduce #3 expression call operator ">>"
	'-' => Reduce #3 expression call operator ">>"
	'*' => Reduce #3 expression call operator ">>"
	'/' => Reduce #3 expression call operator ">>"
	'%' => Reduce #3 expression call operator ">>"
	"&&" => Reduce #3 expression call operator ">>"
	"||" => Reduce #3 expression call operator ">>"
	'|' => Reduce #3 expression call operator ">>"
	"<<" => Reduce #3 expression call operator ">>"
	">>" => Reduce #3 expression call operator ">>"
	'[' => Shift goto 145
	']' => Reduce #3 expression call operator ">>"
	"==" => Reduce #3 expression call operator ">>"
	"!=" => Reduce #3 expression call operator ">>"
	">=" => Reduce #3 expression call operator ">>"
	"<=" => Reduce #3 expression call operator ">>"
	'>' => Reduce #3 expression call operator ">>"
	'<' => Reduce #3 expression call operator ">>"
	"+=" => Reduce #3 expression call operator ">>"
	"-=" => Reduce #3 expression call operator ">>"
	"*=" => Reduce #3 expression call operator ">>"
	"/=" => Reduce #3 expression call operator ">>"
	"^=" => Reduce #3 expression call operator ">>"
	"&=" => Reduce #3 expression call operator ">>"
	"%=" => Reduce #3 expression call operator ">>"
	"&&=" => Reduce #3 expression call operator ">>"
	"||=" => Reduce #3 expression call operator ">>"
	"|=" => Reduce #3 expression call operator ">>"
	"<<=" => Reduce #3 expression call operator ">>"
	">>=" => Reduce #3 expression call operator ">>"
	'.' => Shift goto 164
[251]
	']' => Shift goto 302
[252]
	'(' => Shift goto 129
	')' => Reduce #3 expression call operator "=="
	';' => Reduce #3 expression call operator "=="
	',' => Reduce #3 expression call operator "=="
	'&' => Reduce #3 expression call operator "=="
	'^' => Reduce #3 expression call operator "=="
	'}' => Reduce #3 expression call operator "=="
	"->" => Reduce #3 expression call operator "=="
	'=' => Reduce #3 expression call operator "=="
	'+' => Shift goto 135
	'-' => Shift goto 136
	'*' => Shift goto 137
	'/' => Shift goto 138
	'%' => Shift goto 139
	"&&" => Reduce #3 expression call operator "=="
	"||" => Reduce #3 expression call operator "=="
	'|' => Reduce #3 expression call operator "=="
	"<<" => Shift goto 143
	">>" => Shift goto 144
	'[' => Shift goto 145
	']' => Reduce #3 expression call operator "=="
	"==" => Reduce #3 expression call operator "=="
	"!=" => Reduce #3 expression call operator "=="
	">=" => Reduce #3 expression call operator "=="
	"<=" => Reduce #3 expression call operator "=="
	'>' => Reduce #3 expression call operator "=="
	'<' => Reduce #3 expression call operator "=="
	"+=" => Reduce #3 expression call operator "=="
	"-=" => Reduce #3 expression call operator "=="
	"*=" => Reduce #3 expression call operator "=="
	"/=" => Reduce #3 expression call operator "=="
	"^=" => Reduce #3 expression call operator "=="
	"&=" => Reduce #3 expression call operator "=="
	"%=" => Reduce #3 expression call operator "=="
	"&&=" => Reduce #3 expression call operator "=="
	"||=" => Reduce #3 expression call operator "=="
	"|=" => Reduce #3 expression call operator "=="
	"<<=" => Reduce #3 expression call operator "=="
	">>=" => Reduce #3 expression call operator "=="
	'.' => Shift goto 164
[253]
	'(' => Shift goto 129
	')' => Reduce #3 expression call operator "!="
	';' => Reduce #3 expression call operator "!="
	',' => Reduce #3 expression call operator "!="
	'&' => Reduce #3 expression call operator "!="
	'^' => Reduce #3 expression call operator "!="
	'}' => Reduce #3 expression call operator "!="
	"->" => Reduce #3 expression call operator "!="
	'=' => Reduce #3 expression call operator "!="
	'+' => Shift goto 135
	'-' => Shift goto 136
	'*' => Shift goto 137
	'/' => Shift goto 138
	'%' => Shift goto 139
	"&&" => Reduce #3 expression call operator "!="
	"||" => Reduce #3 expression call operator "!="
	'|' => Reduce #3 expression call operator "!="
	"<<" => Shift goto 143
	">>" => Shift goto 144
	'[' => Shift goto 145
	']' => Reduce #3 expression call operator "!="
	"==" => Reduce #3 expression call operator "!="
	"!=" => Reduce #3 expression call operator "!="
	">=" => Reduce #3 expression call operator "!="
	"<=" => Reduce #3 expression call operator "!="
	'>' => Reduce #3 expression call operator "!="
	'<' => Reduce #3 expression call operator "!="
	"+=" => Reduce #3 expression call operator "!="
	"-=" => Reduce #3 expression call operator "!="
	"*=" => Reduce #3 expression call operator "!="
	"/=" => Reduce #3 expression call operator "!="
	"^=" => Reduce #3 expression call operator "!="
	"&=" => Reduce #3 expression call operator "!="
	"%=" => Reduce #3 expression call operator "!="
	"&&=" => Reduce #3 expression call operator "!="
	"||=" => Reduce #3 expression call operator "!="
	"|=" => Reduce #3 expression call operator "!="
	"<<=" => Reduce #3 expression call operator "!="
	">>=" => Reduce #3 expression call operator "!="
	'.' => Shift goto 164
[254]
	'(' => Shift goto 129
	')' => Reduce #3 expression call operator ">="
	';' => Reduce #3 expression call operator ">="
	',' => Reduce #3 expression call operator ">="
	'&' => Reduce #3 expression call operator ">="
	'^' => Reduce #3 expression call operator ">="
	'}' => Reduce #3 expression call operator ">="
	"->" => Reduce #3 expression call operator ">="
	'=' => Reduce #3 expression call operator ">="
	'+' => Shift goto 135
	'-' => Shift goto 136
	'*' => Shift goto 137
	'/' => Shift goto 138
	'%' => Shift goto 139
	"&&" => Reduce #3 expression call operator ">="
	"||" => Reduce #3 expression call operator ">="
	'|' => Reduce #3 expression call operator ">="
	"<<" => Shift goto 143
	">>" => Shift goto 144
	'[' => Shift goto 145
	']' => Reduce #3 expression call operator ">="
	"==" => Reduce #3 expression call operator ">="
	"!=" => Reduce #3 expression call operator ">="
	">=" => Reduce #3 expression call operator ">="
	"<=" => Reduce #3 expression call operator ">="
	'>' => Reduce #3 expression call operator ">="
	'<' => Reduce #3 expression call operator ">="
	"+=" => Reduce #3 expression call operator ">="
	"-=" => Reduce #3 expression call operator ">="
	"*=" => Reduce #3 expression call operator ">="
	"/=" => Reduce #3 expression call operator ">="
	"^=" => Reduce #3 expression call operator ">="
	"&=" => Reduce #3 expression call operator ">="
	"%=" => Reduce #3 expression call operator ">="
	"&&=" => Reduce #3 expression call operator ">="
	"||=" => Reduce #3 expression call operator ">="
	"|=" => Reduce #3 expression call operator ">="
	"<<=" => Reduce #3 expression call operator ">="
	">>=" => Reduce #3 expression call operator ">="
	'.' => Shift goto 164
[255]
	'(' => Shift goto 129
	')' => Reduce #3 expression call operator "<="
	';' => Reduce #3 expression call operator "<="
	',' => Reduce #3 expression call operator "<="
	'&' => Reduce #3 expression call operator "<="
	'^' => Reduce #3 expression call operator "<="
	'}' => Reduce #3 expression call operator "<="
	"->" => Reduce #3 expression call operator "<="
	'=' => Reduce #3 expression call operator "<="
	'+' => Shift goto 135
	'-' => Shift goto 136
	'*' => Shift goto 137
	'/' => Shift goto 138
	'%' => Shift goto 139
	"&&" => Reduce #3 expression call operator "<="
	"||" => Reduce #3 expression call operator "<="
	'|' => Reduce #3 expression call operator "<="
	"<<" => Shift goto 143
	">>" => Shift goto 144
	'[' => Shift goto 145
	']' => Reduce #3 expression call operator "<="
	"==" => Reduce #3 expression call operator "<="
	"!=" => Reduce #3 expression call operator "<="
	">=" => Reduce #3 expression call operator "<="
	"<=" => Reduce #3 expression call operator "<="
	'>' => Reduce #3 expression call operator "<="
	'<' => Reduce #3 expression call operator "<="
	"+=" => Reduce #3 expression call operator "<="
	"-=" => Reduce #3 expression call operator "<="
	"*=" => Reduce #3 expression call operator "<="
	"/=" => Reduce #3 expression call operator "<="
	"^=" => Reduce #3 expression call operator "<="
	"&=" => Reduce #3 expression call operator "<="
	"%=" => Reduce #3 expression call operator "<="
	"&&=" => Reduce #3 expression call operator "<="
	"||=" => Reduce #3 expression call operator "<="
	"|=" => Reduce #3 expression call operator "<="
	"<<=" => Reduce #3 expression call operator "<="
	">>=" => Reduce #3 expression call operator "<="
	'.' => Shift goto 164
[256]
	'(' => Shift goto 129
	')' => Reduce #3 expression call operator ">"
	';' => Reduce #3 expression call operator ">"
	',' => Reduce #3 expression call operator ">"
	'&' => Reduce #3 expression call operator ">"
	'^' => Reduce #3 expression call operator ">"
	'}' => Reduce #3 expression call operator ">"
	"->" => Reduce #3 expression call operator ">"
	'=' => Reduce #3 expression call operator ">"
	'+' => Shift goto 135
	'-' => Shift goto 136
	'*' => Shift goto 137
	'/' => Shift goto 138
	'%' => Shift goto 139
	"&&" => Reduce #3 expression call operator ">"
	"||" => Reduce #3 expression call operator ">"
	'|' => Reduce #3 expression call operator ">"
	"<<" => Shift goto 143
	">>" => Shift goto 144
	'[' => Shift goto 145
	']' => Reduce #3 expression call operator ">"
	"==" => Reduce #3 expression call operator ">"
	"!=" => Reduce #3 expression call operator ">"
	">=" => Reduce #3 expression call operator ">"
	"<=" => Reduce #3 expression call operator ">"
	'>' => Reduce #3 expression call operator ">"
	'<' => Reduce #3 expression call operator ">"
	"+=" => Reduce #3 expression call operator ">"
	"-=" => Reduce #3 expression call operator ">"
	"*=" => Reduce #3 expression call operator ">"
	"/=" => Reduce #3 expression call operator ">"
	"^=" => Reduce #3 expression call operator ">"
	"&=" => Reduce #3 expression call operator ">"
	"%=" => Reduce #3 expression call operator ">"
	"&&=" => Reduce #3 expression call operator ">"
	"||=" => Reduce #3 expression call operator ">"
	"|=" => Reduce #3 expression call operator ">"
	"<<=" => Reduce #3 expression call operator ">"
	">>=" => Reduce #3 expression call operator ">"
	'.' => Shift goto 164
[257]
	'(' => Shift goto 129
	')' => Reduce #3 expression call operator "<"
	';' => Reduce #3 expression call operator "<"
	',' => Reduce #3 expression call operator "<"
	'&' => Reduce #3 expression call operator "<"
	'^' => Reduce #3 expression call operator "<"
	'}' => Reduce #3 expression call operator "<"
	"->" => Reduce #3 expression call operator "<"
	'=' => Reduce #3 expression call operator "<"
	'+' => Shift goto 135
	'-' => Shift goto 136
	'*' => Shift goto 137
	'/' => Shift goto 138
	'%' => Shift goto 139
	"&&" => Reduce #3 expression call operator "<"
	"||" => Reduce #3 expression call operator "<"
	'|' => Reduce #3 expression call operator "<"
	"<<" => Shift goto 143
	">>" => Shift goto 144
	'[' => Shift goto 145
	']' => Reduce #3 expression call operator "<"
	"==" => Reduce #3 expression call operator "<"
	"!=" => Reduce #3 expression call operator "<"
	">=" => Reduce #3 expression call operator "<"
	"<=" => Reduce #3 expression call operator "<"
	'>' => Reduce #3 expression call operator "<"
	'<' => Reduce #3 expression call operator "<"
	"+=" => Reduce #3 expression call operator "<"
	"-=" => Reduce #3 expression call operator "<"
	"*=" => Reduce #3 expression call operator "<"
	"/=" => Reduce #3 expression call operator "<"
	"^=" => Reduce #3 expression call operator "<"
	"&=" => Reduce #3 expression call operator "<"
	"%=" => Reduce #3 expression call operator "<"
	"&&=" => Reduce #3 expression call operator "<"
	"||=" => Reduce #3 expression call operator "<"
	"|=" => Reduce #3 expression call operator "<"
	"<<=" => Reduce #3 expression call operator "<"
	">>=" => Reduce #3 expression call operator "<"
	'.' => Shift goto 164
[258]
	'(' => Shift goto 129
	')' => Reduce #3 expression call assign_operator "+"
	';' => Reduce #3 expression call assign_operator "+"
	',' => Reduce #3 expression call assign_operator "+"
	'&' => Shift goto 131
	'^' => Shift goto 132
	'}' => Reduce #3 expression call assign_operator "+"
	"->" => Reduce #3 expression call assign_operator "+"
	'=' => Reduce #3 expression call assign_operator "+"
	'+' => Shift goto 135
	'-' => Shift goto 136
	'*' => Shift goto 137
	'/' => Shift goto 138
	'%' => Shift goto 139
	"&&" => Shift goto 140
	"||" => Shift goto 141
	'|' => Shift goto 142
	"<<" => Shift goto 143
	">>" => Shift goto 144
	'[' => Shift goto 145
	']' => Reduce #3 expression call assign_operator "+"
	"==" => Shift goto 146
	"!=" => Shift goto 147
	">=" => Shift goto 148
	"<=" => Shift goto 149
	'>' => Shift goto 150
	'<' => Shift goto 151
	"+=" => Reduce #3 expression call assign_operator "+"
	"-=" => Reduce #3 expression call assign_operator "+"
	"*=" => Reduce #3 expression call assign_operator "+"
	"/=" => Reduce #3 expression call assign_operator "+"
	"^=" => Reduce #3 expression call assign_operator "+"
	"&=" => Reduce #3 expression call assign_operator "+"
	"%=" => Reduce #3 expression call assign_operator "+"
	"&&=" => Reduce #3 expression call assign_operator "+"
	"||=" => Reduce #3 expression call assign_operator "+"
	"|=" => Reduce #3 expression call assign_operator "+"
	"<<=" => Reduce #3 expression call assign_operator "+"
	">>=" => Reduce #3 expression call assign_operator "+"
	'.' => Shift goto 164
[259]
	'(' => Shift goto 129
	')' => Reduce #3 expression call assign_operator "-"
	';' => Reduce #3 expression call assign_operator "-"
	',' => Reduce #3 expression call assign_operator "-"
	'&' => Shift goto 131
	'^' => Shift goto 132
	'}' => Reduce #3 expression call assign_operator "-"
	"->" => Reduce #3 expression call assign_operator "-"
	'=' => Reduce #3 expression call assign_operator "-"
	'+' => Shift goto 135
	'-' => Shift goto 136
	'*' => Shift goto 137
	'/' => Shift goto 138
	'%' => Shift goto 139
	"&&" => Shift goto 140
	"||" => Shift goto 141
	'|' => Shift goto 142
	"<<" => Shift goto 143
	">>" => Shift goto 144
	'[' => Shift goto 145
	']' => Reduce #3 expression call assign_operator "-"
	"==" => Shift goto 146
	"!=" => Shift goto 147
	">=" => Shift goto 148
	"<=" => Shift goto 149
	'>' => Shift goto 150
	'<' => Shift goto 151
	"+=" => Reduce #3 expression call assign_operator "-"
	"-=" => Reduce #3 expression call assign_operator "-"
	"*=" => Reduce #3 expression call assign_operator "-"
	"/=" => Reduce #3 expression call assign_operator "-"
	"^=" => Reduce #3 expression call assign_operator "-"
	"&=" => Reduce #3 expression call assign_operator "-"
	"%=" => Reduce #3 expression call assign_operator "-"
	"&&=" => Reduce #3 expression call assign_operator "-"
	"||=" => Reduce #3 expression call assign_operator "-"
	"|=" => Reduce #3 expression call assign_operator "-"
	"<<=" => Reduce #3 expression call assign_operator "-"
	">>=" => Reduce #3 expression call assign_operator "-"
	'.' => Shift goto 164
[260]
	'(' => Shift goto 129
	')' => Reduce #3 expression call assign_operator "*"
	';' => Reduce #3 expression call assign_operator "*"
	',' => Reduce #3 expression call assign_operator "*"
	'&' => Shift goto 131
	'^' => Shift goto 132
	'}' => Reduce #3 expression call assign_operator "*"
	"->" => Reduce #3 expression call assign_operator "*"
	'=' => Reduce #3 expression call assign_operator "*"
	'+' => Shift goto 135
	'-' => Shift goto 136
	'*' => Shift goto 137
	'/' => Shift goto 138
	'%' => Shift goto 139
	"&&" => Shift goto 140
	"||" => Shift goto 141
	'|' => Shift goto 142
	"<<" => Shift goto 143
	">>" => Shift goto 144
	'[' => Shift goto 145
	']' => Reduce #3 expression call assign_operator "*"
	"==" => Shift goto 146
	"!=" => Shift goto 147
	">=" => Shift goto 148
	"<=" => Shift goto 149
	'>' => Shift goto 150
	'<' => Shift goto 151
	"+=" => Reduce #3 expression call assign_operator "*"
	"-=" => Reduce #3 expression call assign_operator "*"
	"*=" => Reduce #3 expression call assign_operator "*"
	"/=" => Reduce #3 expression call assign_operator "*"
	"^=" => Reduce #3 expression call assign_operator "*"
	"&=" => Reduce #3 expression call assign_operator "*"
	"%=" => Reduce #3 expression call assign_operator "*"
	"&&=" => Reduce #3 expression call assign_operator "*"
	"||=" => Reduce #3 expression call assign_operator "*"
	"|=" => Reduce #3 expression call assign_operator "*"
	"<<=" => Reduce #3 expression call assign_operator "*"
	">>=" => Reduce #3 expression call assign_operator "*"
	'.' => Shift goto 164
[261]
	'(' => Shift goto 129
	')' => Reduce #3 expression call assign_operator "/"
	';' => Reduce #3 expression call assign_operator "/"
	',' => Reduce #3 expression call assign_operator "/"
	'&' => Shift goto 131
	'^' => Shift goto 132
	'}' => Reduce #3 expression call assign_operator "/"
	"->" => Reduce #3 expression call assign_operator "/"
	'=' => Reduce #3 expression call assign_operator "/"
	'+' => Shift goto 135
	'-' => Shift goto 136
	'*' => Shift goto 137
	'/' => Shift goto 138
	'%' => Shift goto 139
	"&&" => Shift goto 140
	"||" => Shift goto 141
	'|' => Shift goto 142
	"<<" => Shift goto 143
	">>" => Shift goto 144
	'[' => Shift goto 145
	']' => Reduce #3 expression call assign_operator "/"
	"==" => Shift goto 146
	"!=" => Shift goto 147
	">=" => Shift goto 148
	"<=" => Shift goto 149
	'>' => Shift goto 150
	'<' => Shift goto 151
	"+=" => Reduce #3 expression call assign_operator "/"
	"-=" => Reduce #3 expression call assign_operator "/"
	"*=" => Reduce #3 expression call assign_operator "/"
	"/=" => Reduce #3 expression call assign_operator "/"
	"^=" => Reduce #3 expression call assign_operator "/"
	"&=" => Reduce #3 expression call assign_operator "/"
	"%=" => Reduce #3 expression call assign_operator "/"
	"&&=" => Reduce #3 expression call assign_operator "/"
	"||=" => Reduce #3 expression call assign_operator "/"
	"|=" => Reduce #3 expression call assign_operator "/"
	"<<=" => Reduce #3 expression call assign_operator "/"
	">>=" => Reduce #3 expression call assign_operator "/"
	'.' => Shift goto 164
[262]
	'(' => Shift goto 129
	')' => Reduce #3 expression call assign_operator "^"
	';' => Reduce #3 expression call assign_operator "^"
	',' => Reduce #3 expression call assign_operator "^"
	'&' => Shift goto 131
	'^' => Shift goto 132
	'}' => Reduce #3 expression call assign_operator "^"
	"->" => Reduce #3 expression call assign_operator "^"
	'=' => Reduce #3 expression call assign_operator "^"
	'+' => Shift goto 135
	'-' => Shift goto 136
	'*' => Shift goto 137
	'/' => Shift goto 138
	'%' => Shift goto 139
	"&&" => Shift goto 140
	"||" => Shift goto 141
	'|' => Shift goto 142
	"<<" => Shift goto 143
	">>" => Shift goto 144
	'[' => Shift goto 145
	']' => Reduce #3 expression call assign_operator "^"
	"==" => Shift goto 146
	"!=" => Shift goto 147
	">=" => Shift goto 148
	"<=" => Shift goto 149
	'>' => Shift goto 150
	'<' => Shift goto 151
	"+=" => Reduce #3 expression call assign_operator "^"
	"-=" => Reduce #3 expression call assign_operator "^"
	"*=" => Reduce #3 expression call assign_operator "^"
	"/=" => Reduce #3 expression call assign_operator "^"
	"^=" => Reduce #3 expression call assign_operator "^"
	"&=" => Reduce #3 expression call assign_operator "^"
	"%=" => Reduce #3 expression call assign_operator "^"
	"&&=" => Reduce #3 expression call assign_operator "^"
	"||=" => Reduce #3 expression call assign_operator "^"
	"|=" => Reduce #3 expression call assign_operator "^"
	"<<=" => Reduce #3 expression call assign_operator "^"
	">>=" => Reduce #3 expression call assign_operator "^"
	'.' => Shift goto 164
[263]
	'(' => Shift goto 129
	')' => Reduce #3 expression call assign_operator "&"
	';' => Reduce #3 expression call assign_operator "&"
	',' => Reduce #3 expression call assign_operator "&"
	'&' => Shift goto 131
	'^' => Shift goto 132
	'}' => Reduce #3 expression call assign_operator "&"
	"->" => Reduce #3 expression call assign_operator "&"
	'=' => Reduce #3 expression call assign_operator "&"
	'+' => Shift goto 135
	'-' => Shift goto 136
	'*' => Shift goto 137
	'/' => Shift goto 138
	'%' => Shift goto 139
	"&&" => Shift goto 140
	"||" => Shift goto 141
	'|' => Shift goto 142
	"<<" => Shift goto 143
	">>" => Shift goto 144
	'[' => Shift goto 145
	']' => Reduce #3 expression call assign_operator "&"
	"==" => Shift goto 146
	"!=" => Shift goto 147
	">=" => Shift goto 148
	"<=" => Shift goto 149
	'>' => Shift goto 150
	'<' => Shift goto 151
	"+=" => Reduce #3 expression call assign_operator "&"
	"-=" => Reduce #3 expression call assign_operator "&"
	"*=" => Reduce #3 expression call assign_operator "&"
	"/=" => Reduce #3 expression call assign_operator "&"
	"^=" => Reduce #3 expression call assign_operator "&"
	"&=" => Reduce #3 expression call assign_operator "&"
	"%=" => Reduce #3 expression call assign_operator "&"
	"&&=" => Reduce #3 expression call assign_operator "&"
	"||=" => Reduce #3 expression call assign_operator "&"
	"|=" => Reduce #3 expression call assign_operator "&"
	"<<=" => Reduce #3 expression call assign_operator "&"
	">>=" => Reduce #3 expression call assign_operator "&"
	'.' => Shift goto 164
[264]
	'(' => Shift goto 129
	')' => Reduce #3 expression call assign_operator "%"
	';' => Reduce #3 expression call assign_operator "%"
	',' => Reduce #3 expression call assign_operator "%"
	'&' => Shift goto 131
	'^' => Shift goto 132
	'}' => Reduce #3 expression call assign_operator "%"
	"->" => Reduce #3 expression call assign_operator "%"
	'=' => Reduce #3 expression call assign_operator "%"
	'+' => Shift goto 135
	'-' => Shift goto 136
	'*' => Shift goto 137
	'/' => Shift goto 138
	'%' => Shift goto 139
	"&&" => Shift goto 140
	"||" => Shift goto 141
	'|' => Shift goto 142
	"<<" => Shift goto 143
	">>" => Shift goto 144
	'[' => Shift goto 145
	']' => Reduce #3 expression call assign_operator "%"
	"==" => Shift goto 146
	"!=" => Shift goto 147
	">=" => Shift goto 148
	"<=" => Shift goto 149
	'>' => Shift goto 150
	'<' => Shift goto 151
	"+=" => Reduce #3 expression call assign_operator "%"
	"-=" => Reduce #3 expression call assign_operator "%"
	"*=" => Reduce #3 expression call assign_operator "%"
	"/=" => Reduce #3 expression call assign_operator "%"
	"^=" => Reduce #3 expression call assign_operator "%"
	"&=" => Reduce #3 expression call assign_operator "%"
	"%=" => Reduce #3 expression call assign_operator "%"
	"&&=" => Reduce #3 expression call assign_operator "%"
	"||=" => Reduce #3 expression call assign_operator "%"
	"|=" => Reduce #3 expression call assign_operator "%"
	"<<=" => Reduce #3 expression call assign_operator "%"
	">>=" => Reduce #3 expression call assign_operator "%"
	'.' => Shift goto 164
[265]
	'(' => Shift goto 129
	')' => Reduce #3 expression call assign_operator "&&"
	';' => Reduce #3 expression call assign_operator "&&"
	',' => Reduce #3 expression call assign_operator "&&"
	'&' => Shift goto 131
	'^' => Shift goto 132
	'}' => Reduce #3 expression call assign_operator "&&"
	"->" => Reduce #3 expression call assign_operator "&&"
	'=' => Reduce #3 expression call assign_operator "&&"
	'+' => Shift goto 135
	'-' => Shift goto 136
	'*' => Shift goto 137
	'/' => Shift goto 138
	'%' => Shift goto 139
	"&&" => Shift goto 140
	"||" => Shift goto 141
	'|' => Shift goto 142
	"<<" => Shift goto 143
	">>" => Shift goto 144
	'[' => Shift goto 145
	']' => Reduce #3 expression call assign_operator "&&"
	"==" => Shift goto 146
	"!=" => Shift goto 147
	">=" => Shift goto 148
	"<=" => Shift goto 149
	'>' => Shift goto 150
	'<' => Shift goto 151
	"+=" => Reduce #3 expression call assign_operator "&&"
	"-=" => Reduce #3 expression call assign_operator "&&"
	"*=" => Reduce #3 expression call assign_operator "&&"
	"/=" => Reduce #3 expression call assign_operator "&&"
	"^=" => Reduce #3 expression call assign_operator "&&"
	"&=" => Reduce #3 expression call assign_operator "&&"
	"%=" => Reduce #3 expression call assign_operator "&&"
	"&&=" => Reduce #3 expression call assign_operator "&&"
	"||=" => Reduce #3 expression call assign_operator "&&"
	"|=" => Reduce #3 expression call assign_operator "&&"
	"<<=" => Reduce #3 expression call assign_operator "&&"
	">>=" => Reduce #3 expression call assign_operator "&&"
	'.' => Shift goto 164
[266]
	'(' => Shift goto 129
	')' => Reduce #3 expression call assign_operator "||"
	';' => Reduce #3 expression call assign_operator "||"
	',' => Reduce #3 expression call assign_operator "||"
	'&' => Shift goto 131
	'^' => Shift goto 132
	'}' => Reduce #3 expression call assign_operator "||"
	"->" => Reduce #3 expression call assign_operator "||"
	'=' => Reduce #3 expression call assign_operator "||"
	'+' => Shift goto 135
	'-' => Shift goto 136
	'*' => Shift goto 137
	'/' => Shift goto 138
	'%' => Shift goto 139
	"&&" => Shift goto 140
	"||" => Shift goto 141
	'|' => Shift goto 142
	"<<" => Shift goto 143
	">>" => Shift goto 144
	'[' => Shift goto 145
	']' => Reduce #3 expression call assign_operator "||"
	"==" => Shift goto 146
	"!=" => Shift goto 147
	">=" => Shift goto 148
	"<=" => Shift goto 149
	'>' => Shift goto 150
	'<' => Shift goto 151
	"+=" => Reduce #3 expression call assign_operator "||"
	"-=" => Reduce #3 expression call assign_operator "||"
	"*=" => Reduce #3 expression call assign_operator "||"
	"/=" => Reduce #3 expression call assign_operator "||"
	"^=" => Reduce #3 expression call assign_operator "||"
	"&=" => Reduce #3 expression call assign_operator "||"
	"%=" => Reduce #3 expression call assign_operator "||"
	"&&=" => Reduce #3 expression call assign_operator "||"
	"||=" => Reduce #3 expression call assign_operator "||"
	"|=" => Reduce #3 expression call assign_operator "||"
	"<<=" => Reduce #3 expression call assign_operator "||"
	">>=" => Reduce #3 expression call assign_operator "||"
	'.' => Shift goto 164
[267]
	'(' => Shift goto 129
	')' => Reduce #3 expression call assign_operator "|"
	';' => Reduce #3 expression call assign_operator "|"
	',' => Reduce #3 expression call assign_operator "|"
	'&' => Shift goto 131
	'^' => Shift goto 132
	'}' => Reduce #3 expression call assign_operator "|"
	"->" => Reduce #3 expression call assign_operator "|"
	'=' => Reduce #3 expression call assign_operator "|"
	'+' => Shift goto 135
	'-' => Shift goto 136
	'*' => Shift goto 137
	'/' => Shift goto 138
	'%' => Shift goto 139
	"&&" => Shift goto 140
	"||" => Shift goto 141
	'|' => Shift goto 142
	"<<" => Shift goto 143
	">>" => Shift goto 144
	'[' => Shift goto 145
	']' => Reduce #3 expression call assign_operator "|"
	"==" => Shift goto 146
	"!=" => Shift goto 147
	">=" => Shift goto 148
	"<=" => Shift goto 149
	'>' => Shift goto 150
	'<' => Shift goto 151
	"+=" => Reduce #3 expression call assign_operator "|"
	"-=" => Reduce #3 expression call assign_operator "|"
	"*=" => Reduce #3 expression call assign_operator "|"
	"/=" => Reduce #3 expression call assign_operator "|"
	"^=" => Reduce #3 expression call assign_operator "|"
	"&=" => Reduce #3 expression call assign_operator "|"
	"%=" => Reduce #3 expression call assign_operator "|"
	"&&=" => Reduce #3 expression call assign_operator "|"
	"||=" => Reduce #3 expression call assign_operator "|"
	"|=" => Reduce #3 expression call assign_operator "|"
	"<<=" => Reduce #3 expression call assign_operator "|"
	">>=" => Reduce #3 expression call assign_operator "|"
	'.' => Shift goto 164
[268]
	'(' => Shift goto 129
	')' => Reduce #3 expression call assign_operator "<<"
	';' => Reduce #3 expression call assign_operator "<<"
	',' => Reduce #3 expression call assign_operator "<<"
	'&' => Shift goto 131
	'^' => Shift goto 132
	'}' => Reduce #3 expression call assign_operator "<<"
	"->" => Reduce #3 expression call assign_operator "<<"
	'=' => Reduce #3 expression call assign_operator "<<"
	'+' => Shift goto 135
	'-' => Shift goto 136
	'*' => Shift goto 137
	'/' => Shift goto 138
	'%' => Shift goto 139
	"&&" => Shift goto 140
	"||" => Shift goto 141
	'|' => Shift goto 142
	"<<" => Shift goto 143
	">>" => Shift goto 144
	'[' => Shift goto 145
	']' => Reduce #3 expression call assign_operator "<<"
	"==" => Shift goto 146
	"!=" => Shift goto 147
	">=" => Shift goto 148
	"<=" => Shift goto 149
	'>' => Shift goto 150
	'<' => Shift goto 151
	"+=" => Reduce #3 expression call assign_operator "<<"
	"-=" => Reduce #3 expression call assign_operator "<<"
	"*=" => Reduce #3 expression call assign_operator "<<"
	"/=" => Reduce #3 expression call assign_operator "<<"
	"^=" => Reduce #3 expression call assign_operator "<<"
	"&=" => Reduce #3 expression call assign_operator "<<"
	"%=" => Reduce #3 expression call assign_operator "<<"
	"&&=" => Reduce #3 expression call assign_operator "<<"
	"||=" => Reduce #3 expression call assign_operator "<<"
	"|=" => Reduce #3 expression call assign_operator "<<"
	"<<=" => Reduce #3 expression call assign_operator "<<"
	">>=" => Reduce #3 expression call assign_operator "<<"
	'.' => Shift goto 164
[269]
	'(' => Shift goto 129
	')' => Reduce #3 expression call assign_operator ">>"
	';' => Reduce #3 expression call assign_operator ">>"
	',' => Reduce #3 expression call assign_operator ">>"
	'&' => Shift goto 131
	'^' => Shift goto 132
	'}' => Reduce #3 expression call assign_operator ">>"
	"->" => Reduce #3 expression call assign_operator ">>"
	'=' => Reduce #3 expression call assign_operator ">>"
	'+' => Shift goto 135
	'-' => Shift goto 136
	'*' => Shift goto 137
	'/' => Shift goto 138
	'%' => Shift goto 139
	"&&" => Shift goto 140
	"||" => Shift goto 141
	'|' => Shift goto 142
	"<<" => Shift goto 143
	">>" => Shift goto 144
	'[' => Shift goto 145
	']' => Reduce #3 expression call assign_operator ">>"
	"==" => Shift goto 146
	"!=" => Shift goto 147
	">=" => Shift goto 148
	"<=" => Shift goto 149
	'>' => Shift goto 150
	'<' => Shift goto 151
	"+=" => Reduce #3 expression call assign_operator ">>"
	"-=" => Reduce #3 expression call assign_operator ">>"
	"*=" => Reduce #3 expression call assign_operator ">>"
	"/=" => Reduce #3 expression call assign_operator ">>"
	"^=" => Reduce #3 expression call assign_operator ">>"
	"&=" => Reduce #3 expression call assign_operator ">>"
	"%=" => Reduce #3 expression call assign_operator ">>"
	"&&=" => Reduce #3 expression call assign_operator ">>"
	"||=" => Reduce #3 expression call assign_operator ">>"
	"|=" => Reduce #3 expression call assign_operator ">>"
	"<<=" => Reduce #3 expression call assign_operator ">>"
	">>=" => Reduce #3 expression call assign_operator ">>"
	'.' => Shift goto 164
[270]
	'(' => Reduce #3 expression call member
	')' => Reduce #3 expression call member
	';' => Reduce #3 expression call member
	',' => Reduce #3 expression call member
	'&' => Reduce #3 expression call member
	'^' => Reduce #3 expression call member
	'}' => Reduce #3 expression call member
	"->" => Reduce #3 expression call member
	'=' => Reduce #3 expression call member
	'+' => Reduce #3 expression call member
	'-' => Reduce #3 expression call member
	'*' => Reduce #3 expression call member
	'/' => Reduce #3 expression call member
	'%' => Reduce #3 expression call member
	"&&" => Reduce #3 expression call member
	"||" => Reduce #3 expression call member
	'|' => Reduce #3 expression call member
	"<<" => Reduce #3 expression call member
	">>" => Reduce #3 expression call member
	'[' => Reduce #3 expression call member
	']' => Reduce #3 expression call member
	"==" => Reduce #3 expression call member
	"!=" => Reduce #3 expression call member
	">=" => Reduce #3 expression call member
	"<=" => Reduce #3 expression call member
	'>' => Reduce #3 expression call member
	'<' => Reduce #3 expression call member
	"+=" => Reduce #3 expression call member
	"-=" => Reduce #3 expression call member
	"*=" => Reduce #3 expression call member
	"/=" => Reduce #3 expression call member
	"^=" => Reduce #3 expression call member
	"&=" => Reduce #3 expression call member
	"%=" => Reduce #3 expression call member
	"&&=" => Reduce #3 expression call member
	"||=" => Reduce #3 expression call member
	"|=" => Reduce #3 expression call member
	"<<=" => Reduce #3 expression call member
	">>=" => Reduce #3 expression call member
	'.' => Reduce #3 expression call member
[271]
	'(' => Reduce #3 expression
	')' => Reduce #3 expression
	';' => Reduce #3 expression
	',' => Reduce #3 expression
	'&' => Reduce #3 expression
	'^' => Reduce #3 expression
	'}' => Reduce #3 expression
	"->" => Reduce #3 expression
	'=' => Reduce #3 expression
	'+' => Reduce #3 expression
	'-' => Reduce #3 expression
	'*' => Reduce #3 expression
	'/' => Reduce #3 expression
	'%' => Reduce #3 expression
	"&&" => Reduce #3 expression
	"||" => Reduce #3 expression
	'|' => Reduce #3 expression
	"<<" => Reduce #3 expression
	">>" => Reduce #3 expression
	'[' => Reduce #3 expression
	']' => Reduce #3 expression
	"==" => Reduce #3 expression
	"!=" => Reduce #3 expression
	">=" => Reduce #3 expression
	"<=" => Reduce #3 expression
	'>' => Reduce #3 expression
	'<' => Reduce #3 expression
	"+=" => Reduce #3 expression
	"-=" => Reduce #3 expression
	"*=" => Reduce #3 expression
	"/=" => Reduce #3 expression
	"^=" => Reduce #3 expression
	"&=" => Reduce #3 expression
	"%=" => Reduce #3 expression
	"&&=" => Reduce #3 expression
	"||=" => Reduce #3 expression
	"|=" => Reduce #3 expression
	"<<=" => Reduce #3 expression
	">>=" => Reduce #3 expression
	'.' => Reduce #3 expression
[272]
	$ => Reduce #3 statement
	BOOLEAN => Reduce #3 statement
	IDENT => Reduce #3 statement
	DQSTRING => Reduce #3 statement
	SQSTRING => Reduce #3 statement
	CARDINAL => Reduce #3 statement
	INTEGER => Reduce #3 statement
	FLOAT => Reduce #3 statement
	"function" => Reduce #3 statement
	'(' => Reduce #3 statement
	"procedure" => Reduce #3 statement
	'&' => Reduce #3 statement
	"typedef" => Reduce #3 statement
	'{' => Reduce #3 statement
	'}' => Reduce #3 statement
	"private" => Reduce #3 statement
	"public" => Reduce #3 statement
	'+' => Reduce #3 statement
	'-' => Reduce #3 statement
	'*' => Reduce #3 statement
	'~' => Reduce #3 statement
	'!' => Reduce #3 statement
	"var" => Reduce #3 statement
	"return" => Reduce #3 statement
	"delete" => Reduce #3 statement
	"if" => Reduce #3 statement
	"while" => Reduce #3 statement
	"new" => Reduce #3 statement
	"cast" => Reduce #3 statement
	"null" => Reduce #3 statement
[273]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[274]
	'(' => Reduce #3 expression call structure
	')' => Reduce #3 expression call structure
	';' => Reduce #3 expression call structure
	',' => Reduce #3 expression call structure
	'&' => Reduce #3 expression call structure
	'^' => Reduce #3 expression call structure
	'}' => Reduce #3 expression call structure
	"->" => Reduce #3 expression call structure
	'=' => Reduce #3 expression call structure
	'+' => Reduce #3 expression call structure
	'-' => Reduce #3 expression call structure
	'*' => Reduce #3 expression call structure
	'/' => Reduce #3 expression call structure
	'%' => Reduce #3 expression call structure
	"&&" => Reduce #3 expression call structure
	"||" => Reduce #3 expression call structure
	'|' => Reduce #3 expression call structure
	"<<" => Reduce #3 expression call structure
	">>" => Reduce #3 expression call structure
	'[' => Reduce #3 expression call structure
	']' => Reduce #3 expression call structure
	"==" => Reduce #3 expression call structure
	"!=" => Reduce #3 expression call structure
	">=" => Reduce #3 expression call structure
	"<=" => Reduce #3 expression call structure
	'>' => Reduce #3 expression call structure
	'<' => Reduce #3 expression call structure
	"+=" => Reduce #3 expression call structure
	"-=" => Reduce #3 expression call structure
	"*=" => Reduce #3 expression call structure
	"/=" => Reduce #3 expression call structure
	"^=" => Reduce #3 expression call structure
	"&=" => Reduce #3 expression call structure
	"%=" => Reduce #3 expression call structure
	"&&=" => Reduce #3 expression call structure
	"||=" => Reduce #3 expression call structure
	"|=" => Reduce #3 expression call structure
	"<<=" => Reduce #3 expression call structure
	">>=" => Reduce #3 expression call structure
	'.' => Reduce #3 expression call structure
[275]
	$ => Reduce #3 statement call definition
	BOOLEAN => Reduce #3 statement call definition
	IDENT => Reduce #3 statement call definition
	DQSTRING => Reduce #3 statement call definition
	SQSTRING => Reduce #3 statement call definition
	CARDINAL => Reduce #3 statement call definition
	INTEGER => Reduce #3 statement call definition
	FLOAT => Reduce #3 statement call definition
	"function" => Reduce #3 statement call definition
	'(' => Reduce #3 statement call definition
	"procedure" => Reduce #3 statement call definition
	'&' => Reduce #3 statement call definition
	"typedef" => Reduce #3 statement call definition
	'{' => Reduce #3 statement call definition
	'}' => Reduce #3 statement call definition
	"private" => Reduce #3 statement call definition
	"public" => Reduce #3 statement call definition
	'+' => Reduce #3 statement call definition
	'-' => Reduce #3 statement call definition
	'*' => Reduce #3 statement call definition
	'~' => Reduce #3 statement call definition
	'!' => Reduce #3 statement call definition
	"var" => Reduce #3 statement call definition
	"return" => Reduce #3 statement call definition
	"delete" => Reduce #3 statement call definition
	"if" => Reduce #3 statement call definition
	"while" => Reduce #3 statement call definition
	"new" => Reduce #3 statement call definition
	"cast" => Reduce #3 statement call definition
	"null" => Reduce #3 statement call definition
[276]
	$ => Reduce #3 statement call return_value
	BOOLEAN => Reduce #3 statement call return_value
	IDENT => Reduce #3 statement call return_value
	DQSTRING => Reduce #3 statement call return_value
	SQSTRING => Reduce #3 statement call return_value
	CARDINAL => Reduce #3 statement call return_value
	INTEGER => Reduce #3 statement call return_value
	FLOAT => Reduce #3 statement call return_value
	"function" => Reduce #3 statement call return_value
	'(' => Reduce #3 statement call return_value
	"procedure" => Reduce #3 statement call return_value
	'&' => Reduce #3 statement call return_value
	"typedef" => Reduce #3 statement call return_value
	'{' => Reduce #3 statement call return_value
	'}' => Reduce #3 statement call return_value
	"private" => Reduce #3 statement call return_value
	"public" => Reduce #3 statement call return_value
	'+' => Reduce #3 statement call return_value
	'-' => Reduce #3 statement call return_value
	'*' => Reduce #3 statement call return_value
	'~' => Reduce #3 statement call return_value
	'!' => Reduce #3 statement call return_value
	"var" => Reduce #3 statement call return_value
	"return" => Reduce #3 statement call return_value
	"delete" => Reduce #3 statement call return_value
	"if" => Reduce #3 statement call return_value
	"while" => Reduce #3 statement call return_value
	"new" => Reduce #3 statement call return_value
	"cast" => Reduce #3 statement call return_value
	"null" => Reduce #3 statement call return_value
[277]
	$ => Reduce #3 statement call delete
	BOOLEAN => Reduce #3 statement call delete
	IDENT => Reduce #3 statement call delete
	DQSTRING => Reduce #3 statement call delete
	SQSTRING => Reduce #3 statement call delete
	CARDINAL => Reduce #3 statement call delete
	INTEGER => Reduce #3 statement call delete
	FLOAT => Reduce #3 statement call delete
	"function" => Reduce #3 statement call delete
	'(' => Reduce #3 statement call delete
	"procedure" => Reduce #3 statement call delete
	'&' => Reduce #3 statement call delete
	"typedef" => Reduce #3 statement call delete
	'{' => Reduce #3 statement call delete
	'}' => Reduce #3 statement call delete
	"private" => Reduce #3 statement call delete
	"public" => Reduce #3 statement call delete
	'+' => Reduce #3 statement call delete
	'-' => Reduce #3 statement call delete
	'*' => Reduce #3 statement call delete
	'~' => Reduce #3 statement call delete
	'!' => Reduce #3 statement call delete
	"var" => Reduce #3 statement call delete
	"return" => Reduce #3 statement call delete
	"delete" => Reduce #3 statement call delete
	"if" => Reduce #3 statement call delete
	"while" => Reduce #3 statement call delete
	"new" => Reduce #3 statement call delete
	"cast" => Reduce #3 statement call delete
	"null" => Reduce #3 statement call delete
[278]
	'(' => Shift goto 129
	')' => Shift goto 304
	'&' => Shift goto 131
	'^' => Shift goto 132
	"->" => Shift goto 133
	'=' => Shift goto 134
	'+' => Shift goto 135
	'-' => Shift goto 136
	'*' => Shift goto 137
	'/' => Shift goto 138
	'%' => Shift goto 139
	"&&" => Shift goto 140
	"||" => Shift goto 141
	'|' => Shift goto 142
	"<<" => Shift goto 143
	">>" => Shift goto 144
	'[' => Shift goto 145
	"==" => Shift goto 146
	"!=" => Shift goto 147
	">=" => Shift goto 148
	"<=" => Shift goto 149
	'>' => Shift goto 150
	'<' => Shift goto 151
	"+=" => Shift goto 152
	"-=" => Shift goto 153
	"*=" => Shift goto 154
	"/=" => Shift goto 155
	"^=" => Shift goto 156
	"&=" => Shift goto 157
	"%=" => Shift goto 158
	"&&=" => Shift goto 159
	"||=" => Shift goto 160
	"|=" => Shift goto 161
	"<<=" => Shift goto 162
	">>=" => Shift goto 163
	'.' => Shift goto 164
[279]
	'(' => Shift goto 129
	')' => Shift goto 305
	'&' => Shift goto 131
	'^' => Shift goto 132
	"->" => Shift goto 133
	'=' => Shift goto 134
	'+' => Shift goto 135
	'-' => Shift goto 136
	'*' => Shift goto 137
	'/' => Shift goto 138
	'%' => Shift goto 139
	"&&" => Shift goto 140
	"||" => Shift goto 141
	'|' => Shift goto 142
	"<<" => Shift goto 143
	">>" => Shift goto 144
	'[' => Shift goto 145
	"==" => Shift goto 146
	"!=" => Shift goto 147
	">=" => Shift goto 148
	"<=" => Shift goto 149
	'>' => Shift goto 150
	'<' => Shift goto 151
	"+=" => Shift goto 152
	"-=" => Shift goto 153
	"*=" => Shift goto 154
	"/=" => Shift goto 155
	"^=" => Shift goto 156
	"&=" => Shift goto 157
	"%=" => Shift goto 158
	"&&=" => Shift goto 159
	"||=" => Shift goto 160
	"|=" => Shift goto 161
	"<<=" => Shift goto 162
	">>=" => Shift goto 163
	'.' => Shift goto 164
[280]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[281]
	'{' => Shift goto 307
[282]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[283]
	')' => Reduce #2 paramdecl call paramdef
	',' => Reduce #2 paramdecl call paramdef
[284]
	"const" => Shift goto 309
	'{' => Shift goto 310
[285]
	IDENT => Shift goto 17
	"const" => Shift goto 18
[286]
	'(' => Shift goto 312
[287]
	IDENT => Shift goto 17
	')' => Reduce #0 parameterlist call paramdeflist
	"const" => Shift goto 18
[288]
	'(' => Shift goto 314
[289]
	IDENT => Shift goto 17
	')' => Reduce #0 parameterlist call paramdeflist
	"const" => Shift goto 18
[290]
	IDENT => Reduce #2 operatordecl call operatordecl {name="()",symbol="__call"}
	'(' => Reduce #2 operatordecl call operatordecl {name="()",symbol="__call"}
	"const" => Reduce #2 operatordecl call operatordecl {name="()",symbol="__call"}
[291]
	IDENT => Reduce #2 operatordecl call operatordecl {name="[]",symbol="__get"}
	'(' => Reduce #2 operatordecl call operatordecl {name="[]",symbol="__get"}
	"const" => Reduce #2 operatordecl call operatordecl {name="[]",symbol="__get"}
[292]
	IDENT => Shift goto 17
	'(' => Shift goto 99
	"const" => Shift goto 18
[293]
	$ => Reduce #3 constructordefinition call constructordef
	IDENT => Reduce #3 constructordefinition call constructordef
	"function" => Reduce #3 constructordefinition call constructordef
	"procedure" => Reduce #3 constructordefinition call constructordef
	"const" => Reduce #3 constructordefinition call constructordef
	"operator" => Reduce #3 constructordefinition call constructordef
	"typedef" => Reduce #3 constructordefinition call constructordef
	"struct" => Reduce #3 constructordefinition call constructordef
	'}' => Reduce #3 constructordefinition call constructordef
	"interface" => Reduce #3 constructordefinition call constructordef
	"class" => Reduce #3 constructordefinition call constructordef
	"private" => Reduce #3 constructordefinition call constructordef
	"public" => Reduce #3 constructordefinition call constructordef
	"constructor" => Reduce #3 constructordefinition call constructordef
	"destructor" => Reduce #3 constructordefinition call constructordef
[294]
	'}' => Shift goto 318
[295]
	'{' => Reduce #3 inheritlist call inheritdef 1
[296]
	'}' => Shift goto 319
[297]
	')' => Shift goto 320
	"..." => Shift goto 321
[298]
	';' => Shift goto 322
[299]
	')' => Shift goto 323
[300]
	IDENT => Shift goto 17
	"const" => Shift goto 18
[301]
	'(' => Reduce #4 expression call operator "()"
	')' => Reduce #4 expression call operator "()"
	';' => Reduce #4 expression call operator "()"
	',' => Reduce #4 expression call operator "()"
	'&' => Reduce #4 expression call operator "()"
	'^' => Reduce #4 expression call operator "()"
	'}' => Reduce #4 expression call operator "()"
	"->" => Reduce #4 expression call operator "()"
	'=' => Reduce #4 expression call operator "()"
	'+' => Reduce #4 expression call operator "()"
	'-' => Reduce #4 expression call operator "()"
	'*' => Reduce #4 expression call operator "()"
	'/' => Reduce #4 expression call operator "()"
	'%' => Reduce #4 expression call operator "()"
	"&&" => Reduce #4 expression call operator "()"
	"||" => Reduce #4 expression call operator "()"
	'|' => Reduce #4 expression call operator "()"
	"<<" => Reduce #4 expression call operator "()"
	">>" => Reduce #4 expression call operator "()"
	'[' => Reduce #4 expression call operator "()"
	']' => Reduce #4 expression call operator "()"
	"==" => Reduce #4 expression call operator "()"
	"!=" => Reduce #4 expression call operator "()"
	">=" => Reduce #4 expression call operator "()"
	"<=" => Reduce #4 expression call operator "()"
	'>' => Reduce #4 expression call operator "()"
	'<' => Reduce #4 expression call operator "()"
	"+=" => Reduce #4 expression call operator "()"
	"-=" => Reduce #4 expression call operator "()"
	"*=" => Reduce #4 expression call operator "()"
	"/=" => Reduce #4 expression call operator "()"
	"^=" => Reduce #4 expression call operator "()"
	"&=" => Reduce #4 expression call operator "()"
	"%=" => Reduce #4 expression call operator "()"
	"&&=" => Reduce #4 expression call operator "()"
	"||=" => Reduce #4 expression call operator "()"
	"|=" => Reduce #4 expression call operator "()"
	"<<=" => Reduce #4 expression call operator "()"
	">>=" => Reduce #4 expression call operator "()"
	'.' => Reduce #4 expression call operator "()"
[302]
	'(' => Reduce #4 expression call operator "[]"
	')' => Reduce #4 expression call operator "[]"
	';' => Reduce #4 expression call operator "[]"
	',' => Reduce #4 expression call operator "[]"
	'&' => Reduce #4 expression call operator "[]"
	'^' => Reduce #4 expression call operator "[]"
	'}' => Reduce #4 expression call operator "[]"
	"->" => Reduce #4 expression call operator "[]"
	'=' => Reduce #4 expression call operator "[]"
	'+' => Reduce #4 expression call operator "[]"
	'-' => Reduce #4 expression call operator "[]"
	'*' => Reduce #4 expression call operator "[]"
	'/' => Reduce #4 expression call operator "[]"
	'%' => Reduce #4 expression call operator "[]"
	"&&" => Reduce #4 expression call operator "[]"
	"||" => Reduce #4 expression call operator "[]"
	'|' => Reduce #4 expression call operator "[]"
	"<<" => Reduce #4 expression call operator "[]"
	">>" => Reduce #4 expression call operator "[]"
	'[' => Reduce #4 expression call operator "[]"
	']' => Reduce #4 expression call operator "[]"
	"==" => Reduce #4 expression call operator "[]"
	"!=" => Reduce #4 expression call operator "[]"
	">=" => Reduce #4 expression call operator "[]"
	"<=" => Reduce #4 expression call operator "[]"
	'>' => Reduce #4 expression call operator "[]"
	'<' => Reduce #4 expression call operator "[]"
	"+=" => Reduce #4 expression call operator "[]"
	"-=" => Reduce #4 expression call operator "[]"
	"*=" => Reduce #4 expression call operator "[]"
	"/=" => Reduce #4 expression call operator "[]"
	"^=" => Reduce #4 expression call operator "[]"
	"&=" => Reduce #4 expression call operator "[]"
	"%=" => Reduce #4 expression call operator "[]"
	"&&=" => Reduce #4 expression call operator "[]"
	"||=" => Reduce #4 expression call operator "[]"
	"|=" => Reduce #4 expression call operator "[]"
	"<<=" => Reduce #4 expression call operator "[]"
	">>=" => Reduce #4 expression call operator "[]"
	'.' => Reduce #4 expression call operator "[]"
[303]
	')' => Reduce #3 expressionlist
	'}' => Reduce #3 expressionlist
	']' => Reduce #3 expressionlist
[304]
	'{' => Shift goto 325
[305]
	'{' => Shift goto 326
[306]
	'(' => Shift goto 129
	')' => Reduce #4 expression call allocate
	';' => Reduce #4 expression call allocate
	',' => Reduce #4 expression call allocate
	'&' => Shift goto 131
	'^' => Shift goto 132
	'}' => Reduce #4 expression call allocate
	"->" => Reduce #4 expression call allocate
	'=' => Shift goto 134
	'+' => Shift goto 135
	'-' => Shift goto 136
	'*' => Shift goto 137
	'/' => Shift goto 138
	'%' => Shift goto 139
	"&&" => Shift goto 140
	"||" => Shift goto 141
	'|' => Shift goto 142
	"<<" => Shift goto 143
	">>" => Shift goto 144
	'[' => Shift goto 145
	']' => Reduce #4 expression call allocate
	"==" => Shift goto 146
	"!=" => Shift goto 147
	">=" => Shift goto 148
	"<=" => Shift goto 149
	'>' => Shift goto 150
	'<' => Shift goto 151
	"+=" => Shift goto 152
	"-=" => Shift goto 153
	"*=" => Shift goto 154
	"/=" => Shift goto 155
	"^=" => Shift goto 156
	"&=" => Shift goto 157
	"%=" => Shift goto 158
	"&&=" => Shift goto 159
	"||=" => Shift goto 160
	"|=" => Shift goto 161
	"<<=" => Shift goto 162
	">>=" => Shift goto 163
	'.' => Shift goto 164
[307]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'}' => Shift goto 328
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[308]
	'(' => Shift goto 129
	';' => Reduce #7 variabledefinition call vardef_array_assign
	'&' => Shift goto 131
	'^' => Shift goto 132
	"->" => Shift goto 133
	'=' => Shift goto 134
	'+' => Shift goto 135
	'-' => Shift goto 136
	'*' => Shift goto 137
	'/' => Shift goto 138
	'%' => Shift goto 139
	"&&" => Shift goto 140
	"||" => Shift goto 141
	'|' => Shift goto 142
	"<<" => Shift goto 143
	">>" => Shift goto 144
	'[' => Shift goto 145
	"==" => Shift goto 146
	"!=" => Shift goto 147
	">=" => Shift goto 148
	"<=" => Shift goto 149
	'>' => Shift goto 150
	'<' => Shift goto 151
	"+=" => Shift goto 152
	"-=" => Shift goto 153
	"*=" => Shift goto 154
	"/=" => Shift goto 155
	"^=" => Shift goto 156
	"&=" => Shift goto 157
	"%=" => Shift goto 158
	"&&=" => Shift goto 159
	"||=" => Shift goto 160
	"|=" => Shift goto 161
	"<<=" => Shift goto 162
	">>=" => Shift goto 163
	'.' => Shift goto 164
[309]
	'{' => Shift goto 329
[310]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	"function" => Reduce #0 linkage call linkage {name="private",linkage="internal"}
	'(' => Shift goto 77
	"procedure" => Reduce #0 linkage call linkage {name="private",linkage="internal"}
	'&' => Shift goto 78
	"typedef" => Shift goto 19
	'{' => Shift goto 79
	'}' => Reduce #0 statementlist
	"private" => Shift goto 23
	"public" => Shift goto 24
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"var" => Shift goto 85
	"return" => Shift goto 86
	"delete" => Shift goto 87
	"if" => Shift goto 88
	"while" => Shift goto 89
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[311]
	')' => Reduce #3 parameters
[312]
	IDENT => Shift goto 17
	')' => Reduce #0 parameterlist call paramdeflist
	"const" => Shift goto 18
[313]
	')' => Shift goto 332
[314]
	IDENT => Shift goto 17
	')' => Reduce #0 parameterlist call paramdeflist
	"const" => Shift goto 18
[315]
	')' => Shift goto 334
[316]
	'(' => Shift goto 99
[317]
	$ => Reduce #4 operatordefinition call operator_funcdef
	IDENT => Reduce #4 operatordefinition call operator_funcdef
	"function" => Reduce #4 operatordefinition call operator_funcdef
	"procedure" => Reduce #4 operatordefinition call operator_funcdef
	"const" => Reduce #4 operatordefinition call operator_funcdef
	"operator" => Reduce #4 operatordefinition call operator_funcdef
	"typedef" => Reduce #4 operatordefinition call operator_funcdef
	"struct" => Reduce #4 operatordefinition call operator_funcdef
	'}' => Reduce #4 operatordefinition call operator_funcdef
	"interface" => Reduce #4 operatordefinition call operator_funcdef
	"class" => Reduce #4 operatordefinition call operator_funcdef
	"private" => Reduce #4 operatordefinition call operator_funcdef
	"public" => Reduce #4 operatordefinition call operator_funcdef
	"constructor" => Reduce #4 operatordefinition call operator_funcdef
	"destructor" => Reduce #4 operatordefinition call operator_funcdef
[318]
	$ => Reduce #4 constructordefinition call destructordef
	IDENT => Reduce #4 constructordefinition call destructordef
	"function" => Reduce #4 constructordefinition call destructordef
	"procedure" => Reduce #4 constructordefinition call destructordef
	"const" => Reduce #4 constructordefinition call destructordef
	"operator" => Reduce #4 constructordefinition call destructordef
	"typedef" => Reduce #4 constructordefinition call destructordef
	"struct" => Reduce #4 constructordefinition call destructordef
	'}' => Reduce #4 constructordefinition call destructordef
	"interface" => Reduce #4 constructordefinition call destructordef
	"class" => Reduce #4 constructordefinition call destructordef
	"private" => Reduce #4 constructordefinition call destructordef
	"public" => Reduce #4 constructordefinition call destructordef
	"constructor" => Reduce #4 constructordefinition call destructordef
	"destructor" => Reduce #4 constructordefinition call destructordef
[319]
	$ => Reduce #7 classdefinition call classdef
	IDENT => Reduce #7 classdefinition call classdef
	"function" => Reduce #7 classdefinition call classdef
	"procedure" => Reduce #7 classdefinition call classdef
	"const" => Reduce #7 classdefinition call classdef
	"operator" => Reduce #7 classdefinition call classdef
	"typedef" => Reduce #7 classdefinition call classdef
	"struct" => Reduce #7 classdefinition call classdef
	'}' => Reduce #7 classdefinition call classdef
	"interface" => Reduce #7 classdefinition call classdef
	"class" => Reduce #7 classdefinition call classdef
	"private" => Reduce #7 classdefinition call classdef
	"public" => Reduce #7 classdefinition call classdef
	"constructor" => Reduce #7 classdefinition call classdef
	"destructor" => Reduce #7 classdefinition call classdef
	"main" => Reduce #7 classdefinition call classdef
[320]
	';' => Shift goto 336
[321]
	')' => Shift goto 337
[322]
	$ => Reduce #8 extern_definition call extern_procdef
	IDENT => Reduce #8 extern_definition call extern_procdef
	"extern" => Reduce #8 extern_definition call extern_procdef
	"function" => Reduce #8 extern_definition call extern_procdef
	"procedure" => Reduce #8 extern_definition call extern_procdef
	"const" => Reduce #8 extern_definition call extern_procdef
	"typedef" => Reduce #8 extern_definition call extern_procdef
	"struct" => Reduce #8 extern_definition call extern_procdef
	"interface" => Reduce #8 extern_definition call extern_procdef
	"class" => Reduce #8 extern_definition call extern_procdef
	"private" => Reduce #8 extern_definition call extern_procdef
	"public" => Reduce #8 extern_definition call extern_procdef
	"main" => Reduce #8 extern_definition call extern_procdef
[323]
	';' => Shift goto 338
[324]
	')' => Reduce #3 extern_parameters
	"..." => Reduce #3 extern_parameters
[325]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	"function" => Reduce #0 linkage call linkage {name="private",linkage="internal"}
	'(' => Shift goto 77
	"procedure" => Reduce #0 linkage call linkage {name="private",linkage="internal"}
	'&' => Shift goto 78
	"typedef" => Shift goto 19
	'{' => Shift goto 79
	'}' => Reduce #0 statementlist
	"private" => Shift goto 23
	"public" => Shift goto 24
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"var" => Shift goto 85
	"return" => Shift goto 86
	"delete" => Shift goto 87
	"if" => Shift goto 88
	"while" => Shift goto 89
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[326]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	"function" => Reduce #0 linkage call linkage {name="private",linkage="internal"}
	'(' => Shift goto 77
	"procedure" => Reduce #0 linkage call linkage {name="private",linkage="internal"}
	'&' => Shift goto 78
	"typedef" => Shift goto 19
	'{' => Shift goto 79
	'}' => Reduce #0 statementlist
	"private" => Shift goto 23
	"public" => Shift goto 24
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"var" => Shift goto 85
	"return" => Shift goto 86
	"delete" => Shift goto 87
	"if" => Shift goto 88
	"while" => Shift goto 89
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[327]
	'(' => Shift goto 129
	'&' => Shift goto 131
	'^' => Shift goto 132
	'}' => Shift goto 341
	"->" => Shift goto 133
	'=' => Shift goto 134
	'+' => Shift goto 135
	'-' => Shift goto 136
	'*' => Shift goto 137
	'/' => Shift goto 138
	'%' => Shift goto 139
	"&&" => Shift goto 140
	"||" => Shift goto 141
	'|' => Shift goto 142
	"<<" => Shift goto 143
	">>" => Shift goto 144
	'[' => Shift goto 145
	"==" => Shift goto 146
	"!=" => Shift goto 147
	">=" => Shift goto 148
	"<=" => Shift goto 149
	'>' => Shift goto 150
	'<' => Shift goto 151
	"+=" => Shift goto 152
	"-=" => Shift goto 153
	"*=" => Shift goto 154
	"/=" => Shift goto 155
	"^=" => Shift goto 156
	"&=" => Shift goto 157
	"%=" => Shift goto 158
	"&&=" => Shift goto 159
	"||=" => Shift goto 160
	"|=" => Shift goto 161
	"<<=" => Shift goto 162
	">>=" => Shift goto 163
	'.' => Shift goto 164
[328]
	'(' => Reduce #5 expression call typecast
	')' => Reduce #5 expression call typecast
	';' => Reduce #5 expression call typecast
	',' => Reduce #5 expression call typecast
	'&' => Reduce #5 expression call typecast
	'^' => Reduce #5 expression call typecast
	'}' => Reduce #5 expression call typecast
	"->" => Reduce #5 expression call typecast
	'=' => Reduce #5 expression call typecast
	'+' => Reduce #5 expression call typecast
	'-' => Reduce #5 expression call typecast
	'*' => Reduce #5 expression call typecast
	'/' => Reduce #5 expression call typecast
	'%' => Reduce #5 expression call typecast
	"&&" => Reduce #5 expression call typecast
	"||" => Reduce #5 expression call typecast
	'|' => Reduce #5 expression call typecast
	"<<" => Reduce #5 expression call typecast
	">>" => Reduce #5 expression call typecast
	'[' => Reduce #5 expression call typecast
	']' => Reduce #5 expression call typecast
	"==" => Reduce #5 expression call typecast
	"!=" => Reduce #5 expression call typecast
	">=" => Reduce #5 expression call typecast
	"<=" => Reduce #5 expression call typecast
	'>' => Reduce #5 expression call typecast
	'<' => Reduce #5 expression call typecast
	"+=" => Reduce #5 expression call typecast
	"-=" => Reduce #5 expression call typecast
	"*=" => Reduce #5 expression call typecast
	"/=" => Reduce #5 expression call typecast
	"^=" => Reduce #5 expression call typecast
	"&=" => Reduce #5 expression call typecast
	"%=" => Reduce #5 expression call typecast
	"&&=" => Reduce #5 expression call typecast
	"||=" => Reduce #5 expression call typecast
	"|=" => Reduce #5 expression call typecast
	"<<=" => Reduce #5 expression call typecast
	">>=" => Reduce #5 expression call typecast
	'.' => Reduce #5 expression call typecast
[329]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	"function" => Reduce #0 linkage call linkage {name="private",linkage="internal"}
	'(' => Shift goto 77
	"procedure" => Reduce #0 linkage call linkage {name="private",linkage="internal"}
	'&' => Shift goto 78
	"typedef" => Shift goto 19
	'{' => Shift goto 79
	'}' => Reduce #0 statementlist
	"private" => Shift goto 23
	"public" => Shift goto 24
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"var" => Shift goto 85
	"return" => Shift goto 86
	"delete" => Shift goto 87
	"if" => Shift goto 88
	"while" => Shift goto 89
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[330]
	'}' => Shift goto 343
[331]
	')' => Shift goto 344
[332]
	';' => Shift goto 345
	"const" => Shift goto 346
[333]
	')' => Shift goto 347
[334]
	';' => Shift goto 348
	"const" => Shift goto 349
[335]
	$ => Reduce #5 operatordefinition call operator_procdef
	IDENT => Reduce #5 operatordefinition call operator_procdef
	"function" => Reduce #5 operatordefinition call operator_procdef
	"procedure" => Reduce #5 operatordefinition call operator_procdef
	"const" => Reduce #5 operatordefinition call operator_procdef
	"operator" => Reduce #5 operatordefinition call operator_procdef
	"typedef" => Reduce #5 operatordefinition call operator_procdef
	"struct" => Reduce #5 operatordefinition call operator_procdef
	'}' => Reduce #5 operatordefinition call operator_procdef
	"interface" => Reduce #5 operatordefinition call operator_procdef
	"class" => Reduce #5 operatordefinition call operator_procdef
	"private" => Reduce #5 operatordefinition call operator_procdef
	"public" => Reduce #5 operatordefinition call operator_procdef
	"constructor" => Reduce #5 operatordefinition call operator_procdef
	"destructor" => Reduce #5 operatordefinition call operator_procdef
[336]
	$ => Reduce #9 extern_definition call extern_funcdef
	IDENT => Reduce #9 extern_definition call extern_funcdef
	"extern" => Reduce #9 extern_definition call extern_funcdef
	"function" => Reduce #9 extern_definition call extern_funcdef
	"procedure" => Reduce #9 extern_definition call extern_funcdef
	"const" => Reduce #9 extern_definition call extern_funcdef
	"typedef" => Reduce #9 extern_definition call extern_funcdef
	"struct" => Reduce #9 extern_definition call extern_funcdef
	"interface" => Reduce #9 extern_definition call extern_funcdef
	"class" => Reduce #9 extern_definition call extern_funcdef
	"private" => Reduce #9 extern_definition call extern_funcdef
	"public" => Reduce #9 extern_definition call extern_funcdef
	"main" => Reduce #9 extern_definition call extern_funcdef
[337]
	';' => Shift goto 350
[338]
	$ => Reduce #9 extern_definition call extern_procdef_vararg
	IDENT => Reduce #9 extern_definition call extern_procdef_vararg
	"extern" => Reduce #9 extern_definition call extern_procdef_vararg
	"function" => Reduce #9 extern_definition call extern_procdef_vararg
	"procedure" => Reduce #9 extern_definition call extern_procdef_vararg
	"const" => Reduce #9 extern_definition call extern_procdef_vararg
	"typedef" => Reduce #9 extern_definition call extern_procdef_vararg
	"struct" => Reduce #9 extern_definition call extern_procdef_vararg
	"interface" => Reduce #9 extern_definition call extern_procdef_vararg
	"class" => Reduce #9 extern_definition call extern_procdef_vararg
	"private" => Reduce #9 extern_definition call extern_procdef_vararg
	"public" => Reduce #9 extern_definition call extern_procdef_vararg
	"main" => Reduce #9 extern_definition call extern_procdef_vararg
[339]
	'}' => Shift goto 351
[340]
	'}' => Shift goto 352
[341]
	'(' => Reduce #6 expression call typecast
	')' => Reduce #6 expression call typecast
	';' => Reduce #6 expression call typecast
	',' => Reduce #6 expression call typecast
	'&' => Reduce #6 expression call typecast
	'^' => Reduce #6 expression call typecast
	'}' => Reduce #6 expression call typecast
	"->" => Reduce #6 expression call typecast
	'=' => Reduce #6 expression call typecast
	'+' => Reduce #6 expression call typecast
	'-' => Reduce #6 expression call typecast
	'*' => Reduce #6 expression call typecast
	'/' => Reduce #6 expression call typecast
	'%' => Reduce #6 expression call typecast
	"&&" => Reduce #6 expression call typecast
	"||" => Reduce #6 expression call typecast
	'|' => Reduce #6 expression call typecast
	"<<" => Reduce #6 expression call typecast
	">>" => Reduce #6 expression call typecast
	'[' => Reduce #6 expression call typecast
	']' => Reduce #6 expression call typecast
	"==" => Reduce #6 expression call typecast
	"!=" => Reduce #6 expression call typecast
	">=" => Reduce #6 expression call typecast
	"<=" => Reduce #6 expression call typecast
	'>' => Reduce #6 expression call typecast
	'<' => Reduce #6 expression call typecast
	"+=" => Reduce #6 expression call typecast
	"-=" => Reduce #6 expression call typecast
	"*=" => Reduce #6 expression call typecast
	"/=" => Reduce #6 expression call typecast
	"^=" => Reduce #6 expression call typecast
	"&=" => Reduce #6 expression call typecast
	"%=" => Reduce #6 expression call typecast
	"&&=" => Reduce #6 expression call typecast
	"||=" => Reduce #6 expression call typecast
	"|=" => Reduce #6 expression call typecast
	"<<=" => Reduce #6 expression call typecast
	">>=" => Reduce #6 expression call typecast
	'.' => Reduce #6 expression call typecast
[342]
	'}' => Shift goto 353
[343]
	$ => Reduce #6 callablebody call callablebody "&"
	BOOLEAN => Reduce #6 callablebody call callablebody "&"
	IDENT => Reduce #6 callablebody call callablebody "&"
	DQSTRING => Reduce #6 callablebody call callablebody "&"
	SQSTRING => Reduce #6 callablebody call callablebody "&"
	CARDINAL => Reduce #6 callablebody call callablebody "&"
	INTEGER => Reduce #6 callablebody call callablebody "&"
	FLOAT => Reduce #6 callablebody call callablebody "&"
	"function" => Reduce #6 callablebody call callablebody "&"
	'(' => Reduce #6 callablebody call callablebody "&"
	"procedure" => Reduce #6 callablebody call callablebody "&"
	"const" => Reduce #6 callablebody call callablebody "&"
	"operator" => Reduce #6 callablebody call callablebody "&"
	'&' => Reduce #6 callablebody call callablebody "&"
	"typedef" => Reduce #6 callablebody call callablebody "&"
	"struct" => Reduce #6 callablebody call callablebody "&"
	'{' => Reduce #6 callablebody call callablebody "&"
	'}' => Reduce #6 callablebody call callablebody "&"
	"interface" => Reduce #6 callablebody call callablebody "&"
	"class" => Reduce #6 callablebody call callablebody "&"
	"private" => Reduce #6 callablebody call callablebody "&"
	"public" => Reduce #6 callablebody call callablebody "&"
	"constructor" => Reduce #6 callablebody call callablebody "&"
	"destructor" => Reduce #6 callablebody call callablebody "&"
	'+' => Reduce #6 callablebody call callablebody "&"
	'-' => Reduce #6 callablebody call callablebody "&"
	'*' => Reduce #6 callablebody call callablebody "&"
	'~' => Reduce #6 callablebody call callablebody "&"
	'!' => Reduce #6 callablebody call callablebody "&"
	"main" => Reduce #6 callablebody call callablebody "&"
	"var" => Reduce #6 callablebody call callablebody "&"
	"return" => Reduce #6 callablebody call callablebody "&"
	"delete" => Reduce #6 callablebody call callablebody "&"
	"if" => Reduce #6 callablebody call callablebody "&"
	"while" => Reduce #6 callablebody call callablebody "&"
	"new" => Reduce #6 callablebody call callablebody "&"
	"cast" => Reduce #6 callablebody call callablebody "&"
	"null" => Reduce #6 callablebody call callablebody "&"
[344]
	';' => Shift goto 354
	"const" => Shift goto 355
[345]
	$ => Reduce #6 interface_definition call interface_procdef "&"
	"function" => Reduce #6 interface_definition call interface_procdef "&"
	"procedure" => Reduce #6 interface_definition call interface_procdef "&"
	"operator" => Reduce #6 interface_definition call interface_procdef "&"
	'}' => Reduce #6 interface_definition call interface_procdef "&"
[346]
	';' => Shift goto 356
[347]
	';' => Shift goto 357
	"const" => Shift goto 358
[348]
	$ => Reduce #6 interface_definition call interface_operator_procdef "&"
	"function" => Reduce #6 interface_definition call interface_operator_procdef "&"
	"procedure" => Reduce #6 interface_definition call interface_operator_procdef "&"
	"operator" => Reduce #6 interface_definition call interface_operator_procdef "&"
	'}' => Reduce #6 interface_definition call interface_operator_procdef "&"
[349]
	';' => Shift goto 359
[350]
	$ => Reduce #10 extern_definition call extern_funcdef_vararg
	IDENT => Reduce #10 extern_definition call extern_funcdef_vararg
	"extern" => Reduce #10 extern_definition call extern_funcdef_vararg
	"function" => Reduce #10 extern_definition call extern_funcdef_vararg
	"procedure" => Reduce #10 extern_definition call extern_funcdef_vararg
	"const" => Reduce #10 extern_definition call extern_funcdef_vararg
	"typedef" => Reduce #10 extern_definition call extern_funcdef_vararg
	"struct" => Reduce #10 extern_definition call extern_funcdef_vararg
	"interface" => Reduce #10 extern_definition call extern_funcdef_vararg
	"class" => Reduce #10 extern_definition call extern_funcdef_vararg
	"private" => Reduce #10 extern_definition call extern_funcdef_vararg
	"public" => Reduce #10 extern_definition call extern_funcdef_vararg
	"main" => Reduce #10 extern_definition call extern_funcdef_vararg
[351]
	$ => Reduce #7 statement call conditional_if
	BOOLEAN => Reduce #7 statement call conditional_if
	IDENT => Reduce #7 statement call conditional_if
	DQSTRING => Reduce #7 statement call conditional_if
	SQSTRING => Reduce #7 statement call conditional_if
	CARDINAL => Reduce #7 statement call conditional_if
	INTEGER => Reduce #7 statement call conditional_if
	FLOAT => Reduce #7 statement call conditional_if
	"function" => Reduce #7 statement call conditional_if
	'(' => Reduce #7 statement call conditional_if
	"procedure" => Reduce #7 statement call conditional_if
	'&' => Reduce #7 statement call conditional_if
	"typedef" => Reduce #7 statement call conditional_if
	'{' => Reduce #7 statement call conditional_if
	'}' => Reduce #7 statement call conditional_if
	"private" => Reduce #7 statement call conditional_if
	"public" => Reduce #7 statement call conditional_if
	'+' => Reduce #7 statement call conditional_if
	'-' => Reduce #7 statement call conditional_if
	'*' => Reduce #7 statement call conditional_if
	'~' => Reduce #7 statement call conditional_if
	'!' => Reduce #7 statement call conditional_if
	"var" => Reduce #7 statement call conditional_if
	"return" => Reduce #7 statement call conditional_if
	"delete" => Reduce #7 statement call conditional_if
	"if" => Reduce #7 statement call conditional_if
	"else" => Shift goto 360
	"while" => Reduce #7 statement call conditional_if
	"new" => Reduce #7 statement call conditional_if
	"cast" => Reduce #7 statement call conditional_if
	"null" => Reduce #7 statement call conditional_if
[352]
	$ => Reduce #7 statement call conditional_while
	BOOLEAN => Reduce #7 statement call conditional_while
	IDENT => Reduce #7 statement call conditional_while
	DQSTRING => Reduce #7 statement call conditional_while
	SQSTRING => Reduce #7 statement call conditional_while
	CARDINAL => Reduce #7 statement call conditional_while
	INTEGER => Reduce #7 statement call conditional_while
	FLOAT => Reduce #7 statement call conditional_while
	"function" => Reduce #7 statement call conditional_while
	'(' => Reduce #7 statement call conditional_while
	"procedure" => Reduce #7 statement call conditional_while
	'&' => Reduce #7 statement call conditional_while
	"typedef" => Reduce #7 statement call conditional_while
	'{' => Reduce #7 statement call conditional_while
	'}' => Reduce #7 statement call conditional_while
	"private" => Reduce #7 statement call conditional_while
	"public" => Reduce #7 statement call conditional_while
	'+' => Reduce #7 statement call conditional_while
	'-' => Reduce #7 statement call conditional_while
	'*' => Reduce #7 statement call conditional_while
	'~' => Reduce #7 statement call conditional_while
	'!' => Reduce #7 statement call conditional_while
	"var" => Reduce #7 statement call conditional_while
	"return" => Reduce #7 statement call conditional_while
	"delete" => Reduce #7 statement call conditional_while
	"if" => Reduce #7 statement call conditional_while
	"while" => Reduce #7 statement call conditional_while
	"new" => Reduce #7 statement call conditional_while
	"cast" => Reduce #7 statement call conditional_while
	"null" => Reduce #7 statement call conditional_while
[353]
	$ => Reduce #7 callablebody call callablebody "const&"
	BOOLEAN => Reduce #7 callablebody call callablebody "const&"
	IDENT => Reduce #7 callablebody call callablebody "const&"
	DQSTRING => Reduce #7 callablebody call callablebody "const&"
	SQSTRING => Reduce #7 callablebody call callablebody "const&"
	CARDINAL => Reduce #7 callablebody call callablebody "const&"
	INTEGER => Reduce #7 callablebody call callablebody "const&"
	FLOAT => Reduce #7 callablebody call callablebody "const&"
	"function" => Reduce #7 callablebody call callablebody "const&"
	'(' => Reduce #7 callablebody call callablebody "const&"
	"procedure" => Reduce #7 callablebody call callablebody "const&"
	"const" => Reduce #7 callablebody call callablebody "const&"
	"operator" => Reduce #7 callablebody call callablebody "const&"
	'&' => Reduce #7 callablebody call callablebody "const&"
	"typedef" => Reduce #7 callablebody call callablebody "const&"
	"struct" => Reduce #7 callablebody call callablebody "const&"
	'{' => Reduce #7 callablebody call callablebody "const&"
	'}' => Reduce #7 callablebody call callablebody "const&"
	"interface" => Reduce #7 callablebody call callablebody "const&"
	"class" => Reduce #7 callablebody call callablebody "const&"
	"private" => Reduce #7 callablebody call callablebody "const&"
	"public" => Reduce #7 callablebody call callablebody "const&"
	"constructor" => Reduce #7 callablebody call callablebody "const&"
	"destructor" => Reduce #7 callablebody call callablebody "const&"
	'+' => Reduce #7 callablebody call callablebody "const&"
	'-' => Reduce #7 callablebody call callablebody "const&"
	'*' => Reduce #7 callablebody call callablebody "const&"
	'~' => Reduce #7 callablebody call callablebody "const&"
	'!' => Reduce #7 callablebody call callablebody "const&"
	"main" => Reduce #7 callablebody call callablebody "const&"
	"var" => Reduce #7 callablebody call callablebody "const&"
	"return" => Reduce #7 callablebody call callablebody "const&"
	"delete" => Reduce #7 callablebody call callablebody "const&"
	"if" => Reduce #7 callablebody call callablebody "const&"
	"while" => Reduce #7 callablebody call callablebody "const&"
	"new" => Reduce #7 callablebody call callablebody "const&"
	"cast" => Reduce #7 callablebody call callablebody "const&"
	"null" => Reduce #7 callablebody call callablebody "const&"
[354]
	$ => Reduce #7 interface_definition call interface_funcdef "&"
	"function" => Reduce #7 interface_definition call interface_funcdef "&"
	"procedure" => Reduce #7 interface_definition call interface_funcdef "&"
	"operator" => Reduce #7 interface_definition call interface_funcdef "&"
	'}' => Reduce #7 interface_definition call interface_funcdef "&"
[355]
	';' => Shift goto 361
[356]
	$ => Reduce #7 interface_definition call interface_procdef "const&"
	"function" => Reduce #7 interface_definition call interface_procdef "const&"
	"procedure" => Reduce #7 interface_definition call interface_procdef "const&"
	"operator" => Reduce #7 interface_definition call interface_procdef "const&"
	'}' => Reduce #7 interface_definition call interface_procdef "const&"
[357]
	$ => Reduce #7 interface_definition call interface_operator_funcdef "&"
	"function" => Reduce #7 interface_definition call interface_operator_funcdef "&"
	"procedure" => Reduce #7 interface_definition call interface_operator_funcdef "&"
	"operator" => Reduce #7 interface_definition call interface_operator_funcdef "&"
	'}' => Reduce #7 interface_definition call interface_operator_funcdef "&"
[358]
	';' => Shift goto 362
[359]
	$ => Reduce #7 interface_definition call interface_operator_procdef "const&"
	"function" => Reduce #7 interface_definition call interface_operator_procdef "const&"
	"procedure" => Reduce #7 interface_definition call interface_operator_procdef "const&"
	"operator" => Reduce #7 interface_definition call interface_operator_procdef "const&"
	'}' => Reduce #7 interface_definition call interface_operator_procdef "const&"
[360]
	'{' => Shift goto 363
[361]
	$ => Reduce #8 interface_definition call interface_funcdef "const&"
	"function" => Reduce #8 interface_definition call interface_funcdef "const&"
	"procedure" => Reduce #8 interface_definition call interface_funcdef "const&"
	"operator" => Reduce #8 interface_definition call interface_funcdef "const&"
	'}' => Reduce #8 interface_definition call interface_funcdef "const&"
[362]
	$ => Reduce #8 interface_definition call interface_operator_funcdef "const&"
	"function" => Reduce #8 interface_definition call interface_operator_funcdef "const&"
	"procedure" => Reduce #8 interface_definition call interface_operator_funcdef "const&"
	"operator" => Reduce #8 interface_definition call interface_operator_funcdef "const&"
	'}' => Reduce #8 interface_definition call interface_operator_funcdef "const&"
[363]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	"function" => Reduce #0 linkage call linkage {name="private",linkage="internal"}
	'(' => Shift goto 77
	"procedure" => Reduce #0 linkage call linkage {name="private",linkage="internal"}
	'&' => Shift goto 78
	"typedef" => Shift goto 19
	'{' => Shift goto 79
	'}' => Reduce #0 statementlist
	"private" => Shift goto 23
	"public" => Shift goto 24
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"var" => Shift goto 85
	"return" => Shift goto 86
	"delete" => Shift goto 87
	"if" => Shift goto 88
	"while" => Shift goto 89
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[364]
	'}' => Shift goto 365
[365]
	$ => Reduce #11 statement call conditional_if_else
	BOOLEAN => Reduce #11 statement call conditional_if_else
	IDENT => Reduce #11 statement call conditional_if_else
	DQSTRING => Reduce #11 statement call conditional_if_else
	SQSTRING => Reduce #11 statement call conditional_if_else
	CARDINAL => Reduce #11 statement call conditional_if_else
	INTEGER => Reduce #11 statement call conditional_if_else
	FLOAT => Reduce #11 statement call conditional_if_else
	"function" => Reduce #11 statement call conditional_if_else
	'(' => Reduce #11 statement call conditional_if_else
	"procedure" => Reduce #11 statement call conditional_if_else
	'&' => Reduce #11 statement call conditional_if_else
	"typedef" => Reduce #11 statement call conditional_if_else
	'{' => Reduce #11 statement call conditional_if_else
	'}' => Reduce #11 statement call conditional_if_else
	"private" => Reduce #11 statement call conditional_if_else
	"public" => Reduce #11 statement call conditional_if_else
	'+' => Reduce #11 statement call conditional_if_else
	'-' => Reduce #11 statement call conditional_if_else
	'*' => Reduce #11 statement call conditional_if_else
	'~' => Reduce #11 statement call conditional_if_else
	'!' => Reduce #11 statement call conditional_if_else
	"var" => Reduce #11 statement call conditional_if_else
	"return" => Reduce #11 statement call conditional_if_else
	"delete" => Reduce #11 statement call conditional_if_else
	"if" => Reduce #11 statement call conditional_if_else
	"while" => Reduce #11 statement call conditional_if_else
	"new" => Reduce #11 statement call conditional_if_else
	"cast" => Reduce #11 statement call conditional_if_else
	"null" => Reduce #11 statement call conditional_if_else

-- Goto table:
[1]
	extern_definitionlist => 2
	extern_definition => 3
[2]
	free_definitionlist => 5
	struct_definition => 6
	free_definition => 7
	typename => 8
	typespec => 9
	typedefinition => 10
	structdefinition => 11
	interfacedefinition => 12
	classdefinition => 13
	linkage => 14
	functiondefinition => 15
	variabledefinition => 16
[3]
	extern_definitionlist => 25
	extern_definition => 3
[5]
	main_procedure => 27
[7]
	free_definitionlist => 29
	struct_definition => 6
	free_definition => 7
	typename => 8
	typespec => 9
	typedefinition => 10
	structdefinition => 11
	interfacedefinition => 12
	classdefinition => 13
	linkage => 14
	functiondefinition => 15
	variabledefinition => 16
[18]
	typename => 38
[19]
	typename => 39
	typepath => 40
[37]
	typename => 53
[46]
	typedefinition => 63
	linkage => 14
	functiondefinition => 64
	codeblock => 65
	statementlist => 66
	statement => 67
	expression => 68
	iexpression => 69
[49]
	expression => 94
	iexpression => 69
[50]
	expression => 96
	iexpression => 69
[51]
	typename => 8
	typespec => 97
[52]
	callablebody => 98
[57]
	struct_definitionlist => 102
	struct_definition => 103
	typename => 8
	typespec => 9
	typedefinition => 10
	structdefinition => 11
	variabledefinition => 16
[58]
	interface_definitionlist => 104
	interface_definition => 105
[59]
	class_definitionlist => 109
	class_definition => 110
	typename => 8
	typespec => 9
	typedefinition => 111
	structdefinition => 112
	interfacedefinition => 113
	classdefinition => 114
	linkage => 115
	functiondefinition => 116
	constructordefinition => 117
	operatordefinition => 118
	variabledefinition => 119
[60]
	typename => 39
	typepath => 121
	inheritlist => 122
[61]
	typename => 8
	typespec => 123
[67]
	typedefinition => 63
	linkage => 14
	functiondefinition => 64
	statementlist => 127
	statement => 67
	expression => 68
	iexpression => 69
[68]
	indirection => 128
[77]
	expression => 165
	iexpression => 69
[78]
	expression => 166
	iexpression => 69
[79]
	typedefinition => 63
	linkage => 14
	functiondefinition => 64
	codeblock => 167
	statementlist => 66
	statement => 67
	expression => 168
	iexpression => 69
	expressionlist => 169
[80]
	expression => 171
	iexpression => 69
[81]
	expression => 172
	iexpression => 69
[82]
	expression => 173
	iexpression => 69
[83]
	expression => 174
	iexpression => 69
[84]
	expression => 175
	iexpression => 69
[85]
	typename => 8
	typespec => 9
	variabledefinition => 176
[86]
	expression => 177
	iexpression => 69
[87]
	expression => 178
	iexpression => 69
[90]
	typename => 8
	typespec => 181
[91]
	typename => 8
	typespec => 182
[94]
	indirection => 128
[95]
	expression => 183
	iexpression => 69
	expressionlist => 169
[96]
	indirection => 128
[97]
	callablebody => 185
[99]
	typename => 8
	typespec => 186
	parameterlist => 187
	parameters => 188
	paramdecl => 189
[103]
	struct_definitionlist => 192
	struct_definition => 103
	typename => 8
	typespec => 9
	typedefinition => 10
	structdefinition => 11
	variabledefinition => 16
[105]
	interface_definitionlist => 194
	interface_definition => 105
[108]
	operatordecl => 197
[110]
	class_definitionlist => 222
	class_definition => 110
	typename => 8
	typespec => 9
	typedefinition => 111
	structdefinition => 112
	interfacedefinition => 113
	classdefinition => 114
	linkage => 115
	functiondefinition => 116
	constructordefinition => 117
	operatordefinition => 118
	variabledefinition => 119
[124]
	extern_parameters => 231
	extern_paramlist => 232
	typename => 8
	typespec => 233
[129]
	expression => 183
	iexpression => 69
	expressionlist => 235
[131]
	expression => 237
	iexpression => 69
[132]
	expression => 238
	iexpression => 69
[133]
	indirection => 239
[134]
	expression => 240
	iexpression => 69
[135]
	expression => 241
	iexpression => 69
[136]
	expression => 242
	iexpression => 69
[137]
	expression => 243
	iexpression => 69
[138]
	expression => 244
	iexpression => 69
[139]
	expression => 245
	iexpression => 69
[140]
	expression => 246
	iexpression => 69
[141]
	expression => 247
	iexpression => 69
[142]
	expression => 248
	iexpression => 69
[143]
	expression => 249
	iexpression => 69
[144]
	expression => 250
	iexpression => 69
[145]
	expression => 183
	iexpression => 69
	expressionlist => 251
[146]
	expression => 252
	iexpression => 69
[147]
	expression => 253
	iexpression => 69
[148]
	expression => 254
	iexpression => 69
[149]
	expression => 255
	iexpression => 69
[150]
	expression => 256
	iexpression => 69
[151]
	expression => 257
	iexpression => 69
[152]
	expression => 258
	iexpression => 69
[153]
	expression => 259
	iexpression => 69
[154]
	expression => 260
	iexpression => 69
[155]
	expression => 261
	iexpression => 69
[156]
	expression => 262
	iexpression => 69
[157]
	expression => 263
	iexpression => 69
[158]
	expression => 264
	iexpression => 69
[159]
	expression => 265
	iexpression => 69
[160]
	expression => 266
	iexpression => 69
[161]
	expression => 267
	iexpression => 69
[162]
	expression => 268
	iexpression => 69
[163]
	expression => 269
	iexpression => 69
[165]
	indirection => 128
[166]
	indirection => 128
[168]
	indirection => 128
[171]
	indirection => 128
[172]
	indirection => 128
[173]
	indirection => 128
[174]
	indirection => 128
[175]
	indirection => 128
[177]
	indirection => 128
[178]
	indirection => 128
[179]
	expression => 278
	iexpression => 69
[180]
	expression => 279
	iexpression => 69
[183]
	indirection => 128
[195]
	typename => 8
	typespec => 286
[197]
	typename => 8
	typespec => 288
[224]
	operatordecl => 292
[225]
	callablebody => 293
[227]
	typedefinition => 63
	linkage => 14
	functiondefinition => 64
	codeblock => 294
	statementlist => 66
	statement => 67
	expression => 68
	iexpression => 69
[228]
	typename => 39
	typepath => 121
	inheritlist => 295
[229]
	class_definitionlist => 296
	class_definition => 110
	typename => 8
	typespec => 9
	typedefinition => 111
	structdefinition => 112
	interfacedefinition => 113
	classdefinition => 114
	linkage => 115
	functiondefinition => 116
	constructordefinition => 117
	operatordefinition => 118
	variabledefinition => 119
[230]
	extern_parameters => 231
	extern_paramlist => 297
	typename => 8
	typespec => 233
[237]
	indirection => 128
[238]
	indirection => 128
[240]
	indirection => 128
[241]
	indirection => 128
[242]
	indirection => 128
[243]
	indirection => 128
[244]
	indirection => 128
[245]
	indirection => 128
[246]
	indirection => 128
[247]
	indirection => 128
[248]
	indirection => 128
[249]
	indirection => 128
[250]
	indirection => 128
[252]
	indirection => 128
[253]
	indirection => 128
[254]
	indirection => 128
[255]
	indirection => 128
[256]
	indirection => 128
[257]
	indirection => 128
[258]
	indirection => 128
[259]
	indirection => 128
[260]
	indirection => 128
[261]
	indirection => 128
[262]
	indirection => 128
[263]
	indirection => 128
[264]
	indirection => 128
[265]
	indirection => 128
[266]
	indirection => 128
[267]
	indirection => 128
[268]
	indirection => 128
[269]
	indirection => 128
[273]
	expression => 183
	iexpression => 69
	expressionlist => 303
[278]
	indirection => 128
[279]
	indirection => 128
[280]
	expression => 306
	iexpression => 69
[282]
	expression => 308
	iexpression => 69
[285]
	typename => 8
	typespec => 186
	parameters => 311
	paramdecl => 189
[287]
	typename => 8
	typespec => 186
	parameterlist => 313
	parameters => 188
	paramdecl => 189
[289]
	typename => 8
	typespec => 186
	parameterlist => 315
	parameters => 188
	paramdecl => 189
[292]
	typename => 8
	typespec => 316
	callablebody => 317
[300]
	extern_parameters => 324
	typename => 8
	typespec => 233
[306]
	indirection => 128
[307]
	expression => 327
	iexpression => 69
[308]
	indirection => 128
[310]
	typedefinition => 63
	linkage => 14
	functiondefinition => 64
	codeblock => 330
	statementlist => 66
	statement => 67
	expression => 68
	iexpression => 69
[312]
	typename => 8
	typespec => 186
	parameterlist => 331
	parameters => 188
	paramdecl => 189
[314]
	typename => 8
	typespec => 186
	parameterlist => 333
	parameters => 188
	paramdecl => 189
[316]
	callablebody => 335
[325]
	typedefinition => 63
	linkage => 14
	functiondefinition => 64
	codeblock => 339
	statementlist => 66
	statement => 67
	expression => 68
	iexpression => 69
[326]
	typedefinition => 63
	linkage => 14
	functiondefinition => 64
	codeblock => 340
	statementlist => 66
	statement => 67
	expression => 68
	iexpression => 69
[327]
	indirection => 128
[329]
	typedefinition => 63
	linkage => 14
	functiondefinition => 64
	codeblock => 342
	statementlist => 66
	statement => 67
	expression => 68
	iexpression => 69
[363]
	typedefinition => 63
	linkage => 14
	functiondefinition => 64
	codeblock => 364
	statementlist => 66
	statement => 67
	expression => 68
	iexpression => 69

