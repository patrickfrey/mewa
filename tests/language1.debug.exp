== Language 'test', type system 'language1/typesystem' ==
-- Lexems:
TOKEN BOOLEAN ((true)|(false)) 0 [tf]  ~ 1
TOKEN IDENT [a-zA-Z_]+[a-zA-Z_0-9]* 0 [abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_]  ~ 2
TOKEN DQSTRING ["]((([^\\"\n]+)|([\\][^"\n]))*)["] 1 ["]  ~ 3
TOKEN SQSTRING [']((([^\\'\n]+)|([\\][^'\n]))*)['] 1 [']  ~ 4
TOKEN CARDINAL [0123456789]+ 0 [0123456789]  ~ 5
TOKEN INTEGER [-][0123456789]+ 0 [-]  ~ 6
TOKEN FLOAT [-]{0,1}[0123456789]+[.][0123456789]+ 0 [-]  ~ 7
TOKEN FLOAT [-]{0,1}[0123456789]+[.][0123456789]+[Ee][+-]{0,1}[0123456789]+ 0 [-]  ~ 7
KEYWORD extern [e] ~ 8
KEYWORD function [f] ~ 9
KEYWORD ( [(] ~ 10
KEYWORD ) [)] ~ 11
KEYWORD ; [;] ~ 12
KEYWORD procedure [p] ~ 13
KEYWORD ... [.] ~ 14
KEYWORD , [,] ~ 15
KEYWORD const [c] ~ 16
KEYWORD operator [o] ~ 17
KEYWORD :: [:] ~ 18
KEYWORD & [&] ~ 19
KEYWORD ^ [^] ~ 20
KEYWORD typedef [t] ~ 21
KEYWORD struct [s] ~ 22
KEYWORD { [{] ~ 23
KEYWORD } [}] ~ 24
KEYWORD interface [i] ~ 25
KEYWORD class [c] ~ 26
KEYWORD : [:] ~ 27
KEYWORD private [p] ~ 28
KEYWORD public [p] ~ 29
KEYWORD constructor [c] ~ 30
KEYWORD destructor [d] ~ 31
KEYWORD -> [-] ~ 32
KEYWORD = [=] ~ 33
KEYWORD + [+] ~ 34
KEYWORD - [-] ~ 35
KEYWORD * [*] ~ 36
KEYWORD / [/] ~ 37
KEYWORD % [%] ~ 38
KEYWORD && [&] ~ 39
KEYWORD || [|] ~ 40
KEYWORD | [|] ~ 41
KEYWORD << [<] ~ 42
KEYWORD >> [>] ~ 43
KEYWORD ~ [~] ~ 44
KEYWORD ! [!] ~ 45
KEYWORD [ [[] ~ 46
KEYWORD ] []] ~ 47
KEYWORD == [=] ~ 48
KEYWORD != [!] ~ 49
KEYWORD >= [>] ~ 50
KEYWORD <= [<] ~ 51
KEYWORD > [>] ~ 52
KEYWORD < [<] ~ 53
KEYWORD main [m] ~ 54
KEYWORD var [v] ~ 55
KEYWORD return [r] ~ 56
KEYWORD delete [d] ~ 57
KEYWORD if [i] ~ 58
KEYWORD else [e] ~ 59
KEYWORD while [w] ~ 60
KEYWORD new [n] ~ 61
KEYWORD cast [c] ~ 62
KEYWORD null [n] ~ 63
KEYWORD += [+] ~ 64
KEYWORD -= [-] ~ 65
KEYWORD *= [*] ~ 66
KEYWORD /= [/] ~ 67
KEYWORD ^= [^] ~ 68
KEYWORD &= [&] ~ 69
KEYWORD %= [%] ~ 70
KEYWORD &&= [&] ~ 71
KEYWORD ||= [|] ~ 72
KEYWORD |= [|] ~ 73
KEYWORD <<= [<] ~ 74
KEYWORD >>= [>] ~ 75
KEYWORD . [.] ~ 76
COMMENT /* */ [/]
COMMENT // [/]

-- Nonterminals:
(1) program
(2) extern_definitionlist
(3) free_definitionlist
(4) struct_definitionlist
(5) class_definitionlist
(6) interface_definitionlist
(7) extern_definition
(8) extern_parameters
(9) extern_paramlist
(10) interface_definition
(11) struct_definition
(12) class_definition
(13) free_definition
(14) typename
(15) typespec
(16) typepath
(17) typedefinition
(18) structdefinition
(19) interfacedefinition
(20) inheritlist
(21) classdefinition
(22) linkage
(23) functiondefinition
(24) constructordefinition
(25) operatordefinition
(26) operatordecl
(27) callablebody
(28) callablebody_const
(29) main_procedure
(30) parameterlist
(31) parameters
(32) paramdecl
(33) codeblock
(34) statementlist
(35) statement
(36) variabledefinition
(37) expression
(38) iexpression
(39) indirection
(40) expressionlist

-- Productions:
program = extern_definitionlist free_definitionlist main_procedure (1)
extern_definitionlist = extern_definition extern_definitionlist
extern_definitionlist = 
free_definitionlist = free_definition free_definitionlist
free_definitionlist = 
struct_definitionlist = struct_definition struct_definitionlist
struct_definitionlist = 
class_definitionlist = class_definition class_definitionlist
class_definitionlist = 
interface_definitionlist = interface_definition interface_definitionlist
interface_definitionlist = 
extern_definition = "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist ")" ";" (2)
extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist ")" ";" (3)
extern_definition = "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist "..." ")" ";" (4)
extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist "..." ")" ";" (5)
extern_parameters = typespec "," extern_parameters
extern_parameters = typespec IDENT "," extern_parameters
extern_parameters = typespec
extern_parameters = typespec IDENT
extern_paramlist = extern_parameters (6)
extern_paramlist =  (6)
interface_definition = "function" IDENT typespec "(" extern_paramlist ")" ";" (7)
interface_definition = "function" IDENT typespec "(" extern_paramlist ")" "const" ";" (8)
interface_definition = "procedure" IDENT "(" extern_paramlist ")" ";" (9)
interface_definition = "procedure" IDENT "(" extern_paramlist ")" "const" ";" (10)
interface_definition = "operator" operatordecl typespec "(" extern_paramlist ")" ";" (11)
interface_definition = "operator" operatordecl typespec "(" extern_paramlist ")" "const" ";" (12)
interface_definition = "operator" operatordecl "(" extern_paramlist ")" ";" (13)
interface_definition = "operator" operatordecl "(" extern_paramlist ")" "const" ";" (14)
struct_definition = typedefinition ";" (15)
struct_definition = variabledefinition ";" (15)
struct_definition = structdefinition (15)
class_definition = typedefinition ";" (15)
class_definition = variabledefinition ";" (15)
class_definition = structdefinition (15)
class_definition = classdefinition (15)
class_definition = interfacedefinition (15)
class_definition = constructordefinition (16)
class_definition = functiondefinition (16)
class_definition = operatordefinition (16)
free_definition = struct_definition
free_definition = functiondefinition (15)
free_definition = classdefinition (15)
free_definition = interfacedefinition (15)
typename/L1 = IDENT
typename/L1 = IDENT "::" typename
typespec/L1 = typename (17)
typespec/L1 = "const" typename (18)
typespec/L1 = typename "&" (19)
typespec/L1 = "const" typename "&" (20)
typespec/L1 = typename "^" (21)
typespec/L1 = "const" typename "^" (22)
typespec/L1 = typename "^" "&" (23)
typespec/L1 = "const" typename "^" "&" (24)
typespec/L1 = typename "^" "^" (25)
typespec/L1 = "const" typename "^" "^" (26)
typespec/L1 = typename "^" "^" "&" (27)
typespec/L1 = "const" typename "^" "^" "&" (28)
typepath/L1 = typename (17)
typedefinition = "typedef" typepath IDENT (step:29)
structdefinition = "struct" IDENT "{" struct_definitionlist "}" (step:30)
interfacedefinition = "interface" IDENT "{" interface_definitionlist "}" (step:31)
inheritlist = typepath "," inheritlist (step:32)
inheritlist = typepath (step:32)
classdefinition = "class" IDENT "{" class_definitionlist "}" (step:33)
classdefinition = "class" IDENT ":" inheritlist "{" class_definitionlist "}" (step:33)
linkage = "private" (34)
linkage = "public" (35)
linkage =  (35)
functiondefinition = linkage "function" IDENT typespec callablebody (36)
functiondefinition = linkage "function" IDENT typespec callablebody_const (37)
functiondefinition = linkage "procedure" IDENT callablebody (38)
functiondefinition = linkage "procedure" IDENT callablebody_const (39)
constructordefinition = linkage "constructor" callablebody (40)
constructordefinition = "destructor" "{" codeblock "}" (41)
operatordefinition = linkage "operator" operatordecl typespec callablebody (42)
operatordefinition = linkage "operator" operatordecl typespec callablebody_const (43)
operatordefinition = linkage "operator" operatordecl callablebody (44)
operatordefinition = linkage "operator" operatordecl callablebody_const (45)
operatordecl = "->" (46)
operatordecl = "=" (47)
operatordecl = "+" (48)
operatordecl = "-" (49)
operatordecl = "*" (50)
operatordecl = "/" (51)
operatordecl = "%" (52)
operatordecl = "&&" (53)
operatordecl = "||" (54)
operatordecl = "&" (55)
operatordecl = "|" (56)
operatordecl = "<<" (57)
operatordecl = ">>" (58)
operatordecl = "~" (59)
operatordecl = "!" (60)
operatordecl = "(" ")" (61)
operatordecl = "[" "]" (62)
operatordecl = "==" (63)
operatordecl = "!=" (64)
operatordecl = ">=" (65)
operatordecl = "<=" (66)
operatordecl = ">" (67)
operatordecl = "<" (68)
callablebody = "(" parameterlist ")" "{" codeblock "}" (scope:69)
callablebody_const = "(" parameterlist ")" "const" "{" codeblock "}" (scope:69)
main_procedure = "main" "{" codeblock "}" (scope:70)
main_procedure = 
parameterlist = parameters (71)
parameterlist =  (71)
parameters = paramdecl "," parameters
parameters = paramdecl
paramdecl = typespec IDENT (72)
codeblock = statementlist (73)
statementlist = statement statementlist (step)
statementlist = 
statement/L1 = functiondefinition (74)
statement/L1 = typedefinition ";" (74)
statement/L1 = "var" variabledefinition ";" (74)
statement/L1 = expression ";" (75)
statement/L1 = "return" expression ";" (step:76)
statement/L1 = "delete" expression ";" (77)
statement/L1 = "if" "(" expression ")" "{" codeblock "}" (scope:78)
statement/L1 = "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}" (scope:79)
statement/L1 = "while" "(" expression ")" "{" codeblock "}" (scope:80)
statement/L1 = "{" codeblock "}" (scope)
variabledefinition = typespec IDENT (step:81)
variabledefinition = typespec IDENT "=" expression (step:82)
variabledefinition = typespec IDENT "[" expression "]" "=" expression (step:83)
variabledefinition = typespec IDENT "[" expression "]" (step:84)
expression/L1 = "{" expressionlist "}" (85)
expression/L1 = "{" "}" (85)
expression/L1 = "new" typespec ":" expression (86)
expression/L1 = "cast" typespec ":" "{" expression "}" (87)
expression/L1 = "cast" typespec ":" "{" "}" (87)
expression/L2 = IDENT (88)
expression/L2 = BOOLEAN (89)
expression/L2 = CARDINAL (90)
expression/L2 = INTEGER (91)
expression/L2 = FLOAT (92)
expression/L2 = "null" (93)
expression/L2 = DQSTRING (94)
expression/L2 = SQSTRING (95)
expression/L2 = "(" expression ")"
expression/L3 = expression "=" expression (96)
expression/L3 = expression "+=" expression (97)
expression/L3 = expression "-=" expression (98)
expression/L3 = expression "*=" expression (99)
expression/L3 = expression "/=" expression (100)
expression/L3 = expression "^=" expression (101)
expression/L3 = expression "&=" expression (102)
expression/L3 = expression "%=" expression (103)
expression/L3 = expression "&&=" expression (104)
expression/L3 = expression "||=" expression (105)
expression/L3 = expression "&=" expression (102)
expression/L3 = expression "|=" expression (106)
expression/L3 = expression "<<=" expression (107)
expression/L3 = expression ">>=" expression (108)
expression/L4 = expression "||" expression (109)
expression/L5 = expression "&&" expression (110)
expression/L6 = expression "|" expression (111)
expression/L7 = expression "^" expression (112)
expression/L7 = expression "&" expression (113)
expression/L8 = expression "==" expression (114)
expression/L8 = expression "!=" expression (115)
expression/L8 = expression "<=" expression (116)
expression/L8 = expression "<" expression (117)
expression/L8 = expression ">=" expression (118)
expression/L8 = expression ">" expression (119)
expression/L9 = expression "+" expression (120)
expression/L9 = expression "-" expression (121)
expression/L9 = "&" expression (113)
expression/L9 = "-" expression (121)
expression/L9 = "+" expression (120)
expression/L9 = "~" expression (122)
expression/L9 = "!" expression (123)
expression/L10 = expression "*" expression (124)
expression/L10 = expression "/" expression (125)
expression/L10 = expression "%" expression (126)
expression/L11 = expression "<<" expression (127)
expression/L11 = expression ">>" expression (128)
expression/L12 = iexpression
expression/L12 = expression "." IDENT (129)
expression/L12 = "*" expression (130)
expression/L13 = expression "(" expressionlist ")" (131)
expression/L13 = expression "(" ")" (131)
expression/L13 = expression "[" expressionlist "]" (132)
iexpression = expression indirection IDENT (133)
indirection = "->" indirection (134)
indirection = "->" (134)
expressionlist = expression "," expressionlist
expressionlist = expression

-- LR(0) states:
[1]
	program = . extern_definitionlist free_definitionlist main_procedure
	extern_definitionlist = . extern_definition extern_definitionlist
	extern_definitionlist = .
	extern_definition = . "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist ")" ";"
	extern_definition = . "extern" DQSTRING "procedure" IDENT "(" extern_paramlist ")" ";"
	extern_definition = . "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist "..." ")" ";"
	extern_definition = . "extern" DQSTRING "procedure" IDENT "(" extern_paramlist "..." ")" ";"
[2]
	program = extern_definitionlist . free_definitionlist main_procedure
	free_definitionlist = . free_definition free_definitionlist
	free_definitionlist = .
	struct_definition = . typedefinition ";"
	struct_definition = . variabledefinition ";"
	struct_definition = . structdefinition
	free_definition = . struct_definition
	free_definition = . functiondefinition
	free_definition = . classdefinition
	free_definition = . interfacedefinition
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	typedefinition = . "typedef" typepath IDENT
	structdefinition = . "struct" IDENT "{" struct_definitionlist "}"
	interfacedefinition = . "interface" IDENT "{" interface_definitionlist "}"
	classdefinition = . "class" IDENT "{" class_definitionlist "}"
	classdefinition = . "class" IDENT ":" inheritlist "{" class_definitionlist "}"
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" IDENT typespec callablebody
	functiondefinition = . linkage "function" IDENT typespec callablebody_const
	functiondefinition = . linkage "procedure" IDENT callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody_const
	variabledefinition = . typespec IDENT
	variabledefinition = . typespec IDENT "=" expression
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression
	variabledefinition = . typespec IDENT "[" expression "]"
[3]
	extern_definitionlist = . extern_definition extern_definitionlist
	extern_definitionlist = extern_definition . extern_definitionlist
	extern_definitionlist = .
	extern_definition = . "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist ")" ";"
	extern_definition = . "extern" DQSTRING "procedure" IDENT "(" extern_paramlist ")" ";"
	extern_definition = . "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist "..." ")" ";"
	extern_definition = . "extern" DQSTRING "procedure" IDENT "(" extern_paramlist "..." ")" ";"
[4]
	extern_definition = "extern" . DQSTRING "function" IDENT typespec "(" extern_paramlist ")" ";"
	extern_definition = "extern" . DQSTRING "procedure" IDENT "(" extern_paramlist ")" ";"
	extern_definition = "extern" . DQSTRING "function" IDENT typespec "(" extern_paramlist "..." ")" ";"
	extern_definition = "extern" . DQSTRING "procedure" IDENT "(" extern_paramlist "..." ")" ";"
[5]
	program = extern_definitionlist free_definitionlist . main_procedure
	main_procedure = . "main" "{" codeblock "}"
	main_procedure = .
[6]
	free_definition = struct_definition .
[7]
	free_definitionlist = . free_definition free_definitionlist
	free_definitionlist = free_definition . free_definitionlist
	free_definitionlist = .
	struct_definition = . typedefinition ";"
	struct_definition = . variabledefinition ";"
	struct_definition = . structdefinition
	free_definition = . struct_definition
	free_definition = . functiondefinition
	free_definition = . classdefinition
	free_definition = . interfacedefinition
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	typedefinition = . "typedef" typepath IDENT
	structdefinition = . "struct" IDENT "{" struct_definitionlist "}"
	interfacedefinition = . "interface" IDENT "{" interface_definitionlist "}"
	classdefinition = . "class" IDENT "{" class_definitionlist "}"
	classdefinition = . "class" IDENT ":" inheritlist "{" class_definitionlist "}"
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" IDENT typespec callablebody
	functiondefinition = . linkage "function" IDENT typespec callablebody_const
	functiondefinition = . linkage "procedure" IDENT callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody_const
	variabledefinition = . typespec IDENT
	variabledefinition = . typespec IDENT "=" expression
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression
	variabledefinition = . typespec IDENT "[" expression "]"
[8]
	typespec/L1 = typename .
	typespec/L1 = typename . "&"
	typespec/L1 = typename . "^"
	typespec/L1 = typename . "^" "&"
	typespec/L1 = typename . "^" "^"
	typespec/L1 = typename . "^" "^" "&"
[9]
	variabledefinition = typespec . IDENT
	variabledefinition = typespec . IDENT "=" expression
	variabledefinition = typespec . IDENT "[" expression "]" "=" expression
	variabledefinition = typespec . IDENT "[" expression "]"
[10]
	struct_definition = typedefinition . ";"
[11]
	struct_definition = structdefinition .
[12]
	free_definition = interfacedefinition .
[13]
	free_definition = classdefinition .
[14]
	functiondefinition = linkage . "function" IDENT typespec callablebody
	functiondefinition = linkage . "function" IDENT typespec callablebody_const
	functiondefinition = linkage . "procedure" IDENT callablebody
	functiondefinition = linkage . "procedure" IDENT callablebody_const
[15]
	free_definition = functiondefinition .
[16]
	struct_definition = variabledefinition . ";"
[17]
	typename/L1 = IDENT .
	typename/L1 = IDENT . "::" typename
[18]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = "const" . typename
	typespec/L1 = "const" . typename "&"
	typespec/L1 = "const" . typename "^"
	typespec/L1 = "const" . typename "^" "&"
	typespec/L1 = "const" . typename "^" "^"
	typespec/L1 = "const" . typename "^" "^" "&"
[19]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typepath/L1 = . typename
	typedefinition = "typedef" . typepath IDENT
[20]
	structdefinition = "struct" . IDENT "{" struct_definitionlist "}"
[21]
	interfacedefinition = "interface" . IDENT "{" interface_definitionlist "}"
[22]
	classdefinition = "class" . IDENT "{" class_definitionlist "}"
	classdefinition = "class" . IDENT ":" inheritlist "{" class_definitionlist "}"
[23]
	linkage = "private" .
[24]
	linkage = "public" .
[25]
	extern_definitionlist = extern_definition extern_definitionlist .
[26]
	extern_definition = "extern" DQSTRING . "function" IDENT typespec "(" extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING . "procedure" IDENT "(" extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING . "function" IDENT typespec "(" extern_paramlist "..." ")" ";"
	extern_definition = "extern" DQSTRING . "procedure" IDENT "(" extern_paramlist "..." ")" ";"
[27]
	program = extern_definitionlist free_definitionlist main_procedure .
[28]
	main_procedure = "main" . "{" codeblock "}"
[29]
	free_definitionlist = free_definition free_definitionlist .
[30]
	typespec/L1 = typename "&" .
[31]
	typespec/L1 = typename "^" .
	typespec/L1 = typename "^" . "&"
	typespec/L1 = typename "^" . "^"
	typespec/L1 = typename "^" . "^" "&"
[32]
	variabledefinition = typespec IDENT .
	variabledefinition = typespec IDENT . "=" expression
	variabledefinition = typespec IDENT . "[" expression "]" "=" expression
	variabledefinition = typespec IDENT . "[" expression "]"
[33]
	struct_definition = typedefinition ";" .
[34]
	functiondefinition = linkage "function" . IDENT typespec callablebody
	functiondefinition = linkage "function" . IDENT typespec callablebody_const
[35]
	functiondefinition = linkage "procedure" . IDENT callablebody
	functiondefinition = linkage "procedure" . IDENT callablebody_const
[36]
	struct_definition = variabledefinition ";" .
[37]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typename/L1 = IDENT "::" . typename
[38]
	typespec/L1 = "const" typename .
	typespec/L1 = "const" typename . "&"
	typespec/L1 = "const" typename . "^"
	typespec/L1 = "const" typename . "^" "&"
	typespec/L1 = "const" typename . "^" "^"
	typespec/L1 = "const" typename . "^" "^" "&"
[39]
	typepath/L1 = typename .
[40]
	typedefinition = "typedef" typepath . IDENT
[41]
	structdefinition = "struct" IDENT . "{" struct_definitionlist "}"
[42]
	interfacedefinition = "interface" IDENT . "{" interface_definitionlist "}"
[43]
	classdefinition = "class" IDENT . "{" class_definitionlist "}"
	classdefinition = "class" IDENT . ":" inheritlist "{" class_definitionlist "}"
[44]
	extern_definition = "extern" DQSTRING "function" . IDENT typespec "(" extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING "function" . IDENT typespec "(" extern_paramlist "..." ")" ";"
[45]
	extern_definition = "extern" DQSTRING "procedure" . IDENT "(" extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING "procedure" . IDENT "(" extern_paramlist "..." ")" ";"
[46]
	typedefinition = . "typedef" typepath IDENT
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" IDENT typespec callablebody
	functiondefinition = . linkage "function" IDENT typespec callablebody_const
	functiondefinition = . linkage "procedure" IDENT callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody_const
	main_procedure = "main" "{" . codeblock "}"
	codeblock = . statementlist
	statementlist = . statement statementlist
	statementlist = .
	statement/L1 = . functiondefinition
	statement/L1 = . typedefinition ";"
	statement/L1 = . "var" variabledefinition ";"
	statement/L1 = . expression ";"
	statement/L1 = . "return" expression ";"
	statement/L1 = . "delete" expression ";"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}"
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "{" codeblock "}"
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[47]
	typespec/L1 = typename "^" "&" .
[48]
	typespec/L1 = typename "^" "^" .
	typespec/L1 = typename "^" "^" . "&"
[49]
	variabledefinition = typespec IDENT "=" . expression
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[50]
	variabledefinition = typespec IDENT "[" . expression "]" "=" expression
	variabledefinition = typespec IDENT "[" . expression "]"
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[51]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	functiondefinition = linkage "function" IDENT . typespec callablebody
	functiondefinition = linkage "function" IDENT . typespec callablebody_const
[52]
	functiondefinition = linkage "procedure" IDENT . callablebody
	functiondefinition = linkage "procedure" IDENT . callablebody_const
	callablebody = . "(" parameterlist ")" "{" codeblock "}"
	callablebody_const = . "(" parameterlist ")" "const" "{" codeblock "}"
[53]
	typename/L1 = IDENT "::" typename .
[54]
	typespec/L1 = "const" typename "&" .
[55]
	typespec/L1 = "const" typename "^" .
	typespec/L1 = "const" typename "^" . "&"
	typespec/L1 = "const" typename "^" . "^"
	typespec/L1 = "const" typename "^" . "^" "&"
[56]
	typedefinition = "typedef" typepath IDENT .
[57]
	struct_definitionlist = . struct_definition struct_definitionlist
	struct_definitionlist = .
	struct_definition = . typedefinition ";"
	struct_definition = . variabledefinition ";"
	struct_definition = . structdefinition
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	typedefinition = . "typedef" typepath IDENT
	structdefinition = . "struct" IDENT "{" struct_definitionlist "}"
	structdefinition = "struct" IDENT "{" . struct_definitionlist "}"
	variabledefinition = . typespec IDENT
	variabledefinition = . typespec IDENT "=" expression
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression
	variabledefinition = . typespec IDENT "[" expression "]"
[58]
	interface_definitionlist = . interface_definition interface_definitionlist
	interface_definitionlist = .
	interface_definition = . "function" IDENT typespec "(" extern_paramlist ")" ";"
	interface_definition = . "function" IDENT typespec "(" extern_paramlist ")" "const" ";"
	interface_definition = . "procedure" IDENT "(" extern_paramlist ")" ";"
	interface_definition = . "procedure" IDENT "(" extern_paramlist ")" "const" ";"
	interface_definition = . "operator" operatordecl typespec "(" extern_paramlist ")" ";"
	interface_definition = . "operator" operatordecl typespec "(" extern_paramlist ")" "const" ";"
	interface_definition = . "operator" operatordecl "(" extern_paramlist ")" ";"
	interface_definition = . "operator" operatordecl "(" extern_paramlist ")" "const" ";"
	interfacedefinition = "interface" IDENT "{" . interface_definitionlist "}"
[59]
	class_definitionlist = . class_definition class_definitionlist
	class_definitionlist = .
	class_definition = . typedefinition ";"
	class_definition = . variabledefinition ";"
	class_definition = . structdefinition
	class_definition = . classdefinition
	class_definition = . interfacedefinition
	class_definition = . constructordefinition
	class_definition = . functiondefinition
	class_definition = . operatordefinition
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	typedefinition = . "typedef" typepath IDENT
	structdefinition = . "struct" IDENT "{" struct_definitionlist "}"
	interfacedefinition = . "interface" IDENT "{" interface_definitionlist "}"
	classdefinition = . "class" IDENT "{" class_definitionlist "}"
	classdefinition = "class" IDENT "{" . class_definitionlist "}"
	classdefinition = . "class" IDENT ":" inheritlist "{" class_definitionlist "}"
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" IDENT typespec callablebody
	functiondefinition = . linkage "function" IDENT typespec callablebody_const
	functiondefinition = . linkage "procedure" IDENT callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody_const
	constructordefinition = . linkage "constructor" callablebody
	constructordefinition = . "destructor" "{" codeblock "}"
	operatordefinition = . linkage "operator" operatordecl typespec callablebody
	operatordefinition = . linkage "operator" operatordecl typespec callablebody_const
	operatordefinition = . linkage "operator" operatordecl callablebody
	operatordefinition = . linkage "operator" operatordecl callablebody_const
	variabledefinition = . typespec IDENT
	variabledefinition = . typespec IDENT "=" expression
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression
	variabledefinition = . typespec IDENT "[" expression "]"
[60]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typepath/L1 = . typename
	inheritlist = . typepath "," inheritlist
	inheritlist = . typepath
	classdefinition = "class" IDENT ":" . inheritlist "{" class_definitionlist "}"
[61]
	extern_definition = "extern" DQSTRING "function" IDENT . typespec "(" extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING "function" IDENT . typespec "(" extern_paramlist "..." ")" ";"
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
[62]
	extern_definition = "extern" DQSTRING "procedure" IDENT . "(" extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING "procedure" IDENT . "(" extern_paramlist "..." ")" ";"
[63]
	statement/L1 = typedefinition . ";"
[64]
	statement/L1 = functiondefinition .
[65]
	main_procedure = "main" "{" codeblock . "}"
[66]
	codeblock = statementlist .
[67]
	typedefinition = . "typedef" typepath IDENT
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" IDENT typespec callablebody
	functiondefinition = . linkage "function" IDENT typespec callablebody_const
	functiondefinition = . linkage "procedure" IDENT callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody_const
	statementlist = . statement statementlist
	statementlist = statement . statementlist
	statementlist = .
	statement/L1 = . functiondefinition
	statement/L1 = . typedefinition ";"
	statement/L1 = . "var" variabledefinition ";"
	statement/L1 = . expression ";"
	statement/L1 = . "return" expression ";"
	statement/L1 = . "delete" expression ";"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}"
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "{" codeblock "}"
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[68]
	statement/L1 = expression . ";"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[69]
	expression/L12 = iexpression .
[70]
	expression/L2 = BOOLEAN .
[71]
	expression/L2 = IDENT .
[72]
	expression/L2 = DQSTRING .
[73]
	expression/L2 = SQSTRING .
[74]
	expression/L2 = CARDINAL .
[75]
	expression/L2 = INTEGER .
[76]
	expression/L2 = FLOAT .
[77]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L2 = "(" . expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[78]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = "&" . expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[79]
	typedefinition = . "typedef" typepath IDENT
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" IDENT typespec callablebody
	functiondefinition = . linkage "function" IDENT typespec callablebody_const
	functiondefinition = . linkage "procedure" IDENT callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody_const
	codeblock = . statementlist
	statementlist = . statement statementlist
	statementlist = .
	statement/L1 = . functiondefinition
	statement/L1 = . typedefinition ";"
	statement/L1 = . "var" variabledefinition ";"
	statement/L1 = . expression ";"
	statement/L1 = . "return" expression ";"
	statement/L1 = . "delete" expression ";"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}"
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "{" codeblock "}"
	statement/L1 = "{" . codeblock "}"
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = "{" . expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = "{" . "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
	expressionlist = . expression "," expressionlist
	expressionlist = . expression
[80]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = "+" . expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[81]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = "-" . expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[82]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L12 = "*" . expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[83]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = "~" . expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[84]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L9 = "!" . expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[85]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	statement/L1 = "var" . variabledefinition ";"
	variabledefinition = . typespec IDENT
	variabledefinition = . typespec IDENT "=" expression
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression
	variabledefinition = . typespec IDENT "[" expression "]"
[86]
	statement/L1 = "return" . expression ";"
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[87]
	statement/L1 = "delete" . expression ";"
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[88]
	statement/L1 = "if" . "(" expression ")" "{" codeblock "}"
	statement/L1 = "if" . "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}"
[89]
	statement/L1 = "while" . "(" expression ")" "{" codeblock "}"
[90]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	expression/L1 = "new" . typespec ":" expression
[91]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	expression/L1 = "cast" . typespec ":" "{" expression "}"
	expression/L1 = "cast" . typespec ":" "{" "}"
[92]
	expression/L2 = "null" .
[93]
	typespec/L1 = typename "^" "^" "&" .
[94]
	variabledefinition = typespec IDENT "=" expression .
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[95]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = "{" . expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = "{" . "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
	expressionlist = . expression "," expressionlist
	expressionlist = . expression
[96]
	variabledefinition = typespec IDENT "[" expression . "]" "=" expression
	variabledefinition = typespec IDENT "[" expression . "]"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[97]
	functiondefinition = linkage "function" IDENT typespec . callablebody
	functiondefinition = linkage "function" IDENT typespec . callablebody_const
	callablebody = . "(" parameterlist ")" "{" codeblock "}"
	callablebody_const = . "(" parameterlist ")" "const" "{" codeblock "}"
[98]
	functiondefinition = linkage "procedure" IDENT callablebody .
[99]
	functiondefinition = linkage "procedure" IDENT callablebody_const .
[100]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	callablebody = "(" . parameterlist ")" "{" codeblock "}"
	callablebody_const = "(" . parameterlist ")" "const" "{" codeblock "}"
	parameterlist = . parameters
	parameterlist = .
	parameters = . paramdecl "," parameters
	parameters = . paramdecl
	paramdecl = . typespec IDENT
[101]
	typespec/L1 = "const" typename "^" "&" .
[102]
	typespec/L1 = "const" typename "^" "^" .
	typespec/L1 = "const" typename "^" "^" . "&"
[103]
	structdefinition = "struct" IDENT "{" struct_definitionlist . "}"
[104]
	struct_definitionlist = . struct_definition struct_definitionlist
	struct_definitionlist = struct_definition . struct_definitionlist
	struct_definitionlist = .
	struct_definition = . typedefinition ";"
	struct_definition = . variabledefinition ";"
	struct_definition = . structdefinition
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	typedefinition = . "typedef" typepath IDENT
	structdefinition = . "struct" IDENT "{" struct_definitionlist "}"
	variabledefinition = . typespec IDENT
	variabledefinition = . typespec IDENT "=" expression
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression
	variabledefinition = . typespec IDENT "[" expression "]"
[105]
	interfacedefinition = "interface" IDENT "{" interface_definitionlist . "}"
[106]
	interface_definitionlist = . interface_definition interface_definitionlist
	interface_definitionlist = interface_definition . interface_definitionlist
	interface_definitionlist = .
	interface_definition = . "function" IDENT typespec "(" extern_paramlist ")" ";"
	interface_definition = . "function" IDENT typespec "(" extern_paramlist ")" "const" ";"
	interface_definition = . "procedure" IDENT "(" extern_paramlist ")" ";"
	interface_definition = . "procedure" IDENT "(" extern_paramlist ")" "const" ";"
	interface_definition = . "operator" operatordecl typespec "(" extern_paramlist ")" ";"
	interface_definition = . "operator" operatordecl typespec "(" extern_paramlist ")" "const" ";"
	interface_definition = . "operator" operatordecl "(" extern_paramlist ")" ";"
	interface_definition = . "operator" operatordecl "(" extern_paramlist ")" "const" ";"
[107]
	interface_definition = "function" . IDENT typespec "(" extern_paramlist ")" ";"
	interface_definition = "function" . IDENT typespec "(" extern_paramlist ")" "const" ";"
[108]
	interface_definition = "procedure" . IDENT "(" extern_paramlist ")" ";"
	interface_definition = "procedure" . IDENT "(" extern_paramlist ")" "const" ";"
[109]
	interface_definition = "operator" . operatordecl typespec "(" extern_paramlist ")" ";"
	interface_definition = "operator" . operatordecl typespec "(" extern_paramlist ")" "const" ";"
	interface_definition = "operator" . operatordecl "(" extern_paramlist ")" ";"
	interface_definition = "operator" . operatordecl "(" extern_paramlist ")" "const" ";"
	operatordecl = . "->"
	operatordecl = . "="
	operatordecl = . "+"
	operatordecl = . "-"
	operatordecl = . "*"
	operatordecl = . "/"
	operatordecl = . "%"
	operatordecl = . "&&"
	operatordecl = . "||"
	operatordecl = . "&"
	operatordecl = . "|"
	operatordecl = . "<<"
	operatordecl = . ">>"
	operatordecl = . "~"
	operatordecl = . "!"
	operatordecl = . "(" ")"
	operatordecl = . "[" "]"
	operatordecl = . "=="
	operatordecl = . "!="
	operatordecl = . ">="
	operatordecl = . "<="
	operatordecl = . ">"
	operatordecl = . "<"
[110]
	classdefinition = "class" IDENT "{" class_definitionlist . "}"
[111]
	class_definitionlist = . class_definition class_definitionlist
	class_definitionlist = class_definition . class_definitionlist
	class_definitionlist = .
	class_definition = . typedefinition ";"
	class_definition = . variabledefinition ";"
	class_definition = . structdefinition
	class_definition = . classdefinition
	class_definition = . interfacedefinition
	class_definition = . constructordefinition
	class_definition = . functiondefinition
	class_definition = . operatordefinition
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	typedefinition = . "typedef" typepath IDENT
	structdefinition = . "struct" IDENT "{" struct_definitionlist "}"
	interfacedefinition = . "interface" IDENT "{" interface_definitionlist "}"
	classdefinition = . "class" IDENT "{" class_definitionlist "}"
	classdefinition = . "class" IDENT ":" inheritlist "{" class_definitionlist "}"
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" IDENT typespec callablebody
	functiondefinition = . linkage "function" IDENT typespec callablebody_const
	functiondefinition = . linkage "procedure" IDENT callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody_const
	constructordefinition = . linkage "constructor" callablebody
	constructordefinition = . "destructor" "{" codeblock "}"
	operatordefinition = . linkage "operator" operatordecl typespec callablebody
	operatordefinition = . linkage "operator" operatordecl typespec callablebody_const
	operatordefinition = . linkage "operator" operatordecl callablebody
	operatordefinition = . linkage "operator" operatordecl callablebody_const
	variabledefinition = . typespec IDENT
	variabledefinition = . typespec IDENT "=" expression
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression
	variabledefinition = . typespec IDENT "[" expression "]"
[112]
	class_definition = typedefinition . ";"
[113]
	class_definition = structdefinition .
[114]
	class_definition = interfacedefinition .
[115]
	class_definition = classdefinition .
[116]
	functiondefinition = linkage . "function" IDENT typespec callablebody
	functiondefinition = linkage . "function" IDENT typespec callablebody_const
	functiondefinition = linkage . "procedure" IDENT callablebody
	functiondefinition = linkage . "procedure" IDENT callablebody_const
	constructordefinition = linkage . "constructor" callablebody
	operatordefinition = linkage . "operator" operatordecl typespec callablebody
	operatordefinition = linkage . "operator" operatordecl typespec callablebody_const
	operatordefinition = linkage . "operator" operatordecl callablebody
	operatordefinition = linkage . "operator" operatordecl callablebody_const
[117]
	class_definition = functiondefinition .
[118]
	class_definition = constructordefinition .
[119]
	class_definition = operatordefinition .
[120]
	class_definition = variabledefinition . ";"
[121]
	constructordefinition = "destructor" . "{" codeblock "}"
[122]
	inheritlist = typepath . "," inheritlist
	inheritlist = typepath .
[123]
	classdefinition = "class" IDENT ":" inheritlist . "{" class_definitionlist "}"
[124]
	extern_definition = "extern" DQSTRING "function" IDENT typespec . "(" extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING "function" IDENT typespec . "(" extern_paramlist "..." ")" ";"
[125]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" . extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" . extern_paramlist "..." ")" ";"
	extern_parameters = . typespec "," extern_parameters
	extern_parameters = . typespec IDENT "," extern_parameters
	extern_parameters = . typespec
	extern_parameters = . typespec IDENT
	extern_paramlist = . extern_parameters
	extern_paramlist = .
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
[126]
	statement/L1 = typedefinition ";" .
[127]
	main_procedure = "main" "{" codeblock "}" .
[128]
	statementlist = statement statementlist .
[129]
	iexpression = expression indirection . IDENT
[130]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = expression "(" . expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = expression "(" . ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
	expressionlist = . expression "," expressionlist
	expressionlist = . expression
[131]
	statement/L1 = expression ";" .
[132]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L7 = expression "&" . expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[133]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = expression "^" . expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[134]
	indirection = . "->" indirection
	indirection = "->" . indirection
	indirection = . "->"
	indirection = "->" .
[135]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = expression "=" . expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[136]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = expression "+" . expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[137]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = expression "-" . expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[138]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = expression "*" . expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[139]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = expression "/" . expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[140]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L10 = expression "%" . expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[141]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L5 = expression "&&" . expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[142]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L4 = expression "||" . expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[143]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L6 = expression "|" . expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[144]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = expression "<<" . expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[145]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L11 = expression ">>" . expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[146]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	expression/L13 = expression "[" . expressionlist "]"
	iexpression = . expression indirection IDENT
	expressionlist = . expression "," expressionlist
	expressionlist = . expression
[147]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = expression "==" . expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[148]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = expression "!=" . expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[149]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = expression ">=" . expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[150]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = expression "<=" . expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[151]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L8 = expression ">" . expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[152]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = expression "<" . expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[153]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = expression "+=" . expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[154]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = expression "-=" . expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[155]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = expression "*=" . expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[156]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = expression "/=" . expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[157]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = expression "^=" . expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[158]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = expression "&=" . expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = expression "&=" . expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[159]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = expression "%=" . expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[160]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = expression "&&=" . expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[161]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = expression "||=" . expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[162]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = expression "|=" . expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[163]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = expression "<<=" . expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[164]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L3 = expression ">>=" . expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[165]
	expression/L12 = expression "." . IDENT
[166]
	expression/L2 = "(" expression . ")"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[167]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L9 = "&" expression .
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[168]
	statement/L1 = "{" codeblock . "}"
[169]
	statement/L1 = expression . ";"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
	expressionlist = expression . "," expressionlist
	expressionlist = expression .
[170]
	expression/L1 = "{" expressionlist . "}"
[171]
	expression/L1 = "{" "}" .
[172]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L9 = "+" expression .
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[173]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L9 = "-" expression .
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[174]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L12 = "*" expression .
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[175]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L9 = "~" expression .
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[176]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L9 = "!" expression .
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[177]
	statement/L1 = "var" variabledefinition . ";"
[178]
	statement/L1 = "return" expression . ";"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[179]
	statement/L1 = "delete" expression . ";"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[180]
	statement/L1 = "if" "(" . expression ")" "{" codeblock "}"
	statement/L1 = "if" "(" . expression ")" "{" codeblock "}" "else" "{" codeblock "}"
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[181]
	statement/L1 = "while" "(" . expression ")" "{" codeblock "}"
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[182]
	expression/L1 = "new" typespec . ":" expression
[183]
	expression/L1 = "cast" typespec . ":" "{" expression "}"
	expression/L1 = "cast" typespec . ":" "{" "}"
[184]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
	expressionlist = expression . "," expressionlist
	expressionlist = expression .
[185]
	variabledefinition = typespec IDENT "[" expression "]" . "=" expression
	variabledefinition = typespec IDENT "[" expression "]" .
[186]
	functiondefinition = linkage "function" IDENT typespec callablebody .
[187]
	functiondefinition = linkage "function" IDENT typespec callablebody_const .
[188]
	paramdecl = typespec . IDENT
[189]
	callablebody = "(" parameterlist . ")" "{" codeblock "}"
	callablebody_const = "(" parameterlist . ")" "const" "{" codeblock "}"
[190]
	parameterlist = parameters .
[191]
	parameters = paramdecl . "," parameters
	parameters = paramdecl .
[192]
	typespec/L1 = "const" typename "^" "^" "&" .
[193]
	structdefinition = "struct" IDENT "{" struct_definitionlist "}" .
[194]
	struct_definitionlist = struct_definition struct_definitionlist .
[195]
	interfacedefinition = "interface" IDENT "{" interface_definitionlist "}" .
[196]
	interface_definitionlist = interface_definition interface_definitionlist .
[197]
	interface_definition = "function" IDENT . typespec "(" extern_paramlist ")" ";"
	interface_definition = "function" IDENT . typespec "(" extern_paramlist ")" "const" ";"
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
[198]
	interface_definition = "procedure" IDENT . "(" extern_paramlist ")" ";"
	interface_definition = "procedure" IDENT . "(" extern_paramlist ")" "const" ";"
[199]
	interface_definition = "operator" operatordecl . typespec "(" extern_paramlist ")" ";"
	interface_definition = "operator" operatordecl . typespec "(" extern_paramlist ")" "const" ";"
	interface_definition = "operator" operatordecl . "(" extern_paramlist ")" ";"
	interface_definition = "operator" operatordecl . "(" extern_paramlist ")" "const" ";"
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
[200]
	operatordecl = "(" . ")"
[201]
	operatordecl = "&" .
[202]
	operatordecl = "->" .
[203]
	operatordecl = "=" .
[204]
	operatordecl = "+" .
[205]
	operatordecl = "-" .
[206]
	operatordecl = "*" .
[207]
	operatordecl = "/" .
[208]
	operatordecl = "%" .
[209]
	operatordecl = "&&" .
[210]
	operatordecl = "||" .
[211]
	operatordecl = "|" .
[212]
	operatordecl = "<<" .
[213]
	operatordecl = ">>" .
[214]
	operatordecl = "~" .
[215]
	operatordecl = "!" .
[216]
	operatordecl = "[" . "]"
[217]
	operatordecl = "==" .
[218]
	operatordecl = "!=" .
[219]
	operatordecl = ">=" .
[220]
	operatordecl = "<=" .
[221]
	operatordecl = ">" .
[222]
	operatordecl = "<" .
[223]
	classdefinition = "class" IDENT "{" class_definitionlist "}" .
[224]
	class_definitionlist = class_definition class_definitionlist .
[225]
	class_definition = typedefinition ";" .
[226]
	operatordefinition = linkage "operator" . operatordecl typespec callablebody
	operatordefinition = linkage "operator" . operatordecl typespec callablebody_const
	operatordefinition = linkage "operator" . operatordecl callablebody
	operatordefinition = linkage "operator" . operatordecl callablebody_const
	operatordecl = . "->"
	operatordecl = . "="
	operatordecl = . "+"
	operatordecl = . "-"
	operatordecl = . "*"
	operatordecl = . "/"
	operatordecl = . "%"
	operatordecl = . "&&"
	operatordecl = . "||"
	operatordecl = . "&"
	operatordecl = . "|"
	operatordecl = . "<<"
	operatordecl = . ">>"
	operatordecl = . "~"
	operatordecl = . "!"
	operatordecl = . "(" ")"
	operatordecl = . "[" "]"
	operatordecl = . "=="
	operatordecl = . "!="
	operatordecl = . ">="
	operatordecl = . "<="
	operatordecl = . ">"
	operatordecl = . "<"
[227]
	constructordefinition = linkage "constructor" . callablebody
	callablebody = . "(" parameterlist ")" "{" codeblock "}"
[228]
	class_definition = variabledefinition ";" .
[229]
	typedefinition = . "typedef" typepath IDENT
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" IDENT typespec callablebody
	functiondefinition = . linkage "function" IDENT typespec callablebody_const
	functiondefinition = . linkage "procedure" IDENT callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody_const
	constructordefinition = "destructor" "{" . codeblock "}"
	codeblock = . statementlist
	statementlist = . statement statementlist
	statementlist = .
	statement/L1 = . functiondefinition
	statement/L1 = . typedefinition ";"
	statement/L1 = . "var" variabledefinition ";"
	statement/L1 = . expression ";"
	statement/L1 = . "return" expression ";"
	statement/L1 = . "delete" expression ";"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}"
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "{" codeblock "}"
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[230]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typepath/L1 = . typename
	inheritlist = . typepath "," inheritlist
	inheritlist = typepath "," . inheritlist
	inheritlist = . typepath
[231]
	class_definitionlist = . class_definition class_definitionlist
	class_definitionlist = .
	class_definition = . typedefinition ";"
	class_definition = . variabledefinition ";"
	class_definition = . structdefinition
	class_definition = . classdefinition
	class_definition = . interfacedefinition
	class_definition = . constructordefinition
	class_definition = . functiondefinition
	class_definition = . operatordefinition
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	typedefinition = . "typedef" typepath IDENT
	structdefinition = . "struct" IDENT "{" struct_definitionlist "}"
	interfacedefinition = . "interface" IDENT "{" interface_definitionlist "}"
	classdefinition = . "class" IDENT "{" class_definitionlist "}"
	classdefinition = . "class" IDENT ":" inheritlist "{" class_definitionlist "}"
	classdefinition = "class" IDENT ":" inheritlist "{" . class_definitionlist "}"
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" IDENT typespec callablebody
	functiondefinition = . linkage "function" IDENT typespec callablebody_const
	functiondefinition = . linkage "procedure" IDENT callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody_const
	constructordefinition = . linkage "constructor" callablebody
	constructordefinition = . "destructor" "{" codeblock "}"
	operatordefinition = . linkage "operator" operatordecl typespec callablebody
	operatordefinition = . linkage "operator" operatordecl typespec callablebody_const
	operatordefinition = . linkage "operator" operatordecl callablebody
	operatordefinition = . linkage "operator" operatordecl callablebody_const
	variabledefinition = . typespec IDENT
	variabledefinition = . typespec IDENT "=" expression
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression
	variabledefinition = . typespec IDENT "[" expression "]"
[232]
	extern_definition = "extern" DQSTRING "function" IDENT typespec "(" . extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING "function" IDENT typespec "(" . extern_paramlist "..." ")" ";"
	extern_parameters = . typespec "," extern_parameters
	extern_parameters = . typespec IDENT "," extern_parameters
	extern_parameters = . typespec
	extern_parameters = . typespec IDENT
	extern_paramlist = . extern_parameters
	extern_paramlist = .
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
[233]
	extern_paramlist = extern_parameters .
[234]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist . ")" ";"
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist . "..." ")" ";"
[235]
	extern_parameters = typespec . "," extern_parameters
	extern_parameters = typespec . IDENT "," extern_parameters
	extern_parameters = typespec .
	extern_parameters = typespec . IDENT
[236]
	iexpression = expression indirection IDENT .
[237]
	expression/L13 = expression "(" expressionlist . ")"
[238]
	expression/L13 = expression "(" ")" .
[239]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L7 = expression "&" expression .
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[240]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression "^" expression .
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[241]
	indirection = "->" indirection .
[242]
	expression/L3 = expression . "=" expression
	expression/L3 = expression "=" expression .
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[243]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression "+" expression .
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[244]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L9 = expression "-" expression .
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[245]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression "*" expression .
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[246]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression "/" expression .
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[247]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L10 = expression "%" expression .
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[248]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L5 = expression "&&" expression .
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[249]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L4 = expression "||" expression .
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[250]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L6 = expression "|" expression .
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[251]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression "<<" expression .
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[252]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L11 = expression ">>" expression .
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[253]
	expression/L13 = expression "[" expressionlist . "]"
[254]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression "==" expression .
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[255]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression "!=" expression .
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[256]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression ">=" expression .
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[257]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression "<=" expression .
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[258]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L8 = expression ">" expression .
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[259]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression "<" expression .
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[260]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression "+=" expression .
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[261]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression "-=" expression .
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[262]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression "*=" expression .
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[263]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression "/=" expression .
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[264]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression "^=" expression .
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[265]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression "&=" expression .
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression "&=" expression .
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[266]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression "%=" expression .
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[267]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression "&&=" expression .
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[268]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression "||=" expression .
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[269]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression "|=" expression .
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[270]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression "<<=" expression .
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[271]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L3 = expression ">>=" expression .
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[272]
	expression/L12 = expression "." IDENT .
[273]
	expression/L2 = "(" expression ")" .
[274]
	statement/L1 = "{" codeblock "}" .
[275]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
	expressionlist = . expression "," expressionlist
	expressionlist = expression "," . expressionlist
	expressionlist = . expression
[276]
	expression/L1 = "{" expressionlist "}" .
[277]
	statement/L1 = "var" variabledefinition ";" .
[278]
	statement/L1 = "return" expression ";" .
[279]
	statement/L1 = "delete" expression ";" .
[280]
	statement/L1 = "if" "(" expression . ")" "{" codeblock "}"
	statement/L1 = "if" "(" expression . ")" "{" codeblock "}" "else" "{" codeblock "}"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[281]
	statement/L1 = "while" "(" expression . ")" "{" codeblock "}"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[282]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = "new" typespec ":" . expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[283]
	expression/L1 = "cast" typespec ":" . "{" expression "}"
	expression/L1 = "cast" typespec ":" . "{" "}"
[284]
	variabledefinition = typespec IDENT "[" expression "]" "=" . expression
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[285]
	paramdecl = typespec IDENT .
[286]
	callablebody = "(" parameterlist ")" . "{" codeblock "}"
	callablebody_const = "(" parameterlist ")" . "const" "{" codeblock "}"
[287]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	parameters = . paramdecl "," parameters
	parameters = paramdecl "," . parameters
	parameters = . paramdecl
	paramdecl = . typespec IDENT
[288]
	interface_definition = "function" IDENT typespec . "(" extern_paramlist ")" ";"
	interface_definition = "function" IDENT typespec . "(" extern_paramlist ")" "const" ";"
[289]
	extern_parameters = . typespec "," extern_parameters
	extern_parameters = . typespec IDENT "," extern_parameters
	extern_parameters = . typespec
	extern_parameters = . typespec IDENT
	extern_paramlist = . extern_parameters
	extern_paramlist = .
	interface_definition = "procedure" IDENT "(" . extern_paramlist ")" ";"
	interface_definition = "procedure" IDENT "(" . extern_paramlist ")" "const" ";"
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
[290]
	interface_definition = "operator" operatordecl typespec . "(" extern_paramlist ")" ";"
	interface_definition = "operator" operatordecl typespec . "(" extern_paramlist ")" "const" ";"
[291]
	extern_parameters = . typespec "," extern_parameters
	extern_parameters = . typespec IDENT "," extern_parameters
	extern_parameters = . typespec
	extern_parameters = . typespec IDENT
	extern_paramlist = . extern_parameters
	extern_paramlist = .
	interface_definition = "operator" operatordecl "(" . extern_paramlist ")" ";"
	interface_definition = "operator" operatordecl "(" . extern_paramlist ")" "const" ";"
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
[292]
	operatordecl = "(" ")" .
[293]
	operatordecl = "[" "]" .
[294]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	operatordefinition = linkage "operator" operatordecl . typespec callablebody
	operatordefinition = linkage "operator" operatordecl . typespec callablebody_const
	operatordefinition = linkage "operator" operatordecl . callablebody
	operatordefinition = linkage "operator" operatordecl . callablebody_const
	callablebody = . "(" parameterlist ")" "{" codeblock "}"
	callablebody_const = . "(" parameterlist ")" "const" "{" codeblock "}"
[295]
	constructordefinition = linkage "constructor" callablebody .
[296]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	callablebody = "(" . parameterlist ")" "{" codeblock "}"
	parameterlist = . parameters
	parameterlist = .
	parameters = . paramdecl "," parameters
	parameters = . paramdecl
	paramdecl = . typespec IDENT
[297]
	constructordefinition = "destructor" "{" codeblock . "}"
[298]
	inheritlist = typepath "," inheritlist .
[299]
	classdefinition = "class" IDENT ":" inheritlist "{" class_definitionlist . "}"
[300]
	extern_definition = "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist . ")" ";"
	extern_definition = "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist . "..." ")" ";"
[301]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist ")" . ";"
[302]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist "..." . ")" ";"
[303]
	extern_parameters = typespec IDENT . "," extern_parameters
	extern_parameters = typespec IDENT .
[304]
	extern_parameters = . typespec "," extern_parameters
	extern_parameters = typespec "," . extern_parameters
	extern_parameters = . typespec IDENT "," extern_parameters
	extern_parameters = . typespec
	extern_parameters = . typespec IDENT
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
[305]
	expression/L13 = expression "(" expressionlist ")" .
[306]
	expression/L13 = expression "[" expressionlist "]" .
[307]
	expressionlist = expression "," expressionlist .
[308]
	statement/L1 = "if" "(" expression ")" . "{" codeblock "}"
	statement/L1 = "if" "(" expression ")" . "{" codeblock "}" "else" "{" codeblock "}"
[309]
	statement/L1 = "while" "(" expression ")" . "{" codeblock "}"
[310]
	expression/L1 = "new" typespec ":" expression .
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[311]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = "cast" typespec ":" "{" . expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L1 = "cast" typespec ":" "{" . "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[312]
	variabledefinition = typespec IDENT "[" expression "]" "=" expression .
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[313]
	callablebody_const = "(" parameterlist ")" "const" . "{" codeblock "}"
[314]
	typedefinition = . "typedef" typepath IDENT
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" IDENT typespec callablebody
	functiondefinition = . linkage "function" IDENT typespec callablebody_const
	functiondefinition = . linkage "procedure" IDENT callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody_const
	callablebody = "(" parameterlist ")" "{" . codeblock "}"
	codeblock = . statementlist
	statementlist = . statement statementlist
	statementlist = .
	statement/L1 = . functiondefinition
	statement/L1 = . typedefinition ";"
	statement/L1 = . "var" variabledefinition ";"
	statement/L1 = . expression ";"
	statement/L1 = . "return" expression ";"
	statement/L1 = . "delete" expression ";"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}"
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "{" codeblock "}"
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[315]
	parameters = paramdecl "," parameters .
[316]
	extern_parameters = . typespec "," extern_parameters
	extern_parameters = . typespec IDENT "," extern_parameters
	extern_parameters = . typespec
	extern_parameters = . typespec IDENT
	extern_paramlist = . extern_parameters
	extern_paramlist = .
	interface_definition = "function" IDENT typespec "(" . extern_paramlist ")" ";"
	interface_definition = "function" IDENT typespec "(" . extern_paramlist ")" "const" ";"
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
[317]
	interface_definition = "procedure" IDENT "(" extern_paramlist . ")" ";"
	interface_definition = "procedure" IDENT "(" extern_paramlist . ")" "const" ";"
[318]
	extern_parameters = . typespec "," extern_parameters
	extern_parameters = . typespec IDENT "," extern_parameters
	extern_parameters = . typespec
	extern_parameters = . typespec IDENT
	extern_paramlist = . extern_parameters
	extern_paramlist = .
	interface_definition = "operator" operatordecl typespec "(" . extern_paramlist ")" ";"
	interface_definition = "operator" operatordecl typespec "(" . extern_paramlist ")" "const" ";"
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
[319]
	interface_definition = "operator" operatordecl "(" extern_paramlist . ")" ";"
	interface_definition = "operator" operatordecl "(" extern_paramlist . ")" "const" ";"
[320]
	operatordefinition = linkage "operator" operatordecl typespec . callablebody
	operatordefinition = linkage "operator" operatordecl typespec . callablebody_const
	callablebody = . "(" parameterlist ")" "{" codeblock "}"
	callablebody_const = . "(" parameterlist ")" "const" "{" codeblock "}"
[321]
	operatordefinition = linkage "operator" operatordecl callablebody .
[322]
	operatordefinition = linkage "operator" operatordecl callablebody_const .
[323]
	callablebody = "(" parameterlist . ")" "{" codeblock "}"
[324]
	constructordefinition = "destructor" "{" codeblock "}" .
[325]
	classdefinition = "class" IDENT ":" inheritlist "{" class_definitionlist "}" .
[326]
	extern_definition = "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist ")" . ";"
[327]
	extern_definition = "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist "..." . ")" ";"
[328]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist ")" ";" .
[329]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist "..." ")" . ";"
[330]
	extern_parameters = . typespec "," extern_parameters
	extern_parameters = . typespec IDENT "," extern_parameters
	extern_parameters = typespec IDENT "," . extern_parameters
	extern_parameters = . typespec
	extern_parameters = . typespec IDENT
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
[331]
	extern_parameters = typespec "," extern_parameters .
[332]
	typedefinition = . "typedef" typepath IDENT
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" IDENT typespec callablebody
	functiondefinition = . linkage "function" IDENT typespec callablebody_const
	functiondefinition = . linkage "procedure" IDENT callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody_const
	codeblock = . statementlist
	statementlist = . statement statementlist
	statementlist = .
	statement/L1 = . functiondefinition
	statement/L1 = . typedefinition ";"
	statement/L1 = . "var" variabledefinition ";"
	statement/L1 = . expression ";"
	statement/L1 = . "return" expression ";"
	statement/L1 = . "delete" expression ";"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}"
	statement/L1 = "if" "(" expression ")" "{" . codeblock "}"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}"
	statement/L1 = "if" "(" expression ")" "{" . codeblock "}" "else" "{" codeblock "}"
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "{" codeblock "}"
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[333]
	typedefinition = . "typedef" typepath IDENT
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" IDENT typespec callablebody
	functiondefinition = . linkage "function" IDENT typespec callablebody_const
	functiondefinition = . linkage "procedure" IDENT callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody_const
	codeblock = . statementlist
	statementlist = . statement statementlist
	statementlist = .
	statement/L1 = . functiondefinition
	statement/L1 = . typedefinition ";"
	statement/L1 = . "var" variabledefinition ";"
	statement/L1 = . expression ";"
	statement/L1 = . "return" expression ";"
	statement/L1 = . "delete" expression ";"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}"
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}"
	statement/L1 = "while" "(" expression ")" "{" . codeblock "}"
	statement/L1 = . "{" codeblock "}"
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[334]
	expression/L1 = "cast" typespec ":" "{" expression . "}"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[335]
	expression/L1 = "cast" typespec ":" "{" "}" .
[336]
	typedefinition = . "typedef" typepath IDENT
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" IDENT typespec callablebody
	functiondefinition = . linkage "function" IDENT typespec callablebody_const
	functiondefinition = . linkage "procedure" IDENT callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody_const
	callablebody_const = "(" parameterlist ")" "const" "{" . codeblock "}"
	codeblock = . statementlist
	statementlist = . statement statementlist
	statementlist = .
	statement/L1 = . functiondefinition
	statement/L1 = . typedefinition ";"
	statement/L1 = . "var" variabledefinition ";"
	statement/L1 = . expression ";"
	statement/L1 = . "return" expression ";"
	statement/L1 = . "delete" expression ";"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}"
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "{" codeblock "}"
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[337]
	callablebody = "(" parameterlist ")" "{" codeblock . "}"
[338]
	interface_definition = "function" IDENT typespec "(" extern_paramlist . ")" ";"
	interface_definition = "function" IDENT typespec "(" extern_paramlist . ")" "const" ";"
[339]
	interface_definition = "procedure" IDENT "(" extern_paramlist ")" . ";"
	interface_definition = "procedure" IDENT "(" extern_paramlist ")" . "const" ";"
[340]
	interface_definition = "operator" operatordecl typespec "(" extern_paramlist . ")" ";"
	interface_definition = "operator" operatordecl typespec "(" extern_paramlist . ")" "const" ";"
[341]
	interface_definition = "operator" operatordecl "(" extern_paramlist ")" . ";"
	interface_definition = "operator" operatordecl "(" extern_paramlist ")" . "const" ";"
[342]
	operatordefinition = linkage "operator" operatordecl typespec callablebody .
[343]
	operatordefinition = linkage "operator" operatordecl typespec callablebody_const .
[344]
	callablebody = "(" parameterlist ")" . "{" codeblock "}"
[345]
	extern_definition = "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist ")" ";" .
[346]
	extern_definition = "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist "..." ")" . ";"
[347]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist "..." ")" ";" .
[348]
	extern_parameters = typespec IDENT "," extern_parameters .
[349]
	statement/L1 = "if" "(" expression ")" "{" codeblock . "}"
	statement/L1 = "if" "(" expression ")" "{" codeblock . "}" "else" "{" codeblock "}"
[350]
	statement/L1 = "while" "(" expression ")" "{" codeblock . "}"
[351]
	expression/L1 = "cast" typespec ":" "{" expression "}" .
[352]
	callablebody_const = "(" parameterlist ")" "const" "{" codeblock . "}"
[353]
	callablebody = "(" parameterlist ")" "{" codeblock "}" .
[354]
	interface_definition = "function" IDENT typespec "(" extern_paramlist ")" . ";"
	interface_definition = "function" IDENT typespec "(" extern_paramlist ")" . "const" ";"
[355]
	interface_definition = "procedure" IDENT "(" extern_paramlist ")" ";" .
[356]
	interface_definition = "procedure" IDENT "(" extern_paramlist ")" "const" . ";"
[357]
	interface_definition = "operator" operatordecl typespec "(" extern_paramlist ")" . ";"
	interface_definition = "operator" operatordecl typespec "(" extern_paramlist ")" . "const" ";"
[358]
	interface_definition = "operator" operatordecl "(" extern_paramlist ")" ";" .
[359]
	interface_definition = "operator" operatordecl "(" extern_paramlist ")" "const" . ";"
[360]
	extern_definition = "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist "..." ")" ";" .
[361]
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" .
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" . "else" "{" codeblock "}"
[362]
	statement/L1 = "while" "(" expression ")" "{" codeblock "}" .
[363]
	callablebody_const = "(" parameterlist ")" "const" "{" codeblock "}" .
[364]
	interface_definition = "function" IDENT typespec "(" extern_paramlist ")" ";" .
[365]
	interface_definition = "function" IDENT typespec "(" extern_paramlist ")" "const" . ";"
[366]
	interface_definition = "procedure" IDENT "(" extern_paramlist ")" "const" ";" .
[367]
	interface_definition = "operator" operatordecl typespec "(" extern_paramlist ")" ";" .
[368]
	interface_definition = "operator" operatordecl typespec "(" extern_paramlist ")" "const" . ";"
[369]
	interface_definition = "operator" operatordecl "(" extern_paramlist ")" "const" ";" .
[370]
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" "else" . "{" codeblock "}"
[371]
	interface_definition = "function" IDENT typespec "(" extern_paramlist ")" "const" ";" .
[372]
	interface_definition = "operator" operatordecl typespec "(" extern_paramlist ")" "const" ";" .
[373]
	typedefinition = . "typedef" typepath IDENT
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" IDENT typespec callablebody
	functiondefinition = . linkage "function" IDENT typespec callablebody_const
	functiondefinition = . linkage "procedure" IDENT callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody_const
	codeblock = . statementlist
	statementlist = . statement statementlist
	statementlist = .
	statement/L1 = . functiondefinition
	statement/L1 = . typedefinition ";"
	statement/L1 = . "var" variabledefinition ";"
	statement/L1 = . expression ";"
	statement/L1 = . "return" expression ";"
	statement/L1 = . "delete" expression ";"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}"
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" "else" "{" . codeblock "}"
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "{" codeblock "}"
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = . "cast" typespec ":" "{" expression "}"
	expression/L1 = . "cast" typespec ":" "{" "}"
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "^=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[374]
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock . "}"
[375]
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}" .

-- LR(0) state cores (for calculation of SHIFT follow state):
[2]
	program = extern_definitionlist . free_definitionlist main_procedure
[3]
	extern_definitionlist = extern_definition . extern_definitionlist
[4]
	extern_definition = "extern" . DQSTRING "function" IDENT typespec "(" extern_paramlist ")" ";"
	extern_definition = "extern" . DQSTRING "procedure" IDENT "(" extern_paramlist ")" ";"
	extern_definition = "extern" . DQSTRING "function" IDENT typespec "(" extern_paramlist "..." ")" ";"
	extern_definition = "extern" . DQSTRING "procedure" IDENT "(" extern_paramlist "..." ")" ";"
[5]
	program = extern_definitionlist free_definitionlist . main_procedure
[6]
	free_definition = struct_definition .
[7]
	free_definitionlist = free_definition . free_definitionlist
[8]
	typespec/L1 = typename .
	typespec/L1 = typename . "&"
	typespec/L1 = typename . "^"
	typespec/L1 = typename . "^" "&"
	typespec/L1 = typename . "^" "^"
	typespec/L1 = typename . "^" "^" "&"
[9]
	variabledefinition = typespec . IDENT
	variabledefinition = typespec . IDENT "=" expression
	variabledefinition = typespec . IDENT "[" expression "]" "=" expression
	variabledefinition = typespec . IDENT "[" expression "]"
[10]
	struct_definition = typedefinition . ";"
[11]
	struct_definition = structdefinition .
[12]
	free_definition = interfacedefinition .
[13]
	free_definition = classdefinition .
[14]
	functiondefinition = linkage . "function" IDENT typespec callablebody
	functiondefinition = linkage . "function" IDENT typespec callablebody_const
	functiondefinition = linkage . "procedure" IDENT callablebody
	functiondefinition = linkage . "procedure" IDENT callablebody_const
[15]
	free_definition = functiondefinition .
[16]
	struct_definition = variabledefinition . ";"
[17]
	typename/L1 = IDENT .
	typename/L1 = IDENT . "::" typename
[18]
	typespec/L1 = "const" . typename
	typespec/L1 = "const" . typename "&"
	typespec/L1 = "const" . typename "^"
	typespec/L1 = "const" . typename "^" "&"
	typespec/L1 = "const" . typename "^" "^"
	typespec/L1 = "const" . typename "^" "^" "&"
[19]
	typedefinition = "typedef" . typepath IDENT
[20]
	structdefinition = "struct" . IDENT "{" struct_definitionlist "}"
[21]
	interfacedefinition = "interface" . IDENT "{" interface_definitionlist "}"
[22]
	classdefinition = "class" . IDENT "{" class_definitionlist "}"
	classdefinition = "class" . IDENT ":" inheritlist "{" class_definitionlist "}"
[23]
	linkage = "private" .
[24]
	linkage = "public" .
[25]
	extern_definitionlist = extern_definition extern_definitionlist .
[26]
	extern_definition = "extern" DQSTRING . "function" IDENT typespec "(" extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING . "procedure" IDENT "(" extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING . "function" IDENT typespec "(" extern_paramlist "..." ")" ";"
	extern_definition = "extern" DQSTRING . "procedure" IDENT "(" extern_paramlist "..." ")" ";"
[27]
	program = extern_definitionlist free_definitionlist main_procedure .
[28]
	main_procedure = "main" . "{" codeblock "}"
[29]
	free_definitionlist = free_definition free_definitionlist .
[30]
	typespec/L1 = typename "&" .
[31]
	typespec/L1 = typename "^" .
	typespec/L1 = typename "^" . "&"
	typespec/L1 = typename "^" . "^"
	typespec/L1 = typename "^" . "^" "&"
[32]
	variabledefinition = typespec IDENT .
	variabledefinition = typespec IDENT . "=" expression
	variabledefinition = typespec IDENT . "[" expression "]" "=" expression
	variabledefinition = typespec IDENT . "[" expression "]"
[33]
	struct_definition = typedefinition ";" .
[34]
	functiondefinition = linkage "function" . IDENT typespec callablebody
	functiondefinition = linkage "function" . IDENT typespec callablebody_const
[35]
	functiondefinition = linkage "procedure" . IDENT callablebody
	functiondefinition = linkage "procedure" . IDENT callablebody_const
[36]
	struct_definition = variabledefinition ";" .
[37]
	typename/L1 = IDENT "::" . typename
[38]
	typespec/L1 = "const" typename .
	typespec/L1 = "const" typename . "&"
	typespec/L1 = "const" typename . "^"
	typespec/L1 = "const" typename . "^" "&"
	typespec/L1 = "const" typename . "^" "^"
	typespec/L1 = "const" typename . "^" "^" "&"
[39]
	typepath/L1 = typename .
[40]
	typedefinition = "typedef" typepath . IDENT
[41]
	structdefinition = "struct" IDENT . "{" struct_definitionlist "}"
[42]
	interfacedefinition = "interface" IDENT . "{" interface_definitionlist "}"
[43]
	classdefinition = "class" IDENT . "{" class_definitionlist "}"
	classdefinition = "class" IDENT . ":" inheritlist "{" class_definitionlist "}"
[44]
	extern_definition = "extern" DQSTRING "function" . IDENT typespec "(" extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING "function" . IDENT typespec "(" extern_paramlist "..." ")" ";"
[45]
	extern_definition = "extern" DQSTRING "procedure" . IDENT "(" extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING "procedure" . IDENT "(" extern_paramlist "..." ")" ";"
[46]
	main_procedure = "main" "{" . codeblock "}"
[47]
	typespec/L1 = typename "^" "&" .
[48]
	typespec/L1 = typename "^" "^" .
	typespec/L1 = typename "^" "^" . "&"
[49]
	variabledefinition = typespec IDENT "=" . expression
[50]
	variabledefinition = typespec IDENT "[" . expression "]" "=" expression
	variabledefinition = typespec IDENT "[" . expression "]"
[51]
	functiondefinition = linkage "function" IDENT . typespec callablebody
	functiondefinition = linkage "function" IDENT . typespec callablebody_const
[52]
	functiondefinition = linkage "procedure" IDENT . callablebody
	functiondefinition = linkage "procedure" IDENT . callablebody_const
[53]
	typename/L1 = IDENT "::" typename .
[54]
	typespec/L1 = "const" typename "&" .
[55]
	typespec/L1 = "const" typename "^" .
	typespec/L1 = "const" typename "^" . "&"
	typespec/L1 = "const" typename "^" . "^"
	typespec/L1 = "const" typename "^" . "^" "&"
[56]
	typedefinition = "typedef" typepath IDENT .
[57]
	structdefinition = "struct" IDENT "{" . struct_definitionlist "}"
[58]
	interfacedefinition = "interface" IDENT "{" . interface_definitionlist "}"
[59]
	classdefinition = "class" IDENT "{" . class_definitionlist "}"
[60]
	classdefinition = "class" IDENT ":" . inheritlist "{" class_definitionlist "}"
[61]
	extern_definition = "extern" DQSTRING "function" IDENT . typespec "(" extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING "function" IDENT . typespec "(" extern_paramlist "..." ")" ";"
[62]
	extern_definition = "extern" DQSTRING "procedure" IDENT . "(" extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING "procedure" IDENT . "(" extern_paramlist "..." ")" ";"
[63]
	statement/L1 = typedefinition . ";"
[64]
	statement/L1 = functiondefinition .
[65]
	main_procedure = "main" "{" codeblock . "}"
[66]
	codeblock = statementlist .
[67]
	statementlist = statement . statementlist
[68]
	statement/L1 = expression . ";"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[69]
	expression/L12 = iexpression .
[70]
	expression/L2 = BOOLEAN .
[71]
	expression/L2 = IDENT .
[72]
	expression/L2 = DQSTRING .
[73]
	expression/L2 = SQSTRING .
[74]
	expression/L2 = CARDINAL .
[75]
	expression/L2 = INTEGER .
[76]
	expression/L2 = FLOAT .
[77]
	expression/L2 = "(" . expression ")"
[78]
	expression/L9 = "&" . expression
[79]
	statement/L1 = "{" . codeblock "}"
	expression/L1 = "{" . expressionlist "}"
	expression/L1 = "{" . "}"
[80]
	expression/L9 = "+" . expression
[81]
	expression/L9 = "-" . expression
[82]
	expression/L12 = "*" . expression
[83]
	expression/L9 = "~" . expression
[84]
	expression/L9 = "!" . expression
[85]
	statement/L1 = "var" . variabledefinition ";"
[86]
	statement/L1 = "return" . expression ";"
[87]
	statement/L1 = "delete" . expression ";"
[88]
	statement/L1 = "if" . "(" expression ")" "{" codeblock "}"
	statement/L1 = "if" . "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}"
[89]
	statement/L1 = "while" . "(" expression ")" "{" codeblock "}"
[90]
	expression/L1 = "new" . typespec ":" expression
[91]
	expression/L1 = "cast" . typespec ":" "{" expression "}"
	expression/L1 = "cast" . typespec ":" "{" "}"
[92]
	expression/L2 = "null" .
[93]
	typespec/L1 = typename "^" "^" "&" .
[94]
	variabledefinition = typespec IDENT "=" expression .
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[95]
	expression/L1 = "{" . expressionlist "}"
	expression/L1 = "{" . "}"
[96]
	variabledefinition = typespec IDENT "[" expression . "]" "=" expression
	variabledefinition = typespec IDENT "[" expression . "]"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[97]
	functiondefinition = linkage "function" IDENT typespec . callablebody
	functiondefinition = linkage "function" IDENT typespec . callablebody_const
[98]
	functiondefinition = linkage "procedure" IDENT callablebody .
[99]
	functiondefinition = linkage "procedure" IDENT callablebody_const .
[100]
	callablebody = "(" . parameterlist ")" "{" codeblock "}"
	callablebody_const = "(" . parameterlist ")" "const" "{" codeblock "}"
[101]
	typespec/L1 = "const" typename "^" "&" .
[102]
	typespec/L1 = "const" typename "^" "^" .
	typespec/L1 = "const" typename "^" "^" . "&"
[103]
	structdefinition = "struct" IDENT "{" struct_definitionlist . "}"
[104]
	struct_definitionlist = struct_definition . struct_definitionlist
[105]
	interfacedefinition = "interface" IDENT "{" interface_definitionlist . "}"
[106]
	interface_definitionlist = interface_definition . interface_definitionlist
[107]
	interface_definition = "function" . IDENT typespec "(" extern_paramlist ")" ";"
	interface_definition = "function" . IDENT typespec "(" extern_paramlist ")" "const" ";"
[108]
	interface_definition = "procedure" . IDENT "(" extern_paramlist ")" ";"
	interface_definition = "procedure" . IDENT "(" extern_paramlist ")" "const" ";"
[109]
	interface_definition = "operator" . operatordecl typespec "(" extern_paramlist ")" ";"
	interface_definition = "operator" . operatordecl typespec "(" extern_paramlist ")" "const" ";"
	interface_definition = "operator" . operatordecl "(" extern_paramlist ")" ";"
	interface_definition = "operator" . operatordecl "(" extern_paramlist ")" "const" ";"
[110]
	classdefinition = "class" IDENT "{" class_definitionlist . "}"
[111]
	class_definitionlist = class_definition . class_definitionlist
[112]
	class_definition = typedefinition . ";"
[113]
	class_definition = structdefinition .
[114]
	class_definition = interfacedefinition .
[115]
	class_definition = classdefinition .
[116]
	functiondefinition = linkage . "function" IDENT typespec callablebody
	functiondefinition = linkage . "function" IDENT typespec callablebody_const
	functiondefinition = linkage . "procedure" IDENT callablebody
	functiondefinition = linkage . "procedure" IDENT callablebody_const
	constructordefinition = linkage . "constructor" callablebody
	operatordefinition = linkage . "operator" operatordecl typespec callablebody
	operatordefinition = linkage . "operator" operatordecl typespec callablebody_const
	operatordefinition = linkage . "operator" operatordecl callablebody
	operatordefinition = linkage . "operator" operatordecl callablebody_const
[117]
	class_definition = functiondefinition .
[118]
	class_definition = constructordefinition .
[119]
	class_definition = operatordefinition .
[120]
	class_definition = variabledefinition . ";"
[121]
	constructordefinition = "destructor" . "{" codeblock "}"
[122]
	inheritlist = typepath . "," inheritlist
	inheritlist = typepath .
[123]
	classdefinition = "class" IDENT ":" inheritlist . "{" class_definitionlist "}"
[124]
	extern_definition = "extern" DQSTRING "function" IDENT typespec . "(" extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING "function" IDENT typespec . "(" extern_paramlist "..." ")" ";"
[125]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" . extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" . extern_paramlist "..." ")" ";"
[126]
	statement/L1 = typedefinition ";" .
[127]
	main_procedure = "main" "{" codeblock "}" .
[128]
	statementlist = statement statementlist .
[129]
	iexpression = expression indirection . IDENT
[130]
	expression/L13 = expression "(" . expressionlist ")"
	expression/L13 = expression "(" . ")"
[131]
	statement/L1 = expression ";" .
[132]
	expression/L7 = expression "&" . expression
[133]
	expression/L7 = expression "^" . expression
[134]
	indirection = "->" . indirection
	indirection = "->" .
[135]
	expression/L3 = expression "=" . expression
[136]
	expression/L9 = expression "+" . expression
[137]
	expression/L9 = expression "-" . expression
[138]
	expression/L10 = expression "*" . expression
[139]
	expression/L10 = expression "/" . expression
[140]
	expression/L10 = expression "%" . expression
[141]
	expression/L5 = expression "&&" . expression
[142]
	expression/L4 = expression "||" . expression
[143]
	expression/L6 = expression "|" . expression
[144]
	expression/L11 = expression "<<" . expression
[145]
	expression/L11 = expression ">>" . expression
[146]
	expression/L13 = expression "[" . expressionlist "]"
[147]
	expression/L8 = expression "==" . expression
[148]
	expression/L8 = expression "!=" . expression
[149]
	expression/L8 = expression ">=" . expression
[150]
	expression/L8 = expression "<=" . expression
[151]
	expression/L8 = expression ">" . expression
[152]
	expression/L8 = expression "<" . expression
[153]
	expression/L3 = expression "+=" . expression
[154]
	expression/L3 = expression "-=" . expression
[155]
	expression/L3 = expression "*=" . expression
[156]
	expression/L3 = expression "/=" . expression
[157]
	expression/L3 = expression "^=" . expression
[158]
	expression/L3 = expression "&=" . expression
	expression/L3 = expression "&=" . expression
[159]
	expression/L3 = expression "%=" . expression
[160]
	expression/L3 = expression "&&=" . expression
[161]
	expression/L3 = expression "||=" . expression
[162]
	expression/L3 = expression "|=" . expression
[163]
	expression/L3 = expression "<<=" . expression
[164]
	expression/L3 = expression ">>=" . expression
[165]
	expression/L12 = expression "." . IDENT
[166]
	expression/L2 = "(" expression . ")"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[167]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L9 = "&" expression .
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[168]
	statement/L1 = "{" codeblock . "}"
[169]
	statement/L1 = expression . ";"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	expressionlist = expression . "," expressionlist
	expressionlist = expression .
[170]
	expression/L1 = "{" expressionlist . "}"
[171]
	expression/L1 = "{" "}" .
[172]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L9 = "+" expression .
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[173]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L9 = "-" expression .
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[174]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L12 = "*" expression .
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[175]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L9 = "~" expression .
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[176]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L9 = "!" expression .
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[177]
	statement/L1 = "var" variabledefinition . ";"
[178]
	statement/L1 = "return" expression . ";"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[179]
	statement/L1 = "delete" expression . ";"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[180]
	statement/L1 = "if" "(" . expression ")" "{" codeblock "}"
	statement/L1 = "if" "(" . expression ")" "{" codeblock "}" "else" "{" codeblock "}"
[181]
	statement/L1 = "while" "(" . expression ")" "{" codeblock "}"
[182]
	expression/L1 = "new" typespec . ":" expression
[183]
	expression/L1 = "cast" typespec . ":" "{" expression "}"
	expression/L1 = "cast" typespec . ":" "{" "}"
[184]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	expressionlist = expression . "," expressionlist
	expressionlist = expression .
[185]
	variabledefinition = typespec IDENT "[" expression "]" . "=" expression
	variabledefinition = typespec IDENT "[" expression "]" .
[186]
	functiondefinition = linkage "function" IDENT typespec callablebody .
[187]
	functiondefinition = linkage "function" IDENT typespec callablebody_const .
[188]
	paramdecl = typespec . IDENT
[189]
	callablebody = "(" parameterlist . ")" "{" codeblock "}"
	callablebody_const = "(" parameterlist . ")" "const" "{" codeblock "}"
[190]
	parameterlist = parameters .
[191]
	parameters = paramdecl . "," parameters
	parameters = paramdecl .
[192]
	typespec/L1 = "const" typename "^" "^" "&" .
[193]
	structdefinition = "struct" IDENT "{" struct_definitionlist "}" .
[194]
	struct_definitionlist = struct_definition struct_definitionlist .
[195]
	interfacedefinition = "interface" IDENT "{" interface_definitionlist "}" .
[196]
	interface_definitionlist = interface_definition interface_definitionlist .
[197]
	interface_definition = "function" IDENT . typespec "(" extern_paramlist ")" ";"
	interface_definition = "function" IDENT . typespec "(" extern_paramlist ")" "const" ";"
[198]
	interface_definition = "procedure" IDENT . "(" extern_paramlist ")" ";"
	interface_definition = "procedure" IDENT . "(" extern_paramlist ")" "const" ";"
[199]
	interface_definition = "operator" operatordecl . typespec "(" extern_paramlist ")" ";"
	interface_definition = "operator" operatordecl . typespec "(" extern_paramlist ")" "const" ";"
	interface_definition = "operator" operatordecl . "(" extern_paramlist ")" ";"
	interface_definition = "operator" operatordecl . "(" extern_paramlist ")" "const" ";"
[200]
	operatordecl = "(" . ")"
[201]
	operatordecl = "&" .
[202]
	operatordecl = "->" .
[203]
	operatordecl = "=" .
[204]
	operatordecl = "+" .
[205]
	operatordecl = "-" .
[206]
	operatordecl = "*" .
[207]
	operatordecl = "/" .
[208]
	operatordecl = "%" .
[209]
	operatordecl = "&&" .
[210]
	operatordecl = "||" .
[211]
	operatordecl = "|" .
[212]
	operatordecl = "<<" .
[213]
	operatordecl = ">>" .
[214]
	operatordecl = "~" .
[215]
	operatordecl = "!" .
[216]
	operatordecl = "[" . "]"
[217]
	operatordecl = "==" .
[218]
	operatordecl = "!=" .
[219]
	operatordecl = ">=" .
[220]
	operatordecl = "<=" .
[221]
	operatordecl = ">" .
[222]
	operatordecl = "<" .
[223]
	classdefinition = "class" IDENT "{" class_definitionlist "}" .
[224]
	class_definitionlist = class_definition class_definitionlist .
[225]
	class_definition = typedefinition ";" .
[226]
	operatordefinition = linkage "operator" . operatordecl typespec callablebody
	operatordefinition = linkage "operator" . operatordecl typespec callablebody_const
	operatordefinition = linkage "operator" . operatordecl callablebody
	operatordefinition = linkage "operator" . operatordecl callablebody_const
[227]
	constructordefinition = linkage "constructor" . callablebody
[228]
	class_definition = variabledefinition ";" .
[229]
	constructordefinition = "destructor" "{" . codeblock "}"
[230]
	inheritlist = typepath "," . inheritlist
[231]
	classdefinition = "class" IDENT ":" inheritlist "{" . class_definitionlist "}"
[232]
	extern_definition = "extern" DQSTRING "function" IDENT typespec "(" . extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING "function" IDENT typespec "(" . extern_paramlist "..." ")" ";"
[233]
	extern_paramlist = extern_parameters .
[234]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist . ")" ";"
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist . "..." ")" ";"
[235]
	extern_parameters = typespec . "," extern_parameters
	extern_parameters = typespec . IDENT "," extern_parameters
	extern_parameters = typespec .
	extern_parameters = typespec . IDENT
[236]
	iexpression = expression indirection IDENT .
[237]
	expression/L13 = expression "(" expressionlist . ")"
[238]
	expression/L13 = expression "(" ")" .
[239]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L7 = expression "&" expression .
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[240]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression "^" expression .
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[241]
	indirection = "->" indirection .
[242]
	expression/L3 = expression . "=" expression
	expression/L3 = expression "=" expression .
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[243]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression "+" expression .
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[244]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L9 = expression "-" expression .
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[245]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression "*" expression .
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[246]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression "/" expression .
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[247]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L10 = expression "%" expression .
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[248]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L5 = expression "&&" expression .
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[249]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L4 = expression "||" expression .
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[250]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L6 = expression "|" expression .
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[251]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression "<<" expression .
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[252]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L11 = expression ">>" expression .
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[253]
	expression/L13 = expression "[" expressionlist . "]"
[254]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression "==" expression .
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[255]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression "!=" expression .
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[256]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression ">=" expression .
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[257]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression "<=" expression .
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[258]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L8 = expression ">" expression .
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[259]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression "<" expression .
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[260]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression "+=" expression .
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[261]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression "-=" expression .
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[262]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression "*=" expression .
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[263]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression "/=" expression .
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[264]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression "^=" expression .
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[265]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression "&=" expression .
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression "&=" expression .
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[266]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression "%=" expression .
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[267]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression "&&=" expression .
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[268]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression "||=" expression .
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[269]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression "|=" expression .
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[270]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression "<<=" expression .
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[271]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L3 = expression ">>=" expression .
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[272]
	expression/L12 = expression "." IDENT .
[273]
	expression/L2 = "(" expression ")" .
[274]
	statement/L1 = "{" codeblock "}" .
[275]
	expressionlist = expression "," . expressionlist
[276]
	expression/L1 = "{" expressionlist "}" .
[277]
	statement/L1 = "var" variabledefinition ";" .
[278]
	statement/L1 = "return" expression ";" .
[279]
	statement/L1 = "delete" expression ";" .
[280]
	statement/L1 = "if" "(" expression . ")" "{" codeblock "}"
	statement/L1 = "if" "(" expression . ")" "{" codeblock "}" "else" "{" codeblock "}"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[281]
	statement/L1 = "while" "(" expression . ")" "{" codeblock "}"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[282]
	expression/L1 = "new" typespec ":" . expression
[283]
	expression/L1 = "cast" typespec ":" . "{" expression "}"
	expression/L1 = "cast" typespec ":" . "{" "}"
[284]
	variabledefinition = typespec IDENT "[" expression "]" "=" . expression
[285]
	paramdecl = typespec IDENT .
[286]
	callablebody = "(" parameterlist ")" . "{" codeblock "}"
	callablebody_const = "(" parameterlist ")" . "const" "{" codeblock "}"
[287]
	parameters = paramdecl "," . parameters
[288]
	interface_definition = "function" IDENT typespec . "(" extern_paramlist ")" ";"
	interface_definition = "function" IDENT typespec . "(" extern_paramlist ")" "const" ";"
[289]
	interface_definition = "procedure" IDENT "(" . extern_paramlist ")" ";"
	interface_definition = "procedure" IDENT "(" . extern_paramlist ")" "const" ";"
[290]
	interface_definition = "operator" operatordecl typespec . "(" extern_paramlist ")" ";"
	interface_definition = "operator" operatordecl typespec . "(" extern_paramlist ")" "const" ";"
[291]
	interface_definition = "operator" operatordecl "(" . extern_paramlist ")" ";"
	interface_definition = "operator" operatordecl "(" . extern_paramlist ")" "const" ";"
[292]
	operatordecl = "(" ")" .
[293]
	operatordecl = "[" "]" .
[294]
	operatordefinition = linkage "operator" operatordecl . typespec callablebody
	operatordefinition = linkage "operator" operatordecl . typespec callablebody_const
	operatordefinition = linkage "operator" operatordecl . callablebody
	operatordefinition = linkage "operator" operatordecl . callablebody_const
[295]
	constructordefinition = linkage "constructor" callablebody .
[296]
	callablebody = "(" . parameterlist ")" "{" codeblock "}"
[297]
	constructordefinition = "destructor" "{" codeblock . "}"
[298]
	inheritlist = typepath "," inheritlist .
[299]
	classdefinition = "class" IDENT ":" inheritlist "{" class_definitionlist . "}"
[300]
	extern_definition = "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist . ")" ";"
	extern_definition = "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist . "..." ")" ";"
[301]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist ")" . ";"
[302]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist "..." . ")" ";"
[303]
	extern_parameters = typespec IDENT . "," extern_parameters
	extern_parameters = typespec IDENT .
[304]
	extern_parameters = typespec "," . extern_parameters
[305]
	expression/L13 = expression "(" expressionlist ")" .
[306]
	expression/L13 = expression "[" expressionlist "]" .
[307]
	expressionlist = expression "," expressionlist .
[308]
	statement/L1 = "if" "(" expression ")" . "{" codeblock "}"
	statement/L1 = "if" "(" expression ")" . "{" codeblock "}" "else" "{" codeblock "}"
[309]
	statement/L1 = "while" "(" expression ")" . "{" codeblock "}"
[310]
	expression/L1 = "new" typespec ":" expression .
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[311]
	expression/L1 = "cast" typespec ":" "{" . expression "}"
	expression/L1 = "cast" typespec ":" "{" . "}"
[312]
	variabledefinition = typespec IDENT "[" expression "]" "=" expression .
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[313]
	callablebody_const = "(" parameterlist ")" "const" . "{" codeblock "}"
[314]
	callablebody = "(" parameterlist ")" "{" . codeblock "}"
[315]
	parameters = paramdecl "," parameters .
[316]
	interface_definition = "function" IDENT typespec "(" . extern_paramlist ")" ";"
	interface_definition = "function" IDENT typespec "(" . extern_paramlist ")" "const" ";"
[317]
	interface_definition = "procedure" IDENT "(" extern_paramlist . ")" ";"
	interface_definition = "procedure" IDENT "(" extern_paramlist . ")" "const" ";"
[318]
	interface_definition = "operator" operatordecl typespec "(" . extern_paramlist ")" ";"
	interface_definition = "operator" operatordecl typespec "(" . extern_paramlist ")" "const" ";"
[319]
	interface_definition = "operator" operatordecl "(" extern_paramlist . ")" ";"
	interface_definition = "operator" operatordecl "(" extern_paramlist . ")" "const" ";"
[320]
	operatordefinition = linkage "operator" operatordecl typespec . callablebody
	operatordefinition = linkage "operator" operatordecl typespec . callablebody_const
[321]
	operatordefinition = linkage "operator" operatordecl callablebody .
[322]
	operatordefinition = linkage "operator" operatordecl callablebody_const .
[323]
	callablebody = "(" parameterlist . ")" "{" codeblock "}"
[324]
	constructordefinition = "destructor" "{" codeblock "}" .
[325]
	classdefinition = "class" IDENT ":" inheritlist "{" class_definitionlist "}" .
[326]
	extern_definition = "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist ")" . ";"
[327]
	extern_definition = "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist "..." . ")" ";"
[328]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist ")" ";" .
[329]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist "..." ")" . ";"
[330]
	extern_parameters = typespec IDENT "," . extern_parameters
[331]
	extern_parameters = typespec "," extern_parameters .
[332]
	statement/L1 = "if" "(" expression ")" "{" . codeblock "}"
	statement/L1 = "if" "(" expression ")" "{" . codeblock "}" "else" "{" codeblock "}"
[333]
	statement/L1 = "while" "(" expression ")" "{" . codeblock "}"
[334]
	expression/L1 = "cast" typespec ":" "{" expression . "}"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "^=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[335]
	expression/L1 = "cast" typespec ":" "{" "}" .
[336]
	callablebody_const = "(" parameterlist ")" "const" "{" . codeblock "}"
[337]
	callablebody = "(" parameterlist ")" "{" codeblock . "}"
[338]
	interface_definition = "function" IDENT typespec "(" extern_paramlist . ")" ";"
	interface_definition = "function" IDENT typespec "(" extern_paramlist . ")" "const" ";"
[339]
	interface_definition = "procedure" IDENT "(" extern_paramlist ")" . ";"
	interface_definition = "procedure" IDENT "(" extern_paramlist ")" . "const" ";"
[340]
	interface_definition = "operator" operatordecl typespec "(" extern_paramlist . ")" ";"
	interface_definition = "operator" operatordecl typespec "(" extern_paramlist . ")" "const" ";"
[341]
	interface_definition = "operator" operatordecl "(" extern_paramlist ")" . ";"
	interface_definition = "operator" operatordecl "(" extern_paramlist ")" . "const" ";"
[342]
	operatordefinition = linkage "operator" operatordecl typespec callablebody .
[343]
	operatordefinition = linkage "operator" operatordecl typespec callablebody_const .
[344]
	callablebody = "(" parameterlist ")" . "{" codeblock "}"
[345]
	extern_definition = "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist ")" ";" .
[346]
	extern_definition = "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist "..." ")" . ";"
[347]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist "..." ")" ";" .
[348]
	extern_parameters = typespec IDENT "," extern_parameters .
[349]
	statement/L1 = "if" "(" expression ")" "{" codeblock . "}"
	statement/L1 = "if" "(" expression ")" "{" codeblock . "}" "else" "{" codeblock "}"
[350]
	statement/L1 = "while" "(" expression ")" "{" codeblock . "}"
[351]
	expression/L1 = "cast" typespec ":" "{" expression "}" .
[352]
	callablebody_const = "(" parameterlist ")" "const" "{" codeblock . "}"
[353]
	callablebody = "(" parameterlist ")" "{" codeblock "}" .
[354]
	interface_definition = "function" IDENT typespec "(" extern_paramlist ")" . ";"
	interface_definition = "function" IDENT typespec "(" extern_paramlist ")" . "const" ";"
[355]
	interface_definition = "procedure" IDENT "(" extern_paramlist ")" ";" .
[356]
	interface_definition = "procedure" IDENT "(" extern_paramlist ")" "const" . ";"
[357]
	interface_definition = "operator" operatordecl typespec "(" extern_paramlist ")" . ";"
	interface_definition = "operator" operatordecl typespec "(" extern_paramlist ")" . "const" ";"
[358]
	interface_definition = "operator" operatordecl "(" extern_paramlist ")" ";" .
[359]
	interface_definition = "operator" operatordecl "(" extern_paramlist ")" "const" . ";"
[360]
	extern_definition = "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist "..." ")" ";" .
[361]
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" .
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" . "else" "{" codeblock "}"
[362]
	statement/L1 = "while" "(" expression ")" "{" codeblock "}" .
[363]
	callablebody_const = "(" parameterlist ")" "const" "{" codeblock "}" .
[364]
	interface_definition = "function" IDENT typespec "(" extern_paramlist ")" ";" .
[365]
	interface_definition = "function" IDENT typespec "(" extern_paramlist ")" "const" . ";"
[366]
	interface_definition = "procedure" IDENT "(" extern_paramlist ")" "const" ";" .
[367]
	interface_definition = "operator" operatordecl typespec "(" extern_paramlist ")" ";" .
[368]
	interface_definition = "operator" operatordecl typespec "(" extern_paramlist ")" "const" . ";"
[369]
	interface_definition = "operator" operatordecl "(" extern_paramlist ")" "const" ";" .
[370]
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" "else" . "{" codeblock "}"
[371]
	interface_definition = "function" IDENT typespec "(" extern_paramlist ")" "const" ";" .
[372]
	interface_definition = "operator" operatordecl typespec "(" extern_paramlist ")" "const" ";" .
[373]
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" "else" "{" . codeblock "}"
[374]
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock . "}"
[375]
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}" .

-- LR(1) used FOLLOW sets labeled:
[0]: {$}
[1]: {$ IDENT "function" "procedure" "const" "typedef" "struct" "interface" "class" "private" "public" "main"}
[2]: {$ "main"}
[9]: {'('}
[10]: {')'}
[13]: {IDENT}
[15]: {';'}
[18]: {'}'}
[19]: {'{'}
[25]: {']'}
[26]: {':'}
[59]: {$ IDENT "extern" "function" "procedure" "const" "typedef" "struct" "interface" "class" "private" "public" "main"}
[61]: {"function" "procedure"}
[62]: {IDENT '&' '^'}
[97]: {'(' ';' '&' '^' "->" '=' '+' '-' '*' '/' '%' "&&" "||" '|' "<<" ">>" '[' "==" "!=" ">=" "<=" '>' '<' "+=" "-=" "*=" "/=" "^=" "&=" "%=" "&&=" "||=" "|=" "<<=" ">>=" '.'}
[98]: {$ BOOLEAN IDENT DQSTRING SQSTRING CARDINAL INTEGER FLOAT "function" '(' "procedure" '&' "typedef" '{' '}' "private" "public" '+' '-' '*' '~' '!' "var" "return" "delete" "if" "while" "new" "cast" "null"}
[167]: {'(' '&' '^' "->" '=' '+' '-' '*' '/' '%' "&&" "||" '|' "<<" ">>" '[' ']' "==" "!=" ">=" "<=" '>' '<' "+=" "-=" "*=" "/=" "^=" "&=" "%=" "&&=" "||=" "|=" "<<=" ">>=" '.'}
[168]: {'(' '&' '^'}
[169]: {$ IDENT "const" "typedef" "struct" '}'}
[170]: {$ IDENT "function" "procedure" "const" "typedef" "struct" '}' "interface" "class" "private" "public" "main"}
[171]: {$ "function" "procedure" "operator" '}'}
[173]: {"function" "procedure" "operator" "constructor"}
[174]: {$ IDENT "function" "procedure" "const" "operator" "typedef" "struct" '}' "interface" "class" "private" "public" "constructor" "destructor"}
[175]: {$ IDENT "function" "procedure" "const" "operator" "typedef" "struct" '}' "interface" "class" "private" "public" "constructor" "destructor" "main"}
[176]: {',' '{'}
[179]: {'(' ';' ',' '&' '^' '}' "->" '=' '+' '-' '*' '/' '%' "&&" "||" '|' "<<" ">>" '[' "==" "!=" ">=" "<=" '>' '<' "+=" "-=" "*=" "/=" "^=" "&=" "%=" "&&=" "||=" "|=" "<<=" ">>=" '.'}
[180]: {'&' '^' ':'}
[184]: {')' ','}
[185]: {IDENT '(' "const"}
[186]: {')' "..."}
[189]: {IDENT ')' "..." ','}
[190]: {IDENT ')' "..." ',' '&' '^'}
[228]: {'(' ')' '&' '^' "->" '=' '+' '-' '*' '/' '%' "&&" "||" '|' "<<" ">>" '[' "==" "!=" ">=" "<=" '>' '<' "+=" "-=" "*=" "/=" "^=" "&=" "%=" "&&=" "||=" "|=" "<<=" ">>=" '.'}
[230]: {'(' ')' ',' '&' '^' '}' "->" '=' '+' '-' '*' '/' '%' "&&" "||" '|' "<<" ">>" '[' ']' "==" "!=" ">=" "<=" '>' '<' "+=" "-=" "*=" "/=" "^=" "&=" "%=" "&&=" "||=" "|=" "<<=" ">>=" '.'}
[237]: {IDENT ')' ','}
[238]: {IDENT ')' ',' '&' '^'}
[239]: {'(' ')' ';' ',' '&' '^' '}' "->" '=' '+' '-' '*' '/' '%' "&&" "||" '|' "<<" ">>" '[' ']' "==" "!=" ">=" "<=" '>' '<' "+=" "-=" "*=" "/=" "^=" "&=" "%=" "&&=" "||=" "|=" "<<=" ">>=" '.'}
[247]: {$ BOOLEAN IDENT DQSTRING SQSTRING CARDINAL INTEGER FLOAT "function" '(' "procedure" "const" '&' "typedef" "struct" '{' '}' "interface" "class" "private" "public" '+' '-' '*' '~' '!' "main" "var" "return" "delete" "if" "while" "new" "cast" "null"}
[252]: {$ BOOLEAN IDENT DQSTRING SQSTRING CARDINAL INTEGER FLOAT "function" '(' "procedure" "const" "operator" '&' "typedef" "struct" '{' '}' "interface" "class" "private" "public" "constructor" "destructor" '+' '-' '*' '~' '!' "main" "var" "return" "delete" "if" "while" "new" "cast" "null"}
[263]: {')' '}' ']'}
[268]: {IDENT '(' ')' "..." ',' ':'}
[270]: {IDENT '(' ')' "..." ',' '&' '^' ':'}
[273]: {IDENT '(' ')' "..." ',' '&' '^' '{' ':'}
[274]: {IDENT ',' '{'}

-- LALR(1) states (merged LR(1) elements assigned to LR(0) states):
[1]
	program = . extern_definitionlist free_definitionlist main_procedure, FOLLOW [0] -> GOTO 2
	extern_definitionlist = . extern_definition extern_definitionlist, FOLLOW [1] -> GOTO 3
	extern_definition = . "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist ")" ";", FOLLOW [59] -> SHIFT "extern" GOTO 4
	extern_definition = . "extern" DQSTRING "procedure" IDENT "(" extern_paramlist ")" ";", FOLLOW [59] -> SHIFT "extern" GOTO 4
	extern_definition = . "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist "..." ")" ";", FOLLOW [59] -> SHIFT "extern" GOTO 4
	extern_definition = . "extern" DQSTRING "procedure" IDENT "(" extern_paramlist "..." ")" ";", FOLLOW [59] -> SHIFT "extern" GOTO 4
	extern_definitionlist = ., FOLLOW [1] -> REDUCE extern_definitionlist #0
[2]
	program = extern_definitionlist . free_definitionlist main_procedure, FOLLOW [0] -> GOTO 5
	free_definition = . struct_definition, FOLLOW [1] -> GOTO 6
	free_definitionlist = . free_definition free_definitionlist, FOLLOW [2] -> GOTO 7
	typespec/L1 = . typename, FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [13] -> GOTO 8
	variabledefinition = . typespec IDENT, FOLLOW [15] -> GOTO 9
	variabledefinition = . typespec IDENT "=" expression, FOLLOW [15] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression, FOLLOW [15] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]", FOLLOW [15] -> GOTO 9
	struct_definition = . typedefinition ";", FOLLOW [1] -> GOTO 10
	struct_definition = . structdefinition, FOLLOW [1] -> GOTO 11
	free_definition = . interfacedefinition, FOLLOW [1] -> GOTO 12
	free_definition = . classdefinition, FOLLOW [1] -> GOTO 13
	functiondefinition = . linkage "function" IDENT typespec callablebody, FOLLOW [1] -> GOTO 14
	functiondefinition = . linkage "function" IDENT typespec callablebody_const, FOLLOW [1] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [1] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody_const, FOLLOW [1] -> GOTO 14
	free_definition = . functiondefinition, FOLLOW [1] -> GOTO 15
	struct_definition = . variabledefinition ";", FOLLOW [1] -> GOTO 16
	typename/L1 = . IDENT, FOLLOW [62] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [62] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [13] -> SHIFT "const" GOTO 18
	typedefinition = . "typedef" typepath IDENT, FOLLOW [15] -> SHIFT "typedef" GOTO 19
	structdefinition = . "struct" IDENT "{" struct_definitionlist "}", FOLLOW [1] -> SHIFT "struct" GOTO 20
	interfacedefinition = . "interface" IDENT "{" interface_definitionlist "}", FOLLOW [1] -> SHIFT "interface" GOTO 21
	classdefinition = . "class" IDENT "{" class_definitionlist "}", FOLLOW [1] -> SHIFT "class" GOTO 22
	classdefinition = . "class" IDENT ":" inheritlist "{" class_definitionlist "}", FOLLOW [1] -> SHIFT "class" GOTO 22
	linkage = . "private", FOLLOW [61] -> SHIFT "private" GOTO 23
	linkage = . "public", FOLLOW [61] -> SHIFT "public" GOTO 24
	free_definitionlist = ., FOLLOW [2] -> REDUCE free_definitionlist #0
	linkage = . (35), FOLLOW [61] -> REDUCE linkage #0 CALL linkage {private=false,linkage="external"}
[3]
	extern_definitionlist = extern_definition . extern_definitionlist, FOLLOW [1] -> GOTO 25
	extern_definitionlist = . extern_definition extern_definitionlist, FOLLOW [1] -> GOTO 3
	extern_definition = . "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist ")" ";", FOLLOW [59] -> SHIFT "extern" GOTO 4
	extern_definition = . "extern" DQSTRING "procedure" IDENT "(" extern_paramlist ")" ";", FOLLOW [59] -> SHIFT "extern" GOTO 4
	extern_definition = . "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist "..." ")" ";", FOLLOW [59] -> SHIFT "extern" GOTO 4
	extern_definition = . "extern" DQSTRING "procedure" IDENT "(" extern_paramlist "..." ")" ";", FOLLOW [59] -> SHIFT "extern" GOTO 4
	extern_definitionlist = ., FOLLOW [1] -> REDUCE extern_definitionlist #0
[4]
	extern_definition = "extern" . DQSTRING "function" IDENT typespec "(" extern_paramlist ")" ";", FOLLOW [59] -> SHIFT DQSTRING GOTO 26
	extern_definition = "extern" . DQSTRING "procedure" IDENT "(" extern_paramlist ")" ";", FOLLOW [59] -> SHIFT DQSTRING GOTO 26
	extern_definition = "extern" . DQSTRING "function" IDENT typespec "(" extern_paramlist "..." ")" ";", FOLLOW [59] -> SHIFT DQSTRING GOTO 26
	extern_definition = "extern" . DQSTRING "procedure" IDENT "(" extern_paramlist "..." ")" ";", FOLLOW [59] -> SHIFT DQSTRING GOTO 26
[5]
	program = extern_definitionlist free_definitionlist . main_procedure, FOLLOW [0] -> GOTO 27
	main_procedure = . "main" "{" codeblock "}", FOLLOW [0] -> SHIFT "main" GOTO 28
	main_procedure = ., FOLLOW [0] -> REDUCE main_procedure #0
[6]
	free_definition = struct_definition ., FOLLOW [1] -> REDUCE free_definition #1
[7]
	free_definitionlist = free_definition . free_definitionlist, FOLLOW [2] -> GOTO 29
	free_definition = . struct_definition, FOLLOW [1] -> GOTO 6
	free_definitionlist = . free_definition free_definitionlist, FOLLOW [2] -> GOTO 7
	typespec/L1 = . typename, FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [13] -> GOTO 8
	variabledefinition = . typespec IDENT, FOLLOW [15] -> GOTO 9
	variabledefinition = . typespec IDENT "=" expression, FOLLOW [15] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression, FOLLOW [15] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]", FOLLOW [15] -> GOTO 9
	struct_definition = . typedefinition ";", FOLLOW [1] -> GOTO 10
	struct_definition = . structdefinition, FOLLOW [1] -> GOTO 11
	free_definition = . interfacedefinition, FOLLOW [1] -> GOTO 12
	free_definition = . classdefinition, FOLLOW [1] -> GOTO 13
	functiondefinition = . linkage "function" IDENT typespec callablebody, FOLLOW [1] -> GOTO 14
	functiondefinition = . linkage "function" IDENT typespec callablebody_const, FOLLOW [1] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [1] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody_const, FOLLOW [1] -> GOTO 14
	free_definition = . functiondefinition, FOLLOW [1] -> GOTO 15
	struct_definition = . variabledefinition ";", FOLLOW [1] -> GOTO 16
	typename/L1 = . IDENT, FOLLOW [62] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [62] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [13] -> SHIFT "const" GOTO 18
	typedefinition = . "typedef" typepath IDENT, FOLLOW [15] -> SHIFT "typedef" GOTO 19
	structdefinition = . "struct" IDENT "{" struct_definitionlist "}", FOLLOW [1] -> SHIFT "struct" GOTO 20
	interfacedefinition = . "interface" IDENT "{" interface_definitionlist "}", FOLLOW [1] -> SHIFT "interface" GOTO 21
	classdefinition = . "class" IDENT "{" class_definitionlist "}", FOLLOW [1] -> SHIFT "class" GOTO 22
	classdefinition = . "class" IDENT ":" inheritlist "{" class_definitionlist "}", FOLLOW [1] -> SHIFT "class" GOTO 22
	linkage = . "private", FOLLOW [61] -> SHIFT "private" GOTO 23
	linkage = . "public", FOLLOW [61] -> SHIFT "public" GOTO 24
	free_definitionlist = ., FOLLOW [2] -> REDUCE free_definitionlist #0
	linkage = . (35), FOLLOW [61] -> REDUCE linkage #0 CALL linkage {private=false,linkage="external"}
[8]
	typespec/L1 = typename . "&", FOLLOW [268] -> SHIFT '&' GOTO 30
	typespec/L1 = typename . "^", FOLLOW [268] -> SHIFT '^' GOTO 31
	typespec/L1 = typename . "^" "&", FOLLOW [268] -> SHIFT '^' GOTO 31
	typespec/L1 = typename . "^" "^", FOLLOW [268] -> SHIFT '^' GOTO 31
	typespec/L1 = typename . "^" "^" "&", FOLLOW [268] -> SHIFT '^' GOTO 31
	typespec/L1 = typename . (17), FOLLOW [268] -> REDUCE typespec #1 CALL typespec ""
[9]
	variabledefinition = typespec . IDENT, FOLLOW [15] -> SHIFT IDENT GOTO 32
	variabledefinition = typespec . IDENT "=" expression, FOLLOW [15] -> SHIFT IDENT GOTO 32
	variabledefinition = typespec . IDENT "[" expression "]" "=" expression, FOLLOW [15] -> SHIFT IDENT GOTO 32
	variabledefinition = typespec . IDENT "[" expression "]", FOLLOW [15] -> SHIFT IDENT GOTO 32
[10]
	struct_definition = typedefinition . ";", FOLLOW [170] -> SHIFT ';' GOTO 33
[11]
	struct_definition = structdefinition . (15), FOLLOW [170] -> REDUCE struct_definition #1 CALL definition 1
[12]
	free_definition = interfacedefinition . (15), FOLLOW [1] -> REDUCE free_definition #1 CALL definition 1
[13]
	free_definition = classdefinition . (15), FOLLOW [1] -> REDUCE free_definition #1 CALL definition 1
[14]
	functiondefinition = linkage . "function" IDENT typespec callablebody, FOLLOW [247] -> SHIFT "function" GOTO 34
	functiondefinition = linkage . "function" IDENT typespec callablebody_const, FOLLOW [247] -> SHIFT "function" GOTO 34
	functiondefinition = linkage . "procedure" IDENT callablebody, FOLLOW [247] -> SHIFT "procedure" GOTO 35
	functiondefinition = linkage . "procedure" IDENT callablebody_const, FOLLOW [247] -> SHIFT "procedure" GOTO 35
[15]
	free_definition = functiondefinition . (15), FOLLOW [1] -> REDUCE free_definition #1 CALL definition 1
[16]
	struct_definition = variabledefinition . ";", FOLLOW [170] -> SHIFT ';' GOTO 36
[17]
	typename/L1 = IDENT . "::" typename, FOLLOW [273] -> SHIFT "::" GOTO 37
	typename/L1 = IDENT ., FOLLOW [273] -> REDUCE typename #1
[18]
	typespec/L1 = "const" . typename, FOLLOW [268] -> GOTO 38
	typespec/L1 = "const" . typename "&", FOLLOW [268] -> GOTO 38
	typespec/L1 = "const" . typename "^", FOLLOW [268] -> GOTO 38
	typespec/L1 = "const" . typename "^" "&", FOLLOW [268] -> GOTO 38
	typespec/L1 = "const" . typename "^" "^", FOLLOW [268] -> GOTO 38
	typespec/L1 = "const" . typename "^" "^" "&", FOLLOW [268] -> GOTO 38
	typename/L1 = . IDENT, FOLLOW [270] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [270] -> SHIFT IDENT GOTO 17
[19]
	typepath/L1 = . typename, FOLLOW [13] -> GOTO 39
	typedefinition = "typedef" . typepath IDENT, FOLLOW [15] -> GOTO 40
	typename/L1 = . IDENT, FOLLOW [13] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [13] -> SHIFT IDENT GOTO 17
[20]
	structdefinition = "struct" . IDENT "{" struct_definitionlist "}", FOLLOW [175] -> SHIFT IDENT GOTO 41
[21]
	interfacedefinition = "interface" . IDENT "{" interface_definitionlist "}", FOLLOW [175] -> SHIFT IDENT GOTO 42
[22]
	classdefinition = "class" . IDENT "{" class_definitionlist "}", FOLLOW [175] -> SHIFT IDENT GOTO 43
	classdefinition = "class" . IDENT ":" inheritlist "{" class_definitionlist "}", FOLLOW [175] -> SHIFT IDENT GOTO 43
[23]
	linkage = "private" . (34), FOLLOW [173] -> REDUCE linkage #1 CALL linkage {private=true,linkage="internal"}
[24]
	linkage = "public" . (35), FOLLOW [173] -> REDUCE linkage #1 CALL linkage {private=false,linkage="external"}
[25]
	extern_definitionlist = extern_definition extern_definitionlist ., FOLLOW [1] -> REDUCE extern_definitionlist #2
[26]
	extern_definition = "extern" DQSTRING . "function" IDENT typespec "(" extern_paramlist ")" ";", FOLLOW [59] -> SHIFT "function" GOTO 44
	extern_definition = "extern" DQSTRING . "function" IDENT typespec "(" extern_paramlist "..." ")" ";", FOLLOW [59] -> SHIFT "function" GOTO 44
	extern_definition = "extern" DQSTRING . "procedure" IDENT "(" extern_paramlist ")" ";", FOLLOW [59] -> SHIFT "procedure" GOTO 45
	extern_definition = "extern" DQSTRING . "procedure" IDENT "(" extern_paramlist "..." ")" ";", FOLLOW [59] -> SHIFT "procedure" GOTO 45
[27]
	program = extern_definitionlist free_definitionlist main_procedure . (1) -> ACCEPT
	program = extern_definitionlist free_definitionlist main_procedure . (1), FOLLOW [0] -> REDUCE program #3 CALL program
[28]
	main_procedure = "main" . "{" codeblock "}", FOLLOW [0] -> SHIFT '{' GOTO 46
[29]
	free_definitionlist = free_definition free_definitionlist ., FOLLOW [2] -> REDUCE free_definitionlist #2
[30]
	typespec/L1 = typename "&" . (19), FOLLOW [268] -> REDUCE typespec #2 CALL typespec "&"
[31]
	typespec/L1 = typename "^" . "&", FOLLOW [268] -> SHIFT '&' GOTO 47
	typespec/L1 = typename "^" . "^", FOLLOW [268] -> SHIFT '^' GOTO 48
	typespec/L1 = typename "^" . "^" "&", FOLLOW [268] -> SHIFT '^' GOTO 48
	typespec/L1 = typename "^" . (21), FOLLOW [268] -> REDUCE typespec #2 CALL typespec "^"
[32]
	variabledefinition = typespec IDENT . "=" expression, FOLLOW [15] -> SHIFT '=' GOTO 49
	variabledefinition = typespec IDENT . "[" expression "]" "=" expression, FOLLOW [15] -> SHIFT '[' GOTO 50
	variabledefinition = typespec IDENT . "[" expression "]", FOLLOW [15] -> SHIFT '[' GOTO 50
	variabledefinition = typespec IDENT . (step:81), FOLLOW [15] -> REDUCE variabledefinition #2 CALL vardef
[33]
	struct_definition = typedefinition ";" . (15), FOLLOW [170] -> REDUCE struct_definition #2 CALL definition 1
[34]
	functiondefinition = linkage "function" . IDENT typespec callablebody, FOLLOW [252] -> SHIFT IDENT GOTO 51
	functiondefinition = linkage "function" . IDENT typespec callablebody_const, FOLLOW [252] -> SHIFT IDENT GOTO 51
[35]
	functiondefinition = linkage "procedure" . IDENT callablebody, FOLLOW [252] -> SHIFT IDENT GOTO 52
	functiondefinition = linkage "procedure" . IDENT callablebody_const, FOLLOW [252] -> SHIFT IDENT GOTO 52
[36]
	struct_definition = variabledefinition ";" . (15), FOLLOW [170] -> REDUCE struct_definition #2 CALL definition 1
[37]
	typename/L1 = IDENT "::" . typename, FOLLOW [273] -> GOTO 53
	typename/L1 = . IDENT, FOLLOW [273] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [273] -> SHIFT IDENT GOTO 17
[38]
	typespec/L1 = "const" typename . "&", FOLLOW [268] -> SHIFT '&' GOTO 54
	typespec/L1 = "const" typename . "^", FOLLOW [268] -> SHIFT '^' GOTO 55
	typespec/L1 = "const" typename . "^" "&", FOLLOW [268] -> SHIFT '^' GOTO 55
	typespec/L1 = "const" typename . "^" "^", FOLLOW [268] -> SHIFT '^' GOTO 55
	typespec/L1 = "const" typename . "^" "^" "&", FOLLOW [268] -> SHIFT '^' GOTO 55
	typespec/L1 = "const" typename . (18), FOLLOW [268] -> REDUCE typespec #2 CALL typespec "const "
[39]
	typepath/L1 = typename . (17), FOLLOW [274] -> REDUCE typepath #1 CALL typespec ""
[40]
	typedefinition = "typedef" typepath . IDENT, FOLLOW [15] -> SHIFT IDENT GOTO 56
[41]
	structdefinition = "struct" IDENT . "{" struct_definitionlist "}", FOLLOW [175] -> SHIFT '{' GOTO 57
[42]
	interfacedefinition = "interface" IDENT . "{" interface_definitionlist "}", FOLLOW [175] -> SHIFT '{' GOTO 58
[43]
	classdefinition = "class" IDENT . "{" class_definitionlist "}", FOLLOW [175] -> SHIFT '{' GOTO 59
	classdefinition = "class" IDENT . ":" inheritlist "{" class_definitionlist "}", FOLLOW [175] -> SHIFT ':' GOTO 60
[44]
	extern_definition = "extern" DQSTRING "function" . IDENT typespec "(" extern_paramlist ")" ";", FOLLOW [59] -> SHIFT IDENT GOTO 61
	extern_definition = "extern" DQSTRING "function" . IDENT typespec "(" extern_paramlist "..." ")" ";", FOLLOW [59] -> SHIFT IDENT GOTO 61
[45]
	extern_definition = "extern" DQSTRING "procedure" . IDENT "(" extern_paramlist ")" ";", FOLLOW [59] -> SHIFT IDENT GOTO 62
	extern_definition = "extern" DQSTRING "procedure" . IDENT "(" extern_paramlist "..." ")" ";", FOLLOW [59] -> SHIFT IDENT GOTO 62
[46]
	statement/L1 = . typedefinition ";", FOLLOW [98] -> GOTO 63
	functiondefinition = . linkage "function" IDENT typespec callablebody, FOLLOW [98] -> GOTO 14
	functiondefinition = . linkage "function" IDENT typespec callablebody_const, FOLLOW [98] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [98] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody_const, FOLLOW [98] -> GOTO 14
	statement/L1 = . functiondefinition, FOLLOW [98] -> GOTO 64
	main_procedure = "main" "{" . codeblock "}", FOLLOW [0] -> GOTO 65
	codeblock = . statementlist, FOLLOW [18] -> GOTO 66
	statementlist = . statement statementlist, FOLLOW [18] -> GOTO 67
	statement/L1 = . expression ";", FOLLOW [98] -> GOTO 68
	expression/L3 = . expression "=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "+=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "-=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "*=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "/=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "^=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "&=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "%=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "&&=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "||=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "&=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "|=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "<<=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression ">>=" expression, FOLLOW [97] -> GOTO 68
	expression/L4 = . expression "||" expression, FOLLOW [97] -> GOTO 68
	expression/L5 = . expression "&&" expression, FOLLOW [97] -> GOTO 68
	expression/L6 = . expression "|" expression, FOLLOW [97] -> GOTO 68
	expression/L7 = . expression "^" expression, FOLLOW [97] -> GOTO 68
	expression/L7 = . expression "&" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression "==" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression "!=" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression "<=" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression "<" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression ">=" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression ">" expression, FOLLOW [97] -> GOTO 68
	expression/L9 = . expression "+" expression, FOLLOW [97] -> GOTO 68
	expression/L9 = . expression "-" expression, FOLLOW [97] -> GOTO 68
	expression/L10 = . expression "*" expression, FOLLOW [97] -> GOTO 68
	expression/L10 = . expression "/" expression, FOLLOW [97] -> GOTO 68
	expression/L10 = . expression "%" expression, FOLLOW [97] -> GOTO 68
	expression/L11 = . expression "<<" expression, FOLLOW [97] -> GOTO 68
	expression/L11 = . expression ">>" expression, FOLLOW [97] -> GOTO 68
	expression/L12 = . expression "." IDENT, FOLLOW [97] -> GOTO 68
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [97] -> GOTO 68
	expression/L13 = . expression "(" ")", FOLLOW [97] -> GOTO 68
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [97] -> GOTO 68
	iexpression = . expression indirection IDENT, FOLLOW [97] -> GOTO 68
	expression/L12 = . iexpression, FOLLOW [97] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [97] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [97] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [97] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [97] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [97] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [97] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [97] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [97] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [97] -> SHIFT '&' GOTO 78
	typedefinition = . "typedef" typepath IDENT, FOLLOW [15] -> SHIFT "typedef" GOTO 19
	statement/L1 = . "{" codeblock "}", FOLLOW [98] -> SHIFT '{' GOTO 79
	expression/L1 = . "{" expressionlist "}", FOLLOW [97] -> SHIFT '{' GOTO 79
	expression/L1 = . "{" "}", FOLLOW [97] -> SHIFT '{' GOTO 79
	linkage = . "private", FOLLOW [61] -> SHIFT "private" GOTO 23
	linkage = . "public", FOLLOW [61] -> SHIFT "public" GOTO 24
	expression/L9 = . "+" expression, FOLLOW [97] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [97] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [97] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [97] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [97] -> SHIFT '!' GOTO 84
	statement/L1 = . "var" variabledefinition ";", FOLLOW [98] -> SHIFT "var" GOTO 85
	statement/L1 = . "return" expression ";", FOLLOW [98] -> SHIFT "return" GOTO 86
	statement/L1 = . "delete" expression ";", FOLLOW [98] -> SHIFT "delete" GOTO 87
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}", FOLLOW [98] -> SHIFT "if" GOTO 88
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}", FOLLOW [98] -> SHIFT "if" GOTO 88
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}", FOLLOW [98] -> SHIFT "while" GOTO 89
	expression/L1 = . "new" typespec ":" expression, FOLLOW [97] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [97] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [97] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [97] -> SHIFT "null" GOTO 92
	statementlist = ., FOLLOW [18] -> REDUCE statementlist #0
	linkage = . (35), FOLLOW [61] -> REDUCE linkage #0 CALL linkage {private=false,linkage="external"}
[47]
	typespec/L1 = typename "^" "&" . (23), FOLLOW [268] -> REDUCE typespec #3 CALL typespec "^&"
[48]
	typespec/L1 = typename "^" "^" . "&", FOLLOW [268] -> SHIFT '&' GOTO 93
	typespec/L1 = typename "^" "^" . (25), FOLLOW [268] -> REDUCE typespec #3 CALL typespec "^^"
[49]
	variabledefinition = typespec IDENT "=" . expression, FOLLOW [15] -> GOTO 94
	expression/L3 = . expression "=" expression, FOLLOW [97] -> GOTO 94
	expression/L3 = . expression "+=" expression, FOLLOW [97] -> GOTO 94
	expression/L3 = . expression "-=" expression, FOLLOW [97] -> GOTO 94
	expression/L3 = . expression "*=" expression, FOLLOW [97] -> GOTO 94
	expression/L3 = . expression "/=" expression, FOLLOW [97] -> GOTO 94
	expression/L3 = . expression "^=" expression, FOLLOW [97] -> GOTO 94
	expression/L3 = . expression "&=" expression, FOLLOW [97] -> GOTO 94
	expression/L3 = . expression "%=" expression, FOLLOW [97] -> GOTO 94
	expression/L3 = . expression "&&=" expression, FOLLOW [97] -> GOTO 94
	expression/L3 = . expression "||=" expression, FOLLOW [97] -> GOTO 94
	expression/L3 = . expression "&=" expression, FOLLOW [97] -> GOTO 94
	expression/L3 = . expression "|=" expression, FOLLOW [97] -> GOTO 94
	expression/L3 = . expression "<<=" expression, FOLLOW [97] -> GOTO 94
	expression/L3 = . expression ">>=" expression, FOLLOW [97] -> GOTO 94
	expression/L4 = . expression "||" expression, FOLLOW [97] -> GOTO 94
	expression/L5 = . expression "&&" expression, FOLLOW [97] -> GOTO 94
	expression/L6 = . expression "|" expression, FOLLOW [97] -> GOTO 94
	expression/L7 = . expression "^" expression, FOLLOW [97] -> GOTO 94
	expression/L7 = . expression "&" expression, FOLLOW [97] -> GOTO 94
	expression/L8 = . expression "==" expression, FOLLOW [97] -> GOTO 94
	expression/L8 = . expression "!=" expression, FOLLOW [97] -> GOTO 94
	expression/L8 = . expression "<=" expression, FOLLOW [97] -> GOTO 94
	expression/L8 = . expression "<" expression, FOLLOW [97] -> GOTO 94
	expression/L8 = . expression ">=" expression, FOLLOW [97] -> GOTO 94
	expression/L8 = . expression ">" expression, FOLLOW [97] -> GOTO 94
	expression/L9 = . expression "+" expression, FOLLOW [97] -> GOTO 94
	expression/L9 = . expression "-" expression, FOLLOW [97] -> GOTO 94
	expression/L10 = . expression "*" expression, FOLLOW [97] -> GOTO 94
	expression/L10 = . expression "/" expression, FOLLOW [97] -> GOTO 94
	expression/L10 = . expression "%" expression, FOLLOW [97] -> GOTO 94
	expression/L11 = . expression "<<" expression, FOLLOW [97] -> GOTO 94
	expression/L11 = . expression ">>" expression, FOLLOW [97] -> GOTO 94
	expression/L12 = . expression "." IDENT, FOLLOW [97] -> GOTO 94
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [97] -> GOTO 94
	expression/L13 = . expression "(" ")", FOLLOW [97] -> GOTO 94
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [97] -> GOTO 94
	iexpression = . expression indirection IDENT, FOLLOW [97] -> GOTO 94
	expression/L12 = . iexpression, FOLLOW [97] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [97] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [97] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [97] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [97] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [97] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [97] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [97] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [97] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [97] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [97] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [97] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [97] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [97] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [97] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [97] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [97] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [97] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [97] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [97] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [97] -> SHIFT "null" GOTO 92
[50]
	variabledefinition = typespec IDENT "[" . expression "]" "=" expression, FOLLOW [15] -> GOTO 96
	variabledefinition = typespec IDENT "[" . expression "]", FOLLOW [15] -> GOTO 96
	expression/L3 = . expression "=" expression, FOLLOW [167] -> GOTO 96
	expression/L3 = . expression "+=" expression, FOLLOW [167] -> GOTO 96
	expression/L3 = . expression "-=" expression, FOLLOW [167] -> GOTO 96
	expression/L3 = . expression "*=" expression, FOLLOW [167] -> GOTO 96
	expression/L3 = . expression "/=" expression, FOLLOW [167] -> GOTO 96
	expression/L3 = . expression "^=" expression, FOLLOW [167] -> GOTO 96
	expression/L3 = . expression "&=" expression, FOLLOW [167] -> GOTO 96
	expression/L3 = . expression "%=" expression, FOLLOW [167] -> GOTO 96
	expression/L3 = . expression "&&=" expression, FOLLOW [167] -> GOTO 96
	expression/L3 = . expression "||=" expression, FOLLOW [167] -> GOTO 96
	expression/L3 = . expression "&=" expression, FOLLOW [167] -> GOTO 96
	expression/L3 = . expression "|=" expression, FOLLOW [167] -> GOTO 96
	expression/L3 = . expression "<<=" expression, FOLLOW [167] -> GOTO 96
	expression/L3 = . expression ">>=" expression, FOLLOW [167] -> GOTO 96
	expression/L4 = . expression "||" expression, FOLLOW [167] -> GOTO 96
	expression/L5 = . expression "&&" expression, FOLLOW [167] -> GOTO 96
	expression/L6 = . expression "|" expression, FOLLOW [167] -> GOTO 96
	expression/L7 = . expression "^" expression, FOLLOW [167] -> GOTO 96
	expression/L7 = . expression "&" expression, FOLLOW [167] -> GOTO 96
	expression/L8 = . expression "==" expression, FOLLOW [167] -> GOTO 96
	expression/L8 = . expression "!=" expression, FOLLOW [167] -> GOTO 96
	expression/L8 = . expression "<=" expression, FOLLOW [167] -> GOTO 96
	expression/L8 = . expression "<" expression, FOLLOW [167] -> GOTO 96
	expression/L8 = . expression ">=" expression, FOLLOW [167] -> GOTO 96
	expression/L8 = . expression ">" expression, FOLLOW [167] -> GOTO 96
	expression/L9 = . expression "+" expression, FOLLOW [167] -> GOTO 96
	expression/L9 = . expression "-" expression, FOLLOW [167] -> GOTO 96
	expression/L10 = . expression "*" expression, FOLLOW [167] -> GOTO 96
	expression/L10 = . expression "/" expression, FOLLOW [167] -> GOTO 96
	expression/L10 = . expression "%" expression, FOLLOW [167] -> GOTO 96
	expression/L11 = . expression "<<" expression, FOLLOW [167] -> GOTO 96
	expression/L11 = . expression ">>" expression, FOLLOW [167] -> GOTO 96
	expression/L12 = . expression "." IDENT, FOLLOW [167] -> GOTO 96
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [167] -> GOTO 96
	expression/L13 = . expression "(" ")", FOLLOW [167] -> GOTO 96
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [167] -> GOTO 96
	iexpression = . expression indirection IDENT, FOLLOW [167] -> GOTO 96
	expression/L12 = . iexpression, FOLLOW [167] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [167] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [167] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [167] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [167] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [167] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [167] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [167] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [167] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [167] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [167] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [167] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [167] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [167] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [167] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [167] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [167] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [167] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [167] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [167] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [167] -> SHIFT "null" GOTO 92
[51]
	typespec/L1 = . typename, FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [9] -> GOTO 8
	functiondefinition = linkage "function" IDENT . typespec callablebody, FOLLOW [252] -> GOTO 97
	functiondefinition = linkage "function" IDENT . typespec callablebody_const, FOLLOW [252] -> GOTO 97
	typename/L1 = . IDENT, FOLLOW [168] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [168] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
[52]
	functiondefinition = linkage "procedure" IDENT . callablebody, FOLLOW [252] -> GOTO 98
	functiondefinition = linkage "procedure" IDENT . callablebody_const, FOLLOW [252] -> GOTO 99
	callablebody = . "(" parameterlist ")" "{" codeblock "}", FOLLOW [252] -> SHIFT '(' GOTO 100
	callablebody_const = . "(" parameterlist ")" "const" "{" codeblock "}", FOLLOW [252] -> SHIFT '(' GOTO 100
[53]
	typename/L1 = IDENT "::" typename ., FOLLOW [273] -> REDUCE typename #3
[54]
	typespec/L1 = "const" typename "&" . (20), FOLLOW [268] -> REDUCE typespec #3 CALL typespec "const&"
[55]
	typespec/L1 = "const" typename "^" . "&", FOLLOW [268] -> SHIFT '&' GOTO 101
	typespec/L1 = "const" typename "^" . "^", FOLLOW [268] -> SHIFT '^' GOTO 102
	typespec/L1 = "const" typename "^" . "^" "&", FOLLOW [268] -> SHIFT '^' GOTO 102
	typespec/L1 = "const" typename "^" . (22), FOLLOW [268] -> REDUCE typespec #3 CALL typespec "const^"
[56]
	typedefinition = "typedef" typepath IDENT . (step:29), FOLLOW [15] -> REDUCE typedefinition #3 CALL typedef
[57]
	structdefinition = "struct" IDENT "{" . struct_definitionlist "}", FOLLOW [175] -> GOTO 103
	struct_definitionlist = . struct_definition struct_definitionlist, FOLLOW [18] -> GOTO 104
	typespec/L1 = . typename, FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [13] -> GOTO 8
	variabledefinition = . typespec IDENT, FOLLOW [15] -> GOTO 9
	variabledefinition = . typespec IDENT "=" expression, FOLLOW [15] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression, FOLLOW [15] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]", FOLLOW [15] -> GOTO 9
	struct_definition = . typedefinition ";", FOLLOW [169] -> GOTO 10
	struct_definition = . structdefinition, FOLLOW [169] -> GOTO 11
	struct_definition = . variabledefinition ";", FOLLOW [169] -> GOTO 16
	typename/L1 = . IDENT, FOLLOW [62] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [62] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [13] -> SHIFT "const" GOTO 18
	typedefinition = . "typedef" typepath IDENT, FOLLOW [15] -> SHIFT "typedef" GOTO 19
	structdefinition = . "struct" IDENT "{" struct_definitionlist "}", FOLLOW [175] -> SHIFT "struct" GOTO 20
	struct_definitionlist = ., FOLLOW [18] -> REDUCE struct_definitionlist #0
[58]
	interfacedefinition = "interface" IDENT "{" . interface_definitionlist "}", FOLLOW [175] -> GOTO 105
	interface_definitionlist = . interface_definition interface_definitionlist, FOLLOW [18] -> GOTO 106
	interface_definition = . "function" IDENT typespec "(" extern_paramlist ")" ";", FOLLOW [171] -> SHIFT "function" GOTO 107
	interface_definition = . "function" IDENT typespec "(" extern_paramlist ")" "const" ";", FOLLOW [171] -> SHIFT "function" GOTO 107
	interface_definition = . "procedure" IDENT "(" extern_paramlist ")" ";", FOLLOW [171] -> SHIFT "procedure" GOTO 108
	interface_definition = . "procedure" IDENT "(" extern_paramlist ")" "const" ";", FOLLOW [171] -> SHIFT "procedure" GOTO 108
	interface_definition = . "operator" operatordecl typespec "(" extern_paramlist ")" ";", FOLLOW [171] -> SHIFT "operator" GOTO 109
	interface_definition = . "operator" operatordecl typespec "(" extern_paramlist ")" "const" ";", FOLLOW [171] -> SHIFT "operator" GOTO 109
	interface_definition = . "operator" operatordecl "(" extern_paramlist ")" ";", FOLLOW [171] -> SHIFT "operator" GOTO 109
	interface_definition = . "operator" operatordecl "(" extern_paramlist ")" "const" ";", FOLLOW [171] -> SHIFT "operator" GOTO 109
	interface_definitionlist = ., FOLLOW [18] -> REDUCE interface_definitionlist #0
[59]
	classdefinition = "class" IDENT "{" . class_definitionlist "}", FOLLOW [175] -> GOTO 110
	class_definitionlist = . class_definition class_definitionlist, FOLLOW [18] -> GOTO 111
	typespec/L1 = . typename, FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [13] -> GOTO 8
	variabledefinition = . typespec IDENT, FOLLOW [15] -> GOTO 9
	variabledefinition = . typespec IDENT "=" expression, FOLLOW [15] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression, FOLLOW [15] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]", FOLLOW [15] -> GOTO 9
	class_definition = . typedefinition ";", FOLLOW [174] -> GOTO 112
	class_definition = . structdefinition, FOLLOW [174] -> GOTO 113
	class_definition = . interfacedefinition, FOLLOW [174] -> GOTO 114
	class_definition = . classdefinition, FOLLOW [174] -> GOTO 115
	functiondefinition = . linkage "function" IDENT typespec callablebody, FOLLOW [174] -> GOTO 116
	functiondefinition = . linkage "function" IDENT typespec callablebody_const, FOLLOW [174] -> GOTO 116
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [174] -> GOTO 116
	functiondefinition = . linkage "procedure" IDENT callablebody_const, FOLLOW [174] -> GOTO 116
	constructordefinition = . linkage "constructor" callablebody, FOLLOW [174] -> GOTO 116
	operatordefinition = . linkage "operator" operatordecl typespec callablebody, FOLLOW [174] -> GOTO 116
	operatordefinition = . linkage "operator" operatordecl typespec callablebody_const, FOLLOW [174] -> GOTO 116
	operatordefinition = . linkage "operator" operatordecl callablebody, FOLLOW [174] -> GOTO 116
	operatordefinition = . linkage "operator" operatordecl callablebody_const, FOLLOW [174] -> GOTO 116
	class_definition = . functiondefinition, FOLLOW [174] -> GOTO 117
	class_definition = . constructordefinition, FOLLOW [174] -> GOTO 118
	class_definition = . operatordefinition, FOLLOW [174] -> GOTO 119
	class_definition = . variabledefinition ";", FOLLOW [174] -> GOTO 120
	typename/L1 = . IDENT, FOLLOW [62] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [62] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [13] -> SHIFT "const" GOTO 18
	typedefinition = . "typedef" typepath IDENT, FOLLOW [15] -> SHIFT "typedef" GOTO 19
	structdefinition = . "struct" IDENT "{" struct_definitionlist "}", FOLLOW [174] -> SHIFT "struct" GOTO 20
	interfacedefinition = . "interface" IDENT "{" interface_definitionlist "}", FOLLOW [174] -> SHIFT "interface" GOTO 21
	classdefinition = . "class" IDENT "{" class_definitionlist "}", FOLLOW [175] -> SHIFT "class" GOTO 22
	classdefinition = . "class" IDENT ":" inheritlist "{" class_definitionlist "}", FOLLOW [175] -> SHIFT "class" GOTO 22
	linkage = . "private", FOLLOW [173] -> SHIFT "private" GOTO 23
	linkage = . "public", FOLLOW [173] -> SHIFT "public" GOTO 24
	constructordefinition = . "destructor" "{" codeblock "}", FOLLOW [174] -> SHIFT "destructor" GOTO 121
	class_definitionlist = ., FOLLOW [18] -> REDUCE class_definitionlist #0
	linkage = . (35), FOLLOW [173] -> REDUCE linkage #0 CALL linkage {private=false,linkage="external"}
[60]
	typepath/L1 = . typename, FOLLOW [176] -> GOTO 39
	inheritlist = . typepath "," inheritlist, FOLLOW [19] -> GOTO 122
	inheritlist = . typepath, FOLLOW [19] -> GOTO 122
	classdefinition = "class" IDENT ":" . inheritlist "{" class_definitionlist "}", FOLLOW [175] -> GOTO 123
	typename/L1 = . IDENT, FOLLOW [176] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [176] -> SHIFT IDENT GOTO 17
[61]
	typespec/L1 = . typename, FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [9] -> GOTO 8
	extern_definition = "extern" DQSTRING "function" IDENT . typespec "(" extern_paramlist ")" ";", FOLLOW [59] -> GOTO 124
	extern_definition = "extern" DQSTRING "function" IDENT . typespec "(" extern_paramlist "..." ")" ";", FOLLOW [59] -> GOTO 124
	typename/L1 = . IDENT, FOLLOW [168] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [168] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
[62]
	extern_definition = "extern" DQSTRING "procedure" IDENT . "(" extern_paramlist ")" ";", FOLLOW [59] -> SHIFT '(' GOTO 125
	extern_definition = "extern" DQSTRING "procedure" IDENT . "(" extern_paramlist "..." ")" ";", FOLLOW [59] -> SHIFT '(' GOTO 125
[63]
	statement/L1 = typedefinition . ";", FOLLOW [98] -> SHIFT ';' GOTO 126
[64]
	statement/L1 = functiondefinition . (74), FOLLOW [98] -> REDUCE statement #1 CALL definition
[65]
	main_procedure = "main" "{" codeblock . "}", FOLLOW [0] -> SHIFT '}' GOTO 127
[66]
	codeblock = statementlist . (73), FOLLOW [18] -> REDUCE codeblock #1 CALL codeblock
[67]
	statement/L1 = . typedefinition ";", FOLLOW [98] -> GOTO 63
	functiondefinition = . linkage "function" IDENT typespec callablebody, FOLLOW [98] -> GOTO 14
	functiondefinition = . linkage "function" IDENT typespec callablebody_const, FOLLOW [98] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [98] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody_const, FOLLOW [98] -> GOTO 14
	statement/L1 = . functiondefinition, FOLLOW [98] -> GOTO 64
	statementlist = statement . statementlist, FOLLOW [18] -> GOTO 128
	statementlist = . statement statementlist, FOLLOW [18] -> GOTO 67
	statement/L1 = . expression ";", FOLLOW [98] -> GOTO 68
	expression/L3 = . expression "=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "+=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "-=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "*=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "/=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "^=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "&=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "%=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "&&=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "||=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "&=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "|=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "<<=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression ">>=" expression, FOLLOW [97] -> GOTO 68
	expression/L4 = . expression "||" expression, FOLLOW [97] -> GOTO 68
	expression/L5 = . expression "&&" expression, FOLLOW [97] -> GOTO 68
	expression/L6 = . expression "|" expression, FOLLOW [97] -> GOTO 68
	expression/L7 = . expression "^" expression, FOLLOW [97] -> GOTO 68
	expression/L7 = . expression "&" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression "==" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression "!=" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression "<=" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression "<" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression ">=" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression ">" expression, FOLLOW [97] -> GOTO 68
	expression/L9 = . expression "+" expression, FOLLOW [97] -> GOTO 68
	expression/L9 = . expression "-" expression, FOLLOW [97] -> GOTO 68
	expression/L10 = . expression "*" expression, FOLLOW [97] -> GOTO 68
	expression/L10 = . expression "/" expression, FOLLOW [97] -> GOTO 68
	expression/L10 = . expression "%" expression, FOLLOW [97] -> GOTO 68
	expression/L11 = . expression "<<" expression, FOLLOW [97] -> GOTO 68
	expression/L11 = . expression ">>" expression, FOLLOW [97] -> GOTO 68
	expression/L12 = . expression "." IDENT, FOLLOW [97] -> GOTO 68
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [97] -> GOTO 68
	expression/L13 = . expression "(" ")", FOLLOW [97] -> GOTO 68
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [97] -> GOTO 68
	iexpression = . expression indirection IDENT, FOLLOW [97] -> GOTO 68
	expression/L12 = . iexpression, FOLLOW [97] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [97] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [97] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [97] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [97] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [97] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [97] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [97] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [97] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [97] -> SHIFT '&' GOTO 78
	typedefinition = . "typedef" typepath IDENT, FOLLOW [15] -> SHIFT "typedef" GOTO 19
	statement/L1 = . "{" codeblock "}", FOLLOW [98] -> SHIFT '{' GOTO 79
	expression/L1 = . "{" expressionlist "}", FOLLOW [97] -> SHIFT '{' GOTO 79
	expression/L1 = . "{" "}", FOLLOW [97] -> SHIFT '{' GOTO 79
	linkage = . "private", FOLLOW [61] -> SHIFT "private" GOTO 23
	linkage = . "public", FOLLOW [61] -> SHIFT "public" GOTO 24
	expression/L9 = . "+" expression, FOLLOW [97] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [97] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [97] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [97] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [97] -> SHIFT '!' GOTO 84
	statement/L1 = . "var" variabledefinition ";", FOLLOW [98] -> SHIFT "var" GOTO 85
	statement/L1 = . "return" expression ";", FOLLOW [98] -> SHIFT "return" GOTO 86
	statement/L1 = . "delete" expression ";", FOLLOW [98] -> SHIFT "delete" GOTO 87
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}", FOLLOW [98] -> SHIFT "if" GOTO 88
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}", FOLLOW [98] -> SHIFT "if" GOTO 88
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}", FOLLOW [98] -> SHIFT "while" GOTO 89
	expression/L1 = . "new" typespec ":" expression, FOLLOW [97] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [97] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [97] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [97] -> SHIFT "null" GOTO 92
	statementlist = ., FOLLOW [18] -> REDUCE statementlist #0
	linkage = . (35), FOLLOW [61] -> REDUCE linkage #0 CALL linkage {private=false,linkage="external"}
[68]
	iexpression = expression . indirection IDENT, FOLLOW [97] -> GOTO 129
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [97] -> SHIFT '(' GOTO 130
	expression/L13 = expression . "(" ")", FOLLOW [97] -> SHIFT '(' GOTO 130
	statement/L1 = expression . ";", FOLLOW [98] -> SHIFT ';' GOTO 131
	expression/L7 = expression . "&" expression, FOLLOW [97] -> SHIFT '&' GOTO 132
	expression/L7 = expression . "^" expression, FOLLOW [97] -> SHIFT '^' GOTO 133
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 134
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 134
	expression/L3 = expression . "=" expression, FOLLOW [97] -> SHIFT '=' GOTO 135
	expression/L9 = expression . "+" expression, FOLLOW [97] -> SHIFT '+' GOTO 136
	expression/L9 = expression . "-" expression, FOLLOW [97] -> SHIFT '-' GOTO 137
	expression/L10 = expression . "*" expression, FOLLOW [97] -> SHIFT '*' GOTO 138
	expression/L10 = expression . "/" expression, FOLLOW [97] -> SHIFT '/' GOTO 139
	expression/L10 = expression . "%" expression, FOLLOW [97] -> SHIFT '%' GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [97] -> SHIFT "&&" GOTO 141
	expression/L4 = expression . "||" expression, FOLLOW [97] -> SHIFT "||" GOTO 142
	expression/L6 = expression . "|" expression, FOLLOW [97] -> SHIFT '|' GOTO 143
	expression/L11 = expression . "<<" expression, FOLLOW [97] -> SHIFT "<<" GOTO 144
	expression/L11 = expression . ">>" expression, FOLLOW [97] -> SHIFT ">>" GOTO 145
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [97] -> SHIFT '[' GOTO 146
	expression/L8 = expression . "==" expression, FOLLOW [97] -> SHIFT "==" GOTO 147
	expression/L8 = expression . "!=" expression, FOLLOW [97] -> SHIFT "!=" GOTO 148
	expression/L8 = expression . ">=" expression, FOLLOW [97] -> SHIFT ">=" GOTO 149
	expression/L8 = expression . "<=" expression, FOLLOW [97] -> SHIFT "<=" GOTO 150
	expression/L8 = expression . ">" expression, FOLLOW [97] -> SHIFT '>' GOTO 151
	expression/L8 = expression . "<" expression, FOLLOW [97] -> SHIFT '<' GOTO 152
	expression/L3 = expression . "+=" expression, FOLLOW [97] -> SHIFT "+=" GOTO 153
	expression/L3 = expression . "-=" expression, FOLLOW [97] -> SHIFT "-=" GOTO 154
	expression/L3 = expression . "*=" expression, FOLLOW [97] -> SHIFT "*=" GOTO 155
	expression/L3 = expression . "/=" expression, FOLLOW [97] -> SHIFT "/=" GOTO 156
	expression/L3 = expression . "^=" expression, FOLLOW [97] -> SHIFT "^=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [97] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "&=" expression, FOLLOW [97] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "%=" expression, FOLLOW [97] -> SHIFT "%=" GOTO 159
	expression/L3 = expression . "&&=" expression, FOLLOW [97] -> SHIFT "&&=" GOTO 160
	expression/L3 = expression . "||=" expression, FOLLOW [97] -> SHIFT "||=" GOTO 161
	expression/L3 = expression . "|=" expression, FOLLOW [97] -> SHIFT "|=" GOTO 162
	expression/L3 = expression . "<<=" expression, FOLLOW [97] -> SHIFT "<<=" GOTO 163
	expression/L3 = expression . ">>=" expression, FOLLOW [97] -> SHIFT ">>=" GOTO 164
	expression/L12 = expression . "." IDENT, FOLLOW [97] -> SHIFT '.' GOTO 165
[69]
	expression/L12 = iexpression ., FOLLOW [239] -> REDUCE expression #1
[70]
	expression/L2 = BOOLEAN . (89), FOLLOW [239] -> REDUCE expression #1 CALL constant "constexpr bool"
[71]
	expression/L2 = IDENT . (88), FOLLOW [239] -> REDUCE expression #1 CALL variable
[72]
	expression/L2 = DQSTRING . (94), FOLLOW [239] -> REDUCE expression #1 CALL string_constant "constexpr float"
[73]
	expression/L2 = SQSTRING . (95), FOLLOW [239] -> REDUCE expression #1 CALL char_constant "constexpr float"
[74]
	expression/L2 = CARDINAL . (90), FOLLOW [239] -> REDUCE expression #1 CALL constant "constexpr uint"
[75]
	expression/L2 = INTEGER . (91), FOLLOW [239] -> REDUCE expression #1 CALL constant "constexpr int"
[76]
	expression/L2 = FLOAT . (92), FOLLOW [239] -> REDUCE expression #1 CALL constant "constexpr float"
[77]
	expression/L2 = "(" . expression ")", FOLLOW [239] -> GOTO 166
	expression/L3 = . expression "=" expression, FOLLOW [239] -> GOTO 166
	expression/L3 = . expression "+=" expression, FOLLOW [239] -> GOTO 166
	expression/L3 = . expression "-=" expression, FOLLOW [239] -> GOTO 166
	expression/L3 = . expression "*=" expression, FOLLOW [239] -> GOTO 166
	expression/L3 = . expression "/=" expression, FOLLOW [239] -> GOTO 166
	expression/L3 = . expression "^=" expression, FOLLOW [239] -> GOTO 166
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 166
	expression/L3 = . expression "%=" expression, FOLLOW [239] -> GOTO 166
	expression/L3 = . expression "&&=" expression, FOLLOW [239] -> GOTO 166
	expression/L3 = . expression "||=" expression, FOLLOW [239] -> GOTO 166
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 166
	expression/L3 = . expression "|=" expression, FOLLOW [239] -> GOTO 166
	expression/L3 = . expression "<<=" expression, FOLLOW [239] -> GOTO 166
	expression/L3 = . expression ">>=" expression, FOLLOW [239] -> GOTO 166
	expression/L4 = . expression "||" expression, FOLLOW [239] -> GOTO 166
	expression/L5 = . expression "&&" expression, FOLLOW [239] -> GOTO 166
	expression/L6 = . expression "|" expression, FOLLOW [239] -> GOTO 166
	expression/L7 = . expression "^" expression, FOLLOW [239] -> GOTO 166
	expression/L7 = . expression "&" expression, FOLLOW [239] -> GOTO 166
	expression/L8 = . expression "==" expression, FOLLOW [239] -> GOTO 166
	expression/L8 = . expression "!=" expression, FOLLOW [239] -> GOTO 166
	expression/L8 = . expression "<=" expression, FOLLOW [239] -> GOTO 166
	expression/L8 = . expression "<" expression, FOLLOW [239] -> GOTO 166
	expression/L8 = . expression ">=" expression, FOLLOW [239] -> GOTO 166
	expression/L8 = . expression ">" expression, FOLLOW [239] -> GOTO 166
	expression/L9 = . expression "+" expression, FOLLOW [239] -> GOTO 166
	expression/L9 = . expression "-" expression, FOLLOW [239] -> GOTO 166
	expression/L10 = . expression "*" expression, FOLLOW [239] -> GOTO 166
	expression/L10 = . expression "/" expression, FOLLOW [239] -> GOTO 166
	expression/L10 = . expression "%" expression, FOLLOW [239] -> GOTO 166
	expression/L11 = . expression "<<" expression, FOLLOW [239] -> GOTO 166
	expression/L11 = . expression ">>" expression, FOLLOW [239] -> GOTO 166
	expression/L12 = . expression "." IDENT, FOLLOW [239] -> GOTO 166
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [239] -> GOTO 166
	expression/L13 = . expression "(" ")", FOLLOW [239] -> GOTO 166
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [239] -> GOTO 166
	iexpression = . expression indirection IDENT, FOLLOW [239] -> GOTO 166
	expression/L12 = . iexpression, FOLLOW [239] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [239] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [239] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [239] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [239] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [239] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [239] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [239] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [239] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [239] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [239] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [239] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [239] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [239] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [239] -> SHIFT "null" GOTO 92
[78]
	expression/L3 = . expression "=" expression, FOLLOW [239] -> GOTO 167
	expression/L3 = . expression "+=" expression, FOLLOW [239] -> GOTO 167
	expression/L3 = . expression "-=" expression, FOLLOW [239] -> GOTO 167
	expression/L3 = . expression "*=" expression, FOLLOW [239] -> GOTO 167
	expression/L3 = . expression "/=" expression, FOLLOW [239] -> GOTO 167
	expression/L3 = . expression "^=" expression, FOLLOW [239] -> GOTO 167
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 167
	expression/L3 = . expression "%=" expression, FOLLOW [239] -> GOTO 167
	expression/L3 = . expression "&&=" expression, FOLLOW [239] -> GOTO 167
	expression/L3 = . expression "||=" expression, FOLLOW [239] -> GOTO 167
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 167
	expression/L3 = . expression "|=" expression, FOLLOW [239] -> GOTO 167
	expression/L3 = . expression "<<=" expression, FOLLOW [239] -> GOTO 167
	expression/L3 = . expression ">>=" expression, FOLLOW [239] -> GOTO 167
	expression/L4 = . expression "||" expression, FOLLOW [239] -> GOTO 167
	expression/L5 = . expression "&&" expression, FOLLOW [239] -> GOTO 167
	expression/L6 = . expression "|" expression, FOLLOW [239] -> GOTO 167
	expression/L7 = . expression "^" expression, FOLLOW [239] -> GOTO 167
	expression/L7 = . expression "&" expression, FOLLOW [239] -> GOTO 167
	expression/L8 = . expression "==" expression, FOLLOW [239] -> GOTO 167
	expression/L8 = . expression "!=" expression, FOLLOW [239] -> GOTO 167
	expression/L8 = . expression "<=" expression, FOLLOW [239] -> GOTO 167
	expression/L8 = . expression "<" expression, FOLLOW [239] -> GOTO 167
	expression/L8 = . expression ">=" expression, FOLLOW [239] -> GOTO 167
	expression/L8 = . expression ">" expression, FOLLOW [239] -> GOTO 167
	expression/L9 = . expression "+" expression, FOLLOW [239] -> GOTO 167
	expression/L9 = . expression "-" expression, FOLLOW [239] -> GOTO 167
	expression/L9 = "&" . expression, FOLLOW [239] -> GOTO 167
	expression/L10 = . expression "*" expression, FOLLOW [239] -> GOTO 167
	expression/L10 = . expression "/" expression, FOLLOW [239] -> GOTO 167
	expression/L10 = . expression "%" expression, FOLLOW [239] -> GOTO 167
	expression/L11 = . expression "<<" expression, FOLLOW [239] -> GOTO 167
	expression/L11 = . expression ">>" expression, FOLLOW [239] -> GOTO 167
	expression/L12 = . expression "." IDENT, FOLLOW [239] -> GOTO 167
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [239] -> GOTO 167
	expression/L13 = . expression "(" ")", FOLLOW [239] -> GOTO 167
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [239] -> GOTO 167
	iexpression = . expression indirection IDENT, FOLLOW [239] -> GOTO 167
	expression/L12 = . iexpression, FOLLOW [239] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [239] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [239] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [239] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [239] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [239] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [239] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [239] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [239] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [239] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [239] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [239] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [239] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [239] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [239] -> SHIFT "null" GOTO 92
[79]
	statement/L1 = . typedefinition ";", FOLLOW [98] -> GOTO 63
	functiondefinition = . linkage "function" IDENT typespec callablebody, FOLLOW [98] -> GOTO 14
	functiondefinition = . linkage "function" IDENT typespec callablebody_const, FOLLOW [98] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [98] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody_const, FOLLOW [98] -> GOTO 14
	statement/L1 = . functiondefinition, FOLLOW [98] -> GOTO 64
	statement/L1 = "{" . codeblock "}", FOLLOW [98] -> GOTO 168
	codeblock = . statementlist, FOLLOW [18] -> GOTO 66
	statementlist = . statement statementlist, FOLLOW [18] -> GOTO 67
	statement/L1 = . expression ";", FOLLOW [98] -> GOTO 169
	expression/L3 = . expression "=" expression, FOLLOW [179] -> GOTO 169
	expression/L3 = . expression "+=" expression, FOLLOW [179] -> GOTO 169
	expression/L3 = . expression "-=" expression, FOLLOW [179] -> GOTO 169
	expression/L3 = . expression "*=" expression, FOLLOW [179] -> GOTO 169
	expression/L3 = . expression "/=" expression, FOLLOW [179] -> GOTO 169
	expression/L3 = . expression "^=" expression, FOLLOW [179] -> GOTO 169
	expression/L3 = . expression "&=" expression, FOLLOW [179] -> GOTO 169
	expression/L3 = . expression "%=" expression, FOLLOW [179] -> GOTO 169
	expression/L3 = . expression "&&=" expression, FOLLOW [179] -> GOTO 169
	expression/L3 = . expression "||=" expression, FOLLOW [179] -> GOTO 169
	expression/L3 = . expression "&=" expression, FOLLOW [179] -> GOTO 169
	expression/L3 = . expression "|=" expression, FOLLOW [179] -> GOTO 169
	expression/L3 = . expression "<<=" expression, FOLLOW [179] -> GOTO 169
	expression/L3 = . expression ">>=" expression, FOLLOW [179] -> GOTO 169
	expression/L4 = . expression "||" expression, FOLLOW [179] -> GOTO 169
	expression/L5 = . expression "&&" expression, FOLLOW [179] -> GOTO 169
	expression/L6 = . expression "|" expression, FOLLOW [179] -> GOTO 169
	expression/L7 = . expression "^" expression, FOLLOW [179] -> GOTO 169
	expression/L7 = . expression "&" expression, FOLLOW [179] -> GOTO 169
	expression/L8 = . expression "==" expression, FOLLOW [179] -> GOTO 169
	expression/L8 = . expression "!=" expression, FOLLOW [179] -> GOTO 169
	expression/L8 = . expression "<=" expression, FOLLOW [179] -> GOTO 169
	expression/L8 = . expression "<" expression, FOLLOW [179] -> GOTO 169
	expression/L8 = . expression ">=" expression, FOLLOW [179] -> GOTO 169
	expression/L8 = . expression ">" expression, FOLLOW [179] -> GOTO 169
	expression/L9 = . expression "+" expression, FOLLOW [179] -> GOTO 169
	expression/L9 = . expression "-" expression, FOLLOW [179] -> GOTO 169
	expression/L10 = . expression "*" expression, FOLLOW [179] -> GOTO 169
	expression/L10 = . expression "/" expression, FOLLOW [179] -> GOTO 169
	expression/L10 = . expression "%" expression, FOLLOW [179] -> GOTO 169
	expression/L11 = . expression "<<" expression, FOLLOW [179] -> GOTO 169
	expression/L11 = . expression ">>" expression, FOLLOW [179] -> GOTO 169
	expression/L12 = . expression "." IDENT, FOLLOW [179] -> GOTO 169
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [179] -> GOTO 169
	expression/L13 = . expression "(" ")", FOLLOW [179] -> GOTO 169
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [179] -> GOTO 169
	iexpression = . expression indirection IDENT, FOLLOW [179] -> GOTO 169
	expressionlist = . expression "," expressionlist, FOLLOW [18] -> GOTO 169
	expressionlist = . expression, FOLLOW [18] -> GOTO 169
	expression/L12 = . iexpression, FOLLOW [179] -> GOTO 69
	expression/L1 = "{" . expressionlist "}", FOLLOW [179] -> GOTO 170
	expression/L2 = . BOOLEAN, FOLLOW [179] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [179] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [179] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [179] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [179] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [179] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [179] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [179] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [179] -> SHIFT '&' GOTO 78
	typedefinition = . "typedef" typepath IDENT, FOLLOW [15] -> SHIFT "typedef" GOTO 19
	statement/L1 = . "{" codeblock "}", FOLLOW [98] -> SHIFT '{' GOTO 79
	expression/L1 = . "{" expressionlist "}", FOLLOW [179] -> SHIFT '{' GOTO 79
	expression/L1 = . "{" "}", FOLLOW [179] -> SHIFT '{' GOTO 79
	expression/L1 = "{" . "}", FOLLOW [179] -> SHIFT '}' GOTO 171
	linkage = . "private", FOLLOW [61] -> SHIFT "private" GOTO 23
	linkage = . "public", FOLLOW [61] -> SHIFT "public" GOTO 24
	expression/L9 = . "+" expression, FOLLOW [179] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [179] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [179] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [179] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [179] -> SHIFT '!' GOTO 84
	statement/L1 = . "var" variabledefinition ";", FOLLOW [98] -> SHIFT "var" GOTO 85
	statement/L1 = . "return" expression ";", FOLLOW [98] -> SHIFT "return" GOTO 86
	statement/L1 = . "delete" expression ";", FOLLOW [98] -> SHIFT "delete" GOTO 87
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}", FOLLOW [98] -> SHIFT "if" GOTO 88
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}", FOLLOW [98] -> SHIFT "if" GOTO 88
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}", FOLLOW [98] -> SHIFT "while" GOTO 89
	expression/L1 = . "new" typespec ":" expression, FOLLOW [179] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [179] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [179] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [179] -> SHIFT "null" GOTO 92
	statementlist = ., FOLLOW [18] -> REDUCE statementlist #0
	linkage = . (35), FOLLOW [61] -> REDUCE linkage #0 CALL linkage {private=false,linkage="external"}
[80]
	expression/L3 = . expression "=" expression, FOLLOW [239] -> GOTO 172
	expression/L3 = . expression "+=" expression, FOLLOW [239] -> GOTO 172
	expression/L3 = . expression "-=" expression, FOLLOW [239] -> GOTO 172
	expression/L3 = . expression "*=" expression, FOLLOW [239] -> GOTO 172
	expression/L3 = . expression "/=" expression, FOLLOW [239] -> GOTO 172
	expression/L3 = . expression "^=" expression, FOLLOW [239] -> GOTO 172
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 172
	expression/L3 = . expression "%=" expression, FOLLOW [239] -> GOTO 172
	expression/L3 = . expression "&&=" expression, FOLLOW [239] -> GOTO 172
	expression/L3 = . expression "||=" expression, FOLLOW [239] -> GOTO 172
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 172
	expression/L3 = . expression "|=" expression, FOLLOW [239] -> GOTO 172
	expression/L3 = . expression "<<=" expression, FOLLOW [239] -> GOTO 172
	expression/L3 = . expression ">>=" expression, FOLLOW [239] -> GOTO 172
	expression/L4 = . expression "||" expression, FOLLOW [239] -> GOTO 172
	expression/L5 = . expression "&&" expression, FOLLOW [239] -> GOTO 172
	expression/L6 = . expression "|" expression, FOLLOW [239] -> GOTO 172
	expression/L7 = . expression "^" expression, FOLLOW [239] -> GOTO 172
	expression/L7 = . expression "&" expression, FOLLOW [239] -> GOTO 172
	expression/L8 = . expression "==" expression, FOLLOW [239] -> GOTO 172
	expression/L8 = . expression "!=" expression, FOLLOW [239] -> GOTO 172
	expression/L8 = . expression "<=" expression, FOLLOW [239] -> GOTO 172
	expression/L8 = . expression "<" expression, FOLLOW [239] -> GOTO 172
	expression/L8 = . expression ">=" expression, FOLLOW [239] -> GOTO 172
	expression/L8 = . expression ">" expression, FOLLOW [239] -> GOTO 172
	expression/L9 = . expression "+" expression, FOLLOW [239] -> GOTO 172
	expression/L9 = . expression "-" expression, FOLLOW [239] -> GOTO 172
	expression/L9 = "+" . expression, FOLLOW [239] -> GOTO 172
	expression/L10 = . expression "*" expression, FOLLOW [239] -> GOTO 172
	expression/L10 = . expression "/" expression, FOLLOW [239] -> GOTO 172
	expression/L10 = . expression "%" expression, FOLLOW [239] -> GOTO 172
	expression/L11 = . expression "<<" expression, FOLLOW [239] -> GOTO 172
	expression/L11 = . expression ">>" expression, FOLLOW [239] -> GOTO 172
	expression/L12 = . expression "." IDENT, FOLLOW [239] -> GOTO 172
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [239] -> GOTO 172
	expression/L13 = . expression "(" ")", FOLLOW [239] -> GOTO 172
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [239] -> GOTO 172
	iexpression = . expression indirection IDENT, FOLLOW [239] -> GOTO 172
	expression/L12 = . iexpression, FOLLOW [239] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [239] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [239] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [239] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [239] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [239] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [239] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [239] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [239] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [239] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [239] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [239] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [239] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [239] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [239] -> SHIFT "null" GOTO 92
[81]
	expression/L3 = . expression "=" expression, FOLLOW [239] -> GOTO 173
	expression/L3 = . expression "+=" expression, FOLLOW [239] -> GOTO 173
	expression/L3 = . expression "-=" expression, FOLLOW [239] -> GOTO 173
	expression/L3 = . expression "*=" expression, FOLLOW [239] -> GOTO 173
	expression/L3 = . expression "/=" expression, FOLLOW [239] -> GOTO 173
	expression/L3 = . expression "^=" expression, FOLLOW [239] -> GOTO 173
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 173
	expression/L3 = . expression "%=" expression, FOLLOW [239] -> GOTO 173
	expression/L3 = . expression "&&=" expression, FOLLOW [239] -> GOTO 173
	expression/L3 = . expression "||=" expression, FOLLOW [239] -> GOTO 173
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 173
	expression/L3 = . expression "|=" expression, FOLLOW [239] -> GOTO 173
	expression/L3 = . expression "<<=" expression, FOLLOW [239] -> GOTO 173
	expression/L3 = . expression ">>=" expression, FOLLOW [239] -> GOTO 173
	expression/L4 = . expression "||" expression, FOLLOW [239] -> GOTO 173
	expression/L5 = . expression "&&" expression, FOLLOW [239] -> GOTO 173
	expression/L6 = . expression "|" expression, FOLLOW [239] -> GOTO 173
	expression/L7 = . expression "^" expression, FOLLOW [239] -> GOTO 173
	expression/L7 = . expression "&" expression, FOLLOW [239] -> GOTO 173
	expression/L8 = . expression "==" expression, FOLLOW [239] -> GOTO 173
	expression/L8 = . expression "!=" expression, FOLLOW [239] -> GOTO 173
	expression/L8 = . expression "<=" expression, FOLLOW [239] -> GOTO 173
	expression/L8 = . expression "<" expression, FOLLOW [239] -> GOTO 173
	expression/L8 = . expression ">=" expression, FOLLOW [239] -> GOTO 173
	expression/L8 = . expression ">" expression, FOLLOW [239] -> GOTO 173
	expression/L9 = . expression "+" expression, FOLLOW [239] -> GOTO 173
	expression/L9 = . expression "-" expression, FOLLOW [239] -> GOTO 173
	expression/L9 = "-" . expression, FOLLOW [239] -> GOTO 173
	expression/L10 = . expression "*" expression, FOLLOW [239] -> GOTO 173
	expression/L10 = . expression "/" expression, FOLLOW [239] -> GOTO 173
	expression/L10 = . expression "%" expression, FOLLOW [239] -> GOTO 173
	expression/L11 = . expression "<<" expression, FOLLOW [239] -> GOTO 173
	expression/L11 = . expression ">>" expression, FOLLOW [239] -> GOTO 173
	expression/L12 = . expression "." IDENT, FOLLOW [239] -> GOTO 173
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [239] -> GOTO 173
	expression/L13 = . expression "(" ")", FOLLOW [239] -> GOTO 173
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [239] -> GOTO 173
	iexpression = . expression indirection IDENT, FOLLOW [239] -> GOTO 173
	expression/L12 = . iexpression, FOLLOW [239] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [239] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [239] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [239] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [239] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [239] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [239] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [239] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [239] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [239] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [239] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [239] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [239] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [239] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [239] -> SHIFT "null" GOTO 92
[82]
	expression/L3 = . expression "=" expression, FOLLOW [239] -> GOTO 174
	expression/L3 = . expression "+=" expression, FOLLOW [239] -> GOTO 174
	expression/L3 = . expression "-=" expression, FOLLOW [239] -> GOTO 174
	expression/L3 = . expression "*=" expression, FOLLOW [239] -> GOTO 174
	expression/L3 = . expression "/=" expression, FOLLOW [239] -> GOTO 174
	expression/L3 = . expression "^=" expression, FOLLOW [239] -> GOTO 174
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 174
	expression/L3 = . expression "%=" expression, FOLLOW [239] -> GOTO 174
	expression/L3 = . expression "&&=" expression, FOLLOW [239] -> GOTO 174
	expression/L3 = . expression "||=" expression, FOLLOW [239] -> GOTO 174
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 174
	expression/L3 = . expression "|=" expression, FOLLOW [239] -> GOTO 174
	expression/L3 = . expression "<<=" expression, FOLLOW [239] -> GOTO 174
	expression/L3 = . expression ">>=" expression, FOLLOW [239] -> GOTO 174
	expression/L4 = . expression "||" expression, FOLLOW [239] -> GOTO 174
	expression/L5 = . expression "&&" expression, FOLLOW [239] -> GOTO 174
	expression/L6 = . expression "|" expression, FOLLOW [239] -> GOTO 174
	expression/L7 = . expression "^" expression, FOLLOW [239] -> GOTO 174
	expression/L7 = . expression "&" expression, FOLLOW [239] -> GOTO 174
	expression/L8 = . expression "==" expression, FOLLOW [239] -> GOTO 174
	expression/L8 = . expression "!=" expression, FOLLOW [239] -> GOTO 174
	expression/L8 = . expression "<=" expression, FOLLOW [239] -> GOTO 174
	expression/L8 = . expression "<" expression, FOLLOW [239] -> GOTO 174
	expression/L8 = . expression ">=" expression, FOLLOW [239] -> GOTO 174
	expression/L8 = . expression ">" expression, FOLLOW [239] -> GOTO 174
	expression/L9 = . expression "+" expression, FOLLOW [239] -> GOTO 174
	expression/L9 = . expression "-" expression, FOLLOW [239] -> GOTO 174
	expression/L10 = . expression "*" expression, FOLLOW [239] -> GOTO 174
	expression/L10 = . expression "/" expression, FOLLOW [239] -> GOTO 174
	expression/L10 = . expression "%" expression, FOLLOW [239] -> GOTO 174
	expression/L11 = . expression "<<" expression, FOLLOW [239] -> GOTO 174
	expression/L11 = . expression ">>" expression, FOLLOW [239] -> GOTO 174
	expression/L12 = . expression "." IDENT, FOLLOW [239] -> GOTO 174
	expression/L12 = "*" . expression, FOLLOW [239] -> GOTO 174
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [239] -> GOTO 174
	expression/L13 = . expression "(" ")", FOLLOW [239] -> GOTO 174
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [239] -> GOTO 174
	iexpression = . expression indirection IDENT, FOLLOW [239] -> GOTO 174
	expression/L12 = . iexpression, FOLLOW [239] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [239] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [239] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [239] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [239] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [239] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [239] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [239] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [239] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [239] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [239] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [239] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [239] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [239] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [239] -> SHIFT "null" GOTO 92
[83]
	expression/L3 = . expression "=" expression, FOLLOW [239] -> GOTO 175
	expression/L3 = . expression "+=" expression, FOLLOW [239] -> GOTO 175
	expression/L3 = . expression "-=" expression, FOLLOW [239] -> GOTO 175
	expression/L3 = . expression "*=" expression, FOLLOW [239] -> GOTO 175
	expression/L3 = . expression "/=" expression, FOLLOW [239] -> GOTO 175
	expression/L3 = . expression "^=" expression, FOLLOW [239] -> GOTO 175
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 175
	expression/L3 = . expression "%=" expression, FOLLOW [239] -> GOTO 175
	expression/L3 = . expression "&&=" expression, FOLLOW [239] -> GOTO 175
	expression/L3 = . expression "||=" expression, FOLLOW [239] -> GOTO 175
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 175
	expression/L3 = . expression "|=" expression, FOLLOW [239] -> GOTO 175
	expression/L3 = . expression "<<=" expression, FOLLOW [239] -> GOTO 175
	expression/L3 = . expression ">>=" expression, FOLLOW [239] -> GOTO 175
	expression/L4 = . expression "||" expression, FOLLOW [239] -> GOTO 175
	expression/L5 = . expression "&&" expression, FOLLOW [239] -> GOTO 175
	expression/L6 = . expression "|" expression, FOLLOW [239] -> GOTO 175
	expression/L7 = . expression "^" expression, FOLLOW [239] -> GOTO 175
	expression/L7 = . expression "&" expression, FOLLOW [239] -> GOTO 175
	expression/L8 = . expression "==" expression, FOLLOW [239] -> GOTO 175
	expression/L8 = . expression "!=" expression, FOLLOW [239] -> GOTO 175
	expression/L8 = . expression "<=" expression, FOLLOW [239] -> GOTO 175
	expression/L8 = . expression "<" expression, FOLLOW [239] -> GOTO 175
	expression/L8 = . expression ">=" expression, FOLLOW [239] -> GOTO 175
	expression/L8 = . expression ">" expression, FOLLOW [239] -> GOTO 175
	expression/L9 = . expression "+" expression, FOLLOW [239] -> GOTO 175
	expression/L9 = . expression "-" expression, FOLLOW [239] -> GOTO 175
	expression/L9 = "~" . expression, FOLLOW [239] -> GOTO 175
	expression/L10 = . expression "*" expression, FOLLOW [239] -> GOTO 175
	expression/L10 = . expression "/" expression, FOLLOW [239] -> GOTO 175
	expression/L10 = . expression "%" expression, FOLLOW [239] -> GOTO 175
	expression/L11 = . expression "<<" expression, FOLLOW [239] -> GOTO 175
	expression/L11 = . expression ">>" expression, FOLLOW [239] -> GOTO 175
	expression/L12 = . expression "." IDENT, FOLLOW [239] -> GOTO 175
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [239] -> GOTO 175
	expression/L13 = . expression "(" ")", FOLLOW [239] -> GOTO 175
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [239] -> GOTO 175
	iexpression = . expression indirection IDENT, FOLLOW [239] -> GOTO 175
	expression/L12 = . iexpression, FOLLOW [239] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [239] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [239] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [239] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [239] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [239] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [239] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [239] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [239] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [239] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [239] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [239] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [239] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [239] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [239] -> SHIFT "null" GOTO 92
[84]
	expression/L3 = . expression "=" expression, FOLLOW [239] -> GOTO 176
	expression/L3 = . expression "+=" expression, FOLLOW [239] -> GOTO 176
	expression/L3 = . expression "-=" expression, FOLLOW [239] -> GOTO 176
	expression/L3 = . expression "*=" expression, FOLLOW [239] -> GOTO 176
	expression/L3 = . expression "/=" expression, FOLLOW [239] -> GOTO 176
	expression/L3 = . expression "^=" expression, FOLLOW [239] -> GOTO 176
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 176
	expression/L3 = . expression "%=" expression, FOLLOW [239] -> GOTO 176
	expression/L3 = . expression "&&=" expression, FOLLOW [239] -> GOTO 176
	expression/L3 = . expression "||=" expression, FOLLOW [239] -> GOTO 176
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 176
	expression/L3 = . expression "|=" expression, FOLLOW [239] -> GOTO 176
	expression/L3 = . expression "<<=" expression, FOLLOW [239] -> GOTO 176
	expression/L3 = . expression ">>=" expression, FOLLOW [239] -> GOTO 176
	expression/L4 = . expression "||" expression, FOLLOW [239] -> GOTO 176
	expression/L5 = . expression "&&" expression, FOLLOW [239] -> GOTO 176
	expression/L6 = . expression "|" expression, FOLLOW [239] -> GOTO 176
	expression/L7 = . expression "^" expression, FOLLOW [239] -> GOTO 176
	expression/L7 = . expression "&" expression, FOLLOW [239] -> GOTO 176
	expression/L8 = . expression "==" expression, FOLLOW [239] -> GOTO 176
	expression/L8 = . expression "!=" expression, FOLLOW [239] -> GOTO 176
	expression/L8 = . expression "<=" expression, FOLLOW [239] -> GOTO 176
	expression/L8 = . expression "<" expression, FOLLOW [239] -> GOTO 176
	expression/L8 = . expression ">=" expression, FOLLOW [239] -> GOTO 176
	expression/L8 = . expression ">" expression, FOLLOW [239] -> GOTO 176
	expression/L9 = . expression "+" expression, FOLLOW [239] -> GOTO 176
	expression/L9 = . expression "-" expression, FOLLOW [239] -> GOTO 176
	expression/L9 = "!" . expression, FOLLOW [239] -> GOTO 176
	expression/L10 = . expression "*" expression, FOLLOW [239] -> GOTO 176
	expression/L10 = . expression "/" expression, FOLLOW [239] -> GOTO 176
	expression/L10 = . expression "%" expression, FOLLOW [239] -> GOTO 176
	expression/L11 = . expression "<<" expression, FOLLOW [239] -> GOTO 176
	expression/L11 = . expression ">>" expression, FOLLOW [239] -> GOTO 176
	expression/L12 = . expression "." IDENT, FOLLOW [239] -> GOTO 176
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [239] -> GOTO 176
	expression/L13 = . expression "(" ")", FOLLOW [239] -> GOTO 176
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [239] -> GOTO 176
	iexpression = . expression indirection IDENT, FOLLOW [239] -> GOTO 176
	expression/L12 = . iexpression, FOLLOW [239] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [239] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [239] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [239] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [239] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [239] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [239] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [239] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [239] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [239] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [239] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [239] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [239] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [239] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [239] -> SHIFT "null" GOTO 92
[85]
	typespec/L1 = . typename, FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [13] -> GOTO 8
	variabledefinition = . typespec IDENT, FOLLOW [15] -> GOTO 9
	variabledefinition = . typespec IDENT "=" expression, FOLLOW [15] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression, FOLLOW [15] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]", FOLLOW [15] -> GOTO 9
	statement/L1 = "var" . variabledefinition ";", FOLLOW [98] -> GOTO 177
	typename/L1 = . IDENT, FOLLOW [62] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [62] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [13] -> SHIFT "const" GOTO 18
[86]
	statement/L1 = "return" . expression ";", FOLLOW [98] -> GOTO 178
	expression/L3 = . expression "=" expression, FOLLOW [97] -> GOTO 178
	expression/L3 = . expression "+=" expression, FOLLOW [97] -> GOTO 178
	expression/L3 = . expression "-=" expression, FOLLOW [97] -> GOTO 178
	expression/L3 = . expression "*=" expression, FOLLOW [97] -> GOTO 178
	expression/L3 = . expression "/=" expression, FOLLOW [97] -> GOTO 178
	expression/L3 = . expression "^=" expression, FOLLOW [97] -> GOTO 178
	expression/L3 = . expression "&=" expression, FOLLOW [97] -> GOTO 178
	expression/L3 = . expression "%=" expression, FOLLOW [97] -> GOTO 178
	expression/L3 = . expression "&&=" expression, FOLLOW [97] -> GOTO 178
	expression/L3 = . expression "||=" expression, FOLLOW [97] -> GOTO 178
	expression/L3 = . expression "&=" expression, FOLLOW [97] -> GOTO 178
	expression/L3 = . expression "|=" expression, FOLLOW [97] -> GOTO 178
	expression/L3 = . expression "<<=" expression, FOLLOW [97] -> GOTO 178
	expression/L3 = . expression ">>=" expression, FOLLOW [97] -> GOTO 178
	expression/L4 = . expression "||" expression, FOLLOW [97] -> GOTO 178
	expression/L5 = . expression "&&" expression, FOLLOW [97] -> GOTO 178
	expression/L6 = . expression "|" expression, FOLLOW [97] -> GOTO 178
	expression/L7 = . expression "^" expression, FOLLOW [97] -> GOTO 178
	expression/L7 = . expression "&" expression, FOLLOW [97] -> GOTO 178
	expression/L8 = . expression "==" expression, FOLLOW [97] -> GOTO 178
	expression/L8 = . expression "!=" expression, FOLLOW [97] -> GOTO 178
	expression/L8 = . expression "<=" expression, FOLLOW [97] -> GOTO 178
	expression/L8 = . expression "<" expression, FOLLOW [97] -> GOTO 178
	expression/L8 = . expression ">=" expression, FOLLOW [97] -> GOTO 178
	expression/L8 = . expression ">" expression, FOLLOW [97] -> GOTO 178
	expression/L9 = . expression "+" expression, FOLLOW [97] -> GOTO 178
	expression/L9 = . expression "-" expression, FOLLOW [97] -> GOTO 178
	expression/L10 = . expression "*" expression, FOLLOW [97] -> GOTO 178
	expression/L10 = . expression "/" expression, FOLLOW [97] -> GOTO 178
	expression/L10 = . expression "%" expression, FOLLOW [97] -> GOTO 178
	expression/L11 = . expression "<<" expression, FOLLOW [97] -> GOTO 178
	expression/L11 = . expression ">>" expression, FOLLOW [97] -> GOTO 178
	expression/L12 = . expression "." IDENT, FOLLOW [97] -> GOTO 178
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [97] -> GOTO 178
	expression/L13 = . expression "(" ")", FOLLOW [97] -> GOTO 178
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [97] -> GOTO 178
	iexpression = . expression indirection IDENT, FOLLOW [97] -> GOTO 178
	expression/L12 = . iexpression, FOLLOW [97] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [97] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [97] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [97] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [97] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [97] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [97] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [97] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [97] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [97] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [97] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [97] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [97] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [97] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [97] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [97] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [97] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [97] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [97] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [97] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [97] -> SHIFT "null" GOTO 92
[87]
	statement/L1 = "delete" . expression ";", FOLLOW [98] -> GOTO 179
	expression/L3 = . expression "=" expression, FOLLOW [97] -> GOTO 179
	expression/L3 = . expression "+=" expression, FOLLOW [97] -> GOTO 179
	expression/L3 = . expression "-=" expression, FOLLOW [97] -> GOTO 179
	expression/L3 = . expression "*=" expression, FOLLOW [97] -> GOTO 179
	expression/L3 = . expression "/=" expression, FOLLOW [97] -> GOTO 179
	expression/L3 = . expression "^=" expression, FOLLOW [97] -> GOTO 179
	expression/L3 = . expression "&=" expression, FOLLOW [97] -> GOTO 179
	expression/L3 = . expression "%=" expression, FOLLOW [97] -> GOTO 179
	expression/L3 = . expression "&&=" expression, FOLLOW [97] -> GOTO 179
	expression/L3 = . expression "||=" expression, FOLLOW [97] -> GOTO 179
	expression/L3 = . expression "&=" expression, FOLLOW [97] -> GOTO 179
	expression/L3 = . expression "|=" expression, FOLLOW [97] -> GOTO 179
	expression/L3 = . expression "<<=" expression, FOLLOW [97] -> GOTO 179
	expression/L3 = . expression ">>=" expression, FOLLOW [97] -> GOTO 179
	expression/L4 = . expression "||" expression, FOLLOW [97] -> GOTO 179
	expression/L5 = . expression "&&" expression, FOLLOW [97] -> GOTO 179
	expression/L6 = . expression "|" expression, FOLLOW [97] -> GOTO 179
	expression/L7 = . expression "^" expression, FOLLOW [97] -> GOTO 179
	expression/L7 = . expression "&" expression, FOLLOW [97] -> GOTO 179
	expression/L8 = . expression "==" expression, FOLLOW [97] -> GOTO 179
	expression/L8 = . expression "!=" expression, FOLLOW [97] -> GOTO 179
	expression/L8 = . expression "<=" expression, FOLLOW [97] -> GOTO 179
	expression/L8 = . expression "<" expression, FOLLOW [97] -> GOTO 179
	expression/L8 = . expression ">=" expression, FOLLOW [97] -> GOTO 179
	expression/L8 = . expression ">" expression, FOLLOW [97] -> GOTO 179
	expression/L9 = . expression "+" expression, FOLLOW [97] -> GOTO 179
	expression/L9 = . expression "-" expression, FOLLOW [97] -> GOTO 179
	expression/L10 = . expression "*" expression, FOLLOW [97] -> GOTO 179
	expression/L10 = . expression "/" expression, FOLLOW [97] -> GOTO 179
	expression/L10 = . expression "%" expression, FOLLOW [97] -> GOTO 179
	expression/L11 = . expression "<<" expression, FOLLOW [97] -> GOTO 179
	expression/L11 = . expression ">>" expression, FOLLOW [97] -> GOTO 179
	expression/L12 = . expression "." IDENT, FOLLOW [97] -> GOTO 179
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [97] -> GOTO 179
	expression/L13 = . expression "(" ")", FOLLOW [97] -> GOTO 179
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [97] -> GOTO 179
	iexpression = . expression indirection IDENT, FOLLOW [97] -> GOTO 179
	expression/L12 = . iexpression, FOLLOW [97] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [97] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [97] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [97] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [97] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [97] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [97] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [97] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [97] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [97] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [97] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [97] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [97] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [97] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [97] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [97] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [97] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [97] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [97] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [97] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [97] -> SHIFT "null" GOTO 92
[88]
	statement/L1 = "if" . "(" expression ")" "{" codeblock "}", FOLLOW [98] -> SHIFT '(' GOTO 180
	statement/L1 = "if" . "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}", FOLLOW [98] -> SHIFT '(' GOTO 180
[89]
	statement/L1 = "while" . "(" expression ")" "{" codeblock "}", FOLLOW [98] -> SHIFT '(' GOTO 181
[90]
	typespec/L1 = . typename, FOLLOW [26] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [26] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [26] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [26] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [26] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [26] -> GOTO 8
	expression/L1 = "new" . typespec ":" expression, FOLLOW [239] -> GOTO 182
	typename/L1 = . IDENT, FOLLOW [180] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [180] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [26] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [26] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [26] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [26] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [26] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [26] -> SHIFT "const" GOTO 18
[91]
	typespec/L1 = . typename, FOLLOW [26] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [26] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [26] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [26] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [26] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [26] -> GOTO 8
	expression/L1 = "cast" . typespec ":" "{" expression "}", FOLLOW [239] -> GOTO 183
	expression/L1 = "cast" . typespec ":" "{" "}", FOLLOW [239] -> GOTO 183
	typename/L1 = . IDENT, FOLLOW [180] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [180] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [26] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [26] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [26] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [26] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [26] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [26] -> SHIFT "const" GOTO 18
[92]
	expression/L2 = "null" . (93), FOLLOW [239] -> REDUCE expression #1 CALL null "constexpr float"
[93]
	typespec/L1 = typename "^" "^" "&" . (27), FOLLOW [268] -> REDUCE typespec #4 CALL typespec "^^&"
[94]
	iexpression = expression . indirection IDENT, FOLLOW [97] -> GOTO 129
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [97] -> SHIFT '(' GOTO 130
	expression/L13 = expression . "(" ")", FOLLOW [97] -> SHIFT '(' GOTO 130
	expression/L7 = expression . "&" expression, FOLLOW [97] -> SHIFT '&' GOTO 132
	expression/L7 = expression . "^" expression, FOLLOW [97] -> SHIFT '^' GOTO 133
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 134
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 134
	expression/L3 = expression . "=" expression, FOLLOW [97] -> SHIFT '=' GOTO 135
	expression/L9 = expression . "+" expression, FOLLOW [97] -> SHIFT '+' GOTO 136
	expression/L9 = expression . "-" expression, FOLLOW [97] -> SHIFT '-' GOTO 137
	expression/L10 = expression . "*" expression, FOLLOW [97] -> SHIFT '*' GOTO 138
	expression/L10 = expression . "/" expression, FOLLOW [97] -> SHIFT '/' GOTO 139
	expression/L10 = expression . "%" expression, FOLLOW [97] -> SHIFT '%' GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [97] -> SHIFT "&&" GOTO 141
	expression/L4 = expression . "||" expression, FOLLOW [97] -> SHIFT "||" GOTO 142
	expression/L6 = expression . "|" expression, FOLLOW [97] -> SHIFT '|' GOTO 143
	expression/L11 = expression . "<<" expression, FOLLOW [97] -> SHIFT "<<" GOTO 144
	expression/L11 = expression . ">>" expression, FOLLOW [97] -> SHIFT ">>" GOTO 145
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [97] -> SHIFT '[' GOTO 146
	expression/L8 = expression . "==" expression, FOLLOW [97] -> SHIFT "==" GOTO 147
	expression/L8 = expression . "!=" expression, FOLLOW [97] -> SHIFT "!=" GOTO 148
	expression/L8 = expression . ">=" expression, FOLLOW [97] -> SHIFT ">=" GOTO 149
	expression/L8 = expression . "<=" expression, FOLLOW [97] -> SHIFT "<=" GOTO 150
	expression/L8 = expression . ">" expression, FOLLOW [97] -> SHIFT '>' GOTO 151
	expression/L8 = expression . "<" expression, FOLLOW [97] -> SHIFT '<' GOTO 152
	expression/L3 = expression . "+=" expression, FOLLOW [97] -> SHIFT "+=" GOTO 153
	expression/L3 = expression . "-=" expression, FOLLOW [97] -> SHIFT "-=" GOTO 154
	expression/L3 = expression . "*=" expression, FOLLOW [97] -> SHIFT "*=" GOTO 155
	expression/L3 = expression . "/=" expression, FOLLOW [97] -> SHIFT "/=" GOTO 156
	expression/L3 = expression . "^=" expression, FOLLOW [97] -> SHIFT "^=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [97] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "&=" expression, FOLLOW [97] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "%=" expression, FOLLOW [97] -> SHIFT "%=" GOTO 159
	expression/L3 = expression . "&&=" expression, FOLLOW [97] -> SHIFT "&&=" GOTO 160
	expression/L3 = expression . "||=" expression, FOLLOW [97] -> SHIFT "||=" GOTO 161
	expression/L3 = expression . "|=" expression, FOLLOW [97] -> SHIFT "|=" GOTO 162
	expression/L3 = expression . "<<=" expression, FOLLOW [97] -> SHIFT "<<=" GOTO 163
	expression/L3 = expression . ">>=" expression, FOLLOW [97] -> SHIFT ">>=" GOTO 164
	expression/L12 = expression . "." IDENT, FOLLOW [97] -> SHIFT '.' GOTO 165
	variabledefinition = typespec IDENT "=" expression . (step:82), FOLLOW [15] -> REDUCE variabledefinition #4 CALL vardef_assign
[95]
	expression/L3 = . expression "=" expression, FOLLOW [239] -> GOTO 184
	expression/L3 = . expression "+=" expression, FOLLOW [239] -> GOTO 184
	expression/L3 = . expression "-=" expression, FOLLOW [239] -> GOTO 184
	expression/L3 = . expression "*=" expression, FOLLOW [239] -> GOTO 184
	expression/L3 = . expression "/=" expression, FOLLOW [239] -> GOTO 184
	expression/L3 = . expression "^=" expression, FOLLOW [239] -> GOTO 184
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 184
	expression/L3 = . expression "%=" expression, FOLLOW [239] -> GOTO 184
	expression/L3 = . expression "&&=" expression, FOLLOW [239] -> GOTO 184
	expression/L3 = . expression "||=" expression, FOLLOW [239] -> GOTO 184
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 184
	expression/L3 = . expression "|=" expression, FOLLOW [239] -> GOTO 184
	expression/L3 = . expression "<<=" expression, FOLLOW [239] -> GOTO 184
	expression/L3 = . expression ">>=" expression, FOLLOW [239] -> GOTO 184
	expression/L4 = . expression "||" expression, FOLLOW [239] -> GOTO 184
	expression/L5 = . expression "&&" expression, FOLLOW [239] -> GOTO 184
	expression/L6 = . expression "|" expression, FOLLOW [239] -> GOTO 184
	expression/L7 = . expression "^" expression, FOLLOW [239] -> GOTO 184
	expression/L7 = . expression "&" expression, FOLLOW [239] -> GOTO 184
	expression/L8 = . expression "==" expression, FOLLOW [239] -> GOTO 184
	expression/L8 = . expression "!=" expression, FOLLOW [239] -> GOTO 184
	expression/L8 = . expression "<=" expression, FOLLOW [239] -> GOTO 184
	expression/L8 = . expression "<" expression, FOLLOW [239] -> GOTO 184
	expression/L8 = . expression ">=" expression, FOLLOW [239] -> GOTO 184
	expression/L8 = . expression ">" expression, FOLLOW [239] -> GOTO 184
	expression/L9 = . expression "+" expression, FOLLOW [239] -> GOTO 184
	expression/L9 = . expression "-" expression, FOLLOW [239] -> GOTO 184
	expression/L10 = . expression "*" expression, FOLLOW [239] -> GOTO 184
	expression/L10 = . expression "/" expression, FOLLOW [239] -> GOTO 184
	expression/L10 = . expression "%" expression, FOLLOW [239] -> GOTO 184
	expression/L11 = . expression "<<" expression, FOLLOW [239] -> GOTO 184
	expression/L11 = . expression ">>" expression, FOLLOW [239] -> GOTO 184
	expression/L12 = . expression "." IDENT, FOLLOW [239] -> GOTO 184
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [239] -> GOTO 184
	expression/L13 = . expression "(" ")", FOLLOW [239] -> GOTO 184
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [239] -> GOTO 184
	iexpression = . expression indirection IDENT, FOLLOW [239] -> GOTO 184
	expressionlist = . expression "," expressionlist, FOLLOW [18] -> GOTO 184
	expressionlist = . expression, FOLLOW [18] -> GOTO 184
	expression/L12 = . iexpression, FOLLOW [239] -> GOTO 69
	expression/L1 = "{" . expressionlist "}", FOLLOW [239] -> GOTO 170
	expression/L2 = . BOOLEAN, FOLLOW [239] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [239] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [239] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [239] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [239] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [239] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [239] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [239] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 95
	expression/L1 = "{" . "}", FOLLOW [239] -> SHIFT '}' GOTO 171
	expression/L9 = . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [239] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [239] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [239] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [239] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [239] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [239] -> SHIFT "null" GOTO 92
[96]
	iexpression = expression . indirection IDENT, FOLLOW [167] -> GOTO 129
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [167] -> SHIFT '(' GOTO 130
	expression/L13 = expression . "(" ")", FOLLOW [167] -> SHIFT '(' GOTO 130
	expression/L7 = expression . "&" expression, FOLLOW [167] -> SHIFT '&' GOTO 132
	expression/L7 = expression . "^" expression, FOLLOW [167] -> SHIFT '^' GOTO 133
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 134
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 134
	expression/L3 = expression . "=" expression, FOLLOW [167] -> SHIFT '=' GOTO 135
	expression/L9 = expression . "+" expression, FOLLOW [167] -> SHIFT '+' GOTO 136
	expression/L9 = expression . "-" expression, FOLLOW [167] -> SHIFT '-' GOTO 137
	expression/L10 = expression . "*" expression, FOLLOW [167] -> SHIFT '*' GOTO 138
	expression/L10 = expression . "/" expression, FOLLOW [167] -> SHIFT '/' GOTO 139
	expression/L10 = expression . "%" expression, FOLLOW [167] -> SHIFT '%' GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [167] -> SHIFT "&&" GOTO 141
	expression/L4 = expression . "||" expression, FOLLOW [167] -> SHIFT "||" GOTO 142
	expression/L6 = expression . "|" expression, FOLLOW [167] -> SHIFT '|' GOTO 143
	expression/L11 = expression . "<<" expression, FOLLOW [167] -> SHIFT "<<" GOTO 144
	expression/L11 = expression . ">>" expression, FOLLOW [167] -> SHIFT ">>" GOTO 145
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [167] -> SHIFT '[' GOTO 146
	variabledefinition = typespec IDENT "[" expression . "]" "=" expression, FOLLOW [15] -> SHIFT ']' GOTO 185
	variabledefinition = typespec IDENT "[" expression . "]", FOLLOW [15] -> SHIFT ']' GOTO 185
	expression/L8 = expression . "==" expression, FOLLOW [167] -> SHIFT "==" GOTO 147
	expression/L8 = expression . "!=" expression, FOLLOW [167] -> SHIFT "!=" GOTO 148
	expression/L8 = expression . ">=" expression, FOLLOW [167] -> SHIFT ">=" GOTO 149
	expression/L8 = expression . "<=" expression, FOLLOW [167] -> SHIFT "<=" GOTO 150
	expression/L8 = expression . ">" expression, FOLLOW [167] -> SHIFT '>' GOTO 151
	expression/L8 = expression . "<" expression, FOLLOW [167] -> SHIFT '<' GOTO 152
	expression/L3 = expression . "+=" expression, FOLLOW [167] -> SHIFT "+=" GOTO 153
	expression/L3 = expression . "-=" expression, FOLLOW [167] -> SHIFT "-=" GOTO 154
	expression/L3 = expression . "*=" expression, FOLLOW [167] -> SHIFT "*=" GOTO 155
	expression/L3 = expression . "/=" expression, FOLLOW [167] -> SHIFT "/=" GOTO 156
	expression/L3 = expression . "^=" expression, FOLLOW [167] -> SHIFT "^=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [167] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "&=" expression, FOLLOW [167] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "%=" expression, FOLLOW [167] -> SHIFT "%=" GOTO 159
	expression/L3 = expression . "&&=" expression, FOLLOW [167] -> SHIFT "&&=" GOTO 160
	expression/L3 = expression . "||=" expression, FOLLOW [167] -> SHIFT "||=" GOTO 161
	expression/L3 = expression . "|=" expression, FOLLOW [167] -> SHIFT "|=" GOTO 162
	expression/L3 = expression . "<<=" expression, FOLLOW [167] -> SHIFT "<<=" GOTO 163
	expression/L3 = expression . ">>=" expression, FOLLOW [167] -> SHIFT ">>=" GOTO 164
	expression/L12 = expression . "." IDENT, FOLLOW [167] -> SHIFT '.' GOTO 165
[97]
	functiondefinition = linkage "function" IDENT typespec . callablebody, FOLLOW [252] -> GOTO 186
	functiondefinition = linkage "function" IDENT typespec . callablebody_const, FOLLOW [252] -> GOTO 187
	callablebody = . "(" parameterlist ")" "{" codeblock "}", FOLLOW [252] -> SHIFT '(' GOTO 100
	callablebody_const = . "(" parameterlist ")" "const" "{" codeblock "}", FOLLOW [252] -> SHIFT '(' GOTO 100
[98]
	functiondefinition = linkage "procedure" IDENT callablebody . (38), FOLLOW [252] -> REDUCE functiondefinition #4 CALL procdef {const=false}
[99]
	functiondefinition = linkage "procedure" IDENT callablebody_const . (39), FOLLOW [252] -> REDUCE functiondefinition #4 CALL procdef {const=true}
[100]
	typespec/L1 = . typename, FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [13] -> GOTO 8
	paramdecl = . typespec IDENT, FOLLOW [184] -> GOTO 188
	callablebody = "(" . parameterlist ")" "{" codeblock "}", FOLLOW [252] -> GOTO 189
	callablebody_const = "(" . parameterlist ")" "const" "{" codeblock "}", FOLLOW [252] -> GOTO 189
	parameterlist = . parameters, FOLLOW [10] -> GOTO 190
	parameters = . paramdecl "," parameters, FOLLOW [10] -> GOTO 191
	parameters = . paramdecl, FOLLOW [10] -> GOTO 191
	typename/L1 = . IDENT, FOLLOW [62] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [62] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [13] -> SHIFT "const" GOTO 18
	parameterlist = . (71), FOLLOW [10] -> REDUCE parameterlist #0 CALL paramdeflist
[101]
	typespec/L1 = "const" typename "^" "&" . (24), FOLLOW [268] -> REDUCE typespec #4 CALL typespec "const^&"
[102]
	typespec/L1 = "const" typename "^" "^" . "&", FOLLOW [268] -> SHIFT '&' GOTO 192
	typespec/L1 = "const" typename "^" "^" . (26), FOLLOW [268] -> REDUCE typespec #4 CALL typespec "const^^"
[103]
	structdefinition = "struct" IDENT "{" struct_definitionlist . "}", FOLLOW [175] -> SHIFT '}' GOTO 193
[104]
	struct_definitionlist = struct_definition . struct_definitionlist, FOLLOW [18] -> GOTO 194
	struct_definitionlist = . struct_definition struct_definitionlist, FOLLOW [18] -> GOTO 104
	typespec/L1 = . typename, FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [13] -> GOTO 8
	variabledefinition = . typespec IDENT, FOLLOW [15] -> GOTO 9
	variabledefinition = . typespec IDENT "=" expression, FOLLOW [15] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression, FOLLOW [15] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]", FOLLOW [15] -> GOTO 9
	struct_definition = . typedefinition ";", FOLLOW [169] -> GOTO 10
	struct_definition = . structdefinition, FOLLOW [169] -> GOTO 11
	struct_definition = . variabledefinition ";", FOLLOW [169] -> GOTO 16
	typename/L1 = . IDENT, FOLLOW [62] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [62] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [13] -> SHIFT "const" GOTO 18
	typedefinition = . "typedef" typepath IDENT, FOLLOW [15] -> SHIFT "typedef" GOTO 19
	structdefinition = . "struct" IDENT "{" struct_definitionlist "}", FOLLOW [169] -> SHIFT "struct" GOTO 20
	struct_definitionlist = ., FOLLOW [18] -> REDUCE struct_definitionlist #0
[105]
	interfacedefinition = "interface" IDENT "{" interface_definitionlist . "}", FOLLOW [175] -> SHIFT '}' GOTO 195
[106]
	interface_definitionlist = interface_definition . interface_definitionlist, FOLLOW [18] -> GOTO 196
	interface_definitionlist = . interface_definition interface_definitionlist, FOLLOW [18] -> GOTO 106
	interface_definition = . "function" IDENT typespec "(" extern_paramlist ")" ";", FOLLOW [171] -> SHIFT "function" GOTO 107
	interface_definition = . "function" IDENT typespec "(" extern_paramlist ")" "const" ";", FOLLOW [171] -> SHIFT "function" GOTO 107
	interface_definition = . "procedure" IDENT "(" extern_paramlist ")" ";", FOLLOW [171] -> SHIFT "procedure" GOTO 108
	interface_definition = . "procedure" IDENT "(" extern_paramlist ")" "const" ";", FOLLOW [171] -> SHIFT "procedure" GOTO 108
	interface_definition = . "operator" operatordecl typespec "(" extern_paramlist ")" ";", FOLLOW [171] -> SHIFT "operator" GOTO 109
	interface_definition = . "operator" operatordecl typespec "(" extern_paramlist ")" "const" ";", FOLLOW [171] -> SHIFT "operator" GOTO 109
	interface_definition = . "operator" operatordecl "(" extern_paramlist ")" ";", FOLLOW [171] -> SHIFT "operator" GOTO 109
	interface_definition = . "operator" operatordecl "(" extern_paramlist ")" "const" ";", FOLLOW [171] -> SHIFT "operator" GOTO 109
	interface_definitionlist = ., FOLLOW [18] -> REDUCE interface_definitionlist #0
[107]
	interface_definition = "function" . IDENT typespec "(" extern_paramlist ")" ";", FOLLOW [171] -> SHIFT IDENT GOTO 197
	interface_definition = "function" . IDENT typespec "(" extern_paramlist ")" "const" ";", FOLLOW [171] -> SHIFT IDENT GOTO 197
[108]
	interface_definition = "procedure" . IDENT "(" extern_paramlist ")" ";", FOLLOW [171] -> SHIFT IDENT GOTO 198
	interface_definition = "procedure" . IDENT "(" extern_paramlist ")" "const" ";", FOLLOW [171] -> SHIFT IDENT GOTO 198
[109]
	interface_definition = "operator" . operatordecl typespec "(" extern_paramlist ")" ";", FOLLOW [171] -> GOTO 199
	interface_definition = "operator" . operatordecl typespec "(" extern_paramlist ")" "const" ";", FOLLOW [171] -> GOTO 199
	interface_definition = "operator" . operatordecl "(" extern_paramlist ")" ";", FOLLOW [171] -> GOTO 199
	interface_definition = "operator" . operatordecl "(" extern_paramlist ")" "const" ";", FOLLOW [171] -> GOTO 199
	operatordecl = . "(" ")", FOLLOW [185] -> SHIFT '(' GOTO 200
	operatordecl = . "&", FOLLOW [185] -> SHIFT '&' GOTO 201
	operatordecl = . "->", FOLLOW [185] -> SHIFT "->" GOTO 202
	operatordecl = . "=", FOLLOW [185] -> SHIFT '=' GOTO 203
	operatordecl = . "+", FOLLOW [185] -> SHIFT '+' GOTO 204
	operatordecl = . "-", FOLLOW [185] -> SHIFT '-' GOTO 205
	operatordecl = . "*", FOLLOW [185] -> SHIFT '*' GOTO 206
	operatordecl = . "/", FOLLOW [185] -> SHIFT '/' GOTO 207
	operatordecl = . "%", FOLLOW [185] -> SHIFT '%' GOTO 208
	operatordecl = . "&&", FOLLOW [185] -> SHIFT "&&" GOTO 209
	operatordecl = . "||", FOLLOW [185] -> SHIFT "||" GOTO 210
	operatordecl = . "|", FOLLOW [185] -> SHIFT '|' GOTO 211
	operatordecl = . "<<", FOLLOW [185] -> SHIFT "<<" GOTO 212
	operatordecl = . ">>", FOLLOW [185] -> SHIFT ">>" GOTO 213
	operatordecl = . "~", FOLLOW [185] -> SHIFT '~' GOTO 214
	operatordecl = . "!", FOLLOW [185] -> SHIFT '!' GOTO 215
	operatordecl = . "[" "]", FOLLOW [185] -> SHIFT '[' GOTO 216
	operatordecl = . "==", FOLLOW [185] -> SHIFT "==" GOTO 217
	operatordecl = . "!=", FOLLOW [185] -> SHIFT "!=" GOTO 218
	operatordecl = . ">=", FOLLOW [185] -> SHIFT ">=" GOTO 219
	operatordecl = . "<=", FOLLOW [185] -> SHIFT "<=" GOTO 220
	operatordecl = . ">", FOLLOW [185] -> SHIFT '>' GOTO 221
	operatordecl = . "<", FOLLOW [185] -> SHIFT '<' GOTO 222
[110]
	classdefinition = "class" IDENT "{" class_definitionlist . "}", FOLLOW [175] -> SHIFT '}' GOTO 223
[111]
	class_definitionlist = class_definition . class_definitionlist, FOLLOW [18] -> GOTO 224
	class_definitionlist = . class_definition class_definitionlist, FOLLOW [18] -> GOTO 111
	typespec/L1 = . typename, FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [13] -> GOTO 8
	variabledefinition = . typespec IDENT, FOLLOW [15] -> GOTO 9
	variabledefinition = . typespec IDENT "=" expression, FOLLOW [15] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression, FOLLOW [15] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]", FOLLOW [15] -> GOTO 9
	class_definition = . typedefinition ";", FOLLOW [174] -> GOTO 112
	class_definition = . structdefinition, FOLLOW [174] -> GOTO 113
	class_definition = . interfacedefinition, FOLLOW [174] -> GOTO 114
	class_definition = . classdefinition, FOLLOW [174] -> GOTO 115
	functiondefinition = . linkage "function" IDENT typespec callablebody, FOLLOW [174] -> GOTO 116
	functiondefinition = . linkage "function" IDENT typespec callablebody_const, FOLLOW [174] -> GOTO 116
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [174] -> GOTO 116
	functiondefinition = . linkage "procedure" IDENT callablebody_const, FOLLOW [174] -> GOTO 116
	constructordefinition = . linkage "constructor" callablebody, FOLLOW [174] -> GOTO 116
	operatordefinition = . linkage "operator" operatordecl typespec callablebody, FOLLOW [174] -> GOTO 116
	operatordefinition = . linkage "operator" operatordecl typespec callablebody_const, FOLLOW [174] -> GOTO 116
	operatordefinition = . linkage "operator" operatordecl callablebody, FOLLOW [174] -> GOTO 116
	operatordefinition = . linkage "operator" operatordecl callablebody_const, FOLLOW [174] -> GOTO 116
	class_definition = . functiondefinition, FOLLOW [174] -> GOTO 117
	class_definition = . constructordefinition, FOLLOW [174] -> GOTO 118
	class_definition = . operatordefinition, FOLLOW [174] -> GOTO 119
	class_definition = . variabledefinition ";", FOLLOW [174] -> GOTO 120
	typename/L1 = . IDENT, FOLLOW [62] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [62] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [13] -> SHIFT "const" GOTO 18
	typedefinition = . "typedef" typepath IDENT, FOLLOW [15] -> SHIFT "typedef" GOTO 19
	structdefinition = . "struct" IDENT "{" struct_definitionlist "}", FOLLOW [174] -> SHIFT "struct" GOTO 20
	interfacedefinition = . "interface" IDENT "{" interface_definitionlist "}", FOLLOW [174] -> SHIFT "interface" GOTO 21
	classdefinition = . "class" IDENT "{" class_definitionlist "}", FOLLOW [174] -> SHIFT "class" GOTO 22
	classdefinition = . "class" IDENT ":" inheritlist "{" class_definitionlist "}", FOLLOW [174] -> SHIFT "class" GOTO 22
	linkage = . "private", FOLLOW [173] -> SHIFT "private" GOTO 23
	linkage = . "public", FOLLOW [173] -> SHIFT "public" GOTO 24
	constructordefinition = . "destructor" "{" codeblock "}", FOLLOW [174] -> SHIFT "destructor" GOTO 121
	class_definitionlist = ., FOLLOW [18] -> REDUCE class_definitionlist #0
	linkage = . (35), FOLLOW [173] -> REDUCE linkage #0 CALL linkage {private=false,linkage="external"}
[112]
	class_definition = typedefinition . ";", FOLLOW [174] -> SHIFT ';' GOTO 225
[113]
	class_definition = structdefinition . (15), FOLLOW [174] -> REDUCE class_definition #1 CALL definition 1
[114]
	class_definition = interfacedefinition . (15), FOLLOW [174] -> REDUCE class_definition #1 CALL definition 1
[115]
	class_definition = classdefinition . (15), FOLLOW [174] -> REDUCE class_definition #1 CALL definition 1
[116]
	functiondefinition = linkage . "function" IDENT typespec callablebody, FOLLOW [174] -> SHIFT "function" GOTO 34
	functiondefinition = linkage . "function" IDENT typespec callablebody_const, FOLLOW [174] -> SHIFT "function" GOTO 34
	functiondefinition = linkage . "procedure" IDENT callablebody, FOLLOW [174] -> SHIFT "procedure" GOTO 35
	functiondefinition = linkage . "procedure" IDENT callablebody_const, FOLLOW [174] -> SHIFT "procedure" GOTO 35
	operatordefinition = linkage . "operator" operatordecl typespec callablebody, FOLLOW [174] -> SHIFT "operator" GOTO 226
	operatordefinition = linkage . "operator" operatordecl typespec callablebody_const, FOLLOW [174] -> SHIFT "operator" GOTO 226
	operatordefinition = linkage . "operator" operatordecl callablebody, FOLLOW [174] -> SHIFT "operator" GOTO 226
	operatordefinition = linkage . "operator" operatordecl callablebody_const, FOLLOW [174] -> SHIFT "operator" GOTO 226
	constructordefinition = linkage . "constructor" callablebody, FOLLOW [174] -> SHIFT "constructor" GOTO 227
[117]
	class_definition = functiondefinition . (16), FOLLOW [174] -> REDUCE class_definition #1 CALL definition 2
[118]
	class_definition = constructordefinition . (16), FOLLOW [174] -> REDUCE class_definition #1 CALL definition 2
[119]
	class_definition = operatordefinition . (16), FOLLOW [174] -> REDUCE class_definition #1 CALL definition 2
[120]
	class_definition = variabledefinition . ";", FOLLOW [174] -> SHIFT ';' GOTO 228
[121]
	constructordefinition = "destructor" . "{" codeblock "}", FOLLOW [174] -> SHIFT '{' GOTO 229
[122]
	inheritlist = typepath . "," inheritlist, FOLLOW [19] -> SHIFT ',' GOTO 230
	inheritlist = typepath . (step:32), FOLLOW [19] -> REDUCE inheritlist #1 CALL inheritdef 1
[123]
	classdefinition = "class" IDENT ":" inheritlist . "{" class_definitionlist "}", FOLLOW [175] -> SHIFT '{' GOTO 231
[124]
	extern_definition = "extern" DQSTRING "function" IDENT typespec . "(" extern_paramlist ")" ";", FOLLOW [59] -> SHIFT '(' GOTO 232
	extern_definition = "extern" DQSTRING "function" IDENT typespec . "(" extern_paramlist "..." ")" ";", FOLLOW [59] -> SHIFT '(' GOTO 232
[125]
	extern_paramlist = . extern_parameters, FOLLOW [186] -> GOTO 233
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" . extern_paramlist ")" ";", FOLLOW [59] -> GOTO 234
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" . extern_paramlist "..." ")" ";", FOLLOW [59] -> GOTO 234
	typespec/L1 = . typename, FOLLOW [189] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [189] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [189] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [189] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [189] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [189] -> GOTO 8
	extern_parameters = . typespec "," extern_parameters, FOLLOW [186] -> GOTO 235
	extern_parameters = . typespec IDENT "," extern_parameters, FOLLOW [186] -> GOTO 235
	extern_parameters = . typespec, FOLLOW [186] -> GOTO 235
	extern_parameters = . typespec IDENT, FOLLOW [186] -> GOTO 235
	typename/L1 = . IDENT, FOLLOW [190] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [190] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [189] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [189] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [189] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [189] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [189] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [189] -> SHIFT "const" GOTO 18
	extern_paramlist = . (6), FOLLOW [186] -> REDUCE extern_paramlist #0 CALL extern_paramdeflist
[126]
	statement/L1 = typedefinition ";" . (74), FOLLOW [98] -> REDUCE statement #2 CALL definition
[127]
	main_procedure = "main" "{" codeblock "}" . (scope:70), FOLLOW [0] -> REDUCE main_procedure #4 CALL main_procdef
[128]
	statementlist = statement statementlist . (step), FOLLOW [18] -> REDUCE statementlist #2
[129]
	iexpression = expression indirection . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 236
[130]
	expression/L3 = . expression "=" expression, FOLLOW [239] -> GOTO 184
	expression/L3 = . expression "+=" expression, FOLLOW [239] -> GOTO 184
	expression/L3 = . expression "-=" expression, FOLLOW [239] -> GOTO 184
	expression/L3 = . expression "*=" expression, FOLLOW [239] -> GOTO 184
	expression/L3 = . expression "/=" expression, FOLLOW [239] -> GOTO 184
	expression/L3 = . expression "^=" expression, FOLLOW [239] -> GOTO 184
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 184
	expression/L3 = . expression "%=" expression, FOLLOW [239] -> GOTO 184
	expression/L3 = . expression "&&=" expression, FOLLOW [239] -> GOTO 184
	expression/L3 = . expression "||=" expression, FOLLOW [239] -> GOTO 184
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 184
	expression/L3 = . expression "|=" expression, FOLLOW [239] -> GOTO 184
	expression/L3 = . expression "<<=" expression, FOLLOW [239] -> GOTO 184
	expression/L3 = . expression ">>=" expression, FOLLOW [239] -> GOTO 184
	expression/L4 = . expression "||" expression, FOLLOW [239] -> GOTO 184
	expression/L5 = . expression "&&" expression, FOLLOW [239] -> GOTO 184
	expression/L6 = . expression "|" expression, FOLLOW [239] -> GOTO 184
	expression/L7 = . expression "^" expression, FOLLOW [239] -> GOTO 184
	expression/L7 = . expression "&" expression, FOLLOW [239] -> GOTO 184
	expression/L8 = . expression "==" expression, FOLLOW [239] -> GOTO 184
	expression/L8 = . expression "!=" expression, FOLLOW [239] -> GOTO 184
	expression/L8 = . expression "<=" expression, FOLLOW [239] -> GOTO 184
	expression/L8 = . expression "<" expression, FOLLOW [239] -> GOTO 184
	expression/L8 = . expression ">=" expression, FOLLOW [239] -> GOTO 184
	expression/L8 = . expression ">" expression, FOLLOW [239] -> GOTO 184
	expression/L9 = . expression "+" expression, FOLLOW [239] -> GOTO 184
	expression/L9 = . expression "-" expression, FOLLOW [239] -> GOTO 184
	expression/L10 = . expression "*" expression, FOLLOW [239] -> GOTO 184
	expression/L10 = . expression "/" expression, FOLLOW [239] -> GOTO 184
	expression/L10 = . expression "%" expression, FOLLOW [239] -> GOTO 184
	expression/L11 = . expression "<<" expression, FOLLOW [239] -> GOTO 184
	expression/L11 = . expression ">>" expression, FOLLOW [239] -> GOTO 184
	expression/L12 = . expression "." IDENT, FOLLOW [239] -> GOTO 184
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [239] -> GOTO 184
	expression/L13 = . expression "(" ")", FOLLOW [239] -> GOTO 184
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [239] -> GOTO 184
	iexpression = . expression indirection IDENT, FOLLOW [239] -> GOTO 184
	expressionlist = . expression "," expressionlist, FOLLOW [10] -> GOTO 184
	expressionlist = . expression, FOLLOW [10] -> GOTO 184
	expression/L12 = . iexpression, FOLLOW [239] -> GOTO 69
	expression/L13 = expression "(" . expressionlist ")", FOLLOW [239] -> GOTO 237
	expression/L2 = . BOOLEAN, FOLLOW [239] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [239] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [239] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [239] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [239] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [239] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [239] -> SHIFT '(' GOTO 77
	expression/L13 = expression "(" . ")", FOLLOW [239] -> SHIFT ')' GOTO 238
	expression/L9 = . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [239] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [239] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [239] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [239] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [239] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [239] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [239] -> SHIFT "null" GOTO 92
[131]
	statement/L1 = expression ";" . (75), FOLLOW [98] -> REDUCE statement #2 CALL free_expression
[132]
	expression/L3 = . expression "=" expression, FOLLOW [239] -> GOTO 239
	expression/L3 = . expression "+=" expression, FOLLOW [239] -> GOTO 239
	expression/L3 = . expression "-=" expression, FOLLOW [239] -> GOTO 239
	expression/L3 = . expression "*=" expression, FOLLOW [239] -> GOTO 239
	expression/L3 = . expression "/=" expression, FOLLOW [239] -> GOTO 239
	expression/L3 = . expression "^=" expression, FOLLOW [239] -> GOTO 239
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 239
	expression/L3 = . expression "%=" expression, FOLLOW [239] -> GOTO 239
	expression/L3 = . expression "&&=" expression, FOLLOW [239] -> GOTO 239
	expression/L3 = . expression "||=" expression, FOLLOW [239] -> GOTO 239
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 239
	expression/L3 = . expression "|=" expression, FOLLOW [239] -> GOTO 239
	expression/L3 = . expression "<<=" expression, FOLLOW [239] -> GOTO 239
	expression/L3 = . expression ">>=" expression, FOLLOW [239] -> GOTO 239
	expression/L4 = . expression "||" expression, FOLLOW [239] -> GOTO 239
	expression/L5 = . expression "&&" expression, FOLLOW [239] -> GOTO 239
	expression/L6 = . expression "|" expression, FOLLOW [239] -> GOTO 239
	expression/L7 = . expression "^" expression, FOLLOW [239] -> GOTO 239
	expression/L7 = . expression "&" expression, FOLLOW [239] -> GOTO 239
	expression/L7 = expression "&" . expression, FOLLOW [239] -> GOTO 239
	expression/L8 = . expression "==" expression, FOLLOW [239] -> GOTO 239
	expression/L8 = . expression "!=" expression, FOLLOW [239] -> GOTO 239
	expression/L8 = . expression "<=" expression, FOLLOW [239] -> GOTO 239
	expression/L8 = . expression "<" expression, FOLLOW [239] -> GOTO 239
	expression/L8 = . expression ">=" expression, FOLLOW [239] -> GOTO 239
	expression/L8 = . expression ">" expression, FOLLOW [239] -> GOTO 239
	expression/L9 = . expression "+" expression, FOLLOW [239] -> GOTO 239
	expression/L9 = . expression "-" expression, FOLLOW [239] -> GOTO 239
	expression/L10 = . expression "*" expression, FOLLOW [239] -> GOTO 239
	expression/L10 = . expression "/" expression, FOLLOW [239] -> GOTO 239
	expression/L10 = . expression "%" expression, FOLLOW [239] -> GOTO 239
	expression/L11 = . expression "<<" expression, FOLLOW [239] -> GOTO 239
	expression/L11 = . expression ">>" expression, FOLLOW [239] -> GOTO 239
	expression/L12 = . expression "." IDENT, FOLLOW [239] -> GOTO 239
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [239] -> GOTO 239
	expression/L13 = . expression "(" ")", FOLLOW [239] -> GOTO 239
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [239] -> GOTO 239
	iexpression = . expression indirection IDENT, FOLLOW [239] -> GOTO 239
	expression/L12 = . iexpression, FOLLOW [239] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [239] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [239] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [239] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [239] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [239] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [239] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [239] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [239] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [239] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [239] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [239] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [239] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [239] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [239] -> SHIFT "null" GOTO 92
[133]
	expression/L3 = . expression "=" expression, FOLLOW [239] -> GOTO 240
	expression/L3 = . expression "+=" expression, FOLLOW [239] -> GOTO 240
	expression/L3 = . expression "-=" expression, FOLLOW [239] -> GOTO 240
	expression/L3 = . expression "*=" expression, FOLLOW [239] -> GOTO 240
	expression/L3 = . expression "/=" expression, FOLLOW [239] -> GOTO 240
	expression/L3 = . expression "^=" expression, FOLLOW [239] -> GOTO 240
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 240
	expression/L3 = . expression "%=" expression, FOLLOW [239] -> GOTO 240
	expression/L3 = . expression "&&=" expression, FOLLOW [239] -> GOTO 240
	expression/L3 = . expression "||=" expression, FOLLOW [239] -> GOTO 240
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 240
	expression/L3 = . expression "|=" expression, FOLLOW [239] -> GOTO 240
	expression/L3 = . expression "<<=" expression, FOLLOW [239] -> GOTO 240
	expression/L3 = . expression ">>=" expression, FOLLOW [239] -> GOTO 240
	expression/L4 = . expression "||" expression, FOLLOW [239] -> GOTO 240
	expression/L5 = . expression "&&" expression, FOLLOW [239] -> GOTO 240
	expression/L6 = . expression "|" expression, FOLLOW [239] -> GOTO 240
	expression/L7 = . expression "^" expression, FOLLOW [239] -> GOTO 240
	expression/L7 = expression "^" . expression, FOLLOW [239] -> GOTO 240
	expression/L7 = . expression "&" expression, FOLLOW [239] -> GOTO 240
	expression/L8 = . expression "==" expression, FOLLOW [239] -> GOTO 240
	expression/L8 = . expression "!=" expression, FOLLOW [239] -> GOTO 240
	expression/L8 = . expression "<=" expression, FOLLOW [239] -> GOTO 240
	expression/L8 = . expression "<" expression, FOLLOW [239] -> GOTO 240
	expression/L8 = . expression ">=" expression, FOLLOW [239] -> GOTO 240
	expression/L8 = . expression ">" expression, FOLLOW [239] -> GOTO 240
	expression/L9 = . expression "+" expression, FOLLOW [239] -> GOTO 240
	expression/L9 = . expression "-" expression, FOLLOW [239] -> GOTO 240
	expression/L10 = . expression "*" expression, FOLLOW [239] -> GOTO 240
	expression/L10 = . expression "/" expression, FOLLOW [239] -> GOTO 240
	expression/L10 = . expression "%" expression, FOLLOW [239] -> GOTO 240
	expression/L11 = . expression "<<" expression, FOLLOW [239] -> GOTO 240
	expression/L11 = . expression ">>" expression, FOLLOW [239] -> GOTO 240
	expression/L12 = . expression "." IDENT, FOLLOW [239] -> GOTO 240
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [239] -> GOTO 240
	expression/L13 = . expression "(" ")", FOLLOW [239] -> GOTO 240
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [239] -> GOTO 240
	iexpression = . expression indirection IDENT, FOLLOW [239] -> GOTO 240
	expression/L12 = . iexpression, FOLLOW [239] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [239] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [239] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [239] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [239] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [239] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [239] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [239] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [239] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [239] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [239] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [239] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [239] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [239] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [239] -> SHIFT "null" GOTO 92
[134]
	indirection = "->" . indirection, FOLLOW [13] -> GOTO 241
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 134
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 134
	indirection = "->" . (134), FOLLOW [13] -> REDUCE indirection #1 CALL count
[135]
	expression/L3 = . expression "=" expression, FOLLOW [239] -> GOTO 242
	expression/L3 = expression "=" . expression, FOLLOW [239] -> GOTO 242
	expression/L3 = . expression "+=" expression, FOLLOW [239] -> GOTO 242
	expression/L3 = . expression "-=" expression, FOLLOW [239] -> GOTO 242
	expression/L3 = . expression "*=" expression, FOLLOW [239] -> GOTO 242
	expression/L3 = . expression "/=" expression, FOLLOW [239] -> GOTO 242
	expression/L3 = . expression "^=" expression, FOLLOW [239] -> GOTO 242
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 242
	expression/L3 = . expression "%=" expression, FOLLOW [239] -> GOTO 242
	expression/L3 = . expression "&&=" expression, FOLLOW [239] -> GOTO 242
	expression/L3 = . expression "||=" expression, FOLLOW [239] -> GOTO 242
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 242
	expression/L3 = . expression "|=" expression, FOLLOW [239] -> GOTO 242
	expression/L3 = . expression "<<=" expression, FOLLOW [239] -> GOTO 242
	expression/L3 = . expression ">>=" expression, FOLLOW [239] -> GOTO 242
	expression/L4 = . expression "||" expression, FOLLOW [239] -> GOTO 242
	expression/L5 = . expression "&&" expression, FOLLOW [239] -> GOTO 242
	expression/L6 = . expression "|" expression, FOLLOW [239] -> GOTO 242
	expression/L7 = . expression "^" expression, FOLLOW [239] -> GOTO 242
	expression/L7 = . expression "&" expression, FOLLOW [239] -> GOTO 242
	expression/L8 = . expression "==" expression, FOLLOW [239] -> GOTO 242
	expression/L8 = . expression "!=" expression, FOLLOW [239] -> GOTO 242
	expression/L8 = . expression "<=" expression, FOLLOW [239] -> GOTO 242
	expression/L8 = . expression "<" expression, FOLLOW [239] -> GOTO 242
	expression/L8 = . expression ">=" expression, FOLLOW [239] -> GOTO 242
	expression/L8 = . expression ">" expression, FOLLOW [239] -> GOTO 242
	expression/L9 = . expression "+" expression, FOLLOW [239] -> GOTO 242
	expression/L9 = . expression "-" expression, FOLLOW [239] -> GOTO 242
	expression/L10 = . expression "*" expression, FOLLOW [239] -> GOTO 242
	expression/L10 = . expression "/" expression, FOLLOW [239] -> GOTO 242
	expression/L10 = . expression "%" expression, FOLLOW [239] -> GOTO 242
	expression/L11 = . expression "<<" expression, FOLLOW [239] -> GOTO 242
	expression/L11 = . expression ">>" expression, FOLLOW [239] -> GOTO 242
	expression/L12 = . expression "." IDENT, FOLLOW [239] -> GOTO 242
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [239] -> GOTO 242
	expression/L13 = . expression "(" ")", FOLLOW [239] -> GOTO 242
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [239] -> GOTO 242
	iexpression = . expression indirection IDENT, FOLLOW [239] -> GOTO 242
	expression/L12 = . iexpression, FOLLOW [239] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [239] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [239] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [239] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [239] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [239] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [239] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [239] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [239] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [239] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [239] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [239] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [239] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [239] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [239] -> SHIFT "null" GOTO 92
[136]
	expression/L3 = . expression "=" expression, FOLLOW [239] -> GOTO 243
	expression/L3 = . expression "+=" expression, FOLLOW [239] -> GOTO 243
	expression/L3 = . expression "-=" expression, FOLLOW [239] -> GOTO 243
	expression/L3 = . expression "*=" expression, FOLLOW [239] -> GOTO 243
	expression/L3 = . expression "/=" expression, FOLLOW [239] -> GOTO 243
	expression/L3 = . expression "^=" expression, FOLLOW [239] -> GOTO 243
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 243
	expression/L3 = . expression "%=" expression, FOLLOW [239] -> GOTO 243
	expression/L3 = . expression "&&=" expression, FOLLOW [239] -> GOTO 243
	expression/L3 = . expression "||=" expression, FOLLOW [239] -> GOTO 243
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 243
	expression/L3 = . expression "|=" expression, FOLLOW [239] -> GOTO 243
	expression/L3 = . expression "<<=" expression, FOLLOW [239] -> GOTO 243
	expression/L3 = . expression ">>=" expression, FOLLOW [239] -> GOTO 243
	expression/L4 = . expression "||" expression, FOLLOW [239] -> GOTO 243
	expression/L5 = . expression "&&" expression, FOLLOW [239] -> GOTO 243
	expression/L6 = . expression "|" expression, FOLLOW [239] -> GOTO 243
	expression/L7 = . expression "^" expression, FOLLOW [239] -> GOTO 243
	expression/L7 = . expression "&" expression, FOLLOW [239] -> GOTO 243
	expression/L8 = . expression "==" expression, FOLLOW [239] -> GOTO 243
	expression/L8 = . expression "!=" expression, FOLLOW [239] -> GOTO 243
	expression/L8 = . expression "<=" expression, FOLLOW [239] -> GOTO 243
	expression/L8 = . expression "<" expression, FOLLOW [239] -> GOTO 243
	expression/L8 = . expression ">=" expression, FOLLOW [239] -> GOTO 243
	expression/L8 = . expression ">" expression, FOLLOW [239] -> GOTO 243
	expression/L9 = . expression "+" expression, FOLLOW [239] -> GOTO 243
	expression/L9 = expression "+" . expression, FOLLOW [239] -> GOTO 243
	expression/L9 = . expression "-" expression, FOLLOW [239] -> GOTO 243
	expression/L10 = . expression "*" expression, FOLLOW [239] -> GOTO 243
	expression/L10 = . expression "/" expression, FOLLOW [239] -> GOTO 243
	expression/L10 = . expression "%" expression, FOLLOW [239] -> GOTO 243
	expression/L11 = . expression "<<" expression, FOLLOW [239] -> GOTO 243
	expression/L11 = . expression ">>" expression, FOLLOW [239] -> GOTO 243
	expression/L12 = . expression "." IDENT, FOLLOW [239] -> GOTO 243
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [239] -> GOTO 243
	expression/L13 = . expression "(" ")", FOLLOW [239] -> GOTO 243
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [239] -> GOTO 243
	iexpression = . expression indirection IDENT, FOLLOW [239] -> GOTO 243
	expression/L12 = . iexpression, FOLLOW [239] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [239] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [239] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [239] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [239] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [239] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [239] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [239] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [239] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [239] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [239] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [239] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [239] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [239] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [239] -> SHIFT "null" GOTO 92
[137]
	expression/L3 = . expression "=" expression, FOLLOW [239] -> GOTO 244
	expression/L3 = . expression "+=" expression, FOLLOW [239] -> GOTO 244
	expression/L3 = . expression "-=" expression, FOLLOW [239] -> GOTO 244
	expression/L3 = . expression "*=" expression, FOLLOW [239] -> GOTO 244
	expression/L3 = . expression "/=" expression, FOLLOW [239] -> GOTO 244
	expression/L3 = . expression "^=" expression, FOLLOW [239] -> GOTO 244
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 244
	expression/L3 = . expression "%=" expression, FOLLOW [239] -> GOTO 244
	expression/L3 = . expression "&&=" expression, FOLLOW [239] -> GOTO 244
	expression/L3 = . expression "||=" expression, FOLLOW [239] -> GOTO 244
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 244
	expression/L3 = . expression "|=" expression, FOLLOW [239] -> GOTO 244
	expression/L3 = . expression "<<=" expression, FOLLOW [239] -> GOTO 244
	expression/L3 = . expression ">>=" expression, FOLLOW [239] -> GOTO 244
	expression/L4 = . expression "||" expression, FOLLOW [239] -> GOTO 244
	expression/L5 = . expression "&&" expression, FOLLOW [239] -> GOTO 244
	expression/L6 = . expression "|" expression, FOLLOW [239] -> GOTO 244
	expression/L7 = . expression "^" expression, FOLLOW [239] -> GOTO 244
	expression/L7 = . expression "&" expression, FOLLOW [239] -> GOTO 244
	expression/L8 = . expression "==" expression, FOLLOW [239] -> GOTO 244
	expression/L8 = . expression "!=" expression, FOLLOW [239] -> GOTO 244
	expression/L8 = . expression "<=" expression, FOLLOW [239] -> GOTO 244
	expression/L8 = . expression "<" expression, FOLLOW [239] -> GOTO 244
	expression/L8 = . expression ">=" expression, FOLLOW [239] -> GOTO 244
	expression/L8 = . expression ">" expression, FOLLOW [239] -> GOTO 244
	expression/L9 = . expression "+" expression, FOLLOW [239] -> GOTO 244
	expression/L9 = . expression "-" expression, FOLLOW [239] -> GOTO 244
	expression/L9 = expression "-" . expression, FOLLOW [239] -> GOTO 244
	expression/L10 = . expression "*" expression, FOLLOW [239] -> GOTO 244
	expression/L10 = . expression "/" expression, FOLLOW [239] -> GOTO 244
	expression/L10 = . expression "%" expression, FOLLOW [239] -> GOTO 244
	expression/L11 = . expression "<<" expression, FOLLOW [239] -> GOTO 244
	expression/L11 = . expression ">>" expression, FOLLOW [239] -> GOTO 244
	expression/L12 = . expression "." IDENT, FOLLOW [239] -> GOTO 244
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [239] -> GOTO 244
	expression/L13 = . expression "(" ")", FOLLOW [239] -> GOTO 244
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [239] -> GOTO 244
	iexpression = . expression indirection IDENT, FOLLOW [239] -> GOTO 244
	expression/L12 = . iexpression, FOLLOW [239] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [239] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [239] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [239] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [239] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [239] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [239] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [239] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [239] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [239] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [239] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [239] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [239] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [239] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [239] -> SHIFT "null" GOTO 92
[138]
	expression/L3 = . expression "=" expression, FOLLOW [239] -> GOTO 245
	expression/L3 = . expression "+=" expression, FOLLOW [239] -> GOTO 245
	expression/L3 = . expression "-=" expression, FOLLOW [239] -> GOTO 245
	expression/L3 = . expression "*=" expression, FOLLOW [239] -> GOTO 245
	expression/L3 = . expression "/=" expression, FOLLOW [239] -> GOTO 245
	expression/L3 = . expression "^=" expression, FOLLOW [239] -> GOTO 245
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 245
	expression/L3 = . expression "%=" expression, FOLLOW [239] -> GOTO 245
	expression/L3 = . expression "&&=" expression, FOLLOW [239] -> GOTO 245
	expression/L3 = . expression "||=" expression, FOLLOW [239] -> GOTO 245
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 245
	expression/L3 = . expression "|=" expression, FOLLOW [239] -> GOTO 245
	expression/L3 = . expression "<<=" expression, FOLLOW [239] -> GOTO 245
	expression/L3 = . expression ">>=" expression, FOLLOW [239] -> GOTO 245
	expression/L4 = . expression "||" expression, FOLLOW [239] -> GOTO 245
	expression/L5 = . expression "&&" expression, FOLLOW [239] -> GOTO 245
	expression/L6 = . expression "|" expression, FOLLOW [239] -> GOTO 245
	expression/L7 = . expression "^" expression, FOLLOW [239] -> GOTO 245
	expression/L7 = . expression "&" expression, FOLLOW [239] -> GOTO 245
	expression/L8 = . expression "==" expression, FOLLOW [239] -> GOTO 245
	expression/L8 = . expression "!=" expression, FOLLOW [239] -> GOTO 245
	expression/L8 = . expression "<=" expression, FOLLOW [239] -> GOTO 245
	expression/L8 = . expression "<" expression, FOLLOW [239] -> GOTO 245
	expression/L8 = . expression ">=" expression, FOLLOW [239] -> GOTO 245
	expression/L8 = . expression ">" expression, FOLLOW [239] -> GOTO 245
	expression/L9 = . expression "+" expression, FOLLOW [239] -> GOTO 245
	expression/L9 = . expression "-" expression, FOLLOW [239] -> GOTO 245
	expression/L10 = . expression "*" expression, FOLLOW [239] -> GOTO 245
	expression/L10 = expression "*" . expression, FOLLOW [239] -> GOTO 245
	expression/L10 = . expression "/" expression, FOLLOW [239] -> GOTO 245
	expression/L10 = . expression "%" expression, FOLLOW [239] -> GOTO 245
	expression/L11 = . expression "<<" expression, FOLLOW [239] -> GOTO 245
	expression/L11 = . expression ">>" expression, FOLLOW [239] -> GOTO 245
	expression/L12 = . expression "." IDENT, FOLLOW [239] -> GOTO 245
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [239] -> GOTO 245
	expression/L13 = . expression "(" ")", FOLLOW [239] -> GOTO 245
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [239] -> GOTO 245
	iexpression = . expression indirection IDENT, FOLLOW [239] -> GOTO 245
	expression/L12 = . iexpression, FOLLOW [239] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [239] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [239] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [239] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [239] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [239] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [239] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [239] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [239] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [239] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [239] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [239] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [239] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [239] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [239] -> SHIFT "null" GOTO 92
[139]
	expression/L3 = . expression "=" expression, FOLLOW [239] -> GOTO 246
	expression/L3 = . expression "+=" expression, FOLLOW [239] -> GOTO 246
	expression/L3 = . expression "-=" expression, FOLLOW [239] -> GOTO 246
	expression/L3 = . expression "*=" expression, FOLLOW [239] -> GOTO 246
	expression/L3 = . expression "/=" expression, FOLLOW [239] -> GOTO 246
	expression/L3 = . expression "^=" expression, FOLLOW [239] -> GOTO 246
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 246
	expression/L3 = . expression "%=" expression, FOLLOW [239] -> GOTO 246
	expression/L3 = . expression "&&=" expression, FOLLOW [239] -> GOTO 246
	expression/L3 = . expression "||=" expression, FOLLOW [239] -> GOTO 246
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 246
	expression/L3 = . expression "|=" expression, FOLLOW [239] -> GOTO 246
	expression/L3 = . expression "<<=" expression, FOLLOW [239] -> GOTO 246
	expression/L3 = . expression ">>=" expression, FOLLOW [239] -> GOTO 246
	expression/L4 = . expression "||" expression, FOLLOW [239] -> GOTO 246
	expression/L5 = . expression "&&" expression, FOLLOW [239] -> GOTO 246
	expression/L6 = . expression "|" expression, FOLLOW [239] -> GOTO 246
	expression/L7 = . expression "^" expression, FOLLOW [239] -> GOTO 246
	expression/L7 = . expression "&" expression, FOLLOW [239] -> GOTO 246
	expression/L8 = . expression "==" expression, FOLLOW [239] -> GOTO 246
	expression/L8 = . expression "!=" expression, FOLLOW [239] -> GOTO 246
	expression/L8 = . expression "<=" expression, FOLLOW [239] -> GOTO 246
	expression/L8 = . expression "<" expression, FOLLOW [239] -> GOTO 246
	expression/L8 = . expression ">=" expression, FOLLOW [239] -> GOTO 246
	expression/L8 = . expression ">" expression, FOLLOW [239] -> GOTO 246
	expression/L9 = . expression "+" expression, FOLLOW [239] -> GOTO 246
	expression/L9 = . expression "-" expression, FOLLOW [239] -> GOTO 246
	expression/L10 = . expression "*" expression, FOLLOW [239] -> GOTO 246
	expression/L10 = . expression "/" expression, FOLLOW [239] -> GOTO 246
	expression/L10 = expression "/" . expression, FOLLOW [239] -> GOTO 246
	expression/L10 = . expression "%" expression, FOLLOW [239] -> GOTO 246
	expression/L11 = . expression "<<" expression, FOLLOW [239] -> GOTO 246
	expression/L11 = . expression ">>" expression, FOLLOW [239] -> GOTO 246
	expression/L12 = . expression "." IDENT, FOLLOW [239] -> GOTO 246
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [239] -> GOTO 246
	expression/L13 = . expression "(" ")", FOLLOW [239] -> GOTO 246
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [239] -> GOTO 246
	iexpression = . expression indirection IDENT, FOLLOW [239] -> GOTO 246
	expression/L12 = . iexpression, FOLLOW [239] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [239] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [239] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [239] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [239] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [239] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [239] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [239] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [239] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [239] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [239] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [239] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [239] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [239] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [239] -> SHIFT "null" GOTO 92
[140]
	expression/L3 = . expression "=" expression, FOLLOW [239] -> GOTO 247
	expression/L3 = . expression "+=" expression, FOLLOW [239] -> GOTO 247
	expression/L3 = . expression "-=" expression, FOLLOW [239] -> GOTO 247
	expression/L3 = . expression "*=" expression, FOLLOW [239] -> GOTO 247
	expression/L3 = . expression "/=" expression, FOLLOW [239] -> GOTO 247
	expression/L3 = . expression "^=" expression, FOLLOW [239] -> GOTO 247
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 247
	expression/L3 = . expression "%=" expression, FOLLOW [239] -> GOTO 247
	expression/L3 = . expression "&&=" expression, FOLLOW [239] -> GOTO 247
	expression/L3 = . expression "||=" expression, FOLLOW [239] -> GOTO 247
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 247
	expression/L3 = . expression "|=" expression, FOLLOW [239] -> GOTO 247
	expression/L3 = . expression "<<=" expression, FOLLOW [239] -> GOTO 247
	expression/L3 = . expression ">>=" expression, FOLLOW [239] -> GOTO 247
	expression/L4 = . expression "||" expression, FOLLOW [239] -> GOTO 247
	expression/L5 = . expression "&&" expression, FOLLOW [239] -> GOTO 247
	expression/L6 = . expression "|" expression, FOLLOW [239] -> GOTO 247
	expression/L7 = . expression "^" expression, FOLLOW [239] -> GOTO 247
	expression/L7 = . expression "&" expression, FOLLOW [239] -> GOTO 247
	expression/L8 = . expression "==" expression, FOLLOW [239] -> GOTO 247
	expression/L8 = . expression "!=" expression, FOLLOW [239] -> GOTO 247
	expression/L8 = . expression "<=" expression, FOLLOW [239] -> GOTO 247
	expression/L8 = . expression "<" expression, FOLLOW [239] -> GOTO 247
	expression/L8 = . expression ">=" expression, FOLLOW [239] -> GOTO 247
	expression/L8 = . expression ">" expression, FOLLOW [239] -> GOTO 247
	expression/L9 = . expression "+" expression, FOLLOW [239] -> GOTO 247
	expression/L9 = . expression "-" expression, FOLLOW [239] -> GOTO 247
	expression/L10 = . expression "*" expression, FOLLOW [239] -> GOTO 247
	expression/L10 = . expression "/" expression, FOLLOW [239] -> GOTO 247
	expression/L10 = . expression "%" expression, FOLLOW [239] -> GOTO 247
	expression/L10 = expression "%" . expression, FOLLOW [239] -> GOTO 247
	expression/L11 = . expression "<<" expression, FOLLOW [239] -> GOTO 247
	expression/L11 = . expression ">>" expression, FOLLOW [239] -> GOTO 247
	expression/L12 = . expression "." IDENT, FOLLOW [239] -> GOTO 247
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [239] -> GOTO 247
	expression/L13 = . expression "(" ")", FOLLOW [239] -> GOTO 247
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [239] -> GOTO 247
	iexpression = . expression indirection IDENT, FOLLOW [239] -> GOTO 247
	expression/L12 = . iexpression, FOLLOW [239] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [239] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [239] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [239] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [239] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [239] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [239] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [239] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [239] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [239] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [239] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [239] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [239] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [239] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [239] -> SHIFT "null" GOTO 92
[141]
	expression/L3 = . expression "=" expression, FOLLOW [239] -> GOTO 248
	expression/L3 = . expression "+=" expression, FOLLOW [239] -> GOTO 248
	expression/L3 = . expression "-=" expression, FOLLOW [239] -> GOTO 248
	expression/L3 = . expression "*=" expression, FOLLOW [239] -> GOTO 248
	expression/L3 = . expression "/=" expression, FOLLOW [239] -> GOTO 248
	expression/L3 = . expression "^=" expression, FOLLOW [239] -> GOTO 248
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 248
	expression/L3 = . expression "%=" expression, FOLLOW [239] -> GOTO 248
	expression/L3 = . expression "&&=" expression, FOLLOW [239] -> GOTO 248
	expression/L3 = . expression "||=" expression, FOLLOW [239] -> GOTO 248
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 248
	expression/L3 = . expression "|=" expression, FOLLOW [239] -> GOTO 248
	expression/L3 = . expression "<<=" expression, FOLLOW [239] -> GOTO 248
	expression/L3 = . expression ">>=" expression, FOLLOW [239] -> GOTO 248
	expression/L4 = . expression "||" expression, FOLLOW [239] -> GOTO 248
	expression/L5 = . expression "&&" expression, FOLLOW [239] -> GOTO 248
	expression/L5 = expression "&&" . expression, FOLLOW [239] -> GOTO 248
	expression/L6 = . expression "|" expression, FOLLOW [239] -> GOTO 248
	expression/L7 = . expression "^" expression, FOLLOW [239] -> GOTO 248
	expression/L7 = . expression "&" expression, FOLLOW [239] -> GOTO 248
	expression/L8 = . expression "==" expression, FOLLOW [239] -> GOTO 248
	expression/L8 = . expression "!=" expression, FOLLOW [239] -> GOTO 248
	expression/L8 = . expression "<=" expression, FOLLOW [239] -> GOTO 248
	expression/L8 = . expression "<" expression, FOLLOW [239] -> GOTO 248
	expression/L8 = . expression ">=" expression, FOLLOW [239] -> GOTO 248
	expression/L8 = . expression ">" expression, FOLLOW [239] -> GOTO 248
	expression/L9 = . expression "+" expression, FOLLOW [239] -> GOTO 248
	expression/L9 = . expression "-" expression, FOLLOW [239] -> GOTO 248
	expression/L10 = . expression "*" expression, FOLLOW [239] -> GOTO 248
	expression/L10 = . expression "/" expression, FOLLOW [239] -> GOTO 248
	expression/L10 = . expression "%" expression, FOLLOW [239] -> GOTO 248
	expression/L11 = . expression "<<" expression, FOLLOW [239] -> GOTO 248
	expression/L11 = . expression ">>" expression, FOLLOW [239] -> GOTO 248
	expression/L12 = . expression "." IDENT, FOLLOW [239] -> GOTO 248
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [239] -> GOTO 248
	expression/L13 = . expression "(" ")", FOLLOW [239] -> GOTO 248
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [239] -> GOTO 248
	iexpression = . expression indirection IDENT, FOLLOW [239] -> GOTO 248
	expression/L12 = . iexpression, FOLLOW [239] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [239] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [239] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [239] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [239] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [239] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [239] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [239] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [239] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [239] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [239] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [239] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [239] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [239] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [239] -> SHIFT "null" GOTO 92
[142]
	expression/L3 = . expression "=" expression, FOLLOW [239] -> GOTO 249
	expression/L3 = . expression "+=" expression, FOLLOW [239] -> GOTO 249
	expression/L3 = . expression "-=" expression, FOLLOW [239] -> GOTO 249
	expression/L3 = . expression "*=" expression, FOLLOW [239] -> GOTO 249
	expression/L3 = . expression "/=" expression, FOLLOW [239] -> GOTO 249
	expression/L3 = . expression "^=" expression, FOLLOW [239] -> GOTO 249
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 249
	expression/L3 = . expression "%=" expression, FOLLOW [239] -> GOTO 249
	expression/L3 = . expression "&&=" expression, FOLLOW [239] -> GOTO 249
	expression/L3 = . expression "||=" expression, FOLLOW [239] -> GOTO 249
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 249
	expression/L3 = . expression "|=" expression, FOLLOW [239] -> GOTO 249
	expression/L3 = . expression "<<=" expression, FOLLOW [239] -> GOTO 249
	expression/L3 = . expression ">>=" expression, FOLLOW [239] -> GOTO 249
	expression/L4 = . expression "||" expression, FOLLOW [239] -> GOTO 249
	expression/L4 = expression "||" . expression, FOLLOW [239] -> GOTO 249
	expression/L5 = . expression "&&" expression, FOLLOW [239] -> GOTO 249
	expression/L6 = . expression "|" expression, FOLLOW [239] -> GOTO 249
	expression/L7 = . expression "^" expression, FOLLOW [239] -> GOTO 249
	expression/L7 = . expression "&" expression, FOLLOW [239] -> GOTO 249
	expression/L8 = . expression "==" expression, FOLLOW [239] -> GOTO 249
	expression/L8 = . expression "!=" expression, FOLLOW [239] -> GOTO 249
	expression/L8 = . expression "<=" expression, FOLLOW [239] -> GOTO 249
	expression/L8 = . expression "<" expression, FOLLOW [239] -> GOTO 249
	expression/L8 = . expression ">=" expression, FOLLOW [239] -> GOTO 249
	expression/L8 = . expression ">" expression, FOLLOW [239] -> GOTO 249
	expression/L9 = . expression "+" expression, FOLLOW [239] -> GOTO 249
	expression/L9 = . expression "-" expression, FOLLOW [239] -> GOTO 249
	expression/L10 = . expression "*" expression, FOLLOW [239] -> GOTO 249
	expression/L10 = . expression "/" expression, FOLLOW [239] -> GOTO 249
	expression/L10 = . expression "%" expression, FOLLOW [239] -> GOTO 249
	expression/L11 = . expression "<<" expression, FOLLOW [239] -> GOTO 249
	expression/L11 = . expression ">>" expression, FOLLOW [239] -> GOTO 249
	expression/L12 = . expression "." IDENT, FOLLOW [239] -> GOTO 249
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [239] -> GOTO 249
	expression/L13 = . expression "(" ")", FOLLOW [239] -> GOTO 249
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [239] -> GOTO 249
	iexpression = . expression indirection IDENT, FOLLOW [239] -> GOTO 249
	expression/L12 = . iexpression, FOLLOW [239] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [239] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [239] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [239] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [239] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [239] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [239] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [239] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [239] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [239] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [239] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [239] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [239] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [239] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [239] -> SHIFT "null" GOTO 92
[143]
	expression/L3 = . expression "=" expression, FOLLOW [239] -> GOTO 250
	expression/L3 = . expression "+=" expression, FOLLOW [239] -> GOTO 250
	expression/L3 = . expression "-=" expression, FOLLOW [239] -> GOTO 250
	expression/L3 = . expression "*=" expression, FOLLOW [239] -> GOTO 250
	expression/L3 = . expression "/=" expression, FOLLOW [239] -> GOTO 250
	expression/L3 = . expression "^=" expression, FOLLOW [239] -> GOTO 250
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 250
	expression/L3 = . expression "%=" expression, FOLLOW [239] -> GOTO 250
	expression/L3 = . expression "&&=" expression, FOLLOW [239] -> GOTO 250
	expression/L3 = . expression "||=" expression, FOLLOW [239] -> GOTO 250
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 250
	expression/L3 = . expression "|=" expression, FOLLOW [239] -> GOTO 250
	expression/L3 = . expression "<<=" expression, FOLLOW [239] -> GOTO 250
	expression/L3 = . expression ">>=" expression, FOLLOW [239] -> GOTO 250
	expression/L4 = . expression "||" expression, FOLLOW [239] -> GOTO 250
	expression/L5 = . expression "&&" expression, FOLLOW [239] -> GOTO 250
	expression/L6 = . expression "|" expression, FOLLOW [239] -> GOTO 250
	expression/L6 = expression "|" . expression, FOLLOW [239] -> GOTO 250
	expression/L7 = . expression "^" expression, FOLLOW [239] -> GOTO 250
	expression/L7 = . expression "&" expression, FOLLOW [239] -> GOTO 250
	expression/L8 = . expression "==" expression, FOLLOW [239] -> GOTO 250
	expression/L8 = . expression "!=" expression, FOLLOW [239] -> GOTO 250
	expression/L8 = . expression "<=" expression, FOLLOW [239] -> GOTO 250
	expression/L8 = . expression "<" expression, FOLLOW [239] -> GOTO 250
	expression/L8 = . expression ">=" expression, FOLLOW [239] -> GOTO 250
	expression/L8 = . expression ">" expression, FOLLOW [239] -> GOTO 250
	expression/L9 = . expression "+" expression, FOLLOW [239] -> GOTO 250
	expression/L9 = . expression "-" expression, FOLLOW [239] -> GOTO 250
	expression/L10 = . expression "*" expression, FOLLOW [239] -> GOTO 250
	expression/L10 = . expression "/" expression, FOLLOW [239] -> GOTO 250
	expression/L10 = . expression "%" expression, FOLLOW [239] -> GOTO 250
	expression/L11 = . expression "<<" expression, FOLLOW [239] -> GOTO 250
	expression/L11 = . expression ">>" expression, FOLLOW [239] -> GOTO 250
	expression/L12 = . expression "." IDENT, FOLLOW [239] -> GOTO 250
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [239] -> GOTO 250
	expression/L13 = . expression "(" ")", FOLLOW [239] -> GOTO 250
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [239] -> GOTO 250
	iexpression = . expression indirection IDENT, FOLLOW [239] -> GOTO 250
	expression/L12 = . iexpression, FOLLOW [239] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [239] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [239] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [239] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [239] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [239] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [239] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [239] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [239] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [239] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [239] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [239] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [239] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [239] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [239] -> SHIFT "null" GOTO 92
[144]
	expression/L3 = . expression "=" expression, FOLLOW [239] -> GOTO 251
	expression/L3 = . expression "+=" expression, FOLLOW [239] -> GOTO 251
	expression/L3 = . expression "-=" expression, FOLLOW [239] -> GOTO 251
	expression/L3 = . expression "*=" expression, FOLLOW [239] -> GOTO 251
	expression/L3 = . expression "/=" expression, FOLLOW [239] -> GOTO 251
	expression/L3 = . expression "^=" expression, FOLLOW [239] -> GOTO 251
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 251
	expression/L3 = . expression "%=" expression, FOLLOW [239] -> GOTO 251
	expression/L3 = . expression "&&=" expression, FOLLOW [239] -> GOTO 251
	expression/L3 = . expression "||=" expression, FOLLOW [239] -> GOTO 251
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 251
	expression/L3 = . expression "|=" expression, FOLLOW [239] -> GOTO 251
	expression/L3 = . expression "<<=" expression, FOLLOW [239] -> GOTO 251
	expression/L3 = . expression ">>=" expression, FOLLOW [239] -> GOTO 251
	expression/L4 = . expression "||" expression, FOLLOW [239] -> GOTO 251
	expression/L5 = . expression "&&" expression, FOLLOW [239] -> GOTO 251
	expression/L6 = . expression "|" expression, FOLLOW [239] -> GOTO 251
	expression/L7 = . expression "^" expression, FOLLOW [239] -> GOTO 251
	expression/L7 = . expression "&" expression, FOLLOW [239] -> GOTO 251
	expression/L8 = . expression "==" expression, FOLLOW [239] -> GOTO 251
	expression/L8 = . expression "!=" expression, FOLLOW [239] -> GOTO 251
	expression/L8 = . expression "<=" expression, FOLLOW [239] -> GOTO 251
	expression/L8 = . expression "<" expression, FOLLOW [239] -> GOTO 251
	expression/L8 = . expression ">=" expression, FOLLOW [239] -> GOTO 251
	expression/L8 = . expression ">" expression, FOLLOW [239] -> GOTO 251
	expression/L9 = . expression "+" expression, FOLLOW [239] -> GOTO 251
	expression/L9 = . expression "-" expression, FOLLOW [239] -> GOTO 251
	expression/L10 = . expression "*" expression, FOLLOW [239] -> GOTO 251
	expression/L10 = . expression "/" expression, FOLLOW [239] -> GOTO 251
	expression/L10 = . expression "%" expression, FOLLOW [239] -> GOTO 251
	expression/L11 = . expression "<<" expression, FOLLOW [239] -> GOTO 251
	expression/L11 = expression "<<" . expression, FOLLOW [239] -> GOTO 251
	expression/L11 = . expression ">>" expression, FOLLOW [239] -> GOTO 251
	expression/L12 = . expression "." IDENT, FOLLOW [239] -> GOTO 251
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [239] -> GOTO 251
	expression/L13 = . expression "(" ")", FOLLOW [239] -> GOTO 251
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [239] -> GOTO 251
	iexpression = . expression indirection IDENT, FOLLOW [239] -> GOTO 251
	expression/L12 = . iexpression, FOLLOW [239] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [239] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [239] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [239] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [239] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [239] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [239] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [239] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [239] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [239] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [239] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [239] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [239] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [239] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [239] -> SHIFT "null" GOTO 92
[145]
	expression/L3 = . expression "=" expression, FOLLOW [239] -> GOTO 252
	expression/L3 = . expression "+=" expression, FOLLOW [239] -> GOTO 252
	expression/L3 = . expression "-=" expression, FOLLOW [239] -> GOTO 252
	expression/L3 = . expression "*=" expression, FOLLOW [239] -> GOTO 252
	expression/L3 = . expression "/=" expression, FOLLOW [239] -> GOTO 252
	expression/L3 = . expression "^=" expression, FOLLOW [239] -> GOTO 252
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 252
	expression/L3 = . expression "%=" expression, FOLLOW [239] -> GOTO 252
	expression/L3 = . expression "&&=" expression, FOLLOW [239] -> GOTO 252
	expression/L3 = . expression "||=" expression, FOLLOW [239] -> GOTO 252
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 252
	expression/L3 = . expression "|=" expression, FOLLOW [239] -> GOTO 252
	expression/L3 = . expression "<<=" expression, FOLLOW [239] -> GOTO 252
	expression/L3 = . expression ">>=" expression, FOLLOW [239] -> GOTO 252
	expression/L4 = . expression "||" expression, FOLLOW [239] -> GOTO 252
	expression/L5 = . expression "&&" expression, FOLLOW [239] -> GOTO 252
	expression/L6 = . expression "|" expression, FOLLOW [239] -> GOTO 252
	expression/L7 = . expression "^" expression, FOLLOW [239] -> GOTO 252
	expression/L7 = . expression "&" expression, FOLLOW [239] -> GOTO 252
	expression/L8 = . expression "==" expression, FOLLOW [239] -> GOTO 252
	expression/L8 = . expression "!=" expression, FOLLOW [239] -> GOTO 252
	expression/L8 = . expression "<=" expression, FOLLOW [239] -> GOTO 252
	expression/L8 = . expression "<" expression, FOLLOW [239] -> GOTO 252
	expression/L8 = . expression ">=" expression, FOLLOW [239] -> GOTO 252
	expression/L8 = . expression ">" expression, FOLLOW [239] -> GOTO 252
	expression/L9 = . expression "+" expression, FOLLOW [239] -> GOTO 252
	expression/L9 = . expression "-" expression, FOLLOW [239] -> GOTO 252
	expression/L10 = . expression "*" expression, FOLLOW [239] -> GOTO 252
	expression/L10 = . expression "/" expression, FOLLOW [239] -> GOTO 252
	expression/L10 = . expression "%" expression, FOLLOW [239] -> GOTO 252
	expression/L11 = . expression "<<" expression, FOLLOW [239] -> GOTO 252
	expression/L11 = . expression ">>" expression, FOLLOW [239] -> GOTO 252
	expression/L11 = expression ">>" . expression, FOLLOW [239] -> GOTO 252
	expression/L12 = . expression "." IDENT, FOLLOW [239] -> GOTO 252
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [239] -> GOTO 252
	expression/L13 = . expression "(" ")", FOLLOW [239] -> GOTO 252
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [239] -> GOTO 252
	iexpression = . expression indirection IDENT, FOLLOW [239] -> GOTO 252
	expression/L12 = . iexpression, FOLLOW [239] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [239] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [239] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [239] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [239] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [239] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [239] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [239] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [239] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [239] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [239] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [239] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [239] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [239] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [239] -> SHIFT "null" GOTO 92
[146]
	expression/L3 = . expression "=" expression, FOLLOW [239] -> GOTO 184
	expression/L3 = . expression "+=" expression, FOLLOW [239] -> GOTO 184
	expression/L3 = . expression "-=" expression, FOLLOW [239] -> GOTO 184
	expression/L3 = . expression "*=" expression, FOLLOW [239] -> GOTO 184
	expression/L3 = . expression "/=" expression, FOLLOW [239] -> GOTO 184
	expression/L3 = . expression "^=" expression, FOLLOW [239] -> GOTO 184
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 184
	expression/L3 = . expression "%=" expression, FOLLOW [239] -> GOTO 184
	expression/L3 = . expression "&&=" expression, FOLLOW [239] -> GOTO 184
	expression/L3 = . expression "||=" expression, FOLLOW [239] -> GOTO 184
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 184
	expression/L3 = . expression "|=" expression, FOLLOW [239] -> GOTO 184
	expression/L3 = . expression "<<=" expression, FOLLOW [239] -> GOTO 184
	expression/L3 = . expression ">>=" expression, FOLLOW [239] -> GOTO 184
	expression/L4 = . expression "||" expression, FOLLOW [239] -> GOTO 184
	expression/L5 = . expression "&&" expression, FOLLOW [239] -> GOTO 184
	expression/L6 = . expression "|" expression, FOLLOW [239] -> GOTO 184
	expression/L7 = . expression "^" expression, FOLLOW [239] -> GOTO 184
	expression/L7 = . expression "&" expression, FOLLOW [239] -> GOTO 184
	expression/L8 = . expression "==" expression, FOLLOW [239] -> GOTO 184
	expression/L8 = . expression "!=" expression, FOLLOW [239] -> GOTO 184
	expression/L8 = . expression "<=" expression, FOLLOW [239] -> GOTO 184
	expression/L8 = . expression "<" expression, FOLLOW [239] -> GOTO 184
	expression/L8 = . expression ">=" expression, FOLLOW [239] -> GOTO 184
	expression/L8 = . expression ">" expression, FOLLOW [239] -> GOTO 184
	expression/L9 = . expression "+" expression, FOLLOW [239] -> GOTO 184
	expression/L9 = . expression "-" expression, FOLLOW [239] -> GOTO 184
	expression/L10 = . expression "*" expression, FOLLOW [239] -> GOTO 184
	expression/L10 = . expression "/" expression, FOLLOW [239] -> GOTO 184
	expression/L10 = . expression "%" expression, FOLLOW [239] -> GOTO 184
	expression/L11 = . expression "<<" expression, FOLLOW [239] -> GOTO 184
	expression/L11 = . expression ">>" expression, FOLLOW [239] -> GOTO 184
	expression/L12 = . expression "." IDENT, FOLLOW [239] -> GOTO 184
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [239] -> GOTO 184
	expression/L13 = . expression "(" ")", FOLLOW [239] -> GOTO 184
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [239] -> GOTO 184
	iexpression = . expression indirection IDENT, FOLLOW [239] -> GOTO 184
	expressionlist = . expression "," expressionlist, FOLLOW [25] -> GOTO 184
	expressionlist = . expression, FOLLOW [25] -> GOTO 184
	expression/L12 = . iexpression, FOLLOW [239] -> GOTO 69
	expression/L13 = expression "[" . expressionlist "]", FOLLOW [239] -> GOTO 253
	expression/L2 = . BOOLEAN, FOLLOW [239] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [239] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [239] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [239] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [239] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [239] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [239] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [239] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [239] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [239] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [239] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [239] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [239] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [239] -> SHIFT "null" GOTO 92
[147]
	expression/L3 = . expression "=" expression, FOLLOW [239] -> GOTO 254
	expression/L3 = . expression "+=" expression, FOLLOW [239] -> GOTO 254
	expression/L3 = . expression "-=" expression, FOLLOW [239] -> GOTO 254
	expression/L3 = . expression "*=" expression, FOLLOW [239] -> GOTO 254
	expression/L3 = . expression "/=" expression, FOLLOW [239] -> GOTO 254
	expression/L3 = . expression "^=" expression, FOLLOW [239] -> GOTO 254
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 254
	expression/L3 = . expression "%=" expression, FOLLOW [239] -> GOTO 254
	expression/L3 = . expression "&&=" expression, FOLLOW [239] -> GOTO 254
	expression/L3 = . expression "||=" expression, FOLLOW [239] -> GOTO 254
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 254
	expression/L3 = . expression "|=" expression, FOLLOW [239] -> GOTO 254
	expression/L3 = . expression "<<=" expression, FOLLOW [239] -> GOTO 254
	expression/L3 = . expression ">>=" expression, FOLLOW [239] -> GOTO 254
	expression/L4 = . expression "||" expression, FOLLOW [239] -> GOTO 254
	expression/L5 = . expression "&&" expression, FOLLOW [239] -> GOTO 254
	expression/L6 = . expression "|" expression, FOLLOW [239] -> GOTO 254
	expression/L7 = . expression "^" expression, FOLLOW [239] -> GOTO 254
	expression/L7 = . expression "&" expression, FOLLOW [239] -> GOTO 254
	expression/L8 = . expression "==" expression, FOLLOW [239] -> GOTO 254
	expression/L8 = expression "==" . expression, FOLLOW [239] -> GOTO 254
	expression/L8 = . expression "!=" expression, FOLLOW [239] -> GOTO 254
	expression/L8 = . expression "<=" expression, FOLLOW [239] -> GOTO 254
	expression/L8 = . expression "<" expression, FOLLOW [239] -> GOTO 254
	expression/L8 = . expression ">=" expression, FOLLOW [239] -> GOTO 254
	expression/L8 = . expression ">" expression, FOLLOW [239] -> GOTO 254
	expression/L9 = . expression "+" expression, FOLLOW [239] -> GOTO 254
	expression/L9 = . expression "-" expression, FOLLOW [239] -> GOTO 254
	expression/L10 = . expression "*" expression, FOLLOW [239] -> GOTO 254
	expression/L10 = . expression "/" expression, FOLLOW [239] -> GOTO 254
	expression/L10 = . expression "%" expression, FOLLOW [239] -> GOTO 254
	expression/L11 = . expression "<<" expression, FOLLOW [239] -> GOTO 254
	expression/L11 = . expression ">>" expression, FOLLOW [239] -> GOTO 254
	expression/L12 = . expression "." IDENT, FOLLOW [239] -> GOTO 254
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [239] -> GOTO 254
	expression/L13 = . expression "(" ")", FOLLOW [239] -> GOTO 254
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [239] -> GOTO 254
	iexpression = . expression indirection IDENT, FOLLOW [239] -> GOTO 254
	expression/L12 = . iexpression, FOLLOW [239] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [239] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [239] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [239] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [239] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [239] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [239] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [239] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [239] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [239] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [239] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [239] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [239] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [239] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [239] -> SHIFT "null" GOTO 92
[148]
	expression/L3 = . expression "=" expression, FOLLOW [239] -> GOTO 255
	expression/L3 = . expression "+=" expression, FOLLOW [239] -> GOTO 255
	expression/L3 = . expression "-=" expression, FOLLOW [239] -> GOTO 255
	expression/L3 = . expression "*=" expression, FOLLOW [239] -> GOTO 255
	expression/L3 = . expression "/=" expression, FOLLOW [239] -> GOTO 255
	expression/L3 = . expression "^=" expression, FOLLOW [239] -> GOTO 255
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 255
	expression/L3 = . expression "%=" expression, FOLLOW [239] -> GOTO 255
	expression/L3 = . expression "&&=" expression, FOLLOW [239] -> GOTO 255
	expression/L3 = . expression "||=" expression, FOLLOW [239] -> GOTO 255
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 255
	expression/L3 = . expression "|=" expression, FOLLOW [239] -> GOTO 255
	expression/L3 = . expression "<<=" expression, FOLLOW [239] -> GOTO 255
	expression/L3 = . expression ">>=" expression, FOLLOW [239] -> GOTO 255
	expression/L4 = . expression "||" expression, FOLLOW [239] -> GOTO 255
	expression/L5 = . expression "&&" expression, FOLLOW [239] -> GOTO 255
	expression/L6 = . expression "|" expression, FOLLOW [239] -> GOTO 255
	expression/L7 = . expression "^" expression, FOLLOW [239] -> GOTO 255
	expression/L7 = . expression "&" expression, FOLLOW [239] -> GOTO 255
	expression/L8 = . expression "==" expression, FOLLOW [239] -> GOTO 255
	expression/L8 = . expression "!=" expression, FOLLOW [239] -> GOTO 255
	expression/L8 = expression "!=" . expression, FOLLOW [239] -> GOTO 255
	expression/L8 = . expression "<=" expression, FOLLOW [239] -> GOTO 255
	expression/L8 = . expression "<" expression, FOLLOW [239] -> GOTO 255
	expression/L8 = . expression ">=" expression, FOLLOW [239] -> GOTO 255
	expression/L8 = . expression ">" expression, FOLLOW [239] -> GOTO 255
	expression/L9 = . expression "+" expression, FOLLOW [239] -> GOTO 255
	expression/L9 = . expression "-" expression, FOLLOW [239] -> GOTO 255
	expression/L10 = . expression "*" expression, FOLLOW [239] -> GOTO 255
	expression/L10 = . expression "/" expression, FOLLOW [239] -> GOTO 255
	expression/L10 = . expression "%" expression, FOLLOW [239] -> GOTO 255
	expression/L11 = . expression "<<" expression, FOLLOW [239] -> GOTO 255
	expression/L11 = . expression ">>" expression, FOLLOW [239] -> GOTO 255
	expression/L12 = . expression "." IDENT, FOLLOW [239] -> GOTO 255
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [239] -> GOTO 255
	expression/L13 = . expression "(" ")", FOLLOW [239] -> GOTO 255
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [239] -> GOTO 255
	iexpression = . expression indirection IDENT, FOLLOW [239] -> GOTO 255
	expression/L12 = . iexpression, FOLLOW [239] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [239] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [239] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [239] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [239] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [239] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [239] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [239] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [239] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [239] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [239] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [239] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [239] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [239] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [239] -> SHIFT "null" GOTO 92
[149]
	expression/L3 = . expression "=" expression, FOLLOW [239] -> GOTO 256
	expression/L3 = . expression "+=" expression, FOLLOW [239] -> GOTO 256
	expression/L3 = . expression "-=" expression, FOLLOW [239] -> GOTO 256
	expression/L3 = . expression "*=" expression, FOLLOW [239] -> GOTO 256
	expression/L3 = . expression "/=" expression, FOLLOW [239] -> GOTO 256
	expression/L3 = . expression "^=" expression, FOLLOW [239] -> GOTO 256
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 256
	expression/L3 = . expression "%=" expression, FOLLOW [239] -> GOTO 256
	expression/L3 = . expression "&&=" expression, FOLLOW [239] -> GOTO 256
	expression/L3 = . expression "||=" expression, FOLLOW [239] -> GOTO 256
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 256
	expression/L3 = . expression "|=" expression, FOLLOW [239] -> GOTO 256
	expression/L3 = . expression "<<=" expression, FOLLOW [239] -> GOTO 256
	expression/L3 = . expression ">>=" expression, FOLLOW [239] -> GOTO 256
	expression/L4 = . expression "||" expression, FOLLOW [239] -> GOTO 256
	expression/L5 = . expression "&&" expression, FOLLOW [239] -> GOTO 256
	expression/L6 = . expression "|" expression, FOLLOW [239] -> GOTO 256
	expression/L7 = . expression "^" expression, FOLLOW [239] -> GOTO 256
	expression/L7 = . expression "&" expression, FOLLOW [239] -> GOTO 256
	expression/L8 = . expression "==" expression, FOLLOW [239] -> GOTO 256
	expression/L8 = . expression "!=" expression, FOLLOW [239] -> GOTO 256
	expression/L8 = . expression "<=" expression, FOLLOW [239] -> GOTO 256
	expression/L8 = . expression "<" expression, FOLLOW [239] -> GOTO 256
	expression/L8 = . expression ">=" expression, FOLLOW [239] -> GOTO 256
	expression/L8 = expression ">=" . expression, FOLLOW [239] -> GOTO 256
	expression/L8 = . expression ">" expression, FOLLOW [239] -> GOTO 256
	expression/L9 = . expression "+" expression, FOLLOW [239] -> GOTO 256
	expression/L9 = . expression "-" expression, FOLLOW [239] -> GOTO 256
	expression/L10 = . expression "*" expression, FOLLOW [239] -> GOTO 256
	expression/L10 = . expression "/" expression, FOLLOW [239] -> GOTO 256
	expression/L10 = . expression "%" expression, FOLLOW [239] -> GOTO 256
	expression/L11 = . expression "<<" expression, FOLLOW [239] -> GOTO 256
	expression/L11 = . expression ">>" expression, FOLLOW [239] -> GOTO 256
	expression/L12 = . expression "." IDENT, FOLLOW [239] -> GOTO 256
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [239] -> GOTO 256
	expression/L13 = . expression "(" ")", FOLLOW [239] -> GOTO 256
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [239] -> GOTO 256
	iexpression = . expression indirection IDENT, FOLLOW [239] -> GOTO 256
	expression/L12 = . iexpression, FOLLOW [239] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [239] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [239] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [239] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [239] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [239] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [239] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [239] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [239] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [239] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [239] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [239] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [239] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [239] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [239] -> SHIFT "null" GOTO 92
[150]
	expression/L3 = . expression "=" expression, FOLLOW [239] -> GOTO 257
	expression/L3 = . expression "+=" expression, FOLLOW [239] -> GOTO 257
	expression/L3 = . expression "-=" expression, FOLLOW [239] -> GOTO 257
	expression/L3 = . expression "*=" expression, FOLLOW [239] -> GOTO 257
	expression/L3 = . expression "/=" expression, FOLLOW [239] -> GOTO 257
	expression/L3 = . expression "^=" expression, FOLLOW [239] -> GOTO 257
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 257
	expression/L3 = . expression "%=" expression, FOLLOW [239] -> GOTO 257
	expression/L3 = . expression "&&=" expression, FOLLOW [239] -> GOTO 257
	expression/L3 = . expression "||=" expression, FOLLOW [239] -> GOTO 257
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 257
	expression/L3 = . expression "|=" expression, FOLLOW [239] -> GOTO 257
	expression/L3 = . expression "<<=" expression, FOLLOW [239] -> GOTO 257
	expression/L3 = . expression ">>=" expression, FOLLOW [239] -> GOTO 257
	expression/L4 = . expression "||" expression, FOLLOW [239] -> GOTO 257
	expression/L5 = . expression "&&" expression, FOLLOW [239] -> GOTO 257
	expression/L6 = . expression "|" expression, FOLLOW [239] -> GOTO 257
	expression/L7 = . expression "^" expression, FOLLOW [239] -> GOTO 257
	expression/L7 = . expression "&" expression, FOLLOW [239] -> GOTO 257
	expression/L8 = . expression "==" expression, FOLLOW [239] -> GOTO 257
	expression/L8 = . expression "!=" expression, FOLLOW [239] -> GOTO 257
	expression/L8 = . expression "<=" expression, FOLLOW [239] -> GOTO 257
	expression/L8 = expression "<=" . expression, FOLLOW [239] -> GOTO 257
	expression/L8 = . expression "<" expression, FOLLOW [239] -> GOTO 257
	expression/L8 = . expression ">=" expression, FOLLOW [239] -> GOTO 257
	expression/L8 = . expression ">" expression, FOLLOW [239] -> GOTO 257
	expression/L9 = . expression "+" expression, FOLLOW [239] -> GOTO 257
	expression/L9 = . expression "-" expression, FOLLOW [239] -> GOTO 257
	expression/L10 = . expression "*" expression, FOLLOW [239] -> GOTO 257
	expression/L10 = . expression "/" expression, FOLLOW [239] -> GOTO 257
	expression/L10 = . expression "%" expression, FOLLOW [239] -> GOTO 257
	expression/L11 = . expression "<<" expression, FOLLOW [239] -> GOTO 257
	expression/L11 = . expression ">>" expression, FOLLOW [239] -> GOTO 257
	expression/L12 = . expression "." IDENT, FOLLOW [239] -> GOTO 257
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [239] -> GOTO 257
	expression/L13 = . expression "(" ")", FOLLOW [239] -> GOTO 257
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [239] -> GOTO 257
	iexpression = . expression indirection IDENT, FOLLOW [239] -> GOTO 257
	expression/L12 = . iexpression, FOLLOW [239] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [239] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [239] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [239] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [239] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [239] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [239] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [239] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [239] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [239] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [239] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [239] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [239] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [239] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [239] -> SHIFT "null" GOTO 92
[151]
	expression/L3 = . expression "=" expression, FOLLOW [239] -> GOTO 258
	expression/L3 = . expression "+=" expression, FOLLOW [239] -> GOTO 258
	expression/L3 = . expression "-=" expression, FOLLOW [239] -> GOTO 258
	expression/L3 = . expression "*=" expression, FOLLOW [239] -> GOTO 258
	expression/L3 = . expression "/=" expression, FOLLOW [239] -> GOTO 258
	expression/L3 = . expression "^=" expression, FOLLOW [239] -> GOTO 258
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 258
	expression/L3 = . expression "%=" expression, FOLLOW [239] -> GOTO 258
	expression/L3 = . expression "&&=" expression, FOLLOW [239] -> GOTO 258
	expression/L3 = . expression "||=" expression, FOLLOW [239] -> GOTO 258
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 258
	expression/L3 = . expression "|=" expression, FOLLOW [239] -> GOTO 258
	expression/L3 = . expression "<<=" expression, FOLLOW [239] -> GOTO 258
	expression/L3 = . expression ">>=" expression, FOLLOW [239] -> GOTO 258
	expression/L4 = . expression "||" expression, FOLLOW [239] -> GOTO 258
	expression/L5 = . expression "&&" expression, FOLLOW [239] -> GOTO 258
	expression/L6 = . expression "|" expression, FOLLOW [239] -> GOTO 258
	expression/L7 = . expression "^" expression, FOLLOW [239] -> GOTO 258
	expression/L7 = . expression "&" expression, FOLLOW [239] -> GOTO 258
	expression/L8 = . expression "==" expression, FOLLOW [239] -> GOTO 258
	expression/L8 = . expression "!=" expression, FOLLOW [239] -> GOTO 258
	expression/L8 = . expression "<=" expression, FOLLOW [239] -> GOTO 258
	expression/L8 = . expression "<" expression, FOLLOW [239] -> GOTO 258
	expression/L8 = . expression ">=" expression, FOLLOW [239] -> GOTO 258
	expression/L8 = . expression ">" expression, FOLLOW [239] -> GOTO 258
	expression/L8 = expression ">" . expression, FOLLOW [239] -> GOTO 258
	expression/L9 = . expression "+" expression, FOLLOW [239] -> GOTO 258
	expression/L9 = . expression "-" expression, FOLLOW [239] -> GOTO 258
	expression/L10 = . expression "*" expression, FOLLOW [239] -> GOTO 258
	expression/L10 = . expression "/" expression, FOLLOW [239] -> GOTO 258
	expression/L10 = . expression "%" expression, FOLLOW [239] -> GOTO 258
	expression/L11 = . expression "<<" expression, FOLLOW [239] -> GOTO 258
	expression/L11 = . expression ">>" expression, FOLLOW [239] -> GOTO 258
	expression/L12 = . expression "." IDENT, FOLLOW [239] -> GOTO 258
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [239] -> GOTO 258
	expression/L13 = . expression "(" ")", FOLLOW [239] -> GOTO 258
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [239] -> GOTO 258
	iexpression = . expression indirection IDENT, FOLLOW [239] -> GOTO 258
	expression/L12 = . iexpression, FOLLOW [239] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [239] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [239] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [239] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [239] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [239] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [239] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [239] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [239] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [239] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [239] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [239] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [239] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [239] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [239] -> SHIFT "null" GOTO 92
[152]
	expression/L3 = . expression "=" expression, FOLLOW [239] -> GOTO 259
	expression/L3 = . expression "+=" expression, FOLLOW [239] -> GOTO 259
	expression/L3 = . expression "-=" expression, FOLLOW [239] -> GOTO 259
	expression/L3 = . expression "*=" expression, FOLLOW [239] -> GOTO 259
	expression/L3 = . expression "/=" expression, FOLLOW [239] -> GOTO 259
	expression/L3 = . expression "^=" expression, FOLLOW [239] -> GOTO 259
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 259
	expression/L3 = . expression "%=" expression, FOLLOW [239] -> GOTO 259
	expression/L3 = . expression "&&=" expression, FOLLOW [239] -> GOTO 259
	expression/L3 = . expression "||=" expression, FOLLOW [239] -> GOTO 259
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 259
	expression/L3 = . expression "|=" expression, FOLLOW [239] -> GOTO 259
	expression/L3 = . expression "<<=" expression, FOLLOW [239] -> GOTO 259
	expression/L3 = . expression ">>=" expression, FOLLOW [239] -> GOTO 259
	expression/L4 = . expression "||" expression, FOLLOW [239] -> GOTO 259
	expression/L5 = . expression "&&" expression, FOLLOW [239] -> GOTO 259
	expression/L6 = . expression "|" expression, FOLLOW [239] -> GOTO 259
	expression/L7 = . expression "^" expression, FOLLOW [239] -> GOTO 259
	expression/L7 = . expression "&" expression, FOLLOW [239] -> GOTO 259
	expression/L8 = . expression "==" expression, FOLLOW [239] -> GOTO 259
	expression/L8 = . expression "!=" expression, FOLLOW [239] -> GOTO 259
	expression/L8 = . expression "<=" expression, FOLLOW [239] -> GOTO 259
	expression/L8 = . expression "<" expression, FOLLOW [239] -> GOTO 259
	expression/L8 = expression "<" . expression, FOLLOW [239] -> GOTO 259
	expression/L8 = . expression ">=" expression, FOLLOW [239] -> GOTO 259
	expression/L8 = . expression ">" expression, FOLLOW [239] -> GOTO 259
	expression/L9 = . expression "+" expression, FOLLOW [239] -> GOTO 259
	expression/L9 = . expression "-" expression, FOLLOW [239] -> GOTO 259
	expression/L10 = . expression "*" expression, FOLLOW [239] -> GOTO 259
	expression/L10 = . expression "/" expression, FOLLOW [239] -> GOTO 259
	expression/L10 = . expression "%" expression, FOLLOW [239] -> GOTO 259
	expression/L11 = . expression "<<" expression, FOLLOW [239] -> GOTO 259
	expression/L11 = . expression ">>" expression, FOLLOW [239] -> GOTO 259
	expression/L12 = . expression "." IDENT, FOLLOW [239] -> GOTO 259
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [239] -> GOTO 259
	expression/L13 = . expression "(" ")", FOLLOW [239] -> GOTO 259
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [239] -> GOTO 259
	iexpression = . expression indirection IDENT, FOLLOW [239] -> GOTO 259
	expression/L12 = . iexpression, FOLLOW [239] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [239] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [239] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [239] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [239] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [239] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [239] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [239] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [239] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [239] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [239] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [239] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [239] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [239] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [239] -> SHIFT "null" GOTO 92
[153]
	expression/L3 = . expression "=" expression, FOLLOW [239] -> GOTO 260
	expression/L3 = . expression "+=" expression, FOLLOW [239] -> GOTO 260
	expression/L3 = expression "+=" . expression, FOLLOW [239] -> GOTO 260
	expression/L3 = . expression "-=" expression, FOLLOW [239] -> GOTO 260
	expression/L3 = . expression "*=" expression, FOLLOW [239] -> GOTO 260
	expression/L3 = . expression "/=" expression, FOLLOW [239] -> GOTO 260
	expression/L3 = . expression "^=" expression, FOLLOW [239] -> GOTO 260
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 260
	expression/L3 = . expression "%=" expression, FOLLOW [239] -> GOTO 260
	expression/L3 = . expression "&&=" expression, FOLLOW [239] -> GOTO 260
	expression/L3 = . expression "||=" expression, FOLLOW [239] -> GOTO 260
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 260
	expression/L3 = . expression "|=" expression, FOLLOW [239] -> GOTO 260
	expression/L3 = . expression "<<=" expression, FOLLOW [239] -> GOTO 260
	expression/L3 = . expression ">>=" expression, FOLLOW [239] -> GOTO 260
	expression/L4 = . expression "||" expression, FOLLOW [239] -> GOTO 260
	expression/L5 = . expression "&&" expression, FOLLOW [239] -> GOTO 260
	expression/L6 = . expression "|" expression, FOLLOW [239] -> GOTO 260
	expression/L7 = . expression "^" expression, FOLLOW [239] -> GOTO 260
	expression/L7 = . expression "&" expression, FOLLOW [239] -> GOTO 260
	expression/L8 = . expression "==" expression, FOLLOW [239] -> GOTO 260
	expression/L8 = . expression "!=" expression, FOLLOW [239] -> GOTO 260
	expression/L8 = . expression "<=" expression, FOLLOW [239] -> GOTO 260
	expression/L8 = . expression "<" expression, FOLLOW [239] -> GOTO 260
	expression/L8 = . expression ">=" expression, FOLLOW [239] -> GOTO 260
	expression/L8 = . expression ">" expression, FOLLOW [239] -> GOTO 260
	expression/L9 = . expression "+" expression, FOLLOW [239] -> GOTO 260
	expression/L9 = . expression "-" expression, FOLLOW [239] -> GOTO 260
	expression/L10 = . expression "*" expression, FOLLOW [239] -> GOTO 260
	expression/L10 = . expression "/" expression, FOLLOW [239] -> GOTO 260
	expression/L10 = . expression "%" expression, FOLLOW [239] -> GOTO 260
	expression/L11 = . expression "<<" expression, FOLLOW [239] -> GOTO 260
	expression/L11 = . expression ">>" expression, FOLLOW [239] -> GOTO 260
	expression/L12 = . expression "." IDENT, FOLLOW [239] -> GOTO 260
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [239] -> GOTO 260
	expression/L13 = . expression "(" ")", FOLLOW [239] -> GOTO 260
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [239] -> GOTO 260
	iexpression = . expression indirection IDENT, FOLLOW [239] -> GOTO 260
	expression/L12 = . iexpression, FOLLOW [239] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [239] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [239] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [239] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [239] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [239] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [239] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [239] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [239] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [239] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [239] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [239] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [239] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [239] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [239] -> SHIFT "null" GOTO 92
[154]
	expression/L3 = . expression "=" expression, FOLLOW [239] -> GOTO 261
	expression/L3 = . expression "+=" expression, FOLLOW [239] -> GOTO 261
	expression/L3 = . expression "-=" expression, FOLLOW [239] -> GOTO 261
	expression/L3 = expression "-=" . expression, FOLLOW [239] -> GOTO 261
	expression/L3 = . expression "*=" expression, FOLLOW [239] -> GOTO 261
	expression/L3 = . expression "/=" expression, FOLLOW [239] -> GOTO 261
	expression/L3 = . expression "^=" expression, FOLLOW [239] -> GOTO 261
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 261
	expression/L3 = . expression "%=" expression, FOLLOW [239] -> GOTO 261
	expression/L3 = . expression "&&=" expression, FOLLOW [239] -> GOTO 261
	expression/L3 = . expression "||=" expression, FOLLOW [239] -> GOTO 261
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 261
	expression/L3 = . expression "|=" expression, FOLLOW [239] -> GOTO 261
	expression/L3 = . expression "<<=" expression, FOLLOW [239] -> GOTO 261
	expression/L3 = . expression ">>=" expression, FOLLOW [239] -> GOTO 261
	expression/L4 = . expression "||" expression, FOLLOW [239] -> GOTO 261
	expression/L5 = . expression "&&" expression, FOLLOW [239] -> GOTO 261
	expression/L6 = . expression "|" expression, FOLLOW [239] -> GOTO 261
	expression/L7 = . expression "^" expression, FOLLOW [239] -> GOTO 261
	expression/L7 = . expression "&" expression, FOLLOW [239] -> GOTO 261
	expression/L8 = . expression "==" expression, FOLLOW [239] -> GOTO 261
	expression/L8 = . expression "!=" expression, FOLLOW [239] -> GOTO 261
	expression/L8 = . expression "<=" expression, FOLLOW [239] -> GOTO 261
	expression/L8 = . expression "<" expression, FOLLOW [239] -> GOTO 261
	expression/L8 = . expression ">=" expression, FOLLOW [239] -> GOTO 261
	expression/L8 = . expression ">" expression, FOLLOW [239] -> GOTO 261
	expression/L9 = . expression "+" expression, FOLLOW [239] -> GOTO 261
	expression/L9 = . expression "-" expression, FOLLOW [239] -> GOTO 261
	expression/L10 = . expression "*" expression, FOLLOW [239] -> GOTO 261
	expression/L10 = . expression "/" expression, FOLLOW [239] -> GOTO 261
	expression/L10 = . expression "%" expression, FOLLOW [239] -> GOTO 261
	expression/L11 = . expression "<<" expression, FOLLOW [239] -> GOTO 261
	expression/L11 = . expression ">>" expression, FOLLOW [239] -> GOTO 261
	expression/L12 = . expression "." IDENT, FOLLOW [239] -> GOTO 261
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [239] -> GOTO 261
	expression/L13 = . expression "(" ")", FOLLOW [239] -> GOTO 261
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [239] -> GOTO 261
	iexpression = . expression indirection IDENT, FOLLOW [239] -> GOTO 261
	expression/L12 = . iexpression, FOLLOW [239] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [239] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [239] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [239] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [239] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [239] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [239] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [239] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [239] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [239] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [239] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [239] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [239] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [239] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [239] -> SHIFT "null" GOTO 92
[155]
	expression/L3 = . expression "=" expression, FOLLOW [239] -> GOTO 262
	expression/L3 = . expression "+=" expression, FOLLOW [239] -> GOTO 262
	expression/L3 = . expression "-=" expression, FOLLOW [239] -> GOTO 262
	expression/L3 = . expression "*=" expression, FOLLOW [239] -> GOTO 262
	expression/L3 = expression "*=" . expression, FOLLOW [239] -> GOTO 262
	expression/L3 = . expression "/=" expression, FOLLOW [239] -> GOTO 262
	expression/L3 = . expression "^=" expression, FOLLOW [239] -> GOTO 262
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 262
	expression/L3 = . expression "%=" expression, FOLLOW [239] -> GOTO 262
	expression/L3 = . expression "&&=" expression, FOLLOW [239] -> GOTO 262
	expression/L3 = . expression "||=" expression, FOLLOW [239] -> GOTO 262
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 262
	expression/L3 = . expression "|=" expression, FOLLOW [239] -> GOTO 262
	expression/L3 = . expression "<<=" expression, FOLLOW [239] -> GOTO 262
	expression/L3 = . expression ">>=" expression, FOLLOW [239] -> GOTO 262
	expression/L4 = . expression "||" expression, FOLLOW [239] -> GOTO 262
	expression/L5 = . expression "&&" expression, FOLLOW [239] -> GOTO 262
	expression/L6 = . expression "|" expression, FOLLOW [239] -> GOTO 262
	expression/L7 = . expression "^" expression, FOLLOW [239] -> GOTO 262
	expression/L7 = . expression "&" expression, FOLLOW [239] -> GOTO 262
	expression/L8 = . expression "==" expression, FOLLOW [239] -> GOTO 262
	expression/L8 = . expression "!=" expression, FOLLOW [239] -> GOTO 262
	expression/L8 = . expression "<=" expression, FOLLOW [239] -> GOTO 262
	expression/L8 = . expression "<" expression, FOLLOW [239] -> GOTO 262
	expression/L8 = . expression ">=" expression, FOLLOW [239] -> GOTO 262
	expression/L8 = . expression ">" expression, FOLLOW [239] -> GOTO 262
	expression/L9 = . expression "+" expression, FOLLOW [239] -> GOTO 262
	expression/L9 = . expression "-" expression, FOLLOW [239] -> GOTO 262
	expression/L10 = . expression "*" expression, FOLLOW [239] -> GOTO 262
	expression/L10 = . expression "/" expression, FOLLOW [239] -> GOTO 262
	expression/L10 = . expression "%" expression, FOLLOW [239] -> GOTO 262
	expression/L11 = . expression "<<" expression, FOLLOW [239] -> GOTO 262
	expression/L11 = . expression ">>" expression, FOLLOW [239] -> GOTO 262
	expression/L12 = . expression "." IDENT, FOLLOW [239] -> GOTO 262
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [239] -> GOTO 262
	expression/L13 = . expression "(" ")", FOLLOW [239] -> GOTO 262
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [239] -> GOTO 262
	iexpression = . expression indirection IDENT, FOLLOW [239] -> GOTO 262
	expression/L12 = . iexpression, FOLLOW [239] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [239] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [239] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [239] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [239] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [239] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [239] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [239] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [239] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [239] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [239] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [239] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [239] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [239] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [239] -> SHIFT "null" GOTO 92
[156]
	expression/L3 = . expression "=" expression, FOLLOW [239] -> GOTO 263
	expression/L3 = . expression "+=" expression, FOLLOW [239] -> GOTO 263
	expression/L3 = . expression "-=" expression, FOLLOW [239] -> GOTO 263
	expression/L3 = . expression "*=" expression, FOLLOW [239] -> GOTO 263
	expression/L3 = . expression "/=" expression, FOLLOW [239] -> GOTO 263
	expression/L3 = expression "/=" . expression, FOLLOW [239] -> GOTO 263
	expression/L3 = . expression "^=" expression, FOLLOW [239] -> GOTO 263
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 263
	expression/L3 = . expression "%=" expression, FOLLOW [239] -> GOTO 263
	expression/L3 = . expression "&&=" expression, FOLLOW [239] -> GOTO 263
	expression/L3 = . expression "||=" expression, FOLLOW [239] -> GOTO 263
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 263
	expression/L3 = . expression "|=" expression, FOLLOW [239] -> GOTO 263
	expression/L3 = . expression "<<=" expression, FOLLOW [239] -> GOTO 263
	expression/L3 = . expression ">>=" expression, FOLLOW [239] -> GOTO 263
	expression/L4 = . expression "||" expression, FOLLOW [239] -> GOTO 263
	expression/L5 = . expression "&&" expression, FOLLOW [239] -> GOTO 263
	expression/L6 = . expression "|" expression, FOLLOW [239] -> GOTO 263
	expression/L7 = . expression "^" expression, FOLLOW [239] -> GOTO 263
	expression/L7 = . expression "&" expression, FOLLOW [239] -> GOTO 263
	expression/L8 = . expression "==" expression, FOLLOW [239] -> GOTO 263
	expression/L8 = . expression "!=" expression, FOLLOW [239] -> GOTO 263
	expression/L8 = . expression "<=" expression, FOLLOW [239] -> GOTO 263
	expression/L8 = . expression "<" expression, FOLLOW [239] -> GOTO 263
	expression/L8 = . expression ">=" expression, FOLLOW [239] -> GOTO 263
	expression/L8 = . expression ">" expression, FOLLOW [239] -> GOTO 263
	expression/L9 = . expression "+" expression, FOLLOW [239] -> GOTO 263
	expression/L9 = . expression "-" expression, FOLLOW [239] -> GOTO 263
	expression/L10 = . expression "*" expression, FOLLOW [239] -> GOTO 263
	expression/L10 = . expression "/" expression, FOLLOW [239] -> GOTO 263
	expression/L10 = . expression "%" expression, FOLLOW [239] -> GOTO 263
	expression/L11 = . expression "<<" expression, FOLLOW [239] -> GOTO 263
	expression/L11 = . expression ">>" expression, FOLLOW [239] -> GOTO 263
	expression/L12 = . expression "." IDENT, FOLLOW [239] -> GOTO 263
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [239] -> GOTO 263
	expression/L13 = . expression "(" ")", FOLLOW [239] -> GOTO 263
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [239] -> GOTO 263
	iexpression = . expression indirection IDENT, FOLLOW [239] -> GOTO 263
	expression/L12 = . iexpression, FOLLOW [239] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [239] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [239] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [239] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [239] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [239] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [239] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [239] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [239] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [239] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [239] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [239] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [239] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [239] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [239] -> SHIFT "null" GOTO 92
[157]
	expression/L3 = . expression "=" expression, FOLLOW [239] -> GOTO 264
	expression/L3 = . expression "+=" expression, FOLLOW [239] -> GOTO 264
	expression/L3 = . expression "-=" expression, FOLLOW [239] -> GOTO 264
	expression/L3 = . expression "*=" expression, FOLLOW [239] -> GOTO 264
	expression/L3 = . expression "/=" expression, FOLLOW [239] -> GOTO 264
	expression/L3 = . expression "^=" expression, FOLLOW [239] -> GOTO 264
	expression/L3 = expression "^=" . expression, FOLLOW [239] -> GOTO 264
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 264
	expression/L3 = . expression "%=" expression, FOLLOW [239] -> GOTO 264
	expression/L3 = . expression "&&=" expression, FOLLOW [239] -> GOTO 264
	expression/L3 = . expression "||=" expression, FOLLOW [239] -> GOTO 264
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 264
	expression/L3 = . expression "|=" expression, FOLLOW [239] -> GOTO 264
	expression/L3 = . expression "<<=" expression, FOLLOW [239] -> GOTO 264
	expression/L3 = . expression ">>=" expression, FOLLOW [239] -> GOTO 264
	expression/L4 = . expression "||" expression, FOLLOW [239] -> GOTO 264
	expression/L5 = . expression "&&" expression, FOLLOW [239] -> GOTO 264
	expression/L6 = . expression "|" expression, FOLLOW [239] -> GOTO 264
	expression/L7 = . expression "^" expression, FOLLOW [239] -> GOTO 264
	expression/L7 = . expression "&" expression, FOLLOW [239] -> GOTO 264
	expression/L8 = . expression "==" expression, FOLLOW [239] -> GOTO 264
	expression/L8 = . expression "!=" expression, FOLLOW [239] -> GOTO 264
	expression/L8 = . expression "<=" expression, FOLLOW [239] -> GOTO 264
	expression/L8 = . expression "<" expression, FOLLOW [239] -> GOTO 264
	expression/L8 = . expression ">=" expression, FOLLOW [239] -> GOTO 264
	expression/L8 = . expression ">" expression, FOLLOW [239] -> GOTO 264
	expression/L9 = . expression "+" expression, FOLLOW [239] -> GOTO 264
	expression/L9 = . expression "-" expression, FOLLOW [239] -> GOTO 264
	expression/L10 = . expression "*" expression, FOLLOW [239] -> GOTO 264
	expression/L10 = . expression "/" expression, FOLLOW [239] -> GOTO 264
	expression/L10 = . expression "%" expression, FOLLOW [239] -> GOTO 264
	expression/L11 = . expression "<<" expression, FOLLOW [239] -> GOTO 264
	expression/L11 = . expression ">>" expression, FOLLOW [239] -> GOTO 264
	expression/L12 = . expression "." IDENT, FOLLOW [239] -> GOTO 264
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [239] -> GOTO 264
	expression/L13 = . expression "(" ")", FOLLOW [239] -> GOTO 264
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [239] -> GOTO 264
	iexpression = . expression indirection IDENT, FOLLOW [239] -> GOTO 264
	expression/L12 = . iexpression, FOLLOW [239] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [239] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [239] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [239] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [239] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [239] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [239] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [239] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [239] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [239] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [239] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [239] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [239] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [239] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [239] -> SHIFT "null" GOTO 92
[158]
	expression/L3 = . expression "=" expression, FOLLOW [239] -> GOTO 265
	expression/L3 = . expression "+=" expression, FOLLOW [239] -> GOTO 265
	expression/L3 = . expression "-=" expression, FOLLOW [239] -> GOTO 265
	expression/L3 = . expression "*=" expression, FOLLOW [239] -> GOTO 265
	expression/L3 = . expression "/=" expression, FOLLOW [239] -> GOTO 265
	expression/L3 = . expression "^=" expression, FOLLOW [239] -> GOTO 265
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 265
	expression/L3 = expression "&=" . expression, FOLLOW [239] -> GOTO 265
	expression/L3 = . expression "%=" expression, FOLLOW [239] -> GOTO 265
	expression/L3 = . expression "&&=" expression, FOLLOW [239] -> GOTO 265
	expression/L3 = . expression "||=" expression, FOLLOW [239] -> GOTO 265
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 265
	expression/L3 = expression "&=" . expression, FOLLOW [239] -> GOTO 265
	expression/L3 = . expression "|=" expression, FOLLOW [239] -> GOTO 265
	expression/L3 = . expression "<<=" expression, FOLLOW [239] -> GOTO 265
	expression/L3 = . expression ">>=" expression, FOLLOW [239] -> GOTO 265
	expression/L4 = . expression "||" expression, FOLLOW [239] -> GOTO 265
	expression/L5 = . expression "&&" expression, FOLLOW [239] -> GOTO 265
	expression/L6 = . expression "|" expression, FOLLOW [239] -> GOTO 265
	expression/L7 = . expression "^" expression, FOLLOW [239] -> GOTO 265
	expression/L7 = . expression "&" expression, FOLLOW [239] -> GOTO 265
	expression/L8 = . expression "==" expression, FOLLOW [239] -> GOTO 265
	expression/L8 = . expression "!=" expression, FOLLOW [239] -> GOTO 265
	expression/L8 = . expression "<=" expression, FOLLOW [239] -> GOTO 265
	expression/L8 = . expression "<" expression, FOLLOW [239] -> GOTO 265
	expression/L8 = . expression ">=" expression, FOLLOW [239] -> GOTO 265
	expression/L8 = . expression ">" expression, FOLLOW [239] -> GOTO 265
	expression/L9 = . expression "+" expression, FOLLOW [239] -> GOTO 265
	expression/L9 = . expression "-" expression, FOLLOW [239] -> GOTO 265
	expression/L10 = . expression "*" expression, FOLLOW [239] -> GOTO 265
	expression/L10 = . expression "/" expression, FOLLOW [239] -> GOTO 265
	expression/L10 = . expression "%" expression, FOLLOW [239] -> GOTO 265
	expression/L11 = . expression "<<" expression, FOLLOW [239] -> GOTO 265
	expression/L11 = . expression ">>" expression, FOLLOW [239] -> GOTO 265
	expression/L12 = . expression "." IDENT, FOLLOW [239] -> GOTO 265
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [239] -> GOTO 265
	expression/L13 = . expression "(" ")", FOLLOW [239] -> GOTO 265
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [239] -> GOTO 265
	iexpression = . expression indirection IDENT, FOLLOW [239] -> GOTO 265
	expression/L12 = . iexpression, FOLLOW [239] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [239] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [239] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [239] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [239] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [239] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [239] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [239] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [239] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [239] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [239] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [239] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [239] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [239] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [239] -> SHIFT "null" GOTO 92
[159]
	expression/L3 = . expression "=" expression, FOLLOW [239] -> GOTO 266
	expression/L3 = . expression "+=" expression, FOLLOW [239] -> GOTO 266
	expression/L3 = . expression "-=" expression, FOLLOW [239] -> GOTO 266
	expression/L3 = . expression "*=" expression, FOLLOW [239] -> GOTO 266
	expression/L3 = . expression "/=" expression, FOLLOW [239] -> GOTO 266
	expression/L3 = . expression "^=" expression, FOLLOW [239] -> GOTO 266
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 266
	expression/L3 = . expression "%=" expression, FOLLOW [239] -> GOTO 266
	expression/L3 = expression "%=" . expression, FOLLOW [239] -> GOTO 266
	expression/L3 = . expression "&&=" expression, FOLLOW [239] -> GOTO 266
	expression/L3 = . expression "||=" expression, FOLLOW [239] -> GOTO 266
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 266
	expression/L3 = . expression "|=" expression, FOLLOW [239] -> GOTO 266
	expression/L3 = . expression "<<=" expression, FOLLOW [239] -> GOTO 266
	expression/L3 = . expression ">>=" expression, FOLLOW [239] -> GOTO 266
	expression/L4 = . expression "||" expression, FOLLOW [239] -> GOTO 266
	expression/L5 = . expression "&&" expression, FOLLOW [239] -> GOTO 266
	expression/L6 = . expression "|" expression, FOLLOW [239] -> GOTO 266
	expression/L7 = . expression "^" expression, FOLLOW [239] -> GOTO 266
	expression/L7 = . expression "&" expression, FOLLOW [239] -> GOTO 266
	expression/L8 = . expression "==" expression, FOLLOW [239] -> GOTO 266
	expression/L8 = . expression "!=" expression, FOLLOW [239] -> GOTO 266
	expression/L8 = . expression "<=" expression, FOLLOW [239] -> GOTO 266
	expression/L8 = . expression "<" expression, FOLLOW [239] -> GOTO 266
	expression/L8 = . expression ">=" expression, FOLLOW [239] -> GOTO 266
	expression/L8 = . expression ">" expression, FOLLOW [239] -> GOTO 266
	expression/L9 = . expression "+" expression, FOLLOW [239] -> GOTO 266
	expression/L9 = . expression "-" expression, FOLLOW [239] -> GOTO 266
	expression/L10 = . expression "*" expression, FOLLOW [239] -> GOTO 266
	expression/L10 = . expression "/" expression, FOLLOW [239] -> GOTO 266
	expression/L10 = . expression "%" expression, FOLLOW [239] -> GOTO 266
	expression/L11 = . expression "<<" expression, FOLLOW [239] -> GOTO 266
	expression/L11 = . expression ">>" expression, FOLLOW [239] -> GOTO 266
	expression/L12 = . expression "." IDENT, FOLLOW [239] -> GOTO 266
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [239] -> GOTO 266
	expression/L13 = . expression "(" ")", FOLLOW [239] -> GOTO 266
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [239] -> GOTO 266
	iexpression = . expression indirection IDENT, FOLLOW [239] -> GOTO 266
	expression/L12 = . iexpression, FOLLOW [239] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [239] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [239] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [239] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [239] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [239] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [239] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [239] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [239] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [239] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [239] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [239] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [239] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [239] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [239] -> SHIFT "null" GOTO 92
[160]
	expression/L3 = . expression "=" expression, FOLLOW [239] -> GOTO 267
	expression/L3 = . expression "+=" expression, FOLLOW [239] -> GOTO 267
	expression/L3 = . expression "-=" expression, FOLLOW [239] -> GOTO 267
	expression/L3 = . expression "*=" expression, FOLLOW [239] -> GOTO 267
	expression/L3 = . expression "/=" expression, FOLLOW [239] -> GOTO 267
	expression/L3 = . expression "^=" expression, FOLLOW [239] -> GOTO 267
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 267
	expression/L3 = . expression "%=" expression, FOLLOW [239] -> GOTO 267
	expression/L3 = . expression "&&=" expression, FOLLOW [239] -> GOTO 267
	expression/L3 = expression "&&=" . expression, FOLLOW [239] -> GOTO 267
	expression/L3 = . expression "||=" expression, FOLLOW [239] -> GOTO 267
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 267
	expression/L3 = . expression "|=" expression, FOLLOW [239] -> GOTO 267
	expression/L3 = . expression "<<=" expression, FOLLOW [239] -> GOTO 267
	expression/L3 = . expression ">>=" expression, FOLLOW [239] -> GOTO 267
	expression/L4 = . expression "||" expression, FOLLOW [239] -> GOTO 267
	expression/L5 = . expression "&&" expression, FOLLOW [239] -> GOTO 267
	expression/L6 = . expression "|" expression, FOLLOW [239] -> GOTO 267
	expression/L7 = . expression "^" expression, FOLLOW [239] -> GOTO 267
	expression/L7 = . expression "&" expression, FOLLOW [239] -> GOTO 267
	expression/L8 = . expression "==" expression, FOLLOW [239] -> GOTO 267
	expression/L8 = . expression "!=" expression, FOLLOW [239] -> GOTO 267
	expression/L8 = . expression "<=" expression, FOLLOW [239] -> GOTO 267
	expression/L8 = . expression "<" expression, FOLLOW [239] -> GOTO 267
	expression/L8 = . expression ">=" expression, FOLLOW [239] -> GOTO 267
	expression/L8 = . expression ">" expression, FOLLOW [239] -> GOTO 267
	expression/L9 = . expression "+" expression, FOLLOW [239] -> GOTO 267
	expression/L9 = . expression "-" expression, FOLLOW [239] -> GOTO 267
	expression/L10 = . expression "*" expression, FOLLOW [239] -> GOTO 267
	expression/L10 = . expression "/" expression, FOLLOW [239] -> GOTO 267
	expression/L10 = . expression "%" expression, FOLLOW [239] -> GOTO 267
	expression/L11 = . expression "<<" expression, FOLLOW [239] -> GOTO 267
	expression/L11 = . expression ">>" expression, FOLLOW [239] -> GOTO 267
	expression/L12 = . expression "." IDENT, FOLLOW [239] -> GOTO 267
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [239] -> GOTO 267
	expression/L13 = . expression "(" ")", FOLLOW [239] -> GOTO 267
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [239] -> GOTO 267
	iexpression = . expression indirection IDENT, FOLLOW [239] -> GOTO 267
	expression/L12 = . iexpression, FOLLOW [239] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [239] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [239] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [239] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [239] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [239] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [239] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [239] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [239] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [239] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [239] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [239] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [239] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [239] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [239] -> SHIFT "null" GOTO 92
[161]
	expression/L3 = . expression "=" expression, FOLLOW [239] -> GOTO 268
	expression/L3 = . expression "+=" expression, FOLLOW [239] -> GOTO 268
	expression/L3 = . expression "-=" expression, FOLLOW [239] -> GOTO 268
	expression/L3 = . expression "*=" expression, FOLLOW [239] -> GOTO 268
	expression/L3 = . expression "/=" expression, FOLLOW [239] -> GOTO 268
	expression/L3 = . expression "^=" expression, FOLLOW [239] -> GOTO 268
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 268
	expression/L3 = . expression "%=" expression, FOLLOW [239] -> GOTO 268
	expression/L3 = . expression "&&=" expression, FOLLOW [239] -> GOTO 268
	expression/L3 = . expression "||=" expression, FOLLOW [239] -> GOTO 268
	expression/L3 = expression "||=" . expression, FOLLOW [239] -> GOTO 268
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 268
	expression/L3 = . expression "|=" expression, FOLLOW [239] -> GOTO 268
	expression/L3 = . expression "<<=" expression, FOLLOW [239] -> GOTO 268
	expression/L3 = . expression ">>=" expression, FOLLOW [239] -> GOTO 268
	expression/L4 = . expression "||" expression, FOLLOW [239] -> GOTO 268
	expression/L5 = . expression "&&" expression, FOLLOW [239] -> GOTO 268
	expression/L6 = . expression "|" expression, FOLLOW [239] -> GOTO 268
	expression/L7 = . expression "^" expression, FOLLOW [239] -> GOTO 268
	expression/L7 = . expression "&" expression, FOLLOW [239] -> GOTO 268
	expression/L8 = . expression "==" expression, FOLLOW [239] -> GOTO 268
	expression/L8 = . expression "!=" expression, FOLLOW [239] -> GOTO 268
	expression/L8 = . expression "<=" expression, FOLLOW [239] -> GOTO 268
	expression/L8 = . expression "<" expression, FOLLOW [239] -> GOTO 268
	expression/L8 = . expression ">=" expression, FOLLOW [239] -> GOTO 268
	expression/L8 = . expression ">" expression, FOLLOW [239] -> GOTO 268
	expression/L9 = . expression "+" expression, FOLLOW [239] -> GOTO 268
	expression/L9 = . expression "-" expression, FOLLOW [239] -> GOTO 268
	expression/L10 = . expression "*" expression, FOLLOW [239] -> GOTO 268
	expression/L10 = . expression "/" expression, FOLLOW [239] -> GOTO 268
	expression/L10 = . expression "%" expression, FOLLOW [239] -> GOTO 268
	expression/L11 = . expression "<<" expression, FOLLOW [239] -> GOTO 268
	expression/L11 = . expression ">>" expression, FOLLOW [239] -> GOTO 268
	expression/L12 = . expression "." IDENT, FOLLOW [239] -> GOTO 268
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [239] -> GOTO 268
	expression/L13 = . expression "(" ")", FOLLOW [239] -> GOTO 268
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [239] -> GOTO 268
	iexpression = . expression indirection IDENT, FOLLOW [239] -> GOTO 268
	expression/L12 = . iexpression, FOLLOW [239] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [239] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [239] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [239] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [239] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [239] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [239] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [239] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [239] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [239] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [239] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [239] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [239] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [239] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [239] -> SHIFT "null" GOTO 92
[162]
	expression/L3 = . expression "=" expression, FOLLOW [239] -> GOTO 269
	expression/L3 = . expression "+=" expression, FOLLOW [239] -> GOTO 269
	expression/L3 = . expression "-=" expression, FOLLOW [239] -> GOTO 269
	expression/L3 = . expression "*=" expression, FOLLOW [239] -> GOTO 269
	expression/L3 = . expression "/=" expression, FOLLOW [239] -> GOTO 269
	expression/L3 = . expression "^=" expression, FOLLOW [239] -> GOTO 269
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 269
	expression/L3 = . expression "%=" expression, FOLLOW [239] -> GOTO 269
	expression/L3 = . expression "&&=" expression, FOLLOW [239] -> GOTO 269
	expression/L3 = . expression "||=" expression, FOLLOW [239] -> GOTO 269
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 269
	expression/L3 = . expression "|=" expression, FOLLOW [239] -> GOTO 269
	expression/L3 = expression "|=" . expression, FOLLOW [239] -> GOTO 269
	expression/L3 = . expression "<<=" expression, FOLLOW [239] -> GOTO 269
	expression/L3 = . expression ">>=" expression, FOLLOW [239] -> GOTO 269
	expression/L4 = . expression "||" expression, FOLLOW [239] -> GOTO 269
	expression/L5 = . expression "&&" expression, FOLLOW [239] -> GOTO 269
	expression/L6 = . expression "|" expression, FOLLOW [239] -> GOTO 269
	expression/L7 = . expression "^" expression, FOLLOW [239] -> GOTO 269
	expression/L7 = . expression "&" expression, FOLLOW [239] -> GOTO 269
	expression/L8 = . expression "==" expression, FOLLOW [239] -> GOTO 269
	expression/L8 = . expression "!=" expression, FOLLOW [239] -> GOTO 269
	expression/L8 = . expression "<=" expression, FOLLOW [239] -> GOTO 269
	expression/L8 = . expression "<" expression, FOLLOW [239] -> GOTO 269
	expression/L8 = . expression ">=" expression, FOLLOW [239] -> GOTO 269
	expression/L8 = . expression ">" expression, FOLLOW [239] -> GOTO 269
	expression/L9 = . expression "+" expression, FOLLOW [239] -> GOTO 269
	expression/L9 = . expression "-" expression, FOLLOW [239] -> GOTO 269
	expression/L10 = . expression "*" expression, FOLLOW [239] -> GOTO 269
	expression/L10 = . expression "/" expression, FOLLOW [239] -> GOTO 269
	expression/L10 = . expression "%" expression, FOLLOW [239] -> GOTO 269
	expression/L11 = . expression "<<" expression, FOLLOW [239] -> GOTO 269
	expression/L11 = . expression ">>" expression, FOLLOW [239] -> GOTO 269
	expression/L12 = . expression "." IDENT, FOLLOW [239] -> GOTO 269
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [239] -> GOTO 269
	expression/L13 = . expression "(" ")", FOLLOW [239] -> GOTO 269
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [239] -> GOTO 269
	iexpression = . expression indirection IDENT, FOLLOW [239] -> GOTO 269
	expression/L12 = . iexpression, FOLLOW [239] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [239] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [239] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [239] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [239] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [239] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [239] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [239] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [239] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [239] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [239] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [239] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [239] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [239] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [239] -> SHIFT "null" GOTO 92
[163]
	expression/L3 = . expression "=" expression, FOLLOW [239] -> GOTO 270
	expression/L3 = . expression "+=" expression, FOLLOW [239] -> GOTO 270
	expression/L3 = . expression "-=" expression, FOLLOW [239] -> GOTO 270
	expression/L3 = . expression "*=" expression, FOLLOW [239] -> GOTO 270
	expression/L3 = . expression "/=" expression, FOLLOW [239] -> GOTO 270
	expression/L3 = . expression "^=" expression, FOLLOW [239] -> GOTO 270
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 270
	expression/L3 = . expression "%=" expression, FOLLOW [239] -> GOTO 270
	expression/L3 = . expression "&&=" expression, FOLLOW [239] -> GOTO 270
	expression/L3 = . expression "||=" expression, FOLLOW [239] -> GOTO 270
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 270
	expression/L3 = . expression "|=" expression, FOLLOW [239] -> GOTO 270
	expression/L3 = . expression "<<=" expression, FOLLOW [239] -> GOTO 270
	expression/L3 = expression "<<=" . expression, FOLLOW [239] -> GOTO 270
	expression/L3 = . expression ">>=" expression, FOLLOW [239] -> GOTO 270
	expression/L4 = . expression "||" expression, FOLLOW [239] -> GOTO 270
	expression/L5 = . expression "&&" expression, FOLLOW [239] -> GOTO 270
	expression/L6 = . expression "|" expression, FOLLOW [239] -> GOTO 270
	expression/L7 = . expression "^" expression, FOLLOW [239] -> GOTO 270
	expression/L7 = . expression "&" expression, FOLLOW [239] -> GOTO 270
	expression/L8 = . expression "==" expression, FOLLOW [239] -> GOTO 270
	expression/L8 = . expression "!=" expression, FOLLOW [239] -> GOTO 270
	expression/L8 = . expression "<=" expression, FOLLOW [239] -> GOTO 270
	expression/L8 = . expression "<" expression, FOLLOW [239] -> GOTO 270
	expression/L8 = . expression ">=" expression, FOLLOW [239] -> GOTO 270
	expression/L8 = . expression ">" expression, FOLLOW [239] -> GOTO 270
	expression/L9 = . expression "+" expression, FOLLOW [239] -> GOTO 270
	expression/L9 = . expression "-" expression, FOLLOW [239] -> GOTO 270
	expression/L10 = . expression "*" expression, FOLLOW [239] -> GOTO 270
	expression/L10 = . expression "/" expression, FOLLOW [239] -> GOTO 270
	expression/L10 = . expression "%" expression, FOLLOW [239] -> GOTO 270
	expression/L11 = . expression "<<" expression, FOLLOW [239] -> GOTO 270
	expression/L11 = . expression ">>" expression, FOLLOW [239] -> GOTO 270
	expression/L12 = . expression "." IDENT, FOLLOW [239] -> GOTO 270
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [239] -> GOTO 270
	expression/L13 = . expression "(" ")", FOLLOW [239] -> GOTO 270
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [239] -> GOTO 270
	iexpression = . expression indirection IDENT, FOLLOW [239] -> GOTO 270
	expression/L12 = . iexpression, FOLLOW [239] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [239] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [239] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [239] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [239] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [239] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [239] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [239] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [239] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [239] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [239] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [239] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [239] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [239] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [239] -> SHIFT "null" GOTO 92
[164]
	expression/L3 = . expression "=" expression, FOLLOW [239] -> GOTO 271
	expression/L3 = . expression "+=" expression, FOLLOW [239] -> GOTO 271
	expression/L3 = . expression "-=" expression, FOLLOW [239] -> GOTO 271
	expression/L3 = . expression "*=" expression, FOLLOW [239] -> GOTO 271
	expression/L3 = . expression "/=" expression, FOLLOW [239] -> GOTO 271
	expression/L3 = . expression "^=" expression, FOLLOW [239] -> GOTO 271
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 271
	expression/L3 = . expression "%=" expression, FOLLOW [239] -> GOTO 271
	expression/L3 = . expression "&&=" expression, FOLLOW [239] -> GOTO 271
	expression/L3 = . expression "||=" expression, FOLLOW [239] -> GOTO 271
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 271
	expression/L3 = . expression "|=" expression, FOLLOW [239] -> GOTO 271
	expression/L3 = . expression "<<=" expression, FOLLOW [239] -> GOTO 271
	expression/L3 = . expression ">>=" expression, FOLLOW [239] -> GOTO 271
	expression/L3 = expression ">>=" . expression, FOLLOW [239] -> GOTO 271
	expression/L4 = . expression "||" expression, FOLLOW [239] -> GOTO 271
	expression/L5 = . expression "&&" expression, FOLLOW [239] -> GOTO 271
	expression/L6 = . expression "|" expression, FOLLOW [239] -> GOTO 271
	expression/L7 = . expression "^" expression, FOLLOW [239] -> GOTO 271
	expression/L7 = . expression "&" expression, FOLLOW [239] -> GOTO 271
	expression/L8 = . expression "==" expression, FOLLOW [239] -> GOTO 271
	expression/L8 = . expression "!=" expression, FOLLOW [239] -> GOTO 271
	expression/L8 = . expression "<=" expression, FOLLOW [239] -> GOTO 271
	expression/L8 = . expression "<" expression, FOLLOW [239] -> GOTO 271
	expression/L8 = . expression ">=" expression, FOLLOW [239] -> GOTO 271
	expression/L8 = . expression ">" expression, FOLLOW [239] -> GOTO 271
	expression/L9 = . expression "+" expression, FOLLOW [239] -> GOTO 271
	expression/L9 = . expression "-" expression, FOLLOW [239] -> GOTO 271
	expression/L10 = . expression "*" expression, FOLLOW [239] -> GOTO 271
	expression/L10 = . expression "/" expression, FOLLOW [239] -> GOTO 271
	expression/L10 = . expression "%" expression, FOLLOW [239] -> GOTO 271
	expression/L11 = . expression "<<" expression, FOLLOW [239] -> GOTO 271
	expression/L11 = . expression ">>" expression, FOLLOW [239] -> GOTO 271
	expression/L12 = . expression "." IDENT, FOLLOW [239] -> GOTO 271
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [239] -> GOTO 271
	expression/L13 = . expression "(" ")", FOLLOW [239] -> GOTO 271
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [239] -> GOTO 271
	iexpression = . expression indirection IDENT, FOLLOW [239] -> GOTO 271
	expression/L12 = . iexpression, FOLLOW [239] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [239] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [239] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [239] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [239] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [239] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [239] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [239] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [239] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [239] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [239] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [239] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [239] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [239] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [239] -> SHIFT "null" GOTO 92
[165]
	expression/L12 = expression "." . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 272
[166]
	iexpression = expression . indirection IDENT, FOLLOW [239] -> GOTO 129
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [239] -> SHIFT '(' GOTO 130
	expression/L13 = expression . "(" ")", FOLLOW [239] -> SHIFT '(' GOTO 130
	expression/L2 = "(" expression . ")", FOLLOW [239] -> SHIFT ')' GOTO 273
	expression/L7 = expression . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 132
	expression/L7 = expression . "^" expression, FOLLOW [239] -> SHIFT '^' GOTO 133
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 134
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 134
	expression/L3 = expression . "=" expression, FOLLOW [239] -> SHIFT '=' GOTO 135
	expression/L9 = expression . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 136
	expression/L9 = expression . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 137
	expression/L10 = expression . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 138
	expression/L10 = expression . "/" expression, FOLLOW [239] -> SHIFT '/' GOTO 139
	expression/L10 = expression . "%" expression, FOLLOW [239] -> SHIFT '%' GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [239] -> SHIFT "&&" GOTO 141
	expression/L4 = expression . "||" expression, FOLLOW [239] -> SHIFT "||" GOTO 142
	expression/L6 = expression . "|" expression, FOLLOW [239] -> SHIFT '|' GOTO 143
	expression/L11 = expression . "<<" expression, FOLLOW [239] -> SHIFT "<<" GOTO 144
	expression/L11 = expression . ">>" expression, FOLLOW [239] -> SHIFT ">>" GOTO 145
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [239] -> SHIFT '[' GOTO 146
	expression/L8 = expression . "==" expression, FOLLOW [239] -> SHIFT "==" GOTO 147
	expression/L8 = expression . "!=" expression, FOLLOW [239] -> SHIFT "!=" GOTO 148
	expression/L8 = expression . ">=" expression, FOLLOW [239] -> SHIFT ">=" GOTO 149
	expression/L8 = expression . "<=" expression, FOLLOW [239] -> SHIFT "<=" GOTO 150
	expression/L8 = expression . ">" expression, FOLLOW [239] -> SHIFT '>' GOTO 151
	expression/L8 = expression . "<" expression, FOLLOW [239] -> SHIFT '<' GOTO 152
	expression/L3 = expression . "+=" expression, FOLLOW [239] -> SHIFT "+=" GOTO 153
	expression/L3 = expression . "-=" expression, FOLLOW [239] -> SHIFT "-=" GOTO 154
	expression/L3 = expression . "*=" expression, FOLLOW [239] -> SHIFT "*=" GOTO 155
	expression/L3 = expression . "/=" expression, FOLLOW [239] -> SHIFT "/=" GOTO 156
	expression/L3 = expression . "^=" expression, FOLLOW [239] -> SHIFT "^=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "%=" expression, FOLLOW [239] -> SHIFT "%=" GOTO 159
	expression/L3 = expression . "&&=" expression, FOLLOW [239] -> SHIFT "&&=" GOTO 160
	expression/L3 = expression . "||=" expression, FOLLOW [239] -> SHIFT "||=" GOTO 161
	expression/L3 = expression . "|=" expression, FOLLOW [239] -> SHIFT "|=" GOTO 162
	expression/L3 = expression . "<<=" expression, FOLLOW [239] -> SHIFT "<<=" GOTO 163
	expression/L3 = expression . ">>=" expression, FOLLOW [239] -> SHIFT ">>=" GOTO 164
	expression/L12 = expression . "." IDENT, FOLLOW [239] -> SHIFT '.' GOTO 165
[167]
	iexpression = expression . indirection IDENT, FOLLOW [239] -> GOTO 129
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [239] -> SHIFT '(' GOTO 130
	expression/L13 = expression . "(" ")", FOLLOW [239] -> SHIFT '(' GOTO 130
	expression/L7 = expression . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 132
	expression/L7 = expression . "^" expression, FOLLOW [239] -> SHIFT '^' GOTO 133
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 134
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 134
	expression/L3 = expression . "=" expression, FOLLOW [239] -> SHIFT '=' GOTO 135
	expression/L9 = expression . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 136
	expression/L9 = expression . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 137
	expression/L10 = expression . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 138
	expression/L10 = expression . "/" expression, FOLLOW [239] -> SHIFT '/' GOTO 139
	expression/L10 = expression . "%" expression, FOLLOW [239] -> SHIFT '%' GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [239] -> SHIFT "&&" GOTO 141
	expression/L4 = expression . "||" expression, FOLLOW [239] -> SHIFT "||" GOTO 142
	expression/L6 = expression . "|" expression, FOLLOW [239] -> SHIFT '|' GOTO 143
	expression/L11 = expression . "<<" expression, FOLLOW [239] -> SHIFT "<<" GOTO 144
	expression/L11 = expression . ">>" expression, FOLLOW [239] -> SHIFT ">>" GOTO 145
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [239] -> SHIFT '[' GOTO 146
	expression/L8 = expression . "==" expression, FOLLOW [239] -> SHIFT "==" GOTO 147
	expression/L8 = expression . "!=" expression, FOLLOW [239] -> SHIFT "!=" GOTO 148
	expression/L8 = expression . ">=" expression, FOLLOW [239] -> SHIFT ">=" GOTO 149
	expression/L8 = expression . "<=" expression, FOLLOW [239] -> SHIFT "<=" GOTO 150
	expression/L8 = expression . ">" expression, FOLLOW [239] -> SHIFT '>' GOTO 151
	expression/L8 = expression . "<" expression, FOLLOW [239] -> SHIFT '<' GOTO 152
	expression/L3 = expression . "+=" expression, FOLLOW [239] -> SHIFT "+=" GOTO 153
	expression/L3 = expression . "-=" expression, FOLLOW [239] -> SHIFT "-=" GOTO 154
	expression/L3 = expression . "*=" expression, FOLLOW [239] -> SHIFT "*=" GOTO 155
	expression/L3 = expression . "/=" expression, FOLLOW [239] -> SHIFT "/=" GOTO 156
	expression/L3 = expression . "^=" expression, FOLLOW [239] -> SHIFT "^=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "%=" expression, FOLLOW [239] -> SHIFT "%=" GOTO 159
	expression/L3 = expression . "&&=" expression, FOLLOW [239] -> SHIFT "&&=" GOTO 160
	expression/L3 = expression . "||=" expression, FOLLOW [239] -> SHIFT "||=" GOTO 161
	expression/L3 = expression . "|=" expression, FOLLOW [239] -> SHIFT "|=" GOTO 162
	expression/L3 = expression . "<<=" expression, FOLLOW [239] -> SHIFT "<<=" GOTO 163
	expression/L3 = expression . ">>=" expression, FOLLOW [239] -> SHIFT ">>=" GOTO 164
	expression/L12 = expression . "." IDENT, FOLLOW [239] -> SHIFT '.' GOTO 165
	expression/L9 = "&" expression . (113), FOLLOW [239] -> REDUCE expression #2 CALL operator "&"
[168]
	statement/L1 = "{" codeblock . "}", FOLLOW [98] -> SHIFT '}' GOTO 274
[169]
	iexpression = expression . indirection IDENT, FOLLOW [179] -> GOTO 129
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [179] -> SHIFT '(' GOTO 130
	expression/L13 = expression . "(" ")", FOLLOW [179] -> SHIFT '(' GOTO 130
	statement/L1 = expression . ";", FOLLOW [98] -> SHIFT ';' GOTO 131
	expressionlist = expression . "," expressionlist, FOLLOW [18] -> SHIFT ',' GOTO 275
	expression/L7 = expression . "&" expression, FOLLOW [179] -> SHIFT '&' GOTO 132
	expression/L7 = expression . "^" expression, FOLLOW [179] -> SHIFT '^' GOTO 133
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 134
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 134
	expression/L3 = expression . "=" expression, FOLLOW [179] -> SHIFT '=' GOTO 135
	expression/L9 = expression . "+" expression, FOLLOW [179] -> SHIFT '+' GOTO 136
	expression/L9 = expression . "-" expression, FOLLOW [179] -> SHIFT '-' GOTO 137
	expression/L10 = expression . "*" expression, FOLLOW [179] -> SHIFT '*' GOTO 138
	expression/L10 = expression . "/" expression, FOLLOW [179] -> SHIFT '/' GOTO 139
	expression/L10 = expression . "%" expression, FOLLOW [179] -> SHIFT '%' GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [179] -> SHIFT "&&" GOTO 141
	expression/L4 = expression . "||" expression, FOLLOW [179] -> SHIFT "||" GOTO 142
	expression/L6 = expression . "|" expression, FOLLOW [179] -> SHIFT '|' GOTO 143
	expression/L11 = expression . "<<" expression, FOLLOW [179] -> SHIFT "<<" GOTO 144
	expression/L11 = expression . ">>" expression, FOLLOW [179] -> SHIFT ">>" GOTO 145
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [179] -> SHIFT '[' GOTO 146
	expression/L8 = expression . "==" expression, FOLLOW [179] -> SHIFT "==" GOTO 147
	expression/L8 = expression . "!=" expression, FOLLOW [179] -> SHIFT "!=" GOTO 148
	expression/L8 = expression . ">=" expression, FOLLOW [179] -> SHIFT ">=" GOTO 149
	expression/L8 = expression . "<=" expression, FOLLOW [179] -> SHIFT "<=" GOTO 150
	expression/L8 = expression . ">" expression, FOLLOW [179] -> SHIFT '>' GOTO 151
	expression/L8 = expression . "<" expression, FOLLOW [179] -> SHIFT '<' GOTO 152
	expression/L3 = expression . "+=" expression, FOLLOW [179] -> SHIFT "+=" GOTO 153
	expression/L3 = expression . "-=" expression, FOLLOW [179] -> SHIFT "-=" GOTO 154
	expression/L3 = expression . "*=" expression, FOLLOW [179] -> SHIFT "*=" GOTO 155
	expression/L3 = expression . "/=" expression, FOLLOW [179] -> SHIFT "/=" GOTO 156
	expression/L3 = expression . "^=" expression, FOLLOW [179] -> SHIFT "^=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [179] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "&=" expression, FOLLOW [179] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "%=" expression, FOLLOW [179] -> SHIFT "%=" GOTO 159
	expression/L3 = expression . "&&=" expression, FOLLOW [179] -> SHIFT "&&=" GOTO 160
	expression/L3 = expression . "||=" expression, FOLLOW [179] -> SHIFT "||=" GOTO 161
	expression/L3 = expression . "|=" expression, FOLLOW [179] -> SHIFT "|=" GOTO 162
	expression/L3 = expression . "<<=" expression, FOLLOW [179] -> SHIFT "<<=" GOTO 163
	expression/L3 = expression . ">>=" expression, FOLLOW [179] -> SHIFT ">>=" GOTO 164
	expression/L12 = expression . "." IDENT, FOLLOW [179] -> SHIFT '.' GOTO 165
	expressionlist = expression ., FOLLOW [18] -> REDUCE expressionlist #1
[170]
	expression/L1 = "{" expressionlist . "}", FOLLOW [239] -> SHIFT '}' GOTO 276
[171]
	expression/L1 = "{" "}" . (85), FOLLOW [239] -> REDUCE expression #2 CALL structure
[172]
	iexpression = expression . indirection IDENT, FOLLOW [239] -> GOTO 129
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [239] -> SHIFT '(' GOTO 130
	expression/L13 = expression . "(" ")", FOLLOW [239] -> SHIFT '(' GOTO 130
	expression/L7 = expression . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 132
	expression/L7 = expression . "^" expression, FOLLOW [239] -> SHIFT '^' GOTO 133
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 134
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 134
	expression/L3 = expression . "=" expression, FOLLOW [239] -> SHIFT '=' GOTO 135
	expression/L9 = expression . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 136
	expression/L9 = expression . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 137
	expression/L10 = expression . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 138
	expression/L10 = expression . "/" expression, FOLLOW [239] -> SHIFT '/' GOTO 139
	expression/L10 = expression . "%" expression, FOLLOW [239] -> SHIFT '%' GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [239] -> SHIFT "&&" GOTO 141
	expression/L4 = expression . "||" expression, FOLLOW [239] -> SHIFT "||" GOTO 142
	expression/L6 = expression . "|" expression, FOLLOW [239] -> SHIFT '|' GOTO 143
	expression/L11 = expression . "<<" expression, FOLLOW [239] -> SHIFT "<<" GOTO 144
	expression/L11 = expression . ">>" expression, FOLLOW [239] -> SHIFT ">>" GOTO 145
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [239] -> SHIFT '[' GOTO 146
	expression/L8 = expression . "==" expression, FOLLOW [239] -> SHIFT "==" GOTO 147
	expression/L8 = expression . "!=" expression, FOLLOW [239] -> SHIFT "!=" GOTO 148
	expression/L8 = expression . ">=" expression, FOLLOW [239] -> SHIFT ">=" GOTO 149
	expression/L8 = expression . "<=" expression, FOLLOW [239] -> SHIFT "<=" GOTO 150
	expression/L8 = expression . ">" expression, FOLLOW [239] -> SHIFT '>' GOTO 151
	expression/L8 = expression . "<" expression, FOLLOW [239] -> SHIFT '<' GOTO 152
	expression/L3 = expression . "+=" expression, FOLLOW [239] -> SHIFT "+=" GOTO 153
	expression/L3 = expression . "-=" expression, FOLLOW [239] -> SHIFT "-=" GOTO 154
	expression/L3 = expression . "*=" expression, FOLLOW [239] -> SHIFT "*=" GOTO 155
	expression/L3 = expression . "/=" expression, FOLLOW [239] -> SHIFT "/=" GOTO 156
	expression/L3 = expression . "^=" expression, FOLLOW [239] -> SHIFT "^=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "%=" expression, FOLLOW [239] -> SHIFT "%=" GOTO 159
	expression/L3 = expression . "&&=" expression, FOLLOW [239] -> SHIFT "&&=" GOTO 160
	expression/L3 = expression . "||=" expression, FOLLOW [239] -> SHIFT "||=" GOTO 161
	expression/L3 = expression . "|=" expression, FOLLOW [239] -> SHIFT "|=" GOTO 162
	expression/L3 = expression . "<<=" expression, FOLLOW [239] -> SHIFT "<<=" GOTO 163
	expression/L3 = expression . ">>=" expression, FOLLOW [239] -> SHIFT ">>=" GOTO 164
	expression/L12 = expression . "." IDENT, FOLLOW [239] -> SHIFT '.' GOTO 165
	expression/L9 = "+" expression . (120), FOLLOW [239] -> REDUCE expression #2 CALL operator "+"
[173]
	iexpression = expression . indirection IDENT, FOLLOW [239] -> GOTO 129
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [239] -> SHIFT '(' GOTO 130
	expression/L13 = expression . "(" ")", FOLLOW [239] -> SHIFT '(' GOTO 130
	expression/L7 = expression . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 132
	expression/L7 = expression . "^" expression, FOLLOW [239] -> SHIFT '^' GOTO 133
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 134
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 134
	expression/L3 = expression . "=" expression, FOLLOW [239] -> SHIFT '=' GOTO 135
	expression/L9 = expression . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 136
	expression/L9 = expression . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 137
	expression/L10 = expression . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 138
	expression/L10 = expression . "/" expression, FOLLOW [239] -> SHIFT '/' GOTO 139
	expression/L10 = expression . "%" expression, FOLLOW [239] -> SHIFT '%' GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [239] -> SHIFT "&&" GOTO 141
	expression/L4 = expression . "||" expression, FOLLOW [239] -> SHIFT "||" GOTO 142
	expression/L6 = expression . "|" expression, FOLLOW [239] -> SHIFT '|' GOTO 143
	expression/L11 = expression . "<<" expression, FOLLOW [239] -> SHIFT "<<" GOTO 144
	expression/L11 = expression . ">>" expression, FOLLOW [239] -> SHIFT ">>" GOTO 145
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [239] -> SHIFT '[' GOTO 146
	expression/L8 = expression . "==" expression, FOLLOW [239] -> SHIFT "==" GOTO 147
	expression/L8 = expression . "!=" expression, FOLLOW [239] -> SHIFT "!=" GOTO 148
	expression/L8 = expression . ">=" expression, FOLLOW [239] -> SHIFT ">=" GOTO 149
	expression/L8 = expression . "<=" expression, FOLLOW [239] -> SHIFT "<=" GOTO 150
	expression/L8 = expression . ">" expression, FOLLOW [239] -> SHIFT '>' GOTO 151
	expression/L8 = expression . "<" expression, FOLLOW [239] -> SHIFT '<' GOTO 152
	expression/L3 = expression . "+=" expression, FOLLOW [239] -> SHIFT "+=" GOTO 153
	expression/L3 = expression . "-=" expression, FOLLOW [239] -> SHIFT "-=" GOTO 154
	expression/L3 = expression . "*=" expression, FOLLOW [239] -> SHIFT "*=" GOTO 155
	expression/L3 = expression . "/=" expression, FOLLOW [239] -> SHIFT "/=" GOTO 156
	expression/L3 = expression . "^=" expression, FOLLOW [239] -> SHIFT "^=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "%=" expression, FOLLOW [239] -> SHIFT "%=" GOTO 159
	expression/L3 = expression . "&&=" expression, FOLLOW [239] -> SHIFT "&&=" GOTO 160
	expression/L3 = expression . "||=" expression, FOLLOW [239] -> SHIFT "||=" GOTO 161
	expression/L3 = expression . "|=" expression, FOLLOW [239] -> SHIFT "|=" GOTO 162
	expression/L3 = expression . "<<=" expression, FOLLOW [239] -> SHIFT "<<=" GOTO 163
	expression/L3 = expression . ">>=" expression, FOLLOW [239] -> SHIFT ">>=" GOTO 164
	expression/L12 = expression . "." IDENT, FOLLOW [239] -> SHIFT '.' GOTO 165
	expression/L9 = "-" expression . (121), FOLLOW [239] -> REDUCE expression #2 CALL operator "-"
[174]
	iexpression = expression . indirection IDENT, FOLLOW [239] -> GOTO 129
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [239] -> SHIFT '(' GOTO 130
	expression/L13 = expression . "(" ")", FOLLOW [239] -> SHIFT '(' GOTO 130
	expression/L7 = expression . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 132
	expression/L7 = expression . "^" expression, FOLLOW [239] -> SHIFT '^' GOTO 133
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 134
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 134
	expression/L3 = expression . "=" expression, FOLLOW [239] -> SHIFT '=' GOTO 135
	expression/L9 = expression . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 136
	expression/L9 = expression . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 137
	expression/L10 = expression . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 138
	expression/L10 = expression . "/" expression, FOLLOW [239] -> SHIFT '/' GOTO 139
	expression/L10 = expression . "%" expression, FOLLOW [239] -> SHIFT '%' GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [239] -> SHIFT "&&" GOTO 141
	expression/L4 = expression . "||" expression, FOLLOW [239] -> SHIFT "||" GOTO 142
	expression/L6 = expression . "|" expression, FOLLOW [239] -> SHIFT '|' GOTO 143
	expression/L11 = expression . "<<" expression, FOLLOW [239] -> SHIFT "<<" GOTO 144
	expression/L11 = expression . ">>" expression, FOLLOW [239] -> SHIFT ">>" GOTO 145
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [239] -> SHIFT '[' GOTO 146
	expression/L8 = expression . "==" expression, FOLLOW [239] -> SHIFT "==" GOTO 147
	expression/L8 = expression . "!=" expression, FOLLOW [239] -> SHIFT "!=" GOTO 148
	expression/L8 = expression . ">=" expression, FOLLOW [239] -> SHIFT ">=" GOTO 149
	expression/L8 = expression . "<=" expression, FOLLOW [239] -> SHIFT "<=" GOTO 150
	expression/L8 = expression . ">" expression, FOLLOW [239] -> SHIFT '>' GOTO 151
	expression/L8 = expression . "<" expression, FOLLOW [239] -> SHIFT '<' GOTO 152
	expression/L3 = expression . "+=" expression, FOLLOW [239] -> SHIFT "+=" GOTO 153
	expression/L3 = expression . "-=" expression, FOLLOW [239] -> SHIFT "-=" GOTO 154
	expression/L3 = expression . "*=" expression, FOLLOW [239] -> SHIFT "*=" GOTO 155
	expression/L3 = expression . "/=" expression, FOLLOW [239] -> SHIFT "/=" GOTO 156
	expression/L3 = expression . "^=" expression, FOLLOW [239] -> SHIFT "^=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "%=" expression, FOLLOW [239] -> SHIFT "%=" GOTO 159
	expression/L3 = expression . "&&=" expression, FOLLOW [239] -> SHIFT "&&=" GOTO 160
	expression/L3 = expression . "||=" expression, FOLLOW [239] -> SHIFT "||=" GOTO 161
	expression/L3 = expression . "|=" expression, FOLLOW [239] -> SHIFT "|=" GOTO 162
	expression/L3 = expression . "<<=" expression, FOLLOW [239] -> SHIFT "<<=" GOTO 163
	expression/L3 = expression . ">>=" expression, FOLLOW [239] -> SHIFT ">>=" GOTO 164
	expression/L12 = expression . "." IDENT, FOLLOW [239] -> SHIFT '.' GOTO 165
	expression/L12 = "*" expression . (130), FOLLOW [239] -> REDUCE expression #2 CALL operator "->"
[175]
	iexpression = expression . indirection IDENT, FOLLOW [239] -> GOTO 129
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [239] -> SHIFT '(' GOTO 130
	expression/L13 = expression . "(" ")", FOLLOW [239] -> SHIFT '(' GOTO 130
	expression/L7 = expression . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 132
	expression/L7 = expression . "^" expression, FOLLOW [239] -> SHIFT '^' GOTO 133
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 134
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 134
	expression/L3 = expression . "=" expression, FOLLOW [239] -> SHIFT '=' GOTO 135
	expression/L9 = expression . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 136
	expression/L9 = expression . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 137
	expression/L10 = expression . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 138
	expression/L10 = expression . "/" expression, FOLLOW [239] -> SHIFT '/' GOTO 139
	expression/L10 = expression . "%" expression, FOLLOW [239] -> SHIFT '%' GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [239] -> SHIFT "&&" GOTO 141
	expression/L4 = expression . "||" expression, FOLLOW [239] -> SHIFT "||" GOTO 142
	expression/L6 = expression . "|" expression, FOLLOW [239] -> SHIFT '|' GOTO 143
	expression/L11 = expression . "<<" expression, FOLLOW [239] -> SHIFT "<<" GOTO 144
	expression/L11 = expression . ">>" expression, FOLLOW [239] -> SHIFT ">>" GOTO 145
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [239] -> SHIFT '[' GOTO 146
	expression/L8 = expression . "==" expression, FOLLOW [239] -> SHIFT "==" GOTO 147
	expression/L8 = expression . "!=" expression, FOLLOW [239] -> SHIFT "!=" GOTO 148
	expression/L8 = expression . ">=" expression, FOLLOW [239] -> SHIFT ">=" GOTO 149
	expression/L8 = expression . "<=" expression, FOLLOW [239] -> SHIFT "<=" GOTO 150
	expression/L8 = expression . ">" expression, FOLLOW [239] -> SHIFT '>' GOTO 151
	expression/L8 = expression . "<" expression, FOLLOW [239] -> SHIFT '<' GOTO 152
	expression/L3 = expression . "+=" expression, FOLLOW [239] -> SHIFT "+=" GOTO 153
	expression/L3 = expression . "-=" expression, FOLLOW [239] -> SHIFT "-=" GOTO 154
	expression/L3 = expression . "*=" expression, FOLLOW [239] -> SHIFT "*=" GOTO 155
	expression/L3 = expression . "/=" expression, FOLLOW [239] -> SHIFT "/=" GOTO 156
	expression/L3 = expression . "^=" expression, FOLLOW [239] -> SHIFT "^=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "%=" expression, FOLLOW [239] -> SHIFT "%=" GOTO 159
	expression/L3 = expression . "&&=" expression, FOLLOW [239] -> SHIFT "&&=" GOTO 160
	expression/L3 = expression . "||=" expression, FOLLOW [239] -> SHIFT "||=" GOTO 161
	expression/L3 = expression . "|=" expression, FOLLOW [239] -> SHIFT "|=" GOTO 162
	expression/L3 = expression . "<<=" expression, FOLLOW [239] -> SHIFT "<<=" GOTO 163
	expression/L3 = expression . ">>=" expression, FOLLOW [239] -> SHIFT ">>=" GOTO 164
	expression/L12 = expression . "." IDENT, FOLLOW [239] -> SHIFT '.' GOTO 165
	expression/L9 = "~" expression . (122), FOLLOW [239] -> REDUCE expression #2 CALL operator "~"
[176]
	iexpression = expression . indirection IDENT, FOLLOW [239] -> GOTO 129
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [239] -> SHIFT '(' GOTO 130
	expression/L13 = expression . "(" ")", FOLLOW [239] -> SHIFT '(' GOTO 130
	expression/L7 = expression . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 132
	expression/L7 = expression . "^" expression, FOLLOW [239] -> SHIFT '^' GOTO 133
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 134
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 134
	expression/L3 = expression . "=" expression, FOLLOW [239] -> SHIFT '=' GOTO 135
	expression/L9 = expression . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 136
	expression/L9 = expression . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 137
	expression/L10 = expression . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 138
	expression/L10 = expression . "/" expression, FOLLOW [239] -> SHIFT '/' GOTO 139
	expression/L10 = expression . "%" expression, FOLLOW [239] -> SHIFT '%' GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [239] -> SHIFT "&&" GOTO 141
	expression/L4 = expression . "||" expression, FOLLOW [239] -> SHIFT "||" GOTO 142
	expression/L6 = expression . "|" expression, FOLLOW [239] -> SHIFT '|' GOTO 143
	expression/L11 = expression . "<<" expression, FOLLOW [239] -> SHIFT "<<" GOTO 144
	expression/L11 = expression . ">>" expression, FOLLOW [239] -> SHIFT ">>" GOTO 145
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [239] -> SHIFT '[' GOTO 146
	expression/L8 = expression . "==" expression, FOLLOW [239] -> SHIFT "==" GOTO 147
	expression/L8 = expression . "!=" expression, FOLLOW [239] -> SHIFT "!=" GOTO 148
	expression/L8 = expression . ">=" expression, FOLLOW [239] -> SHIFT ">=" GOTO 149
	expression/L8 = expression . "<=" expression, FOLLOW [239] -> SHIFT "<=" GOTO 150
	expression/L8 = expression . ">" expression, FOLLOW [239] -> SHIFT '>' GOTO 151
	expression/L8 = expression . "<" expression, FOLLOW [239] -> SHIFT '<' GOTO 152
	expression/L3 = expression . "+=" expression, FOLLOW [239] -> SHIFT "+=" GOTO 153
	expression/L3 = expression . "-=" expression, FOLLOW [239] -> SHIFT "-=" GOTO 154
	expression/L3 = expression . "*=" expression, FOLLOW [239] -> SHIFT "*=" GOTO 155
	expression/L3 = expression . "/=" expression, FOLLOW [239] -> SHIFT "/=" GOTO 156
	expression/L3 = expression . "^=" expression, FOLLOW [239] -> SHIFT "^=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "%=" expression, FOLLOW [239] -> SHIFT "%=" GOTO 159
	expression/L3 = expression . "&&=" expression, FOLLOW [239] -> SHIFT "&&=" GOTO 160
	expression/L3 = expression . "||=" expression, FOLLOW [239] -> SHIFT "||=" GOTO 161
	expression/L3 = expression . "|=" expression, FOLLOW [239] -> SHIFT "|=" GOTO 162
	expression/L3 = expression . "<<=" expression, FOLLOW [239] -> SHIFT "<<=" GOTO 163
	expression/L3 = expression . ">>=" expression, FOLLOW [239] -> SHIFT ">>=" GOTO 164
	expression/L12 = expression . "." IDENT, FOLLOW [239] -> SHIFT '.' GOTO 165
	expression/L9 = "!" expression . (123), FOLLOW [239] -> REDUCE expression #2 CALL operator "!"
[177]
	statement/L1 = "var" variabledefinition . ";", FOLLOW [98] -> SHIFT ';' GOTO 277
[178]
	iexpression = expression . indirection IDENT, FOLLOW [97] -> GOTO 129
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [97] -> SHIFT '(' GOTO 130
	expression/L13 = expression . "(" ")", FOLLOW [97] -> SHIFT '(' GOTO 130
	statement/L1 = "return" expression . ";", FOLLOW [98] -> SHIFT ';' GOTO 278
	expression/L7 = expression . "&" expression, FOLLOW [97] -> SHIFT '&' GOTO 132
	expression/L7 = expression . "^" expression, FOLLOW [97] -> SHIFT '^' GOTO 133
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 134
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 134
	expression/L3 = expression . "=" expression, FOLLOW [97] -> SHIFT '=' GOTO 135
	expression/L9 = expression . "+" expression, FOLLOW [97] -> SHIFT '+' GOTO 136
	expression/L9 = expression . "-" expression, FOLLOW [97] -> SHIFT '-' GOTO 137
	expression/L10 = expression . "*" expression, FOLLOW [97] -> SHIFT '*' GOTO 138
	expression/L10 = expression . "/" expression, FOLLOW [97] -> SHIFT '/' GOTO 139
	expression/L10 = expression . "%" expression, FOLLOW [97] -> SHIFT '%' GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [97] -> SHIFT "&&" GOTO 141
	expression/L4 = expression . "||" expression, FOLLOW [97] -> SHIFT "||" GOTO 142
	expression/L6 = expression . "|" expression, FOLLOW [97] -> SHIFT '|' GOTO 143
	expression/L11 = expression . "<<" expression, FOLLOW [97] -> SHIFT "<<" GOTO 144
	expression/L11 = expression . ">>" expression, FOLLOW [97] -> SHIFT ">>" GOTO 145
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [97] -> SHIFT '[' GOTO 146
	expression/L8 = expression . "==" expression, FOLLOW [97] -> SHIFT "==" GOTO 147
	expression/L8 = expression . "!=" expression, FOLLOW [97] -> SHIFT "!=" GOTO 148
	expression/L8 = expression . ">=" expression, FOLLOW [97] -> SHIFT ">=" GOTO 149
	expression/L8 = expression . "<=" expression, FOLLOW [97] -> SHIFT "<=" GOTO 150
	expression/L8 = expression . ">" expression, FOLLOW [97] -> SHIFT '>' GOTO 151
	expression/L8 = expression . "<" expression, FOLLOW [97] -> SHIFT '<' GOTO 152
	expression/L3 = expression . "+=" expression, FOLLOW [97] -> SHIFT "+=" GOTO 153
	expression/L3 = expression . "-=" expression, FOLLOW [97] -> SHIFT "-=" GOTO 154
	expression/L3 = expression . "*=" expression, FOLLOW [97] -> SHIFT "*=" GOTO 155
	expression/L3 = expression . "/=" expression, FOLLOW [97] -> SHIFT "/=" GOTO 156
	expression/L3 = expression . "^=" expression, FOLLOW [97] -> SHIFT "^=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [97] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "&=" expression, FOLLOW [97] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "%=" expression, FOLLOW [97] -> SHIFT "%=" GOTO 159
	expression/L3 = expression . "&&=" expression, FOLLOW [97] -> SHIFT "&&=" GOTO 160
	expression/L3 = expression . "||=" expression, FOLLOW [97] -> SHIFT "||=" GOTO 161
	expression/L3 = expression . "|=" expression, FOLLOW [97] -> SHIFT "|=" GOTO 162
	expression/L3 = expression . "<<=" expression, FOLLOW [97] -> SHIFT "<<=" GOTO 163
	expression/L3 = expression . ">>=" expression, FOLLOW [97] -> SHIFT ">>=" GOTO 164
	expression/L12 = expression . "." IDENT, FOLLOW [97] -> SHIFT '.' GOTO 165
[179]
	iexpression = expression . indirection IDENT, FOLLOW [97] -> GOTO 129
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [97] -> SHIFT '(' GOTO 130
	expression/L13 = expression . "(" ")", FOLLOW [97] -> SHIFT '(' GOTO 130
	statement/L1 = "delete" expression . ";", FOLLOW [98] -> SHIFT ';' GOTO 279
	expression/L7 = expression . "&" expression, FOLLOW [97] -> SHIFT '&' GOTO 132
	expression/L7 = expression . "^" expression, FOLLOW [97] -> SHIFT '^' GOTO 133
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 134
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 134
	expression/L3 = expression . "=" expression, FOLLOW [97] -> SHIFT '=' GOTO 135
	expression/L9 = expression . "+" expression, FOLLOW [97] -> SHIFT '+' GOTO 136
	expression/L9 = expression . "-" expression, FOLLOW [97] -> SHIFT '-' GOTO 137
	expression/L10 = expression . "*" expression, FOLLOW [97] -> SHIFT '*' GOTO 138
	expression/L10 = expression . "/" expression, FOLLOW [97] -> SHIFT '/' GOTO 139
	expression/L10 = expression . "%" expression, FOLLOW [97] -> SHIFT '%' GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [97] -> SHIFT "&&" GOTO 141
	expression/L4 = expression . "||" expression, FOLLOW [97] -> SHIFT "||" GOTO 142
	expression/L6 = expression . "|" expression, FOLLOW [97] -> SHIFT '|' GOTO 143
	expression/L11 = expression . "<<" expression, FOLLOW [97] -> SHIFT "<<" GOTO 144
	expression/L11 = expression . ">>" expression, FOLLOW [97] -> SHIFT ">>" GOTO 145
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [97] -> SHIFT '[' GOTO 146
	expression/L8 = expression . "==" expression, FOLLOW [97] -> SHIFT "==" GOTO 147
	expression/L8 = expression . "!=" expression, FOLLOW [97] -> SHIFT "!=" GOTO 148
	expression/L8 = expression . ">=" expression, FOLLOW [97] -> SHIFT ">=" GOTO 149
	expression/L8 = expression . "<=" expression, FOLLOW [97] -> SHIFT "<=" GOTO 150
	expression/L8 = expression . ">" expression, FOLLOW [97] -> SHIFT '>' GOTO 151
	expression/L8 = expression . "<" expression, FOLLOW [97] -> SHIFT '<' GOTO 152
	expression/L3 = expression . "+=" expression, FOLLOW [97] -> SHIFT "+=" GOTO 153
	expression/L3 = expression . "-=" expression, FOLLOW [97] -> SHIFT "-=" GOTO 154
	expression/L3 = expression . "*=" expression, FOLLOW [97] -> SHIFT "*=" GOTO 155
	expression/L3 = expression . "/=" expression, FOLLOW [97] -> SHIFT "/=" GOTO 156
	expression/L3 = expression . "^=" expression, FOLLOW [97] -> SHIFT "^=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [97] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "&=" expression, FOLLOW [97] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "%=" expression, FOLLOW [97] -> SHIFT "%=" GOTO 159
	expression/L3 = expression . "&&=" expression, FOLLOW [97] -> SHIFT "&&=" GOTO 160
	expression/L3 = expression . "||=" expression, FOLLOW [97] -> SHIFT "||=" GOTO 161
	expression/L3 = expression . "|=" expression, FOLLOW [97] -> SHIFT "|=" GOTO 162
	expression/L3 = expression . "<<=" expression, FOLLOW [97] -> SHIFT "<<=" GOTO 163
	expression/L3 = expression . ">>=" expression, FOLLOW [97] -> SHIFT ">>=" GOTO 164
	expression/L12 = expression . "." IDENT, FOLLOW [97] -> SHIFT '.' GOTO 165
[180]
	statement/L1 = "if" "(" . expression ")" "{" codeblock "}", FOLLOW [98] -> GOTO 280
	statement/L1 = "if" "(" . expression ")" "{" codeblock "}" "else" "{" codeblock "}", FOLLOW [98] -> GOTO 280
	expression/L3 = . expression "=" expression, FOLLOW [228] -> GOTO 280
	expression/L3 = . expression "+=" expression, FOLLOW [228] -> GOTO 280
	expression/L3 = . expression "-=" expression, FOLLOW [228] -> GOTO 280
	expression/L3 = . expression "*=" expression, FOLLOW [228] -> GOTO 280
	expression/L3 = . expression "/=" expression, FOLLOW [228] -> GOTO 280
	expression/L3 = . expression "^=" expression, FOLLOW [228] -> GOTO 280
	expression/L3 = . expression "&=" expression, FOLLOW [228] -> GOTO 280
	expression/L3 = . expression "%=" expression, FOLLOW [228] -> GOTO 280
	expression/L3 = . expression "&&=" expression, FOLLOW [228] -> GOTO 280
	expression/L3 = . expression "||=" expression, FOLLOW [228] -> GOTO 280
	expression/L3 = . expression "&=" expression, FOLLOW [228] -> GOTO 280
	expression/L3 = . expression "|=" expression, FOLLOW [228] -> GOTO 280
	expression/L3 = . expression "<<=" expression, FOLLOW [228] -> GOTO 280
	expression/L3 = . expression ">>=" expression, FOLLOW [228] -> GOTO 280
	expression/L4 = . expression "||" expression, FOLLOW [228] -> GOTO 280
	expression/L5 = . expression "&&" expression, FOLLOW [228] -> GOTO 280
	expression/L6 = . expression "|" expression, FOLLOW [228] -> GOTO 280
	expression/L7 = . expression "^" expression, FOLLOW [228] -> GOTO 280
	expression/L7 = . expression "&" expression, FOLLOW [228] -> GOTO 280
	expression/L8 = . expression "==" expression, FOLLOW [228] -> GOTO 280
	expression/L8 = . expression "!=" expression, FOLLOW [228] -> GOTO 280
	expression/L8 = . expression "<=" expression, FOLLOW [228] -> GOTO 280
	expression/L8 = . expression "<" expression, FOLLOW [228] -> GOTO 280
	expression/L8 = . expression ">=" expression, FOLLOW [228] -> GOTO 280
	expression/L8 = . expression ">" expression, FOLLOW [228] -> GOTO 280
	expression/L9 = . expression "+" expression, FOLLOW [228] -> GOTO 280
	expression/L9 = . expression "-" expression, FOLLOW [228] -> GOTO 280
	expression/L10 = . expression "*" expression, FOLLOW [228] -> GOTO 280
	expression/L10 = . expression "/" expression, FOLLOW [228] -> GOTO 280
	expression/L10 = . expression "%" expression, FOLLOW [228] -> GOTO 280
	expression/L11 = . expression "<<" expression, FOLLOW [228] -> GOTO 280
	expression/L11 = . expression ">>" expression, FOLLOW [228] -> GOTO 280
	expression/L12 = . expression "." IDENT, FOLLOW [228] -> GOTO 280
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [228] -> GOTO 280
	expression/L13 = . expression "(" ")", FOLLOW [228] -> GOTO 280
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [228] -> GOTO 280
	iexpression = . expression indirection IDENT, FOLLOW [228] -> GOTO 280
	expression/L12 = . iexpression, FOLLOW [228] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [228] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [228] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [228] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [228] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [228] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [228] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [228] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [228] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [228] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [228] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [228] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [228] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [228] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [228] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [228] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [228] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [228] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [228] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [228] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [228] -> SHIFT "null" GOTO 92
[181]
	statement/L1 = "while" "(" . expression ")" "{" codeblock "}", FOLLOW [98] -> GOTO 281
	expression/L3 = . expression "=" expression, FOLLOW [228] -> GOTO 281
	expression/L3 = . expression "+=" expression, FOLLOW [228] -> GOTO 281
	expression/L3 = . expression "-=" expression, FOLLOW [228] -> GOTO 281
	expression/L3 = . expression "*=" expression, FOLLOW [228] -> GOTO 281
	expression/L3 = . expression "/=" expression, FOLLOW [228] -> GOTO 281
	expression/L3 = . expression "^=" expression, FOLLOW [228] -> GOTO 281
	expression/L3 = . expression "&=" expression, FOLLOW [228] -> GOTO 281
	expression/L3 = . expression "%=" expression, FOLLOW [228] -> GOTO 281
	expression/L3 = . expression "&&=" expression, FOLLOW [228] -> GOTO 281
	expression/L3 = . expression "||=" expression, FOLLOW [228] -> GOTO 281
	expression/L3 = . expression "&=" expression, FOLLOW [228] -> GOTO 281
	expression/L3 = . expression "|=" expression, FOLLOW [228] -> GOTO 281
	expression/L3 = . expression "<<=" expression, FOLLOW [228] -> GOTO 281
	expression/L3 = . expression ">>=" expression, FOLLOW [228] -> GOTO 281
	expression/L4 = . expression "||" expression, FOLLOW [228] -> GOTO 281
	expression/L5 = . expression "&&" expression, FOLLOW [228] -> GOTO 281
	expression/L6 = . expression "|" expression, FOLLOW [228] -> GOTO 281
	expression/L7 = . expression "^" expression, FOLLOW [228] -> GOTO 281
	expression/L7 = . expression "&" expression, FOLLOW [228] -> GOTO 281
	expression/L8 = . expression "==" expression, FOLLOW [228] -> GOTO 281
	expression/L8 = . expression "!=" expression, FOLLOW [228] -> GOTO 281
	expression/L8 = . expression "<=" expression, FOLLOW [228] -> GOTO 281
	expression/L8 = . expression "<" expression, FOLLOW [228] -> GOTO 281
	expression/L8 = . expression ">=" expression, FOLLOW [228] -> GOTO 281
	expression/L8 = . expression ">" expression, FOLLOW [228] -> GOTO 281
	expression/L9 = . expression "+" expression, FOLLOW [228] -> GOTO 281
	expression/L9 = . expression "-" expression, FOLLOW [228] -> GOTO 281
	expression/L10 = . expression "*" expression, FOLLOW [228] -> GOTO 281
	expression/L10 = . expression "/" expression, FOLLOW [228] -> GOTO 281
	expression/L10 = . expression "%" expression, FOLLOW [228] -> GOTO 281
	expression/L11 = . expression "<<" expression, FOLLOW [228] -> GOTO 281
	expression/L11 = . expression ">>" expression, FOLLOW [228] -> GOTO 281
	expression/L12 = . expression "." IDENT, FOLLOW [228] -> GOTO 281
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [228] -> GOTO 281
	expression/L13 = . expression "(" ")", FOLLOW [228] -> GOTO 281
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [228] -> GOTO 281
	iexpression = . expression indirection IDENT, FOLLOW [228] -> GOTO 281
	expression/L12 = . iexpression, FOLLOW [228] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [228] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [228] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [228] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [228] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [228] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [228] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [228] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [228] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [228] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [228] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [228] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [228] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [228] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [228] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [228] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [228] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [228] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [228] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [228] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [228] -> SHIFT "null" GOTO 92
[182]
	expression/L1 = "new" typespec . ":" expression, FOLLOW [239] -> SHIFT ':' GOTO 282
[183]
	expression/L1 = "cast" typespec . ":" "{" expression "}", FOLLOW [239] -> SHIFT ':' GOTO 283
	expression/L1 = "cast" typespec . ":" "{" "}", FOLLOW [239] -> SHIFT ':' GOTO 283
[184]
	iexpression = expression . indirection IDENT, FOLLOW [239] -> GOTO 129
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [239] -> SHIFT '(' GOTO 130
	expression/L13 = expression . "(" ")", FOLLOW [239] -> SHIFT '(' GOTO 130
	expressionlist = expression . "," expressionlist, FOLLOW [263] -> SHIFT ',' GOTO 275
	expression/L7 = expression . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 132
	expression/L7 = expression . "^" expression, FOLLOW [239] -> SHIFT '^' GOTO 133
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 134
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 134
	expression/L3 = expression . "=" expression, FOLLOW [239] -> SHIFT '=' GOTO 135
	expression/L9 = expression . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 136
	expression/L9 = expression . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 137
	expression/L10 = expression . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 138
	expression/L10 = expression . "/" expression, FOLLOW [239] -> SHIFT '/' GOTO 139
	expression/L10 = expression . "%" expression, FOLLOW [239] -> SHIFT '%' GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [239] -> SHIFT "&&" GOTO 141
	expression/L4 = expression . "||" expression, FOLLOW [239] -> SHIFT "||" GOTO 142
	expression/L6 = expression . "|" expression, FOLLOW [239] -> SHIFT '|' GOTO 143
	expression/L11 = expression . "<<" expression, FOLLOW [239] -> SHIFT "<<" GOTO 144
	expression/L11 = expression . ">>" expression, FOLLOW [239] -> SHIFT ">>" GOTO 145
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [239] -> SHIFT '[' GOTO 146
	expression/L8 = expression . "==" expression, FOLLOW [239] -> SHIFT "==" GOTO 147
	expression/L8 = expression . "!=" expression, FOLLOW [239] -> SHIFT "!=" GOTO 148
	expression/L8 = expression . ">=" expression, FOLLOW [239] -> SHIFT ">=" GOTO 149
	expression/L8 = expression . "<=" expression, FOLLOW [239] -> SHIFT "<=" GOTO 150
	expression/L8 = expression . ">" expression, FOLLOW [239] -> SHIFT '>' GOTO 151
	expression/L8 = expression . "<" expression, FOLLOW [239] -> SHIFT '<' GOTO 152
	expression/L3 = expression . "+=" expression, FOLLOW [239] -> SHIFT "+=" GOTO 153
	expression/L3 = expression . "-=" expression, FOLLOW [239] -> SHIFT "-=" GOTO 154
	expression/L3 = expression . "*=" expression, FOLLOW [239] -> SHIFT "*=" GOTO 155
	expression/L3 = expression . "/=" expression, FOLLOW [239] -> SHIFT "/=" GOTO 156
	expression/L3 = expression . "^=" expression, FOLLOW [239] -> SHIFT "^=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "%=" expression, FOLLOW [239] -> SHIFT "%=" GOTO 159
	expression/L3 = expression . "&&=" expression, FOLLOW [239] -> SHIFT "&&=" GOTO 160
	expression/L3 = expression . "||=" expression, FOLLOW [239] -> SHIFT "||=" GOTO 161
	expression/L3 = expression . "|=" expression, FOLLOW [239] -> SHIFT "|=" GOTO 162
	expression/L3 = expression . "<<=" expression, FOLLOW [239] -> SHIFT "<<=" GOTO 163
	expression/L3 = expression . ">>=" expression, FOLLOW [239] -> SHIFT ">>=" GOTO 164
	expression/L12 = expression . "." IDENT, FOLLOW [239] -> SHIFT '.' GOTO 165
	expressionlist = expression ., FOLLOW [263] -> REDUCE expressionlist #1
[185]
	variabledefinition = typespec IDENT "[" expression "]" . "=" expression, FOLLOW [15] -> SHIFT '=' GOTO 284
	variabledefinition = typespec IDENT "[" expression "]" . (step:84), FOLLOW [15] -> REDUCE variabledefinition #5 CALL vardef_array
[186]
	functiondefinition = linkage "function" IDENT typespec callablebody . (36), FOLLOW [252] -> REDUCE functiondefinition #5 CALL funcdef {const=false}
[187]
	functiondefinition = linkage "function" IDENT typespec callablebody_const . (37), FOLLOW [252] -> REDUCE functiondefinition #5 CALL funcdef {const=true}
[188]
	paramdecl = typespec . IDENT, FOLLOW [184] -> SHIFT IDENT GOTO 285
[189]
	callablebody = "(" parameterlist . ")" "{" codeblock "}", FOLLOW [252] -> SHIFT ')' GOTO 286
	callablebody_const = "(" parameterlist . ")" "const" "{" codeblock "}", FOLLOW [252] -> SHIFT ')' GOTO 286
[190]
	parameterlist = parameters . (71), FOLLOW [10] -> REDUCE parameterlist #1 CALL paramdeflist
[191]
	parameters = paramdecl . "," parameters, FOLLOW [10] -> SHIFT ',' GOTO 287
	parameters = paramdecl ., FOLLOW [10] -> REDUCE parameters #1
[192]
	typespec/L1 = "const" typename "^" "^" "&" . (28), FOLLOW [268] -> REDUCE typespec #5 CALL typespec "const^^&"
[193]
	structdefinition = "struct" IDENT "{" struct_definitionlist "}" . (step:30), FOLLOW [175] -> REDUCE structdefinition #5 CALL structdef
[194]
	struct_definitionlist = struct_definition struct_definitionlist ., FOLLOW [18] -> REDUCE struct_definitionlist #2
[195]
	interfacedefinition = "interface" IDENT "{" interface_definitionlist "}" . (step:31), FOLLOW [175] -> REDUCE interfacedefinition #5 CALL interfacedef
[196]
	interface_definitionlist = interface_definition interface_definitionlist ., FOLLOW [18] -> REDUCE interface_definitionlist #2
[197]
	typespec/L1 = . typename, FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [9] -> GOTO 8
	interface_definition = "function" IDENT . typespec "(" extern_paramlist ")" ";", FOLLOW [171] -> GOTO 288
	interface_definition = "function" IDENT . typespec "(" extern_paramlist ")" "const" ";", FOLLOW [171] -> GOTO 288
	typename/L1 = . IDENT, FOLLOW [168] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [168] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
[198]
	interface_definition = "procedure" IDENT . "(" extern_paramlist ")" ";", FOLLOW [171] -> SHIFT '(' GOTO 289
	interface_definition = "procedure" IDENT . "(" extern_paramlist ")" "const" ";", FOLLOW [171] -> SHIFT '(' GOTO 289
[199]
	typespec/L1 = . typename, FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [9] -> GOTO 8
	interface_definition = "operator" operatordecl . typespec "(" extern_paramlist ")" ";", FOLLOW [171] -> GOTO 290
	interface_definition = "operator" operatordecl . typespec "(" extern_paramlist ")" "const" ";", FOLLOW [171] -> GOTO 290
	typename/L1 = . IDENT, FOLLOW [168] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [168] -> SHIFT IDENT GOTO 17
	interface_definition = "operator" operatordecl . "(" extern_paramlist ")" ";", FOLLOW [171] -> SHIFT '(' GOTO 291
	interface_definition = "operator" operatordecl . "(" extern_paramlist ")" "const" ";", FOLLOW [171] -> SHIFT '(' GOTO 291
	typespec/L1 = . "const" typename, FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
[200]
	operatordecl = "(" . ")", FOLLOW [185] -> SHIFT ')' GOTO 292
[201]
	operatordecl = "&" . (55), FOLLOW [185] -> REDUCE operatordecl #1 CALL operatordecl {name="&",symbol="bitand"}
[202]
	operatordecl = "->" . (46), FOLLOW [185] -> REDUCE operatordecl #1 CALL operatordecl {name="->",symbol="arrow"}
[203]
	operatordecl = "=" . (47), FOLLOW [185] -> REDUCE operatordecl #1 CALL operatordecl {name="=",symbol="assign"}
[204]
	operatordecl = "+" . (48), FOLLOW [185] -> REDUCE operatordecl #1 CALL operatordecl {name="+",symbol="plus"}
[205]
	operatordecl = "-" . (49), FOLLOW [185] -> REDUCE operatordecl #1 CALL operatordecl {name="-",symbol="minus"}
[206]
	operatordecl = "*" . (50), FOLLOW [185] -> REDUCE operatordecl #1 CALL operatordecl {name="*",symbol="mul"}
[207]
	operatordecl = "/" . (51), FOLLOW [185] -> REDUCE operatordecl #1 CALL operatordecl {name="/",symbol="div"}
[208]
	operatordecl = "%" . (52), FOLLOW [185] -> REDUCE operatordecl #1 CALL operatordecl {name="%",symbol="mod"}
[209]
	operatordecl = "&&" . (53), FOLLOW [185] -> REDUCE operatordecl #1 CALL operatordecl {name="&&",symbol="and"}
[210]
	operatordecl = "||" . (54), FOLLOW [185] -> REDUCE operatordecl #1 CALL operatordecl {name="||",symbol="or"}
[211]
	operatordecl = "|" . (56), FOLLOW [185] -> REDUCE operatordecl #1 CALL operatordecl {name="|",symbol="bitor"}
[212]
	operatordecl = "<<" . (57), FOLLOW [185] -> REDUCE operatordecl #1 CALL operatordecl {name="<<",symbol="lsh"}
[213]
	operatordecl = ">>" . (58), FOLLOW [185] -> REDUCE operatordecl #1 CALL operatordecl {name=">>",symbol="rsh"}
[214]
	operatordecl = "~" . (59), FOLLOW [185] -> REDUCE operatordecl #1 CALL operatordecl {name="~",symbol="lneg"}
[215]
	operatordecl = "!" . (60), FOLLOW [185] -> REDUCE operatordecl #1 CALL operatordecl {name="!",symbol="not"}
[216]
	operatordecl = "[" . "]", FOLLOW [185] -> SHIFT ']' GOTO 293
[217]
	operatordecl = "==" . (63), FOLLOW [185] -> REDUCE operatordecl #1 CALL operatordecl {name="==",symbol="eq"}
[218]
	operatordecl = "!=" . (64), FOLLOW [185] -> REDUCE operatordecl #1 CALL operatordecl {name="!=",symbol="ne"}
[219]
	operatordecl = ">=" . (65), FOLLOW [185] -> REDUCE operatordecl #1 CALL operatordecl {name=">=",symbol="ge"}
[220]
	operatordecl = "<=" . (66), FOLLOW [185] -> REDUCE operatordecl #1 CALL operatordecl {name="<=",symbol="le"}
[221]
	operatordecl = ">" . (67), FOLLOW [185] -> REDUCE operatordecl #1 CALL operatordecl {name=">",symbol="gt"}
[222]
	operatordecl = "<" . (68), FOLLOW [185] -> REDUCE operatordecl #1 CALL operatordecl {name="<",symbol="lt"}
[223]
	classdefinition = "class" IDENT "{" class_definitionlist "}" . (step:33), FOLLOW [175] -> REDUCE classdefinition #5 CALL classdef
[224]
	class_definitionlist = class_definition class_definitionlist ., FOLLOW [18] -> REDUCE class_definitionlist #2
[225]
	class_definition = typedefinition ";" . (15), FOLLOW [174] -> REDUCE class_definition #2 CALL definition 1
[226]
	operatordefinition = linkage "operator" . operatordecl typespec callablebody, FOLLOW [174] -> GOTO 294
	operatordefinition = linkage "operator" . operatordecl typespec callablebody_const, FOLLOW [174] -> GOTO 294
	operatordefinition = linkage "operator" . operatordecl callablebody, FOLLOW [174] -> GOTO 294
	operatordefinition = linkage "operator" . operatordecl callablebody_const, FOLLOW [174] -> GOTO 294
	operatordecl = . "(" ")", FOLLOW [185] -> SHIFT '(' GOTO 200
	operatordecl = . "&", FOLLOW [185] -> SHIFT '&' GOTO 201
	operatordecl = . "->", FOLLOW [185] -> SHIFT "->" GOTO 202
	operatordecl = . "=", FOLLOW [185] -> SHIFT '=' GOTO 203
	operatordecl = . "+", FOLLOW [185] -> SHIFT '+' GOTO 204
	operatordecl = . "-", FOLLOW [185] -> SHIFT '-' GOTO 205
	operatordecl = . "*", FOLLOW [185] -> SHIFT '*' GOTO 206
	operatordecl = . "/", FOLLOW [185] -> SHIFT '/' GOTO 207
	operatordecl = . "%", FOLLOW [185] -> SHIFT '%' GOTO 208
	operatordecl = . "&&", FOLLOW [185] -> SHIFT "&&" GOTO 209
	operatordecl = . "||", FOLLOW [185] -> SHIFT "||" GOTO 210
	operatordecl = . "|", FOLLOW [185] -> SHIFT '|' GOTO 211
	operatordecl = . "<<", FOLLOW [185] -> SHIFT "<<" GOTO 212
	operatordecl = . ">>", FOLLOW [185] -> SHIFT ">>" GOTO 213
	operatordecl = . "~", FOLLOW [185] -> SHIFT '~' GOTO 214
	operatordecl = . "!", FOLLOW [185] -> SHIFT '!' GOTO 215
	operatordecl = . "[" "]", FOLLOW [185] -> SHIFT '[' GOTO 216
	operatordecl = . "==", FOLLOW [185] -> SHIFT "==" GOTO 217
	operatordecl = . "!=", FOLLOW [185] -> SHIFT "!=" GOTO 218
	operatordecl = . ">=", FOLLOW [185] -> SHIFT ">=" GOTO 219
	operatordecl = . "<=", FOLLOW [185] -> SHIFT "<=" GOTO 220
	operatordecl = . ">", FOLLOW [185] -> SHIFT '>' GOTO 221
	operatordecl = . "<", FOLLOW [185] -> SHIFT '<' GOTO 222
[227]
	constructordefinition = linkage "constructor" . callablebody, FOLLOW [174] -> GOTO 295
	callablebody = . "(" parameterlist ")" "{" codeblock "}", FOLLOW [174] -> SHIFT '(' GOTO 296
[228]
	class_definition = variabledefinition ";" . (15), FOLLOW [174] -> REDUCE class_definition #2 CALL definition 1
[229]
	statement/L1 = . typedefinition ";", FOLLOW [98] -> GOTO 63
	functiondefinition = . linkage "function" IDENT typespec callablebody, FOLLOW [98] -> GOTO 14
	functiondefinition = . linkage "function" IDENT typespec callablebody_const, FOLLOW [98] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [98] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody_const, FOLLOW [98] -> GOTO 14
	statement/L1 = . functiondefinition, FOLLOW [98] -> GOTO 64
	constructordefinition = "destructor" "{" . codeblock "}", FOLLOW [174] -> GOTO 297
	codeblock = . statementlist, FOLLOW [18] -> GOTO 66
	statementlist = . statement statementlist, FOLLOW [18] -> GOTO 67
	statement/L1 = . expression ";", FOLLOW [98] -> GOTO 68
	expression/L3 = . expression "=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "+=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "-=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "*=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "/=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "^=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "&=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "%=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "&&=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "||=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "&=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "|=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "<<=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression ">>=" expression, FOLLOW [97] -> GOTO 68
	expression/L4 = . expression "||" expression, FOLLOW [97] -> GOTO 68
	expression/L5 = . expression "&&" expression, FOLLOW [97] -> GOTO 68
	expression/L6 = . expression "|" expression, FOLLOW [97] -> GOTO 68
	expression/L7 = . expression "^" expression, FOLLOW [97] -> GOTO 68
	expression/L7 = . expression "&" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression "==" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression "!=" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression "<=" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression "<" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression ">=" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression ">" expression, FOLLOW [97] -> GOTO 68
	expression/L9 = . expression "+" expression, FOLLOW [97] -> GOTO 68
	expression/L9 = . expression "-" expression, FOLLOW [97] -> GOTO 68
	expression/L10 = . expression "*" expression, FOLLOW [97] -> GOTO 68
	expression/L10 = . expression "/" expression, FOLLOW [97] -> GOTO 68
	expression/L10 = . expression "%" expression, FOLLOW [97] -> GOTO 68
	expression/L11 = . expression "<<" expression, FOLLOW [97] -> GOTO 68
	expression/L11 = . expression ">>" expression, FOLLOW [97] -> GOTO 68
	expression/L12 = . expression "." IDENT, FOLLOW [97] -> GOTO 68
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [97] -> GOTO 68
	expression/L13 = . expression "(" ")", FOLLOW [97] -> GOTO 68
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [97] -> GOTO 68
	iexpression = . expression indirection IDENT, FOLLOW [97] -> GOTO 68
	expression/L12 = . iexpression, FOLLOW [97] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [97] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [97] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [97] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [97] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [97] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [97] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [97] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [97] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [97] -> SHIFT '&' GOTO 78
	typedefinition = . "typedef" typepath IDENT, FOLLOW [15] -> SHIFT "typedef" GOTO 19
	statement/L1 = . "{" codeblock "}", FOLLOW [98] -> SHIFT '{' GOTO 79
	expression/L1 = . "{" expressionlist "}", FOLLOW [97] -> SHIFT '{' GOTO 79
	expression/L1 = . "{" "}", FOLLOW [97] -> SHIFT '{' GOTO 79
	linkage = . "private", FOLLOW [61] -> SHIFT "private" GOTO 23
	linkage = . "public", FOLLOW [61] -> SHIFT "public" GOTO 24
	expression/L9 = . "+" expression, FOLLOW [97] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [97] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [97] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [97] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [97] -> SHIFT '!' GOTO 84
	statement/L1 = . "var" variabledefinition ";", FOLLOW [98] -> SHIFT "var" GOTO 85
	statement/L1 = . "return" expression ";", FOLLOW [98] -> SHIFT "return" GOTO 86
	statement/L1 = . "delete" expression ";", FOLLOW [98] -> SHIFT "delete" GOTO 87
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}", FOLLOW [98] -> SHIFT "if" GOTO 88
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}", FOLLOW [98] -> SHIFT "if" GOTO 88
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}", FOLLOW [98] -> SHIFT "while" GOTO 89
	expression/L1 = . "new" typespec ":" expression, FOLLOW [97] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [97] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [97] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [97] -> SHIFT "null" GOTO 92
	statementlist = ., FOLLOW [18] -> REDUCE statementlist #0
	linkage = . (35), FOLLOW [61] -> REDUCE linkage #0 CALL linkage {private=false,linkage="external"}
[230]
	typepath/L1 = . typename, FOLLOW [176] -> GOTO 39
	inheritlist = . typepath "," inheritlist, FOLLOW [19] -> GOTO 122
	inheritlist = . typepath, FOLLOW [19] -> GOTO 122
	inheritlist = typepath "," . inheritlist, FOLLOW [19] -> GOTO 298
	typename/L1 = . IDENT, FOLLOW [176] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [176] -> SHIFT IDENT GOTO 17
[231]
	classdefinition = "class" IDENT ":" inheritlist "{" . class_definitionlist "}", FOLLOW [175] -> GOTO 299
	class_definitionlist = . class_definition class_definitionlist, FOLLOW [18] -> GOTO 111
	typespec/L1 = . typename, FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [13] -> GOTO 8
	variabledefinition = . typespec IDENT, FOLLOW [15] -> GOTO 9
	variabledefinition = . typespec IDENT "=" expression, FOLLOW [15] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression, FOLLOW [15] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]", FOLLOW [15] -> GOTO 9
	class_definition = . typedefinition ";", FOLLOW [174] -> GOTO 112
	class_definition = . structdefinition, FOLLOW [174] -> GOTO 113
	class_definition = . interfacedefinition, FOLLOW [174] -> GOTO 114
	class_definition = . classdefinition, FOLLOW [174] -> GOTO 115
	functiondefinition = . linkage "function" IDENT typespec callablebody, FOLLOW [174] -> GOTO 116
	functiondefinition = . linkage "function" IDENT typespec callablebody_const, FOLLOW [174] -> GOTO 116
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [174] -> GOTO 116
	functiondefinition = . linkage "procedure" IDENT callablebody_const, FOLLOW [174] -> GOTO 116
	constructordefinition = . linkage "constructor" callablebody, FOLLOW [174] -> GOTO 116
	operatordefinition = . linkage "operator" operatordecl typespec callablebody, FOLLOW [174] -> GOTO 116
	operatordefinition = . linkage "operator" operatordecl typespec callablebody_const, FOLLOW [174] -> GOTO 116
	operatordefinition = . linkage "operator" operatordecl callablebody, FOLLOW [174] -> GOTO 116
	operatordefinition = . linkage "operator" operatordecl callablebody_const, FOLLOW [174] -> GOTO 116
	class_definition = . functiondefinition, FOLLOW [174] -> GOTO 117
	class_definition = . constructordefinition, FOLLOW [174] -> GOTO 118
	class_definition = . operatordefinition, FOLLOW [174] -> GOTO 119
	class_definition = . variabledefinition ";", FOLLOW [174] -> GOTO 120
	typename/L1 = . IDENT, FOLLOW [62] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [62] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [13] -> SHIFT "const" GOTO 18
	typedefinition = . "typedef" typepath IDENT, FOLLOW [15] -> SHIFT "typedef" GOTO 19
	structdefinition = . "struct" IDENT "{" struct_definitionlist "}", FOLLOW [174] -> SHIFT "struct" GOTO 20
	interfacedefinition = . "interface" IDENT "{" interface_definitionlist "}", FOLLOW [174] -> SHIFT "interface" GOTO 21
	classdefinition = . "class" IDENT "{" class_definitionlist "}", FOLLOW [175] -> SHIFT "class" GOTO 22
	classdefinition = . "class" IDENT ":" inheritlist "{" class_definitionlist "}", FOLLOW [175] -> SHIFT "class" GOTO 22
	linkage = . "private", FOLLOW [173] -> SHIFT "private" GOTO 23
	linkage = . "public", FOLLOW [173] -> SHIFT "public" GOTO 24
	constructordefinition = . "destructor" "{" codeblock "}", FOLLOW [174] -> SHIFT "destructor" GOTO 121
	class_definitionlist = ., FOLLOW [18] -> REDUCE class_definitionlist #0
	linkage = . (35), FOLLOW [173] -> REDUCE linkage #0 CALL linkage {private=false,linkage="external"}
[232]
	extern_paramlist = . extern_parameters, FOLLOW [186] -> GOTO 233
	extern_definition = "extern" DQSTRING "function" IDENT typespec "(" . extern_paramlist ")" ";", FOLLOW [59] -> GOTO 300
	extern_definition = "extern" DQSTRING "function" IDENT typespec "(" . extern_paramlist "..." ")" ";", FOLLOW [59] -> GOTO 300
	typespec/L1 = . typename, FOLLOW [189] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [189] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [189] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [189] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [189] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [189] -> GOTO 8
	extern_parameters = . typespec "," extern_parameters, FOLLOW [186] -> GOTO 235
	extern_parameters = . typespec IDENT "," extern_parameters, FOLLOW [186] -> GOTO 235
	extern_parameters = . typespec, FOLLOW [186] -> GOTO 235
	extern_parameters = . typespec IDENT, FOLLOW [186] -> GOTO 235
	typename/L1 = . IDENT, FOLLOW [190] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [190] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [189] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [189] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [189] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [189] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [189] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [189] -> SHIFT "const" GOTO 18
	extern_paramlist = . (6), FOLLOW [186] -> REDUCE extern_paramlist #0 CALL extern_paramdeflist
[233]
	extern_paramlist = extern_parameters . (6), FOLLOW [186] -> REDUCE extern_paramlist #1 CALL extern_paramdeflist
[234]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist . ")" ";", FOLLOW [59] -> SHIFT ')' GOTO 301
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist . "..." ")" ";", FOLLOW [59] -> SHIFT "..." GOTO 302
[235]
	extern_parameters = typespec . IDENT "," extern_parameters, FOLLOW [186] -> SHIFT IDENT GOTO 303
	extern_parameters = typespec . IDENT, FOLLOW [186] -> SHIFT IDENT GOTO 303
	extern_parameters = typespec . "," extern_parameters, FOLLOW [186] -> SHIFT ',' GOTO 304
	extern_parameters = typespec ., FOLLOW [186] -> REDUCE extern_parameters #1
[236]
	iexpression = expression indirection IDENT . (133), FOLLOW [239] -> REDUCE iexpression #3 CALL rep_operator "->"
[237]
	expression/L13 = expression "(" expressionlist . ")", FOLLOW [239] -> SHIFT ')' GOTO 305
[238]
	expression/L13 = expression "(" ")" . (131), FOLLOW [239] -> REDUCE expression #3 CALL operator "()"
[239]
	iexpression = expression . indirection IDENT, FOLLOW [239] -> GOTO 129
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [239] -> SHIFT '(' GOTO 130
	expression/L13 = expression . "(" ")", FOLLOW [239] -> SHIFT '(' GOTO 130
	expression/L7 = expression . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 132
	expression/L7 = expression . "^" expression, FOLLOW [239] -> SHIFT '^' GOTO 133
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 134
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 134
	expression/L3 = expression . "=" expression, FOLLOW [239] -> SHIFT '=' GOTO 135
	expression/L9 = expression . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 136
	expression/L9 = expression . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 137
	expression/L10 = expression . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 138
	expression/L10 = expression . "/" expression, FOLLOW [239] -> SHIFT '/' GOTO 139
	expression/L10 = expression . "%" expression, FOLLOW [239] -> SHIFT '%' GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [239] -> SHIFT "&&" GOTO 141
	expression/L4 = expression . "||" expression, FOLLOW [239] -> SHIFT "||" GOTO 142
	expression/L6 = expression . "|" expression, FOLLOW [239] -> SHIFT '|' GOTO 143
	expression/L11 = expression . "<<" expression, FOLLOW [239] -> SHIFT "<<" GOTO 144
	expression/L11 = expression . ">>" expression, FOLLOW [239] -> SHIFT ">>" GOTO 145
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [239] -> SHIFT '[' GOTO 146
	expression/L8 = expression . "==" expression, FOLLOW [239] -> SHIFT "==" GOTO 147
	expression/L8 = expression . "!=" expression, FOLLOW [239] -> SHIFT "!=" GOTO 148
	expression/L8 = expression . ">=" expression, FOLLOW [239] -> SHIFT ">=" GOTO 149
	expression/L8 = expression . "<=" expression, FOLLOW [239] -> SHIFT "<=" GOTO 150
	expression/L8 = expression . ">" expression, FOLLOW [239] -> SHIFT '>' GOTO 151
	expression/L8 = expression . "<" expression, FOLLOW [239] -> SHIFT '<' GOTO 152
	expression/L3 = expression . "+=" expression, FOLLOW [239] -> SHIFT "+=" GOTO 153
	expression/L3 = expression . "-=" expression, FOLLOW [239] -> SHIFT "-=" GOTO 154
	expression/L3 = expression . "*=" expression, FOLLOW [239] -> SHIFT "*=" GOTO 155
	expression/L3 = expression . "/=" expression, FOLLOW [239] -> SHIFT "/=" GOTO 156
	expression/L3 = expression . "^=" expression, FOLLOW [239] -> SHIFT "^=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "%=" expression, FOLLOW [239] -> SHIFT "%=" GOTO 159
	expression/L3 = expression . "&&=" expression, FOLLOW [239] -> SHIFT "&&=" GOTO 160
	expression/L3 = expression . "||=" expression, FOLLOW [239] -> SHIFT "||=" GOTO 161
	expression/L3 = expression . "|=" expression, FOLLOW [239] -> SHIFT "|=" GOTO 162
	expression/L3 = expression . "<<=" expression, FOLLOW [239] -> SHIFT "<<=" GOTO 163
	expression/L3 = expression . ">>=" expression, FOLLOW [239] -> SHIFT ">>=" GOTO 164
	expression/L12 = expression . "." IDENT, FOLLOW [239] -> SHIFT '.' GOTO 165
	expression/L7 = expression "&" expression . (113), FOLLOW [239] -> REDUCE expression #3 CALL operator "&"
[240]
	iexpression = expression . indirection IDENT, FOLLOW [239] -> GOTO 129
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [239] -> SHIFT '(' GOTO 130
	expression/L13 = expression . "(" ")", FOLLOW [239] -> SHIFT '(' GOTO 130
	expression/L7 = expression . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 132
	expression/L7 = expression . "^" expression, FOLLOW [239] -> SHIFT '^' GOTO 133
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 134
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 134
	expression/L3 = expression . "=" expression, FOLLOW [239] -> SHIFT '=' GOTO 135
	expression/L9 = expression . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 136
	expression/L9 = expression . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 137
	expression/L10 = expression . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 138
	expression/L10 = expression . "/" expression, FOLLOW [239] -> SHIFT '/' GOTO 139
	expression/L10 = expression . "%" expression, FOLLOW [239] -> SHIFT '%' GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [239] -> SHIFT "&&" GOTO 141
	expression/L4 = expression . "||" expression, FOLLOW [239] -> SHIFT "||" GOTO 142
	expression/L6 = expression . "|" expression, FOLLOW [239] -> SHIFT '|' GOTO 143
	expression/L11 = expression . "<<" expression, FOLLOW [239] -> SHIFT "<<" GOTO 144
	expression/L11 = expression . ">>" expression, FOLLOW [239] -> SHIFT ">>" GOTO 145
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [239] -> SHIFT '[' GOTO 146
	expression/L8 = expression . "==" expression, FOLLOW [239] -> SHIFT "==" GOTO 147
	expression/L8 = expression . "!=" expression, FOLLOW [239] -> SHIFT "!=" GOTO 148
	expression/L8 = expression . ">=" expression, FOLLOW [239] -> SHIFT ">=" GOTO 149
	expression/L8 = expression . "<=" expression, FOLLOW [239] -> SHIFT "<=" GOTO 150
	expression/L8 = expression . ">" expression, FOLLOW [239] -> SHIFT '>' GOTO 151
	expression/L8 = expression . "<" expression, FOLLOW [239] -> SHIFT '<' GOTO 152
	expression/L3 = expression . "+=" expression, FOLLOW [239] -> SHIFT "+=" GOTO 153
	expression/L3 = expression . "-=" expression, FOLLOW [239] -> SHIFT "-=" GOTO 154
	expression/L3 = expression . "*=" expression, FOLLOW [239] -> SHIFT "*=" GOTO 155
	expression/L3 = expression . "/=" expression, FOLLOW [239] -> SHIFT "/=" GOTO 156
	expression/L3 = expression . "^=" expression, FOLLOW [239] -> SHIFT "^=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "%=" expression, FOLLOW [239] -> SHIFT "%=" GOTO 159
	expression/L3 = expression . "&&=" expression, FOLLOW [239] -> SHIFT "&&=" GOTO 160
	expression/L3 = expression . "||=" expression, FOLLOW [239] -> SHIFT "||=" GOTO 161
	expression/L3 = expression . "|=" expression, FOLLOW [239] -> SHIFT "|=" GOTO 162
	expression/L3 = expression . "<<=" expression, FOLLOW [239] -> SHIFT "<<=" GOTO 163
	expression/L3 = expression . ">>=" expression, FOLLOW [239] -> SHIFT ">>=" GOTO 164
	expression/L12 = expression . "." IDENT, FOLLOW [239] -> SHIFT '.' GOTO 165
	expression/L7 = expression "^" expression . (112), FOLLOW [239] -> REDUCE expression #3 CALL operator "^"
[241]
	indirection = "->" indirection . (134), FOLLOW [13] -> REDUCE indirection #2 CALL count
[242]
	iexpression = expression . indirection IDENT, FOLLOW [239] -> GOTO 129
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [239] -> SHIFT '(' GOTO 130
	expression/L13 = expression . "(" ")", FOLLOW [239] -> SHIFT '(' GOTO 130
	expression/L7 = expression . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 132
	expression/L7 = expression . "^" expression, FOLLOW [239] -> SHIFT '^' GOTO 133
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 134
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 134
	expression/L3 = expression . "=" expression, FOLLOW [239] -> SHIFT '=' GOTO 135
	expression/L9 = expression . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 136
	expression/L9 = expression . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 137
	expression/L10 = expression . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 138
	expression/L10 = expression . "/" expression, FOLLOW [239] -> SHIFT '/' GOTO 139
	expression/L10 = expression . "%" expression, FOLLOW [239] -> SHIFT '%' GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [239] -> SHIFT "&&" GOTO 141
	expression/L4 = expression . "||" expression, FOLLOW [239] -> SHIFT "||" GOTO 142
	expression/L6 = expression . "|" expression, FOLLOW [239] -> SHIFT '|' GOTO 143
	expression/L11 = expression . "<<" expression, FOLLOW [239] -> SHIFT "<<" GOTO 144
	expression/L11 = expression . ">>" expression, FOLLOW [239] -> SHIFT ">>" GOTO 145
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [239] -> SHIFT '[' GOTO 146
	expression/L8 = expression . "==" expression, FOLLOW [239] -> SHIFT "==" GOTO 147
	expression/L8 = expression . "!=" expression, FOLLOW [239] -> SHIFT "!=" GOTO 148
	expression/L8 = expression . ">=" expression, FOLLOW [239] -> SHIFT ">=" GOTO 149
	expression/L8 = expression . "<=" expression, FOLLOW [239] -> SHIFT "<=" GOTO 150
	expression/L8 = expression . ">" expression, FOLLOW [239] -> SHIFT '>' GOTO 151
	expression/L8 = expression . "<" expression, FOLLOW [239] -> SHIFT '<' GOTO 152
	expression/L3 = expression . "+=" expression, FOLLOW [239] -> SHIFT "+=" GOTO 153
	expression/L3 = expression . "-=" expression, FOLLOW [239] -> SHIFT "-=" GOTO 154
	expression/L3 = expression . "*=" expression, FOLLOW [239] -> SHIFT "*=" GOTO 155
	expression/L3 = expression . "/=" expression, FOLLOW [239] -> SHIFT "/=" GOTO 156
	expression/L3 = expression . "^=" expression, FOLLOW [239] -> SHIFT "^=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "%=" expression, FOLLOW [239] -> SHIFT "%=" GOTO 159
	expression/L3 = expression . "&&=" expression, FOLLOW [239] -> SHIFT "&&=" GOTO 160
	expression/L3 = expression . "||=" expression, FOLLOW [239] -> SHIFT "||=" GOTO 161
	expression/L3 = expression . "|=" expression, FOLLOW [239] -> SHIFT "|=" GOTO 162
	expression/L3 = expression . "<<=" expression, FOLLOW [239] -> SHIFT "<<=" GOTO 163
	expression/L3 = expression . ">>=" expression, FOLLOW [239] -> SHIFT ">>=" GOTO 164
	expression/L12 = expression . "." IDENT, FOLLOW [239] -> SHIFT '.' GOTO 165
	expression/L3 = expression "=" expression . (96), FOLLOW [239] -> REDUCE expression #3 CALL operator "="
[243]
	iexpression = expression . indirection IDENT, FOLLOW [239] -> GOTO 129
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [239] -> SHIFT '(' GOTO 130
	expression/L13 = expression . "(" ")", FOLLOW [239] -> SHIFT '(' GOTO 130
	expression/L7 = expression . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 132
	expression/L7 = expression . "^" expression, FOLLOW [239] -> SHIFT '^' GOTO 133
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 134
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 134
	expression/L3 = expression . "=" expression, FOLLOW [239] -> SHIFT '=' GOTO 135
	expression/L9 = expression . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 136
	expression/L9 = expression . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 137
	expression/L10 = expression . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 138
	expression/L10 = expression . "/" expression, FOLLOW [239] -> SHIFT '/' GOTO 139
	expression/L10 = expression . "%" expression, FOLLOW [239] -> SHIFT '%' GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [239] -> SHIFT "&&" GOTO 141
	expression/L4 = expression . "||" expression, FOLLOW [239] -> SHIFT "||" GOTO 142
	expression/L6 = expression . "|" expression, FOLLOW [239] -> SHIFT '|' GOTO 143
	expression/L11 = expression . "<<" expression, FOLLOW [239] -> SHIFT "<<" GOTO 144
	expression/L11 = expression . ">>" expression, FOLLOW [239] -> SHIFT ">>" GOTO 145
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [239] -> SHIFT '[' GOTO 146
	expression/L8 = expression . "==" expression, FOLLOW [239] -> SHIFT "==" GOTO 147
	expression/L8 = expression . "!=" expression, FOLLOW [239] -> SHIFT "!=" GOTO 148
	expression/L8 = expression . ">=" expression, FOLLOW [239] -> SHIFT ">=" GOTO 149
	expression/L8 = expression . "<=" expression, FOLLOW [239] -> SHIFT "<=" GOTO 150
	expression/L8 = expression . ">" expression, FOLLOW [239] -> SHIFT '>' GOTO 151
	expression/L8 = expression . "<" expression, FOLLOW [239] -> SHIFT '<' GOTO 152
	expression/L3 = expression . "+=" expression, FOLLOW [239] -> SHIFT "+=" GOTO 153
	expression/L3 = expression . "-=" expression, FOLLOW [239] -> SHIFT "-=" GOTO 154
	expression/L3 = expression . "*=" expression, FOLLOW [239] -> SHIFT "*=" GOTO 155
	expression/L3 = expression . "/=" expression, FOLLOW [239] -> SHIFT "/=" GOTO 156
	expression/L3 = expression . "^=" expression, FOLLOW [239] -> SHIFT "^=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "%=" expression, FOLLOW [239] -> SHIFT "%=" GOTO 159
	expression/L3 = expression . "&&=" expression, FOLLOW [239] -> SHIFT "&&=" GOTO 160
	expression/L3 = expression . "||=" expression, FOLLOW [239] -> SHIFT "||=" GOTO 161
	expression/L3 = expression . "|=" expression, FOLLOW [239] -> SHIFT "|=" GOTO 162
	expression/L3 = expression . "<<=" expression, FOLLOW [239] -> SHIFT "<<=" GOTO 163
	expression/L3 = expression . ">>=" expression, FOLLOW [239] -> SHIFT ">>=" GOTO 164
	expression/L12 = expression . "." IDENT, FOLLOW [239] -> SHIFT '.' GOTO 165
	expression/L9 = expression "+" expression . (120), FOLLOW [239] -> REDUCE expression #3 CALL operator "+"
[244]
	iexpression = expression . indirection IDENT, FOLLOW [239] -> GOTO 129
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [239] -> SHIFT '(' GOTO 130
	expression/L13 = expression . "(" ")", FOLLOW [239] -> SHIFT '(' GOTO 130
	expression/L7 = expression . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 132
	expression/L7 = expression . "^" expression, FOLLOW [239] -> SHIFT '^' GOTO 133
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 134
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 134
	expression/L3 = expression . "=" expression, FOLLOW [239] -> SHIFT '=' GOTO 135
	expression/L9 = expression . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 136
	expression/L9 = expression . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 137
	expression/L10 = expression . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 138
	expression/L10 = expression . "/" expression, FOLLOW [239] -> SHIFT '/' GOTO 139
	expression/L10 = expression . "%" expression, FOLLOW [239] -> SHIFT '%' GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [239] -> SHIFT "&&" GOTO 141
	expression/L4 = expression . "||" expression, FOLLOW [239] -> SHIFT "||" GOTO 142
	expression/L6 = expression . "|" expression, FOLLOW [239] -> SHIFT '|' GOTO 143
	expression/L11 = expression . "<<" expression, FOLLOW [239] -> SHIFT "<<" GOTO 144
	expression/L11 = expression . ">>" expression, FOLLOW [239] -> SHIFT ">>" GOTO 145
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [239] -> SHIFT '[' GOTO 146
	expression/L8 = expression . "==" expression, FOLLOW [239] -> SHIFT "==" GOTO 147
	expression/L8 = expression . "!=" expression, FOLLOW [239] -> SHIFT "!=" GOTO 148
	expression/L8 = expression . ">=" expression, FOLLOW [239] -> SHIFT ">=" GOTO 149
	expression/L8 = expression . "<=" expression, FOLLOW [239] -> SHIFT "<=" GOTO 150
	expression/L8 = expression . ">" expression, FOLLOW [239] -> SHIFT '>' GOTO 151
	expression/L8 = expression . "<" expression, FOLLOW [239] -> SHIFT '<' GOTO 152
	expression/L3 = expression . "+=" expression, FOLLOW [239] -> SHIFT "+=" GOTO 153
	expression/L3 = expression . "-=" expression, FOLLOW [239] -> SHIFT "-=" GOTO 154
	expression/L3 = expression . "*=" expression, FOLLOW [239] -> SHIFT "*=" GOTO 155
	expression/L3 = expression . "/=" expression, FOLLOW [239] -> SHIFT "/=" GOTO 156
	expression/L3 = expression . "^=" expression, FOLLOW [239] -> SHIFT "^=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "%=" expression, FOLLOW [239] -> SHIFT "%=" GOTO 159
	expression/L3 = expression . "&&=" expression, FOLLOW [239] -> SHIFT "&&=" GOTO 160
	expression/L3 = expression . "||=" expression, FOLLOW [239] -> SHIFT "||=" GOTO 161
	expression/L3 = expression . "|=" expression, FOLLOW [239] -> SHIFT "|=" GOTO 162
	expression/L3 = expression . "<<=" expression, FOLLOW [239] -> SHIFT "<<=" GOTO 163
	expression/L3 = expression . ">>=" expression, FOLLOW [239] -> SHIFT ">>=" GOTO 164
	expression/L12 = expression . "." IDENT, FOLLOW [239] -> SHIFT '.' GOTO 165
	expression/L9 = expression "-" expression . (121), FOLLOW [239] -> REDUCE expression #3 CALL operator "-"
[245]
	iexpression = expression . indirection IDENT, FOLLOW [239] -> GOTO 129
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [239] -> SHIFT '(' GOTO 130
	expression/L13 = expression . "(" ")", FOLLOW [239] -> SHIFT '(' GOTO 130
	expression/L7 = expression . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 132
	expression/L7 = expression . "^" expression, FOLLOW [239] -> SHIFT '^' GOTO 133
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 134
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 134
	expression/L3 = expression . "=" expression, FOLLOW [239] -> SHIFT '=' GOTO 135
	expression/L9 = expression . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 136
	expression/L9 = expression . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 137
	expression/L10 = expression . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 138
	expression/L10 = expression . "/" expression, FOLLOW [239] -> SHIFT '/' GOTO 139
	expression/L10 = expression . "%" expression, FOLLOW [239] -> SHIFT '%' GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [239] -> SHIFT "&&" GOTO 141
	expression/L4 = expression . "||" expression, FOLLOW [239] -> SHIFT "||" GOTO 142
	expression/L6 = expression . "|" expression, FOLLOW [239] -> SHIFT '|' GOTO 143
	expression/L11 = expression . "<<" expression, FOLLOW [239] -> SHIFT "<<" GOTO 144
	expression/L11 = expression . ">>" expression, FOLLOW [239] -> SHIFT ">>" GOTO 145
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [239] -> SHIFT '[' GOTO 146
	expression/L8 = expression . "==" expression, FOLLOW [239] -> SHIFT "==" GOTO 147
	expression/L8 = expression . "!=" expression, FOLLOW [239] -> SHIFT "!=" GOTO 148
	expression/L8 = expression . ">=" expression, FOLLOW [239] -> SHIFT ">=" GOTO 149
	expression/L8 = expression . "<=" expression, FOLLOW [239] -> SHIFT "<=" GOTO 150
	expression/L8 = expression . ">" expression, FOLLOW [239] -> SHIFT '>' GOTO 151
	expression/L8 = expression . "<" expression, FOLLOW [239] -> SHIFT '<' GOTO 152
	expression/L3 = expression . "+=" expression, FOLLOW [239] -> SHIFT "+=" GOTO 153
	expression/L3 = expression . "-=" expression, FOLLOW [239] -> SHIFT "-=" GOTO 154
	expression/L3 = expression . "*=" expression, FOLLOW [239] -> SHIFT "*=" GOTO 155
	expression/L3 = expression . "/=" expression, FOLLOW [239] -> SHIFT "/=" GOTO 156
	expression/L3 = expression . "^=" expression, FOLLOW [239] -> SHIFT "^=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "%=" expression, FOLLOW [239] -> SHIFT "%=" GOTO 159
	expression/L3 = expression . "&&=" expression, FOLLOW [239] -> SHIFT "&&=" GOTO 160
	expression/L3 = expression . "||=" expression, FOLLOW [239] -> SHIFT "||=" GOTO 161
	expression/L3 = expression . "|=" expression, FOLLOW [239] -> SHIFT "|=" GOTO 162
	expression/L3 = expression . "<<=" expression, FOLLOW [239] -> SHIFT "<<=" GOTO 163
	expression/L3 = expression . ">>=" expression, FOLLOW [239] -> SHIFT ">>=" GOTO 164
	expression/L12 = expression . "." IDENT, FOLLOW [239] -> SHIFT '.' GOTO 165
	expression/L10 = expression "*" expression . (124), FOLLOW [239] -> REDUCE expression #3 CALL operator "*"
[246]
	iexpression = expression . indirection IDENT, FOLLOW [239] -> GOTO 129
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [239] -> SHIFT '(' GOTO 130
	expression/L13 = expression . "(" ")", FOLLOW [239] -> SHIFT '(' GOTO 130
	expression/L7 = expression . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 132
	expression/L7 = expression . "^" expression, FOLLOW [239] -> SHIFT '^' GOTO 133
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 134
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 134
	expression/L3 = expression . "=" expression, FOLLOW [239] -> SHIFT '=' GOTO 135
	expression/L9 = expression . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 136
	expression/L9 = expression . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 137
	expression/L10 = expression . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 138
	expression/L10 = expression . "/" expression, FOLLOW [239] -> SHIFT '/' GOTO 139
	expression/L10 = expression . "%" expression, FOLLOW [239] -> SHIFT '%' GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [239] -> SHIFT "&&" GOTO 141
	expression/L4 = expression . "||" expression, FOLLOW [239] -> SHIFT "||" GOTO 142
	expression/L6 = expression . "|" expression, FOLLOW [239] -> SHIFT '|' GOTO 143
	expression/L11 = expression . "<<" expression, FOLLOW [239] -> SHIFT "<<" GOTO 144
	expression/L11 = expression . ">>" expression, FOLLOW [239] -> SHIFT ">>" GOTO 145
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [239] -> SHIFT '[' GOTO 146
	expression/L8 = expression . "==" expression, FOLLOW [239] -> SHIFT "==" GOTO 147
	expression/L8 = expression . "!=" expression, FOLLOW [239] -> SHIFT "!=" GOTO 148
	expression/L8 = expression . ">=" expression, FOLLOW [239] -> SHIFT ">=" GOTO 149
	expression/L8 = expression . "<=" expression, FOLLOW [239] -> SHIFT "<=" GOTO 150
	expression/L8 = expression . ">" expression, FOLLOW [239] -> SHIFT '>' GOTO 151
	expression/L8 = expression . "<" expression, FOLLOW [239] -> SHIFT '<' GOTO 152
	expression/L3 = expression . "+=" expression, FOLLOW [239] -> SHIFT "+=" GOTO 153
	expression/L3 = expression . "-=" expression, FOLLOW [239] -> SHIFT "-=" GOTO 154
	expression/L3 = expression . "*=" expression, FOLLOW [239] -> SHIFT "*=" GOTO 155
	expression/L3 = expression . "/=" expression, FOLLOW [239] -> SHIFT "/=" GOTO 156
	expression/L3 = expression . "^=" expression, FOLLOW [239] -> SHIFT "^=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "%=" expression, FOLLOW [239] -> SHIFT "%=" GOTO 159
	expression/L3 = expression . "&&=" expression, FOLLOW [239] -> SHIFT "&&=" GOTO 160
	expression/L3 = expression . "||=" expression, FOLLOW [239] -> SHIFT "||=" GOTO 161
	expression/L3 = expression . "|=" expression, FOLLOW [239] -> SHIFT "|=" GOTO 162
	expression/L3 = expression . "<<=" expression, FOLLOW [239] -> SHIFT "<<=" GOTO 163
	expression/L3 = expression . ">>=" expression, FOLLOW [239] -> SHIFT ">>=" GOTO 164
	expression/L12 = expression . "." IDENT, FOLLOW [239] -> SHIFT '.' GOTO 165
	expression/L10 = expression "/" expression . (125), FOLLOW [239] -> REDUCE expression #3 CALL operator "/"
[247]
	iexpression = expression . indirection IDENT, FOLLOW [239] -> GOTO 129
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [239] -> SHIFT '(' GOTO 130
	expression/L13 = expression . "(" ")", FOLLOW [239] -> SHIFT '(' GOTO 130
	expression/L7 = expression . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 132
	expression/L7 = expression . "^" expression, FOLLOW [239] -> SHIFT '^' GOTO 133
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 134
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 134
	expression/L3 = expression . "=" expression, FOLLOW [239] -> SHIFT '=' GOTO 135
	expression/L9 = expression . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 136
	expression/L9 = expression . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 137
	expression/L10 = expression . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 138
	expression/L10 = expression . "/" expression, FOLLOW [239] -> SHIFT '/' GOTO 139
	expression/L10 = expression . "%" expression, FOLLOW [239] -> SHIFT '%' GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [239] -> SHIFT "&&" GOTO 141
	expression/L4 = expression . "||" expression, FOLLOW [239] -> SHIFT "||" GOTO 142
	expression/L6 = expression . "|" expression, FOLLOW [239] -> SHIFT '|' GOTO 143
	expression/L11 = expression . "<<" expression, FOLLOW [239] -> SHIFT "<<" GOTO 144
	expression/L11 = expression . ">>" expression, FOLLOW [239] -> SHIFT ">>" GOTO 145
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [239] -> SHIFT '[' GOTO 146
	expression/L8 = expression . "==" expression, FOLLOW [239] -> SHIFT "==" GOTO 147
	expression/L8 = expression . "!=" expression, FOLLOW [239] -> SHIFT "!=" GOTO 148
	expression/L8 = expression . ">=" expression, FOLLOW [239] -> SHIFT ">=" GOTO 149
	expression/L8 = expression . "<=" expression, FOLLOW [239] -> SHIFT "<=" GOTO 150
	expression/L8 = expression . ">" expression, FOLLOW [239] -> SHIFT '>' GOTO 151
	expression/L8 = expression . "<" expression, FOLLOW [239] -> SHIFT '<' GOTO 152
	expression/L3 = expression . "+=" expression, FOLLOW [239] -> SHIFT "+=" GOTO 153
	expression/L3 = expression . "-=" expression, FOLLOW [239] -> SHIFT "-=" GOTO 154
	expression/L3 = expression . "*=" expression, FOLLOW [239] -> SHIFT "*=" GOTO 155
	expression/L3 = expression . "/=" expression, FOLLOW [239] -> SHIFT "/=" GOTO 156
	expression/L3 = expression . "^=" expression, FOLLOW [239] -> SHIFT "^=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "%=" expression, FOLLOW [239] -> SHIFT "%=" GOTO 159
	expression/L3 = expression . "&&=" expression, FOLLOW [239] -> SHIFT "&&=" GOTO 160
	expression/L3 = expression . "||=" expression, FOLLOW [239] -> SHIFT "||=" GOTO 161
	expression/L3 = expression . "|=" expression, FOLLOW [239] -> SHIFT "|=" GOTO 162
	expression/L3 = expression . "<<=" expression, FOLLOW [239] -> SHIFT "<<=" GOTO 163
	expression/L3 = expression . ">>=" expression, FOLLOW [239] -> SHIFT ">>=" GOTO 164
	expression/L12 = expression . "." IDENT, FOLLOW [239] -> SHIFT '.' GOTO 165
	expression/L10 = expression "%" expression . (126), FOLLOW [239] -> REDUCE expression #3 CALL operator "%"
[248]
	iexpression = expression . indirection IDENT, FOLLOW [239] -> GOTO 129
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [239] -> SHIFT '(' GOTO 130
	expression/L13 = expression . "(" ")", FOLLOW [239] -> SHIFT '(' GOTO 130
	expression/L7 = expression . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 132
	expression/L7 = expression . "^" expression, FOLLOW [239] -> SHIFT '^' GOTO 133
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 134
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 134
	expression/L3 = expression . "=" expression, FOLLOW [239] -> SHIFT '=' GOTO 135
	expression/L9 = expression . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 136
	expression/L9 = expression . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 137
	expression/L10 = expression . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 138
	expression/L10 = expression . "/" expression, FOLLOW [239] -> SHIFT '/' GOTO 139
	expression/L10 = expression . "%" expression, FOLLOW [239] -> SHIFT '%' GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [239] -> SHIFT "&&" GOTO 141
	expression/L4 = expression . "||" expression, FOLLOW [239] -> SHIFT "||" GOTO 142
	expression/L6 = expression . "|" expression, FOLLOW [239] -> SHIFT '|' GOTO 143
	expression/L11 = expression . "<<" expression, FOLLOW [239] -> SHIFT "<<" GOTO 144
	expression/L11 = expression . ">>" expression, FOLLOW [239] -> SHIFT ">>" GOTO 145
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [239] -> SHIFT '[' GOTO 146
	expression/L8 = expression . "==" expression, FOLLOW [239] -> SHIFT "==" GOTO 147
	expression/L8 = expression . "!=" expression, FOLLOW [239] -> SHIFT "!=" GOTO 148
	expression/L8 = expression . ">=" expression, FOLLOW [239] -> SHIFT ">=" GOTO 149
	expression/L8 = expression . "<=" expression, FOLLOW [239] -> SHIFT "<=" GOTO 150
	expression/L8 = expression . ">" expression, FOLLOW [239] -> SHIFT '>' GOTO 151
	expression/L8 = expression . "<" expression, FOLLOW [239] -> SHIFT '<' GOTO 152
	expression/L3 = expression . "+=" expression, FOLLOW [239] -> SHIFT "+=" GOTO 153
	expression/L3 = expression . "-=" expression, FOLLOW [239] -> SHIFT "-=" GOTO 154
	expression/L3 = expression . "*=" expression, FOLLOW [239] -> SHIFT "*=" GOTO 155
	expression/L3 = expression . "/=" expression, FOLLOW [239] -> SHIFT "/=" GOTO 156
	expression/L3 = expression . "^=" expression, FOLLOW [239] -> SHIFT "^=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "%=" expression, FOLLOW [239] -> SHIFT "%=" GOTO 159
	expression/L3 = expression . "&&=" expression, FOLLOW [239] -> SHIFT "&&=" GOTO 160
	expression/L3 = expression . "||=" expression, FOLLOW [239] -> SHIFT "||=" GOTO 161
	expression/L3 = expression . "|=" expression, FOLLOW [239] -> SHIFT "|=" GOTO 162
	expression/L3 = expression . "<<=" expression, FOLLOW [239] -> SHIFT "<<=" GOTO 163
	expression/L3 = expression . ">>=" expression, FOLLOW [239] -> SHIFT ">>=" GOTO 164
	expression/L12 = expression . "." IDENT, FOLLOW [239] -> SHIFT '.' GOTO 165
	expression/L5 = expression "&&" expression . (110), FOLLOW [239] -> REDUCE expression #3 CALL operator "&&"
[249]
	iexpression = expression . indirection IDENT, FOLLOW [239] -> GOTO 129
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [239] -> SHIFT '(' GOTO 130
	expression/L13 = expression . "(" ")", FOLLOW [239] -> SHIFT '(' GOTO 130
	expression/L7 = expression . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 132
	expression/L7 = expression . "^" expression, FOLLOW [239] -> SHIFT '^' GOTO 133
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 134
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 134
	expression/L3 = expression . "=" expression, FOLLOW [239] -> SHIFT '=' GOTO 135
	expression/L9 = expression . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 136
	expression/L9 = expression . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 137
	expression/L10 = expression . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 138
	expression/L10 = expression . "/" expression, FOLLOW [239] -> SHIFT '/' GOTO 139
	expression/L10 = expression . "%" expression, FOLLOW [239] -> SHIFT '%' GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [239] -> SHIFT "&&" GOTO 141
	expression/L4 = expression . "||" expression, FOLLOW [239] -> SHIFT "||" GOTO 142
	expression/L6 = expression . "|" expression, FOLLOW [239] -> SHIFT '|' GOTO 143
	expression/L11 = expression . "<<" expression, FOLLOW [239] -> SHIFT "<<" GOTO 144
	expression/L11 = expression . ">>" expression, FOLLOW [239] -> SHIFT ">>" GOTO 145
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [239] -> SHIFT '[' GOTO 146
	expression/L8 = expression . "==" expression, FOLLOW [239] -> SHIFT "==" GOTO 147
	expression/L8 = expression . "!=" expression, FOLLOW [239] -> SHIFT "!=" GOTO 148
	expression/L8 = expression . ">=" expression, FOLLOW [239] -> SHIFT ">=" GOTO 149
	expression/L8 = expression . "<=" expression, FOLLOW [239] -> SHIFT "<=" GOTO 150
	expression/L8 = expression . ">" expression, FOLLOW [239] -> SHIFT '>' GOTO 151
	expression/L8 = expression . "<" expression, FOLLOW [239] -> SHIFT '<' GOTO 152
	expression/L3 = expression . "+=" expression, FOLLOW [239] -> SHIFT "+=" GOTO 153
	expression/L3 = expression . "-=" expression, FOLLOW [239] -> SHIFT "-=" GOTO 154
	expression/L3 = expression . "*=" expression, FOLLOW [239] -> SHIFT "*=" GOTO 155
	expression/L3 = expression . "/=" expression, FOLLOW [239] -> SHIFT "/=" GOTO 156
	expression/L3 = expression . "^=" expression, FOLLOW [239] -> SHIFT "^=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "%=" expression, FOLLOW [239] -> SHIFT "%=" GOTO 159
	expression/L3 = expression . "&&=" expression, FOLLOW [239] -> SHIFT "&&=" GOTO 160
	expression/L3 = expression . "||=" expression, FOLLOW [239] -> SHIFT "||=" GOTO 161
	expression/L3 = expression . "|=" expression, FOLLOW [239] -> SHIFT "|=" GOTO 162
	expression/L3 = expression . "<<=" expression, FOLLOW [239] -> SHIFT "<<=" GOTO 163
	expression/L3 = expression . ">>=" expression, FOLLOW [239] -> SHIFT ">>=" GOTO 164
	expression/L12 = expression . "." IDENT, FOLLOW [239] -> SHIFT '.' GOTO 165
	expression/L4 = expression "||" expression . (109), FOLLOW [239] -> REDUCE expression #3 CALL operator "||"
[250]
	iexpression = expression . indirection IDENT, FOLLOW [239] -> GOTO 129
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [239] -> SHIFT '(' GOTO 130
	expression/L13 = expression . "(" ")", FOLLOW [239] -> SHIFT '(' GOTO 130
	expression/L7 = expression . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 132
	expression/L7 = expression . "^" expression, FOLLOW [239] -> SHIFT '^' GOTO 133
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 134
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 134
	expression/L3 = expression . "=" expression, FOLLOW [239] -> SHIFT '=' GOTO 135
	expression/L9 = expression . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 136
	expression/L9 = expression . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 137
	expression/L10 = expression . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 138
	expression/L10 = expression . "/" expression, FOLLOW [239] -> SHIFT '/' GOTO 139
	expression/L10 = expression . "%" expression, FOLLOW [239] -> SHIFT '%' GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [239] -> SHIFT "&&" GOTO 141
	expression/L4 = expression . "||" expression, FOLLOW [239] -> SHIFT "||" GOTO 142
	expression/L6 = expression . "|" expression, FOLLOW [239] -> SHIFT '|' GOTO 143
	expression/L11 = expression . "<<" expression, FOLLOW [239] -> SHIFT "<<" GOTO 144
	expression/L11 = expression . ">>" expression, FOLLOW [239] -> SHIFT ">>" GOTO 145
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [239] -> SHIFT '[' GOTO 146
	expression/L8 = expression . "==" expression, FOLLOW [239] -> SHIFT "==" GOTO 147
	expression/L8 = expression . "!=" expression, FOLLOW [239] -> SHIFT "!=" GOTO 148
	expression/L8 = expression . ">=" expression, FOLLOW [239] -> SHIFT ">=" GOTO 149
	expression/L8 = expression . "<=" expression, FOLLOW [239] -> SHIFT "<=" GOTO 150
	expression/L8 = expression . ">" expression, FOLLOW [239] -> SHIFT '>' GOTO 151
	expression/L8 = expression . "<" expression, FOLLOW [239] -> SHIFT '<' GOTO 152
	expression/L3 = expression . "+=" expression, FOLLOW [239] -> SHIFT "+=" GOTO 153
	expression/L3 = expression . "-=" expression, FOLLOW [239] -> SHIFT "-=" GOTO 154
	expression/L3 = expression . "*=" expression, FOLLOW [239] -> SHIFT "*=" GOTO 155
	expression/L3 = expression . "/=" expression, FOLLOW [239] -> SHIFT "/=" GOTO 156
	expression/L3 = expression . "^=" expression, FOLLOW [239] -> SHIFT "^=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "%=" expression, FOLLOW [239] -> SHIFT "%=" GOTO 159
	expression/L3 = expression . "&&=" expression, FOLLOW [239] -> SHIFT "&&=" GOTO 160
	expression/L3 = expression . "||=" expression, FOLLOW [239] -> SHIFT "||=" GOTO 161
	expression/L3 = expression . "|=" expression, FOLLOW [239] -> SHIFT "|=" GOTO 162
	expression/L3 = expression . "<<=" expression, FOLLOW [239] -> SHIFT "<<=" GOTO 163
	expression/L3 = expression . ">>=" expression, FOLLOW [239] -> SHIFT ">>=" GOTO 164
	expression/L12 = expression . "." IDENT, FOLLOW [239] -> SHIFT '.' GOTO 165
	expression/L6 = expression "|" expression . (111), FOLLOW [239] -> REDUCE expression #3 CALL operator "|"
[251]
	iexpression = expression . indirection IDENT, FOLLOW [239] -> GOTO 129
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [239] -> SHIFT '(' GOTO 130
	expression/L13 = expression . "(" ")", FOLLOW [239] -> SHIFT '(' GOTO 130
	expression/L7 = expression . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 132
	expression/L7 = expression . "^" expression, FOLLOW [239] -> SHIFT '^' GOTO 133
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 134
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 134
	expression/L3 = expression . "=" expression, FOLLOW [239] -> SHIFT '=' GOTO 135
	expression/L9 = expression . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 136
	expression/L9 = expression . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 137
	expression/L10 = expression . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 138
	expression/L10 = expression . "/" expression, FOLLOW [239] -> SHIFT '/' GOTO 139
	expression/L10 = expression . "%" expression, FOLLOW [239] -> SHIFT '%' GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [239] -> SHIFT "&&" GOTO 141
	expression/L4 = expression . "||" expression, FOLLOW [239] -> SHIFT "||" GOTO 142
	expression/L6 = expression . "|" expression, FOLLOW [239] -> SHIFT '|' GOTO 143
	expression/L11 = expression . "<<" expression, FOLLOW [239] -> SHIFT "<<" GOTO 144
	expression/L11 = expression . ">>" expression, FOLLOW [239] -> SHIFT ">>" GOTO 145
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [239] -> SHIFT '[' GOTO 146
	expression/L8 = expression . "==" expression, FOLLOW [239] -> SHIFT "==" GOTO 147
	expression/L8 = expression . "!=" expression, FOLLOW [239] -> SHIFT "!=" GOTO 148
	expression/L8 = expression . ">=" expression, FOLLOW [239] -> SHIFT ">=" GOTO 149
	expression/L8 = expression . "<=" expression, FOLLOW [239] -> SHIFT "<=" GOTO 150
	expression/L8 = expression . ">" expression, FOLLOW [239] -> SHIFT '>' GOTO 151
	expression/L8 = expression . "<" expression, FOLLOW [239] -> SHIFT '<' GOTO 152
	expression/L3 = expression . "+=" expression, FOLLOW [239] -> SHIFT "+=" GOTO 153
	expression/L3 = expression . "-=" expression, FOLLOW [239] -> SHIFT "-=" GOTO 154
	expression/L3 = expression . "*=" expression, FOLLOW [239] -> SHIFT "*=" GOTO 155
	expression/L3 = expression . "/=" expression, FOLLOW [239] -> SHIFT "/=" GOTO 156
	expression/L3 = expression . "^=" expression, FOLLOW [239] -> SHIFT "^=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "%=" expression, FOLLOW [239] -> SHIFT "%=" GOTO 159
	expression/L3 = expression . "&&=" expression, FOLLOW [239] -> SHIFT "&&=" GOTO 160
	expression/L3 = expression . "||=" expression, FOLLOW [239] -> SHIFT "||=" GOTO 161
	expression/L3 = expression . "|=" expression, FOLLOW [239] -> SHIFT "|=" GOTO 162
	expression/L3 = expression . "<<=" expression, FOLLOW [239] -> SHIFT "<<=" GOTO 163
	expression/L3 = expression . ">>=" expression, FOLLOW [239] -> SHIFT ">>=" GOTO 164
	expression/L12 = expression . "." IDENT, FOLLOW [239] -> SHIFT '.' GOTO 165
	expression/L11 = expression "<<" expression . (127), FOLLOW [239] -> REDUCE expression #3 CALL operator "<<"
[252]
	iexpression = expression . indirection IDENT, FOLLOW [239] -> GOTO 129
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [239] -> SHIFT '(' GOTO 130
	expression/L13 = expression . "(" ")", FOLLOW [239] -> SHIFT '(' GOTO 130
	expression/L7 = expression . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 132
	expression/L7 = expression . "^" expression, FOLLOW [239] -> SHIFT '^' GOTO 133
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 134
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 134
	expression/L3 = expression . "=" expression, FOLLOW [239] -> SHIFT '=' GOTO 135
	expression/L9 = expression . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 136
	expression/L9 = expression . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 137
	expression/L10 = expression . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 138
	expression/L10 = expression . "/" expression, FOLLOW [239] -> SHIFT '/' GOTO 139
	expression/L10 = expression . "%" expression, FOLLOW [239] -> SHIFT '%' GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [239] -> SHIFT "&&" GOTO 141
	expression/L4 = expression . "||" expression, FOLLOW [239] -> SHIFT "||" GOTO 142
	expression/L6 = expression . "|" expression, FOLLOW [239] -> SHIFT '|' GOTO 143
	expression/L11 = expression . "<<" expression, FOLLOW [239] -> SHIFT "<<" GOTO 144
	expression/L11 = expression . ">>" expression, FOLLOW [239] -> SHIFT ">>" GOTO 145
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [239] -> SHIFT '[' GOTO 146
	expression/L8 = expression . "==" expression, FOLLOW [239] -> SHIFT "==" GOTO 147
	expression/L8 = expression . "!=" expression, FOLLOW [239] -> SHIFT "!=" GOTO 148
	expression/L8 = expression . ">=" expression, FOLLOW [239] -> SHIFT ">=" GOTO 149
	expression/L8 = expression . "<=" expression, FOLLOW [239] -> SHIFT "<=" GOTO 150
	expression/L8 = expression . ">" expression, FOLLOW [239] -> SHIFT '>' GOTO 151
	expression/L8 = expression . "<" expression, FOLLOW [239] -> SHIFT '<' GOTO 152
	expression/L3 = expression . "+=" expression, FOLLOW [239] -> SHIFT "+=" GOTO 153
	expression/L3 = expression . "-=" expression, FOLLOW [239] -> SHIFT "-=" GOTO 154
	expression/L3 = expression . "*=" expression, FOLLOW [239] -> SHIFT "*=" GOTO 155
	expression/L3 = expression . "/=" expression, FOLLOW [239] -> SHIFT "/=" GOTO 156
	expression/L3 = expression . "^=" expression, FOLLOW [239] -> SHIFT "^=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "%=" expression, FOLLOW [239] -> SHIFT "%=" GOTO 159
	expression/L3 = expression . "&&=" expression, FOLLOW [239] -> SHIFT "&&=" GOTO 160
	expression/L3 = expression . "||=" expression, FOLLOW [239] -> SHIFT "||=" GOTO 161
	expression/L3 = expression . "|=" expression, FOLLOW [239] -> SHIFT "|=" GOTO 162
	expression/L3 = expression . "<<=" expression, FOLLOW [239] -> SHIFT "<<=" GOTO 163
	expression/L3 = expression . ">>=" expression, FOLLOW [239] -> SHIFT ">>=" GOTO 164
	expression/L12 = expression . "." IDENT, FOLLOW [239] -> SHIFT '.' GOTO 165
	expression/L11 = expression ">>" expression . (128), FOLLOW [239] -> REDUCE expression #3 CALL operator ">>"
[253]
	expression/L13 = expression "[" expressionlist . "]", FOLLOW [239] -> SHIFT ']' GOTO 306
[254]
	iexpression = expression . indirection IDENT, FOLLOW [239] -> GOTO 129
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [239] -> SHIFT '(' GOTO 130
	expression/L13 = expression . "(" ")", FOLLOW [239] -> SHIFT '(' GOTO 130
	expression/L7 = expression . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 132
	expression/L7 = expression . "^" expression, FOLLOW [239] -> SHIFT '^' GOTO 133
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 134
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 134
	expression/L3 = expression . "=" expression, FOLLOW [239] -> SHIFT '=' GOTO 135
	expression/L9 = expression . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 136
	expression/L9 = expression . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 137
	expression/L10 = expression . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 138
	expression/L10 = expression . "/" expression, FOLLOW [239] -> SHIFT '/' GOTO 139
	expression/L10 = expression . "%" expression, FOLLOW [239] -> SHIFT '%' GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [239] -> SHIFT "&&" GOTO 141
	expression/L4 = expression . "||" expression, FOLLOW [239] -> SHIFT "||" GOTO 142
	expression/L6 = expression . "|" expression, FOLLOW [239] -> SHIFT '|' GOTO 143
	expression/L11 = expression . "<<" expression, FOLLOW [239] -> SHIFT "<<" GOTO 144
	expression/L11 = expression . ">>" expression, FOLLOW [239] -> SHIFT ">>" GOTO 145
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [239] -> SHIFT '[' GOTO 146
	expression/L8 = expression . "==" expression, FOLLOW [239] -> SHIFT "==" GOTO 147
	expression/L8 = expression . "!=" expression, FOLLOW [239] -> SHIFT "!=" GOTO 148
	expression/L8 = expression . ">=" expression, FOLLOW [239] -> SHIFT ">=" GOTO 149
	expression/L8 = expression . "<=" expression, FOLLOW [239] -> SHIFT "<=" GOTO 150
	expression/L8 = expression . ">" expression, FOLLOW [239] -> SHIFT '>' GOTO 151
	expression/L8 = expression . "<" expression, FOLLOW [239] -> SHIFT '<' GOTO 152
	expression/L3 = expression . "+=" expression, FOLLOW [239] -> SHIFT "+=" GOTO 153
	expression/L3 = expression . "-=" expression, FOLLOW [239] -> SHIFT "-=" GOTO 154
	expression/L3 = expression . "*=" expression, FOLLOW [239] -> SHIFT "*=" GOTO 155
	expression/L3 = expression . "/=" expression, FOLLOW [239] -> SHIFT "/=" GOTO 156
	expression/L3 = expression . "^=" expression, FOLLOW [239] -> SHIFT "^=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "%=" expression, FOLLOW [239] -> SHIFT "%=" GOTO 159
	expression/L3 = expression . "&&=" expression, FOLLOW [239] -> SHIFT "&&=" GOTO 160
	expression/L3 = expression . "||=" expression, FOLLOW [239] -> SHIFT "||=" GOTO 161
	expression/L3 = expression . "|=" expression, FOLLOW [239] -> SHIFT "|=" GOTO 162
	expression/L3 = expression . "<<=" expression, FOLLOW [239] -> SHIFT "<<=" GOTO 163
	expression/L3 = expression . ">>=" expression, FOLLOW [239] -> SHIFT ">>=" GOTO 164
	expression/L12 = expression . "." IDENT, FOLLOW [239] -> SHIFT '.' GOTO 165
	expression/L8 = expression "==" expression . (114), FOLLOW [239] -> REDUCE expression #3 CALL operator "=="
[255]
	iexpression = expression . indirection IDENT, FOLLOW [239] -> GOTO 129
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [239] -> SHIFT '(' GOTO 130
	expression/L13 = expression . "(" ")", FOLLOW [239] -> SHIFT '(' GOTO 130
	expression/L7 = expression . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 132
	expression/L7 = expression . "^" expression, FOLLOW [239] -> SHIFT '^' GOTO 133
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 134
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 134
	expression/L3 = expression . "=" expression, FOLLOW [239] -> SHIFT '=' GOTO 135
	expression/L9 = expression . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 136
	expression/L9 = expression . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 137
	expression/L10 = expression . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 138
	expression/L10 = expression . "/" expression, FOLLOW [239] -> SHIFT '/' GOTO 139
	expression/L10 = expression . "%" expression, FOLLOW [239] -> SHIFT '%' GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [239] -> SHIFT "&&" GOTO 141
	expression/L4 = expression . "||" expression, FOLLOW [239] -> SHIFT "||" GOTO 142
	expression/L6 = expression . "|" expression, FOLLOW [239] -> SHIFT '|' GOTO 143
	expression/L11 = expression . "<<" expression, FOLLOW [239] -> SHIFT "<<" GOTO 144
	expression/L11 = expression . ">>" expression, FOLLOW [239] -> SHIFT ">>" GOTO 145
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [239] -> SHIFT '[' GOTO 146
	expression/L8 = expression . "==" expression, FOLLOW [239] -> SHIFT "==" GOTO 147
	expression/L8 = expression . "!=" expression, FOLLOW [239] -> SHIFT "!=" GOTO 148
	expression/L8 = expression . ">=" expression, FOLLOW [239] -> SHIFT ">=" GOTO 149
	expression/L8 = expression . "<=" expression, FOLLOW [239] -> SHIFT "<=" GOTO 150
	expression/L8 = expression . ">" expression, FOLLOW [239] -> SHIFT '>' GOTO 151
	expression/L8 = expression . "<" expression, FOLLOW [239] -> SHIFT '<' GOTO 152
	expression/L3 = expression . "+=" expression, FOLLOW [239] -> SHIFT "+=" GOTO 153
	expression/L3 = expression . "-=" expression, FOLLOW [239] -> SHIFT "-=" GOTO 154
	expression/L3 = expression . "*=" expression, FOLLOW [239] -> SHIFT "*=" GOTO 155
	expression/L3 = expression . "/=" expression, FOLLOW [239] -> SHIFT "/=" GOTO 156
	expression/L3 = expression . "^=" expression, FOLLOW [239] -> SHIFT "^=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "%=" expression, FOLLOW [239] -> SHIFT "%=" GOTO 159
	expression/L3 = expression . "&&=" expression, FOLLOW [239] -> SHIFT "&&=" GOTO 160
	expression/L3 = expression . "||=" expression, FOLLOW [239] -> SHIFT "||=" GOTO 161
	expression/L3 = expression . "|=" expression, FOLLOW [239] -> SHIFT "|=" GOTO 162
	expression/L3 = expression . "<<=" expression, FOLLOW [239] -> SHIFT "<<=" GOTO 163
	expression/L3 = expression . ">>=" expression, FOLLOW [239] -> SHIFT ">>=" GOTO 164
	expression/L12 = expression . "." IDENT, FOLLOW [239] -> SHIFT '.' GOTO 165
	expression/L8 = expression "!=" expression . (115), FOLLOW [239] -> REDUCE expression #3 CALL operator "!="
[256]
	iexpression = expression . indirection IDENT, FOLLOW [239] -> GOTO 129
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [239] -> SHIFT '(' GOTO 130
	expression/L13 = expression . "(" ")", FOLLOW [239] -> SHIFT '(' GOTO 130
	expression/L7 = expression . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 132
	expression/L7 = expression . "^" expression, FOLLOW [239] -> SHIFT '^' GOTO 133
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 134
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 134
	expression/L3 = expression . "=" expression, FOLLOW [239] -> SHIFT '=' GOTO 135
	expression/L9 = expression . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 136
	expression/L9 = expression . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 137
	expression/L10 = expression . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 138
	expression/L10 = expression . "/" expression, FOLLOW [239] -> SHIFT '/' GOTO 139
	expression/L10 = expression . "%" expression, FOLLOW [239] -> SHIFT '%' GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [239] -> SHIFT "&&" GOTO 141
	expression/L4 = expression . "||" expression, FOLLOW [239] -> SHIFT "||" GOTO 142
	expression/L6 = expression . "|" expression, FOLLOW [239] -> SHIFT '|' GOTO 143
	expression/L11 = expression . "<<" expression, FOLLOW [239] -> SHIFT "<<" GOTO 144
	expression/L11 = expression . ">>" expression, FOLLOW [239] -> SHIFT ">>" GOTO 145
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [239] -> SHIFT '[' GOTO 146
	expression/L8 = expression . "==" expression, FOLLOW [239] -> SHIFT "==" GOTO 147
	expression/L8 = expression . "!=" expression, FOLLOW [239] -> SHIFT "!=" GOTO 148
	expression/L8 = expression . ">=" expression, FOLLOW [239] -> SHIFT ">=" GOTO 149
	expression/L8 = expression . "<=" expression, FOLLOW [239] -> SHIFT "<=" GOTO 150
	expression/L8 = expression . ">" expression, FOLLOW [239] -> SHIFT '>' GOTO 151
	expression/L8 = expression . "<" expression, FOLLOW [239] -> SHIFT '<' GOTO 152
	expression/L3 = expression . "+=" expression, FOLLOW [239] -> SHIFT "+=" GOTO 153
	expression/L3 = expression . "-=" expression, FOLLOW [239] -> SHIFT "-=" GOTO 154
	expression/L3 = expression . "*=" expression, FOLLOW [239] -> SHIFT "*=" GOTO 155
	expression/L3 = expression . "/=" expression, FOLLOW [239] -> SHIFT "/=" GOTO 156
	expression/L3 = expression . "^=" expression, FOLLOW [239] -> SHIFT "^=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "%=" expression, FOLLOW [239] -> SHIFT "%=" GOTO 159
	expression/L3 = expression . "&&=" expression, FOLLOW [239] -> SHIFT "&&=" GOTO 160
	expression/L3 = expression . "||=" expression, FOLLOW [239] -> SHIFT "||=" GOTO 161
	expression/L3 = expression . "|=" expression, FOLLOW [239] -> SHIFT "|=" GOTO 162
	expression/L3 = expression . "<<=" expression, FOLLOW [239] -> SHIFT "<<=" GOTO 163
	expression/L3 = expression . ">>=" expression, FOLLOW [239] -> SHIFT ">>=" GOTO 164
	expression/L12 = expression . "." IDENT, FOLLOW [239] -> SHIFT '.' GOTO 165
	expression/L8 = expression ">=" expression . (118), FOLLOW [239] -> REDUCE expression #3 CALL operator ">="
[257]
	iexpression = expression . indirection IDENT, FOLLOW [239] -> GOTO 129
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [239] -> SHIFT '(' GOTO 130
	expression/L13 = expression . "(" ")", FOLLOW [239] -> SHIFT '(' GOTO 130
	expression/L7 = expression . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 132
	expression/L7 = expression . "^" expression, FOLLOW [239] -> SHIFT '^' GOTO 133
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 134
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 134
	expression/L3 = expression . "=" expression, FOLLOW [239] -> SHIFT '=' GOTO 135
	expression/L9 = expression . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 136
	expression/L9 = expression . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 137
	expression/L10 = expression . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 138
	expression/L10 = expression . "/" expression, FOLLOW [239] -> SHIFT '/' GOTO 139
	expression/L10 = expression . "%" expression, FOLLOW [239] -> SHIFT '%' GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [239] -> SHIFT "&&" GOTO 141
	expression/L4 = expression . "||" expression, FOLLOW [239] -> SHIFT "||" GOTO 142
	expression/L6 = expression . "|" expression, FOLLOW [239] -> SHIFT '|' GOTO 143
	expression/L11 = expression . "<<" expression, FOLLOW [239] -> SHIFT "<<" GOTO 144
	expression/L11 = expression . ">>" expression, FOLLOW [239] -> SHIFT ">>" GOTO 145
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [239] -> SHIFT '[' GOTO 146
	expression/L8 = expression . "==" expression, FOLLOW [239] -> SHIFT "==" GOTO 147
	expression/L8 = expression . "!=" expression, FOLLOW [239] -> SHIFT "!=" GOTO 148
	expression/L8 = expression . ">=" expression, FOLLOW [239] -> SHIFT ">=" GOTO 149
	expression/L8 = expression . "<=" expression, FOLLOW [239] -> SHIFT "<=" GOTO 150
	expression/L8 = expression . ">" expression, FOLLOW [239] -> SHIFT '>' GOTO 151
	expression/L8 = expression . "<" expression, FOLLOW [239] -> SHIFT '<' GOTO 152
	expression/L3 = expression . "+=" expression, FOLLOW [239] -> SHIFT "+=" GOTO 153
	expression/L3 = expression . "-=" expression, FOLLOW [239] -> SHIFT "-=" GOTO 154
	expression/L3 = expression . "*=" expression, FOLLOW [239] -> SHIFT "*=" GOTO 155
	expression/L3 = expression . "/=" expression, FOLLOW [239] -> SHIFT "/=" GOTO 156
	expression/L3 = expression . "^=" expression, FOLLOW [239] -> SHIFT "^=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "%=" expression, FOLLOW [239] -> SHIFT "%=" GOTO 159
	expression/L3 = expression . "&&=" expression, FOLLOW [239] -> SHIFT "&&=" GOTO 160
	expression/L3 = expression . "||=" expression, FOLLOW [239] -> SHIFT "||=" GOTO 161
	expression/L3 = expression . "|=" expression, FOLLOW [239] -> SHIFT "|=" GOTO 162
	expression/L3 = expression . "<<=" expression, FOLLOW [239] -> SHIFT "<<=" GOTO 163
	expression/L3 = expression . ">>=" expression, FOLLOW [239] -> SHIFT ">>=" GOTO 164
	expression/L12 = expression . "." IDENT, FOLLOW [239] -> SHIFT '.' GOTO 165
	expression/L8 = expression "<=" expression . (116), FOLLOW [239] -> REDUCE expression #3 CALL operator "<="
[258]
	iexpression = expression . indirection IDENT, FOLLOW [239] -> GOTO 129
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [239] -> SHIFT '(' GOTO 130
	expression/L13 = expression . "(" ")", FOLLOW [239] -> SHIFT '(' GOTO 130
	expression/L7 = expression . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 132
	expression/L7 = expression . "^" expression, FOLLOW [239] -> SHIFT '^' GOTO 133
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 134
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 134
	expression/L3 = expression . "=" expression, FOLLOW [239] -> SHIFT '=' GOTO 135
	expression/L9 = expression . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 136
	expression/L9 = expression . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 137
	expression/L10 = expression . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 138
	expression/L10 = expression . "/" expression, FOLLOW [239] -> SHIFT '/' GOTO 139
	expression/L10 = expression . "%" expression, FOLLOW [239] -> SHIFT '%' GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [239] -> SHIFT "&&" GOTO 141
	expression/L4 = expression . "||" expression, FOLLOW [239] -> SHIFT "||" GOTO 142
	expression/L6 = expression . "|" expression, FOLLOW [239] -> SHIFT '|' GOTO 143
	expression/L11 = expression . "<<" expression, FOLLOW [239] -> SHIFT "<<" GOTO 144
	expression/L11 = expression . ">>" expression, FOLLOW [239] -> SHIFT ">>" GOTO 145
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [239] -> SHIFT '[' GOTO 146
	expression/L8 = expression . "==" expression, FOLLOW [239] -> SHIFT "==" GOTO 147
	expression/L8 = expression . "!=" expression, FOLLOW [239] -> SHIFT "!=" GOTO 148
	expression/L8 = expression . ">=" expression, FOLLOW [239] -> SHIFT ">=" GOTO 149
	expression/L8 = expression . "<=" expression, FOLLOW [239] -> SHIFT "<=" GOTO 150
	expression/L8 = expression . ">" expression, FOLLOW [239] -> SHIFT '>' GOTO 151
	expression/L8 = expression . "<" expression, FOLLOW [239] -> SHIFT '<' GOTO 152
	expression/L3 = expression . "+=" expression, FOLLOW [239] -> SHIFT "+=" GOTO 153
	expression/L3 = expression . "-=" expression, FOLLOW [239] -> SHIFT "-=" GOTO 154
	expression/L3 = expression . "*=" expression, FOLLOW [239] -> SHIFT "*=" GOTO 155
	expression/L3 = expression . "/=" expression, FOLLOW [239] -> SHIFT "/=" GOTO 156
	expression/L3 = expression . "^=" expression, FOLLOW [239] -> SHIFT "^=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "%=" expression, FOLLOW [239] -> SHIFT "%=" GOTO 159
	expression/L3 = expression . "&&=" expression, FOLLOW [239] -> SHIFT "&&=" GOTO 160
	expression/L3 = expression . "||=" expression, FOLLOW [239] -> SHIFT "||=" GOTO 161
	expression/L3 = expression . "|=" expression, FOLLOW [239] -> SHIFT "|=" GOTO 162
	expression/L3 = expression . "<<=" expression, FOLLOW [239] -> SHIFT "<<=" GOTO 163
	expression/L3 = expression . ">>=" expression, FOLLOW [239] -> SHIFT ">>=" GOTO 164
	expression/L12 = expression . "." IDENT, FOLLOW [239] -> SHIFT '.' GOTO 165
	expression/L8 = expression ">" expression . (119), FOLLOW [239] -> REDUCE expression #3 CALL operator ">"
[259]
	iexpression = expression . indirection IDENT, FOLLOW [239] -> GOTO 129
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [239] -> SHIFT '(' GOTO 130
	expression/L13 = expression . "(" ")", FOLLOW [239] -> SHIFT '(' GOTO 130
	expression/L7 = expression . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 132
	expression/L7 = expression . "^" expression, FOLLOW [239] -> SHIFT '^' GOTO 133
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 134
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 134
	expression/L3 = expression . "=" expression, FOLLOW [239] -> SHIFT '=' GOTO 135
	expression/L9 = expression . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 136
	expression/L9 = expression . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 137
	expression/L10 = expression . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 138
	expression/L10 = expression . "/" expression, FOLLOW [239] -> SHIFT '/' GOTO 139
	expression/L10 = expression . "%" expression, FOLLOW [239] -> SHIFT '%' GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [239] -> SHIFT "&&" GOTO 141
	expression/L4 = expression . "||" expression, FOLLOW [239] -> SHIFT "||" GOTO 142
	expression/L6 = expression . "|" expression, FOLLOW [239] -> SHIFT '|' GOTO 143
	expression/L11 = expression . "<<" expression, FOLLOW [239] -> SHIFT "<<" GOTO 144
	expression/L11 = expression . ">>" expression, FOLLOW [239] -> SHIFT ">>" GOTO 145
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [239] -> SHIFT '[' GOTO 146
	expression/L8 = expression . "==" expression, FOLLOW [239] -> SHIFT "==" GOTO 147
	expression/L8 = expression . "!=" expression, FOLLOW [239] -> SHIFT "!=" GOTO 148
	expression/L8 = expression . ">=" expression, FOLLOW [239] -> SHIFT ">=" GOTO 149
	expression/L8 = expression . "<=" expression, FOLLOW [239] -> SHIFT "<=" GOTO 150
	expression/L8 = expression . ">" expression, FOLLOW [239] -> SHIFT '>' GOTO 151
	expression/L8 = expression . "<" expression, FOLLOW [239] -> SHIFT '<' GOTO 152
	expression/L3 = expression . "+=" expression, FOLLOW [239] -> SHIFT "+=" GOTO 153
	expression/L3 = expression . "-=" expression, FOLLOW [239] -> SHIFT "-=" GOTO 154
	expression/L3 = expression . "*=" expression, FOLLOW [239] -> SHIFT "*=" GOTO 155
	expression/L3 = expression . "/=" expression, FOLLOW [239] -> SHIFT "/=" GOTO 156
	expression/L3 = expression . "^=" expression, FOLLOW [239] -> SHIFT "^=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "%=" expression, FOLLOW [239] -> SHIFT "%=" GOTO 159
	expression/L3 = expression . "&&=" expression, FOLLOW [239] -> SHIFT "&&=" GOTO 160
	expression/L3 = expression . "||=" expression, FOLLOW [239] -> SHIFT "||=" GOTO 161
	expression/L3 = expression . "|=" expression, FOLLOW [239] -> SHIFT "|=" GOTO 162
	expression/L3 = expression . "<<=" expression, FOLLOW [239] -> SHIFT "<<=" GOTO 163
	expression/L3 = expression . ">>=" expression, FOLLOW [239] -> SHIFT ">>=" GOTO 164
	expression/L12 = expression . "." IDENT, FOLLOW [239] -> SHIFT '.' GOTO 165
	expression/L8 = expression "<" expression . (117), FOLLOW [239] -> REDUCE expression #3 CALL operator "<"
[260]
	iexpression = expression . indirection IDENT, FOLLOW [239] -> GOTO 129
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [239] -> SHIFT '(' GOTO 130
	expression/L13 = expression . "(" ")", FOLLOW [239] -> SHIFT '(' GOTO 130
	expression/L7 = expression . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 132
	expression/L7 = expression . "^" expression, FOLLOW [239] -> SHIFT '^' GOTO 133
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 134
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 134
	expression/L3 = expression . "=" expression, FOLLOW [239] -> SHIFT '=' GOTO 135
	expression/L9 = expression . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 136
	expression/L9 = expression . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 137
	expression/L10 = expression . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 138
	expression/L10 = expression . "/" expression, FOLLOW [239] -> SHIFT '/' GOTO 139
	expression/L10 = expression . "%" expression, FOLLOW [239] -> SHIFT '%' GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [239] -> SHIFT "&&" GOTO 141
	expression/L4 = expression . "||" expression, FOLLOW [239] -> SHIFT "||" GOTO 142
	expression/L6 = expression . "|" expression, FOLLOW [239] -> SHIFT '|' GOTO 143
	expression/L11 = expression . "<<" expression, FOLLOW [239] -> SHIFT "<<" GOTO 144
	expression/L11 = expression . ">>" expression, FOLLOW [239] -> SHIFT ">>" GOTO 145
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [239] -> SHIFT '[' GOTO 146
	expression/L8 = expression . "==" expression, FOLLOW [239] -> SHIFT "==" GOTO 147
	expression/L8 = expression . "!=" expression, FOLLOW [239] -> SHIFT "!=" GOTO 148
	expression/L8 = expression . ">=" expression, FOLLOW [239] -> SHIFT ">=" GOTO 149
	expression/L8 = expression . "<=" expression, FOLLOW [239] -> SHIFT "<=" GOTO 150
	expression/L8 = expression . ">" expression, FOLLOW [239] -> SHIFT '>' GOTO 151
	expression/L8 = expression . "<" expression, FOLLOW [239] -> SHIFT '<' GOTO 152
	expression/L3 = expression . "+=" expression, FOLLOW [239] -> SHIFT "+=" GOTO 153
	expression/L3 = expression . "-=" expression, FOLLOW [239] -> SHIFT "-=" GOTO 154
	expression/L3 = expression . "*=" expression, FOLLOW [239] -> SHIFT "*=" GOTO 155
	expression/L3 = expression . "/=" expression, FOLLOW [239] -> SHIFT "/=" GOTO 156
	expression/L3 = expression . "^=" expression, FOLLOW [239] -> SHIFT "^=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "%=" expression, FOLLOW [239] -> SHIFT "%=" GOTO 159
	expression/L3 = expression . "&&=" expression, FOLLOW [239] -> SHIFT "&&=" GOTO 160
	expression/L3 = expression . "||=" expression, FOLLOW [239] -> SHIFT "||=" GOTO 161
	expression/L3 = expression . "|=" expression, FOLLOW [239] -> SHIFT "|=" GOTO 162
	expression/L3 = expression . "<<=" expression, FOLLOW [239] -> SHIFT "<<=" GOTO 163
	expression/L3 = expression . ">>=" expression, FOLLOW [239] -> SHIFT ">>=" GOTO 164
	expression/L12 = expression . "." IDENT, FOLLOW [239] -> SHIFT '.' GOTO 165
	expression/L3 = expression "+=" expression . (97), FOLLOW [239] -> REDUCE expression #3 CALL assign_operator "+"
[261]
	iexpression = expression . indirection IDENT, FOLLOW [239] -> GOTO 129
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [239] -> SHIFT '(' GOTO 130
	expression/L13 = expression . "(" ")", FOLLOW [239] -> SHIFT '(' GOTO 130
	expression/L7 = expression . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 132
	expression/L7 = expression . "^" expression, FOLLOW [239] -> SHIFT '^' GOTO 133
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 134
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 134
	expression/L3 = expression . "=" expression, FOLLOW [239] -> SHIFT '=' GOTO 135
	expression/L9 = expression . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 136
	expression/L9 = expression . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 137
	expression/L10 = expression . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 138
	expression/L10 = expression . "/" expression, FOLLOW [239] -> SHIFT '/' GOTO 139
	expression/L10 = expression . "%" expression, FOLLOW [239] -> SHIFT '%' GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [239] -> SHIFT "&&" GOTO 141
	expression/L4 = expression . "||" expression, FOLLOW [239] -> SHIFT "||" GOTO 142
	expression/L6 = expression . "|" expression, FOLLOW [239] -> SHIFT '|' GOTO 143
	expression/L11 = expression . "<<" expression, FOLLOW [239] -> SHIFT "<<" GOTO 144
	expression/L11 = expression . ">>" expression, FOLLOW [239] -> SHIFT ">>" GOTO 145
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [239] -> SHIFT '[' GOTO 146
	expression/L8 = expression . "==" expression, FOLLOW [239] -> SHIFT "==" GOTO 147
	expression/L8 = expression . "!=" expression, FOLLOW [239] -> SHIFT "!=" GOTO 148
	expression/L8 = expression . ">=" expression, FOLLOW [239] -> SHIFT ">=" GOTO 149
	expression/L8 = expression . "<=" expression, FOLLOW [239] -> SHIFT "<=" GOTO 150
	expression/L8 = expression . ">" expression, FOLLOW [239] -> SHIFT '>' GOTO 151
	expression/L8 = expression . "<" expression, FOLLOW [239] -> SHIFT '<' GOTO 152
	expression/L3 = expression . "+=" expression, FOLLOW [239] -> SHIFT "+=" GOTO 153
	expression/L3 = expression . "-=" expression, FOLLOW [239] -> SHIFT "-=" GOTO 154
	expression/L3 = expression . "*=" expression, FOLLOW [239] -> SHIFT "*=" GOTO 155
	expression/L3 = expression . "/=" expression, FOLLOW [239] -> SHIFT "/=" GOTO 156
	expression/L3 = expression . "^=" expression, FOLLOW [239] -> SHIFT "^=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "%=" expression, FOLLOW [239] -> SHIFT "%=" GOTO 159
	expression/L3 = expression . "&&=" expression, FOLLOW [239] -> SHIFT "&&=" GOTO 160
	expression/L3 = expression . "||=" expression, FOLLOW [239] -> SHIFT "||=" GOTO 161
	expression/L3 = expression . "|=" expression, FOLLOW [239] -> SHIFT "|=" GOTO 162
	expression/L3 = expression . "<<=" expression, FOLLOW [239] -> SHIFT "<<=" GOTO 163
	expression/L3 = expression . ">>=" expression, FOLLOW [239] -> SHIFT ">>=" GOTO 164
	expression/L12 = expression . "." IDENT, FOLLOW [239] -> SHIFT '.' GOTO 165
	expression/L3 = expression "-=" expression . (98), FOLLOW [239] -> REDUCE expression #3 CALL assign_operator "-"
[262]
	iexpression = expression . indirection IDENT, FOLLOW [239] -> GOTO 129
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [239] -> SHIFT '(' GOTO 130
	expression/L13 = expression . "(" ")", FOLLOW [239] -> SHIFT '(' GOTO 130
	expression/L7 = expression . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 132
	expression/L7 = expression . "^" expression, FOLLOW [239] -> SHIFT '^' GOTO 133
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 134
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 134
	expression/L3 = expression . "=" expression, FOLLOW [239] -> SHIFT '=' GOTO 135
	expression/L9 = expression . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 136
	expression/L9 = expression . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 137
	expression/L10 = expression . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 138
	expression/L10 = expression . "/" expression, FOLLOW [239] -> SHIFT '/' GOTO 139
	expression/L10 = expression . "%" expression, FOLLOW [239] -> SHIFT '%' GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [239] -> SHIFT "&&" GOTO 141
	expression/L4 = expression . "||" expression, FOLLOW [239] -> SHIFT "||" GOTO 142
	expression/L6 = expression . "|" expression, FOLLOW [239] -> SHIFT '|' GOTO 143
	expression/L11 = expression . "<<" expression, FOLLOW [239] -> SHIFT "<<" GOTO 144
	expression/L11 = expression . ">>" expression, FOLLOW [239] -> SHIFT ">>" GOTO 145
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [239] -> SHIFT '[' GOTO 146
	expression/L8 = expression . "==" expression, FOLLOW [239] -> SHIFT "==" GOTO 147
	expression/L8 = expression . "!=" expression, FOLLOW [239] -> SHIFT "!=" GOTO 148
	expression/L8 = expression . ">=" expression, FOLLOW [239] -> SHIFT ">=" GOTO 149
	expression/L8 = expression . "<=" expression, FOLLOW [239] -> SHIFT "<=" GOTO 150
	expression/L8 = expression . ">" expression, FOLLOW [239] -> SHIFT '>' GOTO 151
	expression/L8 = expression . "<" expression, FOLLOW [239] -> SHIFT '<' GOTO 152
	expression/L3 = expression . "+=" expression, FOLLOW [239] -> SHIFT "+=" GOTO 153
	expression/L3 = expression . "-=" expression, FOLLOW [239] -> SHIFT "-=" GOTO 154
	expression/L3 = expression . "*=" expression, FOLLOW [239] -> SHIFT "*=" GOTO 155
	expression/L3 = expression . "/=" expression, FOLLOW [239] -> SHIFT "/=" GOTO 156
	expression/L3 = expression . "^=" expression, FOLLOW [239] -> SHIFT "^=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "%=" expression, FOLLOW [239] -> SHIFT "%=" GOTO 159
	expression/L3 = expression . "&&=" expression, FOLLOW [239] -> SHIFT "&&=" GOTO 160
	expression/L3 = expression . "||=" expression, FOLLOW [239] -> SHIFT "||=" GOTO 161
	expression/L3 = expression . "|=" expression, FOLLOW [239] -> SHIFT "|=" GOTO 162
	expression/L3 = expression . "<<=" expression, FOLLOW [239] -> SHIFT "<<=" GOTO 163
	expression/L3 = expression . ">>=" expression, FOLLOW [239] -> SHIFT ">>=" GOTO 164
	expression/L12 = expression . "." IDENT, FOLLOW [239] -> SHIFT '.' GOTO 165
	expression/L3 = expression "*=" expression . (99), FOLLOW [239] -> REDUCE expression #3 CALL assign_operator "*"
[263]
	iexpression = expression . indirection IDENT, FOLLOW [239] -> GOTO 129
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [239] -> SHIFT '(' GOTO 130
	expression/L13 = expression . "(" ")", FOLLOW [239] -> SHIFT '(' GOTO 130
	expression/L7 = expression . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 132
	expression/L7 = expression . "^" expression, FOLLOW [239] -> SHIFT '^' GOTO 133
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 134
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 134
	expression/L3 = expression . "=" expression, FOLLOW [239] -> SHIFT '=' GOTO 135
	expression/L9 = expression . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 136
	expression/L9 = expression . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 137
	expression/L10 = expression . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 138
	expression/L10 = expression . "/" expression, FOLLOW [239] -> SHIFT '/' GOTO 139
	expression/L10 = expression . "%" expression, FOLLOW [239] -> SHIFT '%' GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [239] -> SHIFT "&&" GOTO 141
	expression/L4 = expression . "||" expression, FOLLOW [239] -> SHIFT "||" GOTO 142
	expression/L6 = expression . "|" expression, FOLLOW [239] -> SHIFT '|' GOTO 143
	expression/L11 = expression . "<<" expression, FOLLOW [239] -> SHIFT "<<" GOTO 144
	expression/L11 = expression . ">>" expression, FOLLOW [239] -> SHIFT ">>" GOTO 145
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [239] -> SHIFT '[' GOTO 146
	expression/L8 = expression . "==" expression, FOLLOW [239] -> SHIFT "==" GOTO 147
	expression/L8 = expression . "!=" expression, FOLLOW [239] -> SHIFT "!=" GOTO 148
	expression/L8 = expression . ">=" expression, FOLLOW [239] -> SHIFT ">=" GOTO 149
	expression/L8 = expression . "<=" expression, FOLLOW [239] -> SHIFT "<=" GOTO 150
	expression/L8 = expression . ">" expression, FOLLOW [239] -> SHIFT '>' GOTO 151
	expression/L8 = expression . "<" expression, FOLLOW [239] -> SHIFT '<' GOTO 152
	expression/L3 = expression . "+=" expression, FOLLOW [239] -> SHIFT "+=" GOTO 153
	expression/L3 = expression . "-=" expression, FOLLOW [239] -> SHIFT "-=" GOTO 154
	expression/L3 = expression . "*=" expression, FOLLOW [239] -> SHIFT "*=" GOTO 155
	expression/L3 = expression . "/=" expression, FOLLOW [239] -> SHIFT "/=" GOTO 156
	expression/L3 = expression . "^=" expression, FOLLOW [239] -> SHIFT "^=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "%=" expression, FOLLOW [239] -> SHIFT "%=" GOTO 159
	expression/L3 = expression . "&&=" expression, FOLLOW [239] -> SHIFT "&&=" GOTO 160
	expression/L3 = expression . "||=" expression, FOLLOW [239] -> SHIFT "||=" GOTO 161
	expression/L3 = expression . "|=" expression, FOLLOW [239] -> SHIFT "|=" GOTO 162
	expression/L3 = expression . "<<=" expression, FOLLOW [239] -> SHIFT "<<=" GOTO 163
	expression/L3 = expression . ">>=" expression, FOLLOW [239] -> SHIFT ">>=" GOTO 164
	expression/L12 = expression . "." IDENT, FOLLOW [239] -> SHIFT '.' GOTO 165
	expression/L3 = expression "/=" expression . (100), FOLLOW [239] -> REDUCE expression #3 CALL assign_operator "/"
[264]
	iexpression = expression . indirection IDENT, FOLLOW [239] -> GOTO 129
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [239] -> SHIFT '(' GOTO 130
	expression/L13 = expression . "(" ")", FOLLOW [239] -> SHIFT '(' GOTO 130
	expression/L7 = expression . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 132
	expression/L7 = expression . "^" expression, FOLLOW [239] -> SHIFT '^' GOTO 133
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 134
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 134
	expression/L3 = expression . "=" expression, FOLLOW [239] -> SHIFT '=' GOTO 135
	expression/L9 = expression . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 136
	expression/L9 = expression . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 137
	expression/L10 = expression . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 138
	expression/L10 = expression . "/" expression, FOLLOW [239] -> SHIFT '/' GOTO 139
	expression/L10 = expression . "%" expression, FOLLOW [239] -> SHIFT '%' GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [239] -> SHIFT "&&" GOTO 141
	expression/L4 = expression . "||" expression, FOLLOW [239] -> SHIFT "||" GOTO 142
	expression/L6 = expression . "|" expression, FOLLOW [239] -> SHIFT '|' GOTO 143
	expression/L11 = expression . "<<" expression, FOLLOW [239] -> SHIFT "<<" GOTO 144
	expression/L11 = expression . ">>" expression, FOLLOW [239] -> SHIFT ">>" GOTO 145
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [239] -> SHIFT '[' GOTO 146
	expression/L8 = expression . "==" expression, FOLLOW [239] -> SHIFT "==" GOTO 147
	expression/L8 = expression . "!=" expression, FOLLOW [239] -> SHIFT "!=" GOTO 148
	expression/L8 = expression . ">=" expression, FOLLOW [239] -> SHIFT ">=" GOTO 149
	expression/L8 = expression . "<=" expression, FOLLOW [239] -> SHIFT "<=" GOTO 150
	expression/L8 = expression . ">" expression, FOLLOW [239] -> SHIFT '>' GOTO 151
	expression/L8 = expression . "<" expression, FOLLOW [239] -> SHIFT '<' GOTO 152
	expression/L3 = expression . "+=" expression, FOLLOW [239] -> SHIFT "+=" GOTO 153
	expression/L3 = expression . "-=" expression, FOLLOW [239] -> SHIFT "-=" GOTO 154
	expression/L3 = expression . "*=" expression, FOLLOW [239] -> SHIFT "*=" GOTO 155
	expression/L3 = expression . "/=" expression, FOLLOW [239] -> SHIFT "/=" GOTO 156
	expression/L3 = expression . "^=" expression, FOLLOW [239] -> SHIFT "^=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "%=" expression, FOLLOW [239] -> SHIFT "%=" GOTO 159
	expression/L3 = expression . "&&=" expression, FOLLOW [239] -> SHIFT "&&=" GOTO 160
	expression/L3 = expression . "||=" expression, FOLLOW [239] -> SHIFT "||=" GOTO 161
	expression/L3 = expression . "|=" expression, FOLLOW [239] -> SHIFT "|=" GOTO 162
	expression/L3 = expression . "<<=" expression, FOLLOW [239] -> SHIFT "<<=" GOTO 163
	expression/L3 = expression . ">>=" expression, FOLLOW [239] -> SHIFT ">>=" GOTO 164
	expression/L12 = expression . "." IDENT, FOLLOW [239] -> SHIFT '.' GOTO 165
	expression/L3 = expression "^=" expression . (101), FOLLOW [239] -> REDUCE expression #3 CALL assign_operator "^"
[265]
	iexpression = expression . indirection IDENT, FOLLOW [239] -> GOTO 129
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [239] -> SHIFT '(' GOTO 130
	expression/L13 = expression . "(" ")", FOLLOW [239] -> SHIFT '(' GOTO 130
	expression/L7 = expression . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 132
	expression/L7 = expression . "^" expression, FOLLOW [239] -> SHIFT '^' GOTO 133
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 134
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 134
	expression/L3 = expression . "=" expression, FOLLOW [239] -> SHIFT '=' GOTO 135
	expression/L9 = expression . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 136
	expression/L9 = expression . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 137
	expression/L10 = expression . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 138
	expression/L10 = expression . "/" expression, FOLLOW [239] -> SHIFT '/' GOTO 139
	expression/L10 = expression . "%" expression, FOLLOW [239] -> SHIFT '%' GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [239] -> SHIFT "&&" GOTO 141
	expression/L4 = expression . "||" expression, FOLLOW [239] -> SHIFT "||" GOTO 142
	expression/L6 = expression . "|" expression, FOLLOW [239] -> SHIFT '|' GOTO 143
	expression/L11 = expression . "<<" expression, FOLLOW [239] -> SHIFT "<<" GOTO 144
	expression/L11 = expression . ">>" expression, FOLLOW [239] -> SHIFT ">>" GOTO 145
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [239] -> SHIFT '[' GOTO 146
	expression/L8 = expression . "==" expression, FOLLOW [239] -> SHIFT "==" GOTO 147
	expression/L8 = expression . "!=" expression, FOLLOW [239] -> SHIFT "!=" GOTO 148
	expression/L8 = expression . ">=" expression, FOLLOW [239] -> SHIFT ">=" GOTO 149
	expression/L8 = expression . "<=" expression, FOLLOW [239] -> SHIFT "<=" GOTO 150
	expression/L8 = expression . ">" expression, FOLLOW [239] -> SHIFT '>' GOTO 151
	expression/L8 = expression . "<" expression, FOLLOW [239] -> SHIFT '<' GOTO 152
	expression/L3 = expression . "+=" expression, FOLLOW [239] -> SHIFT "+=" GOTO 153
	expression/L3 = expression . "-=" expression, FOLLOW [239] -> SHIFT "-=" GOTO 154
	expression/L3 = expression . "*=" expression, FOLLOW [239] -> SHIFT "*=" GOTO 155
	expression/L3 = expression . "/=" expression, FOLLOW [239] -> SHIFT "/=" GOTO 156
	expression/L3 = expression . "^=" expression, FOLLOW [239] -> SHIFT "^=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "%=" expression, FOLLOW [239] -> SHIFT "%=" GOTO 159
	expression/L3 = expression . "&&=" expression, FOLLOW [239] -> SHIFT "&&=" GOTO 160
	expression/L3 = expression . "||=" expression, FOLLOW [239] -> SHIFT "||=" GOTO 161
	expression/L3 = expression . "|=" expression, FOLLOW [239] -> SHIFT "|=" GOTO 162
	expression/L3 = expression . "<<=" expression, FOLLOW [239] -> SHIFT "<<=" GOTO 163
	expression/L3 = expression . ">>=" expression, FOLLOW [239] -> SHIFT ">>=" GOTO 164
	expression/L12 = expression . "." IDENT, FOLLOW [239] -> SHIFT '.' GOTO 165
	expression/L3 = expression "&=" expression . (102), FOLLOW [239] -> REDUCE expression #3 CALL assign_operator "&"
[266]
	iexpression = expression . indirection IDENT, FOLLOW [239] -> GOTO 129
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [239] -> SHIFT '(' GOTO 130
	expression/L13 = expression . "(" ")", FOLLOW [239] -> SHIFT '(' GOTO 130
	expression/L7 = expression . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 132
	expression/L7 = expression . "^" expression, FOLLOW [239] -> SHIFT '^' GOTO 133
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 134
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 134
	expression/L3 = expression . "=" expression, FOLLOW [239] -> SHIFT '=' GOTO 135
	expression/L9 = expression . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 136
	expression/L9 = expression . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 137
	expression/L10 = expression . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 138
	expression/L10 = expression . "/" expression, FOLLOW [239] -> SHIFT '/' GOTO 139
	expression/L10 = expression . "%" expression, FOLLOW [239] -> SHIFT '%' GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [239] -> SHIFT "&&" GOTO 141
	expression/L4 = expression . "||" expression, FOLLOW [239] -> SHIFT "||" GOTO 142
	expression/L6 = expression . "|" expression, FOLLOW [239] -> SHIFT '|' GOTO 143
	expression/L11 = expression . "<<" expression, FOLLOW [239] -> SHIFT "<<" GOTO 144
	expression/L11 = expression . ">>" expression, FOLLOW [239] -> SHIFT ">>" GOTO 145
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [239] -> SHIFT '[' GOTO 146
	expression/L8 = expression . "==" expression, FOLLOW [239] -> SHIFT "==" GOTO 147
	expression/L8 = expression . "!=" expression, FOLLOW [239] -> SHIFT "!=" GOTO 148
	expression/L8 = expression . ">=" expression, FOLLOW [239] -> SHIFT ">=" GOTO 149
	expression/L8 = expression . "<=" expression, FOLLOW [239] -> SHIFT "<=" GOTO 150
	expression/L8 = expression . ">" expression, FOLLOW [239] -> SHIFT '>' GOTO 151
	expression/L8 = expression . "<" expression, FOLLOW [239] -> SHIFT '<' GOTO 152
	expression/L3 = expression . "+=" expression, FOLLOW [239] -> SHIFT "+=" GOTO 153
	expression/L3 = expression . "-=" expression, FOLLOW [239] -> SHIFT "-=" GOTO 154
	expression/L3 = expression . "*=" expression, FOLLOW [239] -> SHIFT "*=" GOTO 155
	expression/L3 = expression . "/=" expression, FOLLOW [239] -> SHIFT "/=" GOTO 156
	expression/L3 = expression . "^=" expression, FOLLOW [239] -> SHIFT "^=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "%=" expression, FOLLOW [239] -> SHIFT "%=" GOTO 159
	expression/L3 = expression . "&&=" expression, FOLLOW [239] -> SHIFT "&&=" GOTO 160
	expression/L3 = expression . "||=" expression, FOLLOW [239] -> SHIFT "||=" GOTO 161
	expression/L3 = expression . "|=" expression, FOLLOW [239] -> SHIFT "|=" GOTO 162
	expression/L3 = expression . "<<=" expression, FOLLOW [239] -> SHIFT "<<=" GOTO 163
	expression/L3 = expression . ">>=" expression, FOLLOW [239] -> SHIFT ">>=" GOTO 164
	expression/L12 = expression . "." IDENT, FOLLOW [239] -> SHIFT '.' GOTO 165
	expression/L3 = expression "%=" expression . (103), FOLLOW [239] -> REDUCE expression #3 CALL assign_operator "%"
[267]
	iexpression = expression . indirection IDENT, FOLLOW [239] -> GOTO 129
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [239] -> SHIFT '(' GOTO 130
	expression/L13 = expression . "(" ")", FOLLOW [239] -> SHIFT '(' GOTO 130
	expression/L7 = expression . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 132
	expression/L7 = expression . "^" expression, FOLLOW [239] -> SHIFT '^' GOTO 133
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 134
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 134
	expression/L3 = expression . "=" expression, FOLLOW [239] -> SHIFT '=' GOTO 135
	expression/L9 = expression . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 136
	expression/L9 = expression . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 137
	expression/L10 = expression . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 138
	expression/L10 = expression . "/" expression, FOLLOW [239] -> SHIFT '/' GOTO 139
	expression/L10 = expression . "%" expression, FOLLOW [239] -> SHIFT '%' GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [239] -> SHIFT "&&" GOTO 141
	expression/L4 = expression . "||" expression, FOLLOW [239] -> SHIFT "||" GOTO 142
	expression/L6 = expression . "|" expression, FOLLOW [239] -> SHIFT '|' GOTO 143
	expression/L11 = expression . "<<" expression, FOLLOW [239] -> SHIFT "<<" GOTO 144
	expression/L11 = expression . ">>" expression, FOLLOW [239] -> SHIFT ">>" GOTO 145
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [239] -> SHIFT '[' GOTO 146
	expression/L8 = expression . "==" expression, FOLLOW [239] -> SHIFT "==" GOTO 147
	expression/L8 = expression . "!=" expression, FOLLOW [239] -> SHIFT "!=" GOTO 148
	expression/L8 = expression . ">=" expression, FOLLOW [239] -> SHIFT ">=" GOTO 149
	expression/L8 = expression . "<=" expression, FOLLOW [239] -> SHIFT "<=" GOTO 150
	expression/L8 = expression . ">" expression, FOLLOW [239] -> SHIFT '>' GOTO 151
	expression/L8 = expression . "<" expression, FOLLOW [239] -> SHIFT '<' GOTO 152
	expression/L3 = expression . "+=" expression, FOLLOW [239] -> SHIFT "+=" GOTO 153
	expression/L3 = expression . "-=" expression, FOLLOW [239] -> SHIFT "-=" GOTO 154
	expression/L3 = expression . "*=" expression, FOLLOW [239] -> SHIFT "*=" GOTO 155
	expression/L3 = expression . "/=" expression, FOLLOW [239] -> SHIFT "/=" GOTO 156
	expression/L3 = expression . "^=" expression, FOLLOW [239] -> SHIFT "^=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "%=" expression, FOLLOW [239] -> SHIFT "%=" GOTO 159
	expression/L3 = expression . "&&=" expression, FOLLOW [239] -> SHIFT "&&=" GOTO 160
	expression/L3 = expression . "||=" expression, FOLLOW [239] -> SHIFT "||=" GOTO 161
	expression/L3 = expression . "|=" expression, FOLLOW [239] -> SHIFT "|=" GOTO 162
	expression/L3 = expression . "<<=" expression, FOLLOW [239] -> SHIFT "<<=" GOTO 163
	expression/L3 = expression . ">>=" expression, FOLLOW [239] -> SHIFT ">>=" GOTO 164
	expression/L12 = expression . "." IDENT, FOLLOW [239] -> SHIFT '.' GOTO 165
	expression/L3 = expression "&&=" expression . (104), FOLLOW [239] -> REDUCE expression #3 CALL assign_operator "&&"
[268]
	iexpression = expression . indirection IDENT, FOLLOW [239] -> GOTO 129
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [239] -> SHIFT '(' GOTO 130
	expression/L13 = expression . "(" ")", FOLLOW [239] -> SHIFT '(' GOTO 130
	expression/L7 = expression . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 132
	expression/L7 = expression . "^" expression, FOLLOW [239] -> SHIFT '^' GOTO 133
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 134
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 134
	expression/L3 = expression . "=" expression, FOLLOW [239] -> SHIFT '=' GOTO 135
	expression/L9 = expression . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 136
	expression/L9 = expression . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 137
	expression/L10 = expression . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 138
	expression/L10 = expression . "/" expression, FOLLOW [239] -> SHIFT '/' GOTO 139
	expression/L10 = expression . "%" expression, FOLLOW [239] -> SHIFT '%' GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [239] -> SHIFT "&&" GOTO 141
	expression/L4 = expression . "||" expression, FOLLOW [239] -> SHIFT "||" GOTO 142
	expression/L6 = expression . "|" expression, FOLLOW [239] -> SHIFT '|' GOTO 143
	expression/L11 = expression . "<<" expression, FOLLOW [239] -> SHIFT "<<" GOTO 144
	expression/L11 = expression . ">>" expression, FOLLOW [239] -> SHIFT ">>" GOTO 145
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [239] -> SHIFT '[' GOTO 146
	expression/L8 = expression . "==" expression, FOLLOW [239] -> SHIFT "==" GOTO 147
	expression/L8 = expression . "!=" expression, FOLLOW [239] -> SHIFT "!=" GOTO 148
	expression/L8 = expression . ">=" expression, FOLLOW [239] -> SHIFT ">=" GOTO 149
	expression/L8 = expression . "<=" expression, FOLLOW [239] -> SHIFT "<=" GOTO 150
	expression/L8 = expression . ">" expression, FOLLOW [239] -> SHIFT '>' GOTO 151
	expression/L8 = expression . "<" expression, FOLLOW [239] -> SHIFT '<' GOTO 152
	expression/L3 = expression . "+=" expression, FOLLOW [239] -> SHIFT "+=" GOTO 153
	expression/L3 = expression . "-=" expression, FOLLOW [239] -> SHIFT "-=" GOTO 154
	expression/L3 = expression . "*=" expression, FOLLOW [239] -> SHIFT "*=" GOTO 155
	expression/L3 = expression . "/=" expression, FOLLOW [239] -> SHIFT "/=" GOTO 156
	expression/L3 = expression . "^=" expression, FOLLOW [239] -> SHIFT "^=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "%=" expression, FOLLOW [239] -> SHIFT "%=" GOTO 159
	expression/L3 = expression . "&&=" expression, FOLLOW [239] -> SHIFT "&&=" GOTO 160
	expression/L3 = expression . "||=" expression, FOLLOW [239] -> SHIFT "||=" GOTO 161
	expression/L3 = expression . "|=" expression, FOLLOW [239] -> SHIFT "|=" GOTO 162
	expression/L3 = expression . "<<=" expression, FOLLOW [239] -> SHIFT "<<=" GOTO 163
	expression/L3 = expression . ">>=" expression, FOLLOW [239] -> SHIFT ">>=" GOTO 164
	expression/L12 = expression . "." IDENT, FOLLOW [239] -> SHIFT '.' GOTO 165
	expression/L3 = expression "||=" expression . (105), FOLLOW [239] -> REDUCE expression #3 CALL assign_operator "||"
[269]
	iexpression = expression . indirection IDENT, FOLLOW [239] -> GOTO 129
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [239] -> SHIFT '(' GOTO 130
	expression/L13 = expression . "(" ")", FOLLOW [239] -> SHIFT '(' GOTO 130
	expression/L7 = expression . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 132
	expression/L7 = expression . "^" expression, FOLLOW [239] -> SHIFT '^' GOTO 133
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 134
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 134
	expression/L3 = expression . "=" expression, FOLLOW [239] -> SHIFT '=' GOTO 135
	expression/L9 = expression . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 136
	expression/L9 = expression . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 137
	expression/L10 = expression . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 138
	expression/L10 = expression . "/" expression, FOLLOW [239] -> SHIFT '/' GOTO 139
	expression/L10 = expression . "%" expression, FOLLOW [239] -> SHIFT '%' GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [239] -> SHIFT "&&" GOTO 141
	expression/L4 = expression . "||" expression, FOLLOW [239] -> SHIFT "||" GOTO 142
	expression/L6 = expression . "|" expression, FOLLOW [239] -> SHIFT '|' GOTO 143
	expression/L11 = expression . "<<" expression, FOLLOW [239] -> SHIFT "<<" GOTO 144
	expression/L11 = expression . ">>" expression, FOLLOW [239] -> SHIFT ">>" GOTO 145
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [239] -> SHIFT '[' GOTO 146
	expression/L8 = expression . "==" expression, FOLLOW [239] -> SHIFT "==" GOTO 147
	expression/L8 = expression . "!=" expression, FOLLOW [239] -> SHIFT "!=" GOTO 148
	expression/L8 = expression . ">=" expression, FOLLOW [239] -> SHIFT ">=" GOTO 149
	expression/L8 = expression . "<=" expression, FOLLOW [239] -> SHIFT "<=" GOTO 150
	expression/L8 = expression . ">" expression, FOLLOW [239] -> SHIFT '>' GOTO 151
	expression/L8 = expression . "<" expression, FOLLOW [239] -> SHIFT '<' GOTO 152
	expression/L3 = expression . "+=" expression, FOLLOW [239] -> SHIFT "+=" GOTO 153
	expression/L3 = expression . "-=" expression, FOLLOW [239] -> SHIFT "-=" GOTO 154
	expression/L3 = expression . "*=" expression, FOLLOW [239] -> SHIFT "*=" GOTO 155
	expression/L3 = expression . "/=" expression, FOLLOW [239] -> SHIFT "/=" GOTO 156
	expression/L3 = expression . "^=" expression, FOLLOW [239] -> SHIFT "^=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "%=" expression, FOLLOW [239] -> SHIFT "%=" GOTO 159
	expression/L3 = expression . "&&=" expression, FOLLOW [239] -> SHIFT "&&=" GOTO 160
	expression/L3 = expression . "||=" expression, FOLLOW [239] -> SHIFT "||=" GOTO 161
	expression/L3 = expression . "|=" expression, FOLLOW [239] -> SHIFT "|=" GOTO 162
	expression/L3 = expression . "<<=" expression, FOLLOW [239] -> SHIFT "<<=" GOTO 163
	expression/L3 = expression . ">>=" expression, FOLLOW [239] -> SHIFT ">>=" GOTO 164
	expression/L12 = expression . "." IDENT, FOLLOW [239] -> SHIFT '.' GOTO 165
	expression/L3 = expression "|=" expression . (106), FOLLOW [239] -> REDUCE expression #3 CALL assign_operator "|"
[270]
	iexpression = expression . indirection IDENT, FOLLOW [239] -> GOTO 129
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [239] -> SHIFT '(' GOTO 130
	expression/L13 = expression . "(" ")", FOLLOW [239] -> SHIFT '(' GOTO 130
	expression/L7 = expression . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 132
	expression/L7 = expression . "^" expression, FOLLOW [239] -> SHIFT '^' GOTO 133
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 134
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 134
	expression/L3 = expression . "=" expression, FOLLOW [239] -> SHIFT '=' GOTO 135
	expression/L9 = expression . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 136
	expression/L9 = expression . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 137
	expression/L10 = expression . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 138
	expression/L10 = expression . "/" expression, FOLLOW [239] -> SHIFT '/' GOTO 139
	expression/L10 = expression . "%" expression, FOLLOW [239] -> SHIFT '%' GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [239] -> SHIFT "&&" GOTO 141
	expression/L4 = expression . "||" expression, FOLLOW [239] -> SHIFT "||" GOTO 142
	expression/L6 = expression . "|" expression, FOLLOW [239] -> SHIFT '|' GOTO 143
	expression/L11 = expression . "<<" expression, FOLLOW [239] -> SHIFT "<<" GOTO 144
	expression/L11 = expression . ">>" expression, FOLLOW [239] -> SHIFT ">>" GOTO 145
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [239] -> SHIFT '[' GOTO 146
	expression/L8 = expression . "==" expression, FOLLOW [239] -> SHIFT "==" GOTO 147
	expression/L8 = expression . "!=" expression, FOLLOW [239] -> SHIFT "!=" GOTO 148
	expression/L8 = expression . ">=" expression, FOLLOW [239] -> SHIFT ">=" GOTO 149
	expression/L8 = expression . "<=" expression, FOLLOW [239] -> SHIFT "<=" GOTO 150
	expression/L8 = expression . ">" expression, FOLLOW [239] -> SHIFT '>' GOTO 151
	expression/L8 = expression . "<" expression, FOLLOW [239] -> SHIFT '<' GOTO 152
	expression/L3 = expression . "+=" expression, FOLLOW [239] -> SHIFT "+=" GOTO 153
	expression/L3 = expression . "-=" expression, FOLLOW [239] -> SHIFT "-=" GOTO 154
	expression/L3 = expression . "*=" expression, FOLLOW [239] -> SHIFT "*=" GOTO 155
	expression/L3 = expression . "/=" expression, FOLLOW [239] -> SHIFT "/=" GOTO 156
	expression/L3 = expression . "^=" expression, FOLLOW [239] -> SHIFT "^=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "%=" expression, FOLLOW [239] -> SHIFT "%=" GOTO 159
	expression/L3 = expression . "&&=" expression, FOLLOW [239] -> SHIFT "&&=" GOTO 160
	expression/L3 = expression . "||=" expression, FOLLOW [239] -> SHIFT "||=" GOTO 161
	expression/L3 = expression . "|=" expression, FOLLOW [239] -> SHIFT "|=" GOTO 162
	expression/L3 = expression . "<<=" expression, FOLLOW [239] -> SHIFT "<<=" GOTO 163
	expression/L3 = expression . ">>=" expression, FOLLOW [239] -> SHIFT ">>=" GOTO 164
	expression/L12 = expression . "." IDENT, FOLLOW [239] -> SHIFT '.' GOTO 165
	expression/L3 = expression "<<=" expression . (107), FOLLOW [239] -> REDUCE expression #3 CALL assign_operator "<<"
[271]
	iexpression = expression . indirection IDENT, FOLLOW [239] -> GOTO 129
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [239] -> SHIFT '(' GOTO 130
	expression/L13 = expression . "(" ")", FOLLOW [239] -> SHIFT '(' GOTO 130
	expression/L7 = expression . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 132
	expression/L7 = expression . "^" expression, FOLLOW [239] -> SHIFT '^' GOTO 133
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 134
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 134
	expression/L3 = expression . "=" expression, FOLLOW [239] -> SHIFT '=' GOTO 135
	expression/L9 = expression . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 136
	expression/L9 = expression . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 137
	expression/L10 = expression . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 138
	expression/L10 = expression . "/" expression, FOLLOW [239] -> SHIFT '/' GOTO 139
	expression/L10 = expression . "%" expression, FOLLOW [239] -> SHIFT '%' GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [239] -> SHIFT "&&" GOTO 141
	expression/L4 = expression . "||" expression, FOLLOW [239] -> SHIFT "||" GOTO 142
	expression/L6 = expression . "|" expression, FOLLOW [239] -> SHIFT '|' GOTO 143
	expression/L11 = expression . "<<" expression, FOLLOW [239] -> SHIFT "<<" GOTO 144
	expression/L11 = expression . ">>" expression, FOLLOW [239] -> SHIFT ">>" GOTO 145
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [239] -> SHIFT '[' GOTO 146
	expression/L8 = expression . "==" expression, FOLLOW [239] -> SHIFT "==" GOTO 147
	expression/L8 = expression . "!=" expression, FOLLOW [239] -> SHIFT "!=" GOTO 148
	expression/L8 = expression . ">=" expression, FOLLOW [239] -> SHIFT ">=" GOTO 149
	expression/L8 = expression . "<=" expression, FOLLOW [239] -> SHIFT "<=" GOTO 150
	expression/L8 = expression . ">" expression, FOLLOW [239] -> SHIFT '>' GOTO 151
	expression/L8 = expression . "<" expression, FOLLOW [239] -> SHIFT '<' GOTO 152
	expression/L3 = expression . "+=" expression, FOLLOW [239] -> SHIFT "+=" GOTO 153
	expression/L3 = expression . "-=" expression, FOLLOW [239] -> SHIFT "-=" GOTO 154
	expression/L3 = expression . "*=" expression, FOLLOW [239] -> SHIFT "*=" GOTO 155
	expression/L3 = expression . "/=" expression, FOLLOW [239] -> SHIFT "/=" GOTO 156
	expression/L3 = expression . "^=" expression, FOLLOW [239] -> SHIFT "^=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "%=" expression, FOLLOW [239] -> SHIFT "%=" GOTO 159
	expression/L3 = expression . "&&=" expression, FOLLOW [239] -> SHIFT "&&=" GOTO 160
	expression/L3 = expression . "||=" expression, FOLLOW [239] -> SHIFT "||=" GOTO 161
	expression/L3 = expression . "|=" expression, FOLLOW [239] -> SHIFT "|=" GOTO 162
	expression/L3 = expression . "<<=" expression, FOLLOW [239] -> SHIFT "<<=" GOTO 163
	expression/L3 = expression . ">>=" expression, FOLLOW [239] -> SHIFT ">>=" GOTO 164
	expression/L12 = expression . "." IDENT, FOLLOW [239] -> SHIFT '.' GOTO 165
	expression/L3 = expression ">>=" expression . (108), FOLLOW [239] -> REDUCE expression #3 CALL assign_operator ">>"
[272]
	expression/L12 = expression "." IDENT . (129), FOLLOW [239] -> REDUCE expression #3 CALL member
[273]
	expression/L2 = "(" expression ")" ., FOLLOW [239] -> REDUCE expression #3
[274]
	statement/L1 = "{" codeblock "}" . (scope), FOLLOW [98] -> REDUCE statement #3
[275]
	expression/L3 = . expression "=" expression, FOLLOW [230] -> GOTO 184
	expression/L3 = . expression "+=" expression, FOLLOW [230] -> GOTO 184
	expression/L3 = . expression "-=" expression, FOLLOW [230] -> GOTO 184
	expression/L3 = . expression "*=" expression, FOLLOW [230] -> GOTO 184
	expression/L3 = . expression "/=" expression, FOLLOW [230] -> GOTO 184
	expression/L3 = . expression "^=" expression, FOLLOW [230] -> GOTO 184
	expression/L3 = . expression "&=" expression, FOLLOW [230] -> GOTO 184
	expression/L3 = . expression "%=" expression, FOLLOW [230] -> GOTO 184
	expression/L3 = . expression "&&=" expression, FOLLOW [230] -> GOTO 184
	expression/L3 = . expression "||=" expression, FOLLOW [230] -> GOTO 184
	expression/L3 = . expression "&=" expression, FOLLOW [230] -> GOTO 184
	expression/L3 = . expression "|=" expression, FOLLOW [230] -> GOTO 184
	expression/L3 = . expression "<<=" expression, FOLLOW [230] -> GOTO 184
	expression/L3 = . expression ">>=" expression, FOLLOW [230] -> GOTO 184
	expression/L4 = . expression "||" expression, FOLLOW [230] -> GOTO 184
	expression/L5 = . expression "&&" expression, FOLLOW [230] -> GOTO 184
	expression/L6 = . expression "|" expression, FOLLOW [230] -> GOTO 184
	expression/L7 = . expression "^" expression, FOLLOW [230] -> GOTO 184
	expression/L7 = . expression "&" expression, FOLLOW [230] -> GOTO 184
	expression/L8 = . expression "==" expression, FOLLOW [230] -> GOTO 184
	expression/L8 = . expression "!=" expression, FOLLOW [230] -> GOTO 184
	expression/L8 = . expression "<=" expression, FOLLOW [230] -> GOTO 184
	expression/L8 = . expression "<" expression, FOLLOW [230] -> GOTO 184
	expression/L8 = . expression ">=" expression, FOLLOW [230] -> GOTO 184
	expression/L8 = . expression ">" expression, FOLLOW [230] -> GOTO 184
	expression/L9 = . expression "+" expression, FOLLOW [230] -> GOTO 184
	expression/L9 = . expression "-" expression, FOLLOW [230] -> GOTO 184
	expression/L10 = . expression "*" expression, FOLLOW [230] -> GOTO 184
	expression/L10 = . expression "/" expression, FOLLOW [230] -> GOTO 184
	expression/L10 = . expression "%" expression, FOLLOW [230] -> GOTO 184
	expression/L11 = . expression "<<" expression, FOLLOW [230] -> GOTO 184
	expression/L11 = . expression ">>" expression, FOLLOW [230] -> GOTO 184
	expression/L12 = . expression "." IDENT, FOLLOW [230] -> GOTO 184
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [230] -> GOTO 184
	expression/L13 = . expression "(" ")", FOLLOW [230] -> GOTO 184
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [230] -> GOTO 184
	iexpression = . expression indirection IDENT, FOLLOW [230] -> GOTO 184
	expressionlist = . expression "," expressionlist, FOLLOW [263] -> GOTO 184
	expressionlist = . expression, FOLLOW [263] -> GOTO 184
	expression/L12 = . iexpression, FOLLOW [230] -> GOTO 69
	expressionlist = expression "," . expressionlist, FOLLOW [263] -> GOTO 307
	expression/L2 = . BOOLEAN, FOLLOW [230] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [230] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [230] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [230] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [230] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [230] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [230] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [230] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [230] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [230] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [230] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [230] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [230] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [230] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [230] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [230] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [230] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [230] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [230] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [230] -> SHIFT "null" GOTO 92
[276]
	expression/L1 = "{" expressionlist "}" . (85), FOLLOW [239] -> REDUCE expression #3 CALL structure
[277]
	statement/L1 = "var" variabledefinition ";" . (74), FOLLOW [98] -> REDUCE statement #3 CALL definition
[278]
	statement/L1 = "return" expression ";" . (step:76), FOLLOW [98] -> REDUCE statement #3 CALL return_value
[279]
	statement/L1 = "delete" expression ";" . (77), FOLLOW [98] -> REDUCE statement #3 CALL delete
[280]
	iexpression = expression . indirection IDENT, FOLLOW [228] -> GOTO 129
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [228] -> SHIFT '(' GOTO 130
	expression/L13 = expression . "(" ")", FOLLOW [228] -> SHIFT '(' GOTO 130
	statement/L1 = "if" "(" expression . ")" "{" codeblock "}", FOLLOW [98] -> SHIFT ')' GOTO 308
	statement/L1 = "if" "(" expression . ")" "{" codeblock "}" "else" "{" codeblock "}", FOLLOW [98] -> SHIFT ')' GOTO 308
	expression/L7 = expression . "&" expression, FOLLOW [228] -> SHIFT '&' GOTO 132
	expression/L7 = expression . "^" expression, FOLLOW [228] -> SHIFT '^' GOTO 133
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 134
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 134
	expression/L3 = expression . "=" expression, FOLLOW [228] -> SHIFT '=' GOTO 135
	expression/L9 = expression . "+" expression, FOLLOW [228] -> SHIFT '+' GOTO 136
	expression/L9 = expression . "-" expression, FOLLOW [228] -> SHIFT '-' GOTO 137
	expression/L10 = expression . "*" expression, FOLLOW [228] -> SHIFT '*' GOTO 138
	expression/L10 = expression . "/" expression, FOLLOW [228] -> SHIFT '/' GOTO 139
	expression/L10 = expression . "%" expression, FOLLOW [228] -> SHIFT '%' GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [228] -> SHIFT "&&" GOTO 141
	expression/L4 = expression . "||" expression, FOLLOW [228] -> SHIFT "||" GOTO 142
	expression/L6 = expression . "|" expression, FOLLOW [228] -> SHIFT '|' GOTO 143
	expression/L11 = expression . "<<" expression, FOLLOW [228] -> SHIFT "<<" GOTO 144
	expression/L11 = expression . ">>" expression, FOLLOW [228] -> SHIFT ">>" GOTO 145
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [228] -> SHIFT '[' GOTO 146
	expression/L8 = expression . "==" expression, FOLLOW [228] -> SHIFT "==" GOTO 147
	expression/L8 = expression . "!=" expression, FOLLOW [228] -> SHIFT "!=" GOTO 148
	expression/L8 = expression . ">=" expression, FOLLOW [228] -> SHIFT ">=" GOTO 149
	expression/L8 = expression . "<=" expression, FOLLOW [228] -> SHIFT "<=" GOTO 150
	expression/L8 = expression . ">" expression, FOLLOW [228] -> SHIFT '>' GOTO 151
	expression/L8 = expression . "<" expression, FOLLOW [228] -> SHIFT '<' GOTO 152
	expression/L3 = expression . "+=" expression, FOLLOW [228] -> SHIFT "+=" GOTO 153
	expression/L3 = expression . "-=" expression, FOLLOW [228] -> SHIFT "-=" GOTO 154
	expression/L3 = expression . "*=" expression, FOLLOW [228] -> SHIFT "*=" GOTO 155
	expression/L3 = expression . "/=" expression, FOLLOW [228] -> SHIFT "/=" GOTO 156
	expression/L3 = expression . "^=" expression, FOLLOW [228] -> SHIFT "^=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [228] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "&=" expression, FOLLOW [228] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "%=" expression, FOLLOW [228] -> SHIFT "%=" GOTO 159
	expression/L3 = expression . "&&=" expression, FOLLOW [228] -> SHIFT "&&=" GOTO 160
	expression/L3 = expression . "||=" expression, FOLLOW [228] -> SHIFT "||=" GOTO 161
	expression/L3 = expression . "|=" expression, FOLLOW [228] -> SHIFT "|=" GOTO 162
	expression/L3 = expression . "<<=" expression, FOLLOW [228] -> SHIFT "<<=" GOTO 163
	expression/L3 = expression . ">>=" expression, FOLLOW [228] -> SHIFT ">>=" GOTO 164
	expression/L12 = expression . "." IDENT, FOLLOW [228] -> SHIFT '.' GOTO 165
[281]
	iexpression = expression . indirection IDENT, FOLLOW [228] -> GOTO 129
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [228] -> SHIFT '(' GOTO 130
	expression/L13 = expression . "(" ")", FOLLOW [228] -> SHIFT '(' GOTO 130
	statement/L1 = "while" "(" expression . ")" "{" codeblock "}", FOLLOW [98] -> SHIFT ')' GOTO 309
	expression/L7 = expression . "&" expression, FOLLOW [228] -> SHIFT '&' GOTO 132
	expression/L7 = expression . "^" expression, FOLLOW [228] -> SHIFT '^' GOTO 133
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 134
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 134
	expression/L3 = expression . "=" expression, FOLLOW [228] -> SHIFT '=' GOTO 135
	expression/L9 = expression . "+" expression, FOLLOW [228] -> SHIFT '+' GOTO 136
	expression/L9 = expression . "-" expression, FOLLOW [228] -> SHIFT '-' GOTO 137
	expression/L10 = expression . "*" expression, FOLLOW [228] -> SHIFT '*' GOTO 138
	expression/L10 = expression . "/" expression, FOLLOW [228] -> SHIFT '/' GOTO 139
	expression/L10 = expression . "%" expression, FOLLOW [228] -> SHIFT '%' GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [228] -> SHIFT "&&" GOTO 141
	expression/L4 = expression . "||" expression, FOLLOW [228] -> SHIFT "||" GOTO 142
	expression/L6 = expression . "|" expression, FOLLOW [228] -> SHIFT '|' GOTO 143
	expression/L11 = expression . "<<" expression, FOLLOW [228] -> SHIFT "<<" GOTO 144
	expression/L11 = expression . ">>" expression, FOLLOW [228] -> SHIFT ">>" GOTO 145
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [228] -> SHIFT '[' GOTO 146
	expression/L8 = expression . "==" expression, FOLLOW [228] -> SHIFT "==" GOTO 147
	expression/L8 = expression . "!=" expression, FOLLOW [228] -> SHIFT "!=" GOTO 148
	expression/L8 = expression . ">=" expression, FOLLOW [228] -> SHIFT ">=" GOTO 149
	expression/L8 = expression . "<=" expression, FOLLOW [228] -> SHIFT "<=" GOTO 150
	expression/L8 = expression . ">" expression, FOLLOW [228] -> SHIFT '>' GOTO 151
	expression/L8 = expression . "<" expression, FOLLOW [228] -> SHIFT '<' GOTO 152
	expression/L3 = expression . "+=" expression, FOLLOW [228] -> SHIFT "+=" GOTO 153
	expression/L3 = expression . "-=" expression, FOLLOW [228] -> SHIFT "-=" GOTO 154
	expression/L3 = expression . "*=" expression, FOLLOW [228] -> SHIFT "*=" GOTO 155
	expression/L3 = expression . "/=" expression, FOLLOW [228] -> SHIFT "/=" GOTO 156
	expression/L3 = expression . "^=" expression, FOLLOW [228] -> SHIFT "^=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [228] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "&=" expression, FOLLOW [228] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "%=" expression, FOLLOW [228] -> SHIFT "%=" GOTO 159
	expression/L3 = expression . "&&=" expression, FOLLOW [228] -> SHIFT "&&=" GOTO 160
	expression/L3 = expression . "||=" expression, FOLLOW [228] -> SHIFT "||=" GOTO 161
	expression/L3 = expression . "|=" expression, FOLLOW [228] -> SHIFT "|=" GOTO 162
	expression/L3 = expression . "<<=" expression, FOLLOW [228] -> SHIFT "<<=" GOTO 163
	expression/L3 = expression . ">>=" expression, FOLLOW [228] -> SHIFT ">>=" GOTO 164
	expression/L12 = expression . "." IDENT, FOLLOW [228] -> SHIFT '.' GOTO 165
[282]
	expression/L1 = "new" typespec ":" . expression, FOLLOW [239] -> GOTO 310
	expression/L3 = . expression "=" expression, FOLLOW [239] -> GOTO 310
	expression/L3 = . expression "+=" expression, FOLLOW [239] -> GOTO 310
	expression/L3 = . expression "-=" expression, FOLLOW [239] -> GOTO 310
	expression/L3 = . expression "*=" expression, FOLLOW [239] -> GOTO 310
	expression/L3 = . expression "/=" expression, FOLLOW [239] -> GOTO 310
	expression/L3 = . expression "^=" expression, FOLLOW [239] -> GOTO 310
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 310
	expression/L3 = . expression "%=" expression, FOLLOW [239] -> GOTO 310
	expression/L3 = . expression "&&=" expression, FOLLOW [239] -> GOTO 310
	expression/L3 = . expression "||=" expression, FOLLOW [239] -> GOTO 310
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 310
	expression/L3 = . expression "|=" expression, FOLLOW [239] -> GOTO 310
	expression/L3 = . expression "<<=" expression, FOLLOW [239] -> GOTO 310
	expression/L3 = . expression ">>=" expression, FOLLOW [239] -> GOTO 310
	expression/L4 = . expression "||" expression, FOLLOW [239] -> GOTO 310
	expression/L5 = . expression "&&" expression, FOLLOW [239] -> GOTO 310
	expression/L6 = . expression "|" expression, FOLLOW [239] -> GOTO 310
	expression/L7 = . expression "^" expression, FOLLOW [239] -> GOTO 310
	expression/L7 = . expression "&" expression, FOLLOW [239] -> GOTO 310
	expression/L8 = . expression "==" expression, FOLLOW [239] -> GOTO 310
	expression/L8 = . expression "!=" expression, FOLLOW [239] -> GOTO 310
	expression/L8 = . expression "<=" expression, FOLLOW [239] -> GOTO 310
	expression/L8 = . expression "<" expression, FOLLOW [239] -> GOTO 310
	expression/L8 = . expression ">=" expression, FOLLOW [239] -> GOTO 310
	expression/L8 = . expression ">" expression, FOLLOW [239] -> GOTO 310
	expression/L9 = . expression "+" expression, FOLLOW [239] -> GOTO 310
	expression/L9 = . expression "-" expression, FOLLOW [239] -> GOTO 310
	expression/L10 = . expression "*" expression, FOLLOW [239] -> GOTO 310
	expression/L10 = . expression "/" expression, FOLLOW [239] -> GOTO 310
	expression/L10 = . expression "%" expression, FOLLOW [239] -> GOTO 310
	expression/L11 = . expression "<<" expression, FOLLOW [239] -> GOTO 310
	expression/L11 = . expression ">>" expression, FOLLOW [239] -> GOTO 310
	expression/L12 = . expression "." IDENT, FOLLOW [239] -> GOTO 310
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [239] -> GOTO 310
	expression/L13 = . expression "(" ")", FOLLOW [239] -> GOTO 310
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [239] -> GOTO 310
	iexpression = . expression indirection IDENT, FOLLOW [239] -> GOTO 310
	expression/L12 = . iexpression, FOLLOW [239] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [239] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [239] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [239] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [239] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [239] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [239] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [239] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [239] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [239] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [239] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [239] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [239] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [239] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [239] -> SHIFT "null" GOTO 92
[283]
	expression/L1 = "cast" typespec ":" . "{" expression "}", FOLLOW [239] -> SHIFT '{' GOTO 311
	expression/L1 = "cast" typespec ":" . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 311
[284]
	variabledefinition = typespec IDENT "[" expression "]" "=" . expression, FOLLOW [15] -> GOTO 312
	expression/L3 = . expression "=" expression, FOLLOW [97] -> GOTO 312
	expression/L3 = . expression "+=" expression, FOLLOW [97] -> GOTO 312
	expression/L3 = . expression "-=" expression, FOLLOW [97] -> GOTO 312
	expression/L3 = . expression "*=" expression, FOLLOW [97] -> GOTO 312
	expression/L3 = . expression "/=" expression, FOLLOW [97] -> GOTO 312
	expression/L3 = . expression "^=" expression, FOLLOW [97] -> GOTO 312
	expression/L3 = . expression "&=" expression, FOLLOW [97] -> GOTO 312
	expression/L3 = . expression "%=" expression, FOLLOW [97] -> GOTO 312
	expression/L3 = . expression "&&=" expression, FOLLOW [97] -> GOTO 312
	expression/L3 = . expression "||=" expression, FOLLOW [97] -> GOTO 312
	expression/L3 = . expression "&=" expression, FOLLOW [97] -> GOTO 312
	expression/L3 = . expression "|=" expression, FOLLOW [97] -> GOTO 312
	expression/L3 = . expression "<<=" expression, FOLLOW [97] -> GOTO 312
	expression/L3 = . expression ">>=" expression, FOLLOW [97] -> GOTO 312
	expression/L4 = . expression "||" expression, FOLLOW [97] -> GOTO 312
	expression/L5 = . expression "&&" expression, FOLLOW [97] -> GOTO 312
	expression/L6 = . expression "|" expression, FOLLOW [97] -> GOTO 312
	expression/L7 = . expression "^" expression, FOLLOW [97] -> GOTO 312
	expression/L7 = . expression "&" expression, FOLLOW [97] -> GOTO 312
	expression/L8 = . expression "==" expression, FOLLOW [97] -> GOTO 312
	expression/L8 = . expression "!=" expression, FOLLOW [97] -> GOTO 312
	expression/L8 = . expression "<=" expression, FOLLOW [97] -> GOTO 312
	expression/L8 = . expression "<" expression, FOLLOW [97] -> GOTO 312
	expression/L8 = . expression ">=" expression, FOLLOW [97] -> GOTO 312
	expression/L8 = . expression ">" expression, FOLLOW [97] -> GOTO 312
	expression/L9 = . expression "+" expression, FOLLOW [97] -> GOTO 312
	expression/L9 = . expression "-" expression, FOLLOW [97] -> GOTO 312
	expression/L10 = . expression "*" expression, FOLLOW [97] -> GOTO 312
	expression/L10 = . expression "/" expression, FOLLOW [97] -> GOTO 312
	expression/L10 = . expression "%" expression, FOLLOW [97] -> GOTO 312
	expression/L11 = . expression "<<" expression, FOLLOW [97] -> GOTO 312
	expression/L11 = . expression ">>" expression, FOLLOW [97] -> GOTO 312
	expression/L12 = . expression "." IDENT, FOLLOW [97] -> GOTO 312
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [97] -> GOTO 312
	expression/L13 = . expression "(" ")", FOLLOW [97] -> GOTO 312
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [97] -> GOTO 312
	iexpression = . expression indirection IDENT, FOLLOW [97] -> GOTO 312
	expression/L12 = . iexpression, FOLLOW [97] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [97] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [97] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [97] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [97] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [97] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [97] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [97] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [97] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [97] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [97] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [97] -> SHIFT '{' GOTO 95
	expression/L9 = . "+" expression, FOLLOW [97] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [97] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [97] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [97] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [97] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [97] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [97] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [97] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [97] -> SHIFT "null" GOTO 92
[285]
	paramdecl = typespec IDENT . (72), FOLLOW [184] -> REDUCE paramdecl #2 CALL paramdef
[286]
	callablebody_const = "(" parameterlist ")" . "const" "{" codeblock "}", FOLLOW [252] -> SHIFT "const" GOTO 313
	callablebody = "(" parameterlist ")" . "{" codeblock "}", FOLLOW [252] -> SHIFT '{' GOTO 314
[287]
	typespec/L1 = . typename, FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [13] -> GOTO 8
	paramdecl = . typespec IDENT, FOLLOW [184] -> GOTO 188
	parameters = paramdecl "," . parameters, FOLLOW [10] -> GOTO 315
	parameters = . paramdecl "," parameters, FOLLOW [10] -> GOTO 191
	parameters = . paramdecl, FOLLOW [10] -> GOTO 191
	typename/L1 = . IDENT, FOLLOW [62] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [62] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [13] -> SHIFT "const" GOTO 18
[288]
	interface_definition = "function" IDENT typespec . "(" extern_paramlist ")" ";", FOLLOW [171] -> SHIFT '(' GOTO 316
	interface_definition = "function" IDENT typespec . "(" extern_paramlist ")" "const" ";", FOLLOW [171] -> SHIFT '(' GOTO 316
[289]
	extern_paramlist = . extern_parameters, FOLLOW [10] -> GOTO 233
	interface_definition = "procedure" IDENT "(" . extern_paramlist ")" ";", FOLLOW [171] -> GOTO 317
	interface_definition = "procedure" IDENT "(" . extern_paramlist ")" "const" ";", FOLLOW [171] -> GOTO 317
	typespec/L1 = . typename, FOLLOW [237] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [237] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [237] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [237] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [237] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [237] -> GOTO 8
	extern_parameters = . typespec "," extern_parameters, FOLLOW [10] -> GOTO 235
	extern_parameters = . typespec IDENT "," extern_parameters, FOLLOW [10] -> GOTO 235
	extern_parameters = . typespec, FOLLOW [10] -> GOTO 235
	extern_parameters = . typespec IDENT, FOLLOW [10] -> GOTO 235
	typename/L1 = . IDENT, FOLLOW [238] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [238] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [237] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [237] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [237] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [237] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [237] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [237] -> SHIFT "const" GOTO 18
	extern_paramlist = . (6), FOLLOW [10] -> REDUCE extern_paramlist #0 CALL extern_paramdeflist
[290]
	interface_definition = "operator" operatordecl typespec . "(" extern_paramlist ")" ";", FOLLOW [171] -> SHIFT '(' GOTO 318
	interface_definition = "operator" operatordecl typespec . "(" extern_paramlist ")" "const" ";", FOLLOW [171] -> SHIFT '(' GOTO 318
[291]
	extern_paramlist = . extern_parameters, FOLLOW [10] -> GOTO 233
	interface_definition = "operator" operatordecl "(" . extern_paramlist ")" ";", FOLLOW [171] -> GOTO 319
	interface_definition = "operator" operatordecl "(" . extern_paramlist ")" "const" ";", FOLLOW [171] -> GOTO 319
	typespec/L1 = . typename, FOLLOW [237] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [237] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [237] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [237] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [237] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [237] -> GOTO 8
	extern_parameters = . typespec "," extern_parameters, FOLLOW [10] -> GOTO 235
	extern_parameters = . typespec IDENT "," extern_parameters, FOLLOW [10] -> GOTO 235
	extern_parameters = . typespec, FOLLOW [10] -> GOTO 235
	extern_parameters = . typespec IDENT, FOLLOW [10] -> GOTO 235
	typename/L1 = . IDENT, FOLLOW [238] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [238] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [237] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [237] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [237] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [237] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [237] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [237] -> SHIFT "const" GOTO 18
	extern_paramlist = . (6), FOLLOW [10] -> REDUCE extern_paramlist #0 CALL extern_paramdeflist
[292]
	operatordecl = "(" ")" . (61), FOLLOW [185] -> REDUCE operatordecl #2 CALL operatordecl {name="()",symbol="call"}
[293]
	operatordecl = "[" "]" . (62), FOLLOW [185] -> REDUCE operatordecl #2 CALL operatordecl {name="[]",symbol="get"}
[294]
	typespec/L1 = . typename, FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [9] -> GOTO 8
	operatordefinition = linkage "operator" operatordecl . typespec callablebody, FOLLOW [174] -> GOTO 320
	operatordefinition = linkage "operator" operatordecl . typespec callablebody_const, FOLLOW [174] -> GOTO 320
	operatordefinition = linkage "operator" operatordecl . callablebody, FOLLOW [174] -> GOTO 321
	operatordefinition = linkage "operator" operatordecl . callablebody_const, FOLLOW [174] -> GOTO 322
	typename/L1 = . IDENT, FOLLOW [168] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [168] -> SHIFT IDENT GOTO 17
	callablebody = . "(" parameterlist ")" "{" codeblock "}", FOLLOW [174] -> SHIFT '(' GOTO 100
	callablebody_const = . "(" parameterlist ")" "const" "{" codeblock "}", FOLLOW [174] -> SHIFT '(' GOTO 100
	typespec/L1 = . "const" typename, FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
[295]
	constructordefinition = linkage "constructor" callablebody . (40), FOLLOW [174] -> REDUCE constructordefinition #3 CALL constructordef
[296]
	typespec/L1 = . typename, FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [13] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [13] -> GOTO 8
	paramdecl = . typespec IDENT, FOLLOW [184] -> GOTO 188
	callablebody = "(" . parameterlist ")" "{" codeblock "}", FOLLOW [174] -> GOTO 323
	parameterlist = . parameters, FOLLOW [10] -> GOTO 190
	parameters = . paramdecl "," parameters, FOLLOW [10] -> GOTO 191
	parameters = . paramdecl, FOLLOW [10] -> GOTO 191
	typename/L1 = . IDENT, FOLLOW [62] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [62] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [13] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [13] -> SHIFT "const" GOTO 18
	parameterlist = . (71), FOLLOW [10] -> REDUCE parameterlist #0 CALL paramdeflist
[297]
	constructordefinition = "destructor" "{" codeblock . "}", FOLLOW [174] -> SHIFT '}' GOTO 324
[298]
	inheritlist = typepath "," inheritlist . (step:32), FOLLOW [19] -> REDUCE inheritlist #3 CALL inheritdef 1
[299]
	classdefinition = "class" IDENT ":" inheritlist "{" class_definitionlist . "}", FOLLOW [175] -> SHIFT '}' GOTO 325
[300]
	extern_definition = "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist . ")" ";", FOLLOW [59] -> SHIFT ')' GOTO 326
	extern_definition = "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist . "..." ")" ";", FOLLOW [59] -> SHIFT "..." GOTO 327
[301]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist ")" . ";", FOLLOW [59] -> SHIFT ';' GOTO 328
[302]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist "..." . ")" ";", FOLLOW [59] -> SHIFT ')' GOTO 329
[303]
	extern_parameters = typespec IDENT . "," extern_parameters, FOLLOW [186] -> SHIFT ',' GOTO 330
	extern_parameters = typespec IDENT ., FOLLOW [186] -> REDUCE extern_parameters #2
[304]
	extern_parameters = typespec "," . extern_parameters, FOLLOW [186] -> GOTO 331
	typespec/L1 = . typename, FOLLOW [189] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [189] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [189] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [189] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [189] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [189] -> GOTO 8
	extern_parameters = . typespec "," extern_parameters, FOLLOW [186] -> GOTO 235
	extern_parameters = . typespec IDENT "," extern_parameters, FOLLOW [186] -> GOTO 235
	extern_parameters = . typespec, FOLLOW [186] -> GOTO 235
	extern_parameters = . typespec IDENT, FOLLOW [186] -> GOTO 235
	typename/L1 = . IDENT, FOLLOW [190] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [190] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [189] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [189] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [189] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [189] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [189] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [189] -> SHIFT "const" GOTO 18
[305]
	expression/L13 = expression "(" expressionlist ")" . (131), FOLLOW [239] -> REDUCE expression #4 CALL operator "()"
[306]
	expression/L13 = expression "[" expressionlist "]" . (132), FOLLOW [239] -> REDUCE expression #4 CALL operator "[]"
[307]
	expressionlist = expression "," expressionlist ., FOLLOW [263] -> REDUCE expressionlist #3
[308]
	statement/L1 = "if" "(" expression ")" . "{" codeblock "}", FOLLOW [98] -> SHIFT '{' GOTO 332
	statement/L1 = "if" "(" expression ")" . "{" codeblock "}" "else" "{" codeblock "}", FOLLOW [98] -> SHIFT '{' GOTO 332
[309]
	statement/L1 = "while" "(" expression ")" . "{" codeblock "}", FOLLOW [98] -> SHIFT '{' GOTO 333
[310]
	iexpression = expression . indirection IDENT, FOLLOW [239] -> GOTO 129
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [239] -> SHIFT '(' GOTO 130
	expression/L13 = expression . "(" ")", FOLLOW [239] -> SHIFT '(' GOTO 130
	expression/L7 = expression . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 132
	expression/L7 = expression . "^" expression, FOLLOW [239] -> SHIFT '^' GOTO 133
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 134
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 134
	expression/L3 = expression . "=" expression, FOLLOW [239] -> SHIFT '=' GOTO 135
	expression/L9 = expression . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 136
	expression/L9 = expression . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 137
	expression/L10 = expression . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 138
	expression/L10 = expression . "/" expression, FOLLOW [239] -> SHIFT '/' GOTO 139
	expression/L10 = expression . "%" expression, FOLLOW [239] -> SHIFT '%' GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [239] -> SHIFT "&&" GOTO 141
	expression/L4 = expression . "||" expression, FOLLOW [239] -> SHIFT "||" GOTO 142
	expression/L6 = expression . "|" expression, FOLLOW [239] -> SHIFT '|' GOTO 143
	expression/L11 = expression . "<<" expression, FOLLOW [239] -> SHIFT "<<" GOTO 144
	expression/L11 = expression . ">>" expression, FOLLOW [239] -> SHIFT ">>" GOTO 145
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [239] -> SHIFT '[' GOTO 146
	expression/L8 = expression . "==" expression, FOLLOW [239] -> SHIFT "==" GOTO 147
	expression/L8 = expression . "!=" expression, FOLLOW [239] -> SHIFT "!=" GOTO 148
	expression/L8 = expression . ">=" expression, FOLLOW [239] -> SHIFT ">=" GOTO 149
	expression/L8 = expression . "<=" expression, FOLLOW [239] -> SHIFT "<=" GOTO 150
	expression/L8 = expression . ">" expression, FOLLOW [239] -> SHIFT '>' GOTO 151
	expression/L8 = expression . "<" expression, FOLLOW [239] -> SHIFT '<' GOTO 152
	expression/L3 = expression . "+=" expression, FOLLOW [239] -> SHIFT "+=" GOTO 153
	expression/L3 = expression . "-=" expression, FOLLOW [239] -> SHIFT "-=" GOTO 154
	expression/L3 = expression . "*=" expression, FOLLOW [239] -> SHIFT "*=" GOTO 155
	expression/L3 = expression . "/=" expression, FOLLOW [239] -> SHIFT "/=" GOTO 156
	expression/L3 = expression . "^=" expression, FOLLOW [239] -> SHIFT "^=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "%=" expression, FOLLOW [239] -> SHIFT "%=" GOTO 159
	expression/L3 = expression . "&&=" expression, FOLLOW [239] -> SHIFT "&&=" GOTO 160
	expression/L3 = expression . "||=" expression, FOLLOW [239] -> SHIFT "||=" GOTO 161
	expression/L3 = expression . "|=" expression, FOLLOW [239] -> SHIFT "|=" GOTO 162
	expression/L3 = expression . "<<=" expression, FOLLOW [239] -> SHIFT "<<=" GOTO 163
	expression/L3 = expression . ">>=" expression, FOLLOW [239] -> SHIFT ">>=" GOTO 164
	expression/L12 = expression . "." IDENT, FOLLOW [239] -> SHIFT '.' GOTO 165
	expression/L1 = "new" typespec ":" expression . (86), FOLLOW [239] -> REDUCE expression #4 CALL allocate
[311]
	expression/L1 = "cast" typespec ":" "{" . expression "}", FOLLOW [239] -> GOTO 334
	expression/L3 = . expression "=" expression, FOLLOW [239] -> GOTO 334
	expression/L3 = . expression "+=" expression, FOLLOW [239] -> GOTO 334
	expression/L3 = . expression "-=" expression, FOLLOW [239] -> GOTO 334
	expression/L3 = . expression "*=" expression, FOLLOW [239] -> GOTO 334
	expression/L3 = . expression "/=" expression, FOLLOW [239] -> GOTO 334
	expression/L3 = . expression "^=" expression, FOLLOW [239] -> GOTO 334
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 334
	expression/L3 = . expression "%=" expression, FOLLOW [239] -> GOTO 334
	expression/L3 = . expression "&&=" expression, FOLLOW [239] -> GOTO 334
	expression/L3 = . expression "||=" expression, FOLLOW [239] -> GOTO 334
	expression/L3 = . expression "&=" expression, FOLLOW [239] -> GOTO 334
	expression/L3 = . expression "|=" expression, FOLLOW [239] -> GOTO 334
	expression/L3 = . expression "<<=" expression, FOLLOW [239] -> GOTO 334
	expression/L3 = . expression ">>=" expression, FOLLOW [239] -> GOTO 334
	expression/L4 = . expression "||" expression, FOLLOW [239] -> GOTO 334
	expression/L5 = . expression "&&" expression, FOLLOW [239] -> GOTO 334
	expression/L6 = . expression "|" expression, FOLLOW [239] -> GOTO 334
	expression/L7 = . expression "^" expression, FOLLOW [239] -> GOTO 334
	expression/L7 = . expression "&" expression, FOLLOW [239] -> GOTO 334
	expression/L8 = . expression "==" expression, FOLLOW [239] -> GOTO 334
	expression/L8 = . expression "!=" expression, FOLLOW [239] -> GOTO 334
	expression/L8 = . expression "<=" expression, FOLLOW [239] -> GOTO 334
	expression/L8 = . expression "<" expression, FOLLOW [239] -> GOTO 334
	expression/L8 = . expression ">=" expression, FOLLOW [239] -> GOTO 334
	expression/L8 = . expression ">" expression, FOLLOW [239] -> GOTO 334
	expression/L9 = . expression "+" expression, FOLLOW [239] -> GOTO 334
	expression/L9 = . expression "-" expression, FOLLOW [239] -> GOTO 334
	expression/L10 = . expression "*" expression, FOLLOW [239] -> GOTO 334
	expression/L10 = . expression "/" expression, FOLLOW [239] -> GOTO 334
	expression/L10 = . expression "%" expression, FOLLOW [239] -> GOTO 334
	expression/L11 = . expression "<<" expression, FOLLOW [239] -> GOTO 334
	expression/L11 = . expression ">>" expression, FOLLOW [239] -> GOTO 334
	expression/L12 = . expression "." IDENT, FOLLOW [239] -> GOTO 334
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [239] -> GOTO 334
	expression/L13 = . expression "(" ")", FOLLOW [239] -> GOTO 334
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [239] -> GOTO 334
	iexpression = . expression indirection IDENT, FOLLOW [239] -> GOTO 334
	expression/L12 = . iexpression, FOLLOW [239] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [239] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [239] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [239] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [239] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [239] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [239] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [239] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [239] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [239] -> SHIFT '{' GOTO 95
	expression/L1 = . "{" "}", FOLLOW [239] -> SHIFT '{' GOTO 95
	expression/L1 = "cast" typespec ":" "{" . "}", FOLLOW [239] -> SHIFT '}' GOTO 335
	expression/L9 = . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [239] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [239] -> SHIFT '!' GOTO 84
	expression/L1 = . "new" typespec ":" expression, FOLLOW [239] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [239] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [239] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [239] -> SHIFT "null" GOTO 92
[312]
	iexpression = expression . indirection IDENT, FOLLOW [97] -> GOTO 129
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [97] -> SHIFT '(' GOTO 130
	expression/L13 = expression . "(" ")", FOLLOW [97] -> SHIFT '(' GOTO 130
	expression/L7 = expression . "&" expression, FOLLOW [97] -> SHIFT '&' GOTO 132
	expression/L7 = expression . "^" expression, FOLLOW [97] -> SHIFT '^' GOTO 133
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 134
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 134
	expression/L3 = expression . "=" expression, FOLLOW [97] -> SHIFT '=' GOTO 135
	expression/L9 = expression . "+" expression, FOLLOW [97] -> SHIFT '+' GOTO 136
	expression/L9 = expression . "-" expression, FOLLOW [97] -> SHIFT '-' GOTO 137
	expression/L10 = expression . "*" expression, FOLLOW [97] -> SHIFT '*' GOTO 138
	expression/L10 = expression . "/" expression, FOLLOW [97] -> SHIFT '/' GOTO 139
	expression/L10 = expression . "%" expression, FOLLOW [97] -> SHIFT '%' GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [97] -> SHIFT "&&" GOTO 141
	expression/L4 = expression . "||" expression, FOLLOW [97] -> SHIFT "||" GOTO 142
	expression/L6 = expression . "|" expression, FOLLOW [97] -> SHIFT '|' GOTO 143
	expression/L11 = expression . "<<" expression, FOLLOW [97] -> SHIFT "<<" GOTO 144
	expression/L11 = expression . ">>" expression, FOLLOW [97] -> SHIFT ">>" GOTO 145
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [97] -> SHIFT '[' GOTO 146
	expression/L8 = expression . "==" expression, FOLLOW [97] -> SHIFT "==" GOTO 147
	expression/L8 = expression . "!=" expression, FOLLOW [97] -> SHIFT "!=" GOTO 148
	expression/L8 = expression . ">=" expression, FOLLOW [97] -> SHIFT ">=" GOTO 149
	expression/L8 = expression . "<=" expression, FOLLOW [97] -> SHIFT "<=" GOTO 150
	expression/L8 = expression . ">" expression, FOLLOW [97] -> SHIFT '>' GOTO 151
	expression/L8 = expression . "<" expression, FOLLOW [97] -> SHIFT '<' GOTO 152
	expression/L3 = expression . "+=" expression, FOLLOW [97] -> SHIFT "+=" GOTO 153
	expression/L3 = expression . "-=" expression, FOLLOW [97] -> SHIFT "-=" GOTO 154
	expression/L3 = expression . "*=" expression, FOLLOW [97] -> SHIFT "*=" GOTO 155
	expression/L3 = expression . "/=" expression, FOLLOW [97] -> SHIFT "/=" GOTO 156
	expression/L3 = expression . "^=" expression, FOLLOW [97] -> SHIFT "^=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [97] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "&=" expression, FOLLOW [97] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "%=" expression, FOLLOW [97] -> SHIFT "%=" GOTO 159
	expression/L3 = expression . "&&=" expression, FOLLOW [97] -> SHIFT "&&=" GOTO 160
	expression/L3 = expression . "||=" expression, FOLLOW [97] -> SHIFT "||=" GOTO 161
	expression/L3 = expression . "|=" expression, FOLLOW [97] -> SHIFT "|=" GOTO 162
	expression/L3 = expression . "<<=" expression, FOLLOW [97] -> SHIFT "<<=" GOTO 163
	expression/L3 = expression . ">>=" expression, FOLLOW [97] -> SHIFT ">>=" GOTO 164
	expression/L12 = expression . "." IDENT, FOLLOW [97] -> SHIFT '.' GOTO 165
	variabledefinition = typespec IDENT "[" expression "]" "=" expression . (step:83), FOLLOW [15] -> REDUCE variabledefinition #7 CALL vardef_array_assign
[313]
	callablebody_const = "(" parameterlist ")" "const" . "{" codeblock "}", FOLLOW [252] -> SHIFT '{' GOTO 336
[314]
	statement/L1 = . typedefinition ";", FOLLOW [98] -> GOTO 63
	functiondefinition = . linkage "function" IDENT typespec callablebody, FOLLOW [98] -> GOTO 14
	functiondefinition = . linkage "function" IDENT typespec callablebody_const, FOLLOW [98] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [98] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody_const, FOLLOW [98] -> GOTO 14
	statement/L1 = . functiondefinition, FOLLOW [98] -> GOTO 64
	callablebody = "(" parameterlist ")" "{" . codeblock "}", FOLLOW [252] -> GOTO 337
	codeblock = . statementlist, FOLLOW [18] -> GOTO 66
	statementlist = . statement statementlist, FOLLOW [18] -> GOTO 67
	statement/L1 = . expression ";", FOLLOW [98] -> GOTO 68
	expression/L3 = . expression "=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "+=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "-=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "*=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "/=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "^=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "&=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "%=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "&&=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "||=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "&=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "|=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "<<=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression ">>=" expression, FOLLOW [97] -> GOTO 68
	expression/L4 = . expression "||" expression, FOLLOW [97] -> GOTO 68
	expression/L5 = . expression "&&" expression, FOLLOW [97] -> GOTO 68
	expression/L6 = . expression "|" expression, FOLLOW [97] -> GOTO 68
	expression/L7 = . expression "^" expression, FOLLOW [97] -> GOTO 68
	expression/L7 = . expression "&" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression "==" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression "!=" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression "<=" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression "<" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression ">=" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression ">" expression, FOLLOW [97] -> GOTO 68
	expression/L9 = . expression "+" expression, FOLLOW [97] -> GOTO 68
	expression/L9 = . expression "-" expression, FOLLOW [97] -> GOTO 68
	expression/L10 = . expression "*" expression, FOLLOW [97] -> GOTO 68
	expression/L10 = . expression "/" expression, FOLLOW [97] -> GOTO 68
	expression/L10 = . expression "%" expression, FOLLOW [97] -> GOTO 68
	expression/L11 = . expression "<<" expression, FOLLOW [97] -> GOTO 68
	expression/L11 = . expression ">>" expression, FOLLOW [97] -> GOTO 68
	expression/L12 = . expression "." IDENT, FOLLOW [97] -> GOTO 68
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [97] -> GOTO 68
	expression/L13 = . expression "(" ")", FOLLOW [97] -> GOTO 68
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [97] -> GOTO 68
	iexpression = . expression indirection IDENT, FOLLOW [97] -> GOTO 68
	expression/L12 = . iexpression, FOLLOW [97] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [97] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [97] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [97] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [97] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [97] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [97] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [97] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [97] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [97] -> SHIFT '&' GOTO 78
	typedefinition = . "typedef" typepath IDENT, FOLLOW [15] -> SHIFT "typedef" GOTO 19
	statement/L1 = . "{" codeblock "}", FOLLOW [98] -> SHIFT '{' GOTO 79
	expression/L1 = . "{" expressionlist "}", FOLLOW [97] -> SHIFT '{' GOTO 79
	expression/L1 = . "{" "}", FOLLOW [97] -> SHIFT '{' GOTO 79
	linkage = . "private", FOLLOW [61] -> SHIFT "private" GOTO 23
	linkage = . "public", FOLLOW [61] -> SHIFT "public" GOTO 24
	expression/L9 = . "+" expression, FOLLOW [97] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [97] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [97] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [97] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [97] -> SHIFT '!' GOTO 84
	statement/L1 = . "var" variabledefinition ";", FOLLOW [98] -> SHIFT "var" GOTO 85
	statement/L1 = . "return" expression ";", FOLLOW [98] -> SHIFT "return" GOTO 86
	statement/L1 = . "delete" expression ";", FOLLOW [98] -> SHIFT "delete" GOTO 87
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}", FOLLOW [98] -> SHIFT "if" GOTO 88
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}", FOLLOW [98] -> SHIFT "if" GOTO 88
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}", FOLLOW [98] -> SHIFT "while" GOTO 89
	expression/L1 = . "new" typespec ":" expression, FOLLOW [97] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [97] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [97] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [97] -> SHIFT "null" GOTO 92
	statementlist = ., FOLLOW [18] -> REDUCE statementlist #0
	linkage = . (35), FOLLOW [61] -> REDUCE linkage #0 CALL linkage {private=false,linkage="external"}
[315]
	parameters = paramdecl "," parameters ., FOLLOW [10] -> REDUCE parameters #3
[316]
	extern_paramlist = . extern_parameters, FOLLOW [10] -> GOTO 233
	interface_definition = "function" IDENT typespec "(" . extern_paramlist ")" ";", FOLLOW [171] -> GOTO 338
	interface_definition = "function" IDENT typespec "(" . extern_paramlist ")" "const" ";", FOLLOW [171] -> GOTO 338
	typespec/L1 = . typename, FOLLOW [237] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [237] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [237] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [237] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [237] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [237] -> GOTO 8
	extern_parameters = . typespec "," extern_parameters, FOLLOW [10] -> GOTO 235
	extern_parameters = . typespec IDENT "," extern_parameters, FOLLOW [10] -> GOTO 235
	extern_parameters = . typespec, FOLLOW [10] -> GOTO 235
	extern_parameters = . typespec IDENT, FOLLOW [10] -> GOTO 235
	typename/L1 = . IDENT, FOLLOW [238] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [238] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [237] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [237] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [237] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [237] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [237] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [237] -> SHIFT "const" GOTO 18
	extern_paramlist = . (6), FOLLOW [10] -> REDUCE extern_paramlist #0 CALL extern_paramdeflist
[317]
	interface_definition = "procedure" IDENT "(" extern_paramlist . ")" ";", FOLLOW [171] -> SHIFT ')' GOTO 339
	interface_definition = "procedure" IDENT "(" extern_paramlist . ")" "const" ";", FOLLOW [171] -> SHIFT ')' GOTO 339
[318]
	extern_paramlist = . extern_parameters, FOLLOW [10] -> GOTO 233
	interface_definition = "operator" operatordecl typespec "(" . extern_paramlist ")" ";", FOLLOW [171] -> GOTO 340
	interface_definition = "operator" operatordecl typespec "(" . extern_paramlist ")" "const" ";", FOLLOW [171] -> GOTO 340
	typespec/L1 = . typename, FOLLOW [237] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [237] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [237] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [237] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [237] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [237] -> GOTO 8
	extern_parameters = . typespec "," extern_parameters, FOLLOW [10] -> GOTO 235
	extern_parameters = . typespec IDENT "," extern_parameters, FOLLOW [10] -> GOTO 235
	extern_parameters = . typespec, FOLLOW [10] -> GOTO 235
	extern_parameters = . typespec IDENT, FOLLOW [10] -> GOTO 235
	typename/L1 = . IDENT, FOLLOW [238] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [238] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [237] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [237] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [237] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [237] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [237] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [237] -> SHIFT "const" GOTO 18
	extern_paramlist = . (6), FOLLOW [10] -> REDUCE extern_paramlist #0 CALL extern_paramdeflist
[319]
	interface_definition = "operator" operatordecl "(" extern_paramlist . ")" ";", FOLLOW [171] -> SHIFT ')' GOTO 341
	interface_definition = "operator" operatordecl "(" extern_paramlist . ")" "const" ";", FOLLOW [171] -> SHIFT ')' GOTO 341
[320]
	operatordefinition = linkage "operator" operatordecl typespec . callablebody, FOLLOW [174] -> GOTO 342
	operatordefinition = linkage "operator" operatordecl typespec . callablebody_const, FOLLOW [174] -> GOTO 343
	callablebody = . "(" parameterlist ")" "{" codeblock "}", FOLLOW [174] -> SHIFT '(' GOTO 100
	callablebody_const = . "(" parameterlist ")" "const" "{" codeblock "}", FOLLOW [174] -> SHIFT '(' GOTO 100
[321]
	operatordefinition = linkage "operator" operatordecl callablebody . (44), FOLLOW [174] -> REDUCE operatordefinition #4 CALL operator_procdef {const=false}
[322]
	operatordefinition = linkage "operator" operatordecl callablebody_const . (45), FOLLOW [174] -> REDUCE operatordefinition #4 CALL operator_procdef {const=true}
[323]
	callablebody = "(" parameterlist . ")" "{" codeblock "}", FOLLOW [174] -> SHIFT ')' GOTO 344
[324]
	constructordefinition = "destructor" "{" codeblock "}" . (41), FOLLOW [174] -> REDUCE constructordefinition #4 CALL destructordef
[325]
	classdefinition = "class" IDENT ":" inheritlist "{" class_definitionlist "}" . (step:33), FOLLOW [175] -> REDUCE classdefinition #7 CALL classdef
[326]
	extern_definition = "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist ")" . ";", FOLLOW [59] -> SHIFT ';' GOTO 345
[327]
	extern_definition = "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist "..." . ")" ";", FOLLOW [59] -> SHIFT ')' GOTO 346
[328]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist ")" ";" . (3), FOLLOW [59] -> REDUCE extern_definition #8 CALL extern_procdef
[329]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist "..." ")" . ";", FOLLOW [59] -> SHIFT ';' GOTO 347
[330]
	extern_parameters = typespec IDENT "," . extern_parameters, FOLLOW [186] -> GOTO 348
	typespec/L1 = . typename, FOLLOW [189] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [189] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [189] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [189] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [189] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [189] -> GOTO 8
	extern_parameters = . typespec "," extern_parameters, FOLLOW [186] -> GOTO 235
	extern_parameters = . typespec IDENT "," extern_parameters, FOLLOW [186] -> GOTO 235
	extern_parameters = . typespec, FOLLOW [186] -> GOTO 235
	extern_parameters = . typespec IDENT, FOLLOW [186] -> GOTO 235
	typename/L1 = . IDENT, FOLLOW [190] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [190] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [189] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [189] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [189] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [189] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [189] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [189] -> SHIFT "const" GOTO 18
[331]
	extern_parameters = typespec "," extern_parameters ., FOLLOW [186] -> REDUCE extern_parameters #3
[332]
	statement/L1 = . typedefinition ";", FOLLOW [98] -> GOTO 63
	functiondefinition = . linkage "function" IDENT typespec callablebody, FOLLOW [98] -> GOTO 14
	functiondefinition = . linkage "function" IDENT typespec callablebody_const, FOLLOW [98] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [98] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody_const, FOLLOW [98] -> GOTO 14
	statement/L1 = . functiondefinition, FOLLOW [98] -> GOTO 64
	statement/L1 = "if" "(" expression ")" "{" . codeblock "}", FOLLOW [98] -> GOTO 349
	statement/L1 = "if" "(" expression ")" "{" . codeblock "}" "else" "{" codeblock "}", FOLLOW [98] -> GOTO 349
	codeblock = . statementlist, FOLLOW [18] -> GOTO 66
	statementlist = . statement statementlist, FOLLOW [18] -> GOTO 67
	statement/L1 = . expression ";", FOLLOW [98] -> GOTO 68
	expression/L3 = . expression "=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "+=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "-=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "*=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "/=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "^=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "&=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "%=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "&&=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "||=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "&=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "|=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "<<=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression ">>=" expression, FOLLOW [97] -> GOTO 68
	expression/L4 = . expression "||" expression, FOLLOW [97] -> GOTO 68
	expression/L5 = . expression "&&" expression, FOLLOW [97] -> GOTO 68
	expression/L6 = . expression "|" expression, FOLLOW [97] -> GOTO 68
	expression/L7 = . expression "^" expression, FOLLOW [97] -> GOTO 68
	expression/L7 = . expression "&" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression "==" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression "!=" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression "<=" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression "<" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression ">=" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression ">" expression, FOLLOW [97] -> GOTO 68
	expression/L9 = . expression "+" expression, FOLLOW [97] -> GOTO 68
	expression/L9 = . expression "-" expression, FOLLOW [97] -> GOTO 68
	expression/L10 = . expression "*" expression, FOLLOW [97] -> GOTO 68
	expression/L10 = . expression "/" expression, FOLLOW [97] -> GOTO 68
	expression/L10 = . expression "%" expression, FOLLOW [97] -> GOTO 68
	expression/L11 = . expression "<<" expression, FOLLOW [97] -> GOTO 68
	expression/L11 = . expression ">>" expression, FOLLOW [97] -> GOTO 68
	expression/L12 = . expression "." IDENT, FOLLOW [97] -> GOTO 68
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [97] -> GOTO 68
	expression/L13 = . expression "(" ")", FOLLOW [97] -> GOTO 68
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [97] -> GOTO 68
	iexpression = . expression indirection IDENT, FOLLOW [97] -> GOTO 68
	expression/L12 = . iexpression, FOLLOW [97] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [97] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [97] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [97] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [97] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [97] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [97] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [97] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [97] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [97] -> SHIFT '&' GOTO 78
	typedefinition = . "typedef" typepath IDENT, FOLLOW [15] -> SHIFT "typedef" GOTO 19
	statement/L1 = . "{" codeblock "}", FOLLOW [98] -> SHIFT '{' GOTO 79
	expression/L1 = . "{" expressionlist "}", FOLLOW [97] -> SHIFT '{' GOTO 79
	expression/L1 = . "{" "}", FOLLOW [97] -> SHIFT '{' GOTO 79
	linkage = . "private", FOLLOW [61] -> SHIFT "private" GOTO 23
	linkage = . "public", FOLLOW [61] -> SHIFT "public" GOTO 24
	expression/L9 = . "+" expression, FOLLOW [97] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [97] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [97] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [97] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [97] -> SHIFT '!' GOTO 84
	statement/L1 = . "var" variabledefinition ";", FOLLOW [98] -> SHIFT "var" GOTO 85
	statement/L1 = . "return" expression ";", FOLLOW [98] -> SHIFT "return" GOTO 86
	statement/L1 = . "delete" expression ";", FOLLOW [98] -> SHIFT "delete" GOTO 87
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}", FOLLOW [98] -> SHIFT "if" GOTO 88
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}", FOLLOW [98] -> SHIFT "if" GOTO 88
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}", FOLLOW [98] -> SHIFT "while" GOTO 89
	expression/L1 = . "new" typespec ":" expression, FOLLOW [97] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [97] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [97] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [97] -> SHIFT "null" GOTO 92
	statementlist = ., FOLLOW [18] -> REDUCE statementlist #0
	linkage = . (35), FOLLOW [61] -> REDUCE linkage #0 CALL linkage {private=false,linkage="external"}
[333]
	statement/L1 = . typedefinition ";", FOLLOW [98] -> GOTO 63
	functiondefinition = . linkage "function" IDENT typespec callablebody, FOLLOW [98] -> GOTO 14
	functiondefinition = . linkage "function" IDENT typespec callablebody_const, FOLLOW [98] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [98] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody_const, FOLLOW [98] -> GOTO 14
	statement/L1 = . functiondefinition, FOLLOW [98] -> GOTO 64
	statement/L1 = "while" "(" expression ")" "{" . codeblock "}", FOLLOW [98] -> GOTO 350
	codeblock = . statementlist, FOLLOW [18] -> GOTO 66
	statementlist = . statement statementlist, FOLLOW [18] -> GOTO 67
	statement/L1 = . expression ";", FOLLOW [98] -> GOTO 68
	expression/L3 = . expression "=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "+=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "-=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "*=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "/=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "^=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "&=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "%=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "&&=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "||=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "&=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "|=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "<<=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression ">>=" expression, FOLLOW [97] -> GOTO 68
	expression/L4 = . expression "||" expression, FOLLOW [97] -> GOTO 68
	expression/L5 = . expression "&&" expression, FOLLOW [97] -> GOTO 68
	expression/L6 = . expression "|" expression, FOLLOW [97] -> GOTO 68
	expression/L7 = . expression "^" expression, FOLLOW [97] -> GOTO 68
	expression/L7 = . expression "&" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression "==" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression "!=" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression "<=" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression "<" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression ">=" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression ">" expression, FOLLOW [97] -> GOTO 68
	expression/L9 = . expression "+" expression, FOLLOW [97] -> GOTO 68
	expression/L9 = . expression "-" expression, FOLLOW [97] -> GOTO 68
	expression/L10 = . expression "*" expression, FOLLOW [97] -> GOTO 68
	expression/L10 = . expression "/" expression, FOLLOW [97] -> GOTO 68
	expression/L10 = . expression "%" expression, FOLLOW [97] -> GOTO 68
	expression/L11 = . expression "<<" expression, FOLLOW [97] -> GOTO 68
	expression/L11 = . expression ">>" expression, FOLLOW [97] -> GOTO 68
	expression/L12 = . expression "." IDENT, FOLLOW [97] -> GOTO 68
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [97] -> GOTO 68
	expression/L13 = . expression "(" ")", FOLLOW [97] -> GOTO 68
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [97] -> GOTO 68
	iexpression = . expression indirection IDENT, FOLLOW [97] -> GOTO 68
	expression/L12 = . iexpression, FOLLOW [97] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [97] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [97] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [97] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [97] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [97] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [97] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [97] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [97] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [97] -> SHIFT '&' GOTO 78
	typedefinition = . "typedef" typepath IDENT, FOLLOW [15] -> SHIFT "typedef" GOTO 19
	statement/L1 = . "{" codeblock "}", FOLLOW [98] -> SHIFT '{' GOTO 79
	expression/L1 = . "{" expressionlist "}", FOLLOW [97] -> SHIFT '{' GOTO 79
	expression/L1 = . "{" "}", FOLLOW [97] -> SHIFT '{' GOTO 79
	linkage = . "private", FOLLOW [61] -> SHIFT "private" GOTO 23
	linkage = . "public", FOLLOW [61] -> SHIFT "public" GOTO 24
	expression/L9 = . "+" expression, FOLLOW [97] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [97] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [97] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [97] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [97] -> SHIFT '!' GOTO 84
	statement/L1 = . "var" variabledefinition ";", FOLLOW [98] -> SHIFT "var" GOTO 85
	statement/L1 = . "return" expression ";", FOLLOW [98] -> SHIFT "return" GOTO 86
	statement/L1 = . "delete" expression ";", FOLLOW [98] -> SHIFT "delete" GOTO 87
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}", FOLLOW [98] -> SHIFT "if" GOTO 88
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}", FOLLOW [98] -> SHIFT "if" GOTO 88
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}", FOLLOW [98] -> SHIFT "while" GOTO 89
	expression/L1 = . "new" typespec ":" expression, FOLLOW [97] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [97] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [97] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [97] -> SHIFT "null" GOTO 92
	statementlist = ., FOLLOW [18] -> REDUCE statementlist #0
	linkage = . (35), FOLLOW [61] -> REDUCE linkage #0 CALL linkage {private=false,linkage="external"}
[334]
	iexpression = expression . indirection IDENT, FOLLOW [239] -> GOTO 129
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [239] -> SHIFT '(' GOTO 130
	expression/L13 = expression . "(" ")", FOLLOW [239] -> SHIFT '(' GOTO 130
	expression/L7 = expression . "&" expression, FOLLOW [239] -> SHIFT '&' GOTO 132
	expression/L7 = expression . "^" expression, FOLLOW [239] -> SHIFT '^' GOTO 133
	expression/L1 = "cast" typespec ":" "{" expression . "}", FOLLOW [239] -> SHIFT '}' GOTO 351
	indirection = . "->" indirection, FOLLOW [13] -> SHIFT "->" GOTO 134
	indirection = . "->", FOLLOW [13] -> SHIFT "->" GOTO 134
	expression/L3 = expression . "=" expression, FOLLOW [239] -> SHIFT '=' GOTO 135
	expression/L9 = expression . "+" expression, FOLLOW [239] -> SHIFT '+' GOTO 136
	expression/L9 = expression . "-" expression, FOLLOW [239] -> SHIFT '-' GOTO 137
	expression/L10 = expression . "*" expression, FOLLOW [239] -> SHIFT '*' GOTO 138
	expression/L10 = expression . "/" expression, FOLLOW [239] -> SHIFT '/' GOTO 139
	expression/L10 = expression . "%" expression, FOLLOW [239] -> SHIFT '%' GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [239] -> SHIFT "&&" GOTO 141
	expression/L4 = expression . "||" expression, FOLLOW [239] -> SHIFT "||" GOTO 142
	expression/L6 = expression . "|" expression, FOLLOW [239] -> SHIFT '|' GOTO 143
	expression/L11 = expression . "<<" expression, FOLLOW [239] -> SHIFT "<<" GOTO 144
	expression/L11 = expression . ">>" expression, FOLLOW [239] -> SHIFT ">>" GOTO 145
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [239] -> SHIFT '[' GOTO 146
	expression/L8 = expression . "==" expression, FOLLOW [239] -> SHIFT "==" GOTO 147
	expression/L8 = expression . "!=" expression, FOLLOW [239] -> SHIFT "!=" GOTO 148
	expression/L8 = expression . ">=" expression, FOLLOW [239] -> SHIFT ">=" GOTO 149
	expression/L8 = expression . "<=" expression, FOLLOW [239] -> SHIFT "<=" GOTO 150
	expression/L8 = expression . ">" expression, FOLLOW [239] -> SHIFT '>' GOTO 151
	expression/L8 = expression . "<" expression, FOLLOW [239] -> SHIFT '<' GOTO 152
	expression/L3 = expression . "+=" expression, FOLLOW [239] -> SHIFT "+=" GOTO 153
	expression/L3 = expression . "-=" expression, FOLLOW [239] -> SHIFT "-=" GOTO 154
	expression/L3 = expression . "*=" expression, FOLLOW [239] -> SHIFT "*=" GOTO 155
	expression/L3 = expression . "/=" expression, FOLLOW [239] -> SHIFT "/=" GOTO 156
	expression/L3 = expression . "^=" expression, FOLLOW [239] -> SHIFT "^=" GOTO 157
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "&=" expression, FOLLOW [239] -> SHIFT "&=" GOTO 158
	expression/L3 = expression . "%=" expression, FOLLOW [239] -> SHIFT "%=" GOTO 159
	expression/L3 = expression . "&&=" expression, FOLLOW [239] -> SHIFT "&&=" GOTO 160
	expression/L3 = expression . "||=" expression, FOLLOW [239] -> SHIFT "||=" GOTO 161
	expression/L3 = expression . "|=" expression, FOLLOW [239] -> SHIFT "|=" GOTO 162
	expression/L3 = expression . "<<=" expression, FOLLOW [239] -> SHIFT "<<=" GOTO 163
	expression/L3 = expression . ">>=" expression, FOLLOW [239] -> SHIFT ">>=" GOTO 164
	expression/L12 = expression . "." IDENT, FOLLOW [239] -> SHIFT '.' GOTO 165
[335]
	expression/L1 = "cast" typespec ":" "{" "}" . (87), FOLLOW [239] -> REDUCE expression #5 CALL typecast
[336]
	statement/L1 = . typedefinition ";", FOLLOW [98] -> GOTO 63
	functiondefinition = . linkage "function" IDENT typespec callablebody, FOLLOW [98] -> GOTO 14
	functiondefinition = . linkage "function" IDENT typespec callablebody_const, FOLLOW [98] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [98] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody_const, FOLLOW [98] -> GOTO 14
	statement/L1 = . functiondefinition, FOLLOW [98] -> GOTO 64
	callablebody_const = "(" parameterlist ")" "const" "{" . codeblock "}", FOLLOW [252] -> GOTO 352
	codeblock = . statementlist, FOLLOW [18] -> GOTO 66
	statementlist = . statement statementlist, FOLLOW [18] -> GOTO 67
	statement/L1 = . expression ";", FOLLOW [98] -> GOTO 68
	expression/L3 = . expression "=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "+=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "-=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "*=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "/=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "^=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "&=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "%=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "&&=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "||=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "&=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "|=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "<<=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression ">>=" expression, FOLLOW [97] -> GOTO 68
	expression/L4 = . expression "||" expression, FOLLOW [97] -> GOTO 68
	expression/L5 = . expression "&&" expression, FOLLOW [97] -> GOTO 68
	expression/L6 = . expression "|" expression, FOLLOW [97] -> GOTO 68
	expression/L7 = . expression "^" expression, FOLLOW [97] -> GOTO 68
	expression/L7 = . expression "&" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression "==" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression "!=" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression "<=" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression "<" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression ">=" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression ">" expression, FOLLOW [97] -> GOTO 68
	expression/L9 = . expression "+" expression, FOLLOW [97] -> GOTO 68
	expression/L9 = . expression "-" expression, FOLLOW [97] -> GOTO 68
	expression/L10 = . expression "*" expression, FOLLOW [97] -> GOTO 68
	expression/L10 = . expression "/" expression, FOLLOW [97] -> GOTO 68
	expression/L10 = . expression "%" expression, FOLLOW [97] -> GOTO 68
	expression/L11 = . expression "<<" expression, FOLLOW [97] -> GOTO 68
	expression/L11 = . expression ">>" expression, FOLLOW [97] -> GOTO 68
	expression/L12 = . expression "." IDENT, FOLLOW [97] -> GOTO 68
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [97] -> GOTO 68
	expression/L13 = . expression "(" ")", FOLLOW [97] -> GOTO 68
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [97] -> GOTO 68
	iexpression = . expression indirection IDENT, FOLLOW [97] -> GOTO 68
	expression/L12 = . iexpression, FOLLOW [97] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [97] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [97] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [97] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [97] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [97] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [97] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [97] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [97] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [97] -> SHIFT '&' GOTO 78
	typedefinition = . "typedef" typepath IDENT, FOLLOW [15] -> SHIFT "typedef" GOTO 19
	statement/L1 = . "{" codeblock "}", FOLLOW [98] -> SHIFT '{' GOTO 79
	expression/L1 = . "{" expressionlist "}", FOLLOW [97] -> SHIFT '{' GOTO 79
	expression/L1 = . "{" "}", FOLLOW [97] -> SHIFT '{' GOTO 79
	linkage = . "private", FOLLOW [61] -> SHIFT "private" GOTO 23
	linkage = . "public", FOLLOW [61] -> SHIFT "public" GOTO 24
	expression/L9 = . "+" expression, FOLLOW [97] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [97] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [97] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [97] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [97] -> SHIFT '!' GOTO 84
	statement/L1 = . "var" variabledefinition ";", FOLLOW [98] -> SHIFT "var" GOTO 85
	statement/L1 = . "return" expression ";", FOLLOW [98] -> SHIFT "return" GOTO 86
	statement/L1 = . "delete" expression ";", FOLLOW [98] -> SHIFT "delete" GOTO 87
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}", FOLLOW [98] -> SHIFT "if" GOTO 88
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}", FOLLOW [98] -> SHIFT "if" GOTO 88
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}", FOLLOW [98] -> SHIFT "while" GOTO 89
	expression/L1 = . "new" typespec ":" expression, FOLLOW [97] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [97] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [97] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [97] -> SHIFT "null" GOTO 92
	statementlist = ., FOLLOW [18] -> REDUCE statementlist #0
	linkage = . (35), FOLLOW [61] -> REDUCE linkage #0 CALL linkage {private=false,linkage="external"}
[337]
	callablebody = "(" parameterlist ")" "{" codeblock . "}", FOLLOW [252] -> SHIFT '}' GOTO 353
[338]
	interface_definition = "function" IDENT typespec "(" extern_paramlist . ")" ";", FOLLOW [171] -> SHIFT ')' GOTO 354
	interface_definition = "function" IDENT typespec "(" extern_paramlist . ")" "const" ";", FOLLOW [171] -> SHIFT ')' GOTO 354
[339]
	interface_definition = "procedure" IDENT "(" extern_paramlist ")" . ";", FOLLOW [171] -> SHIFT ';' GOTO 355
	interface_definition = "procedure" IDENT "(" extern_paramlist ")" . "const" ";", FOLLOW [171] -> SHIFT "const" GOTO 356
[340]
	interface_definition = "operator" operatordecl typespec "(" extern_paramlist . ")" ";", FOLLOW [171] -> SHIFT ')' GOTO 357
	interface_definition = "operator" operatordecl typespec "(" extern_paramlist . ")" "const" ";", FOLLOW [171] -> SHIFT ')' GOTO 357
[341]
	interface_definition = "operator" operatordecl "(" extern_paramlist ")" . ";", FOLLOW [171] -> SHIFT ';' GOTO 358
	interface_definition = "operator" operatordecl "(" extern_paramlist ")" . "const" ";", FOLLOW [171] -> SHIFT "const" GOTO 359
[342]
	operatordefinition = linkage "operator" operatordecl typespec callablebody . (42), FOLLOW [174] -> REDUCE operatordefinition #5 CALL operator_funcdef {const=false}
[343]
	operatordefinition = linkage "operator" operatordecl typespec callablebody_const . (43), FOLLOW [174] -> REDUCE operatordefinition #5 CALL operator_funcdef {const=true}
[344]
	callablebody = "(" parameterlist ")" . "{" codeblock "}", FOLLOW [174] -> SHIFT '{' GOTO 314
[345]
	extern_definition = "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist ")" ";" . (2), FOLLOW [59] -> REDUCE extern_definition #9 CALL extern_funcdef
[346]
	extern_definition = "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist "..." ")" . ";", FOLLOW [59] -> SHIFT ';' GOTO 360
[347]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist "..." ")" ";" . (5), FOLLOW [59] -> REDUCE extern_definition #9 CALL extern_procdef_vararg
[348]
	extern_parameters = typespec IDENT "," extern_parameters ., FOLLOW [186] -> REDUCE extern_parameters #4
[349]
	statement/L1 = "if" "(" expression ")" "{" codeblock . "}", FOLLOW [98] -> SHIFT '}' GOTO 361
	statement/L1 = "if" "(" expression ")" "{" codeblock . "}" "else" "{" codeblock "}", FOLLOW [98] -> SHIFT '}' GOTO 361
[350]
	statement/L1 = "while" "(" expression ")" "{" codeblock . "}", FOLLOW [98] -> SHIFT '}' GOTO 362
[351]
	expression/L1 = "cast" typespec ":" "{" expression "}" . (87), FOLLOW [239] -> REDUCE expression #6 CALL typecast
[352]
	callablebody_const = "(" parameterlist ")" "const" "{" codeblock . "}", FOLLOW [252] -> SHIFT '}' GOTO 363
[353]
	callablebody = "(" parameterlist ")" "{" codeblock "}" . (scope:69), FOLLOW [252] -> REDUCE callablebody #6 CALL callablebody
[354]
	interface_definition = "function" IDENT typespec "(" extern_paramlist ")" . ";", FOLLOW [171] -> SHIFT ';' GOTO 364
	interface_definition = "function" IDENT typespec "(" extern_paramlist ")" . "const" ";", FOLLOW [171] -> SHIFT "const" GOTO 365
[355]
	interface_definition = "procedure" IDENT "(" extern_paramlist ")" ";" . (9), FOLLOW [171] -> REDUCE interface_definition #6 CALL interface_procdef {const=false}
[356]
	interface_definition = "procedure" IDENT "(" extern_paramlist ")" "const" . ";", FOLLOW [171] -> SHIFT ';' GOTO 366
[357]
	interface_definition = "operator" operatordecl typespec "(" extern_paramlist ")" . ";", FOLLOW [171] -> SHIFT ';' GOTO 367
	interface_definition = "operator" operatordecl typespec "(" extern_paramlist ")" . "const" ";", FOLLOW [171] -> SHIFT "const" GOTO 368
[358]
	interface_definition = "operator" operatordecl "(" extern_paramlist ")" ";" . (13), FOLLOW [171] -> REDUCE interface_definition #6 CALL interface_operator_procdef {const=false}
[359]
	interface_definition = "operator" operatordecl "(" extern_paramlist ")" "const" . ";", FOLLOW [171] -> SHIFT ';' GOTO 369
[360]
	extern_definition = "extern" DQSTRING "function" IDENT typespec "(" extern_paramlist "..." ")" ";" . (4), FOLLOW [59] -> REDUCE extern_definition #10 CALL extern_funcdef_vararg
[361]
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" . "else" "{" codeblock "}", FOLLOW [98] -> SHIFT "else" GOTO 370
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" . (scope:78), FOLLOW [98] -> REDUCE statement #7 CALL conditional_if
[362]
	statement/L1 = "while" "(" expression ")" "{" codeblock "}" . (scope:80), FOLLOW [98] -> REDUCE statement #7 CALL conditional_while
[363]
	callablebody_const = "(" parameterlist ")" "const" "{" codeblock "}" . (scope:69), FOLLOW [252] -> REDUCE callablebody_const #7 CALL callablebody
[364]
	interface_definition = "function" IDENT typespec "(" extern_paramlist ")" ";" . (7), FOLLOW [171] -> REDUCE interface_definition #7 CALL interface_funcdef {const=false}
[365]
	interface_definition = "function" IDENT typespec "(" extern_paramlist ")" "const" . ";", FOLLOW [171] -> SHIFT ';' GOTO 371
[366]
	interface_definition = "procedure" IDENT "(" extern_paramlist ")" "const" ";" . (10), FOLLOW [171] -> REDUCE interface_definition #7 CALL interface_procdef {const=true}
[367]
	interface_definition = "operator" operatordecl typespec "(" extern_paramlist ")" ";" . (11), FOLLOW [171] -> REDUCE interface_definition #7 CALL interface_operator_funcdef {const=false}
[368]
	interface_definition = "operator" operatordecl typespec "(" extern_paramlist ")" "const" . ";", FOLLOW [171] -> SHIFT ';' GOTO 372
[369]
	interface_definition = "operator" operatordecl "(" extern_paramlist ")" "const" ";" . (14), FOLLOW [171] -> REDUCE interface_definition #7 CALL interface_operator_procdef {const=true}
[370]
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" "else" . "{" codeblock "}", FOLLOW [98] -> SHIFT '{' GOTO 373
[371]
	interface_definition = "function" IDENT typespec "(" extern_paramlist ")" "const" ";" . (8), FOLLOW [171] -> REDUCE interface_definition #8 CALL interface_funcdef {const=true}
[372]
	interface_definition = "operator" operatordecl typespec "(" extern_paramlist ")" "const" ";" . (12), FOLLOW [171] -> REDUCE interface_definition #8 CALL interface_operator_funcdef {const=true}
[373]
	statement/L1 = . typedefinition ";", FOLLOW [98] -> GOTO 63
	functiondefinition = . linkage "function" IDENT typespec callablebody, FOLLOW [98] -> GOTO 14
	functiondefinition = . linkage "function" IDENT typespec callablebody_const, FOLLOW [98] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [98] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody_const, FOLLOW [98] -> GOTO 14
	statement/L1 = . functiondefinition, FOLLOW [98] -> GOTO 64
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" "else" "{" . codeblock "}", FOLLOW [98] -> GOTO 374
	codeblock = . statementlist, FOLLOW [18] -> GOTO 66
	statementlist = . statement statementlist, FOLLOW [18] -> GOTO 67
	statement/L1 = . expression ";", FOLLOW [98] -> GOTO 68
	expression/L3 = . expression "=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "+=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "-=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "*=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "/=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "^=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "&=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "%=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "&&=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "||=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "&=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "|=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression "<<=" expression, FOLLOW [97] -> GOTO 68
	expression/L3 = . expression ">>=" expression, FOLLOW [97] -> GOTO 68
	expression/L4 = . expression "||" expression, FOLLOW [97] -> GOTO 68
	expression/L5 = . expression "&&" expression, FOLLOW [97] -> GOTO 68
	expression/L6 = . expression "|" expression, FOLLOW [97] -> GOTO 68
	expression/L7 = . expression "^" expression, FOLLOW [97] -> GOTO 68
	expression/L7 = . expression "&" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression "==" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression "!=" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression "<=" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression "<" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression ">=" expression, FOLLOW [97] -> GOTO 68
	expression/L8 = . expression ">" expression, FOLLOW [97] -> GOTO 68
	expression/L9 = . expression "+" expression, FOLLOW [97] -> GOTO 68
	expression/L9 = . expression "-" expression, FOLLOW [97] -> GOTO 68
	expression/L10 = . expression "*" expression, FOLLOW [97] -> GOTO 68
	expression/L10 = . expression "/" expression, FOLLOW [97] -> GOTO 68
	expression/L10 = . expression "%" expression, FOLLOW [97] -> GOTO 68
	expression/L11 = . expression "<<" expression, FOLLOW [97] -> GOTO 68
	expression/L11 = . expression ">>" expression, FOLLOW [97] -> GOTO 68
	expression/L12 = . expression "." IDENT, FOLLOW [97] -> GOTO 68
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [97] -> GOTO 68
	expression/L13 = . expression "(" ")", FOLLOW [97] -> GOTO 68
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [97] -> GOTO 68
	iexpression = . expression indirection IDENT, FOLLOW [97] -> GOTO 68
	expression/L12 = . iexpression, FOLLOW [97] -> GOTO 69
	expression/L2 = . BOOLEAN, FOLLOW [97] -> SHIFT BOOLEAN GOTO 70
	expression/L2 = . IDENT, FOLLOW [97] -> SHIFT IDENT GOTO 71
	expression/L2 = . DQSTRING, FOLLOW [97] -> SHIFT DQSTRING GOTO 72
	expression/L2 = . SQSTRING, FOLLOW [97] -> SHIFT SQSTRING GOTO 73
	expression/L2 = . CARDINAL, FOLLOW [97] -> SHIFT CARDINAL GOTO 74
	expression/L2 = . INTEGER, FOLLOW [97] -> SHIFT INTEGER GOTO 75
	expression/L2 = . FLOAT, FOLLOW [97] -> SHIFT FLOAT GOTO 76
	expression/L2 = . "(" expression ")", FOLLOW [97] -> SHIFT '(' GOTO 77
	expression/L9 = . "&" expression, FOLLOW [97] -> SHIFT '&' GOTO 78
	typedefinition = . "typedef" typepath IDENT, FOLLOW [15] -> SHIFT "typedef" GOTO 19
	statement/L1 = . "{" codeblock "}", FOLLOW [98] -> SHIFT '{' GOTO 79
	expression/L1 = . "{" expressionlist "}", FOLLOW [97] -> SHIFT '{' GOTO 79
	expression/L1 = . "{" "}", FOLLOW [97] -> SHIFT '{' GOTO 79
	linkage = . "private", FOLLOW [61] -> SHIFT "private" GOTO 23
	linkage = . "public", FOLLOW [61] -> SHIFT "public" GOTO 24
	expression/L9 = . "+" expression, FOLLOW [97] -> SHIFT '+' GOTO 80
	expression/L9 = . "-" expression, FOLLOW [97] -> SHIFT '-' GOTO 81
	expression/L12 = . "*" expression, FOLLOW [97] -> SHIFT '*' GOTO 82
	expression/L9 = . "~" expression, FOLLOW [97] -> SHIFT '~' GOTO 83
	expression/L9 = . "!" expression, FOLLOW [97] -> SHIFT '!' GOTO 84
	statement/L1 = . "var" variabledefinition ";", FOLLOW [98] -> SHIFT "var" GOTO 85
	statement/L1 = . "return" expression ";", FOLLOW [98] -> SHIFT "return" GOTO 86
	statement/L1 = . "delete" expression ";", FOLLOW [98] -> SHIFT "delete" GOTO 87
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}", FOLLOW [98] -> SHIFT "if" GOTO 88
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}", FOLLOW [98] -> SHIFT "if" GOTO 88
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}", FOLLOW [98] -> SHIFT "while" GOTO 89
	expression/L1 = . "new" typespec ":" expression, FOLLOW [97] -> SHIFT "new" GOTO 90
	expression/L1 = . "cast" typespec ":" "{" expression "}", FOLLOW [97] -> SHIFT "cast" GOTO 91
	expression/L1 = . "cast" typespec ":" "{" "}", FOLLOW [97] -> SHIFT "cast" GOTO 91
	expression/L2 = . "null", FOLLOW [97] -> SHIFT "null" GOTO 92
	statementlist = ., FOLLOW [18] -> REDUCE statementlist #0
	linkage = . (35), FOLLOW [61] -> REDUCE linkage #0 CALL linkage {private=false,linkage="external"}
[374]
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock . "}", FOLLOW [98] -> SHIFT '}' GOTO 375
[375]
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}" . (scope:79), FOLLOW [98] -> REDUCE statement #11 CALL conditional_if_else

-- Function calls:
(1) program
(2) extern_funcdef
(3) extern_procdef
(4) extern_funcdef_vararg
(5) extern_procdef_vararg
(6) extern_paramdeflist
(7) interface_funcdef, {const=false}
(8) interface_funcdef, {const=true}
(9) interface_procdef, {const=false}
(10) interface_procdef, {const=true}
(11) interface_operator_funcdef, {const=false}
(12) interface_operator_funcdef, {const=true}
(13) interface_operator_procdef, {const=false}
(14) interface_operator_procdef, {const=true}
(15) definition, 1
(16) definition, 2
(17) typespec, ""
(18) typespec, "const "
(19) typespec, "&"
(20) typespec, "const&"
(21) typespec, "^"
(22) typespec, "const^"
(23) typespec, "^&"
(24) typespec, "const^&"
(25) typespec, "^^"
(26) typespec, "const^^"
(27) typespec, "^^&"
(28) typespec, "const^^&"
(29) typedef
(30) structdef
(31) interfacedef
(32) inheritdef, 1
(33) classdef
(34) linkage, {private=true,linkage="internal"}
(35) linkage, {private=false,linkage="external"}
(36) funcdef, {const=false}
(37) funcdef, {const=true}
(38) procdef, {const=false}
(39) procdef, {const=true}
(40) constructordef
(41) destructordef
(42) operator_funcdef, {const=false}
(43) operator_funcdef, {const=true}
(44) operator_procdef, {const=false}
(45) operator_procdef, {const=true}
(46) operatordecl, {name="->",symbol="arrow"}
(47) operatordecl, {name="=",symbol="assign"}
(48) operatordecl, {name="+",symbol="plus"}
(49) operatordecl, {name="-",symbol="minus"}
(50) operatordecl, {name="*",symbol="mul"}
(51) operatordecl, {name="/",symbol="div"}
(52) operatordecl, {name="%",symbol="mod"}
(53) operatordecl, {name="&&",symbol="and"}
(54) operatordecl, {name="||",symbol="or"}
(55) operatordecl, {name="&",symbol="bitand"}
(56) operatordecl, {name="|",symbol="bitor"}
(57) operatordecl, {name="<<",symbol="lsh"}
(58) operatordecl, {name=">>",symbol="rsh"}
(59) operatordecl, {name="~",symbol="lneg"}
(60) operatordecl, {name="!",symbol="not"}
(61) operatordecl, {name="()",symbol="call"}
(62) operatordecl, {name="[]",symbol="get"}
(63) operatordecl, {name="==",symbol="eq"}
(64) operatordecl, {name="!=",symbol="ne"}
(65) operatordecl, {name=">=",symbol="ge"}
(66) operatordecl, {name="<=",symbol="le"}
(67) operatordecl, {name=">",symbol="gt"}
(68) operatordecl, {name="<",symbol="lt"}
(69) callablebody
(70) main_procdef
(71) paramdeflist
(72) paramdef
(73) codeblock
(74) definition
(75) free_expression
(76) return_value
(77) delete
(78) conditional_if
(79) conditional_if_else
(80) conditional_while
(81) vardef
(82) vardef_assign
(83) vardef_array_assign
(84) vardef_array
(85) structure
(86) allocate
(87) typecast
(88) variable
(89) constant, "constexpr bool"
(90) constant, "constexpr uint"
(91) constant, "constexpr int"
(92) constant, "constexpr float"
(93) null, "constexpr float"
(94) string_constant, "constexpr float"
(95) char_constant, "constexpr float"
(96) operator, "="
(97) assign_operator, "+"
(98) assign_operator, "-"
(99) assign_operator, "*"
(100) assign_operator, "/"
(101) assign_operator, "^"
(102) assign_operator, "&"
(103) assign_operator, "%"
(104) assign_operator, "&&"
(105) assign_operator, "||"
(106) assign_operator, "|"
(107) assign_operator, "<<"
(108) assign_operator, ">>"
(109) operator, "||"
(110) operator, "&&"
(111) operator, "|"
(112) operator, "^"
(113) operator, "&"
(114) operator, "=="
(115) operator, "!="
(116) operator, "<="
(117) operator, "<"
(118) operator, ">="
(119) operator, ">"
(120) operator, "+"
(121) operator, "-"
(122) operator, "~"
(123) operator, "!"
(124) operator, "*"
(125) operator, "/"
(126) operator, "%"
(127) operator, "<<"
(128) operator, ">>"
(129) member
(130) operator, "->"
(131) operator, "()"
(132) operator, "[]"
(133) rep_operator, "->"
(134) count

-- Action table:
[1]
	$ => Reduce #0 extern_definitionlist
	IDENT => Reduce #0 extern_definitionlist
	"extern" => Shift goto 4
	"function" => Reduce #0 extern_definitionlist
	"procedure" => Reduce #0 extern_definitionlist
	"const" => Reduce #0 extern_definitionlist
	"typedef" => Reduce #0 extern_definitionlist
	"struct" => Reduce #0 extern_definitionlist
	"interface" => Reduce #0 extern_definitionlist
	"class" => Reduce #0 extern_definitionlist
	"private" => Reduce #0 extern_definitionlist
	"public" => Reduce #0 extern_definitionlist
	"main" => Reduce #0 extern_definitionlist
[2]
	$ => Reduce #0 free_definitionlist
	IDENT => Shift goto 17
	"function" => Reduce #0 linkage call linkage {private=false,linkage="external"}
	"procedure" => Reduce #0 linkage call linkage {private=false,linkage="external"}
	"const" => Shift goto 18
	"typedef" => Shift goto 19
	"struct" => Shift goto 20
	"interface" => Shift goto 21
	"class" => Shift goto 22
	"private" => Shift goto 23
	"public" => Shift goto 24
	"main" => Reduce #0 free_definitionlist
[3]
	$ => Reduce #0 extern_definitionlist
	IDENT => Reduce #0 extern_definitionlist
	"extern" => Shift goto 4
	"function" => Reduce #0 extern_definitionlist
	"procedure" => Reduce #0 extern_definitionlist
	"const" => Reduce #0 extern_definitionlist
	"typedef" => Reduce #0 extern_definitionlist
	"struct" => Reduce #0 extern_definitionlist
	"interface" => Reduce #0 extern_definitionlist
	"class" => Reduce #0 extern_definitionlist
	"private" => Reduce #0 extern_definitionlist
	"public" => Reduce #0 extern_definitionlist
	"main" => Reduce #0 extern_definitionlist
[4]
	DQSTRING => Shift goto 26
[5]
	$ => Reduce #0 main_procedure
	"main" => Shift goto 28
[6]
	$ => Reduce #1 free_definition
	IDENT => Reduce #1 free_definition
	"function" => Reduce #1 free_definition
	"procedure" => Reduce #1 free_definition
	"const" => Reduce #1 free_definition
	"typedef" => Reduce #1 free_definition
	"struct" => Reduce #1 free_definition
	"interface" => Reduce #1 free_definition
	"class" => Reduce #1 free_definition
	"private" => Reduce #1 free_definition
	"public" => Reduce #1 free_definition
	"main" => Reduce #1 free_definition
[7]
	$ => Reduce #0 free_definitionlist
	IDENT => Shift goto 17
	"function" => Reduce #0 linkage call linkage {private=false,linkage="external"}
	"procedure" => Reduce #0 linkage call linkage {private=false,linkage="external"}
	"const" => Shift goto 18
	"typedef" => Shift goto 19
	"struct" => Shift goto 20
	"interface" => Shift goto 21
	"class" => Shift goto 22
	"private" => Shift goto 23
	"public" => Shift goto 24
	"main" => Reduce #0 free_definitionlist
[8]
	IDENT => Reduce #1 typespec call typespec ""
	'(' => Reduce #1 typespec call typespec ""
	')' => Reduce #1 typespec call typespec ""
	"..." => Reduce #1 typespec call typespec ""
	',' => Reduce #1 typespec call typespec ""
	'&' => Shift goto 30
	'^' => Shift goto 31
	':' => Reduce #1 typespec call typespec ""
[9]
	IDENT => Shift goto 32
[10]
	';' => Shift goto 33
[11]
	$ => Reduce #1 struct_definition call definition 1
	IDENT => Reduce #1 struct_definition call definition 1
	"function" => Reduce #1 struct_definition call definition 1
	"procedure" => Reduce #1 struct_definition call definition 1
	"const" => Reduce #1 struct_definition call definition 1
	"typedef" => Reduce #1 struct_definition call definition 1
	"struct" => Reduce #1 struct_definition call definition 1
	'}' => Reduce #1 struct_definition call definition 1
	"interface" => Reduce #1 struct_definition call definition 1
	"class" => Reduce #1 struct_definition call definition 1
	"private" => Reduce #1 struct_definition call definition 1
	"public" => Reduce #1 struct_definition call definition 1
	"main" => Reduce #1 struct_definition call definition 1
[12]
	$ => Reduce #1 free_definition call definition 1
	IDENT => Reduce #1 free_definition call definition 1
	"function" => Reduce #1 free_definition call definition 1
	"procedure" => Reduce #1 free_definition call definition 1
	"const" => Reduce #1 free_definition call definition 1
	"typedef" => Reduce #1 free_definition call definition 1
	"struct" => Reduce #1 free_definition call definition 1
	"interface" => Reduce #1 free_definition call definition 1
	"class" => Reduce #1 free_definition call definition 1
	"private" => Reduce #1 free_definition call definition 1
	"public" => Reduce #1 free_definition call definition 1
	"main" => Reduce #1 free_definition call definition 1
[13]
	$ => Reduce #1 free_definition call definition 1
	IDENT => Reduce #1 free_definition call definition 1
	"function" => Reduce #1 free_definition call definition 1
	"procedure" => Reduce #1 free_definition call definition 1
	"const" => Reduce #1 free_definition call definition 1
	"typedef" => Reduce #1 free_definition call definition 1
	"struct" => Reduce #1 free_definition call definition 1
	"interface" => Reduce #1 free_definition call definition 1
	"class" => Reduce #1 free_definition call definition 1
	"private" => Reduce #1 free_definition call definition 1
	"public" => Reduce #1 free_definition call definition 1
	"main" => Reduce #1 free_definition call definition 1
[14]
	"function" => Shift goto 34
	"procedure" => Shift goto 35
[15]
	$ => Reduce #1 free_definition call definition 1
	IDENT => Reduce #1 free_definition call definition 1
	"function" => Reduce #1 free_definition call definition 1
	"procedure" => Reduce #1 free_definition call definition 1
	"const" => Reduce #1 free_definition call definition 1
	"typedef" => Reduce #1 free_definition call definition 1
	"struct" => Reduce #1 free_definition call definition 1
	"interface" => Reduce #1 free_definition call definition 1
	"class" => Reduce #1 free_definition call definition 1
	"private" => Reduce #1 free_definition call definition 1
	"public" => Reduce #1 free_definition call definition 1
	"main" => Reduce #1 free_definition call definition 1
[16]
	';' => Shift goto 36
[17]
	IDENT => Reduce #1 typename
	'(' => Reduce #1 typename
	')' => Reduce #1 typename
	"..." => Reduce #1 typename
	',' => Reduce #1 typename
	"::" => Shift goto 37
	'&' => Reduce #1 typename
	'^' => Reduce #1 typename
	'{' => Reduce #1 typename
	':' => Reduce #1 typename
[18]
	IDENT => Shift goto 17
[19]
	IDENT => Shift goto 17
[20]
	IDENT => Shift goto 41
[21]
	IDENT => Shift goto 42
[22]
	IDENT => Shift goto 43
[23]
	"function" => Reduce #1 linkage call linkage {private=true,linkage="internal"}
	"procedure" => Reduce #1 linkage call linkage {private=true,linkage="internal"}
	"operator" => Reduce #1 linkage call linkage {private=true,linkage="internal"}
	"constructor" => Reduce #1 linkage call linkage {private=true,linkage="internal"}
[24]
	"function" => Reduce #1 linkage call linkage {private=false,linkage="external"}
	"procedure" => Reduce #1 linkage call linkage {private=false,linkage="external"}
	"operator" => Reduce #1 linkage call linkage {private=false,linkage="external"}
	"constructor" => Reduce #1 linkage call linkage {private=false,linkage="external"}
[25]
	$ => Reduce #2 extern_definitionlist
	IDENT => Reduce #2 extern_definitionlist
	"function" => Reduce #2 extern_definitionlist
	"procedure" => Reduce #2 extern_definitionlist
	"const" => Reduce #2 extern_definitionlist
	"typedef" => Reduce #2 extern_definitionlist
	"struct" => Reduce #2 extern_definitionlist
	"interface" => Reduce #2 extern_definitionlist
	"class" => Reduce #2 extern_definitionlist
	"private" => Reduce #2 extern_definitionlist
	"public" => Reduce #2 extern_definitionlist
	"main" => Reduce #2 extern_definitionlist
[26]
	"function" => Shift goto 44
	"procedure" => Shift goto 45
[27]
	$ => Accept
[28]
	'{' => Shift goto 46
[29]
	$ => Reduce #2 free_definitionlist
	"main" => Reduce #2 free_definitionlist
[30]
	IDENT => Reduce #2 typespec call typespec "&"
	'(' => Reduce #2 typespec call typespec "&"
	')' => Reduce #2 typespec call typespec "&"
	"..." => Reduce #2 typespec call typespec "&"
	',' => Reduce #2 typespec call typespec "&"
	':' => Reduce #2 typespec call typespec "&"
[31]
	IDENT => Reduce #2 typespec call typespec "^"
	'(' => Reduce #2 typespec call typespec "^"
	')' => Reduce #2 typespec call typespec "^"
	"..." => Reduce #2 typespec call typespec "^"
	',' => Reduce #2 typespec call typespec "^"
	'&' => Shift goto 47
	'^' => Shift goto 48
	':' => Reduce #2 typespec call typespec "^"
[32]
	';' => Reduce #2 variabledefinition call vardef
	'=' => Shift goto 49
	'[' => Shift goto 50
[33]
	$ => Reduce #2 struct_definition call definition 1
	IDENT => Reduce #2 struct_definition call definition 1
	"function" => Reduce #2 struct_definition call definition 1
	"procedure" => Reduce #2 struct_definition call definition 1
	"const" => Reduce #2 struct_definition call definition 1
	"typedef" => Reduce #2 struct_definition call definition 1
	"struct" => Reduce #2 struct_definition call definition 1
	'}' => Reduce #2 struct_definition call definition 1
	"interface" => Reduce #2 struct_definition call definition 1
	"class" => Reduce #2 struct_definition call definition 1
	"private" => Reduce #2 struct_definition call definition 1
	"public" => Reduce #2 struct_definition call definition 1
	"main" => Reduce #2 struct_definition call definition 1
[34]
	IDENT => Shift goto 51
[35]
	IDENT => Shift goto 52
[36]
	$ => Reduce #2 struct_definition call definition 1
	IDENT => Reduce #2 struct_definition call definition 1
	"function" => Reduce #2 struct_definition call definition 1
	"procedure" => Reduce #2 struct_definition call definition 1
	"const" => Reduce #2 struct_definition call definition 1
	"typedef" => Reduce #2 struct_definition call definition 1
	"struct" => Reduce #2 struct_definition call definition 1
	'}' => Reduce #2 struct_definition call definition 1
	"interface" => Reduce #2 struct_definition call definition 1
	"class" => Reduce #2 struct_definition call definition 1
	"private" => Reduce #2 struct_definition call definition 1
	"public" => Reduce #2 struct_definition call definition 1
	"main" => Reduce #2 struct_definition call definition 1
[37]
	IDENT => Shift goto 17
[38]
	IDENT => Reduce #2 typespec call typespec "const "
	'(' => Reduce #2 typespec call typespec "const "
	')' => Reduce #2 typespec call typespec "const "
	"..." => Reduce #2 typespec call typespec "const "
	',' => Reduce #2 typespec call typespec "const "
	'&' => Shift goto 54
	'^' => Shift goto 55
	':' => Reduce #2 typespec call typespec "const "
[39]
	IDENT => Reduce #1 typepath call typespec ""
	',' => Reduce #1 typepath call typespec ""
	'{' => Reduce #1 typepath call typespec ""
[40]
	IDENT => Shift goto 56
[41]
	'{' => Shift goto 57
[42]
	'{' => Shift goto 58
[43]
	'{' => Shift goto 59
	':' => Shift goto 60
[44]
	IDENT => Shift goto 61
[45]
	IDENT => Shift goto 62
[46]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	"function" => Reduce #0 linkage call linkage {private=false,linkage="external"}
	'(' => Shift goto 77
	"procedure" => Reduce #0 linkage call linkage {private=false,linkage="external"}
	'&' => Shift goto 78
	"typedef" => Shift goto 19
	'{' => Shift goto 79
	'}' => Reduce #0 statementlist
	"private" => Shift goto 23
	"public" => Shift goto 24
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"var" => Shift goto 85
	"return" => Shift goto 86
	"delete" => Shift goto 87
	"if" => Shift goto 88
	"while" => Shift goto 89
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[47]
	IDENT => Reduce #3 typespec call typespec "^&"
	'(' => Reduce #3 typespec call typespec "^&"
	')' => Reduce #3 typespec call typespec "^&"
	"..." => Reduce #3 typespec call typespec "^&"
	',' => Reduce #3 typespec call typespec "^&"
	':' => Reduce #3 typespec call typespec "^&"
[48]
	IDENT => Reduce #3 typespec call typespec "^^"
	'(' => Reduce #3 typespec call typespec "^^"
	')' => Reduce #3 typespec call typespec "^^"
	"..." => Reduce #3 typespec call typespec "^^"
	',' => Reduce #3 typespec call typespec "^^"
	'&' => Shift goto 93
	':' => Reduce #3 typespec call typespec "^^"
[49]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[50]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[51]
	IDENT => Shift goto 17
	"const" => Shift goto 18
[52]
	'(' => Shift goto 100
[53]
	IDENT => Reduce #3 typename
	'(' => Reduce #3 typename
	')' => Reduce #3 typename
	"..." => Reduce #3 typename
	',' => Reduce #3 typename
	'&' => Reduce #3 typename
	'^' => Reduce #3 typename
	'{' => Reduce #3 typename
	':' => Reduce #3 typename
[54]
	IDENT => Reduce #3 typespec call typespec "const&"
	'(' => Reduce #3 typespec call typespec "const&"
	')' => Reduce #3 typespec call typespec "const&"
	"..." => Reduce #3 typespec call typespec "const&"
	',' => Reduce #3 typespec call typespec "const&"
	':' => Reduce #3 typespec call typespec "const&"
[55]
	IDENT => Reduce #3 typespec call typespec "const^"
	'(' => Reduce #3 typespec call typespec "const^"
	')' => Reduce #3 typespec call typespec "const^"
	"..." => Reduce #3 typespec call typespec "const^"
	',' => Reduce #3 typespec call typespec "const^"
	'&' => Shift goto 101
	'^' => Shift goto 102
	':' => Reduce #3 typespec call typespec "const^"
[56]
	';' => Reduce #3 typedefinition call typedef
[57]
	IDENT => Shift goto 17
	"const" => Shift goto 18
	"typedef" => Shift goto 19
	"struct" => Shift goto 20
	'}' => Reduce #0 struct_definitionlist
[58]
	"function" => Shift goto 107
	"procedure" => Shift goto 108
	"operator" => Shift goto 109
	'}' => Reduce #0 interface_definitionlist
[59]
	IDENT => Shift goto 17
	"function" => Reduce #0 linkage call linkage {private=false,linkage="external"}
	"procedure" => Reduce #0 linkage call linkage {private=false,linkage="external"}
	"const" => Shift goto 18
	"operator" => Reduce #0 linkage call linkage {private=false,linkage="external"}
	"typedef" => Shift goto 19
	"struct" => Shift goto 20
	'}' => Reduce #0 class_definitionlist
	"interface" => Shift goto 21
	"class" => Shift goto 22
	"private" => Shift goto 23
	"public" => Shift goto 24
	"constructor" => Reduce #0 linkage call linkage {private=false,linkage="external"}
	"destructor" => Shift goto 121
[60]
	IDENT => Shift goto 17
[61]
	IDENT => Shift goto 17
	"const" => Shift goto 18
[62]
	'(' => Shift goto 125
[63]
	';' => Shift goto 126
[64]
	$ => Reduce #1 statement call definition
	BOOLEAN => Reduce #1 statement call definition
	IDENT => Reduce #1 statement call definition
	DQSTRING => Reduce #1 statement call definition
	SQSTRING => Reduce #1 statement call definition
	CARDINAL => Reduce #1 statement call definition
	INTEGER => Reduce #1 statement call definition
	FLOAT => Reduce #1 statement call definition
	"function" => Reduce #1 statement call definition
	'(' => Reduce #1 statement call definition
	"procedure" => Reduce #1 statement call definition
	'&' => Reduce #1 statement call definition
	"typedef" => Reduce #1 statement call definition
	'{' => Reduce #1 statement call definition
	'}' => Reduce #1 statement call definition
	"private" => Reduce #1 statement call definition
	"public" => Reduce #1 statement call definition
	'+' => Reduce #1 statement call definition
	'-' => Reduce #1 statement call definition
	'*' => Reduce #1 statement call definition
	'~' => Reduce #1 statement call definition
	'!' => Reduce #1 statement call definition
	"var" => Reduce #1 statement call definition
	"return" => Reduce #1 statement call definition
	"delete" => Reduce #1 statement call definition
	"if" => Reduce #1 statement call definition
	"while" => Reduce #1 statement call definition
	"new" => Reduce #1 statement call definition
	"cast" => Reduce #1 statement call definition
	"null" => Reduce #1 statement call definition
[65]
	'}' => Shift goto 127
[66]
	'}' => Reduce #1 codeblock call codeblock
[67]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	"function" => Reduce #0 linkage call linkage {private=false,linkage="external"}
	'(' => Shift goto 77
	"procedure" => Reduce #0 linkage call linkage {private=false,linkage="external"}
	'&' => Shift goto 78
	"typedef" => Shift goto 19
	'{' => Shift goto 79
	'}' => Reduce #0 statementlist
	"private" => Shift goto 23
	"public" => Shift goto 24
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"var" => Shift goto 85
	"return" => Shift goto 86
	"delete" => Shift goto 87
	"if" => Shift goto 88
	"while" => Shift goto 89
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[68]
	'(' => Shift goto 130
	';' => Shift goto 131
	'&' => Shift goto 132
	'^' => Shift goto 133
	"->" => Shift goto 134
	'=' => Shift goto 135
	'+' => Shift goto 136
	'-' => Shift goto 137
	'*' => Shift goto 138
	'/' => Shift goto 139
	'%' => Shift goto 140
	"&&" => Shift goto 141
	"||" => Shift goto 142
	'|' => Shift goto 143
	"<<" => Shift goto 144
	">>" => Shift goto 145
	'[' => Shift goto 146
	"==" => Shift goto 147
	"!=" => Shift goto 148
	">=" => Shift goto 149
	"<=" => Shift goto 150
	'>' => Shift goto 151
	'<' => Shift goto 152
	"+=" => Shift goto 153
	"-=" => Shift goto 154
	"*=" => Shift goto 155
	"/=" => Shift goto 156
	"^=" => Shift goto 157
	"&=" => Shift goto 158
	"%=" => Shift goto 159
	"&&=" => Shift goto 160
	"||=" => Shift goto 161
	"|=" => Shift goto 162
	"<<=" => Shift goto 163
	">>=" => Shift goto 164
	'.' => Shift goto 165
[69]
	'(' => Reduce #1 expression
	')' => Reduce #1 expression
	';' => Reduce #1 expression
	',' => Reduce #1 expression
	'&' => Reduce #1 expression
	'^' => Reduce #1 expression
	'}' => Reduce #1 expression
	"->" => Reduce #1 expression
	'=' => Reduce #1 expression
	'+' => Reduce #1 expression
	'-' => Reduce #1 expression
	'*' => Reduce #1 expression
	'/' => Reduce #1 expression
	'%' => Reduce #1 expression
	"&&" => Reduce #1 expression
	"||" => Reduce #1 expression
	'|' => Reduce #1 expression
	"<<" => Reduce #1 expression
	">>" => Reduce #1 expression
	'[' => Reduce #1 expression
	']' => Reduce #1 expression
	"==" => Reduce #1 expression
	"!=" => Reduce #1 expression
	">=" => Reduce #1 expression
	"<=" => Reduce #1 expression
	'>' => Reduce #1 expression
	'<' => Reduce #1 expression
	"+=" => Reduce #1 expression
	"-=" => Reduce #1 expression
	"*=" => Reduce #1 expression
	"/=" => Reduce #1 expression
	"^=" => Reduce #1 expression
	"&=" => Reduce #1 expression
	"%=" => Reduce #1 expression
	"&&=" => Reduce #1 expression
	"||=" => Reduce #1 expression
	"|=" => Reduce #1 expression
	"<<=" => Reduce #1 expression
	">>=" => Reduce #1 expression
	'.' => Reduce #1 expression
[70]
	'(' => Reduce #1 expression call constant "constexpr bool"
	')' => Reduce #1 expression call constant "constexpr bool"
	';' => Reduce #1 expression call constant "constexpr bool"
	',' => Reduce #1 expression call constant "constexpr bool"
	'&' => Reduce #1 expression call constant "constexpr bool"
	'^' => Reduce #1 expression call constant "constexpr bool"
	'}' => Reduce #1 expression call constant "constexpr bool"
	"->" => Reduce #1 expression call constant "constexpr bool"
	'=' => Reduce #1 expression call constant "constexpr bool"
	'+' => Reduce #1 expression call constant "constexpr bool"
	'-' => Reduce #1 expression call constant "constexpr bool"
	'*' => Reduce #1 expression call constant "constexpr bool"
	'/' => Reduce #1 expression call constant "constexpr bool"
	'%' => Reduce #1 expression call constant "constexpr bool"
	"&&" => Reduce #1 expression call constant "constexpr bool"
	"||" => Reduce #1 expression call constant "constexpr bool"
	'|' => Reduce #1 expression call constant "constexpr bool"
	"<<" => Reduce #1 expression call constant "constexpr bool"
	">>" => Reduce #1 expression call constant "constexpr bool"
	'[' => Reduce #1 expression call constant "constexpr bool"
	']' => Reduce #1 expression call constant "constexpr bool"
	"==" => Reduce #1 expression call constant "constexpr bool"
	"!=" => Reduce #1 expression call constant "constexpr bool"
	">=" => Reduce #1 expression call constant "constexpr bool"
	"<=" => Reduce #1 expression call constant "constexpr bool"
	'>' => Reduce #1 expression call constant "constexpr bool"
	'<' => Reduce #1 expression call constant "constexpr bool"
	"+=" => Reduce #1 expression call constant "constexpr bool"
	"-=" => Reduce #1 expression call constant "constexpr bool"
	"*=" => Reduce #1 expression call constant "constexpr bool"
	"/=" => Reduce #1 expression call constant "constexpr bool"
	"^=" => Reduce #1 expression call constant "constexpr bool"
	"&=" => Reduce #1 expression call constant "constexpr bool"
	"%=" => Reduce #1 expression call constant "constexpr bool"
	"&&=" => Reduce #1 expression call constant "constexpr bool"
	"||=" => Reduce #1 expression call constant "constexpr bool"
	"|=" => Reduce #1 expression call constant "constexpr bool"
	"<<=" => Reduce #1 expression call constant "constexpr bool"
	">>=" => Reduce #1 expression call constant "constexpr bool"
	'.' => Reduce #1 expression call constant "constexpr bool"
[71]
	'(' => Reduce #1 expression call variable
	')' => Reduce #1 expression call variable
	';' => Reduce #1 expression call variable
	',' => Reduce #1 expression call variable
	'&' => Reduce #1 expression call variable
	'^' => Reduce #1 expression call variable
	'}' => Reduce #1 expression call variable
	"->" => Reduce #1 expression call variable
	'=' => Reduce #1 expression call variable
	'+' => Reduce #1 expression call variable
	'-' => Reduce #1 expression call variable
	'*' => Reduce #1 expression call variable
	'/' => Reduce #1 expression call variable
	'%' => Reduce #1 expression call variable
	"&&" => Reduce #1 expression call variable
	"||" => Reduce #1 expression call variable
	'|' => Reduce #1 expression call variable
	"<<" => Reduce #1 expression call variable
	">>" => Reduce #1 expression call variable
	'[' => Reduce #1 expression call variable
	']' => Reduce #1 expression call variable
	"==" => Reduce #1 expression call variable
	"!=" => Reduce #1 expression call variable
	">=" => Reduce #1 expression call variable
	"<=" => Reduce #1 expression call variable
	'>' => Reduce #1 expression call variable
	'<' => Reduce #1 expression call variable
	"+=" => Reduce #1 expression call variable
	"-=" => Reduce #1 expression call variable
	"*=" => Reduce #1 expression call variable
	"/=" => Reduce #1 expression call variable
	"^=" => Reduce #1 expression call variable
	"&=" => Reduce #1 expression call variable
	"%=" => Reduce #1 expression call variable
	"&&=" => Reduce #1 expression call variable
	"||=" => Reduce #1 expression call variable
	"|=" => Reduce #1 expression call variable
	"<<=" => Reduce #1 expression call variable
	">>=" => Reduce #1 expression call variable
	'.' => Reduce #1 expression call variable
[72]
	'(' => Reduce #1 expression call string_constant "constexpr float"
	')' => Reduce #1 expression call string_constant "constexpr float"
	';' => Reduce #1 expression call string_constant "constexpr float"
	',' => Reduce #1 expression call string_constant "constexpr float"
	'&' => Reduce #1 expression call string_constant "constexpr float"
	'^' => Reduce #1 expression call string_constant "constexpr float"
	'}' => Reduce #1 expression call string_constant "constexpr float"
	"->" => Reduce #1 expression call string_constant "constexpr float"
	'=' => Reduce #1 expression call string_constant "constexpr float"
	'+' => Reduce #1 expression call string_constant "constexpr float"
	'-' => Reduce #1 expression call string_constant "constexpr float"
	'*' => Reduce #1 expression call string_constant "constexpr float"
	'/' => Reduce #1 expression call string_constant "constexpr float"
	'%' => Reduce #1 expression call string_constant "constexpr float"
	"&&" => Reduce #1 expression call string_constant "constexpr float"
	"||" => Reduce #1 expression call string_constant "constexpr float"
	'|' => Reduce #1 expression call string_constant "constexpr float"
	"<<" => Reduce #1 expression call string_constant "constexpr float"
	">>" => Reduce #1 expression call string_constant "constexpr float"
	'[' => Reduce #1 expression call string_constant "constexpr float"
	']' => Reduce #1 expression call string_constant "constexpr float"
	"==" => Reduce #1 expression call string_constant "constexpr float"
	"!=" => Reduce #1 expression call string_constant "constexpr float"
	">=" => Reduce #1 expression call string_constant "constexpr float"
	"<=" => Reduce #1 expression call string_constant "constexpr float"
	'>' => Reduce #1 expression call string_constant "constexpr float"
	'<' => Reduce #1 expression call string_constant "constexpr float"
	"+=" => Reduce #1 expression call string_constant "constexpr float"
	"-=" => Reduce #1 expression call string_constant "constexpr float"
	"*=" => Reduce #1 expression call string_constant "constexpr float"
	"/=" => Reduce #1 expression call string_constant "constexpr float"
	"^=" => Reduce #1 expression call string_constant "constexpr float"
	"&=" => Reduce #1 expression call string_constant "constexpr float"
	"%=" => Reduce #1 expression call string_constant "constexpr float"
	"&&=" => Reduce #1 expression call string_constant "constexpr float"
	"||=" => Reduce #1 expression call string_constant "constexpr float"
	"|=" => Reduce #1 expression call string_constant "constexpr float"
	"<<=" => Reduce #1 expression call string_constant "constexpr float"
	">>=" => Reduce #1 expression call string_constant "constexpr float"
	'.' => Reduce #1 expression call string_constant "constexpr float"
[73]
	'(' => Reduce #1 expression call char_constant "constexpr float"
	')' => Reduce #1 expression call char_constant "constexpr float"
	';' => Reduce #1 expression call char_constant "constexpr float"
	',' => Reduce #1 expression call char_constant "constexpr float"
	'&' => Reduce #1 expression call char_constant "constexpr float"
	'^' => Reduce #1 expression call char_constant "constexpr float"
	'}' => Reduce #1 expression call char_constant "constexpr float"
	"->" => Reduce #1 expression call char_constant "constexpr float"
	'=' => Reduce #1 expression call char_constant "constexpr float"
	'+' => Reduce #1 expression call char_constant "constexpr float"
	'-' => Reduce #1 expression call char_constant "constexpr float"
	'*' => Reduce #1 expression call char_constant "constexpr float"
	'/' => Reduce #1 expression call char_constant "constexpr float"
	'%' => Reduce #1 expression call char_constant "constexpr float"
	"&&" => Reduce #1 expression call char_constant "constexpr float"
	"||" => Reduce #1 expression call char_constant "constexpr float"
	'|' => Reduce #1 expression call char_constant "constexpr float"
	"<<" => Reduce #1 expression call char_constant "constexpr float"
	">>" => Reduce #1 expression call char_constant "constexpr float"
	'[' => Reduce #1 expression call char_constant "constexpr float"
	']' => Reduce #1 expression call char_constant "constexpr float"
	"==" => Reduce #1 expression call char_constant "constexpr float"
	"!=" => Reduce #1 expression call char_constant "constexpr float"
	">=" => Reduce #1 expression call char_constant "constexpr float"
	"<=" => Reduce #1 expression call char_constant "constexpr float"
	'>' => Reduce #1 expression call char_constant "constexpr float"
	'<' => Reduce #1 expression call char_constant "constexpr float"
	"+=" => Reduce #1 expression call char_constant "constexpr float"
	"-=" => Reduce #1 expression call char_constant "constexpr float"
	"*=" => Reduce #1 expression call char_constant "constexpr float"
	"/=" => Reduce #1 expression call char_constant "constexpr float"
	"^=" => Reduce #1 expression call char_constant "constexpr float"
	"&=" => Reduce #1 expression call char_constant "constexpr float"
	"%=" => Reduce #1 expression call char_constant "constexpr float"
	"&&=" => Reduce #1 expression call char_constant "constexpr float"
	"||=" => Reduce #1 expression call char_constant "constexpr float"
	"|=" => Reduce #1 expression call char_constant "constexpr float"
	"<<=" => Reduce #1 expression call char_constant "constexpr float"
	">>=" => Reduce #1 expression call char_constant "constexpr float"
	'.' => Reduce #1 expression call char_constant "constexpr float"
[74]
	'(' => Reduce #1 expression call constant "constexpr uint"
	')' => Reduce #1 expression call constant "constexpr uint"
	';' => Reduce #1 expression call constant "constexpr uint"
	',' => Reduce #1 expression call constant "constexpr uint"
	'&' => Reduce #1 expression call constant "constexpr uint"
	'^' => Reduce #1 expression call constant "constexpr uint"
	'}' => Reduce #1 expression call constant "constexpr uint"
	"->" => Reduce #1 expression call constant "constexpr uint"
	'=' => Reduce #1 expression call constant "constexpr uint"
	'+' => Reduce #1 expression call constant "constexpr uint"
	'-' => Reduce #1 expression call constant "constexpr uint"
	'*' => Reduce #1 expression call constant "constexpr uint"
	'/' => Reduce #1 expression call constant "constexpr uint"
	'%' => Reduce #1 expression call constant "constexpr uint"
	"&&" => Reduce #1 expression call constant "constexpr uint"
	"||" => Reduce #1 expression call constant "constexpr uint"
	'|' => Reduce #1 expression call constant "constexpr uint"
	"<<" => Reduce #1 expression call constant "constexpr uint"
	">>" => Reduce #1 expression call constant "constexpr uint"
	'[' => Reduce #1 expression call constant "constexpr uint"
	']' => Reduce #1 expression call constant "constexpr uint"
	"==" => Reduce #1 expression call constant "constexpr uint"
	"!=" => Reduce #1 expression call constant "constexpr uint"
	">=" => Reduce #1 expression call constant "constexpr uint"
	"<=" => Reduce #1 expression call constant "constexpr uint"
	'>' => Reduce #1 expression call constant "constexpr uint"
	'<' => Reduce #1 expression call constant "constexpr uint"
	"+=" => Reduce #1 expression call constant "constexpr uint"
	"-=" => Reduce #1 expression call constant "constexpr uint"
	"*=" => Reduce #1 expression call constant "constexpr uint"
	"/=" => Reduce #1 expression call constant "constexpr uint"
	"^=" => Reduce #1 expression call constant "constexpr uint"
	"&=" => Reduce #1 expression call constant "constexpr uint"
	"%=" => Reduce #1 expression call constant "constexpr uint"
	"&&=" => Reduce #1 expression call constant "constexpr uint"
	"||=" => Reduce #1 expression call constant "constexpr uint"
	"|=" => Reduce #1 expression call constant "constexpr uint"
	"<<=" => Reduce #1 expression call constant "constexpr uint"
	">>=" => Reduce #1 expression call constant "constexpr uint"
	'.' => Reduce #1 expression call constant "constexpr uint"
[75]
	'(' => Reduce #1 expression call constant "constexpr int"
	')' => Reduce #1 expression call constant "constexpr int"
	';' => Reduce #1 expression call constant "constexpr int"
	',' => Reduce #1 expression call constant "constexpr int"
	'&' => Reduce #1 expression call constant "constexpr int"
	'^' => Reduce #1 expression call constant "constexpr int"
	'}' => Reduce #1 expression call constant "constexpr int"
	"->" => Reduce #1 expression call constant "constexpr int"
	'=' => Reduce #1 expression call constant "constexpr int"
	'+' => Reduce #1 expression call constant "constexpr int"
	'-' => Reduce #1 expression call constant "constexpr int"
	'*' => Reduce #1 expression call constant "constexpr int"
	'/' => Reduce #1 expression call constant "constexpr int"
	'%' => Reduce #1 expression call constant "constexpr int"
	"&&" => Reduce #1 expression call constant "constexpr int"
	"||" => Reduce #1 expression call constant "constexpr int"
	'|' => Reduce #1 expression call constant "constexpr int"
	"<<" => Reduce #1 expression call constant "constexpr int"
	">>" => Reduce #1 expression call constant "constexpr int"
	'[' => Reduce #1 expression call constant "constexpr int"
	']' => Reduce #1 expression call constant "constexpr int"
	"==" => Reduce #1 expression call constant "constexpr int"
	"!=" => Reduce #1 expression call constant "constexpr int"
	">=" => Reduce #1 expression call constant "constexpr int"
	"<=" => Reduce #1 expression call constant "constexpr int"
	'>' => Reduce #1 expression call constant "constexpr int"
	'<' => Reduce #1 expression call constant "constexpr int"
	"+=" => Reduce #1 expression call constant "constexpr int"
	"-=" => Reduce #1 expression call constant "constexpr int"
	"*=" => Reduce #1 expression call constant "constexpr int"
	"/=" => Reduce #1 expression call constant "constexpr int"
	"^=" => Reduce #1 expression call constant "constexpr int"
	"&=" => Reduce #1 expression call constant "constexpr int"
	"%=" => Reduce #1 expression call constant "constexpr int"
	"&&=" => Reduce #1 expression call constant "constexpr int"
	"||=" => Reduce #1 expression call constant "constexpr int"
	"|=" => Reduce #1 expression call constant "constexpr int"
	"<<=" => Reduce #1 expression call constant "constexpr int"
	">>=" => Reduce #1 expression call constant "constexpr int"
	'.' => Reduce #1 expression call constant "constexpr int"
[76]
	'(' => Reduce #1 expression call constant "constexpr float"
	')' => Reduce #1 expression call constant "constexpr float"
	';' => Reduce #1 expression call constant "constexpr float"
	',' => Reduce #1 expression call constant "constexpr float"
	'&' => Reduce #1 expression call constant "constexpr float"
	'^' => Reduce #1 expression call constant "constexpr float"
	'}' => Reduce #1 expression call constant "constexpr float"
	"->" => Reduce #1 expression call constant "constexpr float"
	'=' => Reduce #1 expression call constant "constexpr float"
	'+' => Reduce #1 expression call constant "constexpr float"
	'-' => Reduce #1 expression call constant "constexpr float"
	'*' => Reduce #1 expression call constant "constexpr float"
	'/' => Reduce #1 expression call constant "constexpr float"
	'%' => Reduce #1 expression call constant "constexpr float"
	"&&" => Reduce #1 expression call constant "constexpr float"
	"||" => Reduce #1 expression call constant "constexpr float"
	'|' => Reduce #1 expression call constant "constexpr float"
	"<<" => Reduce #1 expression call constant "constexpr float"
	">>" => Reduce #1 expression call constant "constexpr float"
	'[' => Reduce #1 expression call constant "constexpr float"
	']' => Reduce #1 expression call constant "constexpr float"
	"==" => Reduce #1 expression call constant "constexpr float"
	"!=" => Reduce #1 expression call constant "constexpr float"
	">=" => Reduce #1 expression call constant "constexpr float"
	"<=" => Reduce #1 expression call constant "constexpr float"
	'>' => Reduce #1 expression call constant "constexpr float"
	'<' => Reduce #1 expression call constant "constexpr float"
	"+=" => Reduce #1 expression call constant "constexpr float"
	"-=" => Reduce #1 expression call constant "constexpr float"
	"*=" => Reduce #1 expression call constant "constexpr float"
	"/=" => Reduce #1 expression call constant "constexpr float"
	"^=" => Reduce #1 expression call constant "constexpr float"
	"&=" => Reduce #1 expression call constant "constexpr float"
	"%=" => Reduce #1 expression call constant "constexpr float"
	"&&=" => Reduce #1 expression call constant "constexpr float"
	"||=" => Reduce #1 expression call constant "constexpr float"
	"|=" => Reduce #1 expression call constant "constexpr float"
	"<<=" => Reduce #1 expression call constant "constexpr float"
	">>=" => Reduce #1 expression call constant "constexpr float"
	'.' => Reduce #1 expression call constant "constexpr float"
[77]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[78]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[79]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	"function" => Reduce #0 linkage call linkage {private=false,linkage="external"}
	'(' => Shift goto 77
	"procedure" => Reduce #0 linkage call linkage {private=false,linkage="external"}
	'&' => Shift goto 78
	"typedef" => Shift goto 19
	'{' => Shift goto 79
	'}' => Shift goto 171
	"private" => Shift goto 23
	"public" => Shift goto 24
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"var" => Shift goto 85
	"return" => Shift goto 86
	"delete" => Shift goto 87
	"if" => Shift goto 88
	"while" => Shift goto 89
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[80]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[81]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[82]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[83]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[84]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[85]
	IDENT => Shift goto 17
	"const" => Shift goto 18
[86]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[87]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[88]
	'(' => Shift goto 180
[89]
	'(' => Shift goto 181
[90]
	IDENT => Shift goto 17
	"const" => Shift goto 18
[91]
	IDENT => Shift goto 17
	"const" => Shift goto 18
[92]
	'(' => Reduce #1 expression call null "constexpr float"
	')' => Reduce #1 expression call null "constexpr float"
	';' => Reduce #1 expression call null "constexpr float"
	',' => Reduce #1 expression call null "constexpr float"
	'&' => Reduce #1 expression call null "constexpr float"
	'^' => Reduce #1 expression call null "constexpr float"
	'}' => Reduce #1 expression call null "constexpr float"
	"->" => Reduce #1 expression call null "constexpr float"
	'=' => Reduce #1 expression call null "constexpr float"
	'+' => Reduce #1 expression call null "constexpr float"
	'-' => Reduce #1 expression call null "constexpr float"
	'*' => Reduce #1 expression call null "constexpr float"
	'/' => Reduce #1 expression call null "constexpr float"
	'%' => Reduce #1 expression call null "constexpr float"
	"&&" => Reduce #1 expression call null "constexpr float"
	"||" => Reduce #1 expression call null "constexpr float"
	'|' => Reduce #1 expression call null "constexpr float"
	"<<" => Reduce #1 expression call null "constexpr float"
	">>" => Reduce #1 expression call null "constexpr float"
	'[' => Reduce #1 expression call null "constexpr float"
	']' => Reduce #1 expression call null "constexpr float"
	"==" => Reduce #1 expression call null "constexpr float"
	"!=" => Reduce #1 expression call null "constexpr float"
	">=" => Reduce #1 expression call null "constexpr float"
	"<=" => Reduce #1 expression call null "constexpr float"
	'>' => Reduce #1 expression call null "constexpr float"
	'<' => Reduce #1 expression call null "constexpr float"
	"+=" => Reduce #1 expression call null "constexpr float"
	"-=" => Reduce #1 expression call null "constexpr float"
	"*=" => Reduce #1 expression call null "constexpr float"
	"/=" => Reduce #1 expression call null "constexpr float"
	"^=" => Reduce #1 expression call null "constexpr float"
	"&=" => Reduce #1 expression call null "constexpr float"
	"%=" => Reduce #1 expression call null "constexpr float"
	"&&=" => Reduce #1 expression call null "constexpr float"
	"||=" => Reduce #1 expression call null "constexpr float"
	"|=" => Reduce #1 expression call null "constexpr float"
	"<<=" => Reduce #1 expression call null "constexpr float"
	">>=" => Reduce #1 expression call null "constexpr float"
	'.' => Reduce #1 expression call null "constexpr float"
[93]
	IDENT => Reduce #4 typespec call typespec "^^&"
	'(' => Reduce #4 typespec call typespec "^^&"
	')' => Reduce #4 typespec call typespec "^^&"
	"..." => Reduce #4 typespec call typespec "^^&"
	',' => Reduce #4 typespec call typespec "^^&"
	':' => Reduce #4 typespec call typespec "^^&"
[94]
	'(' => Shift goto 130
	';' => Reduce #4 variabledefinition call vardef_assign
	'&' => Shift goto 132
	'^' => Shift goto 133
	"->" => Shift goto 134
	'=' => Shift goto 135
	'+' => Shift goto 136
	'-' => Shift goto 137
	'*' => Shift goto 138
	'/' => Shift goto 139
	'%' => Shift goto 140
	"&&" => Shift goto 141
	"||" => Shift goto 142
	'|' => Shift goto 143
	"<<" => Shift goto 144
	">>" => Shift goto 145
	'[' => Shift goto 146
	"==" => Shift goto 147
	"!=" => Shift goto 148
	">=" => Shift goto 149
	"<=" => Shift goto 150
	'>' => Shift goto 151
	'<' => Shift goto 152
	"+=" => Shift goto 153
	"-=" => Shift goto 154
	"*=" => Shift goto 155
	"/=" => Shift goto 156
	"^=" => Shift goto 157
	"&=" => Shift goto 158
	"%=" => Shift goto 159
	"&&=" => Shift goto 160
	"||=" => Shift goto 161
	"|=" => Shift goto 162
	"<<=" => Shift goto 163
	">>=" => Shift goto 164
	'.' => Shift goto 165
[95]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'}' => Shift goto 171
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[96]
	'(' => Shift goto 130
	'&' => Shift goto 132
	'^' => Shift goto 133
	"->" => Shift goto 134
	'=' => Shift goto 135
	'+' => Shift goto 136
	'-' => Shift goto 137
	'*' => Shift goto 138
	'/' => Shift goto 139
	'%' => Shift goto 140
	"&&" => Shift goto 141
	"||" => Shift goto 142
	'|' => Shift goto 143
	"<<" => Shift goto 144
	">>" => Shift goto 145
	'[' => Shift goto 146
	']' => Shift goto 185
	"==" => Shift goto 147
	"!=" => Shift goto 148
	">=" => Shift goto 149
	"<=" => Shift goto 150
	'>' => Shift goto 151
	'<' => Shift goto 152
	"+=" => Shift goto 153
	"-=" => Shift goto 154
	"*=" => Shift goto 155
	"/=" => Shift goto 156
	"^=" => Shift goto 157
	"&=" => Shift goto 158
	"%=" => Shift goto 159
	"&&=" => Shift goto 160
	"||=" => Shift goto 161
	"|=" => Shift goto 162
	"<<=" => Shift goto 163
	">>=" => Shift goto 164
	'.' => Shift goto 165
[97]
	'(' => Shift goto 100
[98]
	$ => Reduce #4 functiondefinition call procdef {const=false}
	BOOLEAN => Reduce #4 functiondefinition call procdef {const=false}
	IDENT => Reduce #4 functiondefinition call procdef {const=false}
	DQSTRING => Reduce #4 functiondefinition call procdef {const=false}
	SQSTRING => Reduce #4 functiondefinition call procdef {const=false}
	CARDINAL => Reduce #4 functiondefinition call procdef {const=false}
	INTEGER => Reduce #4 functiondefinition call procdef {const=false}
	FLOAT => Reduce #4 functiondefinition call procdef {const=false}
	"function" => Reduce #4 functiondefinition call procdef {const=false}
	'(' => Reduce #4 functiondefinition call procdef {const=false}
	"procedure" => Reduce #4 functiondefinition call procdef {const=false}
	"const" => Reduce #4 functiondefinition call procdef {const=false}
	"operator" => Reduce #4 functiondefinition call procdef {const=false}
	'&' => Reduce #4 functiondefinition call procdef {const=false}
	"typedef" => Reduce #4 functiondefinition call procdef {const=false}
	"struct" => Reduce #4 functiondefinition call procdef {const=false}
	'{' => Reduce #4 functiondefinition call procdef {const=false}
	'}' => Reduce #4 functiondefinition call procdef {const=false}
	"interface" => Reduce #4 functiondefinition call procdef {const=false}
	"class" => Reduce #4 functiondefinition call procdef {const=false}
	"private" => Reduce #4 functiondefinition call procdef {const=false}
	"public" => Reduce #4 functiondefinition call procdef {const=false}
	"constructor" => Reduce #4 functiondefinition call procdef {const=false}
	"destructor" => Reduce #4 functiondefinition call procdef {const=false}
	'+' => Reduce #4 functiondefinition call procdef {const=false}
	'-' => Reduce #4 functiondefinition call procdef {const=false}
	'*' => Reduce #4 functiondefinition call procdef {const=false}
	'~' => Reduce #4 functiondefinition call procdef {const=false}
	'!' => Reduce #4 functiondefinition call procdef {const=false}
	"main" => Reduce #4 functiondefinition call procdef {const=false}
	"var" => Reduce #4 functiondefinition call procdef {const=false}
	"return" => Reduce #4 functiondefinition call procdef {const=false}
	"delete" => Reduce #4 functiondefinition call procdef {const=false}
	"if" => Reduce #4 functiondefinition call procdef {const=false}
	"while" => Reduce #4 functiondefinition call procdef {const=false}
	"new" => Reduce #4 functiondefinition call procdef {const=false}
	"cast" => Reduce #4 functiondefinition call procdef {const=false}
	"null" => Reduce #4 functiondefinition call procdef {const=false}
[99]
	$ => Reduce #4 functiondefinition call procdef {const=true}
	BOOLEAN => Reduce #4 functiondefinition call procdef {const=true}
	IDENT => Reduce #4 functiondefinition call procdef {const=true}
	DQSTRING => Reduce #4 functiondefinition call procdef {const=true}
	SQSTRING => Reduce #4 functiondefinition call procdef {const=true}
	CARDINAL => Reduce #4 functiondefinition call procdef {const=true}
	INTEGER => Reduce #4 functiondefinition call procdef {const=true}
	FLOAT => Reduce #4 functiondefinition call procdef {const=true}
	"function" => Reduce #4 functiondefinition call procdef {const=true}
	'(' => Reduce #4 functiondefinition call procdef {const=true}
	"procedure" => Reduce #4 functiondefinition call procdef {const=true}
	"const" => Reduce #4 functiondefinition call procdef {const=true}
	"operator" => Reduce #4 functiondefinition call procdef {const=true}
	'&' => Reduce #4 functiondefinition call procdef {const=true}
	"typedef" => Reduce #4 functiondefinition call procdef {const=true}
	"struct" => Reduce #4 functiondefinition call procdef {const=true}
	'{' => Reduce #4 functiondefinition call procdef {const=true}
	'}' => Reduce #4 functiondefinition call procdef {const=true}
	"interface" => Reduce #4 functiondefinition call procdef {const=true}
	"class" => Reduce #4 functiondefinition call procdef {const=true}
	"private" => Reduce #4 functiondefinition call procdef {const=true}
	"public" => Reduce #4 functiondefinition call procdef {const=true}
	"constructor" => Reduce #4 functiondefinition call procdef {const=true}
	"destructor" => Reduce #4 functiondefinition call procdef {const=true}
	'+' => Reduce #4 functiondefinition call procdef {const=true}
	'-' => Reduce #4 functiondefinition call procdef {const=true}
	'*' => Reduce #4 functiondefinition call procdef {const=true}
	'~' => Reduce #4 functiondefinition call procdef {const=true}
	'!' => Reduce #4 functiondefinition call procdef {const=true}
	"main" => Reduce #4 functiondefinition call procdef {const=true}
	"var" => Reduce #4 functiondefinition call procdef {const=true}
	"return" => Reduce #4 functiondefinition call procdef {const=true}
	"delete" => Reduce #4 functiondefinition call procdef {const=true}
	"if" => Reduce #4 functiondefinition call procdef {const=true}
	"while" => Reduce #4 functiondefinition call procdef {const=true}
	"new" => Reduce #4 functiondefinition call procdef {const=true}
	"cast" => Reduce #4 functiondefinition call procdef {const=true}
	"null" => Reduce #4 functiondefinition call procdef {const=true}
[100]
	IDENT => Shift goto 17
	')' => Reduce #0 parameterlist call paramdeflist
	"const" => Shift goto 18
[101]
	IDENT => Reduce #4 typespec call typespec "const^&"
	'(' => Reduce #4 typespec call typespec "const^&"
	')' => Reduce #4 typespec call typespec "const^&"
	"..." => Reduce #4 typespec call typespec "const^&"
	',' => Reduce #4 typespec call typespec "const^&"
	':' => Reduce #4 typespec call typespec "const^&"
[102]
	IDENT => Reduce #4 typespec call typespec "const^^"
	'(' => Reduce #4 typespec call typespec "const^^"
	')' => Reduce #4 typespec call typespec "const^^"
	"..." => Reduce #4 typespec call typespec "const^^"
	',' => Reduce #4 typespec call typespec "const^^"
	'&' => Shift goto 192
	':' => Reduce #4 typespec call typespec "const^^"
[103]
	'}' => Shift goto 193
[104]
	IDENT => Shift goto 17
	"const" => Shift goto 18
	"typedef" => Shift goto 19
	"struct" => Shift goto 20
	'}' => Reduce #0 struct_definitionlist
[105]
	'}' => Shift goto 195
[106]
	"function" => Shift goto 107
	"procedure" => Shift goto 108
	"operator" => Shift goto 109
	'}' => Reduce #0 interface_definitionlist
[107]
	IDENT => Shift goto 197
[108]
	IDENT => Shift goto 198
[109]
	'(' => Shift goto 200
	'&' => Shift goto 201
	"->" => Shift goto 202
	'=' => Shift goto 203
	'+' => Shift goto 204
	'-' => Shift goto 205
	'*' => Shift goto 206
	'/' => Shift goto 207
	'%' => Shift goto 208
	"&&" => Shift goto 209
	"||" => Shift goto 210
	'|' => Shift goto 211
	"<<" => Shift goto 212
	">>" => Shift goto 213
	'~' => Shift goto 214
	'!' => Shift goto 215
	'[' => Shift goto 216
	"==" => Shift goto 217
	"!=" => Shift goto 218
	">=" => Shift goto 219
	"<=" => Shift goto 220
	'>' => Shift goto 221
	'<' => Shift goto 222
[110]
	'}' => Shift goto 223
[111]
	IDENT => Shift goto 17
	"function" => Reduce #0 linkage call linkage {private=false,linkage="external"}
	"procedure" => Reduce #0 linkage call linkage {private=false,linkage="external"}
	"const" => Shift goto 18
	"operator" => Reduce #0 linkage call linkage {private=false,linkage="external"}
	"typedef" => Shift goto 19
	"struct" => Shift goto 20
	'}' => Reduce #0 class_definitionlist
	"interface" => Shift goto 21
	"class" => Shift goto 22
	"private" => Shift goto 23
	"public" => Shift goto 24
	"constructor" => Reduce #0 linkage call linkage {private=false,linkage="external"}
	"destructor" => Shift goto 121
[112]
	';' => Shift goto 225
[113]
	$ => Reduce #1 class_definition call definition 1
	IDENT => Reduce #1 class_definition call definition 1
	"function" => Reduce #1 class_definition call definition 1
	"procedure" => Reduce #1 class_definition call definition 1
	"const" => Reduce #1 class_definition call definition 1
	"operator" => Reduce #1 class_definition call definition 1
	"typedef" => Reduce #1 class_definition call definition 1
	"struct" => Reduce #1 class_definition call definition 1
	'}' => Reduce #1 class_definition call definition 1
	"interface" => Reduce #1 class_definition call definition 1
	"class" => Reduce #1 class_definition call definition 1
	"private" => Reduce #1 class_definition call definition 1
	"public" => Reduce #1 class_definition call definition 1
	"constructor" => Reduce #1 class_definition call definition 1
	"destructor" => Reduce #1 class_definition call definition 1
[114]
	$ => Reduce #1 class_definition call definition 1
	IDENT => Reduce #1 class_definition call definition 1
	"function" => Reduce #1 class_definition call definition 1
	"procedure" => Reduce #1 class_definition call definition 1
	"const" => Reduce #1 class_definition call definition 1
	"operator" => Reduce #1 class_definition call definition 1
	"typedef" => Reduce #1 class_definition call definition 1
	"struct" => Reduce #1 class_definition call definition 1
	'}' => Reduce #1 class_definition call definition 1
	"interface" => Reduce #1 class_definition call definition 1
	"class" => Reduce #1 class_definition call definition 1
	"private" => Reduce #1 class_definition call definition 1
	"public" => Reduce #1 class_definition call definition 1
	"constructor" => Reduce #1 class_definition call definition 1
	"destructor" => Reduce #1 class_definition call definition 1
[115]
	$ => Reduce #1 class_definition call definition 1
	IDENT => Reduce #1 class_definition call definition 1
	"function" => Reduce #1 class_definition call definition 1
	"procedure" => Reduce #1 class_definition call definition 1
	"const" => Reduce #1 class_definition call definition 1
	"operator" => Reduce #1 class_definition call definition 1
	"typedef" => Reduce #1 class_definition call definition 1
	"struct" => Reduce #1 class_definition call definition 1
	'}' => Reduce #1 class_definition call definition 1
	"interface" => Reduce #1 class_definition call definition 1
	"class" => Reduce #1 class_definition call definition 1
	"private" => Reduce #1 class_definition call definition 1
	"public" => Reduce #1 class_definition call definition 1
	"constructor" => Reduce #1 class_definition call definition 1
	"destructor" => Reduce #1 class_definition call definition 1
[116]
	"function" => Shift goto 34
	"procedure" => Shift goto 35
	"operator" => Shift goto 226
	"constructor" => Shift goto 227
[117]
	$ => Reduce #1 class_definition call definition 2
	IDENT => Reduce #1 class_definition call definition 2
	"function" => Reduce #1 class_definition call definition 2
	"procedure" => Reduce #1 class_definition call definition 2
	"const" => Reduce #1 class_definition call definition 2
	"operator" => Reduce #1 class_definition call definition 2
	"typedef" => Reduce #1 class_definition call definition 2
	"struct" => Reduce #1 class_definition call definition 2
	'}' => Reduce #1 class_definition call definition 2
	"interface" => Reduce #1 class_definition call definition 2
	"class" => Reduce #1 class_definition call definition 2
	"private" => Reduce #1 class_definition call definition 2
	"public" => Reduce #1 class_definition call definition 2
	"constructor" => Reduce #1 class_definition call definition 2
	"destructor" => Reduce #1 class_definition call definition 2
[118]
	$ => Reduce #1 class_definition call definition 2
	IDENT => Reduce #1 class_definition call definition 2
	"function" => Reduce #1 class_definition call definition 2
	"procedure" => Reduce #1 class_definition call definition 2
	"const" => Reduce #1 class_definition call definition 2
	"operator" => Reduce #1 class_definition call definition 2
	"typedef" => Reduce #1 class_definition call definition 2
	"struct" => Reduce #1 class_definition call definition 2
	'}' => Reduce #1 class_definition call definition 2
	"interface" => Reduce #1 class_definition call definition 2
	"class" => Reduce #1 class_definition call definition 2
	"private" => Reduce #1 class_definition call definition 2
	"public" => Reduce #1 class_definition call definition 2
	"constructor" => Reduce #1 class_definition call definition 2
	"destructor" => Reduce #1 class_definition call definition 2
[119]
	$ => Reduce #1 class_definition call definition 2
	IDENT => Reduce #1 class_definition call definition 2
	"function" => Reduce #1 class_definition call definition 2
	"procedure" => Reduce #1 class_definition call definition 2
	"const" => Reduce #1 class_definition call definition 2
	"operator" => Reduce #1 class_definition call definition 2
	"typedef" => Reduce #1 class_definition call definition 2
	"struct" => Reduce #1 class_definition call definition 2
	'}' => Reduce #1 class_definition call definition 2
	"interface" => Reduce #1 class_definition call definition 2
	"class" => Reduce #1 class_definition call definition 2
	"private" => Reduce #1 class_definition call definition 2
	"public" => Reduce #1 class_definition call definition 2
	"constructor" => Reduce #1 class_definition call definition 2
	"destructor" => Reduce #1 class_definition call definition 2
[120]
	';' => Shift goto 228
[121]
	'{' => Shift goto 229
[122]
	',' => Shift goto 230
	'{' => Reduce #1 inheritlist call inheritdef 1
[123]
	'{' => Shift goto 231
[124]
	'(' => Shift goto 232
[125]
	IDENT => Shift goto 17
	')' => Reduce #0 extern_paramlist call extern_paramdeflist
	"..." => Reduce #0 extern_paramlist call extern_paramdeflist
	"const" => Shift goto 18
[126]
	$ => Reduce #2 statement call definition
	BOOLEAN => Reduce #2 statement call definition
	IDENT => Reduce #2 statement call definition
	DQSTRING => Reduce #2 statement call definition
	SQSTRING => Reduce #2 statement call definition
	CARDINAL => Reduce #2 statement call definition
	INTEGER => Reduce #2 statement call definition
	FLOAT => Reduce #2 statement call definition
	"function" => Reduce #2 statement call definition
	'(' => Reduce #2 statement call definition
	"procedure" => Reduce #2 statement call definition
	'&' => Reduce #2 statement call definition
	"typedef" => Reduce #2 statement call definition
	'{' => Reduce #2 statement call definition
	'}' => Reduce #2 statement call definition
	"private" => Reduce #2 statement call definition
	"public" => Reduce #2 statement call definition
	'+' => Reduce #2 statement call definition
	'-' => Reduce #2 statement call definition
	'*' => Reduce #2 statement call definition
	'~' => Reduce #2 statement call definition
	'!' => Reduce #2 statement call definition
	"var" => Reduce #2 statement call definition
	"return" => Reduce #2 statement call definition
	"delete" => Reduce #2 statement call definition
	"if" => Reduce #2 statement call definition
	"while" => Reduce #2 statement call definition
	"new" => Reduce #2 statement call definition
	"cast" => Reduce #2 statement call definition
	"null" => Reduce #2 statement call definition
[127]
	$ => Reduce #4 main_procedure call main_procdef
[128]
	'}' => Reduce #2 statementlist
[129]
	IDENT => Shift goto 236
[130]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	')' => Shift goto 238
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[131]
	$ => Reduce #2 statement call free_expression
	BOOLEAN => Reduce #2 statement call free_expression
	IDENT => Reduce #2 statement call free_expression
	DQSTRING => Reduce #2 statement call free_expression
	SQSTRING => Reduce #2 statement call free_expression
	CARDINAL => Reduce #2 statement call free_expression
	INTEGER => Reduce #2 statement call free_expression
	FLOAT => Reduce #2 statement call free_expression
	"function" => Reduce #2 statement call free_expression
	'(' => Reduce #2 statement call free_expression
	"procedure" => Reduce #2 statement call free_expression
	'&' => Reduce #2 statement call free_expression
	"typedef" => Reduce #2 statement call free_expression
	'{' => Reduce #2 statement call free_expression
	'}' => Reduce #2 statement call free_expression
	"private" => Reduce #2 statement call free_expression
	"public" => Reduce #2 statement call free_expression
	'+' => Reduce #2 statement call free_expression
	'-' => Reduce #2 statement call free_expression
	'*' => Reduce #2 statement call free_expression
	'~' => Reduce #2 statement call free_expression
	'!' => Reduce #2 statement call free_expression
	"var" => Reduce #2 statement call free_expression
	"return" => Reduce #2 statement call free_expression
	"delete" => Reduce #2 statement call free_expression
	"if" => Reduce #2 statement call free_expression
	"while" => Reduce #2 statement call free_expression
	"new" => Reduce #2 statement call free_expression
	"cast" => Reduce #2 statement call free_expression
	"null" => Reduce #2 statement call free_expression
[132]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[133]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[134]
	IDENT => Reduce #1 indirection call count
	"->" => Shift goto 134
[135]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[136]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[137]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[138]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[139]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[140]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[141]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[142]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[143]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[144]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[145]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[146]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[147]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[148]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[149]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[150]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[151]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[152]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[153]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[154]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[155]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[156]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[157]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[158]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[159]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[160]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[161]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[162]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[163]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[164]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[165]
	IDENT => Shift goto 272
[166]
	'(' => Shift goto 130
	')' => Shift goto 273
	'&' => Shift goto 132
	'^' => Shift goto 133
	"->" => Shift goto 134
	'=' => Shift goto 135
	'+' => Shift goto 136
	'-' => Shift goto 137
	'*' => Shift goto 138
	'/' => Shift goto 139
	'%' => Shift goto 140
	"&&" => Shift goto 141
	"||" => Shift goto 142
	'|' => Shift goto 143
	"<<" => Shift goto 144
	">>" => Shift goto 145
	'[' => Shift goto 146
	"==" => Shift goto 147
	"!=" => Shift goto 148
	">=" => Shift goto 149
	"<=" => Shift goto 150
	'>' => Shift goto 151
	'<' => Shift goto 152
	"+=" => Shift goto 153
	"-=" => Shift goto 154
	"*=" => Shift goto 155
	"/=" => Shift goto 156
	"^=" => Shift goto 157
	"&=" => Shift goto 158
	"%=" => Shift goto 159
	"&&=" => Shift goto 160
	"||=" => Shift goto 161
	"|=" => Shift goto 162
	"<<=" => Shift goto 163
	">>=" => Shift goto 164
	'.' => Shift goto 165
[167]
	'(' => Shift goto 130
	')' => Reduce #2 expression call operator "&"
	';' => Reduce #2 expression call operator "&"
	',' => Reduce #2 expression call operator "&"
	'&' => Reduce #2 expression call operator "&"
	'^' => Reduce #2 expression call operator "&"
	'}' => Reduce #2 expression call operator "&"
	"->" => Reduce #2 expression call operator "&"
	'=' => Reduce #2 expression call operator "&"
	'+' => Reduce #2 expression call operator "&"
	'-' => Reduce #2 expression call operator "&"
	'*' => Shift goto 138
	'/' => Shift goto 139
	'%' => Shift goto 140
	"&&" => Reduce #2 expression call operator "&"
	"||" => Reduce #2 expression call operator "&"
	'|' => Reduce #2 expression call operator "&"
	"<<" => Shift goto 144
	">>" => Shift goto 145
	'[' => Shift goto 146
	']' => Reduce #2 expression call operator "&"
	"==" => Reduce #2 expression call operator "&"
	"!=" => Reduce #2 expression call operator "&"
	">=" => Reduce #2 expression call operator "&"
	"<=" => Reduce #2 expression call operator "&"
	'>' => Reduce #2 expression call operator "&"
	'<' => Reduce #2 expression call operator "&"
	"+=" => Reduce #2 expression call operator "&"
	"-=" => Reduce #2 expression call operator "&"
	"*=" => Reduce #2 expression call operator "&"
	"/=" => Reduce #2 expression call operator "&"
	"^=" => Reduce #2 expression call operator "&"
	"&=" => Reduce #2 expression call operator "&"
	"%=" => Reduce #2 expression call operator "&"
	"&&=" => Reduce #2 expression call operator "&"
	"||=" => Reduce #2 expression call operator "&"
	"|=" => Reduce #2 expression call operator "&"
	"<<=" => Reduce #2 expression call operator "&"
	">>=" => Reduce #2 expression call operator "&"
	'.' => Shift goto 165
[168]
	'}' => Shift goto 274
[169]
	'(' => Shift goto 130
	';' => Shift goto 131
	',' => Shift goto 275
	'&' => Shift goto 132
	'^' => Shift goto 133
	'}' => Reduce #1 expressionlist
	"->" => Shift goto 134
	'=' => Shift goto 135
	'+' => Shift goto 136
	'-' => Shift goto 137
	'*' => Shift goto 138
	'/' => Shift goto 139
	'%' => Shift goto 140
	"&&" => Shift goto 141
	"||" => Shift goto 142
	'|' => Shift goto 143
	"<<" => Shift goto 144
	">>" => Shift goto 145
	'[' => Shift goto 146
	"==" => Shift goto 147
	"!=" => Shift goto 148
	">=" => Shift goto 149
	"<=" => Shift goto 150
	'>' => Shift goto 151
	'<' => Shift goto 152
	"+=" => Shift goto 153
	"-=" => Shift goto 154
	"*=" => Shift goto 155
	"/=" => Shift goto 156
	"^=" => Shift goto 157
	"&=" => Shift goto 158
	"%=" => Shift goto 159
	"&&=" => Shift goto 160
	"||=" => Shift goto 161
	"|=" => Shift goto 162
	"<<=" => Shift goto 163
	">>=" => Shift goto 164
	'.' => Shift goto 165
[170]
	'}' => Shift goto 276
[171]
	'(' => Reduce #2 expression call structure
	')' => Reduce #2 expression call structure
	';' => Reduce #2 expression call structure
	',' => Reduce #2 expression call structure
	'&' => Reduce #2 expression call structure
	'^' => Reduce #2 expression call structure
	'}' => Reduce #2 expression call structure
	"->" => Reduce #2 expression call structure
	'=' => Reduce #2 expression call structure
	'+' => Reduce #2 expression call structure
	'-' => Reduce #2 expression call structure
	'*' => Reduce #2 expression call structure
	'/' => Reduce #2 expression call structure
	'%' => Reduce #2 expression call structure
	"&&" => Reduce #2 expression call structure
	"||" => Reduce #2 expression call structure
	'|' => Reduce #2 expression call structure
	"<<" => Reduce #2 expression call structure
	">>" => Reduce #2 expression call structure
	'[' => Reduce #2 expression call structure
	']' => Reduce #2 expression call structure
	"==" => Reduce #2 expression call structure
	"!=" => Reduce #2 expression call structure
	">=" => Reduce #2 expression call structure
	"<=" => Reduce #2 expression call structure
	'>' => Reduce #2 expression call structure
	'<' => Reduce #2 expression call structure
	"+=" => Reduce #2 expression call structure
	"-=" => Reduce #2 expression call structure
	"*=" => Reduce #2 expression call structure
	"/=" => Reduce #2 expression call structure
	"^=" => Reduce #2 expression call structure
	"&=" => Reduce #2 expression call structure
	"%=" => Reduce #2 expression call structure
	"&&=" => Reduce #2 expression call structure
	"||=" => Reduce #2 expression call structure
	"|=" => Reduce #2 expression call structure
	"<<=" => Reduce #2 expression call structure
	">>=" => Reduce #2 expression call structure
	'.' => Reduce #2 expression call structure
[172]
	'(' => Shift goto 130
	')' => Reduce #2 expression call operator "+"
	';' => Reduce #2 expression call operator "+"
	',' => Reduce #2 expression call operator "+"
	'&' => Reduce #2 expression call operator "+"
	'^' => Reduce #2 expression call operator "+"
	'}' => Reduce #2 expression call operator "+"
	"->" => Reduce #2 expression call operator "+"
	'=' => Reduce #2 expression call operator "+"
	'+' => Reduce #2 expression call operator "+"
	'-' => Reduce #2 expression call operator "+"
	'*' => Shift goto 138
	'/' => Shift goto 139
	'%' => Shift goto 140
	"&&" => Reduce #2 expression call operator "+"
	"||" => Reduce #2 expression call operator "+"
	'|' => Reduce #2 expression call operator "+"
	"<<" => Shift goto 144
	">>" => Shift goto 145
	'[' => Shift goto 146
	']' => Reduce #2 expression call operator "+"
	"==" => Reduce #2 expression call operator "+"
	"!=" => Reduce #2 expression call operator "+"
	">=" => Reduce #2 expression call operator "+"
	"<=" => Reduce #2 expression call operator "+"
	'>' => Reduce #2 expression call operator "+"
	'<' => Reduce #2 expression call operator "+"
	"+=" => Reduce #2 expression call operator "+"
	"-=" => Reduce #2 expression call operator "+"
	"*=" => Reduce #2 expression call operator "+"
	"/=" => Reduce #2 expression call operator "+"
	"^=" => Reduce #2 expression call operator "+"
	"&=" => Reduce #2 expression call operator "+"
	"%=" => Reduce #2 expression call operator "+"
	"&&=" => Reduce #2 expression call operator "+"
	"||=" => Reduce #2 expression call operator "+"
	"|=" => Reduce #2 expression call operator "+"
	"<<=" => Reduce #2 expression call operator "+"
	">>=" => Reduce #2 expression call operator "+"
	'.' => Shift goto 165
[173]
	'(' => Shift goto 130
	')' => Reduce #2 expression call operator "-"
	';' => Reduce #2 expression call operator "-"
	',' => Reduce #2 expression call operator "-"
	'&' => Reduce #2 expression call operator "-"
	'^' => Reduce #2 expression call operator "-"
	'}' => Reduce #2 expression call operator "-"
	"->" => Reduce #2 expression call operator "-"
	'=' => Reduce #2 expression call operator "-"
	'+' => Reduce #2 expression call operator "-"
	'-' => Reduce #2 expression call operator "-"
	'*' => Shift goto 138
	'/' => Shift goto 139
	'%' => Shift goto 140
	"&&" => Reduce #2 expression call operator "-"
	"||" => Reduce #2 expression call operator "-"
	'|' => Reduce #2 expression call operator "-"
	"<<" => Shift goto 144
	">>" => Shift goto 145
	'[' => Shift goto 146
	']' => Reduce #2 expression call operator "-"
	"==" => Reduce #2 expression call operator "-"
	"!=" => Reduce #2 expression call operator "-"
	">=" => Reduce #2 expression call operator "-"
	"<=" => Reduce #2 expression call operator "-"
	'>' => Reduce #2 expression call operator "-"
	'<' => Reduce #2 expression call operator "-"
	"+=" => Reduce #2 expression call operator "-"
	"-=" => Reduce #2 expression call operator "-"
	"*=" => Reduce #2 expression call operator "-"
	"/=" => Reduce #2 expression call operator "-"
	"^=" => Reduce #2 expression call operator "-"
	"&=" => Reduce #2 expression call operator "-"
	"%=" => Reduce #2 expression call operator "-"
	"&&=" => Reduce #2 expression call operator "-"
	"||=" => Reduce #2 expression call operator "-"
	"|=" => Reduce #2 expression call operator "-"
	"<<=" => Reduce #2 expression call operator "-"
	">>=" => Reduce #2 expression call operator "-"
	'.' => Shift goto 165
[174]
	'(' => Shift goto 130
	')' => Reduce #2 expression call operator "->"
	';' => Reduce #2 expression call operator "->"
	',' => Reduce #2 expression call operator "->"
	'&' => Reduce #2 expression call operator "->"
	'^' => Reduce #2 expression call operator "->"
	'}' => Reduce #2 expression call operator "->"
	"->" => Reduce #2 expression call operator "->"
	'=' => Reduce #2 expression call operator "->"
	'+' => Reduce #2 expression call operator "->"
	'-' => Reduce #2 expression call operator "->"
	'*' => Reduce #2 expression call operator "->"
	'/' => Reduce #2 expression call operator "->"
	'%' => Reduce #2 expression call operator "->"
	"&&" => Reduce #2 expression call operator "->"
	"||" => Reduce #2 expression call operator "->"
	'|' => Reduce #2 expression call operator "->"
	"<<" => Reduce #2 expression call operator "->"
	">>" => Reduce #2 expression call operator "->"
	'[' => Shift goto 146
	']' => Reduce #2 expression call operator "->"
	"==" => Reduce #2 expression call operator "->"
	"!=" => Reduce #2 expression call operator "->"
	">=" => Reduce #2 expression call operator "->"
	"<=" => Reduce #2 expression call operator "->"
	'>' => Reduce #2 expression call operator "->"
	'<' => Reduce #2 expression call operator "->"
	"+=" => Reduce #2 expression call operator "->"
	"-=" => Reduce #2 expression call operator "->"
	"*=" => Reduce #2 expression call operator "->"
	"/=" => Reduce #2 expression call operator "->"
	"^=" => Reduce #2 expression call operator "->"
	"&=" => Reduce #2 expression call operator "->"
	"%=" => Reduce #2 expression call operator "->"
	"&&=" => Reduce #2 expression call operator "->"
	"||=" => Reduce #2 expression call operator "->"
	"|=" => Reduce #2 expression call operator "->"
	"<<=" => Reduce #2 expression call operator "->"
	">>=" => Reduce #2 expression call operator "->"
	'.' => Reduce #2 expression call operator "->"
[175]
	'(' => Shift goto 130
	')' => Reduce #2 expression call operator "~"
	';' => Reduce #2 expression call operator "~"
	',' => Reduce #2 expression call operator "~"
	'&' => Reduce #2 expression call operator "~"
	'^' => Reduce #2 expression call operator "~"
	'}' => Reduce #2 expression call operator "~"
	"->" => Reduce #2 expression call operator "~"
	'=' => Reduce #2 expression call operator "~"
	'+' => Reduce #2 expression call operator "~"
	'-' => Reduce #2 expression call operator "~"
	'*' => Shift goto 138
	'/' => Shift goto 139
	'%' => Shift goto 140
	"&&" => Reduce #2 expression call operator "~"
	"||" => Reduce #2 expression call operator "~"
	'|' => Reduce #2 expression call operator "~"
	"<<" => Shift goto 144
	">>" => Shift goto 145
	'[' => Shift goto 146
	']' => Reduce #2 expression call operator "~"
	"==" => Reduce #2 expression call operator "~"
	"!=" => Reduce #2 expression call operator "~"
	">=" => Reduce #2 expression call operator "~"
	"<=" => Reduce #2 expression call operator "~"
	'>' => Reduce #2 expression call operator "~"
	'<' => Reduce #2 expression call operator "~"
	"+=" => Reduce #2 expression call operator "~"
	"-=" => Reduce #2 expression call operator "~"
	"*=" => Reduce #2 expression call operator "~"
	"/=" => Reduce #2 expression call operator "~"
	"^=" => Reduce #2 expression call operator "~"
	"&=" => Reduce #2 expression call operator "~"
	"%=" => Reduce #2 expression call operator "~"
	"&&=" => Reduce #2 expression call operator "~"
	"||=" => Reduce #2 expression call operator "~"
	"|=" => Reduce #2 expression call operator "~"
	"<<=" => Reduce #2 expression call operator "~"
	">>=" => Reduce #2 expression call operator "~"
	'.' => Shift goto 165
[176]
	'(' => Shift goto 130
	')' => Reduce #2 expression call operator "!"
	';' => Reduce #2 expression call operator "!"
	',' => Reduce #2 expression call operator "!"
	'&' => Reduce #2 expression call operator "!"
	'^' => Reduce #2 expression call operator "!"
	'}' => Reduce #2 expression call operator "!"
	"->" => Reduce #2 expression call operator "!"
	'=' => Reduce #2 expression call operator "!"
	'+' => Reduce #2 expression call operator "!"
	'-' => Reduce #2 expression call operator "!"
	'*' => Shift goto 138
	'/' => Shift goto 139
	'%' => Shift goto 140
	"&&" => Reduce #2 expression call operator "!"
	"||" => Reduce #2 expression call operator "!"
	'|' => Reduce #2 expression call operator "!"
	"<<" => Shift goto 144
	">>" => Shift goto 145
	'[' => Shift goto 146
	']' => Reduce #2 expression call operator "!"
	"==" => Reduce #2 expression call operator "!"
	"!=" => Reduce #2 expression call operator "!"
	">=" => Reduce #2 expression call operator "!"
	"<=" => Reduce #2 expression call operator "!"
	'>' => Reduce #2 expression call operator "!"
	'<' => Reduce #2 expression call operator "!"
	"+=" => Reduce #2 expression call operator "!"
	"-=" => Reduce #2 expression call operator "!"
	"*=" => Reduce #2 expression call operator "!"
	"/=" => Reduce #2 expression call operator "!"
	"^=" => Reduce #2 expression call operator "!"
	"&=" => Reduce #2 expression call operator "!"
	"%=" => Reduce #2 expression call operator "!"
	"&&=" => Reduce #2 expression call operator "!"
	"||=" => Reduce #2 expression call operator "!"
	"|=" => Reduce #2 expression call operator "!"
	"<<=" => Reduce #2 expression call operator "!"
	">>=" => Reduce #2 expression call operator "!"
	'.' => Shift goto 165
[177]
	';' => Shift goto 277
[178]
	'(' => Shift goto 130
	';' => Shift goto 278
	'&' => Shift goto 132
	'^' => Shift goto 133
	"->" => Shift goto 134
	'=' => Shift goto 135
	'+' => Shift goto 136
	'-' => Shift goto 137
	'*' => Shift goto 138
	'/' => Shift goto 139
	'%' => Shift goto 140
	"&&" => Shift goto 141
	"||" => Shift goto 142
	'|' => Shift goto 143
	"<<" => Shift goto 144
	">>" => Shift goto 145
	'[' => Shift goto 146
	"==" => Shift goto 147
	"!=" => Shift goto 148
	">=" => Shift goto 149
	"<=" => Shift goto 150
	'>' => Shift goto 151
	'<' => Shift goto 152
	"+=" => Shift goto 153
	"-=" => Shift goto 154
	"*=" => Shift goto 155
	"/=" => Shift goto 156
	"^=" => Shift goto 157
	"&=" => Shift goto 158
	"%=" => Shift goto 159
	"&&=" => Shift goto 160
	"||=" => Shift goto 161
	"|=" => Shift goto 162
	"<<=" => Shift goto 163
	">>=" => Shift goto 164
	'.' => Shift goto 165
[179]
	'(' => Shift goto 130
	';' => Shift goto 279
	'&' => Shift goto 132
	'^' => Shift goto 133
	"->" => Shift goto 134
	'=' => Shift goto 135
	'+' => Shift goto 136
	'-' => Shift goto 137
	'*' => Shift goto 138
	'/' => Shift goto 139
	'%' => Shift goto 140
	"&&" => Shift goto 141
	"||" => Shift goto 142
	'|' => Shift goto 143
	"<<" => Shift goto 144
	">>" => Shift goto 145
	'[' => Shift goto 146
	"==" => Shift goto 147
	"!=" => Shift goto 148
	">=" => Shift goto 149
	"<=" => Shift goto 150
	'>' => Shift goto 151
	'<' => Shift goto 152
	"+=" => Shift goto 153
	"-=" => Shift goto 154
	"*=" => Shift goto 155
	"/=" => Shift goto 156
	"^=" => Shift goto 157
	"&=" => Shift goto 158
	"%=" => Shift goto 159
	"&&=" => Shift goto 160
	"||=" => Shift goto 161
	"|=" => Shift goto 162
	"<<=" => Shift goto 163
	">>=" => Shift goto 164
	'.' => Shift goto 165
[180]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[181]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[182]
	':' => Shift goto 282
[183]
	':' => Shift goto 283
[184]
	'(' => Shift goto 130
	')' => Reduce #1 expressionlist
	',' => Shift goto 275
	'&' => Shift goto 132
	'^' => Shift goto 133
	'}' => Reduce #1 expressionlist
	"->" => Shift goto 134
	'=' => Shift goto 135
	'+' => Shift goto 136
	'-' => Shift goto 137
	'*' => Shift goto 138
	'/' => Shift goto 139
	'%' => Shift goto 140
	"&&" => Shift goto 141
	"||" => Shift goto 142
	'|' => Shift goto 143
	"<<" => Shift goto 144
	">>" => Shift goto 145
	'[' => Shift goto 146
	']' => Reduce #1 expressionlist
	"==" => Shift goto 147
	"!=" => Shift goto 148
	">=" => Shift goto 149
	"<=" => Shift goto 150
	'>' => Shift goto 151
	'<' => Shift goto 152
	"+=" => Shift goto 153
	"-=" => Shift goto 154
	"*=" => Shift goto 155
	"/=" => Shift goto 156
	"^=" => Shift goto 157
	"&=" => Shift goto 158
	"%=" => Shift goto 159
	"&&=" => Shift goto 160
	"||=" => Shift goto 161
	"|=" => Shift goto 162
	"<<=" => Shift goto 163
	">>=" => Shift goto 164
	'.' => Shift goto 165
[185]
	';' => Reduce #5 variabledefinition call vardef_array
	'=' => Shift goto 284
[186]
	$ => Reduce #5 functiondefinition call funcdef {const=false}
	BOOLEAN => Reduce #5 functiondefinition call funcdef {const=false}
	IDENT => Reduce #5 functiondefinition call funcdef {const=false}
	DQSTRING => Reduce #5 functiondefinition call funcdef {const=false}
	SQSTRING => Reduce #5 functiondefinition call funcdef {const=false}
	CARDINAL => Reduce #5 functiondefinition call funcdef {const=false}
	INTEGER => Reduce #5 functiondefinition call funcdef {const=false}
	FLOAT => Reduce #5 functiondefinition call funcdef {const=false}
	"function" => Reduce #5 functiondefinition call funcdef {const=false}
	'(' => Reduce #5 functiondefinition call funcdef {const=false}
	"procedure" => Reduce #5 functiondefinition call funcdef {const=false}
	"const" => Reduce #5 functiondefinition call funcdef {const=false}
	"operator" => Reduce #5 functiondefinition call funcdef {const=false}
	'&' => Reduce #5 functiondefinition call funcdef {const=false}
	"typedef" => Reduce #5 functiondefinition call funcdef {const=false}
	"struct" => Reduce #5 functiondefinition call funcdef {const=false}
	'{' => Reduce #5 functiondefinition call funcdef {const=false}
	'}' => Reduce #5 functiondefinition call funcdef {const=false}
	"interface" => Reduce #5 functiondefinition call funcdef {const=false}
	"class" => Reduce #5 functiondefinition call funcdef {const=false}
	"private" => Reduce #5 functiondefinition call funcdef {const=false}
	"public" => Reduce #5 functiondefinition call funcdef {const=false}
	"constructor" => Reduce #5 functiondefinition call funcdef {const=false}
	"destructor" => Reduce #5 functiondefinition call funcdef {const=false}
	'+' => Reduce #5 functiondefinition call funcdef {const=false}
	'-' => Reduce #5 functiondefinition call funcdef {const=false}
	'*' => Reduce #5 functiondefinition call funcdef {const=false}
	'~' => Reduce #5 functiondefinition call funcdef {const=false}
	'!' => Reduce #5 functiondefinition call funcdef {const=false}
	"main" => Reduce #5 functiondefinition call funcdef {const=false}
	"var" => Reduce #5 functiondefinition call funcdef {const=false}
	"return" => Reduce #5 functiondefinition call funcdef {const=false}
	"delete" => Reduce #5 functiondefinition call funcdef {const=false}
	"if" => Reduce #5 functiondefinition call funcdef {const=false}
	"while" => Reduce #5 functiondefinition call funcdef {const=false}
	"new" => Reduce #5 functiondefinition call funcdef {const=false}
	"cast" => Reduce #5 functiondefinition call funcdef {const=false}
	"null" => Reduce #5 functiondefinition call funcdef {const=false}
[187]
	$ => Reduce #5 functiondefinition call funcdef {const=true}
	BOOLEAN => Reduce #5 functiondefinition call funcdef {const=true}
	IDENT => Reduce #5 functiondefinition call funcdef {const=true}
	DQSTRING => Reduce #5 functiondefinition call funcdef {const=true}
	SQSTRING => Reduce #5 functiondefinition call funcdef {const=true}
	CARDINAL => Reduce #5 functiondefinition call funcdef {const=true}
	INTEGER => Reduce #5 functiondefinition call funcdef {const=true}
	FLOAT => Reduce #5 functiondefinition call funcdef {const=true}
	"function" => Reduce #5 functiondefinition call funcdef {const=true}
	'(' => Reduce #5 functiondefinition call funcdef {const=true}
	"procedure" => Reduce #5 functiondefinition call funcdef {const=true}
	"const" => Reduce #5 functiondefinition call funcdef {const=true}
	"operator" => Reduce #5 functiondefinition call funcdef {const=true}
	'&' => Reduce #5 functiondefinition call funcdef {const=true}
	"typedef" => Reduce #5 functiondefinition call funcdef {const=true}
	"struct" => Reduce #5 functiondefinition call funcdef {const=true}
	'{' => Reduce #5 functiondefinition call funcdef {const=true}
	'}' => Reduce #5 functiondefinition call funcdef {const=true}
	"interface" => Reduce #5 functiondefinition call funcdef {const=true}
	"class" => Reduce #5 functiondefinition call funcdef {const=true}
	"private" => Reduce #5 functiondefinition call funcdef {const=true}
	"public" => Reduce #5 functiondefinition call funcdef {const=true}
	"constructor" => Reduce #5 functiondefinition call funcdef {const=true}
	"destructor" => Reduce #5 functiondefinition call funcdef {const=true}
	'+' => Reduce #5 functiondefinition call funcdef {const=true}
	'-' => Reduce #5 functiondefinition call funcdef {const=true}
	'*' => Reduce #5 functiondefinition call funcdef {const=true}
	'~' => Reduce #5 functiondefinition call funcdef {const=true}
	'!' => Reduce #5 functiondefinition call funcdef {const=true}
	"main" => Reduce #5 functiondefinition call funcdef {const=true}
	"var" => Reduce #5 functiondefinition call funcdef {const=true}
	"return" => Reduce #5 functiondefinition call funcdef {const=true}
	"delete" => Reduce #5 functiondefinition call funcdef {const=true}
	"if" => Reduce #5 functiondefinition call funcdef {const=true}
	"while" => Reduce #5 functiondefinition call funcdef {const=true}
	"new" => Reduce #5 functiondefinition call funcdef {const=true}
	"cast" => Reduce #5 functiondefinition call funcdef {const=true}
	"null" => Reduce #5 functiondefinition call funcdef {const=true}
[188]
	IDENT => Shift goto 285
[189]
	')' => Shift goto 286
[190]
	')' => Reduce #1 parameterlist call paramdeflist
[191]
	')' => Reduce #1 parameters
	',' => Shift goto 287
[192]
	IDENT => Reduce #5 typespec call typespec "const^^&"
	'(' => Reduce #5 typespec call typespec "const^^&"
	')' => Reduce #5 typespec call typespec "const^^&"
	"..." => Reduce #5 typespec call typespec "const^^&"
	',' => Reduce #5 typespec call typespec "const^^&"
	':' => Reduce #5 typespec call typespec "const^^&"
[193]
	$ => Reduce #5 structdefinition call structdef
	IDENT => Reduce #5 structdefinition call structdef
	"function" => Reduce #5 structdefinition call structdef
	"procedure" => Reduce #5 structdefinition call structdef
	"const" => Reduce #5 structdefinition call structdef
	"operator" => Reduce #5 structdefinition call structdef
	"typedef" => Reduce #5 structdefinition call structdef
	"struct" => Reduce #5 structdefinition call structdef
	'}' => Reduce #5 structdefinition call structdef
	"interface" => Reduce #5 structdefinition call structdef
	"class" => Reduce #5 structdefinition call structdef
	"private" => Reduce #5 structdefinition call structdef
	"public" => Reduce #5 structdefinition call structdef
	"constructor" => Reduce #5 structdefinition call structdef
	"destructor" => Reduce #5 structdefinition call structdef
	"main" => Reduce #5 structdefinition call structdef
[194]
	'}' => Reduce #2 struct_definitionlist
[195]
	$ => Reduce #5 interfacedefinition call interfacedef
	IDENT => Reduce #5 interfacedefinition call interfacedef
	"function" => Reduce #5 interfacedefinition call interfacedef
	"procedure" => Reduce #5 interfacedefinition call interfacedef
	"const" => Reduce #5 interfacedefinition call interfacedef
	"operator" => Reduce #5 interfacedefinition call interfacedef
	"typedef" => Reduce #5 interfacedefinition call interfacedef
	"struct" => Reduce #5 interfacedefinition call interfacedef
	'}' => Reduce #5 interfacedefinition call interfacedef
	"interface" => Reduce #5 interfacedefinition call interfacedef
	"class" => Reduce #5 interfacedefinition call interfacedef
	"private" => Reduce #5 interfacedefinition call interfacedef
	"public" => Reduce #5 interfacedefinition call interfacedef
	"constructor" => Reduce #5 interfacedefinition call interfacedef
	"destructor" => Reduce #5 interfacedefinition call interfacedef
	"main" => Reduce #5 interfacedefinition call interfacedef
[196]
	'}' => Reduce #2 interface_definitionlist
[197]
	IDENT => Shift goto 17
	"const" => Shift goto 18
[198]
	'(' => Shift goto 289
[199]
	IDENT => Shift goto 17
	'(' => Shift goto 291
	"const" => Shift goto 18
[200]
	')' => Shift goto 292
[201]
	IDENT => Reduce #1 operatordecl call operatordecl {name="&",symbol="bitand"}
	'(' => Reduce #1 operatordecl call operatordecl {name="&",symbol="bitand"}
	"const" => Reduce #1 operatordecl call operatordecl {name="&",symbol="bitand"}
[202]
	IDENT => Reduce #1 operatordecl call operatordecl {name="->",symbol="arrow"}
	'(' => Reduce #1 operatordecl call operatordecl {name="->",symbol="arrow"}
	"const" => Reduce #1 operatordecl call operatordecl {name="->",symbol="arrow"}
[203]
	IDENT => Reduce #1 operatordecl call operatordecl {name="=",symbol="assign"}
	'(' => Reduce #1 operatordecl call operatordecl {name="=",symbol="assign"}
	"const" => Reduce #1 operatordecl call operatordecl {name="=",symbol="assign"}
[204]
	IDENT => Reduce #1 operatordecl call operatordecl {name="+",symbol="plus"}
	'(' => Reduce #1 operatordecl call operatordecl {name="+",symbol="plus"}
	"const" => Reduce #1 operatordecl call operatordecl {name="+",symbol="plus"}
[205]
	IDENT => Reduce #1 operatordecl call operatordecl {name="-",symbol="minus"}
	'(' => Reduce #1 operatordecl call operatordecl {name="-",symbol="minus"}
	"const" => Reduce #1 operatordecl call operatordecl {name="-",symbol="minus"}
[206]
	IDENT => Reduce #1 operatordecl call operatordecl {name="*",symbol="mul"}
	'(' => Reduce #1 operatordecl call operatordecl {name="*",symbol="mul"}
	"const" => Reduce #1 operatordecl call operatordecl {name="*",symbol="mul"}
[207]
	IDENT => Reduce #1 operatordecl call operatordecl {name="/",symbol="div"}
	'(' => Reduce #1 operatordecl call operatordecl {name="/",symbol="div"}
	"const" => Reduce #1 operatordecl call operatordecl {name="/",symbol="div"}
[208]
	IDENT => Reduce #1 operatordecl call operatordecl {name="%",symbol="mod"}
	'(' => Reduce #1 operatordecl call operatordecl {name="%",symbol="mod"}
	"const" => Reduce #1 operatordecl call operatordecl {name="%",symbol="mod"}
[209]
	IDENT => Reduce #1 operatordecl call operatordecl {name="&&",symbol="and"}
	'(' => Reduce #1 operatordecl call operatordecl {name="&&",symbol="and"}
	"const" => Reduce #1 operatordecl call operatordecl {name="&&",symbol="and"}
[210]
	IDENT => Reduce #1 operatordecl call operatordecl {name="||",symbol="or"}
	'(' => Reduce #1 operatordecl call operatordecl {name="||",symbol="or"}
	"const" => Reduce #1 operatordecl call operatordecl {name="||",symbol="or"}
[211]
	IDENT => Reduce #1 operatordecl call operatordecl {name="|",symbol="bitor"}
	'(' => Reduce #1 operatordecl call operatordecl {name="|",symbol="bitor"}
	"const" => Reduce #1 operatordecl call operatordecl {name="|",symbol="bitor"}
[212]
	IDENT => Reduce #1 operatordecl call operatordecl {name="<<",symbol="lsh"}
	'(' => Reduce #1 operatordecl call operatordecl {name="<<",symbol="lsh"}
	"const" => Reduce #1 operatordecl call operatordecl {name="<<",symbol="lsh"}
[213]
	IDENT => Reduce #1 operatordecl call operatordecl {name=">>",symbol="rsh"}
	'(' => Reduce #1 operatordecl call operatordecl {name=">>",symbol="rsh"}
	"const" => Reduce #1 operatordecl call operatordecl {name=">>",symbol="rsh"}
[214]
	IDENT => Reduce #1 operatordecl call operatordecl {name="~",symbol="lneg"}
	'(' => Reduce #1 operatordecl call operatordecl {name="~",symbol="lneg"}
	"const" => Reduce #1 operatordecl call operatordecl {name="~",symbol="lneg"}
[215]
	IDENT => Reduce #1 operatordecl call operatordecl {name="!",symbol="not"}
	'(' => Reduce #1 operatordecl call operatordecl {name="!",symbol="not"}
	"const" => Reduce #1 operatordecl call operatordecl {name="!",symbol="not"}
[216]
	']' => Shift goto 293
[217]
	IDENT => Reduce #1 operatordecl call operatordecl {name="==",symbol="eq"}
	'(' => Reduce #1 operatordecl call operatordecl {name="==",symbol="eq"}
	"const" => Reduce #1 operatordecl call operatordecl {name="==",symbol="eq"}
[218]
	IDENT => Reduce #1 operatordecl call operatordecl {name="!=",symbol="ne"}
	'(' => Reduce #1 operatordecl call operatordecl {name="!=",symbol="ne"}
	"const" => Reduce #1 operatordecl call operatordecl {name="!=",symbol="ne"}
[219]
	IDENT => Reduce #1 operatordecl call operatordecl {name=">=",symbol="ge"}
	'(' => Reduce #1 operatordecl call operatordecl {name=">=",symbol="ge"}
	"const" => Reduce #1 operatordecl call operatordecl {name=">=",symbol="ge"}
[220]
	IDENT => Reduce #1 operatordecl call operatordecl {name="<=",symbol="le"}
	'(' => Reduce #1 operatordecl call operatordecl {name="<=",symbol="le"}
	"const" => Reduce #1 operatordecl call operatordecl {name="<=",symbol="le"}
[221]
	IDENT => Reduce #1 operatordecl call operatordecl {name=">",symbol="gt"}
	'(' => Reduce #1 operatordecl call operatordecl {name=">",symbol="gt"}
	"const" => Reduce #1 operatordecl call operatordecl {name=">",symbol="gt"}
[222]
	IDENT => Reduce #1 operatordecl call operatordecl {name="<",symbol="lt"}
	'(' => Reduce #1 operatordecl call operatordecl {name="<",symbol="lt"}
	"const" => Reduce #1 operatordecl call operatordecl {name="<",symbol="lt"}
[223]
	$ => Reduce #5 classdefinition call classdef
	IDENT => Reduce #5 classdefinition call classdef
	"function" => Reduce #5 classdefinition call classdef
	"procedure" => Reduce #5 classdefinition call classdef
	"const" => Reduce #5 classdefinition call classdef
	"operator" => Reduce #5 classdefinition call classdef
	"typedef" => Reduce #5 classdefinition call classdef
	"struct" => Reduce #5 classdefinition call classdef
	'}' => Reduce #5 classdefinition call classdef
	"interface" => Reduce #5 classdefinition call classdef
	"class" => Reduce #5 classdefinition call classdef
	"private" => Reduce #5 classdefinition call classdef
	"public" => Reduce #5 classdefinition call classdef
	"constructor" => Reduce #5 classdefinition call classdef
	"destructor" => Reduce #5 classdefinition call classdef
	"main" => Reduce #5 classdefinition call classdef
[224]
	'}' => Reduce #2 class_definitionlist
[225]
	$ => Reduce #2 class_definition call definition 1
	IDENT => Reduce #2 class_definition call definition 1
	"function" => Reduce #2 class_definition call definition 1
	"procedure" => Reduce #2 class_definition call definition 1
	"const" => Reduce #2 class_definition call definition 1
	"operator" => Reduce #2 class_definition call definition 1
	"typedef" => Reduce #2 class_definition call definition 1
	"struct" => Reduce #2 class_definition call definition 1
	'}' => Reduce #2 class_definition call definition 1
	"interface" => Reduce #2 class_definition call definition 1
	"class" => Reduce #2 class_definition call definition 1
	"private" => Reduce #2 class_definition call definition 1
	"public" => Reduce #2 class_definition call definition 1
	"constructor" => Reduce #2 class_definition call definition 1
	"destructor" => Reduce #2 class_definition call definition 1
[226]
	'(' => Shift goto 200
	'&' => Shift goto 201
	"->" => Shift goto 202
	'=' => Shift goto 203
	'+' => Shift goto 204
	'-' => Shift goto 205
	'*' => Shift goto 206
	'/' => Shift goto 207
	'%' => Shift goto 208
	"&&" => Shift goto 209
	"||" => Shift goto 210
	'|' => Shift goto 211
	"<<" => Shift goto 212
	">>" => Shift goto 213
	'~' => Shift goto 214
	'!' => Shift goto 215
	'[' => Shift goto 216
	"==" => Shift goto 217
	"!=" => Shift goto 218
	">=" => Shift goto 219
	"<=" => Shift goto 220
	'>' => Shift goto 221
	'<' => Shift goto 222
[227]
	'(' => Shift goto 296
[228]
	$ => Reduce #2 class_definition call definition 1
	IDENT => Reduce #2 class_definition call definition 1
	"function" => Reduce #2 class_definition call definition 1
	"procedure" => Reduce #2 class_definition call definition 1
	"const" => Reduce #2 class_definition call definition 1
	"operator" => Reduce #2 class_definition call definition 1
	"typedef" => Reduce #2 class_definition call definition 1
	"struct" => Reduce #2 class_definition call definition 1
	'}' => Reduce #2 class_definition call definition 1
	"interface" => Reduce #2 class_definition call definition 1
	"class" => Reduce #2 class_definition call definition 1
	"private" => Reduce #2 class_definition call definition 1
	"public" => Reduce #2 class_definition call definition 1
	"constructor" => Reduce #2 class_definition call definition 1
	"destructor" => Reduce #2 class_definition call definition 1
[229]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	"function" => Reduce #0 linkage call linkage {private=false,linkage="external"}
	'(' => Shift goto 77
	"procedure" => Reduce #0 linkage call linkage {private=false,linkage="external"}
	'&' => Shift goto 78
	"typedef" => Shift goto 19
	'{' => Shift goto 79
	'}' => Reduce #0 statementlist
	"private" => Shift goto 23
	"public" => Shift goto 24
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"var" => Shift goto 85
	"return" => Shift goto 86
	"delete" => Shift goto 87
	"if" => Shift goto 88
	"while" => Shift goto 89
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[230]
	IDENT => Shift goto 17
[231]
	IDENT => Shift goto 17
	"function" => Reduce #0 linkage call linkage {private=false,linkage="external"}
	"procedure" => Reduce #0 linkage call linkage {private=false,linkage="external"}
	"const" => Shift goto 18
	"operator" => Reduce #0 linkage call linkage {private=false,linkage="external"}
	"typedef" => Shift goto 19
	"struct" => Shift goto 20
	'}' => Reduce #0 class_definitionlist
	"interface" => Shift goto 21
	"class" => Shift goto 22
	"private" => Shift goto 23
	"public" => Shift goto 24
	"constructor" => Reduce #0 linkage call linkage {private=false,linkage="external"}
	"destructor" => Shift goto 121
[232]
	IDENT => Shift goto 17
	')' => Reduce #0 extern_paramlist call extern_paramdeflist
	"..." => Reduce #0 extern_paramlist call extern_paramdeflist
	"const" => Shift goto 18
[233]
	')' => Reduce #1 extern_paramlist call extern_paramdeflist
	"..." => Reduce #1 extern_paramlist call extern_paramdeflist
[234]
	')' => Shift goto 301
	"..." => Shift goto 302
[235]
	IDENT => Shift goto 303
	')' => Reduce #1 extern_parameters
	"..." => Reduce #1 extern_parameters
	',' => Shift goto 304
[236]
	'(' => Reduce #3 iexpression call rep_operator "->"
	')' => Reduce #3 iexpression call rep_operator "->"
	';' => Reduce #3 iexpression call rep_operator "->"
	',' => Reduce #3 iexpression call rep_operator "->"
	'&' => Reduce #3 iexpression call rep_operator "->"
	'^' => Reduce #3 iexpression call rep_operator "->"
	'}' => Reduce #3 iexpression call rep_operator "->"
	"->" => Reduce #3 iexpression call rep_operator "->"
	'=' => Reduce #3 iexpression call rep_operator "->"
	'+' => Reduce #3 iexpression call rep_operator "->"
	'-' => Reduce #3 iexpression call rep_operator "->"
	'*' => Reduce #3 iexpression call rep_operator "->"
	'/' => Reduce #3 iexpression call rep_operator "->"
	'%' => Reduce #3 iexpression call rep_operator "->"
	"&&" => Reduce #3 iexpression call rep_operator "->"
	"||" => Reduce #3 iexpression call rep_operator "->"
	'|' => Reduce #3 iexpression call rep_operator "->"
	"<<" => Reduce #3 iexpression call rep_operator "->"
	">>" => Reduce #3 iexpression call rep_operator "->"
	'[' => Reduce #3 iexpression call rep_operator "->"
	']' => Reduce #3 iexpression call rep_operator "->"
	"==" => Reduce #3 iexpression call rep_operator "->"
	"!=" => Reduce #3 iexpression call rep_operator "->"
	">=" => Reduce #3 iexpression call rep_operator "->"
	"<=" => Reduce #3 iexpression call rep_operator "->"
	'>' => Reduce #3 iexpression call rep_operator "->"
	'<' => Reduce #3 iexpression call rep_operator "->"
	"+=" => Reduce #3 iexpression call rep_operator "->"
	"-=" => Reduce #3 iexpression call rep_operator "->"
	"*=" => Reduce #3 iexpression call rep_operator "->"
	"/=" => Reduce #3 iexpression call rep_operator "->"
	"^=" => Reduce #3 iexpression call rep_operator "->"
	"&=" => Reduce #3 iexpression call rep_operator "->"
	"%=" => Reduce #3 iexpression call rep_operator "->"
	"&&=" => Reduce #3 iexpression call rep_operator "->"
	"||=" => Reduce #3 iexpression call rep_operator "->"
	"|=" => Reduce #3 iexpression call rep_operator "->"
	"<<=" => Reduce #3 iexpression call rep_operator "->"
	">>=" => Reduce #3 iexpression call rep_operator "->"
	'.' => Reduce #3 iexpression call rep_operator "->"
[237]
	')' => Shift goto 305
[238]
	'(' => Reduce #3 expression call operator "()"
	')' => Reduce #3 expression call operator "()"
	';' => Reduce #3 expression call operator "()"
	',' => Reduce #3 expression call operator "()"
	'&' => Reduce #3 expression call operator "()"
	'^' => Reduce #3 expression call operator "()"
	'}' => Reduce #3 expression call operator "()"
	"->" => Reduce #3 expression call operator "()"
	'=' => Reduce #3 expression call operator "()"
	'+' => Reduce #3 expression call operator "()"
	'-' => Reduce #3 expression call operator "()"
	'*' => Reduce #3 expression call operator "()"
	'/' => Reduce #3 expression call operator "()"
	'%' => Reduce #3 expression call operator "()"
	"&&" => Reduce #3 expression call operator "()"
	"||" => Reduce #3 expression call operator "()"
	'|' => Reduce #3 expression call operator "()"
	"<<" => Reduce #3 expression call operator "()"
	">>" => Reduce #3 expression call operator "()"
	'[' => Reduce #3 expression call operator "()"
	']' => Reduce #3 expression call operator "()"
	"==" => Reduce #3 expression call operator "()"
	"!=" => Reduce #3 expression call operator "()"
	">=" => Reduce #3 expression call operator "()"
	"<=" => Reduce #3 expression call operator "()"
	'>' => Reduce #3 expression call operator "()"
	'<' => Reduce #3 expression call operator "()"
	"+=" => Reduce #3 expression call operator "()"
	"-=" => Reduce #3 expression call operator "()"
	"*=" => Reduce #3 expression call operator "()"
	"/=" => Reduce #3 expression call operator "()"
	"^=" => Reduce #3 expression call operator "()"
	"&=" => Reduce #3 expression call operator "()"
	"%=" => Reduce #3 expression call operator "()"
	"&&=" => Reduce #3 expression call operator "()"
	"||=" => Reduce #3 expression call operator "()"
	"|=" => Reduce #3 expression call operator "()"
	"<<=" => Reduce #3 expression call operator "()"
	">>=" => Reduce #3 expression call operator "()"
	'.' => Reduce #3 expression call operator "()"
[239]
	'(' => Shift goto 130
	')' => Reduce #3 expression call operator "&"
	';' => Reduce #3 expression call operator "&"
	',' => Reduce #3 expression call operator "&"
	'&' => Reduce #3 expression call operator "&"
	'^' => Reduce #3 expression call operator "&"
	'}' => Reduce #3 expression call operator "&"
	"->" => Reduce #3 expression call operator "&"
	'=' => Reduce #3 expression call operator "&"
	'+' => Shift goto 136
	'-' => Shift goto 137
	'*' => Shift goto 138
	'/' => Shift goto 139
	'%' => Shift goto 140
	"&&" => Reduce #3 expression call operator "&"
	"||" => Reduce #3 expression call operator "&"
	'|' => Reduce #3 expression call operator "&"
	"<<" => Shift goto 144
	">>" => Shift goto 145
	'[' => Shift goto 146
	']' => Reduce #3 expression call operator "&"
	"==" => Shift goto 147
	"!=" => Shift goto 148
	">=" => Shift goto 149
	"<=" => Shift goto 150
	'>' => Shift goto 151
	'<' => Shift goto 152
	"+=" => Reduce #3 expression call operator "&"
	"-=" => Reduce #3 expression call operator "&"
	"*=" => Reduce #3 expression call operator "&"
	"/=" => Reduce #3 expression call operator "&"
	"^=" => Reduce #3 expression call operator "&"
	"&=" => Reduce #3 expression call operator "&"
	"%=" => Reduce #3 expression call operator "&"
	"&&=" => Reduce #3 expression call operator "&"
	"||=" => Reduce #3 expression call operator "&"
	"|=" => Reduce #3 expression call operator "&"
	"<<=" => Reduce #3 expression call operator "&"
	">>=" => Reduce #3 expression call operator "&"
	'.' => Shift goto 165
[240]
	'(' => Shift goto 130
	')' => Reduce #3 expression call operator "^"
	';' => Reduce #3 expression call operator "^"
	',' => Reduce #3 expression call operator "^"
	'&' => Reduce #3 expression call operator "^"
	'^' => Reduce #3 expression call operator "^"
	'}' => Reduce #3 expression call operator "^"
	"->" => Reduce #3 expression call operator "^"
	'=' => Reduce #3 expression call operator "^"
	'+' => Shift goto 136
	'-' => Shift goto 137
	'*' => Shift goto 138
	'/' => Shift goto 139
	'%' => Shift goto 140
	"&&" => Reduce #3 expression call operator "^"
	"||" => Reduce #3 expression call operator "^"
	'|' => Reduce #3 expression call operator "^"
	"<<" => Shift goto 144
	">>" => Shift goto 145
	'[' => Shift goto 146
	']' => Reduce #3 expression call operator "^"
	"==" => Shift goto 147
	"!=" => Shift goto 148
	">=" => Shift goto 149
	"<=" => Shift goto 150
	'>' => Shift goto 151
	'<' => Shift goto 152
	"+=" => Reduce #3 expression call operator "^"
	"-=" => Reduce #3 expression call operator "^"
	"*=" => Reduce #3 expression call operator "^"
	"/=" => Reduce #3 expression call operator "^"
	"^=" => Reduce #3 expression call operator "^"
	"&=" => Reduce #3 expression call operator "^"
	"%=" => Reduce #3 expression call operator "^"
	"&&=" => Reduce #3 expression call operator "^"
	"||=" => Reduce #3 expression call operator "^"
	"|=" => Reduce #3 expression call operator "^"
	"<<=" => Reduce #3 expression call operator "^"
	">>=" => Reduce #3 expression call operator "^"
	'.' => Shift goto 165
[241]
	IDENT => Reduce #2 indirection call count
[242]
	'(' => Shift goto 130
	')' => Reduce #3 expression call operator "="
	';' => Reduce #3 expression call operator "="
	',' => Reduce #3 expression call operator "="
	'&' => Shift goto 132
	'^' => Shift goto 133
	'}' => Reduce #3 expression call operator "="
	"->" => Reduce #3 expression call operator "="
	'=' => Reduce #3 expression call operator "="
	'+' => Shift goto 136
	'-' => Shift goto 137
	'*' => Shift goto 138
	'/' => Shift goto 139
	'%' => Shift goto 140
	"&&" => Shift goto 141
	"||" => Shift goto 142
	'|' => Shift goto 143
	"<<" => Shift goto 144
	">>" => Shift goto 145
	'[' => Shift goto 146
	']' => Reduce #3 expression call operator "="
	"==" => Shift goto 147
	"!=" => Shift goto 148
	">=" => Shift goto 149
	"<=" => Shift goto 150
	'>' => Shift goto 151
	'<' => Shift goto 152
	"+=" => Reduce #3 expression call operator "="
	"-=" => Reduce #3 expression call operator "="
	"*=" => Reduce #3 expression call operator "="
	"/=" => Reduce #3 expression call operator "="
	"^=" => Reduce #3 expression call operator "="
	"&=" => Reduce #3 expression call operator "="
	"%=" => Reduce #3 expression call operator "="
	"&&=" => Reduce #3 expression call operator "="
	"||=" => Reduce #3 expression call operator "="
	"|=" => Reduce #3 expression call operator "="
	"<<=" => Reduce #3 expression call operator "="
	">>=" => Reduce #3 expression call operator "="
	'.' => Shift goto 165
[243]
	'(' => Shift goto 130
	')' => Reduce #3 expression call operator "+"
	';' => Reduce #3 expression call operator "+"
	',' => Reduce #3 expression call operator "+"
	'&' => Reduce #3 expression call operator "+"
	'^' => Reduce #3 expression call operator "+"
	'}' => Reduce #3 expression call operator "+"
	"->" => Reduce #3 expression call operator "+"
	'=' => Reduce #3 expression call operator "+"
	'+' => Reduce #3 expression call operator "+"
	'-' => Reduce #3 expression call operator "+"
	'*' => Shift goto 138
	'/' => Shift goto 139
	'%' => Shift goto 140
	"&&" => Reduce #3 expression call operator "+"
	"||" => Reduce #3 expression call operator "+"
	'|' => Reduce #3 expression call operator "+"
	"<<" => Shift goto 144
	">>" => Shift goto 145
	'[' => Shift goto 146
	']' => Reduce #3 expression call operator "+"
	"==" => Reduce #3 expression call operator "+"
	"!=" => Reduce #3 expression call operator "+"
	">=" => Reduce #3 expression call operator "+"
	"<=" => Reduce #3 expression call operator "+"
	'>' => Reduce #3 expression call operator "+"
	'<' => Reduce #3 expression call operator "+"
	"+=" => Reduce #3 expression call operator "+"
	"-=" => Reduce #3 expression call operator "+"
	"*=" => Reduce #3 expression call operator "+"
	"/=" => Reduce #3 expression call operator "+"
	"^=" => Reduce #3 expression call operator "+"
	"&=" => Reduce #3 expression call operator "+"
	"%=" => Reduce #3 expression call operator "+"
	"&&=" => Reduce #3 expression call operator "+"
	"||=" => Reduce #3 expression call operator "+"
	"|=" => Reduce #3 expression call operator "+"
	"<<=" => Reduce #3 expression call operator "+"
	">>=" => Reduce #3 expression call operator "+"
	'.' => Shift goto 165
[244]
	'(' => Shift goto 130
	')' => Reduce #3 expression call operator "-"
	';' => Reduce #3 expression call operator "-"
	',' => Reduce #3 expression call operator "-"
	'&' => Reduce #3 expression call operator "-"
	'^' => Reduce #3 expression call operator "-"
	'}' => Reduce #3 expression call operator "-"
	"->" => Reduce #3 expression call operator "-"
	'=' => Reduce #3 expression call operator "-"
	'+' => Reduce #3 expression call operator "-"
	'-' => Reduce #3 expression call operator "-"
	'*' => Shift goto 138
	'/' => Shift goto 139
	'%' => Shift goto 140
	"&&" => Reduce #3 expression call operator "-"
	"||" => Reduce #3 expression call operator "-"
	'|' => Reduce #3 expression call operator "-"
	"<<" => Shift goto 144
	">>" => Shift goto 145
	'[' => Shift goto 146
	']' => Reduce #3 expression call operator "-"
	"==" => Reduce #3 expression call operator "-"
	"!=" => Reduce #3 expression call operator "-"
	">=" => Reduce #3 expression call operator "-"
	"<=" => Reduce #3 expression call operator "-"
	'>' => Reduce #3 expression call operator "-"
	'<' => Reduce #3 expression call operator "-"
	"+=" => Reduce #3 expression call operator "-"
	"-=" => Reduce #3 expression call operator "-"
	"*=" => Reduce #3 expression call operator "-"
	"/=" => Reduce #3 expression call operator "-"
	"^=" => Reduce #3 expression call operator "-"
	"&=" => Reduce #3 expression call operator "-"
	"%=" => Reduce #3 expression call operator "-"
	"&&=" => Reduce #3 expression call operator "-"
	"||=" => Reduce #3 expression call operator "-"
	"|=" => Reduce #3 expression call operator "-"
	"<<=" => Reduce #3 expression call operator "-"
	">>=" => Reduce #3 expression call operator "-"
	'.' => Shift goto 165
[245]
	'(' => Shift goto 130
	')' => Reduce #3 expression call operator "*"
	';' => Reduce #3 expression call operator "*"
	',' => Reduce #3 expression call operator "*"
	'&' => Reduce #3 expression call operator "*"
	'^' => Reduce #3 expression call operator "*"
	'}' => Reduce #3 expression call operator "*"
	"->" => Reduce #3 expression call operator "*"
	'=' => Reduce #3 expression call operator "*"
	'+' => Reduce #3 expression call operator "*"
	'-' => Reduce #3 expression call operator "*"
	'*' => Reduce #3 expression call operator "*"
	'/' => Reduce #3 expression call operator "*"
	'%' => Reduce #3 expression call operator "*"
	"&&" => Reduce #3 expression call operator "*"
	"||" => Reduce #3 expression call operator "*"
	'|' => Reduce #3 expression call operator "*"
	"<<" => Shift goto 144
	">>" => Shift goto 145
	'[' => Shift goto 146
	']' => Reduce #3 expression call operator "*"
	"==" => Reduce #3 expression call operator "*"
	"!=" => Reduce #3 expression call operator "*"
	">=" => Reduce #3 expression call operator "*"
	"<=" => Reduce #3 expression call operator "*"
	'>' => Reduce #3 expression call operator "*"
	'<' => Reduce #3 expression call operator "*"
	"+=" => Reduce #3 expression call operator "*"
	"-=" => Reduce #3 expression call operator "*"
	"*=" => Reduce #3 expression call operator "*"
	"/=" => Reduce #3 expression call operator "*"
	"^=" => Reduce #3 expression call operator "*"
	"&=" => Reduce #3 expression call operator "*"
	"%=" => Reduce #3 expression call operator "*"
	"&&=" => Reduce #3 expression call operator "*"
	"||=" => Reduce #3 expression call operator "*"
	"|=" => Reduce #3 expression call operator "*"
	"<<=" => Reduce #3 expression call operator "*"
	">>=" => Reduce #3 expression call operator "*"
	'.' => Shift goto 165
[246]
	'(' => Shift goto 130
	')' => Reduce #3 expression call operator "/"
	';' => Reduce #3 expression call operator "/"
	',' => Reduce #3 expression call operator "/"
	'&' => Reduce #3 expression call operator "/"
	'^' => Reduce #3 expression call operator "/"
	'}' => Reduce #3 expression call operator "/"
	"->" => Reduce #3 expression call operator "/"
	'=' => Reduce #3 expression call operator "/"
	'+' => Reduce #3 expression call operator "/"
	'-' => Reduce #3 expression call operator "/"
	'*' => Reduce #3 expression call operator "/"
	'/' => Reduce #3 expression call operator "/"
	'%' => Reduce #3 expression call operator "/"
	"&&" => Reduce #3 expression call operator "/"
	"||" => Reduce #3 expression call operator "/"
	'|' => Reduce #3 expression call operator "/"
	"<<" => Shift goto 144
	">>" => Shift goto 145
	'[' => Shift goto 146
	']' => Reduce #3 expression call operator "/"
	"==" => Reduce #3 expression call operator "/"
	"!=" => Reduce #3 expression call operator "/"
	">=" => Reduce #3 expression call operator "/"
	"<=" => Reduce #3 expression call operator "/"
	'>' => Reduce #3 expression call operator "/"
	'<' => Reduce #3 expression call operator "/"
	"+=" => Reduce #3 expression call operator "/"
	"-=" => Reduce #3 expression call operator "/"
	"*=" => Reduce #3 expression call operator "/"
	"/=" => Reduce #3 expression call operator "/"
	"^=" => Reduce #3 expression call operator "/"
	"&=" => Reduce #3 expression call operator "/"
	"%=" => Reduce #3 expression call operator "/"
	"&&=" => Reduce #3 expression call operator "/"
	"||=" => Reduce #3 expression call operator "/"
	"|=" => Reduce #3 expression call operator "/"
	"<<=" => Reduce #3 expression call operator "/"
	">>=" => Reduce #3 expression call operator "/"
	'.' => Shift goto 165
[247]
	'(' => Shift goto 130
	')' => Reduce #3 expression call operator "%"
	';' => Reduce #3 expression call operator "%"
	',' => Reduce #3 expression call operator "%"
	'&' => Reduce #3 expression call operator "%"
	'^' => Reduce #3 expression call operator "%"
	'}' => Reduce #3 expression call operator "%"
	"->" => Reduce #3 expression call operator "%"
	'=' => Reduce #3 expression call operator "%"
	'+' => Reduce #3 expression call operator "%"
	'-' => Reduce #3 expression call operator "%"
	'*' => Reduce #3 expression call operator "%"
	'/' => Reduce #3 expression call operator "%"
	'%' => Reduce #3 expression call operator "%"
	"&&" => Reduce #3 expression call operator "%"
	"||" => Reduce #3 expression call operator "%"
	'|' => Reduce #3 expression call operator "%"
	"<<" => Shift goto 144
	">>" => Shift goto 145
	'[' => Shift goto 146
	']' => Reduce #3 expression call operator "%"
	"==" => Reduce #3 expression call operator "%"
	"!=" => Reduce #3 expression call operator "%"
	">=" => Reduce #3 expression call operator "%"
	"<=" => Reduce #3 expression call operator "%"
	'>' => Reduce #3 expression call operator "%"
	'<' => Reduce #3 expression call operator "%"
	"+=" => Reduce #3 expression call operator "%"
	"-=" => Reduce #3 expression call operator "%"
	"*=" => Reduce #3 expression call operator "%"
	"/=" => Reduce #3 expression call operator "%"
	"^=" => Reduce #3 expression call operator "%"
	"&=" => Reduce #3 expression call operator "%"
	"%=" => Reduce #3 expression call operator "%"
	"&&=" => Reduce #3 expression call operator "%"
	"||=" => Reduce #3 expression call operator "%"
	"|=" => Reduce #3 expression call operator "%"
	"<<=" => Reduce #3 expression call operator "%"
	">>=" => Reduce #3 expression call operator "%"
	'.' => Shift goto 165
[248]
	'(' => Shift goto 130
	')' => Reduce #3 expression call operator "&&"
	';' => Reduce #3 expression call operator "&&"
	',' => Reduce #3 expression call operator "&&"
	'&' => Shift goto 132
	'^' => Shift goto 133
	'}' => Reduce #3 expression call operator "&&"
	"->" => Reduce #3 expression call operator "&&"
	'=' => Reduce #3 expression call operator "&&"
	'+' => Shift goto 136
	'-' => Shift goto 137
	'*' => Shift goto 138
	'/' => Shift goto 139
	'%' => Shift goto 140
	"&&" => Reduce #3 expression call operator "&&"
	"||" => Reduce #3 expression call operator "&&"
	'|' => Shift goto 143
	"<<" => Shift goto 144
	">>" => Shift goto 145
	'[' => Shift goto 146
	']' => Reduce #3 expression call operator "&&"
	"==" => Shift goto 147
	"!=" => Shift goto 148
	">=" => Shift goto 149
	"<=" => Shift goto 150
	'>' => Shift goto 151
	'<' => Shift goto 152
	"+=" => Reduce #3 expression call operator "&&"
	"-=" => Reduce #3 expression call operator "&&"
	"*=" => Reduce #3 expression call operator "&&"
	"/=" => Reduce #3 expression call operator "&&"
	"^=" => Reduce #3 expression call operator "&&"
	"&=" => Reduce #3 expression call operator "&&"
	"%=" => Reduce #3 expression call operator "&&"
	"&&=" => Reduce #3 expression call operator "&&"
	"||=" => Reduce #3 expression call operator "&&"
	"|=" => Reduce #3 expression call operator "&&"
	"<<=" => Reduce #3 expression call operator "&&"
	">>=" => Reduce #3 expression call operator "&&"
	'.' => Shift goto 165
[249]
	'(' => Shift goto 130
	')' => Reduce #3 expression call operator "||"
	';' => Reduce #3 expression call operator "||"
	',' => Reduce #3 expression call operator "||"
	'&' => Shift goto 132
	'^' => Shift goto 133
	'}' => Reduce #3 expression call operator "||"
	"->" => Reduce #3 expression call operator "||"
	'=' => Reduce #3 expression call operator "||"
	'+' => Shift goto 136
	'-' => Shift goto 137
	'*' => Shift goto 138
	'/' => Shift goto 139
	'%' => Shift goto 140
	"&&" => Shift goto 141
	"||" => Reduce #3 expression call operator "||"
	'|' => Shift goto 143
	"<<" => Shift goto 144
	">>" => Shift goto 145
	'[' => Shift goto 146
	']' => Reduce #3 expression call operator "||"
	"==" => Shift goto 147
	"!=" => Shift goto 148
	">=" => Shift goto 149
	"<=" => Shift goto 150
	'>' => Shift goto 151
	'<' => Shift goto 152
	"+=" => Reduce #3 expression call operator "||"
	"-=" => Reduce #3 expression call operator "||"
	"*=" => Reduce #3 expression call operator "||"
	"/=" => Reduce #3 expression call operator "||"
	"^=" => Reduce #3 expression call operator "||"
	"&=" => Reduce #3 expression call operator "||"
	"%=" => Reduce #3 expression call operator "||"
	"&&=" => Reduce #3 expression call operator "||"
	"||=" => Reduce #3 expression call operator "||"
	"|=" => Reduce #3 expression call operator "||"
	"<<=" => Reduce #3 expression call operator "||"
	">>=" => Reduce #3 expression call operator "||"
	'.' => Shift goto 165
[250]
	'(' => Shift goto 130
	')' => Reduce #3 expression call operator "|"
	';' => Reduce #3 expression call operator "|"
	',' => Reduce #3 expression call operator "|"
	'&' => Shift goto 132
	'^' => Shift goto 133
	'}' => Reduce #3 expression call operator "|"
	"->" => Reduce #3 expression call operator "|"
	'=' => Reduce #3 expression call operator "|"
	'+' => Shift goto 136
	'-' => Shift goto 137
	'*' => Shift goto 138
	'/' => Shift goto 139
	'%' => Shift goto 140
	"&&" => Reduce #3 expression call operator "|"
	"||" => Reduce #3 expression call operator "|"
	'|' => Reduce #3 expression call operator "|"
	"<<" => Shift goto 144
	">>" => Shift goto 145
	'[' => Shift goto 146
	']' => Reduce #3 expression call operator "|"
	"==" => Shift goto 147
	"!=" => Shift goto 148
	">=" => Shift goto 149
	"<=" => Shift goto 150
	'>' => Shift goto 151
	'<' => Shift goto 152
	"+=" => Reduce #3 expression call operator "|"
	"-=" => Reduce #3 expression call operator "|"
	"*=" => Reduce #3 expression call operator "|"
	"/=" => Reduce #3 expression call operator "|"
	"^=" => Reduce #3 expression call operator "|"
	"&=" => Reduce #3 expression call operator "|"
	"%=" => Reduce #3 expression call operator "|"
	"&&=" => Reduce #3 expression call operator "|"
	"||=" => Reduce #3 expression call operator "|"
	"|=" => Reduce #3 expression call operator "|"
	"<<=" => Reduce #3 expression call operator "|"
	">>=" => Reduce #3 expression call operator "|"
	'.' => Shift goto 165
[251]
	'(' => Shift goto 130
	')' => Reduce #3 expression call operator "<<"
	';' => Reduce #3 expression call operator "<<"
	',' => Reduce #3 expression call operator "<<"
	'&' => Reduce #3 expression call operator "<<"
	'^' => Reduce #3 expression call operator "<<"
	'}' => Reduce #3 expression call operator "<<"
	"->" => Reduce #3 expression call operator "<<"
	'=' => Reduce #3 expression call operator "<<"
	'+' => Reduce #3 expression call operator "<<"
	'-' => Reduce #3 expression call operator "<<"
	'*' => Reduce #3 expression call operator "<<"
	'/' => Reduce #3 expression call operator "<<"
	'%' => Reduce #3 expression call operator "<<"
	"&&" => Reduce #3 expression call operator "<<"
	"||" => Reduce #3 expression call operator "<<"
	'|' => Reduce #3 expression call operator "<<"
	"<<" => Reduce #3 expression call operator "<<"
	">>" => Reduce #3 expression call operator "<<"
	'[' => Shift goto 146
	']' => Reduce #3 expression call operator "<<"
	"==" => Reduce #3 expression call operator "<<"
	"!=" => Reduce #3 expression call operator "<<"
	">=" => Reduce #3 expression call operator "<<"
	"<=" => Reduce #3 expression call operator "<<"
	'>' => Reduce #3 expression call operator "<<"
	'<' => Reduce #3 expression call operator "<<"
	"+=" => Reduce #3 expression call operator "<<"
	"-=" => Reduce #3 expression call operator "<<"
	"*=" => Reduce #3 expression call operator "<<"
	"/=" => Reduce #3 expression call operator "<<"
	"^=" => Reduce #3 expression call operator "<<"
	"&=" => Reduce #3 expression call operator "<<"
	"%=" => Reduce #3 expression call operator "<<"
	"&&=" => Reduce #3 expression call operator "<<"
	"||=" => Reduce #3 expression call operator "<<"
	"|=" => Reduce #3 expression call operator "<<"
	"<<=" => Reduce #3 expression call operator "<<"
	">>=" => Reduce #3 expression call operator "<<"
	'.' => Shift goto 165
[252]
	'(' => Shift goto 130
	')' => Reduce #3 expression call operator ">>"
	';' => Reduce #3 expression call operator ">>"
	',' => Reduce #3 expression call operator ">>"
	'&' => Reduce #3 expression call operator ">>"
	'^' => Reduce #3 expression call operator ">>"
	'}' => Reduce #3 expression call operator ">>"
	"->" => Reduce #3 expression call operator ">>"
	'=' => Reduce #3 expression call operator ">>"
	'+' => Reduce #3 expression call operator ">>"
	'-' => Reduce #3 expression call operator ">>"
	'*' => Reduce #3 expression call operator ">>"
	'/' => Reduce #3 expression call operator ">>"
	'%' => Reduce #3 expression call operator ">>"
	"&&" => Reduce #3 expression call operator ">>"
	"||" => Reduce #3 expression call operator ">>"
	'|' => Reduce #3 expression call operator ">>"
	"<<" => Reduce #3 expression call operator ">>"
	">>" => Reduce #3 expression call operator ">>"
	'[' => Shift goto 146
	']' => Reduce #3 expression call operator ">>"
	"==" => Reduce #3 expression call operator ">>"
	"!=" => Reduce #3 expression call operator ">>"
	">=" => Reduce #3 expression call operator ">>"
	"<=" => Reduce #3 expression call operator ">>"
	'>' => Reduce #3 expression call operator ">>"
	'<' => Reduce #3 expression call operator ">>"
	"+=" => Reduce #3 expression call operator ">>"
	"-=" => Reduce #3 expression call operator ">>"
	"*=" => Reduce #3 expression call operator ">>"
	"/=" => Reduce #3 expression call operator ">>"
	"^=" => Reduce #3 expression call operator ">>"
	"&=" => Reduce #3 expression call operator ">>"
	"%=" => Reduce #3 expression call operator ">>"
	"&&=" => Reduce #3 expression call operator ">>"
	"||=" => Reduce #3 expression call operator ">>"
	"|=" => Reduce #3 expression call operator ">>"
	"<<=" => Reduce #3 expression call operator ">>"
	">>=" => Reduce #3 expression call operator ">>"
	'.' => Shift goto 165
[253]
	']' => Shift goto 306
[254]
	'(' => Shift goto 130
	')' => Reduce #3 expression call operator "=="
	';' => Reduce #3 expression call operator "=="
	',' => Reduce #3 expression call operator "=="
	'&' => Reduce #3 expression call operator "=="
	'^' => Reduce #3 expression call operator "=="
	'}' => Reduce #3 expression call operator "=="
	"->" => Reduce #3 expression call operator "=="
	'=' => Reduce #3 expression call operator "=="
	'+' => Shift goto 136
	'-' => Shift goto 137
	'*' => Shift goto 138
	'/' => Shift goto 139
	'%' => Shift goto 140
	"&&" => Reduce #3 expression call operator "=="
	"||" => Reduce #3 expression call operator "=="
	'|' => Reduce #3 expression call operator "=="
	"<<" => Shift goto 144
	">>" => Shift goto 145
	'[' => Shift goto 146
	']' => Reduce #3 expression call operator "=="
	"==" => Reduce #3 expression call operator "=="
	"!=" => Reduce #3 expression call operator "=="
	">=" => Reduce #3 expression call operator "=="
	"<=" => Reduce #3 expression call operator "=="
	'>' => Reduce #3 expression call operator "=="
	'<' => Reduce #3 expression call operator "=="
	"+=" => Reduce #3 expression call operator "=="
	"-=" => Reduce #3 expression call operator "=="
	"*=" => Reduce #3 expression call operator "=="
	"/=" => Reduce #3 expression call operator "=="
	"^=" => Reduce #3 expression call operator "=="
	"&=" => Reduce #3 expression call operator "=="
	"%=" => Reduce #3 expression call operator "=="
	"&&=" => Reduce #3 expression call operator "=="
	"||=" => Reduce #3 expression call operator "=="
	"|=" => Reduce #3 expression call operator "=="
	"<<=" => Reduce #3 expression call operator "=="
	">>=" => Reduce #3 expression call operator "=="
	'.' => Shift goto 165
[255]
	'(' => Shift goto 130
	')' => Reduce #3 expression call operator "!="
	';' => Reduce #3 expression call operator "!="
	',' => Reduce #3 expression call operator "!="
	'&' => Reduce #3 expression call operator "!="
	'^' => Reduce #3 expression call operator "!="
	'}' => Reduce #3 expression call operator "!="
	"->" => Reduce #3 expression call operator "!="
	'=' => Reduce #3 expression call operator "!="
	'+' => Shift goto 136
	'-' => Shift goto 137
	'*' => Shift goto 138
	'/' => Shift goto 139
	'%' => Shift goto 140
	"&&" => Reduce #3 expression call operator "!="
	"||" => Reduce #3 expression call operator "!="
	'|' => Reduce #3 expression call operator "!="
	"<<" => Shift goto 144
	">>" => Shift goto 145
	'[' => Shift goto 146
	']' => Reduce #3 expression call operator "!="
	"==" => Reduce #3 expression call operator "!="
	"!=" => Reduce #3 expression call operator "!="
	">=" => Reduce #3 expression call operator "!="
	"<=" => Reduce #3 expression call operator "!="
	'>' => Reduce #3 expression call operator "!="
	'<' => Reduce #3 expression call operator "!="
	"+=" => Reduce #3 expression call operator "!="
	"-=" => Reduce #3 expression call operator "!="
	"*=" => Reduce #3 expression call operator "!="
	"/=" => Reduce #3 expression call operator "!="
	"^=" => Reduce #3 expression call operator "!="
	"&=" => Reduce #3 expression call operator "!="
	"%=" => Reduce #3 expression call operator "!="
	"&&=" => Reduce #3 expression call operator "!="
	"||=" => Reduce #3 expression call operator "!="
	"|=" => Reduce #3 expression call operator "!="
	"<<=" => Reduce #3 expression call operator "!="
	">>=" => Reduce #3 expression call operator "!="
	'.' => Shift goto 165
[256]
	'(' => Shift goto 130
	')' => Reduce #3 expression call operator ">="
	';' => Reduce #3 expression call operator ">="
	',' => Reduce #3 expression call operator ">="
	'&' => Reduce #3 expression call operator ">="
	'^' => Reduce #3 expression call operator ">="
	'}' => Reduce #3 expression call operator ">="
	"->" => Reduce #3 expression call operator ">="
	'=' => Reduce #3 expression call operator ">="
	'+' => Shift goto 136
	'-' => Shift goto 137
	'*' => Shift goto 138
	'/' => Shift goto 139
	'%' => Shift goto 140
	"&&" => Reduce #3 expression call operator ">="
	"||" => Reduce #3 expression call operator ">="
	'|' => Reduce #3 expression call operator ">="
	"<<" => Shift goto 144
	">>" => Shift goto 145
	'[' => Shift goto 146
	']' => Reduce #3 expression call operator ">="
	"==" => Reduce #3 expression call operator ">="
	"!=" => Reduce #3 expression call operator ">="
	">=" => Reduce #3 expression call operator ">="
	"<=" => Reduce #3 expression call operator ">="
	'>' => Reduce #3 expression call operator ">="
	'<' => Reduce #3 expression call operator ">="
	"+=" => Reduce #3 expression call operator ">="
	"-=" => Reduce #3 expression call operator ">="
	"*=" => Reduce #3 expression call operator ">="
	"/=" => Reduce #3 expression call operator ">="
	"^=" => Reduce #3 expression call operator ">="
	"&=" => Reduce #3 expression call operator ">="
	"%=" => Reduce #3 expression call operator ">="
	"&&=" => Reduce #3 expression call operator ">="
	"||=" => Reduce #3 expression call operator ">="
	"|=" => Reduce #3 expression call operator ">="
	"<<=" => Reduce #3 expression call operator ">="
	">>=" => Reduce #3 expression call operator ">="
	'.' => Shift goto 165
[257]
	'(' => Shift goto 130
	')' => Reduce #3 expression call operator "<="
	';' => Reduce #3 expression call operator "<="
	',' => Reduce #3 expression call operator "<="
	'&' => Reduce #3 expression call operator "<="
	'^' => Reduce #3 expression call operator "<="
	'}' => Reduce #3 expression call operator "<="
	"->" => Reduce #3 expression call operator "<="
	'=' => Reduce #3 expression call operator "<="
	'+' => Shift goto 136
	'-' => Shift goto 137
	'*' => Shift goto 138
	'/' => Shift goto 139
	'%' => Shift goto 140
	"&&" => Reduce #3 expression call operator "<="
	"||" => Reduce #3 expression call operator "<="
	'|' => Reduce #3 expression call operator "<="
	"<<" => Shift goto 144
	">>" => Shift goto 145
	'[' => Shift goto 146
	']' => Reduce #3 expression call operator "<="
	"==" => Reduce #3 expression call operator "<="
	"!=" => Reduce #3 expression call operator "<="
	">=" => Reduce #3 expression call operator "<="
	"<=" => Reduce #3 expression call operator "<="
	'>' => Reduce #3 expression call operator "<="
	'<' => Reduce #3 expression call operator "<="
	"+=" => Reduce #3 expression call operator "<="
	"-=" => Reduce #3 expression call operator "<="
	"*=" => Reduce #3 expression call operator "<="
	"/=" => Reduce #3 expression call operator "<="
	"^=" => Reduce #3 expression call operator "<="
	"&=" => Reduce #3 expression call operator "<="
	"%=" => Reduce #3 expression call operator "<="
	"&&=" => Reduce #3 expression call operator "<="
	"||=" => Reduce #3 expression call operator "<="
	"|=" => Reduce #3 expression call operator "<="
	"<<=" => Reduce #3 expression call operator "<="
	">>=" => Reduce #3 expression call operator "<="
	'.' => Shift goto 165
[258]
	'(' => Shift goto 130
	')' => Reduce #3 expression call operator ">"
	';' => Reduce #3 expression call operator ">"
	',' => Reduce #3 expression call operator ">"
	'&' => Reduce #3 expression call operator ">"
	'^' => Reduce #3 expression call operator ">"
	'}' => Reduce #3 expression call operator ">"
	"->" => Reduce #3 expression call operator ">"
	'=' => Reduce #3 expression call operator ">"
	'+' => Shift goto 136
	'-' => Shift goto 137
	'*' => Shift goto 138
	'/' => Shift goto 139
	'%' => Shift goto 140
	"&&" => Reduce #3 expression call operator ">"
	"||" => Reduce #3 expression call operator ">"
	'|' => Reduce #3 expression call operator ">"
	"<<" => Shift goto 144
	">>" => Shift goto 145
	'[' => Shift goto 146
	']' => Reduce #3 expression call operator ">"
	"==" => Reduce #3 expression call operator ">"
	"!=" => Reduce #3 expression call operator ">"
	">=" => Reduce #3 expression call operator ">"
	"<=" => Reduce #3 expression call operator ">"
	'>' => Reduce #3 expression call operator ">"
	'<' => Reduce #3 expression call operator ">"
	"+=" => Reduce #3 expression call operator ">"
	"-=" => Reduce #3 expression call operator ">"
	"*=" => Reduce #3 expression call operator ">"
	"/=" => Reduce #3 expression call operator ">"
	"^=" => Reduce #3 expression call operator ">"
	"&=" => Reduce #3 expression call operator ">"
	"%=" => Reduce #3 expression call operator ">"
	"&&=" => Reduce #3 expression call operator ">"
	"||=" => Reduce #3 expression call operator ">"
	"|=" => Reduce #3 expression call operator ">"
	"<<=" => Reduce #3 expression call operator ">"
	">>=" => Reduce #3 expression call operator ">"
	'.' => Shift goto 165
[259]
	'(' => Shift goto 130
	')' => Reduce #3 expression call operator "<"
	';' => Reduce #3 expression call operator "<"
	',' => Reduce #3 expression call operator "<"
	'&' => Reduce #3 expression call operator "<"
	'^' => Reduce #3 expression call operator "<"
	'}' => Reduce #3 expression call operator "<"
	"->" => Reduce #3 expression call operator "<"
	'=' => Reduce #3 expression call operator "<"
	'+' => Shift goto 136
	'-' => Shift goto 137
	'*' => Shift goto 138
	'/' => Shift goto 139
	'%' => Shift goto 140
	"&&" => Reduce #3 expression call operator "<"
	"||" => Reduce #3 expression call operator "<"
	'|' => Reduce #3 expression call operator "<"
	"<<" => Shift goto 144
	">>" => Shift goto 145
	'[' => Shift goto 146
	']' => Reduce #3 expression call operator "<"
	"==" => Reduce #3 expression call operator "<"
	"!=" => Reduce #3 expression call operator "<"
	">=" => Reduce #3 expression call operator "<"
	"<=" => Reduce #3 expression call operator "<"
	'>' => Reduce #3 expression call operator "<"
	'<' => Reduce #3 expression call operator "<"
	"+=" => Reduce #3 expression call operator "<"
	"-=" => Reduce #3 expression call operator "<"
	"*=" => Reduce #3 expression call operator "<"
	"/=" => Reduce #3 expression call operator "<"
	"^=" => Reduce #3 expression call operator "<"
	"&=" => Reduce #3 expression call operator "<"
	"%=" => Reduce #3 expression call operator "<"
	"&&=" => Reduce #3 expression call operator "<"
	"||=" => Reduce #3 expression call operator "<"
	"|=" => Reduce #3 expression call operator "<"
	"<<=" => Reduce #3 expression call operator "<"
	">>=" => Reduce #3 expression call operator "<"
	'.' => Shift goto 165
[260]
	'(' => Shift goto 130
	')' => Reduce #3 expression call assign_operator "+"
	';' => Reduce #3 expression call assign_operator "+"
	',' => Reduce #3 expression call assign_operator "+"
	'&' => Shift goto 132
	'^' => Shift goto 133
	'}' => Reduce #3 expression call assign_operator "+"
	"->" => Reduce #3 expression call assign_operator "+"
	'=' => Reduce #3 expression call assign_operator "+"
	'+' => Shift goto 136
	'-' => Shift goto 137
	'*' => Shift goto 138
	'/' => Shift goto 139
	'%' => Shift goto 140
	"&&" => Shift goto 141
	"||" => Shift goto 142
	'|' => Shift goto 143
	"<<" => Shift goto 144
	">>" => Shift goto 145
	'[' => Shift goto 146
	']' => Reduce #3 expression call assign_operator "+"
	"==" => Shift goto 147
	"!=" => Shift goto 148
	">=" => Shift goto 149
	"<=" => Shift goto 150
	'>' => Shift goto 151
	'<' => Shift goto 152
	"+=" => Reduce #3 expression call assign_operator "+"
	"-=" => Reduce #3 expression call assign_operator "+"
	"*=" => Reduce #3 expression call assign_operator "+"
	"/=" => Reduce #3 expression call assign_operator "+"
	"^=" => Reduce #3 expression call assign_operator "+"
	"&=" => Reduce #3 expression call assign_operator "+"
	"%=" => Reduce #3 expression call assign_operator "+"
	"&&=" => Reduce #3 expression call assign_operator "+"
	"||=" => Reduce #3 expression call assign_operator "+"
	"|=" => Reduce #3 expression call assign_operator "+"
	"<<=" => Reduce #3 expression call assign_operator "+"
	">>=" => Reduce #3 expression call assign_operator "+"
	'.' => Shift goto 165
[261]
	'(' => Shift goto 130
	')' => Reduce #3 expression call assign_operator "-"
	';' => Reduce #3 expression call assign_operator "-"
	',' => Reduce #3 expression call assign_operator "-"
	'&' => Shift goto 132
	'^' => Shift goto 133
	'}' => Reduce #3 expression call assign_operator "-"
	"->" => Reduce #3 expression call assign_operator "-"
	'=' => Reduce #3 expression call assign_operator "-"
	'+' => Shift goto 136
	'-' => Shift goto 137
	'*' => Shift goto 138
	'/' => Shift goto 139
	'%' => Shift goto 140
	"&&" => Shift goto 141
	"||" => Shift goto 142
	'|' => Shift goto 143
	"<<" => Shift goto 144
	">>" => Shift goto 145
	'[' => Shift goto 146
	']' => Reduce #3 expression call assign_operator "-"
	"==" => Shift goto 147
	"!=" => Shift goto 148
	">=" => Shift goto 149
	"<=" => Shift goto 150
	'>' => Shift goto 151
	'<' => Shift goto 152
	"+=" => Reduce #3 expression call assign_operator "-"
	"-=" => Reduce #3 expression call assign_operator "-"
	"*=" => Reduce #3 expression call assign_operator "-"
	"/=" => Reduce #3 expression call assign_operator "-"
	"^=" => Reduce #3 expression call assign_operator "-"
	"&=" => Reduce #3 expression call assign_operator "-"
	"%=" => Reduce #3 expression call assign_operator "-"
	"&&=" => Reduce #3 expression call assign_operator "-"
	"||=" => Reduce #3 expression call assign_operator "-"
	"|=" => Reduce #3 expression call assign_operator "-"
	"<<=" => Reduce #3 expression call assign_operator "-"
	">>=" => Reduce #3 expression call assign_operator "-"
	'.' => Shift goto 165
[262]
	'(' => Shift goto 130
	')' => Reduce #3 expression call assign_operator "*"
	';' => Reduce #3 expression call assign_operator "*"
	',' => Reduce #3 expression call assign_operator "*"
	'&' => Shift goto 132
	'^' => Shift goto 133
	'}' => Reduce #3 expression call assign_operator "*"
	"->" => Reduce #3 expression call assign_operator "*"
	'=' => Reduce #3 expression call assign_operator "*"
	'+' => Shift goto 136
	'-' => Shift goto 137
	'*' => Shift goto 138
	'/' => Shift goto 139
	'%' => Shift goto 140
	"&&" => Shift goto 141
	"||" => Shift goto 142
	'|' => Shift goto 143
	"<<" => Shift goto 144
	">>" => Shift goto 145
	'[' => Shift goto 146
	']' => Reduce #3 expression call assign_operator "*"
	"==" => Shift goto 147
	"!=" => Shift goto 148
	">=" => Shift goto 149
	"<=" => Shift goto 150
	'>' => Shift goto 151
	'<' => Shift goto 152
	"+=" => Reduce #3 expression call assign_operator "*"
	"-=" => Reduce #3 expression call assign_operator "*"
	"*=" => Reduce #3 expression call assign_operator "*"
	"/=" => Reduce #3 expression call assign_operator "*"
	"^=" => Reduce #3 expression call assign_operator "*"
	"&=" => Reduce #3 expression call assign_operator "*"
	"%=" => Reduce #3 expression call assign_operator "*"
	"&&=" => Reduce #3 expression call assign_operator "*"
	"||=" => Reduce #3 expression call assign_operator "*"
	"|=" => Reduce #3 expression call assign_operator "*"
	"<<=" => Reduce #3 expression call assign_operator "*"
	">>=" => Reduce #3 expression call assign_operator "*"
	'.' => Shift goto 165
[263]
	'(' => Shift goto 130
	')' => Reduce #3 expression call assign_operator "/"
	';' => Reduce #3 expression call assign_operator "/"
	',' => Reduce #3 expression call assign_operator "/"
	'&' => Shift goto 132
	'^' => Shift goto 133
	'}' => Reduce #3 expression call assign_operator "/"
	"->" => Reduce #3 expression call assign_operator "/"
	'=' => Reduce #3 expression call assign_operator "/"
	'+' => Shift goto 136
	'-' => Shift goto 137
	'*' => Shift goto 138
	'/' => Shift goto 139
	'%' => Shift goto 140
	"&&" => Shift goto 141
	"||" => Shift goto 142
	'|' => Shift goto 143
	"<<" => Shift goto 144
	">>" => Shift goto 145
	'[' => Shift goto 146
	']' => Reduce #3 expression call assign_operator "/"
	"==" => Shift goto 147
	"!=" => Shift goto 148
	">=" => Shift goto 149
	"<=" => Shift goto 150
	'>' => Shift goto 151
	'<' => Shift goto 152
	"+=" => Reduce #3 expression call assign_operator "/"
	"-=" => Reduce #3 expression call assign_operator "/"
	"*=" => Reduce #3 expression call assign_operator "/"
	"/=" => Reduce #3 expression call assign_operator "/"
	"^=" => Reduce #3 expression call assign_operator "/"
	"&=" => Reduce #3 expression call assign_operator "/"
	"%=" => Reduce #3 expression call assign_operator "/"
	"&&=" => Reduce #3 expression call assign_operator "/"
	"||=" => Reduce #3 expression call assign_operator "/"
	"|=" => Reduce #3 expression call assign_operator "/"
	"<<=" => Reduce #3 expression call assign_operator "/"
	">>=" => Reduce #3 expression call assign_operator "/"
	'.' => Shift goto 165
[264]
	'(' => Shift goto 130
	')' => Reduce #3 expression call assign_operator "^"
	';' => Reduce #3 expression call assign_operator "^"
	',' => Reduce #3 expression call assign_operator "^"
	'&' => Shift goto 132
	'^' => Shift goto 133
	'}' => Reduce #3 expression call assign_operator "^"
	"->" => Reduce #3 expression call assign_operator "^"
	'=' => Reduce #3 expression call assign_operator "^"
	'+' => Shift goto 136
	'-' => Shift goto 137
	'*' => Shift goto 138
	'/' => Shift goto 139
	'%' => Shift goto 140
	"&&" => Shift goto 141
	"||" => Shift goto 142
	'|' => Shift goto 143
	"<<" => Shift goto 144
	">>" => Shift goto 145
	'[' => Shift goto 146
	']' => Reduce #3 expression call assign_operator "^"
	"==" => Shift goto 147
	"!=" => Shift goto 148
	">=" => Shift goto 149
	"<=" => Shift goto 150
	'>' => Shift goto 151
	'<' => Shift goto 152
	"+=" => Reduce #3 expression call assign_operator "^"
	"-=" => Reduce #3 expression call assign_operator "^"
	"*=" => Reduce #3 expression call assign_operator "^"
	"/=" => Reduce #3 expression call assign_operator "^"
	"^=" => Reduce #3 expression call assign_operator "^"
	"&=" => Reduce #3 expression call assign_operator "^"
	"%=" => Reduce #3 expression call assign_operator "^"
	"&&=" => Reduce #3 expression call assign_operator "^"
	"||=" => Reduce #3 expression call assign_operator "^"
	"|=" => Reduce #3 expression call assign_operator "^"
	"<<=" => Reduce #3 expression call assign_operator "^"
	">>=" => Reduce #3 expression call assign_operator "^"
	'.' => Shift goto 165
[265]
	'(' => Shift goto 130
	')' => Reduce #3 expression call assign_operator "&"
	';' => Reduce #3 expression call assign_operator "&"
	',' => Reduce #3 expression call assign_operator "&"
	'&' => Shift goto 132
	'^' => Shift goto 133
	'}' => Reduce #3 expression call assign_operator "&"
	"->" => Reduce #3 expression call assign_operator "&"
	'=' => Reduce #3 expression call assign_operator "&"
	'+' => Shift goto 136
	'-' => Shift goto 137
	'*' => Shift goto 138
	'/' => Shift goto 139
	'%' => Shift goto 140
	"&&" => Shift goto 141
	"||" => Shift goto 142
	'|' => Shift goto 143
	"<<" => Shift goto 144
	">>" => Shift goto 145
	'[' => Shift goto 146
	']' => Reduce #3 expression call assign_operator "&"
	"==" => Shift goto 147
	"!=" => Shift goto 148
	">=" => Shift goto 149
	"<=" => Shift goto 150
	'>' => Shift goto 151
	'<' => Shift goto 152
	"+=" => Reduce #3 expression call assign_operator "&"
	"-=" => Reduce #3 expression call assign_operator "&"
	"*=" => Reduce #3 expression call assign_operator "&"
	"/=" => Reduce #3 expression call assign_operator "&"
	"^=" => Reduce #3 expression call assign_operator "&"
	"&=" => Reduce #3 expression call assign_operator "&"
	"%=" => Reduce #3 expression call assign_operator "&"
	"&&=" => Reduce #3 expression call assign_operator "&"
	"||=" => Reduce #3 expression call assign_operator "&"
	"|=" => Reduce #3 expression call assign_operator "&"
	"<<=" => Reduce #3 expression call assign_operator "&"
	">>=" => Reduce #3 expression call assign_operator "&"
	'.' => Shift goto 165
[266]
	'(' => Shift goto 130
	')' => Reduce #3 expression call assign_operator "%"
	';' => Reduce #3 expression call assign_operator "%"
	',' => Reduce #3 expression call assign_operator "%"
	'&' => Shift goto 132
	'^' => Shift goto 133
	'}' => Reduce #3 expression call assign_operator "%"
	"->" => Reduce #3 expression call assign_operator "%"
	'=' => Reduce #3 expression call assign_operator "%"
	'+' => Shift goto 136
	'-' => Shift goto 137
	'*' => Shift goto 138
	'/' => Shift goto 139
	'%' => Shift goto 140
	"&&" => Shift goto 141
	"||" => Shift goto 142
	'|' => Shift goto 143
	"<<" => Shift goto 144
	">>" => Shift goto 145
	'[' => Shift goto 146
	']' => Reduce #3 expression call assign_operator "%"
	"==" => Shift goto 147
	"!=" => Shift goto 148
	">=" => Shift goto 149
	"<=" => Shift goto 150
	'>' => Shift goto 151
	'<' => Shift goto 152
	"+=" => Reduce #3 expression call assign_operator "%"
	"-=" => Reduce #3 expression call assign_operator "%"
	"*=" => Reduce #3 expression call assign_operator "%"
	"/=" => Reduce #3 expression call assign_operator "%"
	"^=" => Reduce #3 expression call assign_operator "%"
	"&=" => Reduce #3 expression call assign_operator "%"
	"%=" => Reduce #3 expression call assign_operator "%"
	"&&=" => Reduce #3 expression call assign_operator "%"
	"||=" => Reduce #3 expression call assign_operator "%"
	"|=" => Reduce #3 expression call assign_operator "%"
	"<<=" => Reduce #3 expression call assign_operator "%"
	">>=" => Reduce #3 expression call assign_operator "%"
	'.' => Shift goto 165
[267]
	'(' => Shift goto 130
	')' => Reduce #3 expression call assign_operator "&&"
	';' => Reduce #3 expression call assign_operator "&&"
	',' => Reduce #3 expression call assign_operator "&&"
	'&' => Shift goto 132
	'^' => Shift goto 133
	'}' => Reduce #3 expression call assign_operator "&&"
	"->" => Reduce #3 expression call assign_operator "&&"
	'=' => Reduce #3 expression call assign_operator "&&"
	'+' => Shift goto 136
	'-' => Shift goto 137
	'*' => Shift goto 138
	'/' => Shift goto 139
	'%' => Shift goto 140
	"&&" => Shift goto 141
	"||" => Shift goto 142
	'|' => Shift goto 143
	"<<" => Shift goto 144
	">>" => Shift goto 145
	'[' => Shift goto 146
	']' => Reduce #3 expression call assign_operator "&&"
	"==" => Shift goto 147
	"!=" => Shift goto 148
	">=" => Shift goto 149
	"<=" => Shift goto 150
	'>' => Shift goto 151
	'<' => Shift goto 152
	"+=" => Reduce #3 expression call assign_operator "&&"
	"-=" => Reduce #3 expression call assign_operator "&&"
	"*=" => Reduce #3 expression call assign_operator "&&"
	"/=" => Reduce #3 expression call assign_operator "&&"
	"^=" => Reduce #3 expression call assign_operator "&&"
	"&=" => Reduce #3 expression call assign_operator "&&"
	"%=" => Reduce #3 expression call assign_operator "&&"
	"&&=" => Reduce #3 expression call assign_operator "&&"
	"||=" => Reduce #3 expression call assign_operator "&&"
	"|=" => Reduce #3 expression call assign_operator "&&"
	"<<=" => Reduce #3 expression call assign_operator "&&"
	">>=" => Reduce #3 expression call assign_operator "&&"
	'.' => Shift goto 165
[268]
	'(' => Shift goto 130
	')' => Reduce #3 expression call assign_operator "||"
	';' => Reduce #3 expression call assign_operator "||"
	',' => Reduce #3 expression call assign_operator "||"
	'&' => Shift goto 132
	'^' => Shift goto 133
	'}' => Reduce #3 expression call assign_operator "||"
	"->" => Reduce #3 expression call assign_operator "||"
	'=' => Reduce #3 expression call assign_operator "||"
	'+' => Shift goto 136
	'-' => Shift goto 137
	'*' => Shift goto 138
	'/' => Shift goto 139
	'%' => Shift goto 140
	"&&" => Shift goto 141
	"||" => Shift goto 142
	'|' => Shift goto 143
	"<<" => Shift goto 144
	">>" => Shift goto 145
	'[' => Shift goto 146
	']' => Reduce #3 expression call assign_operator "||"
	"==" => Shift goto 147
	"!=" => Shift goto 148
	">=" => Shift goto 149
	"<=" => Shift goto 150
	'>' => Shift goto 151
	'<' => Shift goto 152
	"+=" => Reduce #3 expression call assign_operator "||"
	"-=" => Reduce #3 expression call assign_operator "||"
	"*=" => Reduce #3 expression call assign_operator "||"
	"/=" => Reduce #3 expression call assign_operator "||"
	"^=" => Reduce #3 expression call assign_operator "||"
	"&=" => Reduce #3 expression call assign_operator "||"
	"%=" => Reduce #3 expression call assign_operator "||"
	"&&=" => Reduce #3 expression call assign_operator "||"
	"||=" => Reduce #3 expression call assign_operator "||"
	"|=" => Reduce #3 expression call assign_operator "||"
	"<<=" => Reduce #3 expression call assign_operator "||"
	">>=" => Reduce #3 expression call assign_operator "||"
	'.' => Shift goto 165
[269]
	'(' => Shift goto 130
	')' => Reduce #3 expression call assign_operator "|"
	';' => Reduce #3 expression call assign_operator "|"
	',' => Reduce #3 expression call assign_operator "|"
	'&' => Shift goto 132
	'^' => Shift goto 133
	'}' => Reduce #3 expression call assign_operator "|"
	"->" => Reduce #3 expression call assign_operator "|"
	'=' => Reduce #3 expression call assign_operator "|"
	'+' => Shift goto 136
	'-' => Shift goto 137
	'*' => Shift goto 138
	'/' => Shift goto 139
	'%' => Shift goto 140
	"&&" => Shift goto 141
	"||" => Shift goto 142
	'|' => Shift goto 143
	"<<" => Shift goto 144
	">>" => Shift goto 145
	'[' => Shift goto 146
	']' => Reduce #3 expression call assign_operator "|"
	"==" => Shift goto 147
	"!=" => Shift goto 148
	">=" => Shift goto 149
	"<=" => Shift goto 150
	'>' => Shift goto 151
	'<' => Shift goto 152
	"+=" => Reduce #3 expression call assign_operator "|"
	"-=" => Reduce #3 expression call assign_operator "|"
	"*=" => Reduce #3 expression call assign_operator "|"
	"/=" => Reduce #3 expression call assign_operator "|"
	"^=" => Reduce #3 expression call assign_operator "|"
	"&=" => Reduce #3 expression call assign_operator "|"
	"%=" => Reduce #3 expression call assign_operator "|"
	"&&=" => Reduce #3 expression call assign_operator "|"
	"||=" => Reduce #3 expression call assign_operator "|"
	"|=" => Reduce #3 expression call assign_operator "|"
	"<<=" => Reduce #3 expression call assign_operator "|"
	">>=" => Reduce #3 expression call assign_operator "|"
	'.' => Shift goto 165
[270]
	'(' => Shift goto 130
	')' => Reduce #3 expression call assign_operator "<<"
	';' => Reduce #3 expression call assign_operator "<<"
	',' => Reduce #3 expression call assign_operator "<<"
	'&' => Shift goto 132
	'^' => Shift goto 133
	'}' => Reduce #3 expression call assign_operator "<<"
	"->" => Reduce #3 expression call assign_operator "<<"
	'=' => Reduce #3 expression call assign_operator "<<"
	'+' => Shift goto 136
	'-' => Shift goto 137
	'*' => Shift goto 138
	'/' => Shift goto 139
	'%' => Shift goto 140
	"&&" => Shift goto 141
	"||" => Shift goto 142
	'|' => Shift goto 143
	"<<" => Shift goto 144
	">>" => Shift goto 145
	'[' => Shift goto 146
	']' => Reduce #3 expression call assign_operator "<<"
	"==" => Shift goto 147
	"!=" => Shift goto 148
	">=" => Shift goto 149
	"<=" => Shift goto 150
	'>' => Shift goto 151
	'<' => Shift goto 152
	"+=" => Reduce #3 expression call assign_operator "<<"
	"-=" => Reduce #3 expression call assign_operator "<<"
	"*=" => Reduce #3 expression call assign_operator "<<"
	"/=" => Reduce #3 expression call assign_operator "<<"
	"^=" => Reduce #3 expression call assign_operator "<<"
	"&=" => Reduce #3 expression call assign_operator "<<"
	"%=" => Reduce #3 expression call assign_operator "<<"
	"&&=" => Reduce #3 expression call assign_operator "<<"
	"||=" => Reduce #3 expression call assign_operator "<<"
	"|=" => Reduce #3 expression call assign_operator "<<"
	"<<=" => Reduce #3 expression call assign_operator "<<"
	">>=" => Reduce #3 expression call assign_operator "<<"
	'.' => Shift goto 165
[271]
	'(' => Shift goto 130
	')' => Reduce #3 expression call assign_operator ">>"
	';' => Reduce #3 expression call assign_operator ">>"
	',' => Reduce #3 expression call assign_operator ">>"
	'&' => Shift goto 132
	'^' => Shift goto 133
	'}' => Reduce #3 expression call assign_operator ">>"
	"->" => Reduce #3 expression call assign_operator ">>"
	'=' => Reduce #3 expression call assign_operator ">>"
	'+' => Shift goto 136
	'-' => Shift goto 137
	'*' => Shift goto 138
	'/' => Shift goto 139
	'%' => Shift goto 140
	"&&" => Shift goto 141
	"||" => Shift goto 142
	'|' => Shift goto 143
	"<<" => Shift goto 144
	">>" => Shift goto 145
	'[' => Shift goto 146
	']' => Reduce #3 expression call assign_operator ">>"
	"==" => Shift goto 147
	"!=" => Shift goto 148
	">=" => Shift goto 149
	"<=" => Shift goto 150
	'>' => Shift goto 151
	'<' => Shift goto 152
	"+=" => Reduce #3 expression call assign_operator ">>"
	"-=" => Reduce #3 expression call assign_operator ">>"
	"*=" => Reduce #3 expression call assign_operator ">>"
	"/=" => Reduce #3 expression call assign_operator ">>"
	"^=" => Reduce #3 expression call assign_operator ">>"
	"&=" => Reduce #3 expression call assign_operator ">>"
	"%=" => Reduce #3 expression call assign_operator ">>"
	"&&=" => Reduce #3 expression call assign_operator ">>"
	"||=" => Reduce #3 expression call assign_operator ">>"
	"|=" => Reduce #3 expression call assign_operator ">>"
	"<<=" => Reduce #3 expression call assign_operator ">>"
	">>=" => Reduce #3 expression call assign_operator ">>"
	'.' => Shift goto 165
[272]
	'(' => Reduce #3 expression call member
	')' => Reduce #3 expression call member
	';' => Reduce #3 expression call member
	',' => Reduce #3 expression call member
	'&' => Reduce #3 expression call member
	'^' => Reduce #3 expression call member
	'}' => Reduce #3 expression call member
	"->" => Reduce #3 expression call member
	'=' => Reduce #3 expression call member
	'+' => Reduce #3 expression call member
	'-' => Reduce #3 expression call member
	'*' => Reduce #3 expression call member
	'/' => Reduce #3 expression call member
	'%' => Reduce #3 expression call member
	"&&" => Reduce #3 expression call member
	"||" => Reduce #3 expression call member
	'|' => Reduce #3 expression call member
	"<<" => Reduce #3 expression call member
	">>" => Reduce #3 expression call member
	'[' => Reduce #3 expression call member
	']' => Reduce #3 expression call member
	"==" => Reduce #3 expression call member
	"!=" => Reduce #3 expression call member
	">=" => Reduce #3 expression call member
	"<=" => Reduce #3 expression call member
	'>' => Reduce #3 expression call member
	'<' => Reduce #3 expression call member
	"+=" => Reduce #3 expression call member
	"-=" => Reduce #3 expression call member
	"*=" => Reduce #3 expression call member
	"/=" => Reduce #3 expression call member
	"^=" => Reduce #3 expression call member
	"&=" => Reduce #3 expression call member
	"%=" => Reduce #3 expression call member
	"&&=" => Reduce #3 expression call member
	"||=" => Reduce #3 expression call member
	"|=" => Reduce #3 expression call member
	"<<=" => Reduce #3 expression call member
	">>=" => Reduce #3 expression call member
	'.' => Reduce #3 expression call member
[273]
	'(' => Reduce #3 expression
	')' => Reduce #3 expression
	';' => Reduce #3 expression
	',' => Reduce #3 expression
	'&' => Reduce #3 expression
	'^' => Reduce #3 expression
	'}' => Reduce #3 expression
	"->" => Reduce #3 expression
	'=' => Reduce #3 expression
	'+' => Reduce #3 expression
	'-' => Reduce #3 expression
	'*' => Reduce #3 expression
	'/' => Reduce #3 expression
	'%' => Reduce #3 expression
	"&&" => Reduce #3 expression
	"||" => Reduce #3 expression
	'|' => Reduce #3 expression
	"<<" => Reduce #3 expression
	">>" => Reduce #3 expression
	'[' => Reduce #3 expression
	']' => Reduce #3 expression
	"==" => Reduce #3 expression
	"!=" => Reduce #3 expression
	">=" => Reduce #3 expression
	"<=" => Reduce #3 expression
	'>' => Reduce #3 expression
	'<' => Reduce #3 expression
	"+=" => Reduce #3 expression
	"-=" => Reduce #3 expression
	"*=" => Reduce #3 expression
	"/=" => Reduce #3 expression
	"^=" => Reduce #3 expression
	"&=" => Reduce #3 expression
	"%=" => Reduce #3 expression
	"&&=" => Reduce #3 expression
	"||=" => Reduce #3 expression
	"|=" => Reduce #3 expression
	"<<=" => Reduce #3 expression
	">>=" => Reduce #3 expression
	'.' => Reduce #3 expression
[274]
	$ => Reduce #3 statement
	BOOLEAN => Reduce #3 statement
	IDENT => Reduce #3 statement
	DQSTRING => Reduce #3 statement
	SQSTRING => Reduce #3 statement
	CARDINAL => Reduce #3 statement
	INTEGER => Reduce #3 statement
	FLOAT => Reduce #3 statement
	"function" => Reduce #3 statement
	'(' => Reduce #3 statement
	"procedure" => Reduce #3 statement
	'&' => Reduce #3 statement
	"typedef" => Reduce #3 statement
	'{' => Reduce #3 statement
	'}' => Reduce #3 statement
	"private" => Reduce #3 statement
	"public" => Reduce #3 statement
	'+' => Reduce #3 statement
	'-' => Reduce #3 statement
	'*' => Reduce #3 statement
	'~' => Reduce #3 statement
	'!' => Reduce #3 statement
	"var" => Reduce #3 statement
	"return" => Reduce #3 statement
	"delete" => Reduce #3 statement
	"if" => Reduce #3 statement
	"while" => Reduce #3 statement
	"new" => Reduce #3 statement
	"cast" => Reduce #3 statement
	"null" => Reduce #3 statement
[275]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[276]
	'(' => Reduce #3 expression call structure
	')' => Reduce #3 expression call structure
	';' => Reduce #3 expression call structure
	',' => Reduce #3 expression call structure
	'&' => Reduce #3 expression call structure
	'^' => Reduce #3 expression call structure
	'}' => Reduce #3 expression call structure
	"->" => Reduce #3 expression call structure
	'=' => Reduce #3 expression call structure
	'+' => Reduce #3 expression call structure
	'-' => Reduce #3 expression call structure
	'*' => Reduce #3 expression call structure
	'/' => Reduce #3 expression call structure
	'%' => Reduce #3 expression call structure
	"&&" => Reduce #3 expression call structure
	"||" => Reduce #3 expression call structure
	'|' => Reduce #3 expression call structure
	"<<" => Reduce #3 expression call structure
	">>" => Reduce #3 expression call structure
	'[' => Reduce #3 expression call structure
	']' => Reduce #3 expression call structure
	"==" => Reduce #3 expression call structure
	"!=" => Reduce #3 expression call structure
	">=" => Reduce #3 expression call structure
	"<=" => Reduce #3 expression call structure
	'>' => Reduce #3 expression call structure
	'<' => Reduce #3 expression call structure
	"+=" => Reduce #3 expression call structure
	"-=" => Reduce #3 expression call structure
	"*=" => Reduce #3 expression call structure
	"/=" => Reduce #3 expression call structure
	"^=" => Reduce #3 expression call structure
	"&=" => Reduce #3 expression call structure
	"%=" => Reduce #3 expression call structure
	"&&=" => Reduce #3 expression call structure
	"||=" => Reduce #3 expression call structure
	"|=" => Reduce #3 expression call structure
	"<<=" => Reduce #3 expression call structure
	">>=" => Reduce #3 expression call structure
	'.' => Reduce #3 expression call structure
[277]
	$ => Reduce #3 statement call definition
	BOOLEAN => Reduce #3 statement call definition
	IDENT => Reduce #3 statement call definition
	DQSTRING => Reduce #3 statement call definition
	SQSTRING => Reduce #3 statement call definition
	CARDINAL => Reduce #3 statement call definition
	INTEGER => Reduce #3 statement call definition
	FLOAT => Reduce #3 statement call definition
	"function" => Reduce #3 statement call definition
	'(' => Reduce #3 statement call definition
	"procedure" => Reduce #3 statement call definition
	'&' => Reduce #3 statement call definition
	"typedef" => Reduce #3 statement call definition
	'{' => Reduce #3 statement call definition
	'}' => Reduce #3 statement call definition
	"private" => Reduce #3 statement call definition
	"public" => Reduce #3 statement call definition
	'+' => Reduce #3 statement call definition
	'-' => Reduce #3 statement call definition
	'*' => Reduce #3 statement call definition
	'~' => Reduce #3 statement call definition
	'!' => Reduce #3 statement call definition
	"var" => Reduce #3 statement call definition
	"return" => Reduce #3 statement call definition
	"delete" => Reduce #3 statement call definition
	"if" => Reduce #3 statement call definition
	"while" => Reduce #3 statement call definition
	"new" => Reduce #3 statement call definition
	"cast" => Reduce #3 statement call definition
	"null" => Reduce #3 statement call definition
[278]
	$ => Reduce #3 statement call return_value
	BOOLEAN => Reduce #3 statement call return_value
	IDENT => Reduce #3 statement call return_value
	DQSTRING => Reduce #3 statement call return_value
	SQSTRING => Reduce #3 statement call return_value
	CARDINAL => Reduce #3 statement call return_value
	INTEGER => Reduce #3 statement call return_value
	FLOAT => Reduce #3 statement call return_value
	"function" => Reduce #3 statement call return_value
	'(' => Reduce #3 statement call return_value
	"procedure" => Reduce #3 statement call return_value
	'&' => Reduce #3 statement call return_value
	"typedef" => Reduce #3 statement call return_value
	'{' => Reduce #3 statement call return_value
	'}' => Reduce #3 statement call return_value
	"private" => Reduce #3 statement call return_value
	"public" => Reduce #3 statement call return_value
	'+' => Reduce #3 statement call return_value
	'-' => Reduce #3 statement call return_value
	'*' => Reduce #3 statement call return_value
	'~' => Reduce #3 statement call return_value
	'!' => Reduce #3 statement call return_value
	"var" => Reduce #3 statement call return_value
	"return" => Reduce #3 statement call return_value
	"delete" => Reduce #3 statement call return_value
	"if" => Reduce #3 statement call return_value
	"while" => Reduce #3 statement call return_value
	"new" => Reduce #3 statement call return_value
	"cast" => Reduce #3 statement call return_value
	"null" => Reduce #3 statement call return_value
[279]
	$ => Reduce #3 statement call delete
	BOOLEAN => Reduce #3 statement call delete
	IDENT => Reduce #3 statement call delete
	DQSTRING => Reduce #3 statement call delete
	SQSTRING => Reduce #3 statement call delete
	CARDINAL => Reduce #3 statement call delete
	INTEGER => Reduce #3 statement call delete
	FLOAT => Reduce #3 statement call delete
	"function" => Reduce #3 statement call delete
	'(' => Reduce #3 statement call delete
	"procedure" => Reduce #3 statement call delete
	'&' => Reduce #3 statement call delete
	"typedef" => Reduce #3 statement call delete
	'{' => Reduce #3 statement call delete
	'}' => Reduce #3 statement call delete
	"private" => Reduce #3 statement call delete
	"public" => Reduce #3 statement call delete
	'+' => Reduce #3 statement call delete
	'-' => Reduce #3 statement call delete
	'*' => Reduce #3 statement call delete
	'~' => Reduce #3 statement call delete
	'!' => Reduce #3 statement call delete
	"var" => Reduce #3 statement call delete
	"return" => Reduce #3 statement call delete
	"delete" => Reduce #3 statement call delete
	"if" => Reduce #3 statement call delete
	"while" => Reduce #3 statement call delete
	"new" => Reduce #3 statement call delete
	"cast" => Reduce #3 statement call delete
	"null" => Reduce #3 statement call delete
[280]
	'(' => Shift goto 130
	')' => Shift goto 308
	'&' => Shift goto 132
	'^' => Shift goto 133
	"->" => Shift goto 134
	'=' => Shift goto 135
	'+' => Shift goto 136
	'-' => Shift goto 137
	'*' => Shift goto 138
	'/' => Shift goto 139
	'%' => Shift goto 140
	"&&" => Shift goto 141
	"||" => Shift goto 142
	'|' => Shift goto 143
	"<<" => Shift goto 144
	">>" => Shift goto 145
	'[' => Shift goto 146
	"==" => Shift goto 147
	"!=" => Shift goto 148
	">=" => Shift goto 149
	"<=" => Shift goto 150
	'>' => Shift goto 151
	'<' => Shift goto 152
	"+=" => Shift goto 153
	"-=" => Shift goto 154
	"*=" => Shift goto 155
	"/=" => Shift goto 156
	"^=" => Shift goto 157
	"&=" => Shift goto 158
	"%=" => Shift goto 159
	"&&=" => Shift goto 160
	"||=" => Shift goto 161
	"|=" => Shift goto 162
	"<<=" => Shift goto 163
	">>=" => Shift goto 164
	'.' => Shift goto 165
[281]
	'(' => Shift goto 130
	')' => Shift goto 309
	'&' => Shift goto 132
	'^' => Shift goto 133
	"->" => Shift goto 134
	'=' => Shift goto 135
	'+' => Shift goto 136
	'-' => Shift goto 137
	'*' => Shift goto 138
	'/' => Shift goto 139
	'%' => Shift goto 140
	"&&" => Shift goto 141
	"||" => Shift goto 142
	'|' => Shift goto 143
	"<<" => Shift goto 144
	">>" => Shift goto 145
	'[' => Shift goto 146
	"==" => Shift goto 147
	"!=" => Shift goto 148
	">=" => Shift goto 149
	"<=" => Shift goto 150
	'>' => Shift goto 151
	'<' => Shift goto 152
	"+=" => Shift goto 153
	"-=" => Shift goto 154
	"*=" => Shift goto 155
	"/=" => Shift goto 156
	"^=" => Shift goto 157
	"&=" => Shift goto 158
	"%=" => Shift goto 159
	"&&=" => Shift goto 160
	"||=" => Shift goto 161
	"|=" => Shift goto 162
	"<<=" => Shift goto 163
	">>=" => Shift goto 164
	'.' => Shift goto 165
[282]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[283]
	'{' => Shift goto 311
[284]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[285]
	')' => Reduce #2 paramdecl call paramdef
	',' => Reduce #2 paramdecl call paramdef
[286]
	"const" => Shift goto 313
	'{' => Shift goto 314
[287]
	IDENT => Shift goto 17
	"const" => Shift goto 18
[288]
	'(' => Shift goto 316
[289]
	IDENT => Shift goto 17
	')' => Reduce #0 extern_paramlist call extern_paramdeflist
	"const" => Shift goto 18
[290]
	'(' => Shift goto 318
[291]
	IDENT => Shift goto 17
	')' => Reduce #0 extern_paramlist call extern_paramdeflist
	"const" => Shift goto 18
[292]
	IDENT => Reduce #2 operatordecl call operatordecl {name="()",symbol="call"}
	'(' => Reduce #2 operatordecl call operatordecl {name="()",symbol="call"}
	"const" => Reduce #2 operatordecl call operatordecl {name="()",symbol="call"}
[293]
	IDENT => Reduce #2 operatordecl call operatordecl {name="[]",symbol="get"}
	'(' => Reduce #2 operatordecl call operatordecl {name="[]",symbol="get"}
	"const" => Reduce #2 operatordecl call operatordecl {name="[]",symbol="get"}
[294]
	IDENT => Shift goto 17
	'(' => Shift goto 100
	"const" => Shift goto 18
[295]
	$ => Reduce #3 constructordefinition call constructordef
	IDENT => Reduce #3 constructordefinition call constructordef
	"function" => Reduce #3 constructordefinition call constructordef
	"procedure" => Reduce #3 constructordefinition call constructordef
	"const" => Reduce #3 constructordefinition call constructordef
	"operator" => Reduce #3 constructordefinition call constructordef
	"typedef" => Reduce #3 constructordefinition call constructordef
	"struct" => Reduce #3 constructordefinition call constructordef
	'}' => Reduce #3 constructordefinition call constructordef
	"interface" => Reduce #3 constructordefinition call constructordef
	"class" => Reduce #3 constructordefinition call constructordef
	"private" => Reduce #3 constructordefinition call constructordef
	"public" => Reduce #3 constructordefinition call constructordef
	"constructor" => Reduce #3 constructordefinition call constructordef
	"destructor" => Reduce #3 constructordefinition call constructordef
[296]
	IDENT => Shift goto 17
	')' => Reduce #0 parameterlist call paramdeflist
	"const" => Shift goto 18
[297]
	'}' => Shift goto 324
[298]
	'{' => Reduce #3 inheritlist call inheritdef 1
[299]
	'}' => Shift goto 325
[300]
	')' => Shift goto 326
	"..." => Shift goto 327
[301]
	';' => Shift goto 328
[302]
	')' => Shift goto 329
[303]
	')' => Reduce #2 extern_parameters
	"..." => Reduce #2 extern_parameters
	',' => Shift goto 330
[304]
	IDENT => Shift goto 17
	"const" => Shift goto 18
[305]
	'(' => Reduce #4 expression call operator "()"
	')' => Reduce #4 expression call operator "()"
	';' => Reduce #4 expression call operator "()"
	',' => Reduce #4 expression call operator "()"
	'&' => Reduce #4 expression call operator "()"
	'^' => Reduce #4 expression call operator "()"
	'}' => Reduce #4 expression call operator "()"
	"->" => Reduce #4 expression call operator "()"
	'=' => Reduce #4 expression call operator "()"
	'+' => Reduce #4 expression call operator "()"
	'-' => Reduce #4 expression call operator "()"
	'*' => Reduce #4 expression call operator "()"
	'/' => Reduce #4 expression call operator "()"
	'%' => Reduce #4 expression call operator "()"
	"&&" => Reduce #4 expression call operator "()"
	"||" => Reduce #4 expression call operator "()"
	'|' => Reduce #4 expression call operator "()"
	"<<" => Reduce #4 expression call operator "()"
	">>" => Reduce #4 expression call operator "()"
	'[' => Reduce #4 expression call operator "()"
	']' => Reduce #4 expression call operator "()"
	"==" => Reduce #4 expression call operator "()"
	"!=" => Reduce #4 expression call operator "()"
	">=" => Reduce #4 expression call operator "()"
	"<=" => Reduce #4 expression call operator "()"
	'>' => Reduce #4 expression call operator "()"
	'<' => Reduce #4 expression call operator "()"
	"+=" => Reduce #4 expression call operator "()"
	"-=" => Reduce #4 expression call operator "()"
	"*=" => Reduce #4 expression call operator "()"
	"/=" => Reduce #4 expression call operator "()"
	"^=" => Reduce #4 expression call operator "()"
	"&=" => Reduce #4 expression call operator "()"
	"%=" => Reduce #4 expression call operator "()"
	"&&=" => Reduce #4 expression call operator "()"
	"||=" => Reduce #4 expression call operator "()"
	"|=" => Reduce #4 expression call operator "()"
	"<<=" => Reduce #4 expression call operator "()"
	">>=" => Reduce #4 expression call operator "()"
	'.' => Reduce #4 expression call operator "()"
[306]
	'(' => Reduce #4 expression call operator "[]"
	')' => Reduce #4 expression call operator "[]"
	';' => Reduce #4 expression call operator "[]"
	',' => Reduce #4 expression call operator "[]"
	'&' => Reduce #4 expression call operator "[]"
	'^' => Reduce #4 expression call operator "[]"
	'}' => Reduce #4 expression call operator "[]"
	"->" => Reduce #4 expression call operator "[]"
	'=' => Reduce #4 expression call operator "[]"
	'+' => Reduce #4 expression call operator "[]"
	'-' => Reduce #4 expression call operator "[]"
	'*' => Reduce #4 expression call operator "[]"
	'/' => Reduce #4 expression call operator "[]"
	'%' => Reduce #4 expression call operator "[]"
	"&&" => Reduce #4 expression call operator "[]"
	"||" => Reduce #4 expression call operator "[]"
	'|' => Reduce #4 expression call operator "[]"
	"<<" => Reduce #4 expression call operator "[]"
	">>" => Reduce #4 expression call operator "[]"
	'[' => Reduce #4 expression call operator "[]"
	']' => Reduce #4 expression call operator "[]"
	"==" => Reduce #4 expression call operator "[]"
	"!=" => Reduce #4 expression call operator "[]"
	">=" => Reduce #4 expression call operator "[]"
	"<=" => Reduce #4 expression call operator "[]"
	'>' => Reduce #4 expression call operator "[]"
	'<' => Reduce #4 expression call operator "[]"
	"+=" => Reduce #4 expression call operator "[]"
	"-=" => Reduce #4 expression call operator "[]"
	"*=" => Reduce #4 expression call operator "[]"
	"/=" => Reduce #4 expression call operator "[]"
	"^=" => Reduce #4 expression call operator "[]"
	"&=" => Reduce #4 expression call operator "[]"
	"%=" => Reduce #4 expression call operator "[]"
	"&&=" => Reduce #4 expression call operator "[]"
	"||=" => Reduce #4 expression call operator "[]"
	"|=" => Reduce #4 expression call operator "[]"
	"<<=" => Reduce #4 expression call operator "[]"
	">>=" => Reduce #4 expression call operator "[]"
	'.' => Reduce #4 expression call operator "[]"
[307]
	')' => Reduce #3 expressionlist
	'}' => Reduce #3 expressionlist
	']' => Reduce #3 expressionlist
[308]
	'{' => Shift goto 332
[309]
	'{' => Shift goto 333
[310]
	'(' => Shift goto 130
	')' => Reduce #4 expression call allocate
	';' => Reduce #4 expression call allocate
	',' => Reduce #4 expression call allocate
	'&' => Shift goto 132
	'^' => Shift goto 133
	'}' => Reduce #4 expression call allocate
	"->" => Reduce #4 expression call allocate
	'=' => Shift goto 135
	'+' => Shift goto 136
	'-' => Shift goto 137
	'*' => Shift goto 138
	'/' => Shift goto 139
	'%' => Shift goto 140
	"&&" => Shift goto 141
	"||" => Shift goto 142
	'|' => Shift goto 143
	"<<" => Shift goto 144
	">>" => Shift goto 145
	'[' => Shift goto 146
	']' => Reduce #4 expression call allocate
	"==" => Shift goto 147
	"!=" => Shift goto 148
	">=" => Shift goto 149
	"<=" => Shift goto 150
	'>' => Shift goto 151
	'<' => Shift goto 152
	"+=" => Shift goto 153
	"-=" => Shift goto 154
	"*=" => Shift goto 155
	"/=" => Shift goto 156
	"^=" => Shift goto 157
	"&=" => Shift goto 158
	"%=" => Shift goto 159
	"&&=" => Shift goto 160
	"||=" => Shift goto 161
	"|=" => Shift goto 162
	"<<=" => Shift goto 163
	">>=" => Shift goto 164
	'.' => Shift goto 165
[311]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	'(' => Shift goto 77
	'&' => Shift goto 78
	'{' => Shift goto 95
	'}' => Shift goto 335
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[312]
	'(' => Shift goto 130
	';' => Reduce #7 variabledefinition call vardef_array_assign
	'&' => Shift goto 132
	'^' => Shift goto 133
	"->" => Shift goto 134
	'=' => Shift goto 135
	'+' => Shift goto 136
	'-' => Shift goto 137
	'*' => Shift goto 138
	'/' => Shift goto 139
	'%' => Shift goto 140
	"&&" => Shift goto 141
	"||" => Shift goto 142
	'|' => Shift goto 143
	"<<" => Shift goto 144
	">>" => Shift goto 145
	'[' => Shift goto 146
	"==" => Shift goto 147
	"!=" => Shift goto 148
	">=" => Shift goto 149
	"<=" => Shift goto 150
	'>' => Shift goto 151
	'<' => Shift goto 152
	"+=" => Shift goto 153
	"-=" => Shift goto 154
	"*=" => Shift goto 155
	"/=" => Shift goto 156
	"^=" => Shift goto 157
	"&=" => Shift goto 158
	"%=" => Shift goto 159
	"&&=" => Shift goto 160
	"||=" => Shift goto 161
	"|=" => Shift goto 162
	"<<=" => Shift goto 163
	">>=" => Shift goto 164
	'.' => Shift goto 165
[313]
	'{' => Shift goto 336
[314]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	"function" => Reduce #0 linkage call linkage {private=false,linkage="external"}
	'(' => Shift goto 77
	"procedure" => Reduce #0 linkage call linkage {private=false,linkage="external"}
	'&' => Shift goto 78
	"typedef" => Shift goto 19
	'{' => Shift goto 79
	'}' => Reduce #0 statementlist
	"private" => Shift goto 23
	"public" => Shift goto 24
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"var" => Shift goto 85
	"return" => Shift goto 86
	"delete" => Shift goto 87
	"if" => Shift goto 88
	"while" => Shift goto 89
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[315]
	')' => Reduce #3 parameters
[316]
	IDENT => Shift goto 17
	')' => Reduce #0 extern_paramlist call extern_paramdeflist
	"const" => Shift goto 18
[317]
	')' => Shift goto 339
[318]
	IDENT => Shift goto 17
	')' => Reduce #0 extern_paramlist call extern_paramdeflist
	"const" => Shift goto 18
[319]
	')' => Shift goto 341
[320]
	'(' => Shift goto 100
[321]
	$ => Reduce #4 operatordefinition call operator_procdef {const=false}
	IDENT => Reduce #4 operatordefinition call operator_procdef {const=false}
	"function" => Reduce #4 operatordefinition call operator_procdef {const=false}
	"procedure" => Reduce #4 operatordefinition call operator_procdef {const=false}
	"const" => Reduce #4 operatordefinition call operator_procdef {const=false}
	"operator" => Reduce #4 operatordefinition call operator_procdef {const=false}
	"typedef" => Reduce #4 operatordefinition call operator_procdef {const=false}
	"struct" => Reduce #4 operatordefinition call operator_procdef {const=false}
	'}' => Reduce #4 operatordefinition call operator_procdef {const=false}
	"interface" => Reduce #4 operatordefinition call operator_procdef {const=false}
	"class" => Reduce #4 operatordefinition call operator_procdef {const=false}
	"private" => Reduce #4 operatordefinition call operator_procdef {const=false}
	"public" => Reduce #4 operatordefinition call operator_procdef {const=false}
	"constructor" => Reduce #4 operatordefinition call operator_procdef {const=false}
	"destructor" => Reduce #4 operatordefinition call operator_procdef {const=false}
[322]
	$ => Reduce #4 operatordefinition call operator_procdef {const=true}
	IDENT => Reduce #4 operatordefinition call operator_procdef {const=true}
	"function" => Reduce #4 operatordefinition call operator_procdef {const=true}
	"procedure" => Reduce #4 operatordefinition call operator_procdef {const=true}
	"const" => Reduce #4 operatordefinition call operator_procdef {const=true}
	"operator" => Reduce #4 operatordefinition call operator_procdef {const=true}
	"typedef" => Reduce #4 operatordefinition call operator_procdef {const=true}
	"struct" => Reduce #4 operatordefinition call operator_procdef {const=true}
	'}' => Reduce #4 operatordefinition call operator_procdef {const=true}
	"interface" => Reduce #4 operatordefinition call operator_procdef {const=true}
	"class" => Reduce #4 operatordefinition call operator_procdef {const=true}
	"private" => Reduce #4 operatordefinition call operator_procdef {const=true}
	"public" => Reduce #4 operatordefinition call operator_procdef {const=true}
	"constructor" => Reduce #4 operatordefinition call operator_procdef {const=true}
	"destructor" => Reduce #4 operatordefinition call operator_procdef {const=true}
[323]
	')' => Shift goto 344
[324]
	$ => Reduce #4 constructordefinition call destructordef
	IDENT => Reduce #4 constructordefinition call destructordef
	"function" => Reduce #4 constructordefinition call destructordef
	"procedure" => Reduce #4 constructordefinition call destructordef
	"const" => Reduce #4 constructordefinition call destructordef
	"operator" => Reduce #4 constructordefinition call destructordef
	"typedef" => Reduce #4 constructordefinition call destructordef
	"struct" => Reduce #4 constructordefinition call destructordef
	'}' => Reduce #4 constructordefinition call destructordef
	"interface" => Reduce #4 constructordefinition call destructordef
	"class" => Reduce #4 constructordefinition call destructordef
	"private" => Reduce #4 constructordefinition call destructordef
	"public" => Reduce #4 constructordefinition call destructordef
	"constructor" => Reduce #4 constructordefinition call destructordef
	"destructor" => Reduce #4 constructordefinition call destructordef
[325]
	$ => Reduce #7 classdefinition call classdef
	IDENT => Reduce #7 classdefinition call classdef
	"function" => Reduce #7 classdefinition call classdef
	"procedure" => Reduce #7 classdefinition call classdef
	"const" => Reduce #7 classdefinition call classdef
	"operator" => Reduce #7 classdefinition call classdef
	"typedef" => Reduce #7 classdefinition call classdef
	"struct" => Reduce #7 classdefinition call classdef
	'}' => Reduce #7 classdefinition call classdef
	"interface" => Reduce #7 classdefinition call classdef
	"class" => Reduce #7 classdefinition call classdef
	"private" => Reduce #7 classdefinition call classdef
	"public" => Reduce #7 classdefinition call classdef
	"constructor" => Reduce #7 classdefinition call classdef
	"destructor" => Reduce #7 classdefinition call classdef
	"main" => Reduce #7 classdefinition call classdef
[326]
	';' => Shift goto 345
[327]
	')' => Shift goto 346
[328]
	$ => Reduce #8 extern_definition call extern_procdef
	IDENT => Reduce #8 extern_definition call extern_procdef
	"extern" => Reduce #8 extern_definition call extern_procdef
	"function" => Reduce #8 extern_definition call extern_procdef
	"procedure" => Reduce #8 extern_definition call extern_procdef
	"const" => Reduce #8 extern_definition call extern_procdef
	"typedef" => Reduce #8 extern_definition call extern_procdef
	"struct" => Reduce #8 extern_definition call extern_procdef
	"interface" => Reduce #8 extern_definition call extern_procdef
	"class" => Reduce #8 extern_definition call extern_procdef
	"private" => Reduce #8 extern_definition call extern_procdef
	"public" => Reduce #8 extern_definition call extern_procdef
	"main" => Reduce #8 extern_definition call extern_procdef
[329]
	';' => Shift goto 347
[330]
	IDENT => Shift goto 17
	"const" => Shift goto 18
[331]
	')' => Reduce #3 extern_parameters
	"..." => Reduce #3 extern_parameters
[332]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	"function" => Reduce #0 linkage call linkage {private=false,linkage="external"}
	'(' => Shift goto 77
	"procedure" => Reduce #0 linkage call linkage {private=false,linkage="external"}
	'&' => Shift goto 78
	"typedef" => Shift goto 19
	'{' => Shift goto 79
	'}' => Reduce #0 statementlist
	"private" => Shift goto 23
	"public" => Shift goto 24
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"var" => Shift goto 85
	"return" => Shift goto 86
	"delete" => Shift goto 87
	"if" => Shift goto 88
	"while" => Shift goto 89
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[333]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	"function" => Reduce #0 linkage call linkage {private=false,linkage="external"}
	'(' => Shift goto 77
	"procedure" => Reduce #0 linkage call linkage {private=false,linkage="external"}
	'&' => Shift goto 78
	"typedef" => Shift goto 19
	'{' => Shift goto 79
	'}' => Reduce #0 statementlist
	"private" => Shift goto 23
	"public" => Shift goto 24
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"var" => Shift goto 85
	"return" => Shift goto 86
	"delete" => Shift goto 87
	"if" => Shift goto 88
	"while" => Shift goto 89
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[334]
	'(' => Shift goto 130
	'&' => Shift goto 132
	'^' => Shift goto 133
	'}' => Shift goto 351
	"->" => Shift goto 134
	'=' => Shift goto 135
	'+' => Shift goto 136
	'-' => Shift goto 137
	'*' => Shift goto 138
	'/' => Shift goto 139
	'%' => Shift goto 140
	"&&" => Shift goto 141
	"||" => Shift goto 142
	'|' => Shift goto 143
	"<<" => Shift goto 144
	">>" => Shift goto 145
	'[' => Shift goto 146
	"==" => Shift goto 147
	"!=" => Shift goto 148
	">=" => Shift goto 149
	"<=" => Shift goto 150
	'>' => Shift goto 151
	'<' => Shift goto 152
	"+=" => Shift goto 153
	"-=" => Shift goto 154
	"*=" => Shift goto 155
	"/=" => Shift goto 156
	"^=" => Shift goto 157
	"&=" => Shift goto 158
	"%=" => Shift goto 159
	"&&=" => Shift goto 160
	"||=" => Shift goto 161
	"|=" => Shift goto 162
	"<<=" => Shift goto 163
	">>=" => Shift goto 164
	'.' => Shift goto 165
[335]
	'(' => Reduce #5 expression call typecast
	')' => Reduce #5 expression call typecast
	';' => Reduce #5 expression call typecast
	',' => Reduce #5 expression call typecast
	'&' => Reduce #5 expression call typecast
	'^' => Reduce #5 expression call typecast
	'}' => Reduce #5 expression call typecast
	"->" => Reduce #5 expression call typecast
	'=' => Reduce #5 expression call typecast
	'+' => Reduce #5 expression call typecast
	'-' => Reduce #5 expression call typecast
	'*' => Reduce #5 expression call typecast
	'/' => Reduce #5 expression call typecast
	'%' => Reduce #5 expression call typecast
	"&&" => Reduce #5 expression call typecast
	"||" => Reduce #5 expression call typecast
	'|' => Reduce #5 expression call typecast
	"<<" => Reduce #5 expression call typecast
	">>" => Reduce #5 expression call typecast
	'[' => Reduce #5 expression call typecast
	']' => Reduce #5 expression call typecast
	"==" => Reduce #5 expression call typecast
	"!=" => Reduce #5 expression call typecast
	">=" => Reduce #5 expression call typecast
	"<=" => Reduce #5 expression call typecast
	'>' => Reduce #5 expression call typecast
	'<' => Reduce #5 expression call typecast
	"+=" => Reduce #5 expression call typecast
	"-=" => Reduce #5 expression call typecast
	"*=" => Reduce #5 expression call typecast
	"/=" => Reduce #5 expression call typecast
	"^=" => Reduce #5 expression call typecast
	"&=" => Reduce #5 expression call typecast
	"%=" => Reduce #5 expression call typecast
	"&&=" => Reduce #5 expression call typecast
	"||=" => Reduce #5 expression call typecast
	"|=" => Reduce #5 expression call typecast
	"<<=" => Reduce #5 expression call typecast
	">>=" => Reduce #5 expression call typecast
	'.' => Reduce #5 expression call typecast
[336]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	"function" => Reduce #0 linkage call linkage {private=false,linkage="external"}
	'(' => Shift goto 77
	"procedure" => Reduce #0 linkage call linkage {private=false,linkage="external"}
	'&' => Shift goto 78
	"typedef" => Shift goto 19
	'{' => Shift goto 79
	'}' => Reduce #0 statementlist
	"private" => Shift goto 23
	"public" => Shift goto 24
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"var" => Shift goto 85
	"return" => Shift goto 86
	"delete" => Shift goto 87
	"if" => Shift goto 88
	"while" => Shift goto 89
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[337]
	'}' => Shift goto 353
[338]
	')' => Shift goto 354
[339]
	';' => Shift goto 355
	"const" => Shift goto 356
[340]
	')' => Shift goto 357
[341]
	';' => Shift goto 358
	"const" => Shift goto 359
[342]
	$ => Reduce #5 operatordefinition call operator_funcdef {const=false}
	IDENT => Reduce #5 operatordefinition call operator_funcdef {const=false}
	"function" => Reduce #5 operatordefinition call operator_funcdef {const=false}
	"procedure" => Reduce #5 operatordefinition call operator_funcdef {const=false}
	"const" => Reduce #5 operatordefinition call operator_funcdef {const=false}
	"operator" => Reduce #5 operatordefinition call operator_funcdef {const=false}
	"typedef" => Reduce #5 operatordefinition call operator_funcdef {const=false}
	"struct" => Reduce #5 operatordefinition call operator_funcdef {const=false}
	'}' => Reduce #5 operatordefinition call operator_funcdef {const=false}
	"interface" => Reduce #5 operatordefinition call operator_funcdef {const=false}
	"class" => Reduce #5 operatordefinition call operator_funcdef {const=false}
	"private" => Reduce #5 operatordefinition call operator_funcdef {const=false}
	"public" => Reduce #5 operatordefinition call operator_funcdef {const=false}
	"constructor" => Reduce #5 operatordefinition call operator_funcdef {const=false}
	"destructor" => Reduce #5 operatordefinition call operator_funcdef {const=false}
[343]
	$ => Reduce #5 operatordefinition call operator_funcdef {const=true}
	IDENT => Reduce #5 operatordefinition call operator_funcdef {const=true}
	"function" => Reduce #5 operatordefinition call operator_funcdef {const=true}
	"procedure" => Reduce #5 operatordefinition call operator_funcdef {const=true}
	"const" => Reduce #5 operatordefinition call operator_funcdef {const=true}
	"operator" => Reduce #5 operatordefinition call operator_funcdef {const=true}
	"typedef" => Reduce #5 operatordefinition call operator_funcdef {const=true}
	"struct" => Reduce #5 operatordefinition call operator_funcdef {const=true}
	'}' => Reduce #5 operatordefinition call operator_funcdef {const=true}
	"interface" => Reduce #5 operatordefinition call operator_funcdef {const=true}
	"class" => Reduce #5 operatordefinition call operator_funcdef {const=true}
	"private" => Reduce #5 operatordefinition call operator_funcdef {const=true}
	"public" => Reduce #5 operatordefinition call operator_funcdef {const=true}
	"constructor" => Reduce #5 operatordefinition call operator_funcdef {const=true}
	"destructor" => Reduce #5 operatordefinition call operator_funcdef {const=true}
[344]
	'{' => Shift goto 314
[345]
	$ => Reduce #9 extern_definition call extern_funcdef
	IDENT => Reduce #9 extern_definition call extern_funcdef
	"extern" => Reduce #9 extern_definition call extern_funcdef
	"function" => Reduce #9 extern_definition call extern_funcdef
	"procedure" => Reduce #9 extern_definition call extern_funcdef
	"const" => Reduce #9 extern_definition call extern_funcdef
	"typedef" => Reduce #9 extern_definition call extern_funcdef
	"struct" => Reduce #9 extern_definition call extern_funcdef
	"interface" => Reduce #9 extern_definition call extern_funcdef
	"class" => Reduce #9 extern_definition call extern_funcdef
	"private" => Reduce #9 extern_definition call extern_funcdef
	"public" => Reduce #9 extern_definition call extern_funcdef
	"main" => Reduce #9 extern_definition call extern_funcdef
[346]
	';' => Shift goto 360
[347]
	$ => Reduce #9 extern_definition call extern_procdef_vararg
	IDENT => Reduce #9 extern_definition call extern_procdef_vararg
	"extern" => Reduce #9 extern_definition call extern_procdef_vararg
	"function" => Reduce #9 extern_definition call extern_procdef_vararg
	"procedure" => Reduce #9 extern_definition call extern_procdef_vararg
	"const" => Reduce #9 extern_definition call extern_procdef_vararg
	"typedef" => Reduce #9 extern_definition call extern_procdef_vararg
	"struct" => Reduce #9 extern_definition call extern_procdef_vararg
	"interface" => Reduce #9 extern_definition call extern_procdef_vararg
	"class" => Reduce #9 extern_definition call extern_procdef_vararg
	"private" => Reduce #9 extern_definition call extern_procdef_vararg
	"public" => Reduce #9 extern_definition call extern_procdef_vararg
	"main" => Reduce #9 extern_definition call extern_procdef_vararg
[348]
	')' => Reduce #4 extern_parameters
	"..." => Reduce #4 extern_parameters
[349]
	'}' => Shift goto 361
[350]
	'}' => Shift goto 362
[351]
	'(' => Reduce #6 expression call typecast
	')' => Reduce #6 expression call typecast
	';' => Reduce #6 expression call typecast
	',' => Reduce #6 expression call typecast
	'&' => Reduce #6 expression call typecast
	'^' => Reduce #6 expression call typecast
	'}' => Reduce #6 expression call typecast
	"->" => Reduce #6 expression call typecast
	'=' => Reduce #6 expression call typecast
	'+' => Reduce #6 expression call typecast
	'-' => Reduce #6 expression call typecast
	'*' => Reduce #6 expression call typecast
	'/' => Reduce #6 expression call typecast
	'%' => Reduce #6 expression call typecast
	"&&" => Reduce #6 expression call typecast
	"||" => Reduce #6 expression call typecast
	'|' => Reduce #6 expression call typecast
	"<<" => Reduce #6 expression call typecast
	">>" => Reduce #6 expression call typecast
	'[' => Reduce #6 expression call typecast
	']' => Reduce #6 expression call typecast
	"==" => Reduce #6 expression call typecast
	"!=" => Reduce #6 expression call typecast
	">=" => Reduce #6 expression call typecast
	"<=" => Reduce #6 expression call typecast
	'>' => Reduce #6 expression call typecast
	'<' => Reduce #6 expression call typecast
	"+=" => Reduce #6 expression call typecast
	"-=" => Reduce #6 expression call typecast
	"*=" => Reduce #6 expression call typecast
	"/=" => Reduce #6 expression call typecast
	"^=" => Reduce #6 expression call typecast
	"&=" => Reduce #6 expression call typecast
	"%=" => Reduce #6 expression call typecast
	"&&=" => Reduce #6 expression call typecast
	"||=" => Reduce #6 expression call typecast
	"|=" => Reduce #6 expression call typecast
	"<<=" => Reduce #6 expression call typecast
	">>=" => Reduce #6 expression call typecast
	'.' => Reduce #6 expression call typecast
[352]
	'}' => Shift goto 363
[353]
	$ => Reduce #6 callablebody call callablebody
	BOOLEAN => Reduce #6 callablebody call callablebody
	IDENT => Reduce #6 callablebody call callablebody
	DQSTRING => Reduce #6 callablebody call callablebody
	SQSTRING => Reduce #6 callablebody call callablebody
	CARDINAL => Reduce #6 callablebody call callablebody
	INTEGER => Reduce #6 callablebody call callablebody
	FLOAT => Reduce #6 callablebody call callablebody
	"function" => Reduce #6 callablebody call callablebody
	'(' => Reduce #6 callablebody call callablebody
	"procedure" => Reduce #6 callablebody call callablebody
	"const" => Reduce #6 callablebody call callablebody
	"operator" => Reduce #6 callablebody call callablebody
	'&' => Reduce #6 callablebody call callablebody
	"typedef" => Reduce #6 callablebody call callablebody
	"struct" => Reduce #6 callablebody call callablebody
	'{' => Reduce #6 callablebody call callablebody
	'}' => Reduce #6 callablebody call callablebody
	"interface" => Reduce #6 callablebody call callablebody
	"class" => Reduce #6 callablebody call callablebody
	"private" => Reduce #6 callablebody call callablebody
	"public" => Reduce #6 callablebody call callablebody
	"constructor" => Reduce #6 callablebody call callablebody
	"destructor" => Reduce #6 callablebody call callablebody
	'+' => Reduce #6 callablebody call callablebody
	'-' => Reduce #6 callablebody call callablebody
	'*' => Reduce #6 callablebody call callablebody
	'~' => Reduce #6 callablebody call callablebody
	'!' => Reduce #6 callablebody call callablebody
	"main" => Reduce #6 callablebody call callablebody
	"var" => Reduce #6 callablebody call callablebody
	"return" => Reduce #6 callablebody call callablebody
	"delete" => Reduce #6 callablebody call callablebody
	"if" => Reduce #6 callablebody call callablebody
	"while" => Reduce #6 callablebody call callablebody
	"new" => Reduce #6 callablebody call callablebody
	"cast" => Reduce #6 callablebody call callablebody
	"null" => Reduce #6 callablebody call callablebody
[354]
	';' => Shift goto 364
	"const" => Shift goto 365
[355]
	$ => Reduce #6 interface_definition call interface_procdef {const=false}
	"function" => Reduce #6 interface_definition call interface_procdef {const=false}
	"procedure" => Reduce #6 interface_definition call interface_procdef {const=false}
	"operator" => Reduce #6 interface_definition call interface_procdef {const=false}
	'}' => Reduce #6 interface_definition call interface_procdef {const=false}
[356]
	';' => Shift goto 366
[357]
	';' => Shift goto 367
	"const" => Shift goto 368
[358]
	$ => Reduce #6 interface_definition call interface_operator_procdef {const=false}
	"function" => Reduce #6 interface_definition call interface_operator_procdef {const=false}
	"procedure" => Reduce #6 interface_definition call interface_operator_procdef {const=false}
	"operator" => Reduce #6 interface_definition call interface_operator_procdef {const=false}
	'}' => Reduce #6 interface_definition call interface_operator_procdef {const=false}
[359]
	';' => Shift goto 369
[360]
	$ => Reduce #10 extern_definition call extern_funcdef_vararg
	IDENT => Reduce #10 extern_definition call extern_funcdef_vararg
	"extern" => Reduce #10 extern_definition call extern_funcdef_vararg
	"function" => Reduce #10 extern_definition call extern_funcdef_vararg
	"procedure" => Reduce #10 extern_definition call extern_funcdef_vararg
	"const" => Reduce #10 extern_definition call extern_funcdef_vararg
	"typedef" => Reduce #10 extern_definition call extern_funcdef_vararg
	"struct" => Reduce #10 extern_definition call extern_funcdef_vararg
	"interface" => Reduce #10 extern_definition call extern_funcdef_vararg
	"class" => Reduce #10 extern_definition call extern_funcdef_vararg
	"private" => Reduce #10 extern_definition call extern_funcdef_vararg
	"public" => Reduce #10 extern_definition call extern_funcdef_vararg
	"main" => Reduce #10 extern_definition call extern_funcdef_vararg
[361]
	$ => Reduce #7 statement call conditional_if
	BOOLEAN => Reduce #7 statement call conditional_if
	IDENT => Reduce #7 statement call conditional_if
	DQSTRING => Reduce #7 statement call conditional_if
	SQSTRING => Reduce #7 statement call conditional_if
	CARDINAL => Reduce #7 statement call conditional_if
	INTEGER => Reduce #7 statement call conditional_if
	FLOAT => Reduce #7 statement call conditional_if
	"function" => Reduce #7 statement call conditional_if
	'(' => Reduce #7 statement call conditional_if
	"procedure" => Reduce #7 statement call conditional_if
	'&' => Reduce #7 statement call conditional_if
	"typedef" => Reduce #7 statement call conditional_if
	'{' => Reduce #7 statement call conditional_if
	'}' => Reduce #7 statement call conditional_if
	"private" => Reduce #7 statement call conditional_if
	"public" => Reduce #7 statement call conditional_if
	'+' => Reduce #7 statement call conditional_if
	'-' => Reduce #7 statement call conditional_if
	'*' => Reduce #7 statement call conditional_if
	'~' => Reduce #7 statement call conditional_if
	'!' => Reduce #7 statement call conditional_if
	"var" => Reduce #7 statement call conditional_if
	"return" => Reduce #7 statement call conditional_if
	"delete" => Reduce #7 statement call conditional_if
	"if" => Reduce #7 statement call conditional_if
	"else" => Shift goto 370
	"while" => Reduce #7 statement call conditional_if
	"new" => Reduce #7 statement call conditional_if
	"cast" => Reduce #7 statement call conditional_if
	"null" => Reduce #7 statement call conditional_if
[362]
	$ => Reduce #7 statement call conditional_while
	BOOLEAN => Reduce #7 statement call conditional_while
	IDENT => Reduce #7 statement call conditional_while
	DQSTRING => Reduce #7 statement call conditional_while
	SQSTRING => Reduce #7 statement call conditional_while
	CARDINAL => Reduce #7 statement call conditional_while
	INTEGER => Reduce #7 statement call conditional_while
	FLOAT => Reduce #7 statement call conditional_while
	"function" => Reduce #7 statement call conditional_while
	'(' => Reduce #7 statement call conditional_while
	"procedure" => Reduce #7 statement call conditional_while
	'&' => Reduce #7 statement call conditional_while
	"typedef" => Reduce #7 statement call conditional_while
	'{' => Reduce #7 statement call conditional_while
	'}' => Reduce #7 statement call conditional_while
	"private" => Reduce #7 statement call conditional_while
	"public" => Reduce #7 statement call conditional_while
	'+' => Reduce #7 statement call conditional_while
	'-' => Reduce #7 statement call conditional_while
	'*' => Reduce #7 statement call conditional_while
	'~' => Reduce #7 statement call conditional_while
	'!' => Reduce #7 statement call conditional_while
	"var" => Reduce #7 statement call conditional_while
	"return" => Reduce #7 statement call conditional_while
	"delete" => Reduce #7 statement call conditional_while
	"if" => Reduce #7 statement call conditional_while
	"while" => Reduce #7 statement call conditional_while
	"new" => Reduce #7 statement call conditional_while
	"cast" => Reduce #7 statement call conditional_while
	"null" => Reduce #7 statement call conditional_while
[363]
	$ => Reduce #7 callablebody_const call callablebody
	BOOLEAN => Reduce #7 callablebody_const call callablebody
	IDENT => Reduce #7 callablebody_const call callablebody
	DQSTRING => Reduce #7 callablebody_const call callablebody
	SQSTRING => Reduce #7 callablebody_const call callablebody
	CARDINAL => Reduce #7 callablebody_const call callablebody
	INTEGER => Reduce #7 callablebody_const call callablebody
	FLOAT => Reduce #7 callablebody_const call callablebody
	"function" => Reduce #7 callablebody_const call callablebody
	'(' => Reduce #7 callablebody_const call callablebody
	"procedure" => Reduce #7 callablebody_const call callablebody
	"const" => Reduce #7 callablebody_const call callablebody
	"operator" => Reduce #7 callablebody_const call callablebody
	'&' => Reduce #7 callablebody_const call callablebody
	"typedef" => Reduce #7 callablebody_const call callablebody
	"struct" => Reduce #7 callablebody_const call callablebody
	'{' => Reduce #7 callablebody_const call callablebody
	'}' => Reduce #7 callablebody_const call callablebody
	"interface" => Reduce #7 callablebody_const call callablebody
	"class" => Reduce #7 callablebody_const call callablebody
	"private" => Reduce #7 callablebody_const call callablebody
	"public" => Reduce #7 callablebody_const call callablebody
	"constructor" => Reduce #7 callablebody_const call callablebody
	"destructor" => Reduce #7 callablebody_const call callablebody
	'+' => Reduce #7 callablebody_const call callablebody
	'-' => Reduce #7 callablebody_const call callablebody
	'*' => Reduce #7 callablebody_const call callablebody
	'~' => Reduce #7 callablebody_const call callablebody
	'!' => Reduce #7 callablebody_const call callablebody
	"main" => Reduce #7 callablebody_const call callablebody
	"var" => Reduce #7 callablebody_const call callablebody
	"return" => Reduce #7 callablebody_const call callablebody
	"delete" => Reduce #7 callablebody_const call callablebody
	"if" => Reduce #7 callablebody_const call callablebody
	"while" => Reduce #7 callablebody_const call callablebody
	"new" => Reduce #7 callablebody_const call callablebody
	"cast" => Reduce #7 callablebody_const call callablebody
	"null" => Reduce #7 callablebody_const call callablebody
[364]
	$ => Reduce #7 interface_definition call interface_funcdef {const=false}
	"function" => Reduce #7 interface_definition call interface_funcdef {const=false}
	"procedure" => Reduce #7 interface_definition call interface_funcdef {const=false}
	"operator" => Reduce #7 interface_definition call interface_funcdef {const=false}
	'}' => Reduce #7 interface_definition call interface_funcdef {const=false}
[365]
	';' => Shift goto 371
[366]
	$ => Reduce #7 interface_definition call interface_procdef {const=true}
	"function" => Reduce #7 interface_definition call interface_procdef {const=true}
	"procedure" => Reduce #7 interface_definition call interface_procdef {const=true}
	"operator" => Reduce #7 interface_definition call interface_procdef {const=true}
	'}' => Reduce #7 interface_definition call interface_procdef {const=true}
[367]
	$ => Reduce #7 interface_definition call interface_operator_funcdef {const=false}
	"function" => Reduce #7 interface_definition call interface_operator_funcdef {const=false}
	"procedure" => Reduce #7 interface_definition call interface_operator_funcdef {const=false}
	"operator" => Reduce #7 interface_definition call interface_operator_funcdef {const=false}
	'}' => Reduce #7 interface_definition call interface_operator_funcdef {const=false}
[368]
	';' => Shift goto 372
[369]
	$ => Reduce #7 interface_definition call interface_operator_procdef {const=true}
	"function" => Reduce #7 interface_definition call interface_operator_procdef {const=true}
	"procedure" => Reduce #7 interface_definition call interface_operator_procdef {const=true}
	"operator" => Reduce #7 interface_definition call interface_operator_procdef {const=true}
	'}' => Reduce #7 interface_definition call interface_operator_procdef {const=true}
[370]
	'{' => Shift goto 373
[371]
	$ => Reduce #8 interface_definition call interface_funcdef {const=true}
	"function" => Reduce #8 interface_definition call interface_funcdef {const=true}
	"procedure" => Reduce #8 interface_definition call interface_funcdef {const=true}
	"operator" => Reduce #8 interface_definition call interface_funcdef {const=true}
	'}' => Reduce #8 interface_definition call interface_funcdef {const=true}
[372]
	$ => Reduce #8 interface_definition call interface_operator_funcdef {const=true}
	"function" => Reduce #8 interface_definition call interface_operator_funcdef {const=true}
	"procedure" => Reduce #8 interface_definition call interface_operator_funcdef {const=true}
	"operator" => Reduce #8 interface_definition call interface_operator_funcdef {const=true}
	'}' => Reduce #8 interface_definition call interface_operator_funcdef {const=true}
[373]
	BOOLEAN => Shift goto 70
	IDENT => Shift goto 71
	DQSTRING => Shift goto 72
	SQSTRING => Shift goto 73
	CARDINAL => Shift goto 74
	INTEGER => Shift goto 75
	FLOAT => Shift goto 76
	"function" => Reduce #0 linkage call linkage {private=false,linkage="external"}
	'(' => Shift goto 77
	"procedure" => Reduce #0 linkage call linkage {private=false,linkage="external"}
	'&' => Shift goto 78
	"typedef" => Shift goto 19
	'{' => Shift goto 79
	'}' => Reduce #0 statementlist
	"private" => Shift goto 23
	"public" => Shift goto 24
	'+' => Shift goto 80
	'-' => Shift goto 81
	'*' => Shift goto 82
	'~' => Shift goto 83
	'!' => Shift goto 84
	"var" => Shift goto 85
	"return" => Shift goto 86
	"delete" => Shift goto 87
	"if" => Shift goto 88
	"while" => Shift goto 89
	"new" => Shift goto 90
	"cast" => Shift goto 91
	"null" => Shift goto 92
[374]
	'}' => Shift goto 375
[375]
	$ => Reduce #11 statement call conditional_if_else
	BOOLEAN => Reduce #11 statement call conditional_if_else
	IDENT => Reduce #11 statement call conditional_if_else
	DQSTRING => Reduce #11 statement call conditional_if_else
	SQSTRING => Reduce #11 statement call conditional_if_else
	CARDINAL => Reduce #11 statement call conditional_if_else
	INTEGER => Reduce #11 statement call conditional_if_else
	FLOAT => Reduce #11 statement call conditional_if_else
	"function" => Reduce #11 statement call conditional_if_else
	'(' => Reduce #11 statement call conditional_if_else
	"procedure" => Reduce #11 statement call conditional_if_else
	'&' => Reduce #11 statement call conditional_if_else
	"typedef" => Reduce #11 statement call conditional_if_else
	'{' => Reduce #11 statement call conditional_if_else
	'}' => Reduce #11 statement call conditional_if_else
	"private" => Reduce #11 statement call conditional_if_else
	"public" => Reduce #11 statement call conditional_if_else
	'+' => Reduce #11 statement call conditional_if_else
	'-' => Reduce #11 statement call conditional_if_else
	'*' => Reduce #11 statement call conditional_if_else
	'~' => Reduce #11 statement call conditional_if_else
	'!' => Reduce #11 statement call conditional_if_else
	"var" => Reduce #11 statement call conditional_if_else
	"return" => Reduce #11 statement call conditional_if_else
	"delete" => Reduce #11 statement call conditional_if_else
	"if" => Reduce #11 statement call conditional_if_else
	"while" => Reduce #11 statement call conditional_if_else
	"new" => Reduce #11 statement call conditional_if_else
	"cast" => Reduce #11 statement call conditional_if_else
	"null" => Reduce #11 statement call conditional_if_else

-- Goto table:
[1]
	extern_definitionlist => 2
	extern_definition => 3
[2]
	free_definitionlist => 5
	struct_definition => 6
	free_definition => 7
	typename => 8
	typespec => 9
	typedefinition => 10
	structdefinition => 11
	interfacedefinition => 12
	classdefinition => 13
	linkage => 14
	functiondefinition => 15
	variabledefinition => 16
[3]
	extern_definitionlist => 25
	extern_definition => 3
[5]
	main_procedure => 27
[7]
	free_definitionlist => 29
	struct_definition => 6
	free_definition => 7
	typename => 8
	typespec => 9
	typedefinition => 10
	structdefinition => 11
	interfacedefinition => 12
	classdefinition => 13
	linkage => 14
	functiondefinition => 15
	variabledefinition => 16
[18]
	typename => 38
[19]
	typename => 39
	typepath => 40
[37]
	typename => 53
[46]
	typedefinition => 63
	linkage => 14
	functiondefinition => 64
	codeblock => 65
	statementlist => 66
	statement => 67
	expression => 68
	iexpression => 69
[49]
	expression => 94
	iexpression => 69
[50]
	expression => 96
	iexpression => 69
[51]
	typename => 8
	typespec => 97
[52]
	callablebody => 98
	callablebody_const => 99
[57]
	struct_definitionlist => 103
	struct_definition => 104
	typename => 8
	typespec => 9
	typedefinition => 10
	structdefinition => 11
	variabledefinition => 16
[58]
	interface_definitionlist => 105
	interface_definition => 106
[59]
	class_definitionlist => 110
	class_definition => 111
	typename => 8
	typespec => 9
	typedefinition => 112
	structdefinition => 113
	interfacedefinition => 114
	classdefinition => 115
	linkage => 116
	functiondefinition => 117
	constructordefinition => 118
	operatordefinition => 119
	variabledefinition => 120
[60]
	typename => 39
	typepath => 122
	inheritlist => 123
[61]
	typename => 8
	typespec => 124
[67]
	typedefinition => 63
	linkage => 14
	functiondefinition => 64
	statementlist => 128
	statement => 67
	expression => 68
	iexpression => 69
[68]
	indirection => 129
[77]
	expression => 166
	iexpression => 69
[78]
	expression => 167
	iexpression => 69
[79]
	typedefinition => 63
	linkage => 14
	functiondefinition => 64
	codeblock => 168
	statementlist => 66
	statement => 67
	expression => 169
	iexpression => 69
	expressionlist => 170
[80]
	expression => 172
	iexpression => 69
[81]
	expression => 173
	iexpression => 69
[82]
	expression => 174
	iexpression => 69
[83]
	expression => 175
	iexpression => 69
[84]
	expression => 176
	iexpression => 69
[85]
	typename => 8
	typespec => 9
	variabledefinition => 177
[86]
	expression => 178
	iexpression => 69
[87]
	expression => 179
	iexpression => 69
[90]
	typename => 8
	typespec => 182
[91]
	typename => 8
	typespec => 183
[94]
	indirection => 129
[95]
	expression => 184
	iexpression => 69
	expressionlist => 170
[96]
	indirection => 129
[97]
	callablebody => 186
	callablebody_const => 187
[100]
	typename => 8
	typespec => 188
	parameterlist => 189
	parameters => 190
	paramdecl => 191
[104]
	struct_definitionlist => 194
	struct_definition => 104
	typename => 8
	typespec => 9
	typedefinition => 10
	structdefinition => 11
	variabledefinition => 16
[106]
	interface_definitionlist => 196
	interface_definition => 106
[109]
	operatordecl => 199
[111]
	class_definitionlist => 224
	class_definition => 111
	typename => 8
	typespec => 9
	typedefinition => 112
	structdefinition => 113
	interfacedefinition => 114
	classdefinition => 115
	linkage => 116
	functiondefinition => 117
	constructordefinition => 118
	operatordefinition => 119
	variabledefinition => 120
[125]
	extern_parameters => 233
	extern_paramlist => 234
	typename => 8
	typespec => 235
[130]
	expression => 184
	iexpression => 69
	expressionlist => 237
[132]
	expression => 239
	iexpression => 69
[133]
	expression => 240
	iexpression => 69
[134]
	indirection => 241
[135]
	expression => 242
	iexpression => 69
[136]
	expression => 243
	iexpression => 69
[137]
	expression => 244
	iexpression => 69
[138]
	expression => 245
	iexpression => 69
[139]
	expression => 246
	iexpression => 69
[140]
	expression => 247
	iexpression => 69
[141]
	expression => 248
	iexpression => 69
[142]
	expression => 249
	iexpression => 69
[143]
	expression => 250
	iexpression => 69
[144]
	expression => 251
	iexpression => 69
[145]
	expression => 252
	iexpression => 69
[146]
	expression => 184
	iexpression => 69
	expressionlist => 253
[147]
	expression => 254
	iexpression => 69
[148]
	expression => 255
	iexpression => 69
[149]
	expression => 256
	iexpression => 69
[150]
	expression => 257
	iexpression => 69
[151]
	expression => 258
	iexpression => 69
[152]
	expression => 259
	iexpression => 69
[153]
	expression => 260
	iexpression => 69
[154]
	expression => 261
	iexpression => 69
[155]
	expression => 262
	iexpression => 69
[156]
	expression => 263
	iexpression => 69
[157]
	expression => 264
	iexpression => 69
[158]
	expression => 265
	iexpression => 69
[159]
	expression => 266
	iexpression => 69
[160]
	expression => 267
	iexpression => 69
[161]
	expression => 268
	iexpression => 69
[162]
	expression => 269
	iexpression => 69
[163]
	expression => 270
	iexpression => 69
[164]
	expression => 271
	iexpression => 69
[166]
	indirection => 129
[167]
	indirection => 129
[169]
	indirection => 129
[172]
	indirection => 129
[173]
	indirection => 129
[174]
	indirection => 129
[175]
	indirection => 129
[176]
	indirection => 129
[178]
	indirection => 129
[179]
	indirection => 129
[180]
	expression => 280
	iexpression => 69
[181]
	expression => 281
	iexpression => 69
[184]
	indirection => 129
[197]
	typename => 8
	typespec => 288
[199]
	typename => 8
	typespec => 290
[226]
	operatordecl => 294
[227]
	callablebody => 295
[229]
	typedefinition => 63
	linkage => 14
	functiondefinition => 64
	codeblock => 297
	statementlist => 66
	statement => 67
	expression => 68
	iexpression => 69
[230]
	typename => 39
	typepath => 122
	inheritlist => 298
[231]
	class_definitionlist => 299
	class_definition => 111
	typename => 8
	typespec => 9
	typedefinition => 112
	structdefinition => 113
	interfacedefinition => 114
	classdefinition => 115
	linkage => 116
	functiondefinition => 117
	constructordefinition => 118
	operatordefinition => 119
	variabledefinition => 120
[232]
	extern_parameters => 233
	extern_paramlist => 300
	typename => 8
	typespec => 235
[239]
	indirection => 129
[240]
	indirection => 129
[242]
	indirection => 129
[243]
	indirection => 129
[244]
	indirection => 129
[245]
	indirection => 129
[246]
	indirection => 129
[247]
	indirection => 129
[248]
	indirection => 129
[249]
	indirection => 129
[250]
	indirection => 129
[251]
	indirection => 129
[252]
	indirection => 129
[254]
	indirection => 129
[255]
	indirection => 129
[256]
	indirection => 129
[257]
	indirection => 129
[258]
	indirection => 129
[259]
	indirection => 129
[260]
	indirection => 129
[261]
	indirection => 129
[262]
	indirection => 129
[263]
	indirection => 129
[264]
	indirection => 129
[265]
	indirection => 129
[266]
	indirection => 129
[267]
	indirection => 129
[268]
	indirection => 129
[269]
	indirection => 129
[270]
	indirection => 129
[271]
	indirection => 129
[275]
	expression => 184
	iexpression => 69
	expressionlist => 307
[280]
	indirection => 129
[281]
	indirection => 129
[282]
	expression => 310
	iexpression => 69
[284]
	expression => 312
	iexpression => 69
[287]
	typename => 8
	typespec => 188
	parameters => 315
	paramdecl => 191
[289]
	extern_parameters => 233
	extern_paramlist => 317
	typename => 8
	typespec => 235
[291]
	extern_parameters => 233
	extern_paramlist => 319
	typename => 8
	typespec => 235
[294]
	typename => 8
	typespec => 320
	callablebody => 321
	callablebody_const => 322
[296]
	typename => 8
	typespec => 188
	parameterlist => 323
	parameters => 190
	paramdecl => 191
[304]
	extern_parameters => 331
	typename => 8
	typespec => 235
[310]
	indirection => 129
[311]
	expression => 334
	iexpression => 69
[312]
	indirection => 129
[314]
	typedefinition => 63
	linkage => 14
	functiondefinition => 64
	codeblock => 337
	statementlist => 66
	statement => 67
	expression => 68
	iexpression => 69
[316]
	extern_parameters => 233
	extern_paramlist => 338
	typename => 8
	typespec => 235
[318]
	extern_parameters => 233
	extern_paramlist => 340
	typename => 8
	typespec => 235
[320]
	callablebody => 342
	callablebody_const => 343
[330]
	extern_parameters => 348
	typename => 8
	typespec => 235
[332]
	typedefinition => 63
	linkage => 14
	functiondefinition => 64
	codeblock => 349
	statementlist => 66
	statement => 67
	expression => 68
	iexpression => 69
[333]
	typedefinition => 63
	linkage => 14
	functiondefinition => 64
	codeblock => 350
	statementlist => 66
	statement => 67
	expression => 68
	iexpression => 69
[334]
	indirection => 129
[336]
	typedefinition => 63
	linkage => 14
	functiondefinition => 64
	codeblock => 352
	statementlist => 66
	statement => 67
	expression => 68
	iexpression => 69
[373]
	typedefinition => 63
	linkage => 14
	functiondefinition => 64
	codeblock => 374
	statementlist => 66
	statement => 67
	expression => 68
	iexpression => 69

