== Language 'test', type system 'language1/typesystem' ==
-- Lexems:
TOKEN BOOLEAN ((true)|(false)) 0 [tf]  ~ 1
TOKEN IDENT [a-zA-Z_]+[a-zA-Z_0-9]* 0 [abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_]  ~ 2
TOKEN DQSTRING ["]((([^\\"\n]+)|([\\][^"\n]))*)["] 1 ["]  ~ 3
TOKEN SQSTRING [']((([^\\'\n]+)|([\\][^'\n]))*)['] 1 [']  ~ 4
TOKEN CARDINAL [0123456789]+ 0 [0123456789]  ~ 5
TOKEN INTEGER [-][0123456789]+ 0 [-]  ~ 6
TOKEN FLOAT [-]{0,1}[0123456789]+[.][0123456789]+ 0 [-]  ~ 7
TOKEN FLOAT [-]{0,1}[0123456789]+[.][0123456789]+[Ee][+-]{0,1}[0123456789]+ 0 [-]  ~ 7
KEYWORD extern [e] ~ 8
KEYWORD function [f] ~ 9
KEYWORD ( [(] ~ 10
KEYWORD ) [)] ~ 11
KEYWORD ; [;] ~ 12
KEYWORD procedure [p] ~ 13
KEYWORD ... [.] ~ 14
KEYWORD , [,] ~ 15
KEYWORD const [c] ~ 16
KEYWORD :: [:] ~ 17
KEYWORD & [&] ~ 18
KEYWORD ^ [^] ~ 19
KEYWORD typedef [t] ~ 20
KEYWORD struct [s] ~ 21
KEYWORD { [{] ~ 22
KEYWORD } [}] ~ 23
KEYWORD interface [i] ~ 24
KEYWORD class [c] ~ 25
KEYWORD : [:] ~ 26
KEYWORD private [p] ~ 27
KEYWORD public [p] ~ 28
KEYWORD constructor [c] ~ 29
KEYWORD destructor [d] ~ 30
KEYWORD main [m] ~ 31
KEYWORD var [v] ~ 32
KEYWORD return [r] ~ 33
KEYWORD delete [d] ~ 34
KEYWORD if [i] ~ 35
KEYWORD else [e] ~ 36
KEYWORD while [w] ~ 37
KEYWORD = [=] ~ 38
KEYWORD [ [[] ~ 39
KEYWORD ] []] ~ 40
KEYWORD new [n] ~ 41
KEYWORD null [n] ~ 42
KEYWORD += [+] ~ 43
KEYWORD -= [-] ~ 44
KEYWORD *= [*] ~ 45
KEYWORD /= [/] ~ 46
KEYWORD %= [%] ~ 47
KEYWORD &&= [&] ~ 48
KEYWORD ||= [|] ~ 49
KEYWORD &= [&] ~ 50
KEYWORD |= [|] ~ 51
KEYWORD <<= [<] ~ 52
KEYWORD >>= [>] ~ 53
KEYWORD || [|] ~ 54
KEYWORD && [&] ~ 55
KEYWORD | [|] ~ 56
KEYWORD == [=] ~ 57
KEYWORD != [!] ~ 58
KEYWORD <= [<] ~ 59
KEYWORD < [<] ~ 60
KEYWORD >= [>] ~ 61
KEYWORD > [>] ~ 62
KEYWORD + [+] ~ 63
KEYWORD - [-] ~ 64
KEYWORD ~ [~] ~ 65
KEYWORD ! [!] ~ 66
KEYWORD * [*] ~ 67
KEYWORD / [/] ~ 68
KEYWORD % [%] ~ 69
KEYWORD << [<] ~ 70
KEYWORD >> [>] ~ 71
KEYWORD . [.] ~ 72
KEYWORD -> [-] ~ 73
COMMENT /* */ [/]
COMMENT // [/]

-- Nonterminals:
(1) program
(2) extern_definitionlist
(3) free_definitionlist
(4) struct_definitionlist
(5) class_definitionlist
(6) interface_definitionlist
(7) extern_definition
(8) extern_parameters
(9) extern_paramlist
(10) interface_definition
(11) struct_definition
(12) class_definition
(13) free_definition
(14) typename
(15) typespec
(16) typedefinition
(17) structdefinition
(18) interfacedefinition
(19) inheritlist
(20) classdefinition
(21) linkage
(22) functiondefinition
(23) constructordefinition
(24) callablebody
(25) main_procedure
(26) parameterlist
(27) parameters
(28) paramdecl
(29) codeblock
(30) statementlist
(31) statement
(32) variabledefinition
(33) expression
(34) iexpression
(35) indirection
(36) expressionlist

-- Productions:
program = extern_definitionlist free_definitionlist main_procedure (1)
extern_definitionlist = extern_definition extern_definitionlist
extern_definitionlist = 
free_definitionlist = free_definition free_definitionlist
free_definitionlist = 
struct_definitionlist = struct_definition struct_definitionlist
struct_definitionlist = 
class_definitionlist = class_definition class_definitionlist
class_definitionlist = 
interface_definitionlist = interface_definition interface_definitionlist
interface_definitionlist = 
extern_definition = "extern" DQSTRING "function" typespec IDENT "(" extern_paramlist ")" ";" (2)
extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist ")" ";" (3)
extern_definition = "extern" DQSTRING "function" typespec IDENT "(" extern_paramlist "..." ")" ";" (4)
extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist "..." ")" ";" (5)
extern_parameters = typespec "," extern_parameters
extern_parameters = typespec
extern_paramlist = extern_parameters (6)
extern_paramlist = 
interface_definition = "function" typespec IDENT "(" parameterlist ")" ";" (7)
interface_definition = "function" typespec IDENT "(" parameterlist ")" "const" ";" (8)
interface_definition = "procedure" IDENT "(" parameterlist ")" ";" (9)
interface_definition = "procedure" IDENT "(" parameterlist ")" "const" ";" (10)
struct_definition = typedefinition ";" (11)
struct_definition = variabledefinition ";" (11)
struct_definition = structdefinition (11)
class_definition = struct_definition
class_definition = constructordefinition
class_definition = functiondefinition (11)
class_definition = classdefinition (11)
class_definition = interfacedefinition (11)
free_definition = struct_definition
free_definition = functiondefinition (11)
free_definition = classdefinition (11)
free_definition = interfacedefinition (11)
typename/L1 = IDENT
typename/L1 = IDENT "::" typename
typespec/L1 = typename (12)
typespec/L1 = "const" typename (13)
typespec/L1 = typename "&" (14)
typespec/L1 = "const" typename "&" (15)
typespec/L1 = typename "^" (16)
typespec/L1 = "const" typename "^" (17)
typespec/L1 = typename "^" "&" (18)
typespec/L1 = "const" typename "^" "&" (19)
typespec/L1 = typename "^" "^" (20)
typespec/L1 = "const" typename "^" "^" (21)
typespec/L1 = typename "^" "^" "&" (22)
typespec/L1 = "const" typename "^" "^" "&" (23)
typedefinition = "typedef" typename IDENT (step:24)
structdefinition = "struct" IDENT "{" struct_definitionlist "}" (step:25)
interfacedefinition = "interface" IDENT "{" interface_definitionlist "}" (step:26)
inheritlist = typename "," inheritlist (step:27)
inheritlist = typename (step:27)
classdefinition = "class" IDENT "{" class_definitionlist "}" (step:28)
classdefinition = "class" IDENT ":" inheritlist "{" class_definitionlist "}" (step:29)
linkage = "private" (30)
linkage = "public" (31)
linkage =  (30)
functiondefinition = linkage "function" typespec IDENT callablebody (32)
functiondefinition = linkage "procedure" IDENT callablebody (33)
constructordefinition = linkage "constructor" callablebody (34)
constructordefinition = "destructor" "{" codeblock "}" (35)
callablebody = "(" parameterlist ")" "{" codeblock "}" (scope:36)
callablebody = "(" parameterlist ")" "const" "{" codeblock "}" (scope:37)
main_procedure = "main" "{" codeblock "}" (scope:38)
main_procedure = 
parameterlist = parameters (39)
parameterlist = 
parameters = paramdecl "," parameters
parameters = paramdecl
paramdecl = typespec IDENT (40)
codeblock = statementlist (41)
statementlist = statement statementlist (step)
statementlist = 
statement/L1 = functiondefinition (11)
statement/L1 = typedefinition ";" (11)
statement/L1 = "var" variabledefinition ";" (11)
statement/L1 = expression ";" (42)
statement/L1 = "return" expression ";" (step:43)
statement/L1 = "delete" expression ";" (44)
statement/L1 = "if" "(" expression ")" "{" codeblock "}" (scope:45)
statement/L1 = "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}" (scope:46)
statement/L1 = "while" "(" expression ")" "{" codeblock "}" (scope:47)
statement/L1 = "{" codeblock "}" (scope)
variabledefinition = typespec IDENT (step:48)
variabledefinition = typespec IDENT "=" expression (step:49)
variabledefinition = typespec IDENT "[" expression "]" "=" expression (step:50)
variabledefinition = typespec IDENT "[" expression "]" (step:51)
expression/L1 = "{" expressionlist "}" (52)
expression/L1 = "{" "}" (52)
expression/L1 = "new" typespec ":" expression (53)
expression/L2 = IDENT (54)
expression/L2 = BOOLEAN (55)
expression/L2 = CARDINAL (56)
expression/L2 = INTEGER (57)
expression/L2 = FLOAT (58)
expression/L2 = "null" (59)
expression/L2 = DQSTRING (60)
expression/L2 = SQSTRING (61)
expression/L2 = "(" expression ")"
expression/L3 = expression "=" expression (62)
expression/L3 = expression "+=" expression (63)
expression/L3 = expression "-=" expression (64)
expression/L3 = expression "*=" expression (65)
expression/L3 = expression "/=" expression (66)
expression/L3 = expression "%=" expression (67)
expression/L3 = expression "&&=" expression (68)
expression/L3 = expression "||=" expression (69)
expression/L3 = expression "&=" expression (70)
expression/L3 = expression "|=" expression (71)
expression/L3 = expression "<<=" expression (72)
expression/L3 = expression ">>=" expression (73)
expression/L4 = expression "||" expression (74)
expression/L5 = expression "&&" expression (75)
expression/L6 = expression "|" expression (76)
expression/L7 = expression "^" expression (77)
expression/L7 = expression "&" expression (78)
expression/L8 = expression "==" expression (79)
expression/L8 = expression "!=" expression (80)
expression/L8 = expression "<=" expression (81)
expression/L8 = expression "<" expression (82)
expression/L8 = expression ">=" expression (83)
expression/L8 = expression ">" expression (84)
expression/L9 = expression "+" expression (85)
expression/L9 = expression "-" expression (86)
expression/L9 = "&" expression (78)
expression/L9 = "-" expression (86)
expression/L9 = "+" expression (85)
expression/L9 = "~" expression (87)
expression/L9 = "!" expression (88)
expression/L10 = expression "*" expression (89)
expression/L10 = expression "/" expression (90)
expression/L10 = expression "%" expression (91)
expression/L11 = expression "<<" expression (92)
expression/L11 = expression ">>" expression (93)
expression/L12 = iexpression
expression/L12 = expression "." IDENT (94)
expression/L12 = "*" expression (95)
expression/L13 = expression "(" expressionlist ")" (96)
expression/L13 = expression "(" ")" (96)
expression/L13 = expression "[" expressionlist "]" (97)
iexpression = expression indirection IDENT (98)
indirection = "->" indirection (99)
indirection = "->" (99)
expressionlist = expression "," expressionlist
expressionlist = expression

-- LR(0) states:
[1]
	program = . extern_definitionlist free_definitionlist main_procedure
	extern_definitionlist = . extern_definition extern_definitionlist
	extern_definitionlist = .
	extern_definition = . "extern" DQSTRING "function" typespec IDENT "(" extern_paramlist ")" ";"
	extern_definition = . "extern" DQSTRING "procedure" IDENT "(" extern_paramlist ")" ";"
	extern_definition = . "extern" DQSTRING "function" typespec IDENT "(" extern_paramlist "..." ")" ";"
	extern_definition = . "extern" DQSTRING "procedure" IDENT "(" extern_paramlist "..." ")" ";"
[2]
	program = extern_definitionlist . free_definitionlist main_procedure
	free_definitionlist = . free_definition free_definitionlist
	free_definitionlist = .
	struct_definition = . typedefinition ";"
	struct_definition = . variabledefinition ";"
	struct_definition = . structdefinition
	free_definition = . struct_definition
	free_definition = . functiondefinition
	free_definition = . classdefinition
	free_definition = . interfacedefinition
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	typedefinition = . "typedef" typename IDENT
	structdefinition = . "struct" IDENT "{" struct_definitionlist "}"
	interfacedefinition = . "interface" IDENT "{" interface_definitionlist "}"
	classdefinition = . "class" IDENT "{" class_definitionlist "}"
	classdefinition = . "class" IDENT ":" inheritlist "{" class_definitionlist "}"
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" typespec IDENT callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody
	variabledefinition = . typespec IDENT
	variabledefinition = . typespec IDENT "=" expression
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression
	variabledefinition = . typespec IDENT "[" expression "]"
[3]
	extern_definitionlist = . extern_definition extern_definitionlist
	extern_definitionlist = extern_definition . extern_definitionlist
	extern_definitionlist = .
	extern_definition = . "extern" DQSTRING "function" typespec IDENT "(" extern_paramlist ")" ";"
	extern_definition = . "extern" DQSTRING "procedure" IDENT "(" extern_paramlist ")" ";"
	extern_definition = . "extern" DQSTRING "function" typespec IDENT "(" extern_paramlist "..." ")" ";"
	extern_definition = . "extern" DQSTRING "procedure" IDENT "(" extern_paramlist "..." ")" ";"
[4]
	extern_definition = "extern" . DQSTRING "function" typespec IDENT "(" extern_paramlist ")" ";"
	extern_definition = "extern" . DQSTRING "procedure" IDENT "(" extern_paramlist ")" ";"
	extern_definition = "extern" . DQSTRING "function" typespec IDENT "(" extern_paramlist "..." ")" ";"
	extern_definition = "extern" . DQSTRING "procedure" IDENT "(" extern_paramlist "..." ")" ";"
[5]
	program = extern_definitionlist free_definitionlist . main_procedure
	main_procedure = . "main" "{" codeblock "}"
	main_procedure = .
[6]
	free_definition = struct_definition .
[7]
	free_definitionlist = . free_definition free_definitionlist
	free_definitionlist = free_definition . free_definitionlist
	free_definitionlist = .
	struct_definition = . typedefinition ";"
	struct_definition = . variabledefinition ";"
	struct_definition = . structdefinition
	free_definition = . struct_definition
	free_definition = . functiondefinition
	free_definition = . classdefinition
	free_definition = . interfacedefinition
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	typedefinition = . "typedef" typename IDENT
	structdefinition = . "struct" IDENT "{" struct_definitionlist "}"
	interfacedefinition = . "interface" IDENT "{" interface_definitionlist "}"
	classdefinition = . "class" IDENT "{" class_definitionlist "}"
	classdefinition = . "class" IDENT ":" inheritlist "{" class_definitionlist "}"
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" typespec IDENT callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody
	variabledefinition = . typespec IDENT
	variabledefinition = . typespec IDENT "=" expression
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression
	variabledefinition = . typespec IDENT "[" expression "]"
[8]
	typespec/L1 = typename .
	typespec/L1 = typename . "&"
	typespec/L1 = typename . "^"
	typespec/L1 = typename . "^" "&"
	typespec/L1 = typename . "^" "^"
	typespec/L1 = typename . "^" "^" "&"
[9]
	variabledefinition = typespec . IDENT
	variabledefinition = typespec . IDENT "=" expression
	variabledefinition = typespec . IDENT "[" expression "]" "=" expression
	variabledefinition = typespec . IDENT "[" expression "]"
[10]
	struct_definition = typedefinition . ";"
[11]
	struct_definition = structdefinition .
[12]
	free_definition = interfacedefinition .
[13]
	free_definition = classdefinition .
[14]
	functiondefinition = linkage . "function" typespec IDENT callablebody
	functiondefinition = linkage . "procedure" IDENT callablebody
[15]
	free_definition = functiondefinition .
[16]
	struct_definition = variabledefinition . ";"
[17]
	typename/L1 = IDENT .
	typename/L1 = IDENT . "::" typename
[18]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = "const" . typename
	typespec/L1 = "const" . typename "&"
	typespec/L1 = "const" . typename "^"
	typespec/L1 = "const" . typename "^" "&"
	typespec/L1 = "const" . typename "^" "^"
	typespec/L1 = "const" . typename "^" "^" "&"
[19]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typedefinition = "typedef" . typename IDENT
[20]
	structdefinition = "struct" . IDENT "{" struct_definitionlist "}"
[21]
	interfacedefinition = "interface" . IDENT "{" interface_definitionlist "}"
[22]
	classdefinition = "class" . IDENT "{" class_definitionlist "}"
	classdefinition = "class" . IDENT ":" inheritlist "{" class_definitionlist "}"
[23]
	linkage = "private" .
[24]
	linkage = "public" .
[25]
	extern_definitionlist = extern_definition extern_definitionlist .
[26]
	extern_definition = "extern" DQSTRING . "function" typespec IDENT "(" extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING . "procedure" IDENT "(" extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING . "function" typespec IDENT "(" extern_paramlist "..." ")" ";"
	extern_definition = "extern" DQSTRING . "procedure" IDENT "(" extern_paramlist "..." ")" ";"
[27]
	program = extern_definitionlist free_definitionlist main_procedure .
[28]
	main_procedure = "main" . "{" codeblock "}"
[29]
	free_definitionlist = free_definition free_definitionlist .
[30]
	typespec/L1 = typename "&" .
[31]
	typespec/L1 = typename "^" .
	typespec/L1 = typename "^" . "&"
	typespec/L1 = typename "^" . "^"
	typespec/L1 = typename "^" . "^" "&"
[32]
	variabledefinition = typespec IDENT .
	variabledefinition = typespec IDENT . "=" expression
	variabledefinition = typespec IDENT . "[" expression "]" "=" expression
	variabledefinition = typespec IDENT . "[" expression "]"
[33]
	struct_definition = typedefinition ";" .
[34]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	functiondefinition = linkage "function" . typespec IDENT callablebody
[35]
	functiondefinition = linkage "procedure" . IDENT callablebody
[36]
	struct_definition = variabledefinition ";" .
[37]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typename/L1 = IDENT "::" . typename
[38]
	typespec/L1 = "const" typename .
	typespec/L1 = "const" typename . "&"
	typespec/L1 = "const" typename . "^"
	typespec/L1 = "const" typename . "^" "&"
	typespec/L1 = "const" typename . "^" "^"
	typespec/L1 = "const" typename . "^" "^" "&"
[39]
	typedefinition = "typedef" typename . IDENT
[40]
	structdefinition = "struct" IDENT . "{" struct_definitionlist "}"
[41]
	interfacedefinition = "interface" IDENT . "{" interface_definitionlist "}"
[42]
	classdefinition = "class" IDENT . "{" class_definitionlist "}"
	classdefinition = "class" IDENT . ":" inheritlist "{" class_definitionlist "}"
[43]
	extern_definition = "extern" DQSTRING "function" . typespec IDENT "(" extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING "function" . typespec IDENT "(" extern_paramlist "..." ")" ";"
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
[44]
	extern_definition = "extern" DQSTRING "procedure" . IDENT "(" extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING "procedure" . IDENT "(" extern_paramlist "..." ")" ";"
[45]
	typedefinition = . "typedef" typename IDENT
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" typespec IDENT callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody
	main_procedure = "main" "{" . codeblock "}"
	codeblock = . statementlist
	statementlist = . statement statementlist
	statementlist = .
	statement/L1 = . functiondefinition
	statement/L1 = . typedefinition ";"
	statement/L1 = . "var" variabledefinition ";"
	statement/L1 = . expression ";"
	statement/L1 = . "return" expression ";"
	statement/L1 = . "delete" expression ";"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}"
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "{" codeblock "}"
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[46]
	typespec/L1 = typename "^" "&" .
[47]
	typespec/L1 = typename "^" "^" .
	typespec/L1 = typename "^" "^" . "&"
[48]
	variabledefinition = typespec IDENT "=" . expression
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[49]
	variabledefinition = typespec IDENT "[" . expression "]" "=" expression
	variabledefinition = typespec IDENT "[" . expression "]"
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[50]
	functiondefinition = linkage "function" typespec . IDENT callablebody
[51]
	functiondefinition = linkage "procedure" IDENT . callablebody
	callablebody = . "(" parameterlist ")" "{" codeblock "}"
	callablebody = . "(" parameterlist ")" "const" "{" codeblock "}"
[52]
	typename/L1 = IDENT "::" typename .
[53]
	typespec/L1 = "const" typename "&" .
[54]
	typespec/L1 = "const" typename "^" .
	typespec/L1 = "const" typename "^" . "&"
	typespec/L1 = "const" typename "^" . "^"
	typespec/L1 = "const" typename "^" . "^" "&"
[55]
	typedefinition = "typedef" typename IDENT .
[56]
	struct_definitionlist = . struct_definition struct_definitionlist
	struct_definitionlist = .
	struct_definition = . typedefinition ";"
	struct_definition = . variabledefinition ";"
	struct_definition = . structdefinition
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	typedefinition = . "typedef" typename IDENT
	structdefinition = . "struct" IDENT "{" struct_definitionlist "}"
	structdefinition = "struct" IDENT "{" . struct_definitionlist "}"
	variabledefinition = . typespec IDENT
	variabledefinition = . typespec IDENT "=" expression
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression
	variabledefinition = . typespec IDENT "[" expression "]"
[57]
	interface_definitionlist = . interface_definition interface_definitionlist
	interface_definitionlist = .
	interface_definition = . "function" typespec IDENT "(" parameterlist ")" ";"
	interface_definition = . "function" typespec IDENT "(" parameterlist ")" "const" ";"
	interface_definition = . "procedure" IDENT "(" parameterlist ")" ";"
	interface_definition = . "procedure" IDENT "(" parameterlist ")" "const" ";"
	interfacedefinition = "interface" IDENT "{" . interface_definitionlist "}"
[58]
	class_definitionlist = . class_definition class_definitionlist
	class_definitionlist = .
	struct_definition = . typedefinition ";"
	struct_definition = . variabledefinition ";"
	struct_definition = . structdefinition
	class_definition = . struct_definition
	class_definition = . constructordefinition
	class_definition = . functiondefinition
	class_definition = . classdefinition
	class_definition = . interfacedefinition
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	typedefinition = . "typedef" typename IDENT
	structdefinition = . "struct" IDENT "{" struct_definitionlist "}"
	interfacedefinition = . "interface" IDENT "{" interface_definitionlist "}"
	classdefinition = . "class" IDENT "{" class_definitionlist "}"
	classdefinition = "class" IDENT "{" . class_definitionlist "}"
	classdefinition = . "class" IDENT ":" inheritlist "{" class_definitionlist "}"
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" typespec IDENT callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody
	constructordefinition = . linkage "constructor" callablebody
	constructordefinition = . "destructor" "{" codeblock "}"
	variabledefinition = . typespec IDENT
	variabledefinition = . typespec IDENT "=" expression
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression
	variabledefinition = . typespec IDENT "[" expression "]"
[59]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	inheritlist = . typename "," inheritlist
	inheritlist = . typename
	classdefinition = "class" IDENT ":" . inheritlist "{" class_definitionlist "}"
[60]
	extern_definition = "extern" DQSTRING "function" typespec . IDENT "(" extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING "function" typespec . IDENT "(" extern_paramlist "..." ")" ";"
[61]
	extern_definition = "extern" DQSTRING "procedure" IDENT . "(" extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING "procedure" IDENT . "(" extern_paramlist "..." ")" ";"
[62]
	statement/L1 = typedefinition . ";"
[63]
	statement/L1 = functiondefinition .
[64]
	main_procedure = "main" "{" codeblock . "}"
[65]
	codeblock = statementlist .
[66]
	typedefinition = . "typedef" typename IDENT
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" typespec IDENT callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody
	statementlist = . statement statementlist
	statementlist = statement . statementlist
	statementlist = .
	statement/L1 = . functiondefinition
	statement/L1 = . typedefinition ";"
	statement/L1 = . "var" variabledefinition ";"
	statement/L1 = . expression ";"
	statement/L1 = . "return" expression ";"
	statement/L1 = . "delete" expression ";"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}"
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "{" codeblock "}"
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[67]
	statement/L1 = expression . ";"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[68]
	expression/L12 = iexpression .
[69]
	expression/L2 = BOOLEAN .
[70]
	expression/L2 = IDENT .
[71]
	expression/L2 = DQSTRING .
[72]
	expression/L2 = SQSTRING .
[73]
	expression/L2 = CARDINAL .
[74]
	expression/L2 = INTEGER .
[75]
	expression/L2 = FLOAT .
[76]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L2 = "(" . expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[77]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = "&" . expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[78]
	typedefinition = . "typedef" typename IDENT
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" typespec IDENT callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody
	codeblock = . statementlist
	statementlist = . statement statementlist
	statementlist = .
	statement/L1 = . functiondefinition
	statement/L1 = . typedefinition ";"
	statement/L1 = . "var" variabledefinition ";"
	statement/L1 = . expression ";"
	statement/L1 = . "return" expression ";"
	statement/L1 = . "delete" expression ";"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}"
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "{" codeblock "}"
	statement/L1 = "{" . codeblock "}"
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = "{" . expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = "{" . "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
	expressionlist = . expression "," expressionlist
	expressionlist = . expression
[79]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	statement/L1 = "var" . variabledefinition ";"
	variabledefinition = . typespec IDENT
	variabledefinition = . typespec IDENT "=" expression
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression
	variabledefinition = . typespec IDENT "[" expression "]"
[80]
	statement/L1 = "return" . expression ";"
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[81]
	statement/L1 = "delete" . expression ";"
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[82]
	statement/L1 = "if" . "(" expression ")" "{" codeblock "}"
	statement/L1 = "if" . "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}"
[83]
	statement/L1 = "while" . "(" expression ")" "{" codeblock "}"
[84]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	expression/L1 = "new" . typespec ":" expression
[85]
	expression/L2 = "null" .
[86]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = "+" . expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[87]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = "-" . expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[88]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = "~" . expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[89]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L9 = "!" . expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[90]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L12 = "*" . expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[91]
	typespec/L1 = typename "^" "^" "&" .
[92]
	variabledefinition = typespec IDENT "=" expression .
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[93]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = "{" . expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = "{" . "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
	expressionlist = . expression "," expressionlist
	expressionlist = . expression
[94]
	variabledefinition = typespec IDENT "[" expression . "]" "=" expression
	variabledefinition = typespec IDENT "[" expression . "]"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[95]
	functiondefinition = linkage "function" typespec IDENT . callablebody
	callablebody = . "(" parameterlist ")" "{" codeblock "}"
	callablebody = . "(" parameterlist ")" "const" "{" codeblock "}"
[96]
	functiondefinition = linkage "procedure" IDENT callablebody .
[97]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	callablebody = "(" . parameterlist ")" "{" codeblock "}"
	callablebody = "(" . parameterlist ")" "const" "{" codeblock "}"
	parameterlist = . parameters
	parameterlist = .
	parameters = . paramdecl "," parameters
	parameters = . paramdecl
	paramdecl = . typespec IDENT
[98]
	typespec/L1 = "const" typename "^" "&" .
[99]
	typespec/L1 = "const" typename "^" "^" .
	typespec/L1 = "const" typename "^" "^" . "&"
[100]
	structdefinition = "struct" IDENT "{" struct_definitionlist . "}"
[101]
	struct_definitionlist = . struct_definition struct_definitionlist
	struct_definitionlist = struct_definition . struct_definitionlist
	struct_definitionlist = .
	struct_definition = . typedefinition ";"
	struct_definition = . variabledefinition ";"
	struct_definition = . structdefinition
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	typedefinition = . "typedef" typename IDENT
	structdefinition = . "struct" IDENT "{" struct_definitionlist "}"
	variabledefinition = . typespec IDENT
	variabledefinition = . typespec IDENT "=" expression
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression
	variabledefinition = . typespec IDENT "[" expression "]"
[102]
	interfacedefinition = "interface" IDENT "{" interface_definitionlist . "}"
[103]
	interface_definitionlist = . interface_definition interface_definitionlist
	interface_definitionlist = interface_definition . interface_definitionlist
	interface_definitionlist = .
	interface_definition = . "function" typespec IDENT "(" parameterlist ")" ";"
	interface_definition = . "function" typespec IDENT "(" parameterlist ")" "const" ";"
	interface_definition = . "procedure" IDENT "(" parameterlist ")" ";"
	interface_definition = . "procedure" IDENT "(" parameterlist ")" "const" ";"
[104]
	interface_definition = "function" . typespec IDENT "(" parameterlist ")" ";"
	interface_definition = "function" . typespec IDENT "(" parameterlist ")" "const" ";"
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
[105]
	interface_definition = "procedure" . IDENT "(" parameterlist ")" ";"
	interface_definition = "procedure" . IDENT "(" parameterlist ")" "const" ";"
[106]
	classdefinition = "class" IDENT "{" class_definitionlist . "}"
[107]
	class_definition = struct_definition .
[108]
	class_definitionlist = . class_definition class_definitionlist
	class_definitionlist = class_definition . class_definitionlist
	class_definitionlist = .
	struct_definition = . typedefinition ";"
	struct_definition = . variabledefinition ";"
	struct_definition = . structdefinition
	class_definition = . struct_definition
	class_definition = . constructordefinition
	class_definition = . functiondefinition
	class_definition = . classdefinition
	class_definition = . interfacedefinition
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	typedefinition = . "typedef" typename IDENT
	structdefinition = . "struct" IDENT "{" struct_definitionlist "}"
	interfacedefinition = . "interface" IDENT "{" interface_definitionlist "}"
	classdefinition = . "class" IDENT "{" class_definitionlist "}"
	classdefinition = . "class" IDENT ":" inheritlist "{" class_definitionlist "}"
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" typespec IDENT callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody
	constructordefinition = . linkage "constructor" callablebody
	constructordefinition = . "destructor" "{" codeblock "}"
	variabledefinition = . typespec IDENT
	variabledefinition = . typespec IDENT "=" expression
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression
	variabledefinition = . typespec IDENT "[" expression "]"
[109]
	class_definition = interfacedefinition .
[110]
	class_definition = classdefinition .
[111]
	functiondefinition = linkage . "function" typespec IDENT callablebody
	functiondefinition = linkage . "procedure" IDENT callablebody
	constructordefinition = linkage . "constructor" callablebody
[112]
	class_definition = functiondefinition .
[113]
	class_definition = constructordefinition .
[114]
	constructordefinition = "destructor" . "{" codeblock "}"
[115]
	inheritlist = typename . "," inheritlist
	inheritlist = typename .
[116]
	classdefinition = "class" IDENT ":" inheritlist . "{" class_definitionlist "}"
[117]
	extern_definition = "extern" DQSTRING "function" typespec IDENT . "(" extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING "function" typespec IDENT . "(" extern_paramlist "..." ")" ";"
[118]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" . extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" . extern_paramlist "..." ")" ";"
	extern_parameters = . typespec "," extern_parameters
	extern_parameters = . typespec
	extern_paramlist = . extern_parameters
	extern_paramlist = .
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
[119]
	statement/L1 = typedefinition ";" .
[120]
	main_procedure = "main" "{" codeblock "}" .
[121]
	statementlist = statement statementlist .
[122]
	iexpression = expression indirection . IDENT
[123]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = expression "(" . expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = expression "(" . ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
	expressionlist = . expression "," expressionlist
	expressionlist = . expression
[124]
	statement/L1 = expression ";" .
[125]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L7 = expression "&" . expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[126]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = expression "^" . expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[127]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = expression "=" . expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[128]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	expression/L13 = expression "[" . expressionlist "]"
	iexpression = . expression indirection IDENT
	expressionlist = . expression "," expressionlist
	expressionlist = . expression
[129]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = expression "+=" . expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[130]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = expression "-=" . expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[131]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = expression "*=" . expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[132]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = expression "/=" . expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[133]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = expression "%=" . expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[134]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = expression "&&=" . expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[135]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = expression "||=" . expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[136]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = expression "&=" . expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[137]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = expression "|=" . expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[138]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = expression "<<=" . expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[139]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L3 = expression ">>=" . expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[140]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L4 = expression "||" . expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[141]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L5 = expression "&&" . expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[142]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L6 = expression "|" . expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[143]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = expression "==" . expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[144]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = expression "!=" . expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[145]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = expression "<=" . expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[146]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = expression "<" . expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[147]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = expression ">=" . expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[148]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L8 = expression ">" . expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[149]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = expression "+" . expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[150]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = expression "-" . expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[151]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = expression "*" . expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[152]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = expression "/" . expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[153]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L10 = expression "%" . expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[154]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = expression "<<" . expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[155]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L11 = expression ">>" . expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[156]
	expression/L12 = expression "." . IDENT
[157]
	indirection = . "->" indirection
	indirection = "->" . indirection
	indirection = . "->"
	indirection = "->" .
[158]
	expression/L2 = "(" expression . ")"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[159]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L9 = "&" expression .
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[160]
	statement/L1 = "{" codeblock . "}"
[161]
	statement/L1 = expression . ";"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
	expressionlist = expression . "," expressionlist
	expressionlist = expression .
[162]
	expression/L1 = "{" expressionlist . "}"
[163]
	expression/L1 = "{" "}" .
[164]
	statement/L1 = "var" variabledefinition . ";"
[165]
	statement/L1 = "return" expression . ";"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[166]
	statement/L1 = "delete" expression . ";"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[167]
	statement/L1 = "if" "(" . expression ")" "{" codeblock "}"
	statement/L1 = "if" "(" . expression ")" "{" codeblock "}" "else" "{" codeblock "}"
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[168]
	statement/L1 = "while" "(" . expression ")" "{" codeblock "}"
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[169]
	expression/L1 = "new" typespec . ":" expression
[170]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L9 = "+" expression .
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[171]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L9 = "-" expression .
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[172]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L9 = "~" expression .
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[173]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L9 = "!" expression .
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[174]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L12 = "*" expression .
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[175]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
	expressionlist = expression . "," expressionlist
	expressionlist = expression .
[176]
	variabledefinition = typespec IDENT "[" expression "]" . "=" expression
	variabledefinition = typespec IDENT "[" expression "]" .
[177]
	functiondefinition = linkage "function" typespec IDENT callablebody .
[178]
	paramdecl = typespec . IDENT
[179]
	callablebody = "(" parameterlist . ")" "{" codeblock "}"
	callablebody = "(" parameterlist . ")" "const" "{" codeblock "}"
[180]
	parameterlist = parameters .
[181]
	parameters = paramdecl . "," parameters
	parameters = paramdecl .
[182]
	typespec/L1 = "const" typename "^" "^" "&" .
[183]
	structdefinition = "struct" IDENT "{" struct_definitionlist "}" .
[184]
	struct_definitionlist = struct_definition struct_definitionlist .
[185]
	interfacedefinition = "interface" IDENT "{" interface_definitionlist "}" .
[186]
	interface_definitionlist = interface_definition interface_definitionlist .
[187]
	interface_definition = "function" typespec . IDENT "(" parameterlist ")" ";"
	interface_definition = "function" typespec . IDENT "(" parameterlist ")" "const" ";"
[188]
	interface_definition = "procedure" IDENT . "(" parameterlist ")" ";"
	interface_definition = "procedure" IDENT . "(" parameterlist ")" "const" ";"
[189]
	classdefinition = "class" IDENT "{" class_definitionlist "}" .
[190]
	class_definitionlist = class_definition class_definitionlist .
[191]
	constructordefinition = linkage "constructor" . callablebody
	callablebody = . "(" parameterlist ")" "{" codeblock "}"
	callablebody = . "(" parameterlist ")" "const" "{" codeblock "}"
[192]
	typedefinition = . "typedef" typename IDENT
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" typespec IDENT callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody
	constructordefinition = "destructor" "{" . codeblock "}"
	codeblock = . statementlist
	statementlist = . statement statementlist
	statementlist = .
	statement/L1 = . functiondefinition
	statement/L1 = . typedefinition ";"
	statement/L1 = . "var" variabledefinition ";"
	statement/L1 = . expression ";"
	statement/L1 = . "return" expression ";"
	statement/L1 = . "delete" expression ";"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}"
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "{" codeblock "}"
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[193]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	inheritlist = . typename "," inheritlist
	inheritlist = typename "," . inheritlist
	inheritlist = . typename
[194]
	class_definitionlist = . class_definition class_definitionlist
	class_definitionlist = .
	struct_definition = . typedefinition ";"
	struct_definition = . variabledefinition ";"
	struct_definition = . structdefinition
	class_definition = . struct_definition
	class_definition = . constructordefinition
	class_definition = . functiondefinition
	class_definition = . classdefinition
	class_definition = . interfacedefinition
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	typedefinition = . "typedef" typename IDENT
	structdefinition = . "struct" IDENT "{" struct_definitionlist "}"
	interfacedefinition = . "interface" IDENT "{" interface_definitionlist "}"
	classdefinition = . "class" IDENT "{" class_definitionlist "}"
	classdefinition = . "class" IDENT ":" inheritlist "{" class_definitionlist "}"
	classdefinition = "class" IDENT ":" inheritlist "{" . class_definitionlist "}"
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" typespec IDENT callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody
	constructordefinition = . linkage "constructor" callablebody
	constructordefinition = . "destructor" "{" codeblock "}"
	variabledefinition = . typespec IDENT
	variabledefinition = . typespec IDENT "=" expression
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression
	variabledefinition = . typespec IDENT "[" expression "]"
[195]
	extern_definition = "extern" DQSTRING "function" typespec IDENT "(" . extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING "function" typespec IDENT "(" . extern_paramlist "..." ")" ";"
	extern_parameters = . typespec "," extern_parameters
	extern_parameters = . typespec
	extern_paramlist = . extern_parameters
	extern_paramlist = .
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
[196]
	extern_paramlist = extern_parameters .
[197]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist . ")" ";"
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist . "..." ")" ";"
[198]
	extern_parameters = typespec . "," extern_parameters
	extern_parameters = typespec .
[199]
	iexpression = expression indirection IDENT .
[200]
	expression/L13 = expression "(" expressionlist . ")"
[201]
	expression/L13 = expression "(" ")" .
[202]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L7 = expression "&" expression .
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[203]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression "^" expression .
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[204]
	expression/L3 = expression . "=" expression
	expression/L3 = expression "=" expression .
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[205]
	expression/L13 = expression "[" expressionlist . "]"
[206]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression "+=" expression .
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[207]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression "-=" expression .
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[208]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression "*=" expression .
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[209]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression "/=" expression .
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[210]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression "%=" expression .
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[211]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression "&&=" expression .
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[212]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression "||=" expression .
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[213]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression "&=" expression .
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[214]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression "|=" expression .
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[215]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression "<<=" expression .
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[216]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L3 = expression ">>=" expression .
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[217]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L4 = expression "||" expression .
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[218]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L5 = expression "&&" expression .
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[219]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L6 = expression "|" expression .
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[220]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression "==" expression .
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[221]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression "!=" expression .
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[222]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression "<=" expression .
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[223]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression "<" expression .
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[224]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression ">=" expression .
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[225]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L8 = expression ">" expression .
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[226]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression "+" expression .
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[227]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L9 = expression "-" expression .
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[228]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression "*" expression .
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[229]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression "/" expression .
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[230]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L10 = expression "%" expression .
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[231]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression "<<" expression .
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[232]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L11 = expression ">>" expression .
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[233]
	expression/L12 = expression "." IDENT .
[234]
	indirection = "->" indirection .
[235]
	expression/L2 = "(" expression ")" .
[236]
	statement/L1 = "{" codeblock "}" .
[237]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
	expressionlist = . expression "," expressionlist
	expressionlist = expression "," . expressionlist
	expressionlist = . expression
[238]
	expression/L1 = "{" expressionlist "}" .
[239]
	statement/L1 = "var" variabledefinition ";" .
[240]
	statement/L1 = "return" expression ";" .
[241]
	statement/L1 = "delete" expression ";" .
[242]
	statement/L1 = "if" "(" expression . ")" "{" codeblock "}"
	statement/L1 = "if" "(" expression . ")" "{" codeblock "}" "else" "{" codeblock "}"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[243]
	statement/L1 = "while" "(" expression . ")" "{" codeblock "}"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[244]
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L1 = "new" typespec ":" . expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[245]
	variabledefinition = typespec IDENT "[" expression "]" "=" . expression
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[246]
	paramdecl = typespec IDENT .
[247]
	callablebody = "(" parameterlist ")" . "{" codeblock "}"
	callablebody = "(" parameterlist ")" . "const" "{" codeblock "}"
[248]
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	parameters = . paramdecl "," parameters
	parameters = paramdecl "," . parameters
	parameters = . paramdecl
	paramdecl = . typespec IDENT
[249]
	interface_definition = "function" typespec IDENT . "(" parameterlist ")" ";"
	interface_definition = "function" typespec IDENT . "(" parameterlist ")" "const" ";"
[250]
	interface_definition = "procedure" IDENT "(" . parameterlist ")" ";"
	interface_definition = "procedure" IDENT "(" . parameterlist ")" "const" ";"
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	parameterlist = . parameters
	parameterlist = .
	parameters = . paramdecl "," parameters
	parameters = . paramdecl
	paramdecl = . typespec IDENT
[251]
	constructordefinition = linkage "constructor" callablebody .
[252]
	constructordefinition = "destructor" "{" codeblock . "}"
[253]
	inheritlist = typename "," inheritlist .
[254]
	classdefinition = "class" IDENT ":" inheritlist "{" class_definitionlist . "}"
[255]
	extern_definition = "extern" DQSTRING "function" typespec IDENT "(" extern_paramlist . ")" ";"
	extern_definition = "extern" DQSTRING "function" typespec IDENT "(" extern_paramlist . "..." ")" ";"
[256]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist ")" . ";"
[257]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist "..." . ")" ";"
[258]
	extern_parameters = . typespec "," extern_parameters
	extern_parameters = typespec "," . extern_parameters
	extern_parameters = . typespec
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
[259]
	expression/L13 = expression "(" expressionlist ")" .
[260]
	expression/L13 = expression "[" expressionlist "]" .
[261]
	expressionlist = expression "," expressionlist .
[262]
	statement/L1 = "if" "(" expression ")" . "{" codeblock "}"
	statement/L1 = "if" "(" expression ")" . "{" codeblock "}" "else" "{" codeblock "}"
[263]
	statement/L1 = "while" "(" expression ")" . "{" codeblock "}"
[264]
	expression/L1 = "new" typespec ":" expression .
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[265]
	variabledefinition = typespec IDENT "[" expression "]" "=" expression .
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	indirection = . "->" indirection
	indirection = . "->"
[266]
	callablebody = "(" parameterlist ")" "const" . "{" codeblock "}"
[267]
	typedefinition = . "typedef" typename IDENT
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" typespec IDENT callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody
	callablebody = "(" parameterlist ")" "{" . codeblock "}"
	codeblock = . statementlist
	statementlist = . statement statementlist
	statementlist = .
	statement/L1 = . functiondefinition
	statement/L1 = . typedefinition ";"
	statement/L1 = . "var" variabledefinition ";"
	statement/L1 = . expression ";"
	statement/L1 = . "return" expression ";"
	statement/L1 = . "delete" expression ";"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}"
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "{" codeblock "}"
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[268]
	parameters = paramdecl "," parameters .
[269]
	interface_definition = "function" typespec IDENT "(" . parameterlist ")" ";"
	interface_definition = "function" typespec IDENT "(" . parameterlist ")" "const" ";"
	typename/L1 = . IDENT
	typename/L1 = . IDENT "::" typename
	typespec/L1 = . typename
	typespec/L1 = . "const" typename
	typespec/L1 = . typename "&"
	typespec/L1 = . "const" typename "&"
	typespec/L1 = . typename "^"
	typespec/L1 = . "const" typename "^"
	typespec/L1 = . typename "^" "&"
	typespec/L1 = . "const" typename "^" "&"
	typespec/L1 = . typename "^" "^"
	typespec/L1 = . "const" typename "^" "^"
	typespec/L1 = . typename "^" "^" "&"
	typespec/L1 = . "const" typename "^" "^" "&"
	parameterlist = . parameters
	parameterlist = .
	parameters = . paramdecl "," parameters
	parameters = . paramdecl
	paramdecl = . typespec IDENT
[270]
	interface_definition = "procedure" IDENT "(" parameterlist . ")" ";"
	interface_definition = "procedure" IDENT "(" parameterlist . ")" "const" ";"
[271]
	constructordefinition = "destructor" "{" codeblock "}" .
[272]
	classdefinition = "class" IDENT ":" inheritlist "{" class_definitionlist "}" .
[273]
	extern_definition = "extern" DQSTRING "function" typespec IDENT "(" extern_paramlist ")" . ";"
[274]
	extern_definition = "extern" DQSTRING "function" typespec IDENT "(" extern_paramlist "..." . ")" ";"
[275]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist ")" ";" .
[276]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist "..." ")" . ";"
[277]
	extern_parameters = typespec "," extern_parameters .
[278]
	typedefinition = . "typedef" typename IDENT
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" typespec IDENT callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody
	codeblock = . statementlist
	statementlist = . statement statementlist
	statementlist = .
	statement/L1 = . functiondefinition
	statement/L1 = . typedefinition ";"
	statement/L1 = . "var" variabledefinition ";"
	statement/L1 = . expression ";"
	statement/L1 = . "return" expression ";"
	statement/L1 = . "delete" expression ";"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}"
	statement/L1 = "if" "(" expression ")" "{" . codeblock "}"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}"
	statement/L1 = "if" "(" expression ")" "{" . codeblock "}" "else" "{" codeblock "}"
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "{" codeblock "}"
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[279]
	typedefinition = . "typedef" typename IDENT
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" typespec IDENT callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody
	codeblock = . statementlist
	statementlist = . statement statementlist
	statementlist = .
	statement/L1 = . functiondefinition
	statement/L1 = . typedefinition ";"
	statement/L1 = . "var" variabledefinition ";"
	statement/L1 = . expression ";"
	statement/L1 = . "return" expression ";"
	statement/L1 = . "delete" expression ";"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}"
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}"
	statement/L1 = "while" "(" expression ")" "{" . codeblock "}"
	statement/L1 = . "{" codeblock "}"
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[280]
	typedefinition = . "typedef" typename IDENT
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" typespec IDENT callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody
	callablebody = "(" parameterlist ")" "const" "{" . codeblock "}"
	codeblock = . statementlist
	statementlist = . statement statementlist
	statementlist = .
	statement/L1 = . functiondefinition
	statement/L1 = . typedefinition ";"
	statement/L1 = . "var" variabledefinition ";"
	statement/L1 = . expression ";"
	statement/L1 = . "return" expression ";"
	statement/L1 = . "delete" expression ";"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}"
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "{" codeblock "}"
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[281]
	callablebody = "(" parameterlist ")" "{" codeblock . "}"
[282]
	interface_definition = "function" typespec IDENT "(" parameterlist . ")" ";"
	interface_definition = "function" typespec IDENT "(" parameterlist . ")" "const" ";"
[283]
	interface_definition = "procedure" IDENT "(" parameterlist ")" . ";"
	interface_definition = "procedure" IDENT "(" parameterlist ")" . "const" ";"
[284]
	extern_definition = "extern" DQSTRING "function" typespec IDENT "(" extern_paramlist ")" ";" .
[285]
	extern_definition = "extern" DQSTRING "function" typespec IDENT "(" extern_paramlist "..." ")" . ";"
[286]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist "..." ")" ";" .
[287]
	statement/L1 = "if" "(" expression ")" "{" codeblock . "}"
	statement/L1 = "if" "(" expression ")" "{" codeblock . "}" "else" "{" codeblock "}"
[288]
	statement/L1 = "while" "(" expression ")" "{" codeblock . "}"
[289]
	callablebody = "(" parameterlist ")" "const" "{" codeblock . "}"
[290]
	callablebody = "(" parameterlist ")" "{" codeblock "}" .
[291]
	interface_definition = "function" typespec IDENT "(" parameterlist ")" . ";"
	interface_definition = "function" typespec IDENT "(" parameterlist ")" . "const" ";"
[292]
	interface_definition = "procedure" IDENT "(" parameterlist ")" ";" .
[293]
	interface_definition = "procedure" IDENT "(" parameterlist ")" "const" . ";"
[294]
	extern_definition = "extern" DQSTRING "function" typespec IDENT "(" extern_paramlist "..." ")" ";" .
[295]
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" .
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" . "else" "{" codeblock "}"
[296]
	statement/L1 = "while" "(" expression ")" "{" codeblock "}" .
[297]
	callablebody = "(" parameterlist ")" "const" "{" codeblock "}" .
[298]
	interface_definition = "function" typespec IDENT "(" parameterlist ")" ";" .
[299]
	interface_definition = "function" typespec IDENT "(" parameterlist ")" "const" . ";"
[300]
	interface_definition = "procedure" IDENT "(" parameterlist ")" "const" ";" .
[301]
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" "else" . "{" codeblock "}"
[302]
	interface_definition = "function" typespec IDENT "(" parameterlist ")" "const" ";" .
[303]
	typedefinition = . "typedef" typename IDENT
	linkage = . "private"
	linkage = . "public"
	linkage = .
	functiondefinition = . linkage "function" typespec IDENT callablebody
	functiondefinition = . linkage "procedure" IDENT callablebody
	codeblock = . statementlist
	statementlist = . statement statementlist
	statementlist = .
	statement/L1 = . functiondefinition
	statement/L1 = . typedefinition ";"
	statement/L1 = . "var" variabledefinition ";"
	statement/L1 = . expression ";"
	statement/L1 = . "return" expression ";"
	statement/L1 = . "delete" expression ";"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}"
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" "else" "{" . codeblock "}"
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}"
	statement/L1 = . "{" codeblock "}"
	expression/L1 = . "{" expressionlist "}"
	expression/L1 = . "{" "}"
	expression/L1 = . "new" typespec ":" expression
	expression/L2 = . IDENT
	expression/L2 = . BOOLEAN
	expression/L2 = . CARDINAL
	expression/L2 = . INTEGER
	expression/L2 = . FLOAT
	expression/L2 = . "null"
	expression/L2 = . DQSTRING
	expression/L2 = . SQSTRING
	expression/L2 = . "(" expression ")"
	expression/L3 = . expression "=" expression
	expression/L3 = . expression "+=" expression
	expression/L3 = . expression "-=" expression
	expression/L3 = . expression "*=" expression
	expression/L3 = . expression "/=" expression
	expression/L3 = . expression "%=" expression
	expression/L3 = . expression "&&=" expression
	expression/L3 = . expression "||=" expression
	expression/L3 = . expression "&=" expression
	expression/L3 = . expression "|=" expression
	expression/L3 = . expression "<<=" expression
	expression/L3 = . expression ">>=" expression
	expression/L4 = . expression "||" expression
	expression/L5 = . expression "&&" expression
	expression/L6 = . expression "|" expression
	expression/L7 = . expression "^" expression
	expression/L7 = . expression "&" expression
	expression/L8 = . expression "==" expression
	expression/L8 = . expression "!=" expression
	expression/L8 = . expression "<=" expression
	expression/L8 = . expression "<" expression
	expression/L8 = . expression ">=" expression
	expression/L8 = . expression ">" expression
	expression/L9 = . expression "+" expression
	expression/L9 = . expression "-" expression
	expression/L9 = . "&" expression
	expression/L9 = . "-" expression
	expression/L9 = . "+" expression
	expression/L9 = . "~" expression
	expression/L9 = . "!" expression
	expression/L10 = . expression "*" expression
	expression/L10 = . expression "/" expression
	expression/L10 = . expression "%" expression
	expression/L11 = . expression "<<" expression
	expression/L11 = . expression ">>" expression
	expression/L12 = . iexpression
	expression/L12 = . expression "." IDENT
	expression/L12 = . "*" expression
	expression/L13 = . expression "(" expressionlist ")"
	expression/L13 = . expression "(" ")"
	expression/L13 = . expression "[" expressionlist "]"
	iexpression = . expression indirection IDENT
[304]
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock . "}"
[305]
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}" .

-- LR(0) state cores (for calculation of SHIFT follow state):
[2]
	program = extern_definitionlist . free_definitionlist main_procedure
[3]
	extern_definitionlist = extern_definition . extern_definitionlist
[4]
	extern_definition = "extern" . DQSTRING "function" typespec IDENT "(" extern_paramlist ")" ";"
	extern_definition = "extern" . DQSTRING "procedure" IDENT "(" extern_paramlist ")" ";"
	extern_definition = "extern" . DQSTRING "function" typespec IDENT "(" extern_paramlist "..." ")" ";"
	extern_definition = "extern" . DQSTRING "procedure" IDENT "(" extern_paramlist "..." ")" ";"
[5]
	program = extern_definitionlist free_definitionlist . main_procedure
[6]
	free_definition = struct_definition .
[7]
	free_definitionlist = free_definition . free_definitionlist
[8]
	typespec/L1 = typename .
	typespec/L1 = typename . "&"
	typespec/L1 = typename . "^"
	typespec/L1 = typename . "^" "&"
	typespec/L1 = typename . "^" "^"
	typespec/L1 = typename . "^" "^" "&"
[9]
	variabledefinition = typespec . IDENT
	variabledefinition = typespec . IDENT "=" expression
	variabledefinition = typespec . IDENT "[" expression "]" "=" expression
	variabledefinition = typespec . IDENT "[" expression "]"
[10]
	struct_definition = typedefinition . ";"
[11]
	struct_definition = structdefinition .
[12]
	free_definition = interfacedefinition .
[13]
	free_definition = classdefinition .
[14]
	functiondefinition = linkage . "function" typespec IDENT callablebody
	functiondefinition = linkage . "procedure" IDENT callablebody
[15]
	free_definition = functiondefinition .
[16]
	struct_definition = variabledefinition . ";"
[17]
	typename/L1 = IDENT .
	typename/L1 = IDENT . "::" typename
[18]
	typespec/L1 = "const" . typename
	typespec/L1 = "const" . typename "&"
	typespec/L1 = "const" . typename "^"
	typespec/L1 = "const" . typename "^" "&"
	typespec/L1 = "const" . typename "^" "^"
	typespec/L1 = "const" . typename "^" "^" "&"
[19]
	typedefinition = "typedef" . typename IDENT
[20]
	structdefinition = "struct" . IDENT "{" struct_definitionlist "}"
[21]
	interfacedefinition = "interface" . IDENT "{" interface_definitionlist "}"
[22]
	classdefinition = "class" . IDENT "{" class_definitionlist "}"
	classdefinition = "class" . IDENT ":" inheritlist "{" class_definitionlist "}"
[23]
	linkage = "private" .
[24]
	linkage = "public" .
[25]
	extern_definitionlist = extern_definition extern_definitionlist .
[26]
	extern_definition = "extern" DQSTRING . "function" typespec IDENT "(" extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING . "procedure" IDENT "(" extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING . "function" typespec IDENT "(" extern_paramlist "..." ")" ";"
	extern_definition = "extern" DQSTRING . "procedure" IDENT "(" extern_paramlist "..." ")" ";"
[27]
	program = extern_definitionlist free_definitionlist main_procedure .
[28]
	main_procedure = "main" . "{" codeblock "}"
[29]
	free_definitionlist = free_definition free_definitionlist .
[30]
	typespec/L1 = typename "&" .
[31]
	typespec/L1 = typename "^" .
	typespec/L1 = typename "^" . "&"
	typespec/L1 = typename "^" . "^"
	typespec/L1 = typename "^" . "^" "&"
[32]
	variabledefinition = typespec IDENT .
	variabledefinition = typespec IDENT . "=" expression
	variabledefinition = typespec IDENT . "[" expression "]" "=" expression
	variabledefinition = typespec IDENT . "[" expression "]"
[33]
	struct_definition = typedefinition ";" .
[34]
	functiondefinition = linkage "function" . typespec IDENT callablebody
[35]
	functiondefinition = linkage "procedure" . IDENT callablebody
[36]
	struct_definition = variabledefinition ";" .
[37]
	typename/L1 = IDENT "::" . typename
[38]
	typespec/L1 = "const" typename .
	typespec/L1 = "const" typename . "&"
	typespec/L1 = "const" typename . "^"
	typespec/L1 = "const" typename . "^" "&"
	typespec/L1 = "const" typename . "^" "^"
	typespec/L1 = "const" typename . "^" "^" "&"
[39]
	typedefinition = "typedef" typename . IDENT
[40]
	structdefinition = "struct" IDENT . "{" struct_definitionlist "}"
[41]
	interfacedefinition = "interface" IDENT . "{" interface_definitionlist "}"
[42]
	classdefinition = "class" IDENT . "{" class_definitionlist "}"
	classdefinition = "class" IDENT . ":" inheritlist "{" class_definitionlist "}"
[43]
	extern_definition = "extern" DQSTRING "function" . typespec IDENT "(" extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING "function" . typespec IDENT "(" extern_paramlist "..." ")" ";"
[44]
	extern_definition = "extern" DQSTRING "procedure" . IDENT "(" extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING "procedure" . IDENT "(" extern_paramlist "..." ")" ";"
[45]
	main_procedure = "main" "{" . codeblock "}"
[46]
	typespec/L1 = typename "^" "&" .
[47]
	typespec/L1 = typename "^" "^" .
	typespec/L1 = typename "^" "^" . "&"
[48]
	variabledefinition = typespec IDENT "=" . expression
[49]
	variabledefinition = typespec IDENT "[" . expression "]" "=" expression
	variabledefinition = typespec IDENT "[" . expression "]"
[50]
	functiondefinition = linkage "function" typespec . IDENT callablebody
[51]
	functiondefinition = linkage "procedure" IDENT . callablebody
[52]
	typename/L1 = IDENT "::" typename .
[53]
	typespec/L1 = "const" typename "&" .
[54]
	typespec/L1 = "const" typename "^" .
	typespec/L1 = "const" typename "^" . "&"
	typespec/L1 = "const" typename "^" . "^"
	typespec/L1 = "const" typename "^" . "^" "&"
[55]
	typedefinition = "typedef" typename IDENT .
[56]
	structdefinition = "struct" IDENT "{" . struct_definitionlist "}"
[57]
	interfacedefinition = "interface" IDENT "{" . interface_definitionlist "}"
[58]
	classdefinition = "class" IDENT "{" . class_definitionlist "}"
[59]
	classdefinition = "class" IDENT ":" . inheritlist "{" class_definitionlist "}"
[60]
	extern_definition = "extern" DQSTRING "function" typespec . IDENT "(" extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING "function" typespec . IDENT "(" extern_paramlist "..." ")" ";"
[61]
	extern_definition = "extern" DQSTRING "procedure" IDENT . "(" extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING "procedure" IDENT . "(" extern_paramlist "..." ")" ";"
[62]
	statement/L1 = typedefinition . ";"
[63]
	statement/L1 = functiondefinition .
[64]
	main_procedure = "main" "{" codeblock . "}"
[65]
	codeblock = statementlist .
[66]
	statementlist = statement . statementlist
[67]
	statement/L1 = expression . ";"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[68]
	expression/L12 = iexpression .
[69]
	expression/L2 = BOOLEAN .
[70]
	expression/L2 = IDENT .
[71]
	expression/L2 = DQSTRING .
[72]
	expression/L2 = SQSTRING .
[73]
	expression/L2 = CARDINAL .
[74]
	expression/L2 = INTEGER .
[75]
	expression/L2 = FLOAT .
[76]
	expression/L2 = "(" . expression ")"
[77]
	expression/L9 = "&" . expression
[78]
	statement/L1 = "{" . codeblock "}"
	expression/L1 = "{" . expressionlist "}"
	expression/L1 = "{" . "}"
[79]
	statement/L1 = "var" . variabledefinition ";"
[80]
	statement/L1 = "return" . expression ";"
[81]
	statement/L1 = "delete" . expression ";"
[82]
	statement/L1 = "if" . "(" expression ")" "{" codeblock "}"
	statement/L1 = "if" . "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}"
[83]
	statement/L1 = "while" . "(" expression ")" "{" codeblock "}"
[84]
	expression/L1 = "new" . typespec ":" expression
[85]
	expression/L2 = "null" .
[86]
	expression/L9 = "+" . expression
[87]
	expression/L9 = "-" . expression
[88]
	expression/L9 = "~" . expression
[89]
	expression/L9 = "!" . expression
[90]
	expression/L12 = "*" . expression
[91]
	typespec/L1 = typename "^" "^" "&" .
[92]
	variabledefinition = typespec IDENT "=" expression .
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[93]
	expression/L1 = "{" . expressionlist "}"
	expression/L1 = "{" . "}"
[94]
	variabledefinition = typespec IDENT "[" expression . "]" "=" expression
	variabledefinition = typespec IDENT "[" expression . "]"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[95]
	functiondefinition = linkage "function" typespec IDENT . callablebody
[96]
	functiondefinition = linkage "procedure" IDENT callablebody .
[97]
	callablebody = "(" . parameterlist ")" "{" codeblock "}"
	callablebody = "(" . parameterlist ")" "const" "{" codeblock "}"
[98]
	typespec/L1 = "const" typename "^" "&" .
[99]
	typespec/L1 = "const" typename "^" "^" .
	typespec/L1 = "const" typename "^" "^" . "&"
[100]
	structdefinition = "struct" IDENT "{" struct_definitionlist . "}"
[101]
	struct_definitionlist = struct_definition . struct_definitionlist
[102]
	interfacedefinition = "interface" IDENT "{" interface_definitionlist . "}"
[103]
	interface_definitionlist = interface_definition . interface_definitionlist
[104]
	interface_definition = "function" . typespec IDENT "(" parameterlist ")" ";"
	interface_definition = "function" . typespec IDENT "(" parameterlist ")" "const" ";"
[105]
	interface_definition = "procedure" . IDENT "(" parameterlist ")" ";"
	interface_definition = "procedure" . IDENT "(" parameterlist ")" "const" ";"
[106]
	classdefinition = "class" IDENT "{" class_definitionlist . "}"
[107]
	class_definition = struct_definition .
[108]
	class_definitionlist = class_definition . class_definitionlist
[109]
	class_definition = interfacedefinition .
[110]
	class_definition = classdefinition .
[111]
	functiondefinition = linkage . "function" typespec IDENT callablebody
	functiondefinition = linkage . "procedure" IDENT callablebody
	constructordefinition = linkage . "constructor" callablebody
[112]
	class_definition = functiondefinition .
[113]
	class_definition = constructordefinition .
[114]
	constructordefinition = "destructor" . "{" codeblock "}"
[115]
	inheritlist = typename . "," inheritlist
	inheritlist = typename .
[116]
	classdefinition = "class" IDENT ":" inheritlist . "{" class_definitionlist "}"
[117]
	extern_definition = "extern" DQSTRING "function" typespec IDENT . "(" extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING "function" typespec IDENT . "(" extern_paramlist "..." ")" ";"
[118]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" . extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" . extern_paramlist "..." ")" ";"
[119]
	statement/L1 = typedefinition ";" .
[120]
	main_procedure = "main" "{" codeblock "}" .
[121]
	statementlist = statement statementlist .
[122]
	iexpression = expression indirection . IDENT
[123]
	expression/L13 = expression "(" . expressionlist ")"
	expression/L13 = expression "(" . ")"
[124]
	statement/L1 = expression ";" .
[125]
	expression/L7 = expression "&" . expression
[126]
	expression/L7 = expression "^" . expression
[127]
	expression/L3 = expression "=" . expression
[128]
	expression/L13 = expression "[" . expressionlist "]"
[129]
	expression/L3 = expression "+=" . expression
[130]
	expression/L3 = expression "-=" . expression
[131]
	expression/L3 = expression "*=" . expression
[132]
	expression/L3 = expression "/=" . expression
[133]
	expression/L3 = expression "%=" . expression
[134]
	expression/L3 = expression "&&=" . expression
[135]
	expression/L3 = expression "||=" . expression
[136]
	expression/L3 = expression "&=" . expression
[137]
	expression/L3 = expression "|=" . expression
[138]
	expression/L3 = expression "<<=" . expression
[139]
	expression/L3 = expression ">>=" . expression
[140]
	expression/L4 = expression "||" . expression
[141]
	expression/L5 = expression "&&" . expression
[142]
	expression/L6 = expression "|" . expression
[143]
	expression/L8 = expression "==" . expression
[144]
	expression/L8 = expression "!=" . expression
[145]
	expression/L8 = expression "<=" . expression
[146]
	expression/L8 = expression "<" . expression
[147]
	expression/L8 = expression ">=" . expression
[148]
	expression/L8 = expression ">" . expression
[149]
	expression/L9 = expression "+" . expression
[150]
	expression/L9 = expression "-" . expression
[151]
	expression/L10 = expression "*" . expression
[152]
	expression/L10 = expression "/" . expression
[153]
	expression/L10 = expression "%" . expression
[154]
	expression/L11 = expression "<<" . expression
[155]
	expression/L11 = expression ">>" . expression
[156]
	expression/L12 = expression "." . IDENT
[157]
	indirection = "->" . indirection
	indirection = "->" .
[158]
	expression/L2 = "(" expression . ")"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[159]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L9 = "&" expression .
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[160]
	statement/L1 = "{" codeblock . "}"
[161]
	statement/L1 = expression . ";"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	expressionlist = expression . "," expressionlist
	expressionlist = expression .
[162]
	expression/L1 = "{" expressionlist . "}"
[163]
	expression/L1 = "{" "}" .
[164]
	statement/L1 = "var" variabledefinition . ";"
[165]
	statement/L1 = "return" expression . ";"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[166]
	statement/L1 = "delete" expression . ";"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[167]
	statement/L1 = "if" "(" . expression ")" "{" codeblock "}"
	statement/L1 = "if" "(" . expression ")" "{" codeblock "}" "else" "{" codeblock "}"
[168]
	statement/L1 = "while" "(" . expression ")" "{" codeblock "}"
[169]
	expression/L1 = "new" typespec . ":" expression
[170]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L9 = "+" expression .
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[171]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L9 = "-" expression .
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[172]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L9 = "~" expression .
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[173]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L9 = "!" expression .
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[174]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L12 = "*" expression .
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[175]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
	expressionlist = expression . "," expressionlist
	expressionlist = expression .
[176]
	variabledefinition = typespec IDENT "[" expression "]" . "=" expression
	variabledefinition = typespec IDENT "[" expression "]" .
[177]
	functiondefinition = linkage "function" typespec IDENT callablebody .
[178]
	paramdecl = typespec . IDENT
[179]
	callablebody = "(" parameterlist . ")" "{" codeblock "}"
	callablebody = "(" parameterlist . ")" "const" "{" codeblock "}"
[180]
	parameterlist = parameters .
[181]
	parameters = paramdecl . "," parameters
	parameters = paramdecl .
[182]
	typespec/L1 = "const" typename "^" "^" "&" .
[183]
	structdefinition = "struct" IDENT "{" struct_definitionlist "}" .
[184]
	struct_definitionlist = struct_definition struct_definitionlist .
[185]
	interfacedefinition = "interface" IDENT "{" interface_definitionlist "}" .
[186]
	interface_definitionlist = interface_definition interface_definitionlist .
[187]
	interface_definition = "function" typespec . IDENT "(" parameterlist ")" ";"
	interface_definition = "function" typespec . IDENT "(" parameterlist ")" "const" ";"
[188]
	interface_definition = "procedure" IDENT . "(" parameterlist ")" ";"
	interface_definition = "procedure" IDENT . "(" parameterlist ")" "const" ";"
[189]
	classdefinition = "class" IDENT "{" class_definitionlist "}" .
[190]
	class_definitionlist = class_definition class_definitionlist .
[191]
	constructordefinition = linkage "constructor" . callablebody
[192]
	constructordefinition = "destructor" "{" . codeblock "}"
[193]
	inheritlist = typename "," . inheritlist
[194]
	classdefinition = "class" IDENT ":" inheritlist "{" . class_definitionlist "}"
[195]
	extern_definition = "extern" DQSTRING "function" typespec IDENT "(" . extern_paramlist ")" ";"
	extern_definition = "extern" DQSTRING "function" typespec IDENT "(" . extern_paramlist "..." ")" ";"
[196]
	extern_paramlist = extern_parameters .
[197]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist . ")" ";"
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist . "..." ")" ";"
[198]
	extern_parameters = typespec . "," extern_parameters
	extern_parameters = typespec .
[199]
	iexpression = expression indirection IDENT .
[200]
	expression/L13 = expression "(" expressionlist . ")"
[201]
	expression/L13 = expression "(" ")" .
[202]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L7 = expression "&" expression .
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[203]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression "^" expression .
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[204]
	expression/L3 = expression . "=" expression
	expression/L3 = expression "=" expression .
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[205]
	expression/L13 = expression "[" expressionlist . "]"
[206]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression "+=" expression .
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[207]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression "-=" expression .
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[208]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression "*=" expression .
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[209]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression "/=" expression .
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[210]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression "%=" expression .
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[211]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression "&&=" expression .
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[212]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression "||=" expression .
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[213]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression "&=" expression .
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[214]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression "|=" expression .
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[215]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression "<<=" expression .
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[216]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L3 = expression ">>=" expression .
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[217]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L4 = expression "||" expression .
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[218]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L5 = expression "&&" expression .
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[219]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L6 = expression "|" expression .
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[220]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression "==" expression .
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[221]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression "!=" expression .
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[222]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression "<=" expression .
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[223]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression "<" expression .
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[224]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression ">=" expression .
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[225]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L8 = expression ">" expression .
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[226]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression "+" expression .
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[227]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L9 = expression "-" expression .
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[228]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression "*" expression .
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[229]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression "/" expression .
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[230]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L10 = expression "%" expression .
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[231]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression "<<" expression .
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[232]
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L11 = expression ">>" expression .
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[233]
	expression/L12 = expression "." IDENT .
[234]
	indirection = "->" indirection .
[235]
	expression/L2 = "(" expression ")" .
[236]
	statement/L1 = "{" codeblock "}" .
[237]
	expressionlist = expression "," . expressionlist
[238]
	expression/L1 = "{" expressionlist "}" .
[239]
	statement/L1 = "var" variabledefinition ";" .
[240]
	statement/L1 = "return" expression ";" .
[241]
	statement/L1 = "delete" expression ";" .
[242]
	statement/L1 = "if" "(" expression . ")" "{" codeblock "}"
	statement/L1 = "if" "(" expression . ")" "{" codeblock "}" "else" "{" codeblock "}"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[243]
	statement/L1 = "while" "(" expression . ")" "{" codeblock "}"
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[244]
	expression/L1 = "new" typespec ":" . expression
[245]
	variabledefinition = typespec IDENT "[" expression "]" "=" . expression
[246]
	paramdecl = typespec IDENT .
[247]
	callablebody = "(" parameterlist ")" . "{" codeblock "}"
	callablebody = "(" parameterlist ")" . "const" "{" codeblock "}"
[248]
	parameters = paramdecl "," . parameters
[249]
	interface_definition = "function" typespec IDENT . "(" parameterlist ")" ";"
	interface_definition = "function" typespec IDENT . "(" parameterlist ")" "const" ";"
[250]
	interface_definition = "procedure" IDENT "(" . parameterlist ")" ";"
	interface_definition = "procedure" IDENT "(" . parameterlist ")" "const" ";"
[251]
	constructordefinition = linkage "constructor" callablebody .
[252]
	constructordefinition = "destructor" "{" codeblock . "}"
[253]
	inheritlist = typename "," inheritlist .
[254]
	classdefinition = "class" IDENT ":" inheritlist "{" class_definitionlist . "}"
[255]
	extern_definition = "extern" DQSTRING "function" typespec IDENT "(" extern_paramlist . ")" ";"
	extern_definition = "extern" DQSTRING "function" typespec IDENT "(" extern_paramlist . "..." ")" ";"
[256]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist ")" . ";"
[257]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist "..." . ")" ";"
[258]
	extern_parameters = typespec "," . extern_parameters
[259]
	expression/L13 = expression "(" expressionlist ")" .
[260]
	expression/L13 = expression "[" expressionlist "]" .
[261]
	expressionlist = expression "," expressionlist .
[262]
	statement/L1 = "if" "(" expression ")" . "{" codeblock "}"
	statement/L1 = "if" "(" expression ")" . "{" codeblock "}" "else" "{" codeblock "}"
[263]
	statement/L1 = "while" "(" expression ")" . "{" codeblock "}"
[264]
	expression/L1 = "new" typespec ":" expression .
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[265]
	variabledefinition = typespec IDENT "[" expression "]" "=" expression .
	expression/L3 = expression . "=" expression
	expression/L3 = expression . "+=" expression
	expression/L3 = expression . "-=" expression
	expression/L3 = expression . "*=" expression
	expression/L3 = expression . "/=" expression
	expression/L3 = expression . "%=" expression
	expression/L3 = expression . "&&=" expression
	expression/L3 = expression . "||=" expression
	expression/L3 = expression . "&=" expression
	expression/L3 = expression . "|=" expression
	expression/L3 = expression . "<<=" expression
	expression/L3 = expression . ">>=" expression
	expression/L4 = expression . "||" expression
	expression/L5 = expression . "&&" expression
	expression/L6 = expression . "|" expression
	expression/L7 = expression . "^" expression
	expression/L7 = expression . "&" expression
	expression/L8 = expression . "==" expression
	expression/L8 = expression . "!=" expression
	expression/L8 = expression . "<=" expression
	expression/L8 = expression . "<" expression
	expression/L8 = expression . ">=" expression
	expression/L8 = expression . ">" expression
	expression/L9 = expression . "+" expression
	expression/L9 = expression . "-" expression
	expression/L10 = expression . "*" expression
	expression/L10 = expression . "/" expression
	expression/L10 = expression . "%" expression
	expression/L11 = expression . "<<" expression
	expression/L11 = expression . ">>" expression
	expression/L12 = expression . "." IDENT
	expression/L13 = expression . "(" expressionlist ")"
	expression/L13 = expression . "(" ")"
	expression/L13 = expression . "[" expressionlist "]"
	iexpression = expression . indirection IDENT
[266]
	callablebody = "(" parameterlist ")" "const" . "{" codeblock "}"
[267]
	callablebody = "(" parameterlist ")" "{" . codeblock "}"
[268]
	parameters = paramdecl "," parameters .
[269]
	interface_definition = "function" typespec IDENT "(" . parameterlist ")" ";"
	interface_definition = "function" typespec IDENT "(" . parameterlist ")" "const" ";"
[270]
	interface_definition = "procedure" IDENT "(" parameterlist . ")" ";"
	interface_definition = "procedure" IDENT "(" parameterlist . ")" "const" ";"
[271]
	constructordefinition = "destructor" "{" codeblock "}" .
[272]
	classdefinition = "class" IDENT ":" inheritlist "{" class_definitionlist "}" .
[273]
	extern_definition = "extern" DQSTRING "function" typespec IDENT "(" extern_paramlist ")" . ";"
[274]
	extern_definition = "extern" DQSTRING "function" typespec IDENT "(" extern_paramlist "..." . ")" ";"
[275]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist ")" ";" .
[276]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist "..." ")" . ";"
[277]
	extern_parameters = typespec "," extern_parameters .
[278]
	statement/L1 = "if" "(" expression ")" "{" . codeblock "}"
	statement/L1 = "if" "(" expression ")" "{" . codeblock "}" "else" "{" codeblock "}"
[279]
	statement/L1 = "while" "(" expression ")" "{" . codeblock "}"
[280]
	callablebody = "(" parameterlist ")" "const" "{" . codeblock "}"
[281]
	callablebody = "(" parameterlist ")" "{" codeblock . "}"
[282]
	interface_definition = "function" typespec IDENT "(" parameterlist . ")" ";"
	interface_definition = "function" typespec IDENT "(" parameterlist . ")" "const" ";"
[283]
	interface_definition = "procedure" IDENT "(" parameterlist ")" . ";"
	interface_definition = "procedure" IDENT "(" parameterlist ")" . "const" ";"
[284]
	extern_definition = "extern" DQSTRING "function" typespec IDENT "(" extern_paramlist ")" ";" .
[285]
	extern_definition = "extern" DQSTRING "function" typespec IDENT "(" extern_paramlist "..." ")" . ";"
[286]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist "..." ")" ";" .
[287]
	statement/L1 = "if" "(" expression ")" "{" codeblock . "}"
	statement/L1 = "if" "(" expression ")" "{" codeblock . "}" "else" "{" codeblock "}"
[288]
	statement/L1 = "while" "(" expression ")" "{" codeblock . "}"
[289]
	callablebody = "(" parameterlist ")" "const" "{" codeblock . "}"
[290]
	callablebody = "(" parameterlist ")" "{" codeblock "}" .
[291]
	interface_definition = "function" typespec IDENT "(" parameterlist ")" . ";"
	interface_definition = "function" typespec IDENT "(" parameterlist ")" . "const" ";"
[292]
	interface_definition = "procedure" IDENT "(" parameterlist ")" ";" .
[293]
	interface_definition = "procedure" IDENT "(" parameterlist ")" "const" . ";"
[294]
	extern_definition = "extern" DQSTRING "function" typespec IDENT "(" extern_paramlist "..." ")" ";" .
[295]
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" .
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" . "else" "{" codeblock "}"
[296]
	statement/L1 = "while" "(" expression ")" "{" codeblock "}" .
[297]
	callablebody = "(" parameterlist ")" "const" "{" codeblock "}" .
[298]
	interface_definition = "function" typespec IDENT "(" parameterlist ")" ";" .
[299]
	interface_definition = "function" typespec IDENT "(" parameterlist ")" "const" . ";"
[300]
	interface_definition = "procedure" IDENT "(" parameterlist ")" "const" ";" .
[301]
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" "else" . "{" codeblock "}"
[302]
	interface_definition = "function" typespec IDENT "(" parameterlist ")" "const" ";" .
[303]
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" "else" "{" . codeblock "}"
[304]
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock . "}"
[305]
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}" .

-- LR(1) used FOLLOW sets labeled:
[0]: {$}
[1]: {$ IDENT "function" "procedure" "const" "typedef" "struct" "interface" "class" "private" "public" "main"}
[2]: {$ "main"}
[9]: {IDENT}
[10]: {')'}
[13]: {';'}
[16]: {'}'}
[17]: {'{'}
[22]: {']'}
[23]: {':'}
[56]: {$ IDENT "extern" "function" "procedure" "const" "typedef" "struct" "interface" "class" "private" "public" "main"}
[58]: {"function" "procedure"}
[59]: {IDENT '&' '^'}
[93]: {'(' ';' '&' '^' '=' '[' "+=" "-=" "*=" "/=" "%=" "&&=" "||=" "&=" "|=" "<<=" ">>=" "||" "&&" '|' "==" "!=" "<=" '<' ">=" '>' '+' '-' '*' '/' '%' "<<" ">>" '.' "->"}
[94]: {$ BOOLEAN IDENT DQSTRING SQSTRING CARDINAL INTEGER FLOAT "function" '(' "procedure" '&' "typedef" '{' '}' "private" "public" "var" "return" "delete" "if" "while" "new" "null" '+' '-' '~' '!' '*'}
[161]: {'(' '&' '^' '=' '[' ']' "+=" "-=" "*=" "/=" "%=" "&&=" "||=" "&=" "|=" "<<=" ">>=" "||" "&&" '|' "==" "!=" "<=" '<' ">=" '>' '+' '-' '*' '/' '%' "<<" ">>" '.' "->"}
[162]: {$ IDENT "const" "typedef" "struct" '}'}
[164]: {$ "function" "procedure" '}'}
[165]: {"function" "procedure" "constructor"}
[166]: {$ IDENT "function" "procedure" "const" "typedef" "struct" '}' "interface" "class" "private" "public" "constructor" "destructor"}
[167]: {$ IDENT "function" "procedure" "const" "typedef" "struct" '}' "interface" "class" "private" "public" "constructor" "destructor" "main"}
[168]: {',' '{'}
[171]: {'(' ';' ',' '&' '^' '}' '=' '[' "+=" "-=" "*=" "/=" "%=" "&&=" "||=" "&=" "|=" "<<=" ">>=" "||" "&&" '|' "==" "!=" "<=" '<' ">=" '>' '+' '-' '*' '/' '%' "<<" ">>" '.' "->"}
[172]: {'&' '^' ':'}
[176]: {')' ','}
[177]: {')' "..."}
[179]: {')' "..." ','}
[180]: {')' "..." ',' '&' '^'}
[217]: {'(' ')' '&' '^' '=' '[' "+=" "-=" "*=" "/=" "%=" "&&=" "||=" "&=" "|=" "<<=" ">>=" "||" "&&" '|' "==" "!=" "<=" '<' ">=" '>' '+' '-' '*' '/' '%' "<<" ">>" '.' "->"}
[219]: {'(' ')' ',' '&' '^' '}' '=' '[' ']' "+=" "-=" "*=" "/=" "%=" "&&=" "||=" "&=" "|=" "<<=" ">>=" "||" "&&" '|' "==" "!=" "<=" '<' ">=" '>' '+' '-' '*' '/' '%' "<<" ">>" '.' "->"}
[226]: {'(' ')' ';' ',' '&' '^' '}' '=' '[' ']' "+=" "-=" "*=" "/=" "%=" "&&=" "||=" "&=" "|=" "<<=" ">>=" "||" "&&" '|' "==" "!=" "<=" '<' ">=" '>' '+' '-' '*' '/' '%' "<<" ">>" '.' "->"}
[228]: {$ BOOLEAN IDENT DQSTRING SQSTRING CARDINAL INTEGER FLOAT "function" '(' "procedure" "const" '&' "typedef" "struct" '{' '}' "interface" "class" "private" "public" "constructor" "destructor" "main" "var" "return" "delete" "if" "while" "new" "null" '+' '-' '~' '!' '*'}
[232]: {$ BOOLEAN IDENT DQSTRING SQSTRING CARDINAL INTEGER FLOAT "function" '(' "procedure" "const" '&' "typedef" "struct" '{' '}' "interface" "class" "private" "public" "main" "var" "return" "delete" "if" "while" "new" "null" '+' '-' '~' '!' '*'}
[233]: {')' '}' ']'}
[237]: {IDENT ')' "..." ',' '&' '^' ':'}
[238]: {IDENT ')' "..." ',' ':'}
[242]: {IDENT ')' "..." ',' '&' '^' '{' ':'}

-- LALR(1) states (merged LR(1) elements assigned to LR(0) states):
[1]
	program = . extern_definitionlist free_definitionlist main_procedure, FOLLOW [0] -> GOTO 2
	extern_definitionlist = . extern_definition extern_definitionlist, FOLLOW [1] -> GOTO 3
	extern_definition = . "extern" DQSTRING "function" typespec IDENT "(" extern_paramlist ")" ";", FOLLOW [56] -> SHIFT "extern" GOTO 4
	extern_definition = . "extern" DQSTRING "procedure" IDENT "(" extern_paramlist ")" ";", FOLLOW [56] -> SHIFT "extern" GOTO 4
	extern_definition = . "extern" DQSTRING "function" typespec IDENT "(" extern_paramlist "..." ")" ";", FOLLOW [56] -> SHIFT "extern" GOTO 4
	extern_definition = . "extern" DQSTRING "procedure" IDENT "(" extern_paramlist "..." ")" ";", FOLLOW [56] -> SHIFT "extern" GOTO 4
	extern_definitionlist = ., FOLLOW [1] -> REDUCE extern_definitionlist #0
[2]
	program = extern_definitionlist . free_definitionlist main_procedure, FOLLOW [0] -> GOTO 5
	free_definition = . struct_definition, FOLLOW [1] -> GOTO 6
	free_definitionlist = . free_definition free_definitionlist, FOLLOW [2] -> GOTO 7
	typespec/L1 = . typename, FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [9] -> GOTO 8
	variabledefinition = . typespec IDENT, FOLLOW [13] -> GOTO 9
	variabledefinition = . typespec IDENT "=" expression, FOLLOW [13] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression, FOLLOW [13] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]", FOLLOW [13] -> GOTO 9
	struct_definition = . typedefinition ";", FOLLOW [1] -> GOTO 10
	struct_definition = . structdefinition, FOLLOW [1] -> GOTO 11
	free_definition = . interfacedefinition, FOLLOW [1] -> GOTO 12
	free_definition = . classdefinition, FOLLOW [1] -> GOTO 13
	functiondefinition = . linkage "function" typespec IDENT callablebody, FOLLOW [1] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [1] -> GOTO 14
	free_definition = . functiondefinition, FOLLOW [1] -> GOTO 15
	struct_definition = . variabledefinition ";", FOLLOW [1] -> GOTO 16
	typename/L1 = . IDENT, FOLLOW [59] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [59] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typedefinition = . "typedef" typename IDENT, FOLLOW [13] -> SHIFT "typedef" GOTO 19
	structdefinition = . "struct" IDENT "{" struct_definitionlist "}", FOLLOW [1] -> SHIFT "struct" GOTO 20
	interfacedefinition = . "interface" IDENT "{" interface_definitionlist "}", FOLLOW [1] -> SHIFT "interface" GOTO 21
	classdefinition = . "class" IDENT "{" class_definitionlist "}", FOLLOW [1] -> SHIFT "class" GOTO 22
	classdefinition = . "class" IDENT ":" inheritlist "{" class_definitionlist "}", FOLLOW [1] -> SHIFT "class" GOTO 22
	linkage = . "private", FOLLOW [58] -> SHIFT "private" GOTO 23
	linkage = . "public", FOLLOW [58] -> SHIFT "public" GOTO 24
	free_definitionlist = ., FOLLOW [2] -> REDUCE free_definitionlist #0
	linkage = . (30), FOLLOW [58] -> REDUCE linkage #0 CALL linkage {linkage="internal",attributes="#0 nounwind"}
[3]
	extern_definitionlist = extern_definition . extern_definitionlist, FOLLOW [1] -> GOTO 25
	extern_definitionlist = . extern_definition extern_definitionlist, FOLLOW [1] -> GOTO 3
	extern_definition = . "extern" DQSTRING "function" typespec IDENT "(" extern_paramlist ")" ";", FOLLOW [56] -> SHIFT "extern" GOTO 4
	extern_definition = . "extern" DQSTRING "procedure" IDENT "(" extern_paramlist ")" ";", FOLLOW [56] -> SHIFT "extern" GOTO 4
	extern_definition = . "extern" DQSTRING "function" typespec IDENT "(" extern_paramlist "..." ")" ";", FOLLOW [56] -> SHIFT "extern" GOTO 4
	extern_definition = . "extern" DQSTRING "procedure" IDENT "(" extern_paramlist "..." ")" ";", FOLLOW [56] -> SHIFT "extern" GOTO 4
	extern_definitionlist = ., FOLLOW [1] -> REDUCE extern_definitionlist #0
[4]
	extern_definition = "extern" . DQSTRING "function" typespec IDENT "(" extern_paramlist ")" ";", FOLLOW [56] -> SHIFT DQSTRING GOTO 26
	extern_definition = "extern" . DQSTRING "procedure" IDENT "(" extern_paramlist ")" ";", FOLLOW [56] -> SHIFT DQSTRING GOTO 26
	extern_definition = "extern" . DQSTRING "function" typespec IDENT "(" extern_paramlist "..." ")" ";", FOLLOW [56] -> SHIFT DQSTRING GOTO 26
	extern_definition = "extern" . DQSTRING "procedure" IDENT "(" extern_paramlist "..." ")" ";", FOLLOW [56] -> SHIFT DQSTRING GOTO 26
[5]
	program = extern_definitionlist free_definitionlist . main_procedure, FOLLOW [0] -> GOTO 27
	main_procedure = . "main" "{" codeblock "}", FOLLOW [0] -> SHIFT "main" GOTO 28
	main_procedure = ., FOLLOW [0] -> REDUCE main_procedure #0
[6]
	free_definition = struct_definition ., FOLLOW [1] -> REDUCE free_definition #1
[7]
	free_definitionlist = free_definition . free_definitionlist, FOLLOW [2] -> GOTO 29
	free_definition = . struct_definition, FOLLOW [1] -> GOTO 6
	free_definitionlist = . free_definition free_definitionlist, FOLLOW [2] -> GOTO 7
	typespec/L1 = . typename, FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [9] -> GOTO 8
	variabledefinition = . typespec IDENT, FOLLOW [13] -> GOTO 9
	variabledefinition = . typespec IDENT "=" expression, FOLLOW [13] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression, FOLLOW [13] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]", FOLLOW [13] -> GOTO 9
	struct_definition = . typedefinition ";", FOLLOW [1] -> GOTO 10
	struct_definition = . structdefinition, FOLLOW [1] -> GOTO 11
	free_definition = . interfacedefinition, FOLLOW [1] -> GOTO 12
	free_definition = . classdefinition, FOLLOW [1] -> GOTO 13
	functiondefinition = . linkage "function" typespec IDENT callablebody, FOLLOW [1] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [1] -> GOTO 14
	free_definition = . functiondefinition, FOLLOW [1] -> GOTO 15
	struct_definition = . variabledefinition ";", FOLLOW [1] -> GOTO 16
	typename/L1 = . IDENT, FOLLOW [59] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [59] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typedefinition = . "typedef" typename IDENT, FOLLOW [13] -> SHIFT "typedef" GOTO 19
	structdefinition = . "struct" IDENT "{" struct_definitionlist "}", FOLLOW [1] -> SHIFT "struct" GOTO 20
	interfacedefinition = . "interface" IDENT "{" interface_definitionlist "}", FOLLOW [1] -> SHIFT "interface" GOTO 21
	classdefinition = . "class" IDENT "{" class_definitionlist "}", FOLLOW [1] -> SHIFT "class" GOTO 22
	classdefinition = . "class" IDENT ":" inheritlist "{" class_definitionlist "}", FOLLOW [1] -> SHIFT "class" GOTO 22
	linkage = . "private", FOLLOW [58] -> SHIFT "private" GOTO 23
	linkage = . "public", FOLLOW [58] -> SHIFT "public" GOTO 24
	free_definitionlist = ., FOLLOW [2] -> REDUCE free_definitionlist #0
	linkage = . (30), FOLLOW [58] -> REDUCE linkage #0 CALL linkage {linkage="internal",attributes="#0 nounwind"}
[8]
	typespec/L1 = typename . "&", FOLLOW [238] -> SHIFT '&' GOTO 30
	typespec/L1 = typename . "^", FOLLOW [238] -> SHIFT '^' GOTO 31
	typespec/L1 = typename . "^" "&", FOLLOW [238] -> SHIFT '^' GOTO 31
	typespec/L1 = typename . "^" "^", FOLLOW [238] -> SHIFT '^' GOTO 31
	typespec/L1 = typename . "^" "^" "&", FOLLOW [238] -> SHIFT '^' GOTO 31
	typespec/L1 = typename . (12), FOLLOW [238] -> REDUCE typespec #1 CALL typespec ""
[9]
	variabledefinition = typespec . IDENT, FOLLOW [13] -> SHIFT IDENT GOTO 32
	variabledefinition = typespec . IDENT "=" expression, FOLLOW [13] -> SHIFT IDENT GOTO 32
	variabledefinition = typespec . IDENT "[" expression "]" "=" expression, FOLLOW [13] -> SHIFT IDENT GOTO 32
	variabledefinition = typespec . IDENT "[" expression "]", FOLLOW [13] -> SHIFT IDENT GOTO 32
[10]
	struct_definition = typedefinition . ";", FOLLOW [167] -> SHIFT ';' GOTO 33
[11]
	struct_definition = structdefinition . (11), FOLLOW [167] -> REDUCE struct_definition #1 CALL definition
[12]
	free_definition = interfacedefinition . (11), FOLLOW [1] -> REDUCE free_definition #1 CALL definition
[13]
	free_definition = classdefinition . (11), FOLLOW [1] -> REDUCE free_definition #1 CALL definition
[14]
	functiondefinition = linkage . "function" typespec IDENT callablebody, FOLLOW [232] -> SHIFT "function" GOTO 34
	functiondefinition = linkage . "procedure" IDENT callablebody, FOLLOW [232] -> SHIFT "procedure" GOTO 35
[15]
	free_definition = functiondefinition . (11), FOLLOW [1] -> REDUCE free_definition #1 CALL definition
[16]
	struct_definition = variabledefinition . ";", FOLLOW [167] -> SHIFT ';' GOTO 36
[17]
	typename/L1 = IDENT . "::" typename, FOLLOW [242] -> SHIFT "::" GOTO 37
	typename/L1 = IDENT ., FOLLOW [242] -> REDUCE typename #1
[18]
	typespec/L1 = "const" . typename, FOLLOW [238] -> GOTO 38
	typespec/L1 = "const" . typename "&", FOLLOW [238] -> GOTO 38
	typespec/L1 = "const" . typename "^", FOLLOW [238] -> GOTO 38
	typespec/L1 = "const" . typename "^" "&", FOLLOW [238] -> GOTO 38
	typespec/L1 = "const" . typename "^" "^", FOLLOW [238] -> GOTO 38
	typespec/L1 = "const" . typename "^" "^" "&", FOLLOW [238] -> GOTO 38
	typename/L1 = . IDENT, FOLLOW [237] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [237] -> SHIFT IDENT GOTO 17
[19]
	typedefinition = "typedef" . typename IDENT, FOLLOW [13] -> GOTO 39
	typename/L1 = . IDENT, FOLLOW [9] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [9] -> SHIFT IDENT GOTO 17
[20]
	structdefinition = "struct" . IDENT "{" struct_definitionlist "}", FOLLOW [167] -> SHIFT IDENT GOTO 40
[21]
	interfacedefinition = "interface" . IDENT "{" interface_definitionlist "}", FOLLOW [167] -> SHIFT IDENT GOTO 41
[22]
	classdefinition = "class" . IDENT "{" class_definitionlist "}", FOLLOW [167] -> SHIFT IDENT GOTO 42
	classdefinition = "class" . IDENT ":" inheritlist "{" class_definitionlist "}", FOLLOW [167] -> SHIFT IDENT GOTO 42
[23]
	linkage = "private" . (30), FOLLOW [165] -> REDUCE linkage #1 CALL linkage {linkage="internal",attributes="#0 nounwind"}
[24]
	linkage = "public" . (31), FOLLOW [165] -> REDUCE linkage #1 CALL linkage {linkage="external",attributes="#0 noinline nounwind"}
[25]
	extern_definitionlist = extern_definition extern_definitionlist ., FOLLOW [1] -> REDUCE extern_definitionlist #2
[26]
	extern_definition = "extern" DQSTRING . "function" typespec IDENT "(" extern_paramlist ")" ";", FOLLOW [56] -> SHIFT "function" GOTO 43
	extern_definition = "extern" DQSTRING . "function" typespec IDENT "(" extern_paramlist "..." ")" ";", FOLLOW [56] -> SHIFT "function" GOTO 43
	extern_definition = "extern" DQSTRING . "procedure" IDENT "(" extern_paramlist ")" ";", FOLLOW [56] -> SHIFT "procedure" GOTO 44
	extern_definition = "extern" DQSTRING . "procedure" IDENT "(" extern_paramlist "..." ")" ";", FOLLOW [56] -> SHIFT "procedure" GOTO 44
[27]
	program = extern_definitionlist free_definitionlist main_procedure . (1) -> ACCEPT
	program = extern_definitionlist free_definitionlist main_procedure . (1), FOLLOW [0] -> REDUCE program #3 CALL program
[28]
	main_procedure = "main" . "{" codeblock "}", FOLLOW [0] -> SHIFT '{' GOTO 45
[29]
	free_definitionlist = free_definition free_definitionlist ., FOLLOW [2] -> REDUCE free_definitionlist #2
[30]
	typespec/L1 = typename "&" . (14), FOLLOW [238] -> REDUCE typespec #2 CALL typespec "&"
[31]
	typespec/L1 = typename "^" . "&", FOLLOW [238] -> SHIFT '&' GOTO 46
	typespec/L1 = typename "^" . "^", FOLLOW [238] -> SHIFT '^' GOTO 47
	typespec/L1 = typename "^" . "^" "&", FOLLOW [238] -> SHIFT '^' GOTO 47
	typespec/L1 = typename "^" . (16), FOLLOW [238] -> REDUCE typespec #2 CALL typespec "^"
[32]
	variabledefinition = typespec IDENT . "=" expression, FOLLOW [13] -> SHIFT '=' GOTO 48
	variabledefinition = typespec IDENT . "[" expression "]" "=" expression, FOLLOW [13] -> SHIFT '[' GOTO 49
	variabledefinition = typespec IDENT . "[" expression "]", FOLLOW [13] -> SHIFT '[' GOTO 49
	variabledefinition = typespec IDENT . (step:48), FOLLOW [13] -> REDUCE variabledefinition #2 CALL vardef
[33]
	struct_definition = typedefinition ";" . (11), FOLLOW [167] -> REDUCE struct_definition #2 CALL definition
[34]
	typespec/L1 = . typename, FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [9] -> GOTO 8
	functiondefinition = linkage "function" . typespec IDENT callablebody, FOLLOW [228] -> GOTO 50
	typename/L1 = . IDENT, FOLLOW [59] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [59] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
[35]
	functiondefinition = linkage "procedure" . IDENT callablebody, FOLLOW [228] -> SHIFT IDENT GOTO 51
[36]
	struct_definition = variabledefinition ";" . (11), FOLLOW [167] -> REDUCE struct_definition #2 CALL definition
[37]
	typename/L1 = IDENT "::" . typename, FOLLOW [242] -> GOTO 52
	typename/L1 = . IDENT, FOLLOW [242] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [242] -> SHIFT IDENT GOTO 17
[38]
	typespec/L1 = "const" typename . "&", FOLLOW [238] -> SHIFT '&' GOTO 53
	typespec/L1 = "const" typename . "^", FOLLOW [238] -> SHIFT '^' GOTO 54
	typespec/L1 = "const" typename . "^" "&", FOLLOW [238] -> SHIFT '^' GOTO 54
	typespec/L1 = "const" typename . "^" "^", FOLLOW [238] -> SHIFT '^' GOTO 54
	typespec/L1 = "const" typename . "^" "^" "&", FOLLOW [238] -> SHIFT '^' GOTO 54
	typespec/L1 = "const" typename . (13), FOLLOW [238] -> REDUCE typespec #2 CALL typespec "const "
[39]
	typedefinition = "typedef" typename . IDENT, FOLLOW [13] -> SHIFT IDENT GOTO 55
[40]
	structdefinition = "struct" IDENT . "{" struct_definitionlist "}", FOLLOW [167] -> SHIFT '{' GOTO 56
[41]
	interfacedefinition = "interface" IDENT . "{" interface_definitionlist "}", FOLLOW [167] -> SHIFT '{' GOTO 57
[42]
	classdefinition = "class" IDENT . "{" class_definitionlist "}", FOLLOW [167] -> SHIFT '{' GOTO 58
	classdefinition = "class" IDENT . ":" inheritlist "{" class_definitionlist "}", FOLLOW [167] -> SHIFT ':' GOTO 59
[43]
	typespec/L1 = . typename, FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [9] -> GOTO 8
	extern_definition = "extern" DQSTRING "function" . typespec IDENT "(" extern_paramlist ")" ";", FOLLOW [56] -> GOTO 60
	extern_definition = "extern" DQSTRING "function" . typespec IDENT "(" extern_paramlist "..." ")" ";", FOLLOW [56] -> GOTO 60
	typename/L1 = . IDENT, FOLLOW [59] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [59] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
[44]
	extern_definition = "extern" DQSTRING "procedure" . IDENT "(" extern_paramlist ")" ";", FOLLOW [56] -> SHIFT IDENT GOTO 61
	extern_definition = "extern" DQSTRING "procedure" . IDENT "(" extern_paramlist "..." ")" ";", FOLLOW [56] -> SHIFT IDENT GOTO 61
[45]
	statement/L1 = . typedefinition ";", FOLLOW [94] -> GOTO 62
	functiondefinition = . linkage "function" typespec IDENT callablebody, FOLLOW [94] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [94] -> GOTO 14
	statement/L1 = . functiondefinition, FOLLOW [94] -> GOTO 63
	main_procedure = "main" "{" . codeblock "}", FOLLOW [0] -> GOTO 64
	codeblock = . statementlist, FOLLOW [16] -> GOTO 65
	statementlist = . statement statementlist, FOLLOW [16] -> GOTO 66
	statement/L1 = . expression ";", FOLLOW [94] -> GOTO 67
	expression/L3 = . expression "=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression "+=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression "-=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression "*=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression "/=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression "%=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression "&&=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression "||=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression "&=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression "|=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression "<<=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression ">>=" expression, FOLLOW [93] -> GOTO 67
	expression/L4 = . expression "||" expression, FOLLOW [93] -> GOTO 67
	expression/L5 = . expression "&&" expression, FOLLOW [93] -> GOTO 67
	expression/L6 = . expression "|" expression, FOLLOW [93] -> GOTO 67
	expression/L7 = . expression "^" expression, FOLLOW [93] -> GOTO 67
	expression/L7 = . expression "&" expression, FOLLOW [93] -> GOTO 67
	expression/L8 = . expression "==" expression, FOLLOW [93] -> GOTO 67
	expression/L8 = . expression "!=" expression, FOLLOW [93] -> GOTO 67
	expression/L8 = . expression "<=" expression, FOLLOW [93] -> GOTO 67
	expression/L8 = . expression "<" expression, FOLLOW [93] -> GOTO 67
	expression/L8 = . expression ">=" expression, FOLLOW [93] -> GOTO 67
	expression/L8 = . expression ">" expression, FOLLOW [93] -> GOTO 67
	expression/L9 = . expression "+" expression, FOLLOW [93] -> GOTO 67
	expression/L9 = . expression "-" expression, FOLLOW [93] -> GOTO 67
	expression/L10 = . expression "*" expression, FOLLOW [93] -> GOTO 67
	expression/L10 = . expression "/" expression, FOLLOW [93] -> GOTO 67
	expression/L10 = . expression "%" expression, FOLLOW [93] -> GOTO 67
	expression/L11 = . expression "<<" expression, FOLLOW [93] -> GOTO 67
	expression/L11 = . expression ">>" expression, FOLLOW [93] -> GOTO 67
	expression/L12 = . expression "." IDENT, FOLLOW [93] -> GOTO 67
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [93] -> GOTO 67
	expression/L13 = . expression "(" ")", FOLLOW [93] -> GOTO 67
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [93] -> GOTO 67
	iexpression = . expression indirection IDENT, FOLLOW [93] -> GOTO 67
	expression/L12 = . iexpression, FOLLOW [93] -> GOTO 68
	expression/L2 = . BOOLEAN, FOLLOW [93] -> SHIFT BOOLEAN GOTO 69
	expression/L2 = . IDENT, FOLLOW [93] -> SHIFT IDENT GOTO 70
	expression/L2 = . DQSTRING, FOLLOW [93] -> SHIFT DQSTRING GOTO 71
	expression/L2 = . SQSTRING, FOLLOW [93] -> SHIFT SQSTRING GOTO 72
	expression/L2 = . CARDINAL, FOLLOW [93] -> SHIFT CARDINAL GOTO 73
	expression/L2 = . INTEGER, FOLLOW [93] -> SHIFT INTEGER GOTO 74
	expression/L2 = . FLOAT, FOLLOW [93] -> SHIFT FLOAT GOTO 75
	expression/L2 = . "(" expression ")", FOLLOW [93] -> SHIFT '(' GOTO 76
	expression/L9 = . "&" expression, FOLLOW [93] -> SHIFT '&' GOTO 77
	typedefinition = . "typedef" typename IDENT, FOLLOW [13] -> SHIFT "typedef" GOTO 19
	statement/L1 = . "{" codeblock "}", FOLLOW [94] -> SHIFT '{' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [93] -> SHIFT '{' GOTO 78
	expression/L1 = . "{" "}", FOLLOW [93] -> SHIFT '{' GOTO 78
	linkage = . "private", FOLLOW [58] -> SHIFT "private" GOTO 23
	linkage = . "public", FOLLOW [58] -> SHIFT "public" GOTO 24
	statement/L1 = . "var" variabledefinition ";", FOLLOW [94] -> SHIFT "var" GOTO 79
	statement/L1 = . "return" expression ";", FOLLOW [94] -> SHIFT "return" GOTO 80
	statement/L1 = . "delete" expression ";", FOLLOW [94] -> SHIFT "delete" GOTO 81
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}", FOLLOW [94] -> SHIFT "if" GOTO 82
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}", FOLLOW [94] -> SHIFT "if" GOTO 82
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}", FOLLOW [94] -> SHIFT "while" GOTO 83
	expression/L1 = . "new" typespec ":" expression, FOLLOW [93] -> SHIFT "new" GOTO 84
	expression/L2 = . "null", FOLLOW [93] -> SHIFT "null" GOTO 85
	expression/L9 = . "+" expression, FOLLOW [93] -> SHIFT '+' GOTO 86
	expression/L9 = . "-" expression, FOLLOW [93] -> SHIFT '-' GOTO 87
	expression/L9 = . "~" expression, FOLLOW [93] -> SHIFT '~' GOTO 88
	expression/L9 = . "!" expression, FOLLOW [93] -> SHIFT '!' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [93] -> SHIFT '*' GOTO 90
	statementlist = ., FOLLOW [16] -> REDUCE statementlist #0
	linkage = . (30), FOLLOW [58] -> REDUCE linkage #0 CALL linkage {linkage="internal",attributes="#0 nounwind"}
[46]
	typespec/L1 = typename "^" "&" . (18), FOLLOW [238] -> REDUCE typespec #3 CALL typespec "^&"
[47]
	typespec/L1 = typename "^" "^" . "&", FOLLOW [238] -> SHIFT '&' GOTO 91
	typespec/L1 = typename "^" "^" . (20), FOLLOW [238] -> REDUCE typespec #3 CALL typespec "^^"
[48]
	variabledefinition = typespec IDENT "=" . expression, FOLLOW [13] -> GOTO 92
	expression/L3 = . expression "=" expression, FOLLOW [93] -> GOTO 92
	expression/L3 = . expression "+=" expression, FOLLOW [93] -> GOTO 92
	expression/L3 = . expression "-=" expression, FOLLOW [93] -> GOTO 92
	expression/L3 = . expression "*=" expression, FOLLOW [93] -> GOTO 92
	expression/L3 = . expression "/=" expression, FOLLOW [93] -> GOTO 92
	expression/L3 = . expression "%=" expression, FOLLOW [93] -> GOTO 92
	expression/L3 = . expression "&&=" expression, FOLLOW [93] -> GOTO 92
	expression/L3 = . expression "||=" expression, FOLLOW [93] -> GOTO 92
	expression/L3 = . expression "&=" expression, FOLLOW [93] -> GOTO 92
	expression/L3 = . expression "|=" expression, FOLLOW [93] -> GOTO 92
	expression/L3 = . expression "<<=" expression, FOLLOW [93] -> GOTO 92
	expression/L3 = . expression ">>=" expression, FOLLOW [93] -> GOTO 92
	expression/L4 = . expression "||" expression, FOLLOW [93] -> GOTO 92
	expression/L5 = . expression "&&" expression, FOLLOW [93] -> GOTO 92
	expression/L6 = . expression "|" expression, FOLLOW [93] -> GOTO 92
	expression/L7 = . expression "^" expression, FOLLOW [93] -> GOTO 92
	expression/L7 = . expression "&" expression, FOLLOW [93] -> GOTO 92
	expression/L8 = . expression "==" expression, FOLLOW [93] -> GOTO 92
	expression/L8 = . expression "!=" expression, FOLLOW [93] -> GOTO 92
	expression/L8 = . expression "<=" expression, FOLLOW [93] -> GOTO 92
	expression/L8 = . expression "<" expression, FOLLOW [93] -> GOTO 92
	expression/L8 = . expression ">=" expression, FOLLOW [93] -> GOTO 92
	expression/L8 = . expression ">" expression, FOLLOW [93] -> GOTO 92
	expression/L9 = . expression "+" expression, FOLLOW [93] -> GOTO 92
	expression/L9 = . expression "-" expression, FOLLOW [93] -> GOTO 92
	expression/L10 = . expression "*" expression, FOLLOW [93] -> GOTO 92
	expression/L10 = . expression "/" expression, FOLLOW [93] -> GOTO 92
	expression/L10 = . expression "%" expression, FOLLOW [93] -> GOTO 92
	expression/L11 = . expression "<<" expression, FOLLOW [93] -> GOTO 92
	expression/L11 = . expression ">>" expression, FOLLOW [93] -> GOTO 92
	expression/L12 = . expression "." IDENT, FOLLOW [93] -> GOTO 92
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [93] -> GOTO 92
	expression/L13 = . expression "(" ")", FOLLOW [93] -> GOTO 92
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [93] -> GOTO 92
	iexpression = . expression indirection IDENT, FOLLOW [93] -> GOTO 92
	expression/L12 = . iexpression, FOLLOW [93] -> GOTO 68
	expression/L2 = . BOOLEAN, FOLLOW [93] -> SHIFT BOOLEAN GOTO 69
	expression/L2 = . IDENT, FOLLOW [93] -> SHIFT IDENT GOTO 70
	expression/L2 = . DQSTRING, FOLLOW [93] -> SHIFT DQSTRING GOTO 71
	expression/L2 = . SQSTRING, FOLLOW [93] -> SHIFT SQSTRING GOTO 72
	expression/L2 = . CARDINAL, FOLLOW [93] -> SHIFT CARDINAL GOTO 73
	expression/L2 = . INTEGER, FOLLOW [93] -> SHIFT INTEGER GOTO 74
	expression/L2 = . FLOAT, FOLLOW [93] -> SHIFT FLOAT GOTO 75
	expression/L2 = . "(" expression ")", FOLLOW [93] -> SHIFT '(' GOTO 76
	expression/L9 = . "&" expression, FOLLOW [93] -> SHIFT '&' GOTO 77
	expression/L1 = . "{" expressionlist "}", FOLLOW [93] -> SHIFT '{' GOTO 93
	expression/L1 = . "{" "}", FOLLOW [93] -> SHIFT '{' GOTO 93
	expression/L1 = . "new" typespec ":" expression, FOLLOW [93] -> SHIFT "new" GOTO 84
	expression/L2 = . "null", FOLLOW [93] -> SHIFT "null" GOTO 85
	expression/L9 = . "+" expression, FOLLOW [93] -> SHIFT '+' GOTO 86
	expression/L9 = . "-" expression, FOLLOW [93] -> SHIFT '-' GOTO 87
	expression/L9 = . "~" expression, FOLLOW [93] -> SHIFT '~' GOTO 88
	expression/L9 = . "!" expression, FOLLOW [93] -> SHIFT '!' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [93] -> SHIFT '*' GOTO 90
[49]
	variabledefinition = typespec IDENT "[" . expression "]" "=" expression, FOLLOW [13] -> GOTO 94
	variabledefinition = typespec IDENT "[" . expression "]", FOLLOW [13] -> GOTO 94
	expression/L3 = . expression "=" expression, FOLLOW [161] -> GOTO 94
	expression/L3 = . expression "+=" expression, FOLLOW [161] -> GOTO 94
	expression/L3 = . expression "-=" expression, FOLLOW [161] -> GOTO 94
	expression/L3 = . expression "*=" expression, FOLLOW [161] -> GOTO 94
	expression/L3 = . expression "/=" expression, FOLLOW [161] -> GOTO 94
	expression/L3 = . expression "%=" expression, FOLLOW [161] -> GOTO 94
	expression/L3 = . expression "&&=" expression, FOLLOW [161] -> GOTO 94
	expression/L3 = . expression "||=" expression, FOLLOW [161] -> GOTO 94
	expression/L3 = . expression "&=" expression, FOLLOW [161] -> GOTO 94
	expression/L3 = . expression "|=" expression, FOLLOW [161] -> GOTO 94
	expression/L3 = . expression "<<=" expression, FOLLOW [161] -> GOTO 94
	expression/L3 = . expression ">>=" expression, FOLLOW [161] -> GOTO 94
	expression/L4 = . expression "||" expression, FOLLOW [161] -> GOTO 94
	expression/L5 = . expression "&&" expression, FOLLOW [161] -> GOTO 94
	expression/L6 = . expression "|" expression, FOLLOW [161] -> GOTO 94
	expression/L7 = . expression "^" expression, FOLLOW [161] -> GOTO 94
	expression/L7 = . expression "&" expression, FOLLOW [161] -> GOTO 94
	expression/L8 = . expression "==" expression, FOLLOW [161] -> GOTO 94
	expression/L8 = . expression "!=" expression, FOLLOW [161] -> GOTO 94
	expression/L8 = . expression "<=" expression, FOLLOW [161] -> GOTO 94
	expression/L8 = . expression "<" expression, FOLLOW [161] -> GOTO 94
	expression/L8 = . expression ">=" expression, FOLLOW [161] -> GOTO 94
	expression/L8 = . expression ">" expression, FOLLOW [161] -> GOTO 94
	expression/L9 = . expression "+" expression, FOLLOW [161] -> GOTO 94
	expression/L9 = . expression "-" expression, FOLLOW [161] -> GOTO 94
	expression/L10 = . expression "*" expression, FOLLOW [161] -> GOTO 94
	expression/L10 = . expression "/" expression, FOLLOW [161] -> GOTO 94
	expression/L10 = . expression "%" expression, FOLLOW [161] -> GOTO 94
	expression/L11 = . expression "<<" expression, FOLLOW [161] -> GOTO 94
	expression/L11 = . expression ">>" expression, FOLLOW [161] -> GOTO 94
	expression/L12 = . expression "." IDENT, FOLLOW [161] -> GOTO 94
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [161] -> GOTO 94
	expression/L13 = . expression "(" ")", FOLLOW [161] -> GOTO 94
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [161] -> GOTO 94
	iexpression = . expression indirection IDENT, FOLLOW [161] -> GOTO 94
	expression/L12 = . iexpression, FOLLOW [161] -> GOTO 68
	expression/L2 = . BOOLEAN, FOLLOW [161] -> SHIFT BOOLEAN GOTO 69
	expression/L2 = . IDENT, FOLLOW [161] -> SHIFT IDENT GOTO 70
	expression/L2 = . DQSTRING, FOLLOW [161] -> SHIFT DQSTRING GOTO 71
	expression/L2 = . SQSTRING, FOLLOW [161] -> SHIFT SQSTRING GOTO 72
	expression/L2 = . CARDINAL, FOLLOW [161] -> SHIFT CARDINAL GOTO 73
	expression/L2 = . INTEGER, FOLLOW [161] -> SHIFT INTEGER GOTO 74
	expression/L2 = . FLOAT, FOLLOW [161] -> SHIFT FLOAT GOTO 75
	expression/L2 = . "(" expression ")", FOLLOW [161] -> SHIFT '(' GOTO 76
	expression/L9 = . "&" expression, FOLLOW [161] -> SHIFT '&' GOTO 77
	expression/L1 = . "{" expressionlist "}", FOLLOW [161] -> SHIFT '{' GOTO 93
	expression/L1 = . "{" "}", FOLLOW [161] -> SHIFT '{' GOTO 93
	expression/L1 = . "new" typespec ":" expression, FOLLOW [161] -> SHIFT "new" GOTO 84
	expression/L2 = . "null", FOLLOW [161] -> SHIFT "null" GOTO 85
	expression/L9 = . "+" expression, FOLLOW [161] -> SHIFT '+' GOTO 86
	expression/L9 = . "-" expression, FOLLOW [161] -> SHIFT '-' GOTO 87
	expression/L9 = . "~" expression, FOLLOW [161] -> SHIFT '~' GOTO 88
	expression/L9 = . "!" expression, FOLLOW [161] -> SHIFT '!' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [161] -> SHIFT '*' GOTO 90
[50]
	functiondefinition = linkage "function" typespec . IDENT callablebody, FOLLOW [228] -> SHIFT IDENT GOTO 95
[51]
	functiondefinition = linkage "procedure" IDENT . callablebody, FOLLOW [228] -> GOTO 96
	callablebody = . "(" parameterlist ")" "{" codeblock "}", FOLLOW [228] -> SHIFT '(' GOTO 97
	callablebody = . "(" parameterlist ")" "const" "{" codeblock "}", FOLLOW [228] -> SHIFT '(' GOTO 97
[52]
	typename/L1 = IDENT "::" typename ., FOLLOW [242] -> REDUCE typename #3
[53]
	typespec/L1 = "const" typename "&" . (15), FOLLOW [238] -> REDUCE typespec #3 CALL typespec "const&"
[54]
	typespec/L1 = "const" typename "^" . "&", FOLLOW [238] -> SHIFT '&' GOTO 98
	typespec/L1 = "const" typename "^" . "^", FOLLOW [238] -> SHIFT '^' GOTO 99
	typespec/L1 = "const" typename "^" . "^" "&", FOLLOW [238] -> SHIFT '^' GOTO 99
	typespec/L1 = "const" typename "^" . (17), FOLLOW [238] -> REDUCE typespec #3 CALL typespec "const^"
[55]
	typedefinition = "typedef" typename IDENT . (step:24), FOLLOW [13] -> REDUCE typedefinition #3 CALL typedef
[56]
	structdefinition = "struct" IDENT "{" . struct_definitionlist "}", FOLLOW [167] -> GOTO 100
	struct_definitionlist = . struct_definition struct_definitionlist, FOLLOW [16] -> GOTO 101
	typespec/L1 = . typename, FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [9] -> GOTO 8
	variabledefinition = . typespec IDENT, FOLLOW [13] -> GOTO 9
	variabledefinition = . typespec IDENT "=" expression, FOLLOW [13] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression, FOLLOW [13] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]", FOLLOW [13] -> GOTO 9
	struct_definition = . typedefinition ";", FOLLOW [162] -> GOTO 10
	struct_definition = . structdefinition, FOLLOW [162] -> GOTO 11
	struct_definition = . variabledefinition ";", FOLLOW [162] -> GOTO 16
	typename/L1 = . IDENT, FOLLOW [59] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [59] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typedefinition = . "typedef" typename IDENT, FOLLOW [13] -> SHIFT "typedef" GOTO 19
	structdefinition = . "struct" IDENT "{" struct_definitionlist "}", FOLLOW [167] -> SHIFT "struct" GOTO 20
	struct_definitionlist = ., FOLLOW [16] -> REDUCE struct_definitionlist #0
[57]
	interfacedefinition = "interface" IDENT "{" . interface_definitionlist "}", FOLLOW [167] -> GOTO 102
	interface_definitionlist = . interface_definition interface_definitionlist, FOLLOW [16] -> GOTO 103
	interface_definition = . "function" typespec IDENT "(" parameterlist ")" ";", FOLLOW [164] -> SHIFT "function" GOTO 104
	interface_definition = . "function" typespec IDENT "(" parameterlist ")" "const" ";", FOLLOW [164] -> SHIFT "function" GOTO 104
	interface_definition = . "procedure" IDENT "(" parameterlist ")" ";", FOLLOW [164] -> SHIFT "procedure" GOTO 105
	interface_definition = . "procedure" IDENT "(" parameterlist ")" "const" ";", FOLLOW [164] -> SHIFT "procedure" GOTO 105
	interface_definitionlist = ., FOLLOW [16] -> REDUCE interface_definitionlist #0
[58]
	classdefinition = "class" IDENT "{" . class_definitionlist "}", FOLLOW [167] -> GOTO 106
	class_definition = . struct_definition, FOLLOW [166] -> GOTO 107
	class_definitionlist = . class_definition class_definitionlist, FOLLOW [16] -> GOTO 108
	typespec/L1 = . typename, FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [9] -> GOTO 8
	variabledefinition = . typespec IDENT, FOLLOW [13] -> GOTO 9
	variabledefinition = . typespec IDENT "=" expression, FOLLOW [13] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression, FOLLOW [13] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]", FOLLOW [13] -> GOTO 9
	struct_definition = . typedefinition ";", FOLLOW [166] -> GOTO 10
	struct_definition = . structdefinition, FOLLOW [166] -> GOTO 11
	class_definition = . interfacedefinition, FOLLOW [166] -> GOTO 109
	class_definition = . classdefinition, FOLLOW [166] -> GOTO 110
	functiondefinition = . linkage "function" typespec IDENT callablebody, FOLLOW [166] -> GOTO 111
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [166] -> GOTO 111
	constructordefinition = . linkage "constructor" callablebody, FOLLOW [166] -> GOTO 111
	class_definition = . functiondefinition, FOLLOW [166] -> GOTO 112
	class_definition = . constructordefinition, FOLLOW [166] -> GOTO 113
	struct_definition = . variabledefinition ";", FOLLOW [166] -> GOTO 16
	typename/L1 = . IDENT, FOLLOW [59] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [59] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typedefinition = . "typedef" typename IDENT, FOLLOW [13] -> SHIFT "typedef" GOTO 19
	structdefinition = . "struct" IDENT "{" struct_definitionlist "}", FOLLOW [166] -> SHIFT "struct" GOTO 20
	interfacedefinition = . "interface" IDENT "{" interface_definitionlist "}", FOLLOW [166] -> SHIFT "interface" GOTO 21
	classdefinition = . "class" IDENT "{" class_definitionlist "}", FOLLOW [167] -> SHIFT "class" GOTO 22
	classdefinition = . "class" IDENT ":" inheritlist "{" class_definitionlist "}", FOLLOW [167] -> SHIFT "class" GOTO 22
	linkage = . "private", FOLLOW [165] -> SHIFT "private" GOTO 23
	linkage = . "public", FOLLOW [165] -> SHIFT "public" GOTO 24
	constructordefinition = . "destructor" "{" codeblock "}", FOLLOW [166] -> SHIFT "destructor" GOTO 114
	class_definitionlist = ., FOLLOW [16] -> REDUCE class_definitionlist #0
	linkage = . (30), FOLLOW [165] -> REDUCE linkage #0 CALL linkage {linkage="internal",attributes="#0 nounwind"}
[59]
	inheritlist = . typename "," inheritlist, FOLLOW [17] -> GOTO 115
	inheritlist = . typename, FOLLOW [17] -> GOTO 115
	classdefinition = "class" IDENT ":" . inheritlist "{" class_definitionlist "}", FOLLOW [167] -> GOTO 116
	typename/L1 = . IDENT, FOLLOW [168] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [168] -> SHIFT IDENT GOTO 17
[60]
	extern_definition = "extern" DQSTRING "function" typespec . IDENT "(" extern_paramlist ")" ";", FOLLOW [56] -> SHIFT IDENT GOTO 117
	extern_definition = "extern" DQSTRING "function" typespec . IDENT "(" extern_paramlist "..." ")" ";", FOLLOW [56] -> SHIFT IDENT GOTO 117
[61]
	extern_definition = "extern" DQSTRING "procedure" IDENT . "(" extern_paramlist ")" ";", FOLLOW [56] -> SHIFT '(' GOTO 118
	extern_definition = "extern" DQSTRING "procedure" IDENT . "(" extern_paramlist "..." ")" ";", FOLLOW [56] -> SHIFT '(' GOTO 118
[62]
	statement/L1 = typedefinition . ";", FOLLOW [94] -> SHIFT ';' GOTO 119
[63]
	statement/L1 = functiondefinition . (11), FOLLOW [94] -> REDUCE statement #1 CALL definition
[64]
	main_procedure = "main" "{" codeblock . "}", FOLLOW [0] -> SHIFT '}' GOTO 120
[65]
	codeblock = statementlist . (41), FOLLOW [16] -> REDUCE codeblock #1 CALL codeblock
[66]
	statement/L1 = . typedefinition ";", FOLLOW [94] -> GOTO 62
	functiondefinition = . linkage "function" typespec IDENT callablebody, FOLLOW [94] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [94] -> GOTO 14
	statement/L1 = . functiondefinition, FOLLOW [94] -> GOTO 63
	statementlist = statement . statementlist, FOLLOW [16] -> GOTO 121
	statementlist = . statement statementlist, FOLLOW [16] -> GOTO 66
	statement/L1 = . expression ";", FOLLOW [94] -> GOTO 67
	expression/L3 = . expression "=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression "+=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression "-=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression "*=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression "/=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression "%=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression "&&=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression "||=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression "&=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression "|=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression "<<=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression ">>=" expression, FOLLOW [93] -> GOTO 67
	expression/L4 = . expression "||" expression, FOLLOW [93] -> GOTO 67
	expression/L5 = . expression "&&" expression, FOLLOW [93] -> GOTO 67
	expression/L6 = . expression "|" expression, FOLLOW [93] -> GOTO 67
	expression/L7 = . expression "^" expression, FOLLOW [93] -> GOTO 67
	expression/L7 = . expression "&" expression, FOLLOW [93] -> GOTO 67
	expression/L8 = . expression "==" expression, FOLLOW [93] -> GOTO 67
	expression/L8 = . expression "!=" expression, FOLLOW [93] -> GOTO 67
	expression/L8 = . expression "<=" expression, FOLLOW [93] -> GOTO 67
	expression/L8 = . expression "<" expression, FOLLOW [93] -> GOTO 67
	expression/L8 = . expression ">=" expression, FOLLOW [93] -> GOTO 67
	expression/L8 = . expression ">" expression, FOLLOW [93] -> GOTO 67
	expression/L9 = . expression "+" expression, FOLLOW [93] -> GOTO 67
	expression/L9 = . expression "-" expression, FOLLOW [93] -> GOTO 67
	expression/L10 = . expression "*" expression, FOLLOW [93] -> GOTO 67
	expression/L10 = . expression "/" expression, FOLLOW [93] -> GOTO 67
	expression/L10 = . expression "%" expression, FOLLOW [93] -> GOTO 67
	expression/L11 = . expression "<<" expression, FOLLOW [93] -> GOTO 67
	expression/L11 = . expression ">>" expression, FOLLOW [93] -> GOTO 67
	expression/L12 = . expression "." IDENT, FOLLOW [93] -> GOTO 67
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [93] -> GOTO 67
	expression/L13 = . expression "(" ")", FOLLOW [93] -> GOTO 67
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [93] -> GOTO 67
	iexpression = . expression indirection IDENT, FOLLOW [93] -> GOTO 67
	expression/L12 = . iexpression, FOLLOW [93] -> GOTO 68
	expression/L2 = . BOOLEAN, FOLLOW [93] -> SHIFT BOOLEAN GOTO 69
	expression/L2 = . IDENT, FOLLOW [93] -> SHIFT IDENT GOTO 70
	expression/L2 = . DQSTRING, FOLLOW [93] -> SHIFT DQSTRING GOTO 71
	expression/L2 = . SQSTRING, FOLLOW [93] -> SHIFT SQSTRING GOTO 72
	expression/L2 = . CARDINAL, FOLLOW [93] -> SHIFT CARDINAL GOTO 73
	expression/L2 = . INTEGER, FOLLOW [93] -> SHIFT INTEGER GOTO 74
	expression/L2 = . FLOAT, FOLLOW [93] -> SHIFT FLOAT GOTO 75
	expression/L2 = . "(" expression ")", FOLLOW [93] -> SHIFT '(' GOTO 76
	expression/L9 = . "&" expression, FOLLOW [93] -> SHIFT '&' GOTO 77
	typedefinition = . "typedef" typename IDENT, FOLLOW [13] -> SHIFT "typedef" GOTO 19
	statement/L1 = . "{" codeblock "}", FOLLOW [94] -> SHIFT '{' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [93] -> SHIFT '{' GOTO 78
	expression/L1 = . "{" "}", FOLLOW [93] -> SHIFT '{' GOTO 78
	linkage = . "private", FOLLOW [58] -> SHIFT "private" GOTO 23
	linkage = . "public", FOLLOW [58] -> SHIFT "public" GOTO 24
	statement/L1 = . "var" variabledefinition ";", FOLLOW [94] -> SHIFT "var" GOTO 79
	statement/L1 = . "return" expression ";", FOLLOW [94] -> SHIFT "return" GOTO 80
	statement/L1 = . "delete" expression ";", FOLLOW [94] -> SHIFT "delete" GOTO 81
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}", FOLLOW [94] -> SHIFT "if" GOTO 82
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}", FOLLOW [94] -> SHIFT "if" GOTO 82
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}", FOLLOW [94] -> SHIFT "while" GOTO 83
	expression/L1 = . "new" typespec ":" expression, FOLLOW [93] -> SHIFT "new" GOTO 84
	expression/L2 = . "null", FOLLOW [93] -> SHIFT "null" GOTO 85
	expression/L9 = . "+" expression, FOLLOW [93] -> SHIFT '+' GOTO 86
	expression/L9 = . "-" expression, FOLLOW [93] -> SHIFT '-' GOTO 87
	expression/L9 = . "~" expression, FOLLOW [93] -> SHIFT '~' GOTO 88
	expression/L9 = . "!" expression, FOLLOW [93] -> SHIFT '!' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [93] -> SHIFT '*' GOTO 90
	statementlist = ., FOLLOW [16] -> REDUCE statementlist #0
	linkage = . (30), FOLLOW [58] -> REDUCE linkage #0 CALL linkage {linkage="internal",attributes="#0 nounwind"}
[67]
	iexpression = expression . indirection IDENT, FOLLOW [93] -> GOTO 122
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [93] -> SHIFT '(' GOTO 123
	expression/L13 = expression . "(" ")", FOLLOW [93] -> SHIFT '(' GOTO 123
	statement/L1 = expression . ";", FOLLOW [94] -> SHIFT ';' GOTO 124
	expression/L7 = expression . "&" expression, FOLLOW [93] -> SHIFT '&' GOTO 125
	expression/L7 = expression . "^" expression, FOLLOW [93] -> SHIFT '^' GOTO 126
	expression/L3 = expression . "=" expression, FOLLOW [93] -> SHIFT '=' GOTO 127
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [93] -> SHIFT '[' GOTO 128
	expression/L3 = expression . "+=" expression, FOLLOW [93] -> SHIFT "+=" GOTO 129
	expression/L3 = expression . "-=" expression, FOLLOW [93] -> SHIFT "-=" GOTO 130
	expression/L3 = expression . "*=" expression, FOLLOW [93] -> SHIFT "*=" GOTO 131
	expression/L3 = expression . "/=" expression, FOLLOW [93] -> SHIFT "/=" GOTO 132
	expression/L3 = expression . "%=" expression, FOLLOW [93] -> SHIFT "%=" GOTO 133
	expression/L3 = expression . "&&=" expression, FOLLOW [93] -> SHIFT "&&=" GOTO 134
	expression/L3 = expression . "||=" expression, FOLLOW [93] -> SHIFT "||=" GOTO 135
	expression/L3 = expression . "&=" expression, FOLLOW [93] -> SHIFT "&=" GOTO 136
	expression/L3 = expression . "|=" expression, FOLLOW [93] -> SHIFT "|=" GOTO 137
	expression/L3 = expression . "<<=" expression, FOLLOW [93] -> SHIFT "<<=" GOTO 138
	expression/L3 = expression . ">>=" expression, FOLLOW [93] -> SHIFT ">>=" GOTO 139
	expression/L4 = expression . "||" expression, FOLLOW [93] -> SHIFT "||" GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [93] -> SHIFT "&&" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [93] -> SHIFT '|' GOTO 142
	expression/L8 = expression . "==" expression, FOLLOW [93] -> SHIFT "==" GOTO 143
	expression/L8 = expression . "!=" expression, FOLLOW [93] -> SHIFT "!=" GOTO 144
	expression/L8 = expression . "<=" expression, FOLLOW [93] -> SHIFT "<=" GOTO 145
	expression/L8 = expression . "<" expression, FOLLOW [93] -> SHIFT '<' GOTO 146
	expression/L8 = expression . ">=" expression, FOLLOW [93] -> SHIFT ">=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [93] -> SHIFT '>' GOTO 148
	expression/L9 = expression . "+" expression, FOLLOW [93] -> SHIFT '+' GOTO 149
	expression/L9 = expression . "-" expression, FOLLOW [93] -> SHIFT '-' GOTO 150
	expression/L10 = expression . "*" expression, FOLLOW [93] -> SHIFT '*' GOTO 151
	expression/L10 = expression . "/" expression, FOLLOW [93] -> SHIFT '/' GOTO 152
	expression/L10 = expression . "%" expression, FOLLOW [93] -> SHIFT '%' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [93] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [93] -> SHIFT ">>" GOTO 155
	expression/L12 = expression . "." IDENT, FOLLOW [93] -> SHIFT '.' GOTO 156
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 157
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 157
[68]
	expression/L12 = iexpression ., FOLLOW [226] -> REDUCE expression #1
[69]
	expression/L2 = BOOLEAN . (55), FOLLOW [226] -> REDUCE expression #1 CALL constant "constexpr bool"
[70]
	expression/L2 = IDENT . (54), FOLLOW [226] -> REDUCE expression #1 CALL variable
[71]
	expression/L2 = DQSTRING . (60), FOLLOW [226] -> REDUCE expression #1 CALL string_constant "constexpr float"
[72]
	expression/L2 = SQSTRING . (61), FOLLOW [226] -> REDUCE expression #1 CALL char_constant "constexpr float"
[73]
	expression/L2 = CARDINAL . (56), FOLLOW [226] -> REDUCE expression #1 CALL constant "constexpr uint"
[74]
	expression/L2 = INTEGER . (57), FOLLOW [226] -> REDUCE expression #1 CALL constant "constexpr int"
[75]
	expression/L2 = FLOAT . (58), FOLLOW [226] -> REDUCE expression #1 CALL constant "constexpr float"
[76]
	expression/L2 = "(" . expression ")", FOLLOW [226] -> GOTO 158
	expression/L3 = . expression "=" expression, FOLLOW [226] -> GOTO 158
	expression/L3 = . expression "+=" expression, FOLLOW [226] -> GOTO 158
	expression/L3 = . expression "-=" expression, FOLLOW [226] -> GOTO 158
	expression/L3 = . expression "*=" expression, FOLLOW [226] -> GOTO 158
	expression/L3 = . expression "/=" expression, FOLLOW [226] -> GOTO 158
	expression/L3 = . expression "%=" expression, FOLLOW [226] -> GOTO 158
	expression/L3 = . expression "&&=" expression, FOLLOW [226] -> GOTO 158
	expression/L3 = . expression "||=" expression, FOLLOW [226] -> GOTO 158
	expression/L3 = . expression "&=" expression, FOLLOW [226] -> GOTO 158
	expression/L3 = . expression "|=" expression, FOLLOW [226] -> GOTO 158
	expression/L3 = . expression "<<=" expression, FOLLOW [226] -> GOTO 158
	expression/L3 = . expression ">>=" expression, FOLLOW [226] -> GOTO 158
	expression/L4 = . expression "||" expression, FOLLOW [226] -> GOTO 158
	expression/L5 = . expression "&&" expression, FOLLOW [226] -> GOTO 158
	expression/L6 = . expression "|" expression, FOLLOW [226] -> GOTO 158
	expression/L7 = . expression "^" expression, FOLLOW [226] -> GOTO 158
	expression/L7 = . expression "&" expression, FOLLOW [226] -> GOTO 158
	expression/L8 = . expression "==" expression, FOLLOW [226] -> GOTO 158
	expression/L8 = . expression "!=" expression, FOLLOW [226] -> GOTO 158
	expression/L8 = . expression "<=" expression, FOLLOW [226] -> GOTO 158
	expression/L8 = . expression "<" expression, FOLLOW [226] -> GOTO 158
	expression/L8 = . expression ">=" expression, FOLLOW [226] -> GOTO 158
	expression/L8 = . expression ">" expression, FOLLOW [226] -> GOTO 158
	expression/L9 = . expression "+" expression, FOLLOW [226] -> GOTO 158
	expression/L9 = . expression "-" expression, FOLLOW [226] -> GOTO 158
	expression/L10 = . expression "*" expression, FOLLOW [226] -> GOTO 158
	expression/L10 = . expression "/" expression, FOLLOW [226] -> GOTO 158
	expression/L10 = . expression "%" expression, FOLLOW [226] -> GOTO 158
	expression/L11 = . expression "<<" expression, FOLLOW [226] -> GOTO 158
	expression/L11 = . expression ">>" expression, FOLLOW [226] -> GOTO 158
	expression/L12 = . expression "." IDENT, FOLLOW [226] -> GOTO 158
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [226] -> GOTO 158
	expression/L13 = . expression "(" ")", FOLLOW [226] -> GOTO 158
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [226] -> GOTO 158
	iexpression = . expression indirection IDENT, FOLLOW [226] -> GOTO 158
	expression/L12 = . iexpression, FOLLOW [226] -> GOTO 68
	expression/L2 = . BOOLEAN, FOLLOW [226] -> SHIFT BOOLEAN GOTO 69
	expression/L2 = . IDENT, FOLLOW [226] -> SHIFT IDENT GOTO 70
	expression/L2 = . DQSTRING, FOLLOW [226] -> SHIFT DQSTRING GOTO 71
	expression/L2 = . SQSTRING, FOLLOW [226] -> SHIFT SQSTRING GOTO 72
	expression/L2 = . CARDINAL, FOLLOW [226] -> SHIFT CARDINAL GOTO 73
	expression/L2 = . INTEGER, FOLLOW [226] -> SHIFT INTEGER GOTO 74
	expression/L2 = . FLOAT, FOLLOW [226] -> SHIFT FLOAT GOTO 75
	expression/L2 = . "(" expression ")", FOLLOW [226] -> SHIFT '(' GOTO 76
	expression/L9 = . "&" expression, FOLLOW [226] -> SHIFT '&' GOTO 77
	expression/L1 = . "{" expressionlist "}", FOLLOW [226] -> SHIFT '{' GOTO 93
	expression/L1 = . "{" "}", FOLLOW [226] -> SHIFT '{' GOTO 93
	expression/L1 = . "new" typespec ":" expression, FOLLOW [226] -> SHIFT "new" GOTO 84
	expression/L2 = . "null", FOLLOW [226] -> SHIFT "null" GOTO 85
	expression/L9 = . "+" expression, FOLLOW [226] -> SHIFT '+' GOTO 86
	expression/L9 = . "-" expression, FOLLOW [226] -> SHIFT '-' GOTO 87
	expression/L9 = . "~" expression, FOLLOW [226] -> SHIFT '~' GOTO 88
	expression/L9 = . "!" expression, FOLLOW [226] -> SHIFT '!' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [226] -> SHIFT '*' GOTO 90
[77]
	expression/L3 = . expression "=" expression, FOLLOW [226] -> GOTO 159
	expression/L3 = . expression "+=" expression, FOLLOW [226] -> GOTO 159
	expression/L3 = . expression "-=" expression, FOLLOW [226] -> GOTO 159
	expression/L3 = . expression "*=" expression, FOLLOW [226] -> GOTO 159
	expression/L3 = . expression "/=" expression, FOLLOW [226] -> GOTO 159
	expression/L3 = . expression "%=" expression, FOLLOW [226] -> GOTO 159
	expression/L3 = . expression "&&=" expression, FOLLOW [226] -> GOTO 159
	expression/L3 = . expression "||=" expression, FOLLOW [226] -> GOTO 159
	expression/L3 = . expression "&=" expression, FOLLOW [226] -> GOTO 159
	expression/L3 = . expression "|=" expression, FOLLOW [226] -> GOTO 159
	expression/L3 = . expression "<<=" expression, FOLLOW [226] -> GOTO 159
	expression/L3 = . expression ">>=" expression, FOLLOW [226] -> GOTO 159
	expression/L4 = . expression "||" expression, FOLLOW [226] -> GOTO 159
	expression/L5 = . expression "&&" expression, FOLLOW [226] -> GOTO 159
	expression/L6 = . expression "|" expression, FOLLOW [226] -> GOTO 159
	expression/L7 = . expression "^" expression, FOLLOW [226] -> GOTO 159
	expression/L7 = . expression "&" expression, FOLLOW [226] -> GOTO 159
	expression/L8 = . expression "==" expression, FOLLOW [226] -> GOTO 159
	expression/L8 = . expression "!=" expression, FOLLOW [226] -> GOTO 159
	expression/L8 = . expression "<=" expression, FOLLOW [226] -> GOTO 159
	expression/L8 = . expression "<" expression, FOLLOW [226] -> GOTO 159
	expression/L8 = . expression ">=" expression, FOLLOW [226] -> GOTO 159
	expression/L8 = . expression ">" expression, FOLLOW [226] -> GOTO 159
	expression/L9 = . expression "+" expression, FOLLOW [226] -> GOTO 159
	expression/L9 = . expression "-" expression, FOLLOW [226] -> GOTO 159
	expression/L9 = "&" . expression, FOLLOW [226] -> GOTO 159
	expression/L10 = . expression "*" expression, FOLLOW [226] -> GOTO 159
	expression/L10 = . expression "/" expression, FOLLOW [226] -> GOTO 159
	expression/L10 = . expression "%" expression, FOLLOW [226] -> GOTO 159
	expression/L11 = . expression "<<" expression, FOLLOW [226] -> GOTO 159
	expression/L11 = . expression ">>" expression, FOLLOW [226] -> GOTO 159
	expression/L12 = . expression "." IDENT, FOLLOW [226] -> GOTO 159
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [226] -> GOTO 159
	expression/L13 = . expression "(" ")", FOLLOW [226] -> GOTO 159
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [226] -> GOTO 159
	iexpression = . expression indirection IDENT, FOLLOW [226] -> GOTO 159
	expression/L12 = . iexpression, FOLLOW [226] -> GOTO 68
	expression/L2 = . BOOLEAN, FOLLOW [226] -> SHIFT BOOLEAN GOTO 69
	expression/L2 = . IDENT, FOLLOW [226] -> SHIFT IDENT GOTO 70
	expression/L2 = . DQSTRING, FOLLOW [226] -> SHIFT DQSTRING GOTO 71
	expression/L2 = . SQSTRING, FOLLOW [226] -> SHIFT SQSTRING GOTO 72
	expression/L2 = . CARDINAL, FOLLOW [226] -> SHIFT CARDINAL GOTO 73
	expression/L2 = . INTEGER, FOLLOW [226] -> SHIFT INTEGER GOTO 74
	expression/L2 = . FLOAT, FOLLOW [226] -> SHIFT FLOAT GOTO 75
	expression/L2 = . "(" expression ")", FOLLOW [226] -> SHIFT '(' GOTO 76
	expression/L9 = . "&" expression, FOLLOW [226] -> SHIFT '&' GOTO 77
	expression/L1 = . "{" expressionlist "}", FOLLOW [226] -> SHIFT '{' GOTO 93
	expression/L1 = . "{" "}", FOLLOW [226] -> SHIFT '{' GOTO 93
	expression/L1 = . "new" typespec ":" expression, FOLLOW [226] -> SHIFT "new" GOTO 84
	expression/L2 = . "null", FOLLOW [226] -> SHIFT "null" GOTO 85
	expression/L9 = . "+" expression, FOLLOW [226] -> SHIFT '+' GOTO 86
	expression/L9 = . "-" expression, FOLLOW [226] -> SHIFT '-' GOTO 87
	expression/L9 = . "~" expression, FOLLOW [226] -> SHIFT '~' GOTO 88
	expression/L9 = . "!" expression, FOLLOW [226] -> SHIFT '!' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [226] -> SHIFT '*' GOTO 90
[78]
	statement/L1 = . typedefinition ";", FOLLOW [94] -> GOTO 62
	functiondefinition = . linkage "function" typespec IDENT callablebody, FOLLOW [94] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [94] -> GOTO 14
	statement/L1 = . functiondefinition, FOLLOW [94] -> GOTO 63
	statement/L1 = "{" . codeblock "}", FOLLOW [94] -> GOTO 160
	codeblock = . statementlist, FOLLOW [16] -> GOTO 65
	statementlist = . statement statementlist, FOLLOW [16] -> GOTO 66
	statement/L1 = . expression ";", FOLLOW [94] -> GOTO 161
	expression/L3 = . expression "=" expression, FOLLOW [171] -> GOTO 161
	expression/L3 = . expression "+=" expression, FOLLOW [171] -> GOTO 161
	expression/L3 = . expression "-=" expression, FOLLOW [171] -> GOTO 161
	expression/L3 = . expression "*=" expression, FOLLOW [171] -> GOTO 161
	expression/L3 = . expression "/=" expression, FOLLOW [171] -> GOTO 161
	expression/L3 = . expression "%=" expression, FOLLOW [171] -> GOTO 161
	expression/L3 = . expression "&&=" expression, FOLLOW [171] -> GOTO 161
	expression/L3 = . expression "||=" expression, FOLLOW [171] -> GOTO 161
	expression/L3 = . expression "&=" expression, FOLLOW [171] -> GOTO 161
	expression/L3 = . expression "|=" expression, FOLLOW [171] -> GOTO 161
	expression/L3 = . expression "<<=" expression, FOLLOW [171] -> GOTO 161
	expression/L3 = . expression ">>=" expression, FOLLOW [171] -> GOTO 161
	expression/L4 = . expression "||" expression, FOLLOW [171] -> GOTO 161
	expression/L5 = . expression "&&" expression, FOLLOW [171] -> GOTO 161
	expression/L6 = . expression "|" expression, FOLLOW [171] -> GOTO 161
	expression/L7 = . expression "^" expression, FOLLOW [171] -> GOTO 161
	expression/L7 = . expression "&" expression, FOLLOW [171] -> GOTO 161
	expression/L8 = . expression "==" expression, FOLLOW [171] -> GOTO 161
	expression/L8 = . expression "!=" expression, FOLLOW [171] -> GOTO 161
	expression/L8 = . expression "<=" expression, FOLLOW [171] -> GOTO 161
	expression/L8 = . expression "<" expression, FOLLOW [171] -> GOTO 161
	expression/L8 = . expression ">=" expression, FOLLOW [171] -> GOTO 161
	expression/L8 = . expression ">" expression, FOLLOW [171] -> GOTO 161
	expression/L9 = . expression "+" expression, FOLLOW [171] -> GOTO 161
	expression/L9 = . expression "-" expression, FOLLOW [171] -> GOTO 161
	expression/L10 = . expression "*" expression, FOLLOW [171] -> GOTO 161
	expression/L10 = . expression "/" expression, FOLLOW [171] -> GOTO 161
	expression/L10 = . expression "%" expression, FOLLOW [171] -> GOTO 161
	expression/L11 = . expression "<<" expression, FOLLOW [171] -> GOTO 161
	expression/L11 = . expression ">>" expression, FOLLOW [171] -> GOTO 161
	expression/L12 = . expression "." IDENT, FOLLOW [171] -> GOTO 161
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [171] -> GOTO 161
	expression/L13 = . expression "(" ")", FOLLOW [171] -> GOTO 161
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [171] -> GOTO 161
	iexpression = . expression indirection IDENT, FOLLOW [171] -> GOTO 161
	expressionlist = . expression "," expressionlist, FOLLOW [16] -> GOTO 161
	expressionlist = . expression, FOLLOW [16] -> GOTO 161
	expression/L12 = . iexpression, FOLLOW [171] -> GOTO 68
	expression/L1 = "{" . expressionlist "}", FOLLOW [171] -> GOTO 162
	expression/L2 = . BOOLEAN, FOLLOW [171] -> SHIFT BOOLEAN GOTO 69
	expression/L2 = . IDENT, FOLLOW [171] -> SHIFT IDENT GOTO 70
	expression/L2 = . DQSTRING, FOLLOW [171] -> SHIFT DQSTRING GOTO 71
	expression/L2 = . SQSTRING, FOLLOW [171] -> SHIFT SQSTRING GOTO 72
	expression/L2 = . CARDINAL, FOLLOW [171] -> SHIFT CARDINAL GOTO 73
	expression/L2 = . INTEGER, FOLLOW [171] -> SHIFT INTEGER GOTO 74
	expression/L2 = . FLOAT, FOLLOW [171] -> SHIFT FLOAT GOTO 75
	expression/L2 = . "(" expression ")", FOLLOW [171] -> SHIFT '(' GOTO 76
	expression/L9 = . "&" expression, FOLLOW [171] -> SHIFT '&' GOTO 77
	typedefinition = . "typedef" typename IDENT, FOLLOW [13] -> SHIFT "typedef" GOTO 19
	statement/L1 = . "{" codeblock "}", FOLLOW [94] -> SHIFT '{' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [171] -> SHIFT '{' GOTO 78
	expression/L1 = . "{" "}", FOLLOW [171] -> SHIFT '{' GOTO 78
	expression/L1 = "{" . "}", FOLLOW [171] -> SHIFT '}' GOTO 163
	linkage = . "private", FOLLOW [58] -> SHIFT "private" GOTO 23
	linkage = . "public", FOLLOW [58] -> SHIFT "public" GOTO 24
	statement/L1 = . "var" variabledefinition ";", FOLLOW [94] -> SHIFT "var" GOTO 79
	statement/L1 = . "return" expression ";", FOLLOW [94] -> SHIFT "return" GOTO 80
	statement/L1 = . "delete" expression ";", FOLLOW [94] -> SHIFT "delete" GOTO 81
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}", FOLLOW [94] -> SHIFT "if" GOTO 82
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}", FOLLOW [94] -> SHIFT "if" GOTO 82
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}", FOLLOW [94] -> SHIFT "while" GOTO 83
	expression/L1 = . "new" typespec ":" expression, FOLLOW [171] -> SHIFT "new" GOTO 84
	expression/L2 = . "null", FOLLOW [171] -> SHIFT "null" GOTO 85
	expression/L9 = . "+" expression, FOLLOW [171] -> SHIFT '+' GOTO 86
	expression/L9 = . "-" expression, FOLLOW [171] -> SHIFT '-' GOTO 87
	expression/L9 = . "~" expression, FOLLOW [171] -> SHIFT '~' GOTO 88
	expression/L9 = . "!" expression, FOLLOW [171] -> SHIFT '!' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [171] -> SHIFT '*' GOTO 90
	statementlist = ., FOLLOW [16] -> REDUCE statementlist #0
	linkage = . (30), FOLLOW [58] -> REDUCE linkage #0 CALL linkage {linkage="internal",attributes="#0 nounwind"}
[79]
	typespec/L1 = . typename, FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [9] -> GOTO 8
	variabledefinition = . typespec IDENT, FOLLOW [13] -> GOTO 9
	variabledefinition = . typespec IDENT "=" expression, FOLLOW [13] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression, FOLLOW [13] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]", FOLLOW [13] -> GOTO 9
	statement/L1 = "var" . variabledefinition ";", FOLLOW [94] -> GOTO 164
	typename/L1 = . IDENT, FOLLOW [59] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [59] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
[80]
	statement/L1 = "return" . expression ";", FOLLOW [94] -> GOTO 165
	expression/L3 = . expression "=" expression, FOLLOW [93] -> GOTO 165
	expression/L3 = . expression "+=" expression, FOLLOW [93] -> GOTO 165
	expression/L3 = . expression "-=" expression, FOLLOW [93] -> GOTO 165
	expression/L3 = . expression "*=" expression, FOLLOW [93] -> GOTO 165
	expression/L3 = . expression "/=" expression, FOLLOW [93] -> GOTO 165
	expression/L3 = . expression "%=" expression, FOLLOW [93] -> GOTO 165
	expression/L3 = . expression "&&=" expression, FOLLOW [93] -> GOTO 165
	expression/L3 = . expression "||=" expression, FOLLOW [93] -> GOTO 165
	expression/L3 = . expression "&=" expression, FOLLOW [93] -> GOTO 165
	expression/L3 = . expression "|=" expression, FOLLOW [93] -> GOTO 165
	expression/L3 = . expression "<<=" expression, FOLLOW [93] -> GOTO 165
	expression/L3 = . expression ">>=" expression, FOLLOW [93] -> GOTO 165
	expression/L4 = . expression "||" expression, FOLLOW [93] -> GOTO 165
	expression/L5 = . expression "&&" expression, FOLLOW [93] -> GOTO 165
	expression/L6 = . expression "|" expression, FOLLOW [93] -> GOTO 165
	expression/L7 = . expression "^" expression, FOLLOW [93] -> GOTO 165
	expression/L7 = . expression "&" expression, FOLLOW [93] -> GOTO 165
	expression/L8 = . expression "==" expression, FOLLOW [93] -> GOTO 165
	expression/L8 = . expression "!=" expression, FOLLOW [93] -> GOTO 165
	expression/L8 = . expression "<=" expression, FOLLOW [93] -> GOTO 165
	expression/L8 = . expression "<" expression, FOLLOW [93] -> GOTO 165
	expression/L8 = . expression ">=" expression, FOLLOW [93] -> GOTO 165
	expression/L8 = . expression ">" expression, FOLLOW [93] -> GOTO 165
	expression/L9 = . expression "+" expression, FOLLOW [93] -> GOTO 165
	expression/L9 = . expression "-" expression, FOLLOW [93] -> GOTO 165
	expression/L10 = . expression "*" expression, FOLLOW [93] -> GOTO 165
	expression/L10 = . expression "/" expression, FOLLOW [93] -> GOTO 165
	expression/L10 = . expression "%" expression, FOLLOW [93] -> GOTO 165
	expression/L11 = . expression "<<" expression, FOLLOW [93] -> GOTO 165
	expression/L11 = . expression ">>" expression, FOLLOW [93] -> GOTO 165
	expression/L12 = . expression "." IDENT, FOLLOW [93] -> GOTO 165
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [93] -> GOTO 165
	expression/L13 = . expression "(" ")", FOLLOW [93] -> GOTO 165
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [93] -> GOTO 165
	iexpression = . expression indirection IDENT, FOLLOW [93] -> GOTO 165
	expression/L12 = . iexpression, FOLLOW [93] -> GOTO 68
	expression/L2 = . BOOLEAN, FOLLOW [93] -> SHIFT BOOLEAN GOTO 69
	expression/L2 = . IDENT, FOLLOW [93] -> SHIFT IDENT GOTO 70
	expression/L2 = . DQSTRING, FOLLOW [93] -> SHIFT DQSTRING GOTO 71
	expression/L2 = . SQSTRING, FOLLOW [93] -> SHIFT SQSTRING GOTO 72
	expression/L2 = . CARDINAL, FOLLOW [93] -> SHIFT CARDINAL GOTO 73
	expression/L2 = . INTEGER, FOLLOW [93] -> SHIFT INTEGER GOTO 74
	expression/L2 = . FLOAT, FOLLOW [93] -> SHIFT FLOAT GOTO 75
	expression/L2 = . "(" expression ")", FOLLOW [93] -> SHIFT '(' GOTO 76
	expression/L9 = . "&" expression, FOLLOW [93] -> SHIFT '&' GOTO 77
	expression/L1 = . "{" expressionlist "}", FOLLOW [93] -> SHIFT '{' GOTO 93
	expression/L1 = . "{" "}", FOLLOW [93] -> SHIFT '{' GOTO 93
	expression/L1 = . "new" typespec ":" expression, FOLLOW [93] -> SHIFT "new" GOTO 84
	expression/L2 = . "null", FOLLOW [93] -> SHIFT "null" GOTO 85
	expression/L9 = . "+" expression, FOLLOW [93] -> SHIFT '+' GOTO 86
	expression/L9 = . "-" expression, FOLLOW [93] -> SHIFT '-' GOTO 87
	expression/L9 = . "~" expression, FOLLOW [93] -> SHIFT '~' GOTO 88
	expression/L9 = . "!" expression, FOLLOW [93] -> SHIFT '!' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [93] -> SHIFT '*' GOTO 90
[81]
	statement/L1 = "delete" . expression ";", FOLLOW [94] -> GOTO 166
	expression/L3 = . expression "=" expression, FOLLOW [93] -> GOTO 166
	expression/L3 = . expression "+=" expression, FOLLOW [93] -> GOTO 166
	expression/L3 = . expression "-=" expression, FOLLOW [93] -> GOTO 166
	expression/L3 = . expression "*=" expression, FOLLOW [93] -> GOTO 166
	expression/L3 = . expression "/=" expression, FOLLOW [93] -> GOTO 166
	expression/L3 = . expression "%=" expression, FOLLOW [93] -> GOTO 166
	expression/L3 = . expression "&&=" expression, FOLLOW [93] -> GOTO 166
	expression/L3 = . expression "||=" expression, FOLLOW [93] -> GOTO 166
	expression/L3 = . expression "&=" expression, FOLLOW [93] -> GOTO 166
	expression/L3 = . expression "|=" expression, FOLLOW [93] -> GOTO 166
	expression/L3 = . expression "<<=" expression, FOLLOW [93] -> GOTO 166
	expression/L3 = . expression ">>=" expression, FOLLOW [93] -> GOTO 166
	expression/L4 = . expression "||" expression, FOLLOW [93] -> GOTO 166
	expression/L5 = . expression "&&" expression, FOLLOW [93] -> GOTO 166
	expression/L6 = . expression "|" expression, FOLLOW [93] -> GOTO 166
	expression/L7 = . expression "^" expression, FOLLOW [93] -> GOTO 166
	expression/L7 = . expression "&" expression, FOLLOW [93] -> GOTO 166
	expression/L8 = . expression "==" expression, FOLLOW [93] -> GOTO 166
	expression/L8 = . expression "!=" expression, FOLLOW [93] -> GOTO 166
	expression/L8 = . expression "<=" expression, FOLLOW [93] -> GOTO 166
	expression/L8 = . expression "<" expression, FOLLOW [93] -> GOTO 166
	expression/L8 = . expression ">=" expression, FOLLOW [93] -> GOTO 166
	expression/L8 = . expression ">" expression, FOLLOW [93] -> GOTO 166
	expression/L9 = . expression "+" expression, FOLLOW [93] -> GOTO 166
	expression/L9 = . expression "-" expression, FOLLOW [93] -> GOTO 166
	expression/L10 = . expression "*" expression, FOLLOW [93] -> GOTO 166
	expression/L10 = . expression "/" expression, FOLLOW [93] -> GOTO 166
	expression/L10 = . expression "%" expression, FOLLOW [93] -> GOTO 166
	expression/L11 = . expression "<<" expression, FOLLOW [93] -> GOTO 166
	expression/L11 = . expression ">>" expression, FOLLOW [93] -> GOTO 166
	expression/L12 = . expression "." IDENT, FOLLOW [93] -> GOTO 166
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [93] -> GOTO 166
	expression/L13 = . expression "(" ")", FOLLOW [93] -> GOTO 166
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [93] -> GOTO 166
	iexpression = . expression indirection IDENT, FOLLOW [93] -> GOTO 166
	expression/L12 = . iexpression, FOLLOW [93] -> GOTO 68
	expression/L2 = . BOOLEAN, FOLLOW [93] -> SHIFT BOOLEAN GOTO 69
	expression/L2 = . IDENT, FOLLOW [93] -> SHIFT IDENT GOTO 70
	expression/L2 = . DQSTRING, FOLLOW [93] -> SHIFT DQSTRING GOTO 71
	expression/L2 = . SQSTRING, FOLLOW [93] -> SHIFT SQSTRING GOTO 72
	expression/L2 = . CARDINAL, FOLLOW [93] -> SHIFT CARDINAL GOTO 73
	expression/L2 = . INTEGER, FOLLOW [93] -> SHIFT INTEGER GOTO 74
	expression/L2 = . FLOAT, FOLLOW [93] -> SHIFT FLOAT GOTO 75
	expression/L2 = . "(" expression ")", FOLLOW [93] -> SHIFT '(' GOTO 76
	expression/L9 = . "&" expression, FOLLOW [93] -> SHIFT '&' GOTO 77
	expression/L1 = . "{" expressionlist "}", FOLLOW [93] -> SHIFT '{' GOTO 93
	expression/L1 = . "{" "}", FOLLOW [93] -> SHIFT '{' GOTO 93
	expression/L1 = . "new" typespec ":" expression, FOLLOW [93] -> SHIFT "new" GOTO 84
	expression/L2 = . "null", FOLLOW [93] -> SHIFT "null" GOTO 85
	expression/L9 = . "+" expression, FOLLOW [93] -> SHIFT '+' GOTO 86
	expression/L9 = . "-" expression, FOLLOW [93] -> SHIFT '-' GOTO 87
	expression/L9 = . "~" expression, FOLLOW [93] -> SHIFT '~' GOTO 88
	expression/L9 = . "!" expression, FOLLOW [93] -> SHIFT '!' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [93] -> SHIFT '*' GOTO 90
[82]
	statement/L1 = "if" . "(" expression ")" "{" codeblock "}", FOLLOW [94] -> SHIFT '(' GOTO 167
	statement/L1 = "if" . "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}", FOLLOW [94] -> SHIFT '(' GOTO 167
[83]
	statement/L1 = "while" . "(" expression ")" "{" codeblock "}", FOLLOW [94] -> SHIFT '(' GOTO 168
[84]
	typespec/L1 = . typename, FOLLOW [23] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [23] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [23] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [23] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [23] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [23] -> GOTO 8
	expression/L1 = "new" . typespec ":" expression, FOLLOW [226] -> GOTO 169
	typename/L1 = . IDENT, FOLLOW [172] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [172] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [23] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [23] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [23] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [23] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [23] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [23] -> SHIFT "const" GOTO 18
[85]
	expression/L2 = "null" . (59), FOLLOW [226] -> REDUCE expression #1 CALL null "constexpr float"
[86]
	expression/L3 = . expression "=" expression, FOLLOW [226] -> GOTO 170
	expression/L3 = . expression "+=" expression, FOLLOW [226] -> GOTO 170
	expression/L3 = . expression "-=" expression, FOLLOW [226] -> GOTO 170
	expression/L3 = . expression "*=" expression, FOLLOW [226] -> GOTO 170
	expression/L3 = . expression "/=" expression, FOLLOW [226] -> GOTO 170
	expression/L3 = . expression "%=" expression, FOLLOW [226] -> GOTO 170
	expression/L3 = . expression "&&=" expression, FOLLOW [226] -> GOTO 170
	expression/L3 = . expression "||=" expression, FOLLOW [226] -> GOTO 170
	expression/L3 = . expression "&=" expression, FOLLOW [226] -> GOTO 170
	expression/L3 = . expression "|=" expression, FOLLOW [226] -> GOTO 170
	expression/L3 = . expression "<<=" expression, FOLLOW [226] -> GOTO 170
	expression/L3 = . expression ">>=" expression, FOLLOW [226] -> GOTO 170
	expression/L4 = . expression "||" expression, FOLLOW [226] -> GOTO 170
	expression/L5 = . expression "&&" expression, FOLLOW [226] -> GOTO 170
	expression/L6 = . expression "|" expression, FOLLOW [226] -> GOTO 170
	expression/L7 = . expression "^" expression, FOLLOW [226] -> GOTO 170
	expression/L7 = . expression "&" expression, FOLLOW [226] -> GOTO 170
	expression/L8 = . expression "==" expression, FOLLOW [226] -> GOTO 170
	expression/L8 = . expression "!=" expression, FOLLOW [226] -> GOTO 170
	expression/L8 = . expression "<=" expression, FOLLOW [226] -> GOTO 170
	expression/L8 = . expression "<" expression, FOLLOW [226] -> GOTO 170
	expression/L8 = . expression ">=" expression, FOLLOW [226] -> GOTO 170
	expression/L8 = . expression ">" expression, FOLLOW [226] -> GOTO 170
	expression/L9 = . expression "+" expression, FOLLOW [226] -> GOTO 170
	expression/L9 = . expression "-" expression, FOLLOW [226] -> GOTO 170
	expression/L9 = "+" . expression, FOLLOW [226] -> GOTO 170
	expression/L10 = . expression "*" expression, FOLLOW [226] -> GOTO 170
	expression/L10 = . expression "/" expression, FOLLOW [226] -> GOTO 170
	expression/L10 = . expression "%" expression, FOLLOW [226] -> GOTO 170
	expression/L11 = . expression "<<" expression, FOLLOW [226] -> GOTO 170
	expression/L11 = . expression ">>" expression, FOLLOW [226] -> GOTO 170
	expression/L12 = . expression "." IDENT, FOLLOW [226] -> GOTO 170
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [226] -> GOTO 170
	expression/L13 = . expression "(" ")", FOLLOW [226] -> GOTO 170
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [226] -> GOTO 170
	iexpression = . expression indirection IDENT, FOLLOW [226] -> GOTO 170
	expression/L12 = . iexpression, FOLLOW [226] -> GOTO 68
	expression/L2 = . BOOLEAN, FOLLOW [226] -> SHIFT BOOLEAN GOTO 69
	expression/L2 = . IDENT, FOLLOW [226] -> SHIFT IDENT GOTO 70
	expression/L2 = . DQSTRING, FOLLOW [226] -> SHIFT DQSTRING GOTO 71
	expression/L2 = . SQSTRING, FOLLOW [226] -> SHIFT SQSTRING GOTO 72
	expression/L2 = . CARDINAL, FOLLOW [226] -> SHIFT CARDINAL GOTO 73
	expression/L2 = . INTEGER, FOLLOW [226] -> SHIFT INTEGER GOTO 74
	expression/L2 = . FLOAT, FOLLOW [226] -> SHIFT FLOAT GOTO 75
	expression/L2 = . "(" expression ")", FOLLOW [226] -> SHIFT '(' GOTO 76
	expression/L9 = . "&" expression, FOLLOW [226] -> SHIFT '&' GOTO 77
	expression/L1 = . "{" expressionlist "}", FOLLOW [226] -> SHIFT '{' GOTO 93
	expression/L1 = . "{" "}", FOLLOW [226] -> SHIFT '{' GOTO 93
	expression/L1 = . "new" typespec ":" expression, FOLLOW [226] -> SHIFT "new" GOTO 84
	expression/L2 = . "null", FOLLOW [226] -> SHIFT "null" GOTO 85
	expression/L9 = . "+" expression, FOLLOW [226] -> SHIFT '+' GOTO 86
	expression/L9 = . "-" expression, FOLLOW [226] -> SHIFT '-' GOTO 87
	expression/L9 = . "~" expression, FOLLOW [226] -> SHIFT '~' GOTO 88
	expression/L9 = . "!" expression, FOLLOW [226] -> SHIFT '!' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [226] -> SHIFT '*' GOTO 90
[87]
	expression/L3 = . expression "=" expression, FOLLOW [226] -> GOTO 171
	expression/L3 = . expression "+=" expression, FOLLOW [226] -> GOTO 171
	expression/L3 = . expression "-=" expression, FOLLOW [226] -> GOTO 171
	expression/L3 = . expression "*=" expression, FOLLOW [226] -> GOTO 171
	expression/L3 = . expression "/=" expression, FOLLOW [226] -> GOTO 171
	expression/L3 = . expression "%=" expression, FOLLOW [226] -> GOTO 171
	expression/L3 = . expression "&&=" expression, FOLLOW [226] -> GOTO 171
	expression/L3 = . expression "||=" expression, FOLLOW [226] -> GOTO 171
	expression/L3 = . expression "&=" expression, FOLLOW [226] -> GOTO 171
	expression/L3 = . expression "|=" expression, FOLLOW [226] -> GOTO 171
	expression/L3 = . expression "<<=" expression, FOLLOW [226] -> GOTO 171
	expression/L3 = . expression ">>=" expression, FOLLOW [226] -> GOTO 171
	expression/L4 = . expression "||" expression, FOLLOW [226] -> GOTO 171
	expression/L5 = . expression "&&" expression, FOLLOW [226] -> GOTO 171
	expression/L6 = . expression "|" expression, FOLLOW [226] -> GOTO 171
	expression/L7 = . expression "^" expression, FOLLOW [226] -> GOTO 171
	expression/L7 = . expression "&" expression, FOLLOW [226] -> GOTO 171
	expression/L8 = . expression "==" expression, FOLLOW [226] -> GOTO 171
	expression/L8 = . expression "!=" expression, FOLLOW [226] -> GOTO 171
	expression/L8 = . expression "<=" expression, FOLLOW [226] -> GOTO 171
	expression/L8 = . expression "<" expression, FOLLOW [226] -> GOTO 171
	expression/L8 = . expression ">=" expression, FOLLOW [226] -> GOTO 171
	expression/L8 = . expression ">" expression, FOLLOW [226] -> GOTO 171
	expression/L9 = . expression "+" expression, FOLLOW [226] -> GOTO 171
	expression/L9 = . expression "-" expression, FOLLOW [226] -> GOTO 171
	expression/L9 = "-" . expression, FOLLOW [226] -> GOTO 171
	expression/L10 = . expression "*" expression, FOLLOW [226] -> GOTO 171
	expression/L10 = . expression "/" expression, FOLLOW [226] -> GOTO 171
	expression/L10 = . expression "%" expression, FOLLOW [226] -> GOTO 171
	expression/L11 = . expression "<<" expression, FOLLOW [226] -> GOTO 171
	expression/L11 = . expression ">>" expression, FOLLOW [226] -> GOTO 171
	expression/L12 = . expression "." IDENT, FOLLOW [226] -> GOTO 171
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [226] -> GOTO 171
	expression/L13 = . expression "(" ")", FOLLOW [226] -> GOTO 171
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [226] -> GOTO 171
	iexpression = . expression indirection IDENT, FOLLOW [226] -> GOTO 171
	expression/L12 = . iexpression, FOLLOW [226] -> GOTO 68
	expression/L2 = . BOOLEAN, FOLLOW [226] -> SHIFT BOOLEAN GOTO 69
	expression/L2 = . IDENT, FOLLOW [226] -> SHIFT IDENT GOTO 70
	expression/L2 = . DQSTRING, FOLLOW [226] -> SHIFT DQSTRING GOTO 71
	expression/L2 = . SQSTRING, FOLLOW [226] -> SHIFT SQSTRING GOTO 72
	expression/L2 = . CARDINAL, FOLLOW [226] -> SHIFT CARDINAL GOTO 73
	expression/L2 = . INTEGER, FOLLOW [226] -> SHIFT INTEGER GOTO 74
	expression/L2 = . FLOAT, FOLLOW [226] -> SHIFT FLOAT GOTO 75
	expression/L2 = . "(" expression ")", FOLLOW [226] -> SHIFT '(' GOTO 76
	expression/L9 = . "&" expression, FOLLOW [226] -> SHIFT '&' GOTO 77
	expression/L1 = . "{" expressionlist "}", FOLLOW [226] -> SHIFT '{' GOTO 93
	expression/L1 = . "{" "}", FOLLOW [226] -> SHIFT '{' GOTO 93
	expression/L1 = . "new" typespec ":" expression, FOLLOW [226] -> SHIFT "new" GOTO 84
	expression/L2 = . "null", FOLLOW [226] -> SHIFT "null" GOTO 85
	expression/L9 = . "+" expression, FOLLOW [226] -> SHIFT '+' GOTO 86
	expression/L9 = . "-" expression, FOLLOW [226] -> SHIFT '-' GOTO 87
	expression/L9 = . "~" expression, FOLLOW [226] -> SHIFT '~' GOTO 88
	expression/L9 = . "!" expression, FOLLOW [226] -> SHIFT '!' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [226] -> SHIFT '*' GOTO 90
[88]
	expression/L3 = . expression "=" expression, FOLLOW [226] -> GOTO 172
	expression/L3 = . expression "+=" expression, FOLLOW [226] -> GOTO 172
	expression/L3 = . expression "-=" expression, FOLLOW [226] -> GOTO 172
	expression/L3 = . expression "*=" expression, FOLLOW [226] -> GOTO 172
	expression/L3 = . expression "/=" expression, FOLLOW [226] -> GOTO 172
	expression/L3 = . expression "%=" expression, FOLLOW [226] -> GOTO 172
	expression/L3 = . expression "&&=" expression, FOLLOW [226] -> GOTO 172
	expression/L3 = . expression "||=" expression, FOLLOW [226] -> GOTO 172
	expression/L3 = . expression "&=" expression, FOLLOW [226] -> GOTO 172
	expression/L3 = . expression "|=" expression, FOLLOW [226] -> GOTO 172
	expression/L3 = . expression "<<=" expression, FOLLOW [226] -> GOTO 172
	expression/L3 = . expression ">>=" expression, FOLLOW [226] -> GOTO 172
	expression/L4 = . expression "||" expression, FOLLOW [226] -> GOTO 172
	expression/L5 = . expression "&&" expression, FOLLOW [226] -> GOTO 172
	expression/L6 = . expression "|" expression, FOLLOW [226] -> GOTO 172
	expression/L7 = . expression "^" expression, FOLLOW [226] -> GOTO 172
	expression/L7 = . expression "&" expression, FOLLOW [226] -> GOTO 172
	expression/L8 = . expression "==" expression, FOLLOW [226] -> GOTO 172
	expression/L8 = . expression "!=" expression, FOLLOW [226] -> GOTO 172
	expression/L8 = . expression "<=" expression, FOLLOW [226] -> GOTO 172
	expression/L8 = . expression "<" expression, FOLLOW [226] -> GOTO 172
	expression/L8 = . expression ">=" expression, FOLLOW [226] -> GOTO 172
	expression/L8 = . expression ">" expression, FOLLOW [226] -> GOTO 172
	expression/L9 = . expression "+" expression, FOLLOW [226] -> GOTO 172
	expression/L9 = . expression "-" expression, FOLLOW [226] -> GOTO 172
	expression/L9 = "~" . expression, FOLLOW [226] -> GOTO 172
	expression/L10 = . expression "*" expression, FOLLOW [226] -> GOTO 172
	expression/L10 = . expression "/" expression, FOLLOW [226] -> GOTO 172
	expression/L10 = . expression "%" expression, FOLLOW [226] -> GOTO 172
	expression/L11 = . expression "<<" expression, FOLLOW [226] -> GOTO 172
	expression/L11 = . expression ">>" expression, FOLLOW [226] -> GOTO 172
	expression/L12 = . expression "." IDENT, FOLLOW [226] -> GOTO 172
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [226] -> GOTO 172
	expression/L13 = . expression "(" ")", FOLLOW [226] -> GOTO 172
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [226] -> GOTO 172
	iexpression = . expression indirection IDENT, FOLLOW [226] -> GOTO 172
	expression/L12 = . iexpression, FOLLOW [226] -> GOTO 68
	expression/L2 = . BOOLEAN, FOLLOW [226] -> SHIFT BOOLEAN GOTO 69
	expression/L2 = . IDENT, FOLLOW [226] -> SHIFT IDENT GOTO 70
	expression/L2 = . DQSTRING, FOLLOW [226] -> SHIFT DQSTRING GOTO 71
	expression/L2 = . SQSTRING, FOLLOW [226] -> SHIFT SQSTRING GOTO 72
	expression/L2 = . CARDINAL, FOLLOW [226] -> SHIFT CARDINAL GOTO 73
	expression/L2 = . INTEGER, FOLLOW [226] -> SHIFT INTEGER GOTO 74
	expression/L2 = . FLOAT, FOLLOW [226] -> SHIFT FLOAT GOTO 75
	expression/L2 = . "(" expression ")", FOLLOW [226] -> SHIFT '(' GOTO 76
	expression/L9 = . "&" expression, FOLLOW [226] -> SHIFT '&' GOTO 77
	expression/L1 = . "{" expressionlist "}", FOLLOW [226] -> SHIFT '{' GOTO 93
	expression/L1 = . "{" "}", FOLLOW [226] -> SHIFT '{' GOTO 93
	expression/L1 = . "new" typespec ":" expression, FOLLOW [226] -> SHIFT "new" GOTO 84
	expression/L2 = . "null", FOLLOW [226] -> SHIFT "null" GOTO 85
	expression/L9 = . "+" expression, FOLLOW [226] -> SHIFT '+' GOTO 86
	expression/L9 = . "-" expression, FOLLOW [226] -> SHIFT '-' GOTO 87
	expression/L9 = . "~" expression, FOLLOW [226] -> SHIFT '~' GOTO 88
	expression/L9 = . "!" expression, FOLLOW [226] -> SHIFT '!' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [226] -> SHIFT '*' GOTO 90
[89]
	expression/L3 = . expression "=" expression, FOLLOW [226] -> GOTO 173
	expression/L3 = . expression "+=" expression, FOLLOW [226] -> GOTO 173
	expression/L3 = . expression "-=" expression, FOLLOW [226] -> GOTO 173
	expression/L3 = . expression "*=" expression, FOLLOW [226] -> GOTO 173
	expression/L3 = . expression "/=" expression, FOLLOW [226] -> GOTO 173
	expression/L3 = . expression "%=" expression, FOLLOW [226] -> GOTO 173
	expression/L3 = . expression "&&=" expression, FOLLOW [226] -> GOTO 173
	expression/L3 = . expression "||=" expression, FOLLOW [226] -> GOTO 173
	expression/L3 = . expression "&=" expression, FOLLOW [226] -> GOTO 173
	expression/L3 = . expression "|=" expression, FOLLOW [226] -> GOTO 173
	expression/L3 = . expression "<<=" expression, FOLLOW [226] -> GOTO 173
	expression/L3 = . expression ">>=" expression, FOLLOW [226] -> GOTO 173
	expression/L4 = . expression "||" expression, FOLLOW [226] -> GOTO 173
	expression/L5 = . expression "&&" expression, FOLLOW [226] -> GOTO 173
	expression/L6 = . expression "|" expression, FOLLOW [226] -> GOTO 173
	expression/L7 = . expression "^" expression, FOLLOW [226] -> GOTO 173
	expression/L7 = . expression "&" expression, FOLLOW [226] -> GOTO 173
	expression/L8 = . expression "==" expression, FOLLOW [226] -> GOTO 173
	expression/L8 = . expression "!=" expression, FOLLOW [226] -> GOTO 173
	expression/L8 = . expression "<=" expression, FOLLOW [226] -> GOTO 173
	expression/L8 = . expression "<" expression, FOLLOW [226] -> GOTO 173
	expression/L8 = . expression ">=" expression, FOLLOW [226] -> GOTO 173
	expression/L8 = . expression ">" expression, FOLLOW [226] -> GOTO 173
	expression/L9 = . expression "+" expression, FOLLOW [226] -> GOTO 173
	expression/L9 = . expression "-" expression, FOLLOW [226] -> GOTO 173
	expression/L9 = "!" . expression, FOLLOW [226] -> GOTO 173
	expression/L10 = . expression "*" expression, FOLLOW [226] -> GOTO 173
	expression/L10 = . expression "/" expression, FOLLOW [226] -> GOTO 173
	expression/L10 = . expression "%" expression, FOLLOW [226] -> GOTO 173
	expression/L11 = . expression "<<" expression, FOLLOW [226] -> GOTO 173
	expression/L11 = . expression ">>" expression, FOLLOW [226] -> GOTO 173
	expression/L12 = . expression "." IDENT, FOLLOW [226] -> GOTO 173
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [226] -> GOTO 173
	expression/L13 = . expression "(" ")", FOLLOW [226] -> GOTO 173
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [226] -> GOTO 173
	iexpression = . expression indirection IDENT, FOLLOW [226] -> GOTO 173
	expression/L12 = . iexpression, FOLLOW [226] -> GOTO 68
	expression/L2 = . BOOLEAN, FOLLOW [226] -> SHIFT BOOLEAN GOTO 69
	expression/L2 = . IDENT, FOLLOW [226] -> SHIFT IDENT GOTO 70
	expression/L2 = . DQSTRING, FOLLOW [226] -> SHIFT DQSTRING GOTO 71
	expression/L2 = . SQSTRING, FOLLOW [226] -> SHIFT SQSTRING GOTO 72
	expression/L2 = . CARDINAL, FOLLOW [226] -> SHIFT CARDINAL GOTO 73
	expression/L2 = . INTEGER, FOLLOW [226] -> SHIFT INTEGER GOTO 74
	expression/L2 = . FLOAT, FOLLOW [226] -> SHIFT FLOAT GOTO 75
	expression/L2 = . "(" expression ")", FOLLOW [226] -> SHIFT '(' GOTO 76
	expression/L9 = . "&" expression, FOLLOW [226] -> SHIFT '&' GOTO 77
	expression/L1 = . "{" expressionlist "}", FOLLOW [226] -> SHIFT '{' GOTO 93
	expression/L1 = . "{" "}", FOLLOW [226] -> SHIFT '{' GOTO 93
	expression/L1 = . "new" typespec ":" expression, FOLLOW [226] -> SHIFT "new" GOTO 84
	expression/L2 = . "null", FOLLOW [226] -> SHIFT "null" GOTO 85
	expression/L9 = . "+" expression, FOLLOW [226] -> SHIFT '+' GOTO 86
	expression/L9 = . "-" expression, FOLLOW [226] -> SHIFT '-' GOTO 87
	expression/L9 = . "~" expression, FOLLOW [226] -> SHIFT '~' GOTO 88
	expression/L9 = . "!" expression, FOLLOW [226] -> SHIFT '!' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [226] -> SHIFT '*' GOTO 90
[90]
	expression/L3 = . expression "=" expression, FOLLOW [226] -> GOTO 174
	expression/L3 = . expression "+=" expression, FOLLOW [226] -> GOTO 174
	expression/L3 = . expression "-=" expression, FOLLOW [226] -> GOTO 174
	expression/L3 = . expression "*=" expression, FOLLOW [226] -> GOTO 174
	expression/L3 = . expression "/=" expression, FOLLOW [226] -> GOTO 174
	expression/L3 = . expression "%=" expression, FOLLOW [226] -> GOTO 174
	expression/L3 = . expression "&&=" expression, FOLLOW [226] -> GOTO 174
	expression/L3 = . expression "||=" expression, FOLLOW [226] -> GOTO 174
	expression/L3 = . expression "&=" expression, FOLLOW [226] -> GOTO 174
	expression/L3 = . expression "|=" expression, FOLLOW [226] -> GOTO 174
	expression/L3 = . expression "<<=" expression, FOLLOW [226] -> GOTO 174
	expression/L3 = . expression ">>=" expression, FOLLOW [226] -> GOTO 174
	expression/L4 = . expression "||" expression, FOLLOW [226] -> GOTO 174
	expression/L5 = . expression "&&" expression, FOLLOW [226] -> GOTO 174
	expression/L6 = . expression "|" expression, FOLLOW [226] -> GOTO 174
	expression/L7 = . expression "^" expression, FOLLOW [226] -> GOTO 174
	expression/L7 = . expression "&" expression, FOLLOW [226] -> GOTO 174
	expression/L8 = . expression "==" expression, FOLLOW [226] -> GOTO 174
	expression/L8 = . expression "!=" expression, FOLLOW [226] -> GOTO 174
	expression/L8 = . expression "<=" expression, FOLLOW [226] -> GOTO 174
	expression/L8 = . expression "<" expression, FOLLOW [226] -> GOTO 174
	expression/L8 = . expression ">=" expression, FOLLOW [226] -> GOTO 174
	expression/L8 = . expression ">" expression, FOLLOW [226] -> GOTO 174
	expression/L9 = . expression "+" expression, FOLLOW [226] -> GOTO 174
	expression/L9 = . expression "-" expression, FOLLOW [226] -> GOTO 174
	expression/L10 = . expression "*" expression, FOLLOW [226] -> GOTO 174
	expression/L10 = . expression "/" expression, FOLLOW [226] -> GOTO 174
	expression/L10 = . expression "%" expression, FOLLOW [226] -> GOTO 174
	expression/L11 = . expression "<<" expression, FOLLOW [226] -> GOTO 174
	expression/L11 = . expression ">>" expression, FOLLOW [226] -> GOTO 174
	expression/L12 = . expression "." IDENT, FOLLOW [226] -> GOTO 174
	expression/L12 = "*" . expression, FOLLOW [226] -> GOTO 174
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [226] -> GOTO 174
	expression/L13 = . expression "(" ")", FOLLOW [226] -> GOTO 174
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [226] -> GOTO 174
	iexpression = . expression indirection IDENT, FOLLOW [226] -> GOTO 174
	expression/L12 = . iexpression, FOLLOW [226] -> GOTO 68
	expression/L2 = . BOOLEAN, FOLLOW [226] -> SHIFT BOOLEAN GOTO 69
	expression/L2 = . IDENT, FOLLOW [226] -> SHIFT IDENT GOTO 70
	expression/L2 = . DQSTRING, FOLLOW [226] -> SHIFT DQSTRING GOTO 71
	expression/L2 = . SQSTRING, FOLLOW [226] -> SHIFT SQSTRING GOTO 72
	expression/L2 = . CARDINAL, FOLLOW [226] -> SHIFT CARDINAL GOTO 73
	expression/L2 = . INTEGER, FOLLOW [226] -> SHIFT INTEGER GOTO 74
	expression/L2 = . FLOAT, FOLLOW [226] -> SHIFT FLOAT GOTO 75
	expression/L2 = . "(" expression ")", FOLLOW [226] -> SHIFT '(' GOTO 76
	expression/L9 = . "&" expression, FOLLOW [226] -> SHIFT '&' GOTO 77
	expression/L1 = . "{" expressionlist "}", FOLLOW [226] -> SHIFT '{' GOTO 93
	expression/L1 = . "{" "}", FOLLOW [226] -> SHIFT '{' GOTO 93
	expression/L1 = . "new" typespec ":" expression, FOLLOW [226] -> SHIFT "new" GOTO 84
	expression/L2 = . "null", FOLLOW [226] -> SHIFT "null" GOTO 85
	expression/L9 = . "+" expression, FOLLOW [226] -> SHIFT '+' GOTO 86
	expression/L9 = . "-" expression, FOLLOW [226] -> SHIFT '-' GOTO 87
	expression/L9 = . "~" expression, FOLLOW [226] -> SHIFT '~' GOTO 88
	expression/L9 = . "!" expression, FOLLOW [226] -> SHIFT '!' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [226] -> SHIFT '*' GOTO 90
[91]
	typespec/L1 = typename "^" "^" "&" . (22), FOLLOW [238] -> REDUCE typespec #4 CALL typespec "^^&"
[92]
	iexpression = expression . indirection IDENT, FOLLOW [93] -> GOTO 122
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [93] -> SHIFT '(' GOTO 123
	expression/L13 = expression . "(" ")", FOLLOW [93] -> SHIFT '(' GOTO 123
	expression/L7 = expression . "&" expression, FOLLOW [93] -> SHIFT '&' GOTO 125
	expression/L7 = expression . "^" expression, FOLLOW [93] -> SHIFT '^' GOTO 126
	expression/L3 = expression . "=" expression, FOLLOW [93] -> SHIFT '=' GOTO 127
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [93] -> SHIFT '[' GOTO 128
	expression/L3 = expression . "+=" expression, FOLLOW [93] -> SHIFT "+=" GOTO 129
	expression/L3 = expression . "-=" expression, FOLLOW [93] -> SHIFT "-=" GOTO 130
	expression/L3 = expression . "*=" expression, FOLLOW [93] -> SHIFT "*=" GOTO 131
	expression/L3 = expression . "/=" expression, FOLLOW [93] -> SHIFT "/=" GOTO 132
	expression/L3 = expression . "%=" expression, FOLLOW [93] -> SHIFT "%=" GOTO 133
	expression/L3 = expression . "&&=" expression, FOLLOW [93] -> SHIFT "&&=" GOTO 134
	expression/L3 = expression . "||=" expression, FOLLOW [93] -> SHIFT "||=" GOTO 135
	expression/L3 = expression . "&=" expression, FOLLOW [93] -> SHIFT "&=" GOTO 136
	expression/L3 = expression . "|=" expression, FOLLOW [93] -> SHIFT "|=" GOTO 137
	expression/L3 = expression . "<<=" expression, FOLLOW [93] -> SHIFT "<<=" GOTO 138
	expression/L3 = expression . ">>=" expression, FOLLOW [93] -> SHIFT ">>=" GOTO 139
	expression/L4 = expression . "||" expression, FOLLOW [93] -> SHIFT "||" GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [93] -> SHIFT "&&" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [93] -> SHIFT '|' GOTO 142
	expression/L8 = expression . "==" expression, FOLLOW [93] -> SHIFT "==" GOTO 143
	expression/L8 = expression . "!=" expression, FOLLOW [93] -> SHIFT "!=" GOTO 144
	expression/L8 = expression . "<=" expression, FOLLOW [93] -> SHIFT "<=" GOTO 145
	expression/L8 = expression . "<" expression, FOLLOW [93] -> SHIFT '<' GOTO 146
	expression/L8 = expression . ">=" expression, FOLLOW [93] -> SHIFT ">=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [93] -> SHIFT '>' GOTO 148
	expression/L9 = expression . "+" expression, FOLLOW [93] -> SHIFT '+' GOTO 149
	expression/L9 = expression . "-" expression, FOLLOW [93] -> SHIFT '-' GOTO 150
	expression/L10 = expression . "*" expression, FOLLOW [93] -> SHIFT '*' GOTO 151
	expression/L10 = expression . "/" expression, FOLLOW [93] -> SHIFT '/' GOTO 152
	expression/L10 = expression . "%" expression, FOLLOW [93] -> SHIFT '%' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [93] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [93] -> SHIFT ">>" GOTO 155
	expression/L12 = expression . "." IDENT, FOLLOW [93] -> SHIFT '.' GOTO 156
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 157
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 157
	variabledefinition = typespec IDENT "=" expression . (step:49), FOLLOW [13] -> REDUCE variabledefinition #4 CALL vardef_assign
[93]
	expression/L3 = . expression "=" expression, FOLLOW [226] -> GOTO 175
	expression/L3 = . expression "+=" expression, FOLLOW [226] -> GOTO 175
	expression/L3 = . expression "-=" expression, FOLLOW [226] -> GOTO 175
	expression/L3 = . expression "*=" expression, FOLLOW [226] -> GOTO 175
	expression/L3 = . expression "/=" expression, FOLLOW [226] -> GOTO 175
	expression/L3 = . expression "%=" expression, FOLLOW [226] -> GOTO 175
	expression/L3 = . expression "&&=" expression, FOLLOW [226] -> GOTO 175
	expression/L3 = . expression "||=" expression, FOLLOW [226] -> GOTO 175
	expression/L3 = . expression "&=" expression, FOLLOW [226] -> GOTO 175
	expression/L3 = . expression "|=" expression, FOLLOW [226] -> GOTO 175
	expression/L3 = . expression "<<=" expression, FOLLOW [226] -> GOTO 175
	expression/L3 = . expression ">>=" expression, FOLLOW [226] -> GOTO 175
	expression/L4 = . expression "||" expression, FOLLOW [226] -> GOTO 175
	expression/L5 = . expression "&&" expression, FOLLOW [226] -> GOTO 175
	expression/L6 = . expression "|" expression, FOLLOW [226] -> GOTO 175
	expression/L7 = . expression "^" expression, FOLLOW [226] -> GOTO 175
	expression/L7 = . expression "&" expression, FOLLOW [226] -> GOTO 175
	expression/L8 = . expression "==" expression, FOLLOW [226] -> GOTO 175
	expression/L8 = . expression "!=" expression, FOLLOW [226] -> GOTO 175
	expression/L8 = . expression "<=" expression, FOLLOW [226] -> GOTO 175
	expression/L8 = . expression "<" expression, FOLLOW [226] -> GOTO 175
	expression/L8 = . expression ">=" expression, FOLLOW [226] -> GOTO 175
	expression/L8 = . expression ">" expression, FOLLOW [226] -> GOTO 175
	expression/L9 = . expression "+" expression, FOLLOW [226] -> GOTO 175
	expression/L9 = . expression "-" expression, FOLLOW [226] -> GOTO 175
	expression/L10 = . expression "*" expression, FOLLOW [226] -> GOTO 175
	expression/L10 = . expression "/" expression, FOLLOW [226] -> GOTO 175
	expression/L10 = . expression "%" expression, FOLLOW [226] -> GOTO 175
	expression/L11 = . expression "<<" expression, FOLLOW [226] -> GOTO 175
	expression/L11 = . expression ">>" expression, FOLLOW [226] -> GOTO 175
	expression/L12 = . expression "." IDENT, FOLLOW [226] -> GOTO 175
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [226] -> GOTO 175
	expression/L13 = . expression "(" ")", FOLLOW [226] -> GOTO 175
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [226] -> GOTO 175
	iexpression = . expression indirection IDENT, FOLLOW [226] -> GOTO 175
	expressionlist = . expression "," expressionlist, FOLLOW [16] -> GOTO 175
	expressionlist = . expression, FOLLOW [16] -> GOTO 175
	expression/L12 = . iexpression, FOLLOW [226] -> GOTO 68
	expression/L1 = "{" . expressionlist "}", FOLLOW [226] -> GOTO 162
	expression/L2 = . BOOLEAN, FOLLOW [226] -> SHIFT BOOLEAN GOTO 69
	expression/L2 = . IDENT, FOLLOW [226] -> SHIFT IDENT GOTO 70
	expression/L2 = . DQSTRING, FOLLOW [226] -> SHIFT DQSTRING GOTO 71
	expression/L2 = . SQSTRING, FOLLOW [226] -> SHIFT SQSTRING GOTO 72
	expression/L2 = . CARDINAL, FOLLOW [226] -> SHIFT CARDINAL GOTO 73
	expression/L2 = . INTEGER, FOLLOW [226] -> SHIFT INTEGER GOTO 74
	expression/L2 = . FLOAT, FOLLOW [226] -> SHIFT FLOAT GOTO 75
	expression/L2 = . "(" expression ")", FOLLOW [226] -> SHIFT '(' GOTO 76
	expression/L9 = . "&" expression, FOLLOW [226] -> SHIFT '&' GOTO 77
	expression/L1 = . "{" expressionlist "}", FOLLOW [226] -> SHIFT '{' GOTO 93
	expression/L1 = . "{" "}", FOLLOW [226] -> SHIFT '{' GOTO 93
	expression/L1 = "{" . "}", FOLLOW [226] -> SHIFT '}' GOTO 163
	expression/L1 = . "new" typespec ":" expression, FOLLOW [226] -> SHIFT "new" GOTO 84
	expression/L2 = . "null", FOLLOW [226] -> SHIFT "null" GOTO 85
	expression/L9 = . "+" expression, FOLLOW [226] -> SHIFT '+' GOTO 86
	expression/L9 = . "-" expression, FOLLOW [226] -> SHIFT '-' GOTO 87
	expression/L9 = . "~" expression, FOLLOW [226] -> SHIFT '~' GOTO 88
	expression/L9 = . "!" expression, FOLLOW [226] -> SHIFT '!' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [226] -> SHIFT '*' GOTO 90
[94]
	iexpression = expression . indirection IDENT, FOLLOW [161] -> GOTO 122
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [161] -> SHIFT '(' GOTO 123
	expression/L13 = expression . "(" ")", FOLLOW [161] -> SHIFT '(' GOTO 123
	expression/L7 = expression . "&" expression, FOLLOW [161] -> SHIFT '&' GOTO 125
	expression/L7 = expression . "^" expression, FOLLOW [161] -> SHIFT '^' GOTO 126
	expression/L3 = expression . "=" expression, FOLLOW [161] -> SHIFT '=' GOTO 127
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [161] -> SHIFT '[' GOTO 128
	variabledefinition = typespec IDENT "[" expression . "]" "=" expression, FOLLOW [13] -> SHIFT ']' GOTO 176
	variabledefinition = typespec IDENT "[" expression . "]", FOLLOW [13] -> SHIFT ']' GOTO 176
	expression/L3 = expression . "+=" expression, FOLLOW [161] -> SHIFT "+=" GOTO 129
	expression/L3 = expression . "-=" expression, FOLLOW [161] -> SHIFT "-=" GOTO 130
	expression/L3 = expression . "*=" expression, FOLLOW [161] -> SHIFT "*=" GOTO 131
	expression/L3 = expression . "/=" expression, FOLLOW [161] -> SHIFT "/=" GOTO 132
	expression/L3 = expression . "%=" expression, FOLLOW [161] -> SHIFT "%=" GOTO 133
	expression/L3 = expression . "&&=" expression, FOLLOW [161] -> SHIFT "&&=" GOTO 134
	expression/L3 = expression . "||=" expression, FOLLOW [161] -> SHIFT "||=" GOTO 135
	expression/L3 = expression . "&=" expression, FOLLOW [161] -> SHIFT "&=" GOTO 136
	expression/L3 = expression . "|=" expression, FOLLOW [161] -> SHIFT "|=" GOTO 137
	expression/L3 = expression . "<<=" expression, FOLLOW [161] -> SHIFT "<<=" GOTO 138
	expression/L3 = expression . ">>=" expression, FOLLOW [161] -> SHIFT ">>=" GOTO 139
	expression/L4 = expression . "||" expression, FOLLOW [161] -> SHIFT "||" GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [161] -> SHIFT "&&" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [161] -> SHIFT '|' GOTO 142
	expression/L8 = expression . "==" expression, FOLLOW [161] -> SHIFT "==" GOTO 143
	expression/L8 = expression . "!=" expression, FOLLOW [161] -> SHIFT "!=" GOTO 144
	expression/L8 = expression . "<=" expression, FOLLOW [161] -> SHIFT "<=" GOTO 145
	expression/L8 = expression . "<" expression, FOLLOW [161] -> SHIFT '<' GOTO 146
	expression/L8 = expression . ">=" expression, FOLLOW [161] -> SHIFT ">=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [161] -> SHIFT '>' GOTO 148
	expression/L9 = expression . "+" expression, FOLLOW [161] -> SHIFT '+' GOTO 149
	expression/L9 = expression . "-" expression, FOLLOW [161] -> SHIFT '-' GOTO 150
	expression/L10 = expression . "*" expression, FOLLOW [161] -> SHIFT '*' GOTO 151
	expression/L10 = expression . "/" expression, FOLLOW [161] -> SHIFT '/' GOTO 152
	expression/L10 = expression . "%" expression, FOLLOW [161] -> SHIFT '%' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [161] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [161] -> SHIFT ">>" GOTO 155
	expression/L12 = expression . "." IDENT, FOLLOW [161] -> SHIFT '.' GOTO 156
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 157
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 157
[95]
	functiondefinition = linkage "function" typespec IDENT . callablebody, FOLLOW [228] -> GOTO 177
	callablebody = . "(" parameterlist ")" "{" codeblock "}", FOLLOW [228] -> SHIFT '(' GOTO 97
	callablebody = . "(" parameterlist ")" "const" "{" codeblock "}", FOLLOW [228] -> SHIFT '(' GOTO 97
[96]
	functiondefinition = linkage "procedure" IDENT callablebody . (33), FOLLOW [228] -> REDUCE functiondefinition #4 CALL procdef
[97]
	typespec/L1 = . typename, FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [9] -> GOTO 8
	paramdecl = . typespec IDENT, FOLLOW [176] -> GOTO 178
	callablebody = "(" . parameterlist ")" "{" codeblock "}", FOLLOW [228] -> GOTO 179
	callablebody = "(" . parameterlist ")" "const" "{" codeblock "}", FOLLOW [228] -> GOTO 179
	parameterlist = . parameters, FOLLOW [10] -> GOTO 180
	parameters = . paramdecl "," parameters, FOLLOW [10] -> GOTO 181
	parameters = . paramdecl, FOLLOW [10] -> GOTO 181
	typename/L1 = . IDENT, FOLLOW [59] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [59] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	parameterlist = ., FOLLOW [10] -> REDUCE parameterlist #0
[98]
	typespec/L1 = "const" typename "^" "&" . (19), FOLLOW [238] -> REDUCE typespec #4 CALL typespec "const^&"
[99]
	typespec/L1 = "const" typename "^" "^" . "&", FOLLOW [238] -> SHIFT '&' GOTO 182
	typespec/L1 = "const" typename "^" "^" . (21), FOLLOW [238] -> REDUCE typespec #4 CALL typespec "const^^"
[100]
	structdefinition = "struct" IDENT "{" struct_definitionlist . "}", FOLLOW [167] -> SHIFT '}' GOTO 183
[101]
	struct_definitionlist = struct_definition . struct_definitionlist, FOLLOW [16] -> GOTO 184
	struct_definitionlist = . struct_definition struct_definitionlist, FOLLOW [16] -> GOTO 101
	typespec/L1 = . typename, FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [9] -> GOTO 8
	variabledefinition = . typespec IDENT, FOLLOW [13] -> GOTO 9
	variabledefinition = . typespec IDENT "=" expression, FOLLOW [13] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression, FOLLOW [13] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]", FOLLOW [13] -> GOTO 9
	struct_definition = . typedefinition ";", FOLLOW [162] -> GOTO 10
	struct_definition = . structdefinition, FOLLOW [162] -> GOTO 11
	struct_definition = . variabledefinition ";", FOLLOW [162] -> GOTO 16
	typename/L1 = . IDENT, FOLLOW [59] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [59] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typedefinition = . "typedef" typename IDENT, FOLLOW [13] -> SHIFT "typedef" GOTO 19
	structdefinition = . "struct" IDENT "{" struct_definitionlist "}", FOLLOW [162] -> SHIFT "struct" GOTO 20
	struct_definitionlist = ., FOLLOW [16] -> REDUCE struct_definitionlist #0
[102]
	interfacedefinition = "interface" IDENT "{" interface_definitionlist . "}", FOLLOW [167] -> SHIFT '}' GOTO 185
[103]
	interface_definitionlist = interface_definition . interface_definitionlist, FOLLOW [16] -> GOTO 186
	interface_definitionlist = . interface_definition interface_definitionlist, FOLLOW [16] -> GOTO 103
	interface_definition = . "function" typespec IDENT "(" parameterlist ")" ";", FOLLOW [164] -> SHIFT "function" GOTO 104
	interface_definition = . "function" typespec IDENT "(" parameterlist ")" "const" ";", FOLLOW [164] -> SHIFT "function" GOTO 104
	interface_definition = . "procedure" IDENT "(" parameterlist ")" ";", FOLLOW [164] -> SHIFT "procedure" GOTO 105
	interface_definition = . "procedure" IDENT "(" parameterlist ")" "const" ";", FOLLOW [164] -> SHIFT "procedure" GOTO 105
	interface_definitionlist = ., FOLLOW [16] -> REDUCE interface_definitionlist #0
[104]
	typespec/L1 = . typename, FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [9] -> GOTO 8
	interface_definition = "function" . typespec IDENT "(" parameterlist ")" ";", FOLLOW [164] -> GOTO 187
	interface_definition = "function" . typespec IDENT "(" parameterlist ")" "const" ";", FOLLOW [164] -> GOTO 187
	typename/L1 = . IDENT, FOLLOW [59] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [59] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
[105]
	interface_definition = "procedure" . IDENT "(" parameterlist ")" ";", FOLLOW [164] -> SHIFT IDENT GOTO 188
	interface_definition = "procedure" . IDENT "(" parameterlist ")" "const" ";", FOLLOW [164] -> SHIFT IDENT GOTO 188
[106]
	classdefinition = "class" IDENT "{" class_definitionlist . "}", FOLLOW [167] -> SHIFT '}' GOTO 189
[107]
	class_definition = struct_definition ., FOLLOW [166] -> REDUCE class_definition #1
[108]
	class_definitionlist = class_definition . class_definitionlist, FOLLOW [16] -> GOTO 190
	class_definition = . struct_definition, FOLLOW [166] -> GOTO 107
	class_definitionlist = . class_definition class_definitionlist, FOLLOW [16] -> GOTO 108
	typespec/L1 = . typename, FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [9] -> GOTO 8
	variabledefinition = . typespec IDENT, FOLLOW [13] -> GOTO 9
	variabledefinition = . typespec IDENT "=" expression, FOLLOW [13] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression, FOLLOW [13] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]", FOLLOW [13] -> GOTO 9
	struct_definition = . typedefinition ";", FOLLOW [166] -> GOTO 10
	struct_definition = . structdefinition, FOLLOW [166] -> GOTO 11
	class_definition = . interfacedefinition, FOLLOW [166] -> GOTO 109
	class_definition = . classdefinition, FOLLOW [166] -> GOTO 110
	functiondefinition = . linkage "function" typespec IDENT callablebody, FOLLOW [166] -> GOTO 111
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [166] -> GOTO 111
	constructordefinition = . linkage "constructor" callablebody, FOLLOW [166] -> GOTO 111
	class_definition = . functiondefinition, FOLLOW [166] -> GOTO 112
	class_definition = . constructordefinition, FOLLOW [166] -> GOTO 113
	struct_definition = . variabledefinition ";", FOLLOW [166] -> GOTO 16
	typename/L1 = . IDENT, FOLLOW [59] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [59] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typedefinition = . "typedef" typename IDENT, FOLLOW [13] -> SHIFT "typedef" GOTO 19
	structdefinition = . "struct" IDENT "{" struct_definitionlist "}", FOLLOW [166] -> SHIFT "struct" GOTO 20
	interfacedefinition = . "interface" IDENT "{" interface_definitionlist "}", FOLLOW [166] -> SHIFT "interface" GOTO 21
	classdefinition = . "class" IDENT "{" class_definitionlist "}", FOLLOW [166] -> SHIFT "class" GOTO 22
	classdefinition = . "class" IDENT ":" inheritlist "{" class_definitionlist "}", FOLLOW [166] -> SHIFT "class" GOTO 22
	linkage = . "private", FOLLOW [165] -> SHIFT "private" GOTO 23
	linkage = . "public", FOLLOW [165] -> SHIFT "public" GOTO 24
	constructordefinition = . "destructor" "{" codeblock "}", FOLLOW [166] -> SHIFT "destructor" GOTO 114
	class_definitionlist = ., FOLLOW [16] -> REDUCE class_definitionlist #0
	linkage = . (30), FOLLOW [165] -> REDUCE linkage #0 CALL linkage {linkage="internal",attributes="#0 nounwind"}
[109]
	class_definition = interfacedefinition . (11), FOLLOW [166] -> REDUCE class_definition #1 CALL definition
[110]
	class_definition = classdefinition . (11), FOLLOW [166] -> REDUCE class_definition #1 CALL definition
[111]
	functiondefinition = linkage . "function" typespec IDENT callablebody, FOLLOW [166] -> SHIFT "function" GOTO 34
	functiondefinition = linkage . "procedure" IDENT callablebody, FOLLOW [166] -> SHIFT "procedure" GOTO 35
	constructordefinition = linkage . "constructor" callablebody, FOLLOW [166] -> SHIFT "constructor" GOTO 191
[112]
	class_definition = functiondefinition . (11), FOLLOW [166] -> REDUCE class_definition #1 CALL definition
[113]
	class_definition = constructordefinition ., FOLLOW [166] -> REDUCE class_definition #1
[114]
	constructordefinition = "destructor" . "{" codeblock "}", FOLLOW [166] -> SHIFT '{' GOTO 192
[115]
	inheritlist = typename . "," inheritlist, FOLLOW [17] -> SHIFT ',' GOTO 193
	inheritlist = typename . (step:27), FOLLOW [17] -> REDUCE inheritlist #1 CALL inheritdef
[116]
	classdefinition = "class" IDENT ":" inheritlist . "{" class_definitionlist "}", FOLLOW [167] -> SHIFT '{' GOTO 194
[117]
	extern_definition = "extern" DQSTRING "function" typespec IDENT . "(" extern_paramlist ")" ";", FOLLOW [56] -> SHIFT '(' GOTO 195
	extern_definition = "extern" DQSTRING "function" typespec IDENT . "(" extern_paramlist "..." ")" ";", FOLLOW [56] -> SHIFT '(' GOTO 195
[118]
	extern_paramlist = . extern_parameters, FOLLOW [177] -> GOTO 196
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" . extern_paramlist ")" ";", FOLLOW [56] -> GOTO 197
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" . extern_paramlist "..." ")" ";", FOLLOW [56] -> GOTO 197
	typespec/L1 = . typename, FOLLOW [179] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [179] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [179] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [179] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [179] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [179] -> GOTO 8
	extern_parameters = . typespec "," extern_parameters, FOLLOW [177] -> GOTO 198
	extern_parameters = . typespec, FOLLOW [177] -> GOTO 198
	typename/L1 = . IDENT, FOLLOW [180] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [180] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [179] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [179] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [179] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [179] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [179] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [179] -> SHIFT "const" GOTO 18
	extern_paramlist = ., FOLLOW [177] -> REDUCE extern_paramlist #0
[119]
	statement/L1 = typedefinition ";" . (11), FOLLOW [94] -> REDUCE statement #2 CALL definition
[120]
	main_procedure = "main" "{" codeblock "}" . (scope:38), FOLLOW [0] -> REDUCE main_procedure #4 CALL main_procdef
[121]
	statementlist = statement statementlist . (step), FOLLOW [16] -> REDUCE statementlist #2
[122]
	iexpression = expression indirection . IDENT, FOLLOW [226] -> SHIFT IDENT GOTO 199
[123]
	expression/L3 = . expression "=" expression, FOLLOW [226] -> GOTO 175
	expression/L3 = . expression "+=" expression, FOLLOW [226] -> GOTO 175
	expression/L3 = . expression "-=" expression, FOLLOW [226] -> GOTO 175
	expression/L3 = . expression "*=" expression, FOLLOW [226] -> GOTO 175
	expression/L3 = . expression "/=" expression, FOLLOW [226] -> GOTO 175
	expression/L3 = . expression "%=" expression, FOLLOW [226] -> GOTO 175
	expression/L3 = . expression "&&=" expression, FOLLOW [226] -> GOTO 175
	expression/L3 = . expression "||=" expression, FOLLOW [226] -> GOTO 175
	expression/L3 = . expression "&=" expression, FOLLOW [226] -> GOTO 175
	expression/L3 = . expression "|=" expression, FOLLOW [226] -> GOTO 175
	expression/L3 = . expression "<<=" expression, FOLLOW [226] -> GOTO 175
	expression/L3 = . expression ">>=" expression, FOLLOW [226] -> GOTO 175
	expression/L4 = . expression "||" expression, FOLLOW [226] -> GOTO 175
	expression/L5 = . expression "&&" expression, FOLLOW [226] -> GOTO 175
	expression/L6 = . expression "|" expression, FOLLOW [226] -> GOTO 175
	expression/L7 = . expression "^" expression, FOLLOW [226] -> GOTO 175
	expression/L7 = . expression "&" expression, FOLLOW [226] -> GOTO 175
	expression/L8 = . expression "==" expression, FOLLOW [226] -> GOTO 175
	expression/L8 = . expression "!=" expression, FOLLOW [226] -> GOTO 175
	expression/L8 = . expression "<=" expression, FOLLOW [226] -> GOTO 175
	expression/L8 = . expression "<" expression, FOLLOW [226] -> GOTO 175
	expression/L8 = . expression ">=" expression, FOLLOW [226] -> GOTO 175
	expression/L8 = . expression ">" expression, FOLLOW [226] -> GOTO 175
	expression/L9 = . expression "+" expression, FOLLOW [226] -> GOTO 175
	expression/L9 = . expression "-" expression, FOLLOW [226] -> GOTO 175
	expression/L10 = . expression "*" expression, FOLLOW [226] -> GOTO 175
	expression/L10 = . expression "/" expression, FOLLOW [226] -> GOTO 175
	expression/L10 = . expression "%" expression, FOLLOW [226] -> GOTO 175
	expression/L11 = . expression "<<" expression, FOLLOW [226] -> GOTO 175
	expression/L11 = . expression ">>" expression, FOLLOW [226] -> GOTO 175
	expression/L12 = . expression "." IDENT, FOLLOW [226] -> GOTO 175
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [226] -> GOTO 175
	expression/L13 = . expression "(" ")", FOLLOW [226] -> GOTO 175
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [226] -> GOTO 175
	iexpression = . expression indirection IDENT, FOLLOW [226] -> GOTO 175
	expressionlist = . expression "," expressionlist, FOLLOW [10] -> GOTO 175
	expressionlist = . expression, FOLLOW [10] -> GOTO 175
	expression/L12 = . iexpression, FOLLOW [226] -> GOTO 68
	expression/L13 = expression "(" . expressionlist ")", FOLLOW [226] -> GOTO 200
	expression/L2 = . BOOLEAN, FOLLOW [226] -> SHIFT BOOLEAN GOTO 69
	expression/L2 = . IDENT, FOLLOW [226] -> SHIFT IDENT GOTO 70
	expression/L2 = . DQSTRING, FOLLOW [226] -> SHIFT DQSTRING GOTO 71
	expression/L2 = . SQSTRING, FOLLOW [226] -> SHIFT SQSTRING GOTO 72
	expression/L2 = . CARDINAL, FOLLOW [226] -> SHIFT CARDINAL GOTO 73
	expression/L2 = . INTEGER, FOLLOW [226] -> SHIFT INTEGER GOTO 74
	expression/L2 = . FLOAT, FOLLOW [226] -> SHIFT FLOAT GOTO 75
	expression/L2 = . "(" expression ")", FOLLOW [226] -> SHIFT '(' GOTO 76
	expression/L13 = expression "(" . ")", FOLLOW [226] -> SHIFT ')' GOTO 201
	expression/L9 = . "&" expression, FOLLOW [226] -> SHIFT '&' GOTO 77
	expression/L1 = . "{" expressionlist "}", FOLLOW [226] -> SHIFT '{' GOTO 93
	expression/L1 = . "{" "}", FOLLOW [226] -> SHIFT '{' GOTO 93
	expression/L1 = . "new" typespec ":" expression, FOLLOW [226] -> SHIFT "new" GOTO 84
	expression/L2 = . "null", FOLLOW [226] -> SHIFT "null" GOTO 85
	expression/L9 = . "+" expression, FOLLOW [226] -> SHIFT '+' GOTO 86
	expression/L9 = . "-" expression, FOLLOW [226] -> SHIFT '-' GOTO 87
	expression/L9 = . "~" expression, FOLLOW [226] -> SHIFT '~' GOTO 88
	expression/L9 = . "!" expression, FOLLOW [226] -> SHIFT '!' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [226] -> SHIFT '*' GOTO 90
[124]
	statement/L1 = expression ";" . (42), FOLLOW [94] -> REDUCE statement #2 CALL free_expression
[125]
	expression/L3 = . expression "=" expression, FOLLOW [226] -> GOTO 202
	expression/L3 = . expression "+=" expression, FOLLOW [226] -> GOTO 202
	expression/L3 = . expression "-=" expression, FOLLOW [226] -> GOTO 202
	expression/L3 = . expression "*=" expression, FOLLOW [226] -> GOTO 202
	expression/L3 = . expression "/=" expression, FOLLOW [226] -> GOTO 202
	expression/L3 = . expression "%=" expression, FOLLOW [226] -> GOTO 202
	expression/L3 = . expression "&&=" expression, FOLLOW [226] -> GOTO 202
	expression/L3 = . expression "||=" expression, FOLLOW [226] -> GOTO 202
	expression/L3 = . expression "&=" expression, FOLLOW [226] -> GOTO 202
	expression/L3 = . expression "|=" expression, FOLLOW [226] -> GOTO 202
	expression/L3 = . expression "<<=" expression, FOLLOW [226] -> GOTO 202
	expression/L3 = . expression ">>=" expression, FOLLOW [226] -> GOTO 202
	expression/L4 = . expression "||" expression, FOLLOW [226] -> GOTO 202
	expression/L5 = . expression "&&" expression, FOLLOW [226] -> GOTO 202
	expression/L6 = . expression "|" expression, FOLLOW [226] -> GOTO 202
	expression/L7 = . expression "^" expression, FOLLOW [226] -> GOTO 202
	expression/L7 = . expression "&" expression, FOLLOW [226] -> GOTO 202
	expression/L7 = expression "&" . expression, FOLLOW [226] -> GOTO 202
	expression/L8 = . expression "==" expression, FOLLOW [226] -> GOTO 202
	expression/L8 = . expression "!=" expression, FOLLOW [226] -> GOTO 202
	expression/L8 = . expression "<=" expression, FOLLOW [226] -> GOTO 202
	expression/L8 = . expression "<" expression, FOLLOW [226] -> GOTO 202
	expression/L8 = . expression ">=" expression, FOLLOW [226] -> GOTO 202
	expression/L8 = . expression ">" expression, FOLLOW [226] -> GOTO 202
	expression/L9 = . expression "+" expression, FOLLOW [226] -> GOTO 202
	expression/L9 = . expression "-" expression, FOLLOW [226] -> GOTO 202
	expression/L10 = . expression "*" expression, FOLLOW [226] -> GOTO 202
	expression/L10 = . expression "/" expression, FOLLOW [226] -> GOTO 202
	expression/L10 = . expression "%" expression, FOLLOW [226] -> GOTO 202
	expression/L11 = . expression "<<" expression, FOLLOW [226] -> GOTO 202
	expression/L11 = . expression ">>" expression, FOLLOW [226] -> GOTO 202
	expression/L12 = . expression "." IDENT, FOLLOW [226] -> GOTO 202
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [226] -> GOTO 202
	expression/L13 = . expression "(" ")", FOLLOW [226] -> GOTO 202
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [226] -> GOTO 202
	iexpression = . expression indirection IDENT, FOLLOW [226] -> GOTO 202
	expression/L12 = . iexpression, FOLLOW [226] -> GOTO 68
	expression/L2 = . BOOLEAN, FOLLOW [226] -> SHIFT BOOLEAN GOTO 69
	expression/L2 = . IDENT, FOLLOW [226] -> SHIFT IDENT GOTO 70
	expression/L2 = . DQSTRING, FOLLOW [226] -> SHIFT DQSTRING GOTO 71
	expression/L2 = . SQSTRING, FOLLOW [226] -> SHIFT SQSTRING GOTO 72
	expression/L2 = . CARDINAL, FOLLOW [226] -> SHIFT CARDINAL GOTO 73
	expression/L2 = . INTEGER, FOLLOW [226] -> SHIFT INTEGER GOTO 74
	expression/L2 = . FLOAT, FOLLOW [226] -> SHIFT FLOAT GOTO 75
	expression/L2 = . "(" expression ")", FOLLOW [226] -> SHIFT '(' GOTO 76
	expression/L9 = . "&" expression, FOLLOW [226] -> SHIFT '&' GOTO 77
	expression/L1 = . "{" expressionlist "}", FOLLOW [226] -> SHIFT '{' GOTO 93
	expression/L1 = . "{" "}", FOLLOW [226] -> SHIFT '{' GOTO 93
	expression/L1 = . "new" typespec ":" expression, FOLLOW [226] -> SHIFT "new" GOTO 84
	expression/L2 = . "null", FOLLOW [226] -> SHIFT "null" GOTO 85
	expression/L9 = . "+" expression, FOLLOW [226] -> SHIFT '+' GOTO 86
	expression/L9 = . "-" expression, FOLLOW [226] -> SHIFT '-' GOTO 87
	expression/L9 = . "~" expression, FOLLOW [226] -> SHIFT '~' GOTO 88
	expression/L9 = . "!" expression, FOLLOW [226] -> SHIFT '!' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [226] -> SHIFT '*' GOTO 90
[126]
	expression/L3 = . expression "=" expression, FOLLOW [226] -> GOTO 203
	expression/L3 = . expression "+=" expression, FOLLOW [226] -> GOTO 203
	expression/L3 = . expression "-=" expression, FOLLOW [226] -> GOTO 203
	expression/L3 = . expression "*=" expression, FOLLOW [226] -> GOTO 203
	expression/L3 = . expression "/=" expression, FOLLOW [226] -> GOTO 203
	expression/L3 = . expression "%=" expression, FOLLOW [226] -> GOTO 203
	expression/L3 = . expression "&&=" expression, FOLLOW [226] -> GOTO 203
	expression/L3 = . expression "||=" expression, FOLLOW [226] -> GOTO 203
	expression/L3 = . expression "&=" expression, FOLLOW [226] -> GOTO 203
	expression/L3 = . expression "|=" expression, FOLLOW [226] -> GOTO 203
	expression/L3 = . expression "<<=" expression, FOLLOW [226] -> GOTO 203
	expression/L3 = . expression ">>=" expression, FOLLOW [226] -> GOTO 203
	expression/L4 = . expression "||" expression, FOLLOW [226] -> GOTO 203
	expression/L5 = . expression "&&" expression, FOLLOW [226] -> GOTO 203
	expression/L6 = . expression "|" expression, FOLLOW [226] -> GOTO 203
	expression/L7 = . expression "^" expression, FOLLOW [226] -> GOTO 203
	expression/L7 = expression "^" . expression, FOLLOW [226] -> GOTO 203
	expression/L7 = . expression "&" expression, FOLLOW [226] -> GOTO 203
	expression/L8 = . expression "==" expression, FOLLOW [226] -> GOTO 203
	expression/L8 = . expression "!=" expression, FOLLOW [226] -> GOTO 203
	expression/L8 = . expression "<=" expression, FOLLOW [226] -> GOTO 203
	expression/L8 = . expression "<" expression, FOLLOW [226] -> GOTO 203
	expression/L8 = . expression ">=" expression, FOLLOW [226] -> GOTO 203
	expression/L8 = . expression ">" expression, FOLLOW [226] -> GOTO 203
	expression/L9 = . expression "+" expression, FOLLOW [226] -> GOTO 203
	expression/L9 = . expression "-" expression, FOLLOW [226] -> GOTO 203
	expression/L10 = . expression "*" expression, FOLLOW [226] -> GOTO 203
	expression/L10 = . expression "/" expression, FOLLOW [226] -> GOTO 203
	expression/L10 = . expression "%" expression, FOLLOW [226] -> GOTO 203
	expression/L11 = . expression "<<" expression, FOLLOW [226] -> GOTO 203
	expression/L11 = . expression ">>" expression, FOLLOW [226] -> GOTO 203
	expression/L12 = . expression "." IDENT, FOLLOW [226] -> GOTO 203
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [226] -> GOTO 203
	expression/L13 = . expression "(" ")", FOLLOW [226] -> GOTO 203
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [226] -> GOTO 203
	iexpression = . expression indirection IDENT, FOLLOW [226] -> GOTO 203
	expression/L12 = . iexpression, FOLLOW [226] -> GOTO 68
	expression/L2 = . BOOLEAN, FOLLOW [226] -> SHIFT BOOLEAN GOTO 69
	expression/L2 = . IDENT, FOLLOW [226] -> SHIFT IDENT GOTO 70
	expression/L2 = . DQSTRING, FOLLOW [226] -> SHIFT DQSTRING GOTO 71
	expression/L2 = . SQSTRING, FOLLOW [226] -> SHIFT SQSTRING GOTO 72
	expression/L2 = . CARDINAL, FOLLOW [226] -> SHIFT CARDINAL GOTO 73
	expression/L2 = . INTEGER, FOLLOW [226] -> SHIFT INTEGER GOTO 74
	expression/L2 = . FLOAT, FOLLOW [226] -> SHIFT FLOAT GOTO 75
	expression/L2 = . "(" expression ")", FOLLOW [226] -> SHIFT '(' GOTO 76
	expression/L9 = . "&" expression, FOLLOW [226] -> SHIFT '&' GOTO 77
	expression/L1 = . "{" expressionlist "}", FOLLOW [226] -> SHIFT '{' GOTO 93
	expression/L1 = . "{" "}", FOLLOW [226] -> SHIFT '{' GOTO 93
	expression/L1 = . "new" typespec ":" expression, FOLLOW [226] -> SHIFT "new" GOTO 84
	expression/L2 = . "null", FOLLOW [226] -> SHIFT "null" GOTO 85
	expression/L9 = . "+" expression, FOLLOW [226] -> SHIFT '+' GOTO 86
	expression/L9 = . "-" expression, FOLLOW [226] -> SHIFT '-' GOTO 87
	expression/L9 = . "~" expression, FOLLOW [226] -> SHIFT '~' GOTO 88
	expression/L9 = . "!" expression, FOLLOW [226] -> SHIFT '!' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [226] -> SHIFT '*' GOTO 90
[127]
	expression/L3 = . expression "=" expression, FOLLOW [226] -> GOTO 204
	expression/L3 = expression "=" . expression, FOLLOW [226] -> GOTO 204
	expression/L3 = . expression "+=" expression, FOLLOW [226] -> GOTO 204
	expression/L3 = . expression "-=" expression, FOLLOW [226] -> GOTO 204
	expression/L3 = . expression "*=" expression, FOLLOW [226] -> GOTO 204
	expression/L3 = . expression "/=" expression, FOLLOW [226] -> GOTO 204
	expression/L3 = . expression "%=" expression, FOLLOW [226] -> GOTO 204
	expression/L3 = . expression "&&=" expression, FOLLOW [226] -> GOTO 204
	expression/L3 = . expression "||=" expression, FOLLOW [226] -> GOTO 204
	expression/L3 = . expression "&=" expression, FOLLOW [226] -> GOTO 204
	expression/L3 = . expression "|=" expression, FOLLOW [226] -> GOTO 204
	expression/L3 = . expression "<<=" expression, FOLLOW [226] -> GOTO 204
	expression/L3 = . expression ">>=" expression, FOLLOW [226] -> GOTO 204
	expression/L4 = . expression "||" expression, FOLLOW [226] -> GOTO 204
	expression/L5 = . expression "&&" expression, FOLLOW [226] -> GOTO 204
	expression/L6 = . expression "|" expression, FOLLOW [226] -> GOTO 204
	expression/L7 = . expression "^" expression, FOLLOW [226] -> GOTO 204
	expression/L7 = . expression "&" expression, FOLLOW [226] -> GOTO 204
	expression/L8 = . expression "==" expression, FOLLOW [226] -> GOTO 204
	expression/L8 = . expression "!=" expression, FOLLOW [226] -> GOTO 204
	expression/L8 = . expression "<=" expression, FOLLOW [226] -> GOTO 204
	expression/L8 = . expression "<" expression, FOLLOW [226] -> GOTO 204
	expression/L8 = . expression ">=" expression, FOLLOW [226] -> GOTO 204
	expression/L8 = . expression ">" expression, FOLLOW [226] -> GOTO 204
	expression/L9 = . expression "+" expression, FOLLOW [226] -> GOTO 204
	expression/L9 = . expression "-" expression, FOLLOW [226] -> GOTO 204
	expression/L10 = . expression "*" expression, FOLLOW [226] -> GOTO 204
	expression/L10 = . expression "/" expression, FOLLOW [226] -> GOTO 204
	expression/L10 = . expression "%" expression, FOLLOW [226] -> GOTO 204
	expression/L11 = . expression "<<" expression, FOLLOW [226] -> GOTO 204
	expression/L11 = . expression ">>" expression, FOLLOW [226] -> GOTO 204
	expression/L12 = . expression "." IDENT, FOLLOW [226] -> GOTO 204
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [226] -> GOTO 204
	expression/L13 = . expression "(" ")", FOLLOW [226] -> GOTO 204
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [226] -> GOTO 204
	iexpression = . expression indirection IDENT, FOLLOW [226] -> GOTO 204
	expression/L12 = . iexpression, FOLLOW [226] -> GOTO 68
	expression/L2 = . BOOLEAN, FOLLOW [226] -> SHIFT BOOLEAN GOTO 69
	expression/L2 = . IDENT, FOLLOW [226] -> SHIFT IDENT GOTO 70
	expression/L2 = . DQSTRING, FOLLOW [226] -> SHIFT DQSTRING GOTO 71
	expression/L2 = . SQSTRING, FOLLOW [226] -> SHIFT SQSTRING GOTO 72
	expression/L2 = . CARDINAL, FOLLOW [226] -> SHIFT CARDINAL GOTO 73
	expression/L2 = . INTEGER, FOLLOW [226] -> SHIFT INTEGER GOTO 74
	expression/L2 = . FLOAT, FOLLOW [226] -> SHIFT FLOAT GOTO 75
	expression/L2 = . "(" expression ")", FOLLOW [226] -> SHIFT '(' GOTO 76
	expression/L9 = . "&" expression, FOLLOW [226] -> SHIFT '&' GOTO 77
	expression/L1 = . "{" expressionlist "}", FOLLOW [226] -> SHIFT '{' GOTO 93
	expression/L1 = . "{" "}", FOLLOW [226] -> SHIFT '{' GOTO 93
	expression/L1 = . "new" typespec ":" expression, FOLLOW [226] -> SHIFT "new" GOTO 84
	expression/L2 = . "null", FOLLOW [226] -> SHIFT "null" GOTO 85
	expression/L9 = . "+" expression, FOLLOW [226] -> SHIFT '+' GOTO 86
	expression/L9 = . "-" expression, FOLLOW [226] -> SHIFT '-' GOTO 87
	expression/L9 = . "~" expression, FOLLOW [226] -> SHIFT '~' GOTO 88
	expression/L9 = . "!" expression, FOLLOW [226] -> SHIFT '!' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [226] -> SHIFT '*' GOTO 90
[128]
	expression/L3 = . expression "=" expression, FOLLOW [226] -> GOTO 175
	expression/L3 = . expression "+=" expression, FOLLOW [226] -> GOTO 175
	expression/L3 = . expression "-=" expression, FOLLOW [226] -> GOTO 175
	expression/L3 = . expression "*=" expression, FOLLOW [226] -> GOTO 175
	expression/L3 = . expression "/=" expression, FOLLOW [226] -> GOTO 175
	expression/L3 = . expression "%=" expression, FOLLOW [226] -> GOTO 175
	expression/L3 = . expression "&&=" expression, FOLLOW [226] -> GOTO 175
	expression/L3 = . expression "||=" expression, FOLLOW [226] -> GOTO 175
	expression/L3 = . expression "&=" expression, FOLLOW [226] -> GOTO 175
	expression/L3 = . expression "|=" expression, FOLLOW [226] -> GOTO 175
	expression/L3 = . expression "<<=" expression, FOLLOW [226] -> GOTO 175
	expression/L3 = . expression ">>=" expression, FOLLOW [226] -> GOTO 175
	expression/L4 = . expression "||" expression, FOLLOW [226] -> GOTO 175
	expression/L5 = . expression "&&" expression, FOLLOW [226] -> GOTO 175
	expression/L6 = . expression "|" expression, FOLLOW [226] -> GOTO 175
	expression/L7 = . expression "^" expression, FOLLOW [226] -> GOTO 175
	expression/L7 = . expression "&" expression, FOLLOW [226] -> GOTO 175
	expression/L8 = . expression "==" expression, FOLLOW [226] -> GOTO 175
	expression/L8 = . expression "!=" expression, FOLLOW [226] -> GOTO 175
	expression/L8 = . expression "<=" expression, FOLLOW [226] -> GOTO 175
	expression/L8 = . expression "<" expression, FOLLOW [226] -> GOTO 175
	expression/L8 = . expression ">=" expression, FOLLOW [226] -> GOTO 175
	expression/L8 = . expression ">" expression, FOLLOW [226] -> GOTO 175
	expression/L9 = . expression "+" expression, FOLLOW [226] -> GOTO 175
	expression/L9 = . expression "-" expression, FOLLOW [226] -> GOTO 175
	expression/L10 = . expression "*" expression, FOLLOW [226] -> GOTO 175
	expression/L10 = . expression "/" expression, FOLLOW [226] -> GOTO 175
	expression/L10 = . expression "%" expression, FOLLOW [226] -> GOTO 175
	expression/L11 = . expression "<<" expression, FOLLOW [226] -> GOTO 175
	expression/L11 = . expression ">>" expression, FOLLOW [226] -> GOTO 175
	expression/L12 = . expression "." IDENT, FOLLOW [226] -> GOTO 175
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [226] -> GOTO 175
	expression/L13 = . expression "(" ")", FOLLOW [226] -> GOTO 175
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [226] -> GOTO 175
	iexpression = . expression indirection IDENT, FOLLOW [226] -> GOTO 175
	expressionlist = . expression "," expressionlist, FOLLOW [22] -> GOTO 175
	expressionlist = . expression, FOLLOW [22] -> GOTO 175
	expression/L12 = . iexpression, FOLLOW [226] -> GOTO 68
	expression/L13 = expression "[" . expressionlist "]", FOLLOW [226] -> GOTO 205
	expression/L2 = . BOOLEAN, FOLLOW [226] -> SHIFT BOOLEAN GOTO 69
	expression/L2 = . IDENT, FOLLOW [226] -> SHIFT IDENT GOTO 70
	expression/L2 = . DQSTRING, FOLLOW [226] -> SHIFT DQSTRING GOTO 71
	expression/L2 = . SQSTRING, FOLLOW [226] -> SHIFT SQSTRING GOTO 72
	expression/L2 = . CARDINAL, FOLLOW [226] -> SHIFT CARDINAL GOTO 73
	expression/L2 = . INTEGER, FOLLOW [226] -> SHIFT INTEGER GOTO 74
	expression/L2 = . FLOAT, FOLLOW [226] -> SHIFT FLOAT GOTO 75
	expression/L2 = . "(" expression ")", FOLLOW [226] -> SHIFT '(' GOTO 76
	expression/L9 = . "&" expression, FOLLOW [226] -> SHIFT '&' GOTO 77
	expression/L1 = . "{" expressionlist "}", FOLLOW [226] -> SHIFT '{' GOTO 93
	expression/L1 = . "{" "}", FOLLOW [226] -> SHIFT '{' GOTO 93
	expression/L1 = . "new" typespec ":" expression, FOLLOW [226] -> SHIFT "new" GOTO 84
	expression/L2 = . "null", FOLLOW [226] -> SHIFT "null" GOTO 85
	expression/L9 = . "+" expression, FOLLOW [226] -> SHIFT '+' GOTO 86
	expression/L9 = . "-" expression, FOLLOW [226] -> SHIFT '-' GOTO 87
	expression/L9 = . "~" expression, FOLLOW [226] -> SHIFT '~' GOTO 88
	expression/L9 = . "!" expression, FOLLOW [226] -> SHIFT '!' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [226] -> SHIFT '*' GOTO 90
[129]
	expression/L3 = . expression "=" expression, FOLLOW [226] -> GOTO 206
	expression/L3 = . expression "+=" expression, FOLLOW [226] -> GOTO 206
	expression/L3 = expression "+=" . expression, FOLLOW [226] -> GOTO 206
	expression/L3 = . expression "-=" expression, FOLLOW [226] -> GOTO 206
	expression/L3 = . expression "*=" expression, FOLLOW [226] -> GOTO 206
	expression/L3 = . expression "/=" expression, FOLLOW [226] -> GOTO 206
	expression/L3 = . expression "%=" expression, FOLLOW [226] -> GOTO 206
	expression/L3 = . expression "&&=" expression, FOLLOW [226] -> GOTO 206
	expression/L3 = . expression "||=" expression, FOLLOW [226] -> GOTO 206
	expression/L3 = . expression "&=" expression, FOLLOW [226] -> GOTO 206
	expression/L3 = . expression "|=" expression, FOLLOW [226] -> GOTO 206
	expression/L3 = . expression "<<=" expression, FOLLOW [226] -> GOTO 206
	expression/L3 = . expression ">>=" expression, FOLLOW [226] -> GOTO 206
	expression/L4 = . expression "||" expression, FOLLOW [226] -> GOTO 206
	expression/L5 = . expression "&&" expression, FOLLOW [226] -> GOTO 206
	expression/L6 = . expression "|" expression, FOLLOW [226] -> GOTO 206
	expression/L7 = . expression "^" expression, FOLLOW [226] -> GOTO 206
	expression/L7 = . expression "&" expression, FOLLOW [226] -> GOTO 206
	expression/L8 = . expression "==" expression, FOLLOW [226] -> GOTO 206
	expression/L8 = . expression "!=" expression, FOLLOW [226] -> GOTO 206
	expression/L8 = . expression "<=" expression, FOLLOW [226] -> GOTO 206
	expression/L8 = . expression "<" expression, FOLLOW [226] -> GOTO 206
	expression/L8 = . expression ">=" expression, FOLLOW [226] -> GOTO 206
	expression/L8 = . expression ">" expression, FOLLOW [226] -> GOTO 206
	expression/L9 = . expression "+" expression, FOLLOW [226] -> GOTO 206
	expression/L9 = . expression "-" expression, FOLLOW [226] -> GOTO 206
	expression/L10 = . expression "*" expression, FOLLOW [226] -> GOTO 206
	expression/L10 = . expression "/" expression, FOLLOW [226] -> GOTO 206
	expression/L10 = . expression "%" expression, FOLLOW [226] -> GOTO 206
	expression/L11 = . expression "<<" expression, FOLLOW [226] -> GOTO 206
	expression/L11 = . expression ">>" expression, FOLLOW [226] -> GOTO 206
	expression/L12 = . expression "." IDENT, FOLLOW [226] -> GOTO 206
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [226] -> GOTO 206
	expression/L13 = . expression "(" ")", FOLLOW [226] -> GOTO 206
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [226] -> GOTO 206
	iexpression = . expression indirection IDENT, FOLLOW [226] -> GOTO 206
	expression/L12 = . iexpression, FOLLOW [226] -> GOTO 68
	expression/L2 = . BOOLEAN, FOLLOW [226] -> SHIFT BOOLEAN GOTO 69
	expression/L2 = . IDENT, FOLLOW [226] -> SHIFT IDENT GOTO 70
	expression/L2 = . DQSTRING, FOLLOW [226] -> SHIFT DQSTRING GOTO 71
	expression/L2 = . SQSTRING, FOLLOW [226] -> SHIFT SQSTRING GOTO 72
	expression/L2 = . CARDINAL, FOLLOW [226] -> SHIFT CARDINAL GOTO 73
	expression/L2 = . INTEGER, FOLLOW [226] -> SHIFT INTEGER GOTO 74
	expression/L2 = . FLOAT, FOLLOW [226] -> SHIFT FLOAT GOTO 75
	expression/L2 = . "(" expression ")", FOLLOW [226] -> SHIFT '(' GOTO 76
	expression/L9 = . "&" expression, FOLLOW [226] -> SHIFT '&' GOTO 77
	expression/L1 = . "{" expressionlist "}", FOLLOW [226] -> SHIFT '{' GOTO 93
	expression/L1 = . "{" "}", FOLLOW [226] -> SHIFT '{' GOTO 93
	expression/L1 = . "new" typespec ":" expression, FOLLOW [226] -> SHIFT "new" GOTO 84
	expression/L2 = . "null", FOLLOW [226] -> SHIFT "null" GOTO 85
	expression/L9 = . "+" expression, FOLLOW [226] -> SHIFT '+' GOTO 86
	expression/L9 = . "-" expression, FOLLOW [226] -> SHIFT '-' GOTO 87
	expression/L9 = . "~" expression, FOLLOW [226] -> SHIFT '~' GOTO 88
	expression/L9 = . "!" expression, FOLLOW [226] -> SHIFT '!' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [226] -> SHIFT '*' GOTO 90
[130]
	expression/L3 = . expression "=" expression, FOLLOW [226] -> GOTO 207
	expression/L3 = . expression "+=" expression, FOLLOW [226] -> GOTO 207
	expression/L3 = . expression "-=" expression, FOLLOW [226] -> GOTO 207
	expression/L3 = expression "-=" . expression, FOLLOW [226] -> GOTO 207
	expression/L3 = . expression "*=" expression, FOLLOW [226] -> GOTO 207
	expression/L3 = . expression "/=" expression, FOLLOW [226] -> GOTO 207
	expression/L3 = . expression "%=" expression, FOLLOW [226] -> GOTO 207
	expression/L3 = . expression "&&=" expression, FOLLOW [226] -> GOTO 207
	expression/L3 = . expression "||=" expression, FOLLOW [226] -> GOTO 207
	expression/L3 = . expression "&=" expression, FOLLOW [226] -> GOTO 207
	expression/L3 = . expression "|=" expression, FOLLOW [226] -> GOTO 207
	expression/L3 = . expression "<<=" expression, FOLLOW [226] -> GOTO 207
	expression/L3 = . expression ">>=" expression, FOLLOW [226] -> GOTO 207
	expression/L4 = . expression "||" expression, FOLLOW [226] -> GOTO 207
	expression/L5 = . expression "&&" expression, FOLLOW [226] -> GOTO 207
	expression/L6 = . expression "|" expression, FOLLOW [226] -> GOTO 207
	expression/L7 = . expression "^" expression, FOLLOW [226] -> GOTO 207
	expression/L7 = . expression "&" expression, FOLLOW [226] -> GOTO 207
	expression/L8 = . expression "==" expression, FOLLOW [226] -> GOTO 207
	expression/L8 = . expression "!=" expression, FOLLOW [226] -> GOTO 207
	expression/L8 = . expression "<=" expression, FOLLOW [226] -> GOTO 207
	expression/L8 = . expression "<" expression, FOLLOW [226] -> GOTO 207
	expression/L8 = . expression ">=" expression, FOLLOW [226] -> GOTO 207
	expression/L8 = . expression ">" expression, FOLLOW [226] -> GOTO 207
	expression/L9 = . expression "+" expression, FOLLOW [226] -> GOTO 207
	expression/L9 = . expression "-" expression, FOLLOW [226] -> GOTO 207
	expression/L10 = . expression "*" expression, FOLLOW [226] -> GOTO 207
	expression/L10 = . expression "/" expression, FOLLOW [226] -> GOTO 207
	expression/L10 = . expression "%" expression, FOLLOW [226] -> GOTO 207
	expression/L11 = . expression "<<" expression, FOLLOW [226] -> GOTO 207
	expression/L11 = . expression ">>" expression, FOLLOW [226] -> GOTO 207
	expression/L12 = . expression "." IDENT, FOLLOW [226] -> GOTO 207
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [226] -> GOTO 207
	expression/L13 = . expression "(" ")", FOLLOW [226] -> GOTO 207
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [226] -> GOTO 207
	iexpression = . expression indirection IDENT, FOLLOW [226] -> GOTO 207
	expression/L12 = . iexpression, FOLLOW [226] -> GOTO 68
	expression/L2 = . BOOLEAN, FOLLOW [226] -> SHIFT BOOLEAN GOTO 69
	expression/L2 = . IDENT, FOLLOW [226] -> SHIFT IDENT GOTO 70
	expression/L2 = . DQSTRING, FOLLOW [226] -> SHIFT DQSTRING GOTO 71
	expression/L2 = . SQSTRING, FOLLOW [226] -> SHIFT SQSTRING GOTO 72
	expression/L2 = . CARDINAL, FOLLOW [226] -> SHIFT CARDINAL GOTO 73
	expression/L2 = . INTEGER, FOLLOW [226] -> SHIFT INTEGER GOTO 74
	expression/L2 = . FLOAT, FOLLOW [226] -> SHIFT FLOAT GOTO 75
	expression/L2 = . "(" expression ")", FOLLOW [226] -> SHIFT '(' GOTO 76
	expression/L9 = . "&" expression, FOLLOW [226] -> SHIFT '&' GOTO 77
	expression/L1 = . "{" expressionlist "}", FOLLOW [226] -> SHIFT '{' GOTO 93
	expression/L1 = . "{" "}", FOLLOW [226] -> SHIFT '{' GOTO 93
	expression/L1 = . "new" typespec ":" expression, FOLLOW [226] -> SHIFT "new" GOTO 84
	expression/L2 = . "null", FOLLOW [226] -> SHIFT "null" GOTO 85
	expression/L9 = . "+" expression, FOLLOW [226] -> SHIFT '+' GOTO 86
	expression/L9 = . "-" expression, FOLLOW [226] -> SHIFT '-' GOTO 87
	expression/L9 = . "~" expression, FOLLOW [226] -> SHIFT '~' GOTO 88
	expression/L9 = . "!" expression, FOLLOW [226] -> SHIFT '!' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [226] -> SHIFT '*' GOTO 90
[131]
	expression/L3 = . expression "=" expression, FOLLOW [226] -> GOTO 208
	expression/L3 = . expression "+=" expression, FOLLOW [226] -> GOTO 208
	expression/L3 = . expression "-=" expression, FOLLOW [226] -> GOTO 208
	expression/L3 = . expression "*=" expression, FOLLOW [226] -> GOTO 208
	expression/L3 = expression "*=" . expression, FOLLOW [226] -> GOTO 208
	expression/L3 = . expression "/=" expression, FOLLOW [226] -> GOTO 208
	expression/L3 = . expression "%=" expression, FOLLOW [226] -> GOTO 208
	expression/L3 = . expression "&&=" expression, FOLLOW [226] -> GOTO 208
	expression/L3 = . expression "||=" expression, FOLLOW [226] -> GOTO 208
	expression/L3 = . expression "&=" expression, FOLLOW [226] -> GOTO 208
	expression/L3 = . expression "|=" expression, FOLLOW [226] -> GOTO 208
	expression/L3 = . expression "<<=" expression, FOLLOW [226] -> GOTO 208
	expression/L3 = . expression ">>=" expression, FOLLOW [226] -> GOTO 208
	expression/L4 = . expression "||" expression, FOLLOW [226] -> GOTO 208
	expression/L5 = . expression "&&" expression, FOLLOW [226] -> GOTO 208
	expression/L6 = . expression "|" expression, FOLLOW [226] -> GOTO 208
	expression/L7 = . expression "^" expression, FOLLOW [226] -> GOTO 208
	expression/L7 = . expression "&" expression, FOLLOW [226] -> GOTO 208
	expression/L8 = . expression "==" expression, FOLLOW [226] -> GOTO 208
	expression/L8 = . expression "!=" expression, FOLLOW [226] -> GOTO 208
	expression/L8 = . expression "<=" expression, FOLLOW [226] -> GOTO 208
	expression/L8 = . expression "<" expression, FOLLOW [226] -> GOTO 208
	expression/L8 = . expression ">=" expression, FOLLOW [226] -> GOTO 208
	expression/L8 = . expression ">" expression, FOLLOW [226] -> GOTO 208
	expression/L9 = . expression "+" expression, FOLLOW [226] -> GOTO 208
	expression/L9 = . expression "-" expression, FOLLOW [226] -> GOTO 208
	expression/L10 = . expression "*" expression, FOLLOW [226] -> GOTO 208
	expression/L10 = . expression "/" expression, FOLLOW [226] -> GOTO 208
	expression/L10 = . expression "%" expression, FOLLOW [226] -> GOTO 208
	expression/L11 = . expression "<<" expression, FOLLOW [226] -> GOTO 208
	expression/L11 = . expression ">>" expression, FOLLOW [226] -> GOTO 208
	expression/L12 = . expression "." IDENT, FOLLOW [226] -> GOTO 208
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [226] -> GOTO 208
	expression/L13 = . expression "(" ")", FOLLOW [226] -> GOTO 208
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [226] -> GOTO 208
	iexpression = . expression indirection IDENT, FOLLOW [226] -> GOTO 208
	expression/L12 = . iexpression, FOLLOW [226] -> GOTO 68
	expression/L2 = . BOOLEAN, FOLLOW [226] -> SHIFT BOOLEAN GOTO 69
	expression/L2 = . IDENT, FOLLOW [226] -> SHIFT IDENT GOTO 70
	expression/L2 = . DQSTRING, FOLLOW [226] -> SHIFT DQSTRING GOTO 71
	expression/L2 = . SQSTRING, FOLLOW [226] -> SHIFT SQSTRING GOTO 72
	expression/L2 = . CARDINAL, FOLLOW [226] -> SHIFT CARDINAL GOTO 73
	expression/L2 = . INTEGER, FOLLOW [226] -> SHIFT INTEGER GOTO 74
	expression/L2 = . FLOAT, FOLLOW [226] -> SHIFT FLOAT GOTO 75
	expression/L2 = . "(" expression ")", FOLLOW [226] -> SHIFT '(' GOTO 76
	expression/L9 = . "&" expression, FOLLOW [226] -> SHIFT '&' GOTO 77
	expression/L1 = . "{" expressionlist "}", FOLLOW [226] -> SHIFT '{' GOTO 93
	expression/L1 = . "{" "}", FOLLOW [226] -> SHIFT '{' GOTO 93
	expression/L1 = . "new" typespec ":" expression, FOLLOW [226] -> SHIFT "new" GOTO 84
	expression/L2 = . "null", FOLLOW [226] -> SHIFT "null" GOTO 85
	expression/L9 = . "+" expression, FOLLOW [226] -> SHIFT '+' GOTO 86
	expression/L9 = . "-" expression, FOLLOW [226] -> SHIFT '-' GOTO 87
	expression/L9 = . "~" expression, FOLLOW [226] -> SHIFT '~' GOTO 88
	expression/L9 = . "!" expression, FOLLOW [226] -> SHIFT '!' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [226] -> SHIFT '*' GOTO 90
[132]
	expression/L3 = . expression "=" expression, FOLLOW [226] -> GOTO 209
	expression/L3 = . expression "+=" expression, FOLLOW [226] -> GOTO 209
	expression/L3 = . expression "-=" expression, FOLLOW [226] -> GOTO 209
	expression/L3 = . expression "*=" expression, FOLLOW [226] -> GOTO 209
	expression/L3 = . expression "/=" expression, FOLLOW [226] -> GOTO 209
	expression/L3 = expression "/=" . expression, FOLLOW [226] -> GOTO 209
	expression/L3 = . expression "%=" expression, FOLLOW [226] -> GOTO 209
	expression/L3 = . expression "&&=" expression, FOLLOW [226] -> GOTO 209
	expression/L3 = . expression "||=" expression, FOLLOW [226] -> GOTO 209
	expression/L3 = . expression "&=" expression, FOLLOW [226] -> GOTO 209
	expression/L3 = . expression "|=" expression, FOLLOW [226] -> GOTO 209
	expression/L3 = . expression "<<=" expression, FOLLOW [226] -> GOTO 209
	expression/L3 = . expression ">>=" expression, FOLLOW [226] -> GOTO 209
	expression/L4 = . expression "||" expression, FOLLOW [226] -> GOTO 209
	expression/L5 = . expression "&&" expression, FOLLOW [226] -> GOTO 209
	expression/L6 = . expression "|" expression, FOLLOW [226] -> GOTO 209
	expression/L7 = . expression "^" expression, FOLLOW [226] -> GOTO 209
	expression/L7 = . expression "&" expression, FOLLOW [226] -> GOTO 209
	expression/L8 = . expression "==" expression, FOLLOW [226] -> GOTO 209
	expression/L8 = . expression "!=" expression, FOLLOW [226] -> GOTO 209
	expression/L8 = . expression "<=" expression, FOLLOW [226] -> GOTO 209
	expression/L8 = . expression "<" expression, FOLLOW [226] -> GOTO 209
	expression/L8 = . expression ">=" expression, FOLLOW [226] -> GOTO 209
	expression/L8 = . expression ">" expression, FOLLOW [226] -> GOTO 209
	expression/L9 = . expression "+" expression, FOLLOW [226] -> GOTO 209
	expression/L9 = . expression "-" expression, FOLLOW [226] -> GOTO 209
	expression/L10 = . expression "*" expression, FOLLOW [226] -> GOTO 209
	expression/L10 = . expression "/" expression, FOLLOW [226] -> GOTO 209
	expression/L10 = . expression "%" expression, FOLLOW [226] -> GOTO 209
	expression/L11 = . expression "<<" expression, FOLLOW [226] -> GOTO 209
	expression/L11 = . expression ">>" expression, FOLLOW [226] -> GOTO 209
	expression/L12 = . expression "." IDENT, FOLLOW [226] -> GOTO 209
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [226] -> GOTO 209
	expression/L13 = . expression "(" ")", FOLLOW [226] -> GOTO 209
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [226] -> GOTO 209
	iexpression = . expression indirection IDENT, FOLLOW [226] -> GOTO 209
	expression/L12 = . iexpression, FOLLOW [226] -> GOTO 68
	expression/L2 = . BOOLEAN, FOLLOW [226] -> SHIFT BOOLEAN GOTO 69
	expression/L2 = . IDENT, FOLLOW [226] -> SHIFT IDENT GOTO 70
	expression/L2 = . DQSTRING, FOLLOW [226] -> SHIFT DQSTRING GOTO 71
	expression/L2 = . SQSTRING, FOLLOW [226] -> SHIFT SQSTRING GOTO 72
	expression/L2 = . CARDINAL, FOLLOW [226] -> SHIFT CARDINAL GOTO 73
	expression/L2 = . INTEGER, FOLLOW [226] -> SHIFT INTEGER GOTO 74
	expression/L2 = . FLOAT, FOLLOW [226] -> SHIFT FLOAT GOTO 75
	expression/L2 = . "(" expression ")", FOLLOW [226] -> SHIFT '(' GOTO 76
	expression/L9 = . "&" expression, FOLLOW [226] -> SHIFT '&' GOTO 77
	expression/L1 = . "{" expressionlist "}", FOLLOW [226] -> SHIFT '{' GOTO 93
	expression/L1 = . "{" "}", FOLLOW [226] -> SHIFT '{' GOTO 93
	expression/L1 = . "new" typespec ":" expression, FOLLOW [226] -> SHIFT "new" GOTO 84
	expression/L2 = . "null", FOLLOW [226] -> SHIFT "null" GOTO 85
	expression/L9 = . "+" expression, FOLLOW [226] -> SHIFT '+' GOTO 86
	expression/L9 = . "-" expression, FOLLOW [226] -> SHIFT '-' GOTO 87
	expression/L9 = . "~" expression, FOLLOW [226] -> SHIFT '~' GOTO 88
	expression/L9 = . "!" expression, FOLLOW [226] -> SHIFT '!' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [226] -> SHIFT '*' GOTO 90
[133]
	expression/L3 = . expression "=" expression, FOLLOW [226] -> GOTO 210
	expression/L3 = . expression "+=" expression, FOLLOW [226] -> GOTO 210
	expression/L3 = . expression "-=" expression, FOLLOW [226] -> GOTO 210
	expression/L3 = . expression "*=" expression, FOLLOW [226] -> GOTO 210
	expression/L3 = . expression "/=" expression, FOLLOW [226] -> GOTO 210
	expression/L3 = . expression "%=" expression, FOLLOW [226] -> GOTO 210
	expression/L3 = expression "%=" . expression, FOLLOW [226] -> GOTO 210
	expression/L3 = . expression "&&=" expression, FOLLOW [226] -> GOTO 210
	expression/L3 = . expression "||=" expression, FOLLOW [226] -> GOTO 210
	expression/L3 = . expression "&=" expression, FOLLOW [226] -> GOTO 210
	expression/L3 = . expression "|=" expression, FOLLOW [226] -> GOTO 210
	expression/L3 = . expression "<<=" expression, FOLLOW [226] -> GOTO 210
	expression/L3 = . expression ">>=" expression, FOLLOW [226] -> GOTO 210
	expression/L4 = . expression "||" expression, FOLLOW [226] -> GOTO 210
	expression/L5 = . expression "&&" expression, FOLLOW [226] -> GOTO 210
	expression/L6 = . expression "|" expression, FOLLOW [226] -> GOTO 210
	expression/L7 = . expression "^" expression, FOLLOW [226] -> GOTO 210
	expression/L7 = . expression "&" expression, FOLLOW [226] -> GOTO 210
	expression/L8 = . expression "==" expression, FOLLOW [226] -> GOTO 210
	expression/L8 = . expression "!=" expression, FOLLOW [226] -> GOTO 210
	expression/L8 = . expression "<=" expression, FOLLOW [226] -> GOTO 210
	expression/L8 = . expression "<" expression, FOLLOW [226] -> GOTO 210
	expression/L8 = . expression ">=" expression, FOLLOW [226] -> GOTO 210
	expression/L8 = . expression ">" expression, FOLLOW [226] -> GOTO 210
	expression/L9 = . expression "+" expression, FOLLOW [226] -> GOTO 210
	expression/L9 = . expression "-" expression, FOLLOW [226] -> GOTO 210
	expression/L10 = . expression "*" expression, FOLLOW [226] -> GOTO 210
	expression/L10 = . expression "/" expression, FOLLOW [226] -> GOTO 210
	expression/L10 = . expression "%" expression, FOLLOW [226] -> GOTO 210
	expression/L11 = . expression "<<" expression, FOLLOW [226] -> GOTO 210
	expression/L11 = . expression ">>" expression, FOLLOW [226] -> GOTO 210
	expression/L12 = . expression "." IDENT, FOLLOW [226] -> GOTO 210
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [226] -> GOTO 210
	expression/L13 = . expression "(" ")", FOLLOW [226] -> GOTO 210
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [226] -> GOTO 210
	iexpression = . expression indirection IDENT, FOLLOW [226] -> GOTO 210
	expression/L12 = . iexpression, FOLLOW [226] -> GOTO 68
	expression/L2 = . BOOLEAN, FOLLOW [226] -> SHIFT BOOLEAN GOTO 69
	expression/L2 = . IDENT, FOLLOW [226] -> SHIFT IDENT GOTO 70
	expression/L2 = . DQSTRING, FOLLOW [226] -> SHIFT DQSTRING GOTO 71
	expression/L2 = . SQSTRING, FOLLOW [226] -> SHIFT SQSTRING GOTO 72
	expression/L2 = . CARDINAL, FOLLOW [226] -> SHIFT CARDINAL GOTO 73
	expression/L2 = . INTEGER, FOLLOW [226] -> SHIFT INTEGER GOTO 74
	expression/L2 = . FLOAT, FOLLOW [226] -> SHIFT FLOAT GOTO 75
	expression/L2 = . "(" expression ")", FOLLOW [226] -> SHIFT '(' GOTO 76
	expression/L9 = . "&" expression, FOLLOW [226] -> SHIFT '&' GOTO 77
	expression/L1 = . "{" expressionlist "}", FOLLOW [226] -> SHIFT '{' GOTO 93
	expression/L1 = . "{" "}", FOLLOW [226] -> SHIFT '{' GOTO 93
	expression/L1 = . "new" typespec ":" expression, FOLLOW [226] -> SHIFT "new" GOTO 84
	expression/L2 = . "null", FOLLOW [226] -> SHIFT "null" GOTO 85
	expression/L9 = . "+" expression, FOLLOW [226] -> SHIFT '+' GOTO 86
	expression/L9 = . "-" expression, FOLLOW [226] -> SHIFT '-' GOTO 87
	expression/L9 = . "~" expression, FOLLOW [226] -> SHIFT '~' GOTO 88
	expression/L9 = . "!" expression, FOLLOW [226] -> SHIFT '!' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [226] -> SHIFT '*' GOTO 90
[134]
	expression/L3 = . expression "=" expression, FOLLOW [226] -> GOTO 211
	expression/L3 = . expression "+=" expression, FOLLOW [226] -> GOTO 211
	expression/L3 = . expression "-=" expression, FOLLOW [226] -> GOTO 211
	expression/L3 = . expression "*=" expression, FOLLOW [226] -> GOTO 211
	expression/L3 = . expression "/=" expression, FOLLOW [226] -> GOTO 211
	expression/L3 = . expression "%=" expression, FOLLOW [226] -> GOTO 211
	expression/L3 = . expression "&&=" expression, FOLLOW [226] -> GOTO 211
	expression/L3 = expression "&&=" . expression, FOLLOW [226] -> GOTO 211
	expression/L3 = . expression "||=" expression, FOLLOW [226] -> GOTO 211
	expression/L3 = . expression "&=" expression, FOLLOW [226] -> GOTO 211
	expression/L3 = . expression "|=" expression, FOLLOW [226] -> GOTO 211
	expression/L3 = . expression "<<=" expression, FOLLOW [226] -> GOTO 211
	expression/L3 = . expression ">>=" expression, FOLLOW [226] -> GOTO 211
	expression/L4 = . expression "||" expression, FOLLOW [226] -> GOTO 211
	expression/L5 = . expression "&&" expression, FOLLOW [226] -> GOTO 211
	expression/L6 = . expression "|" expression, FOLLOW [226] -> GOTO 211
	expression/L7 = . expression "^" expression, FOLLOW [226] -> GOTO 211
	expression/L7 = . expression "&" expression, FOLLOW [226] -> GOTO 211
	expression/L8 = . expression "==" expression, FOLLOW [226] -> GOTO 211
	expression/L8 = . expression "!=" expression, FOLLOW [226] -> GOTO 211
	expression/L8 = . expression "<=" expression, FOLLOW [226] -> GOTO 211
	expression/L8 = . expression "<" expression, FOLLOW [226] -> GOTO 211
	expression/L8 = . expression ">=" expression, FOLLOW [226] -> GOTO 211
	expression/L8 = . expression ">" expression, FOLLOW [226] -> GOTO 211
	expression/L9 = . expression "+" expression, FOLLOW [226] -> GOTO 211
	expression/L9 = . expression "-" expression, FOLLOW [226] -> GOTO 211
	expression/L10 = . expression "*" expression, FOLLOW [226] -> GOTO 211
	expression/L10 = . expression "/" expression, FOLLOW [226] -> GOTO 211
	expression/L10 = . expression "%" expression, FOLLOW [226] -> GOTO 211
	expression/L11 = . expression "<<" expression, FOLLOW [226] -> GOTO 211
	expression/L11 = . expression ">>" expression, FOLLOW [226] -> GOTO 211
	expression/L12 = . expression "." IDENT, FOLLOW [226] -> GOTO 211
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [226] -> GOTO 211
	expression/L13 = . expression "(" ")", FOLLOW [226] -> GOTO 211
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [226] -> GOTO 211
	iexpression = . expression indirection IDENT, FOLLOW [226] -> GOTO 211
	expression/L12 = . iexpression, FOLLOW [226] -> GOTO 68
	expression/L2 = . BOOLEAN, FOLLOW [226] -> SHIFT BOOLEAN GOTO 69
	expression/L2 = . IDENT, FOLLOW [226] -> SHIFT IDENT GOTO 70
	expression/L2 = . DQSTRING, FOLLOW [226] -> SHIFT DQSTRING GOTO 71
	expression/L2 = . SQSTRING, FOLLOW [226] -> SHIFT SQSTRING GOTO 72
	expression/L2 = . CARDINAL, FOLLOW [226] -> SHIFT CARDINAL GOTO 73
	expression/L2 = . INTEGER, FOLLOW [226] -> SHIFT INTEGER GOTO 74
	expression/L2 = . FLOAT, FOLLOW [226] -> SHIFT FLOAT GOTO 75
	expression/L2 = . "(" expression ")", FOLLOW [226] -> SHIFT '(' GOTO 76
	expression/L9 = . "&" expression, FOLLOW [226] -> SHIFT '&' GOTO 77
	expression/L1 = . "{" expressionlist "}", FOLLOW [226] -> SHIFT '{' GOTO 93
	expression/L1 = . "{" "}", FOLLOW [226] -> SHIFT '{' GOTO 93
	expression/L1 = . "new" typespec ":" expression, FOLLOW [226] -> SHIFT "new" GOTO 84
	expression/L2 = . "null", FOLLOW [226] -> SHIFT "null" GOTO 85
	expression/L9 = . "+" expression, FOLLOW [226] -> SHIFT '+' GOTO 86
	expression/L9 = . "-" expression, FOLLOW [226] -> SHIFT '-' GOTO 87
	expression/L9 = . "~" expression, FOLLOW [226] -> SHIFT '~' GOTO 88
	expression/L9 = . "!" expression, FOLLOW [226] -> SHIFT '!' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [226] -> SHIFT '*' GOTO 90
[135]
	expression/L3 = . expression "=" expression, FOLLOW [226] -> GOTO 212
	expression/L3 = . expression "+=" expression, FOLLOW [226] -> GOTO 212
	expression/L3 = . expression "-=" expression, FOLLOW [226] -> GOTO 212
	expression/L3 = . expression "*=" expression, FOLLOW [226] -> GOTO 212
	expression/L3 = . expression "/=" expression, FOLLOW [226] -> GOTO 212
	expression/L3 = . expression "%=" expression, FOLLOW [226] -> GOTO 212
	expression/L3 = . expression "&&=" expression, FOLLOW [226] -> GOTO 212
	expression/L3 = . expression "||=" expression, FOLLOW [226] -> GOTO 212
	expression/L3 = expression "||=" . expression, FOLLOW [226] -> GOTO 212
	expression/L3 = . expression "&=" expression, FOLLOW [226] -> GOTO 212
	expression/L3 = . expression "|=" expression, FOLLOW [226] -> GOTO 212
	expression/L3 = . expression "<<=" expression, FOLLOW [226] -> GOTO 212
	expression/L3 = . expression ">>=" expression, FOLLOW [226] -> GOTO 212
	expression/L4 = . expression "||" expression, FOLLOW [226] -> GOTO 212
	expression/L5 = . expression "&&" expression, FOLLOW [226] -> GOTO 212
	expression/L6 = . expression "|" expression, FOLLOW [226] -> GOTO 212
	expression/L7 = . expression "^" expression, FOLLOW [226] -> GOTO 212
	expression/L7 = . expression "&" expression, FOLLOW [226] -> GOTO 212
	expression/L8 = . expression "==" expression, FOLLOW [226] -> GOTO 212
	expression/L8 = . expression "!=" expression, FOLLOW [226] -> GOTO 212
	expression/L8 = . expression "<=" expression, FOLLOW [226] -> GOTO 212
	expression/L8 = . expression "<" expression, FOLLOW [226] -> GOTO 212
	expression/L8 = . expression ">=" expression, FOLLOW [226] -> GOTO 212
	expression/L8 = . expression ">" expression, FOLLOW [226] -> GOTO 212
	expression/L9 = . expression "+" expression, FOLLOW [226] -> GOTO 212
	expression/L9 = . expression "-" expression, FOLLOW [226] -> GOTO 212
	expression/L10 = . expression "*" expression, FOLLOW [226] -> GOTO 212
	expression/L10 = . expression "/" expression, FOLLOW [226] -> GOTO 212
	expression/L10 = . expression "%" expression, FOLLOW [226] -> GOTO 212
	expression/L11 = . expression "<<" expression, FOLLOW [226] -> GOTO 212
	expression/L11 = . expression ">>" expression, FOLLOW [226] -> GOTO 212
	expression/L12 = . expression "." IDENT, FOLLOW [226] -> GOTO 212
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [226] -> GOTO 212
	expression/L13 = . expression "(" ")", FOLLOW [226] -> GOTO 212
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [226] -> GOTO 212
	iexpression = . expression indirection IDENT, FOLLOW [226] -> GOTO 212
	expression/L12 = . iexpression, FOLLOW [226] -> GOTO 68
	expression/L2 = . BOOLEAN, FOLLOW [226] -> SHIFT BOOLEAN GOTO 69
	expression/L2 = . IDENT, FOLLOW [226] -> SHIFT IDENT GOTO 70
	expression/L2 = . DQSTRING, FOLLOW [226] -> SHIFT DQSTRING GOTO 71
	expression/L2 = . SQSTRING, FOLLOW [226] -> SHIFT SQSTRING GOTO 72
	expression/L2 = . CARDINAL, FOLLOW [226] -> SHIFT CARDINAL GOTO 73
	expression/L2 = . INTEGER, FOLLOW [226] -> SHIFT INTEGER GOTO 74
	expression/L2 = . FLOAT, FOLLOW [226] -> SHIFT FLOAT GOTO 75
	expression/L2 = . "(" expression ")", FOLLOW [226] -> SHIFT '(' GOTO 76
	expression/L9 = . "&" expression, FOLLOW [226] -> SHIFT '&' GOTO 77
	expression/L1 = . "{" expressionlist "}", FOLLOW [226] -> SHIFT '{' GOTO 93
	expression/L1 = . "{" "}", FOLLOW [226] -> SHIFT '{' GOTO 93
	expression/L1 = . "new" typespec ":" expression, FOLLOW [226] -> SHIFT "new" GOTO 84
	expression/L2 = . "null", FOLLOW [226] -> SHIFT "null" GOTO 85
	expression/L9 = . "+" expression, FOLLOW [226] -> SHIFT '+' GOTO 86
	expression/L9 = . "-" expression, FOLLOW [226] -> SHIFT '-' GOTO 87
	expression/L9 = . "~" expression, FOLLOW [226] -> SHIFT '~' GOTO 88
	expression/L9 = . "!" expression, FOLLOW [226] -> SHIFT '!' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [226] -> SHIFT '*' GOTO 90
[136]
	expression/L3 = . expression "=" expression, FOLLOW [226] -> GOTO 213
	expression/L3 = . expression "+=" expression, FOLLOW [226] -> GOTO 213
	expression/L3 = . expression "-=" expression, FOLLOW [226] -> GOTO 213
	expression/L3 = . expression "*=" expression, FOLLOW [226] -> GOTO 213
	expression/L3 = . expression "/=" expression, FOLLOW [226] -> GOTO 213
	expression/L3 = . expression "%=" expression, FOLLOW [226] -> GOTO 213
	expression/L3 = . expression "&&=" expression, FOLLOW [226] -> GOTO 213
	expression/L3 = . expression "||=" expression, FOLLOW [226] -> GOTO 213
	expression/L3 = . expression "&=" expression, FOLLOW [226] -> GOTO 213
	expression/L3 = expression "&=" . expression, FOLLOW [226] -> GOTO 213
	expression/L3 = . expression "|=" expression, FOLLOW [226] -> GOTO 213
	expression/L3 = . expression "<<=" expression, FOLLOW [226] -> GOTO 213
	expression/L3 = . expression ">>=" expression, FOLLOW [226] -> GOTO 213
	expression/L4 = . expression "||" expression, FOLLOW [226] -> GOTO 213
	expression/L5 = . expression "&&" expression, FOLLOW [226] -> GOTO 213
	expression/L6 = . expression "|" expression, FOLLOW [226] -> GOTO 213
	expression/L7 = . expression "^" expression, FOLLOW [226] -> GOTO 213
	expression/L7 = . expression "&" expression, FOLLOW [226] -> GOTO 213
	expression/L8 = . expression "==" expression, FOLLOW [226] -> GOTO 213
	expression/L8 = . expression "!=" expression, FOLLOW [226] -> GOTO 213
	expression/L8 = . expression "<=" expression, FOLLOW [226] -> GOTO 213
	expression/L8 = . expression "<" expression, FOLLOW [226] -> GOTO 213
	expression/L8 = . expression ">=" expression, FOLLOW [226] -> GOTO 213
	expression/L8 = . expression ">" expression, FOLLOW [226] -> GOTO 213
	expression/L9 = . expression "+" expression, FOLLOW [226] -> GOTO 213
	expression/L9 = . expression "-" expression, FOLLOW [226] -> GOTO 213
	expression/L10 = . expression "*" expression, FOLLOW [226] -> GOTO 213
	expression/L10 = . expression "/" expression, FOLLOW [226] -> GOTO 213
	expression/L10 = . expression "%" expression, FOLLOW [226] -> GOTO 213
	expression/L11 = . expression "<<" expression, FOLLOW [226] -> GOTO 213
	expression/L11 = . expression ">>" expression, FOLLOW [226] -> GOTO 213
	expression/L12 = . expression "." IDENT, FOLLOW [226] -> GOTO 213
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [226] -> GOTO 213
	expression/L13 = . expression "(" ")", FOLLOW [226] -> GOTO 213
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [226] -> GOTO 213
	iexpression = . expression indirection IDENT, FOLLOW [226] -> GOTO 213
	expression/L12 = . iexpression, FOLLOW [226] -> GOTO 68
	expression/L2 = . BOOLEAN, FOLLOW [226] -> SHIFT BOOLEAN GOTO 69
	expression/L2 = . IDENT, FOLLOW [226] -> SHIFT IDENT GOTO 70
	expression/L2 = . DQSTRING, FOLLOW [226] -> SHIFT DQSTRING GOTO 71
	expression/L2 = . SQSTRING, FOLLOW [226] -> SHIFT SQSTRING GOTO 72
	expression/L2 = . CARDINAL, FOLLOW [226] -> SHIFT CARDINAL GOTO 73
	expression/L2 = . INTEGER, FOLLOW [226] -> SHIFT INTEGER GOTO 74
	expression/L2 = . FLOAT, FOLLOW [226] -> SHIFT FLOAT GOTO 75
	expression/L2 = . "(" expression ")", FOLLOW [226] -> SHIFT '(' GOTO 76
	expression/L9 = . "&" expression, FOLLOW [226] -> SHIFT '&' GOTO 77
	expression/L1 = . "{" expressionlist "}", FOLLOW [226] -> SHIFT '{' GOTO 93
	expression/L1 = . "{" "}", FOLLOW [226] -> SHIFT '{' GOTO 93
	expression/L1 = . "new" typespec ":" expression, FOLLOW [226] -> SHIFT "new" GOTO 84
	expression/L2 = . "null", FOLLOW [226] -> SHIFT "null" GOTO 85
	expression/L9 = . "+" expression, FOLLOW [226] -> SHIFT '+' GOTO 86
	expression/L9 = . "-" expression, FOLLOW [226] -> SHIFT '-' GOTO 87
	expression/L9 = . "~" expression, FOLLOW [226] -> SHIFT '~' GOTO 88
	expression/L9 = . "!" expression, FOLLOW [226] -> SHIFT '!' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [226] -> SHIFT '*' GOTO 90
[137]
	expression/L3 = . expression "=" expression, FOLLOW [226] -> GOTO 214
	expression/L3 = . expression "+=" expression, FOLLOW [226] -> GOTO 214
	expression/L3 = . expression "-=" expression, FOLLOW [226] -> GOTO 214
	expression/L3 = . expression "*=" expression, FOLLOW [226] -> GOTO 214
	expression/L3 = . expression "/=" expression, FOLLOW [226] -> GOTO 214
	expression/L3 = . expression "%=" expression, FOLLOW [226] -> GOTO 214
	expression/L3 = . expression "&&=" expression, FOLLOW [226] -> GOTO 214
	expression/L3 = . expression "||=" expression, FOLLOW [226] -> GOTO 214
	expression/L3 = . expression "&=" expression, FOLLOW [226] -> GOTO 214
	expression/L3 = . expression "|=" expression, FOLLOW [226] -> GOTO 214
	expression/L3 = expression "|=" . expression, FOLLOW [226] -> GOTO 214
	expression/L3 = . expression "<<=" expression, FOLLOW [226] -> GOTO 214
	expression/L3 = . expression ">>=" expression, FOLLOW [226] -> GOTO 214
	expression/L4 = . expression "||" expression, FOLLOW [226] -> GOTO 214
	expression/L5 = . expression "&&" expression, FOLLOW [226] -> GOTO 214
	expression/L6 = . expression "|" expression, FOLLOW [226] -> GOTO 214
	expression/L7 = . expression "^" expression, FOLLOW [226] -> GOTO 214
	expression/L7 = . expression "&" expression, FOLLOW [226] -> GOTO 214
	expression/L8 = . expression "==" expression, FOLLOW [226] -> GOTO 214
	expression/L8 = . expression "!=" expression, FOLLOW [226] -> GOTO 214
	expression/L8 = . expression "<=" expression, FOLLOW [226] -> GOTO 214
	expression/L8 = . expression "<" expression, FOLLOW [226] -> GOTO 214
	expression/L8 = . expression ">=" expression, FOLLOW [226] -> GOTO 214
	expression/L8 = . expression ">" expression, FOLLOW [226] -> GOTO 214
	expression/L9 = . expression "+" expression, FOLLOW [226] -> GOTO 214
	expression/L9 = . expression "-" expression, FOLLOW [226] -> GOTO 214
	expression/L10 = . expression "*" expression, FOLLOW [226] -> GOTO 214
	expression/L10 = . expression "/" expression, FOLLOW [226] -> GOTO 214
	expression/L10 = . expression "%" expression, FOLLOW [226] -> GOTO 214
	expression/L11 = . expression "<<" expression, FOLLOW [226] -> GOTO 214
	expression/L11 = . expression ">>" expression, FOLLOW [226] -> GOTO 214
	expression/L12 = . expression "." IDENT, FOLLOW [226] -> GOTO 214
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [226] -> GOTO 214
	expression/L13 = . expression "(" ")", FOLLOW [226] -> GOTO 214
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [226] -> GOTO 214
	iexpression = . expression indirection IDENT, FOLLOW [226] -> GOTO 214
	expression/L12 = . iexpression, FOLLOW [226] -> GOTO 68
	expression/L2 = . BOOLEAN, FOLLOW [226] -> SHIFT BOOLEAN GOTO 69
	expression/L2 = . IDENT, FOLLOW [226] -> SHIFT IDENT GOTO 70
	expression/L2 = . DQSTRING, FOLLOW [226] -> SHIFT DQSTRING GOTO 71
	expression/L2 = . SQSTRING, FOLLOW [226] -> SHIFT SQSTRING GOTO 72
	expression/L2 = . CARDINAL, FOLLOW [226] -> SHIFT CARDINAL GOTO 73
	expression/L2 = . INTEGER, FOLLOW [226] -> SHIFT INTEGER GOTO 74
	expression/L2 = . FLOAT, FOLLOW [226] -> SHIFT FLOAT GOTO 75
	expression/L2 = . "(" expression ")", FOLLOW [226] -> SHIFT '(' GOTO 76
	expression/L9 = . "&" expression, FOLLOW [226] -> SHIFT '&' GOTO 77
	expression/L1 = . "{" expressionlist "}", FOLLOW [226] -> SHIFT '{' GOTO 93
	expression/L1 = . "{" "}", FOLLOW [226] -> SHIFT '{' GOTO 93
	expression/L1 = . "new" typespec ":" expression, FOLLOW [226] -> SHIFT "new" GOTO 84
	expression/L2 = . "null", FOLLOW [226] -> SHIFT "null" GOTO 85
	expression/L9 = . "+" expression, FOLLOW [226] -> SHIFT '+' GOTO 86
	expression/L9 = . "-" expression, FOLLOW [226] -> SHIFT '-' GOTO 87
	expression/L9 = . "~" expression, FOLLOW [226] -> SHIFT '~' GOTO 88
	expression/L9 = . "!" expression, FOLLOW [226] -> SHIFT '!' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [226] -> SHIFT '*' GOTO 90
[138]
	expression/L3 = . expression "=" expression, FOLLOW [226] -> GOTO 215
	expression/L3 = . expression "+=" expression, FOLLOW [226] -> GOTO 215
	expression/L3 = . expression "-=" expression, FOLLOW [226] -> GOTO 215
	expression/L3 = . expression "*=" expression, FOLLOW [226] -> GOTO 215
	expression/L3 = . expression "/=" expression, FOLLOW [226] -> GOTO 215
	expression/L3 = . expression "%=" expression, FOLLOW [226] -> GOTO 215
	expression/L3 = . expression "&&=" expression, FOLLOW [226] -> GOTO 215
	expression/L3 = . expression "||=" expression, FOLLOW [226] -> GOTO 215
	expression/L3 = . expression "&=" expression, FOLLOW [226] -> GOTO 215
	expression/L3 = . expression "|=" expression, FOLLOW [226] -> GOTO 215
	expression/L3 = . expression "<<=" expression, FOLLOW [226] -> GOTO 215
	expression/L3 = expression "<<=" . expression, FOLLOW [226] -> GOTO 215
	expression/L3 = . expression ">>=" expression, FOLLOW [226] -> GOTO 215
	expression/L4 = . expression "||" expression, FOLLOW [226] -> GOTO 215
	expression/L5 = . expression "&&" expression, FOLLOW [226] -> GOTO 215
	expression/L6 = . expression "|" expression, FOLLOW [226] -> GOTO 215
	expression/L7 = . expression "^" expression, FOLLOW [226] -> GOTO 215
	expression/L7 = . expression "&" expression, FOLLOW [226] -> GOTO 215
	expression/L8 = . expression "==" expression, FOLLOW [226] -> GOTO 215
	expression/L8 = . expression "!=" expression, FOLLOW [226] -> GOTO 215
	expression/L8 = . expression "<=" expression, FOLLOW [226] -> GOTO 215
	expression/L8 = . expression "<" expression, FOLLOW [226] -> GOTO 215
	expression/L8 = . expression ">=" expression, FOLLOW [226] -> GOTO 215
	expression/L8 = . expression ">" expression, FOLLOW [226] -> GOTO 215
	expression/L9 = . expression "+" expression, FOLLOW [226] -> GOTO 215
	expression/L9 = . expression "-" expression, FOLLOW [226] -> GOTO 215
	expression/L10 = . expression "*" expression, FOLLOW [226] -> GOTO 215
	expression/L10 = . expression "/" expression, FOLLOW [226] -> GOTO 215
	expression/L10 = . expression "%" expression, FOLLOW [226] -> GOTO 215
	expression/L11 = . expression "<<" expression, FOLLOW [226] -> GOTO 215
	expression/L11 = . expression ">>" expression, FOLLOW [226] -> GOTO 215
	expression/L12 = . expression "." IDENT, FOLLOW [226] -> GOTO 215
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [226] -> GOTO 215
	expression/L13 = . expression "(" ")", FOLLOW [226] -> GOTO 215
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [226] -> GOTO 215
	iexpression = . expression indirection IDENT, FOLLOW [226] -> GOTO 215
	expression/L12 = . iexpression, FOLLOW [226] -> GOTO 68
	expression/L2 = . BOOLEAN, FOLLOW [226] -> SHIFT BOOLEAN GOTO 69
	expression/L2 = . IDENT, FOLLOW [226] -> SHIFT IDENT GOTO 70
	expression/L2 = . DQSTRING, FOLLOW [226] -> SHIFT DQSTRING GOTO 71
	expression/L2 = . SQSTRING, FOLLOW [226] -> SHIFT SQSTRING GOTO 72
	expression/L2 = . CARDINAL, FOLLOW [226] -> SHIFT CARDINAL GOTO 73
	expression/L2 = . INTEGER, FOLLOW [226] -> SHIFT INTEGER GOTO 74
	expression/L2 = . FLOAT, FOLLOW [226] -> SHIFT FLOAT GOTO 75
	expression/L2 = . "(" expression ")", FOLLOW [226] -> SHIFT '(' GOTO 76
	expression/L9 = . "&" expression, FOLLOW [226] -> SHIFT '&' GOTO 77
	expression/L1 = . "{" expressionlist "}", FOLLOW [226] -> SHIFT '{' GOTO 93
	expression/L1 = . "{" "}", FOLLOW [226] -> SHIFT '{' GOTO 93
	expression/L1 = . "new" typespec ":" expression, FOLLOW [226] -> SHIFT "new" GOTO 84
	expression/L2 = . "null", FOLLOW [226] -> SHIFT "null" GOTO 85
	expression/L9 = . "+" expression, FOLLOW [226] -> SHIFT '+' GOTO 86
	expression/L9 = . "-" expression, FOLLOW [226] -> SHIFT '-' GOTO 87
	expression/L9 = . "~" expression, FOLLOW [226] -> SHIFT '~' GOTO 88
	expression/L9 = . "!" expression, FOLLOW [226] -> SHIFT '!' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [226] -> SHIFT '*' GOTO 90
[139]
	expression/L3 = . expression "=" expression, FOLLOW [226] -> GOTO 216
	expression/L3 = . expression "+=" expression, FOLLOW [226] -> GOTO 216
	expression/L3 = . expression "-=" expression, FOLLOW [226] -> GOTO 216
	expression/L3 = . expression "*=" expression, FOLLOW [226] -> GOTO 216
	expression/L3 = . expression "/=" expression, FOLLOW [226] -> GOTO 216
	expression/L3 = . expression "%=" expression, FOLLOW [226] -> GOTO 216
	expression/L3 = . expression "&&=" expression, FOLLOW [226] -> GOTO 216
	expression/L3 = . expression "||=" expression, FOLLOW [226] -> GOTO 216
	expression/L3 = . expression "&=" expression, FOLLOW [226] -> GOTO 216
	expression/L3 = . expression "|=" expression, FOLLOW [226] -> GOTO 216
	expression/L3 = . expression "<<=" expression, FOLLOW [226] -> GOTO 216
	expression/L3 = . expression ">>=" expression, FOLLOW [226] -> GOTO 216
	expression/L3 = expression ">>=" . expression, FOLLOW [226] -> GOTO 216
	expression/L4 = . expression "||" expression, FOLLOW [226] -> GOTO 216
	expression/L5 = . expression "&&" expression, FOLLOW [226] -> GOTO 216
	expression/L6 = . expression "|" expression, FOLLOW [226] -> GOTO 216
	expression/L7 = . expression "^" expression, FOLLOW [226] -> GOTO 216
	expression/L7 = . expression "&" expression, FOLLOW [226] -> GOTO 216
	expression/L8 = . expression "==" expression, FOLLOW [226] -> GOTO 216
	expression/L8 = . expression "!=" expression, FOLLOW [226] -> GOTO 216
	expression/L8 = . expression "<=" expression, FOLLOW [226] -> GOTO 216
	expression/L8 = . expression "<" expression, FOLLOW [226] -> GOTO 216
	expression/L8 = . expression ">=" expression, FOLLOW [226] -> GOTO 216
	expression/L8 = . expression ">" expression, FOLLOW [226] -> GOTO 216
	expression/L9 = . expression "+" expression, FOLLOW [226] -> GOTO 216
	expression/L9 = . expression "-" expression, FOLLOW [226] -> GOTO 216
	expression/L10 = . expression "*" expression, FOLLOW [226] -> GOTO 216
	expression/L10 = . expression "/" expression, FOLLOW [226] -> GOTO 216
	expression/L10 = . expression "%" expression, FOLLOW [226] -> GOTO 216
	expression/L11 = . expression "<<" expression, FOLLOW [226] -> GOTO 216
	expression/L11 = . expression ">>" expression, FOLLOW [226] -> GOTO 216
	expression/L12 = . expression "." IDENT, FOLLOW [226] -> GOTO 216
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [226] -> GOTO 216
	expression/L13 = . expression "(" ")", FOLLOW [226] -> GOTO 216
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [226] -> GOTO 216
	iexpression = . expression indirection IDENT, FOLLOW [226] -> GOTO 216
	expression/L12 = . iexpression, FOLLOW [226] -> GOTO 68
	expression/L2 = . BOOLEAN, FOLLOW [226] -> SHIFT BOOLEAN GOTO 69
	expression/L2 = . IDENT, FOLLOW [226] -> SHIFT IDENT GOTO 70
	expression/L2 = . DQSTRING, FOLLOW [226] -> SHIFT DQSTRING GOTO 71
	expression/L2 = . SQSTRING, FOLLOW [226] -> SHIFT SQSTRING GOTO 72
	expression/L2 = . CARDINAL, FOLLOW [226] -> SHIFT CARDINAL GOTO 73
	expression/L2 = . INTEGER, FOLLOW [226] -> SHIFT INTEGER GOTO 74
	expression/L2 = . FLOAT, FOLLOW [226] -> SHIFT FLOAT GOTO 75
	expression/L2 = . "(" expression ")", FOLLOW [226] -> SHIFT '(' GOTO 76
	expression/L9 = . "&" expression, FOLLOW [226] -> SHIFT '&' GOTO 77
	expression/L1 = . "{" expressionlist "}", FOLLOW [226] -> SHIFT '{' GOTO 93
	expression/L1 = . "{" "}", FOLLOW [226] -> SHIFT '{' GOTO 93
	expression/L1 = . "new" typespec ":" expression, FOLLOW [226] -> SHIFT "new" GOTO 84
	expression/L2 = . "null", FOLLOW [226] -> SHIFT "null" GOTO 85
	expression/L9 = . "+" expression, FOLLOW [226] -> SHIFT '+' GOTO 86
	expression/L9 = . "-" expression, FOLLOW [226] -> SHIFT '-' GOTO 87
	expression/L9 = . "~" expression, FOLLOW [226] -> SHIFT '~' GOTO 88
	expression/L9 = . "!" expression, FOLLOW [226] -> SHIFT '!' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [226] -> SHIFT '*' GOTO 90
[140]
	expression/L3 = . expression "=" expression, FOLLOW [226] -> GOTO 217
	expression/L3 = . expression "+=" expression, FOLLOW [226] -> GOTO 217
	expression/L3 = . expression "-=" expression, FOLLOW [226] -> GOTO 217
	expression/L3 = . expression "*=" expression, FOLLOW [226] -> GOTO 217
	expression/L3 = . expression "/=" expression, FOLLOW [226] -> GOTO 217
	expression/L3 = . expression "%=" expression, FOLLOW [226] -> GOTO 217
	expression/L3 = . expression "&&=" expression, FOLLOW [226] -> GOTO 217
	expression/L3 = . expression "||=" expression, FOLLOW [226] -> GOTO 217
	expression/L3 = . expression "&=" expression, FOLLOW [226] -> GOTO 217
	expression/L3 = . expression "|=" expression, FOLLOW [226] -> GOTO 217
	expression/L3 = . expression "<<=" expression, FOLLOW [226] -> GOTO 217
	expression/L3 = . expression ">>=" expression, FOLLOW [226] -> GOTO 217
	expression/L4 = . expression "||" expression, FOLLOW [226] -> GOTO 217
	expression/L4 = expression "||" . expression, FOLLOW [226] -> GOTO 217
	expression/L5 = . expression "&&" expression, FOLLOW [226] -> GOTO 217
	expression/L6 = . expression "|" expression, FOLLOW [226] -> GOTO 217
	expression/L7 = . expression "^" expression, FOLLOW [226] -> GOTO 217
	expression/L7 = . expression "&" expression, FOLLOW [226] -> GOTO 217
	expression/L8 = . expression "==" expression, FOLLOW [226] -> GOTO 217
	expression/L8 = . expression "!=" expression, FOLLOW [226] -> GOTO 217
	expression/L8 = . expression "<=" expression, FOLLOW [226] -> GOTO 217
	expression/L8 = . expression "<" expression, FOLLOW [226] -> GOTO 217
	expression/L8 = . expression ">=" expression, FOLLOW [226] -> GOTO 217
	expression/L8 = . expression ">" expression, FOLLOW [226] -> GOTO 217
	expression/L9 = . expression "+" expression, FOLLOW [226] -> GOTO 217
	expression/L9 = . expression "-" expression, FOLLOW [226] -> GOTO 217
	expression/L10 = . expression "*" expression, FOLLOW [226] -> GOTO 217
	expression/L10 = . expression "/" expression, FOLLOW [226] -> GOTO 217
	expression/L10 = . expression "%" expression, FOLLOW [226] -> GOTO 217
	expression/L11 = . expression "<<" expression, FOLLOW [226] -> GOTO 217
	expression/L11 = . expression ">>" expression, FOLLOW [226] -> GOTO 217
	expression/L12 = . expression "." IDENT, FOLLOW [226] -> GOTO 217
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [226] -> GOTO 217
	expression/L13 = . expression "(" ")", FOLLOW [226] -> GOTO 217
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [226] -> GOTO 217
	iexpression = . expression indirection IDENT, FOLLOW [226] -> GOTO 217
	expression/L12 = . iexpression, FOLLOW [226] -> GOTO 68
	expression/L2 = . BOOLEAN, FOLLOW [226] -> SHIFT BOOLEAN GOTO 69
	expression/L2 = . IDENT, FOLLOW [226] -> SHIFT IDENT GOTO 70
	expression/L2 = . DQSTRING, FOLLOW [226] -> SHIFT DQSTRING GOTO 71
	expression/L2 = . SQSTRING, FOLLOW [226] -> SHIFT SQSTRING GOTO 72
	expression/L2 = . CARDINAL, FOLLOW [226] -> SHIFT CARDINAL GOTO 73
	expression/L2 = . INTEGER, FOLLOW [226] -> SHIFT INTEGER GOTO 74
	expression/L2 = . FLOAT, FOLLOW [226] -> SHIFT FLOAT GOTO 75
	expression/L2 = . "(" expression ")", FOLLOW [226] -> SHIFT '(' GOTO 76
	expression/L9 = . "&" expression, FOLLOW [226] -> SHIFT '&' GOTO 77
	expression/L1 = . "{" expressionlist "}", FOLLOW [226] -> SHIFT '{' GOTO 93
	expression/L1 = . "{" "}", FOLLOW [226] -> SHIFT '{' GOTO 93
	expression/L1 = . "new" typespec ":" expression, FOLLOW [226] -> SHIFT "new" GOTO 84
	expression/L2 = . "null", FOLLOW [226] -> SHIFT "null" GOTO 85
	expression/L9 = . "+" expression, FOLLOW [226] -> SHIFT '+' GOTO 86
	expression/L9 = . "-" expression, FOLLOW [226] -> SHIFT '-' GOTO 87
	expression/L9 = . "~" expression, FOLLOW [226] -> SHIFT '~' GOTO 88
	expression/L9 = . "!" expression, FOLLOW [226] -> SHIFT '!' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [226] -> SHIFT '*' GOTO 90
[141]
	expression/L3 = . expression "=" expression, FOLLOW [226] -> GOTO 218
	expression/L3 = . expression "+=" expression, FOLLOW [226] -> GOTO 218
	expression/L3 = . expression "-=" expression, FOLLOW [226] -> GOTO 218
	expression/L3 = . expression "*=" expression, FOLLOW [226] -> GOTO 218
	expression/L3 = . expression "/=" expression, FOLLOW [226] -> GOTO 218
	expression/L3 = . expression "%=" expression, FOLLOW [226] -> GOTO 218
	expression/L3 = . expression "&&=" expression, FOLLOW [226] -> GOTO 218
	expression/L3 = . expression "||=" expression, FOLLOW [226] -> GOTO 218
	expression/L3 = . expression "&=" expression, FOLLOW [226] -> GOTO 218
	expression/L3 = . expression "|=" expression, FOLLOW [226] -> GOTO 218
	expression/L3 = . expression "<<=" expression, FOLLOW [226] -> GOTO 218
	expression/L3 = . expression ">>=" expression, FOLLOW [226] -> GOTO 218
	expression/L4 = . expression "||" expression, FOLLOW [226] -> GOTO 218
	expression/L5 = . expression "&&" expression, FOLLOW [226] -> GOTO 218
	expression/L5 = expression "&&" . expression, FOLLOW [226] -> GOTO 218
	expression/L6 = . expression "|" expression, FOLLOW [226] -> GOTO 218
	expression/L7 = . expression "^" expression, FOLLOW [226] -> GOTO 218
	expression/L7 = . expression "&" expression, FOLLOW [226] -> GOTO 218
	expression/L8 = . expression "==" expression, FOLLOW [226] -> GOTO 218
	expression/L8 = . expression "!=" expression, FOLLOW [226] -> GOTO 218
	expression/L8 = . expression "<=" expression, FOLLOW [226] -> GOTO 218
	expression/L8 = . expression "<" expression, FOLLOW [226] -> GOTO 218
	expression/L8 = . expression ">=" expression, FOLLOW [226] -> GOTO 218
	expression/L8 = . expression ">" expression, FOLLOW [226] -> GOTO 218
	expression/L9 = . expression "+" expression, FOLLOW [226] -> GOTO 218
	expression/L9 = . expression "-" expression, FOLLOW [226] -> GOTO 218
	expression/L10 = . expression "*" expression, FOLLOW [226] -> GOTO 218
	expression/L10 = . expression "/" expression, FOLLOW [226] -> GOTO 218
	expression/L10 = . expression "%" expression, FOLLOW [226] -> GOTO 218
	expression/L11 = . expression "<<" expression, FOLLOW [226] -> GOTO 218
	expression/L11 = . expression ">>" expression, FOLLOW [226] -> GOTO 218
	expression/L12 = . expression "." IDENT, FOLLOW [226] -> GOTO 218
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [226] -> GOTO 218
	expression/L13 = . expression "(" ")", FOLLOW [226] -> GOTO 218
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [226] -> GOTO 218
	iexpression = . expression indirection IDENT, FOLLOW [226] -> GOTO 218
	expression/L12 = . iexpression, FOLLOW [226] -> GOTO 68
	expression/L2 = . BOOLEAN, FOLLOW [226] -> SHIFT BOOLEAN GOTO 69
	expression/L2 = . IDENT, FOLLOW [226] -> SHIFT IDENT GOTO 70
	expression/L2 = . DQSTRING, FOLLOW [226] -> SHIFT DQSTRING GOTO 71
	expression/L2 = . SQSTRING, FOLLOW [226] -> SHIFT SQSTRING GOTO 72
	expression/L2 = . CARDINAL, FOLLOW [226] -> SHIFT CARDINAL GOTO 73
	expression/L2 = . INTEGER, FOLLOW [226] -> SHIFT INTEGER GOTO 74
	expression/L2 = . FLOAT, FOLLOW [226] -> SHIFT FLOAT GOTO 75
	expression/L2 = . "(" expression ")", FOLLOW [226] -> SHIFT '(' GOTO 76
	expression/L9 = . "&" expression, FOLLOW [226] -> SHIFT '&' GOTO 77
	expression/L1 = . "{" expressionlist "}", FOLLOW [226] -> SHIFT '{' GOTO 93
	expression/L1 = . "{" "}", FOLLOW [226] -> SHIFT '{' GOTO 93
	expression/L1 = . "new" typespec ":" expression, FOLLOW [226] -> SHIFT "new" GOTO 84
	expression/L2 = . "null", FOLLOW [226] -> SHIFT "null" GOTO 85
	expression/L9 = . "+" expression, FOLLOW [226] -> SHIFT '+' GOTO 86
	expression/L9 = . "-" expression, FOLLOW [226] -> SHIFT '-' GOTO 87
	expression/L9 = . "~" expression, FOLLOW [226] -> SHIFT '~' GOTO 88
	expression/L9 = . "!" expression, FOLLOW [226] -> SHIFT '!' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [226] -> SHIFT '*' GOTO 90
[142]
	expression/L3 = . expression "=" expression, FOLLOW [226] -> GOTO 219
	expression/L3 = . expression "+=" expression, FOLLOW [226] -> GOTO 219
	expression/L3 = . expression "-=" expression, FOLLOW [226] -> GOTO 219
	expression/L3 = . expression "*=" expression, FOLLOW [226] -> GOTO 219
	expression/L3 = . expression "/=" expression, FOLLOW [226] -> GOTO 219
	expression/L3 = . expression "%=" expression, FOLLOW [226] -> GOTO 219
	expression/L3 = . expression "&&=" expression, FOLLOW [226] -> GOTO 219
	expression/L3 = . expression "||=" expression, FOLLOW [226] -> GOTO 219
	expression/L3 = . expression "&=" expression, FOLLOW [226] -> GOTO 219
	expression/L3 = . expression "|=" expression, FOLLOW [226] -> GOTO 219
	expression/L3 = . expression "<<=" expression, FOLLOW [226] -> GOTO 219
	expression/L3 = . expression ">>=" expression, FOLLOW [226] -> GOTO 219
	expression/L4 = . expression "||" expression, FOLLOW [226] -> GOTO 219
	expression/L5 = . expression "&&" expression, FOLLOW [226] -> GOTO 219
	expression/L6 = . expression "|" expression, FOLLOW [226] -> GOTO 219
	expression/L6 = expression "|" . expression, FOLLOW [226] -> GOTO 219
	expression/L7 = . expression "^" expression, FOLLOW [226] -> GOTO 219
	expression/L7 = . expression "&" expression, FOLLOW [226] -> GOTO 219
	expression/L8 = . expression "==" expression, FOLLOW [226] -> GOTO 219
	expression/L8 = . expression "!=" expression, FOLLOW [226] -> GOTO 219
	expression/L8 = . expression "<=" expression, FOLLOW [226] -> GOTO 219
	expression/L8 = . expression "<" expression, FOLLOW [226] -> GOTO 219
	expression/L8 = . expression ">=" expression, FOLLOW [226] -> GOTO 219
	expression/L8 = . expression ">" expression, FOLLOW [226] -> GOTO 219
	expression/L9 = . expression "+" expression, FOLLOW [226] -> GOTO 219
	expression/L9 = . expression "-" expression, FOLLOW [226] -> GOTO 219
	expression/L10 = . expression "*" expression, FOLLOW [226] -> GOTO 219
	expression/L10 = . expression "/" expression, FOLLOW [226] -> GOTO 219
	expression/L10 = . expression "%" expression, FOLLOW [226] -> GOTO 219
	expression/L11 = . expression "<<" expression, FOLLOW [226] -> GOTO 219
	expression/L11 = . expression ">>" expression, FOLLOW [226] -> GOTO 219
	expression/L12 = . expression "." IDENT, FOLLOW [226] -> GOTO 219
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [226] -> GOTO 219
	expression/L13 = . expression "(" ")", FOLLOW [226] -> GOTO 219
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [226] -> GOTO 219
	iexpression = . expression indirection IDENT, FOLLOW [226] -> GOTO 219
	expression/L12 = . iexpression, FOLLOW [226] -> GOTO 68
	expression/L2 = . BOOLEAN, FOLLOW [226] -> SHIFT BOOLEAN GOTO 69
	expression/L2 = . IDENT, FOLLOW [226] -> SHIFT IDENT GOTO 70
	expression/L2 = . DQSTRING, FOLLOW [226] -> SHIFT DQSTRING GOTO 71
	expression/L2 = . SQSTRING, FOLLOW [226] -> SHIFT SQSTRING GOTO 72
	expression/L2 = . CARDINAL, FOLLOW [226] -> SHIFT CARDINAL GOTO 73
	expression/L2 = . INTEGER, FOLLOW [226] -> SHIFT INTEGER GOTO 74
	expression/L2 = . FLOAT, FOLLOW [226] -> SHIFT FLOAT GOTO 75
	expression/L2 = . "(" expression ")", FOLLOW [226] -> SHIFT '(' GOTO 76
	expression/L9 = . "&" expression, FOLLOW [226] -> SHIFT '&' GOTO 77
	expression/L1 = . "{" expressionlist "}", FOLLOW [226] -> SHIFT '{' GOTO 93
	expression/L1 = . "{" "}", FOLLOW [226] -> SHIFT '{' GOTO 93
	expression/L1 = . "new" typespec ":" expression, FOLLOW [226] -> SHIFT "new" GOTO 84
	expression/L2 = . "null", FOLLOW [226] -> SHIFT "null" GOTO 85
	expression/L9 = . "+" expression, FOLLOW [226] -> SHIFT '+' GOTO 86
	expression/L9 = . "-" expression, FOLLOW [226] -> SHIFT '-' GOTO 87
	expression/L9 = . "~" expression, FOLLOW [226] -> SHIFT '~' GOTO 88
	expression/L9 = . "!" expression, FOLLOW [226] -> SHIFT '!' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [226] -> SHIFT '*' GOTO 90
[143]
	expression/L3 = . expression "=" expression, FOLLOW [226] -> GOTO 220
	expression/L3 = . expression "+=" expression, FOLLOW [226] -> GOTO 220
	expression/L3 = . expression "-=" expression, FOLLOW [226] -> GOTO 220
	expression/L3 = . expression "*=" expression, FOLLOW [226] -> GOTO 220
	expression/L3 = . expression "/=" expression, FOLLOW [226] -> GOTO 220
	expression/L3 = . expression "%=" expression, FOLLOW [226] -> GOTO 220
	expression/L3 = . expression "&&=" expression, FOLLOW [226] -> GOTO 220
	expression/L3 = . expression "||=" expression, FOLLOW [226] -> GOTO 220
	expression/L3 = . expression "&=" expression, FOLLOW [226] -> GOTO 220
	expression/L3 = . expression "|=" expression, FOLLOW [226] -> GOTO 220
	expression/L3 = . expression "<<=" expression, FOLLOW [226] -> GOTO 220
	expression/L3 = . expression ">>=" expression, FOLLOW [226] -> GOTO 220
	expression/L4 = . expression "||" expression, FOLLOW [226] -> GOTO 220
	expression/L5 = . expression "&&" expression, FOLLOW [226] -> GOTO 220
	expression/L6 = . expression "|" expression, FOLLOW [226] -> GOTO 220
	expression/L7 = . expression "^" expression, FOLLOW [226] -> GOTO 220
	expression/L7 = . expression "&" expression, FOLLOW [226] -> GOTO 220
	expression/L8 = . expression "==" expression, FOLLOW [226] -> GOTO 220
	expression/L8 = expression "==" . expression, FOLLOW [226] -> GOTO 220
	expression/L8 = . expression "!=" expression, FOLLOW [226] -> GOTO 220
	expression/L8 = . expression "<=" expression, FOLLOW [226] -> GOTO 220
	expression/L8 = . expression "<" expression, FOLLOW [226] -> GOTO 220
	expression/L8 = . expression ">=" expression, FOLLOW [226] -> GOTO 220
	expression/L8 = . expression ">" expression, FOLLOW [226] -> GOTO 220
	expression/L9 = . expression "+" expression, FOLLOW [226] -> GOTO 220
	expression/L9 = . expression "-" expression, FOLLOW [226] -> GOTO 220
	expression/L10 = . expression "*" expression, FOLLOW [226] -> GOTO 220
	expression/L10 = . expression "/" expression, FOLLOW [226] -> GOTO 220
	expression/L10 = . expression "%" expression, FOLLOW [226] -> GOTO 220
	expression/L11 = . expression "<<" expression, FOLLOW [226] -> GOTO 220
	expression/L11 = . expression ">>" expression, FOLLOW [226] -> GOTO 220
	expression/L12 = . expression "." IDENT, FOLLOW [226] -> GOTO 220
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [226] -> GOTO 220
	expression/L13 = . expression "(" ")", FOLLOW [226] -> GOTO 220
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [226] -> GOTO 220
	iexpression = . expression indirection IDENT, FOLLOW [226] -> GOTO 220
	expression/L12 = . iexpression, FOLLOW [226] -> GOTO 68
	expression/L2 = . BOOLEAN, FOLLOW [226] -> SHIFT BOOLEAN GOTO 69
	expression/L2 = . IDENT, FOLLOW [226] -> SHIFT IDENT GOTO 70
	expression/L2 = . DQSTRING, FOLLOW [226] -> SHIFT DQSTRING GOTO 71
	expression/L2 = . SQSTRING, FOLLOW [226] -> SHIFT SQSTRING GOTO 72
	expression/L2 = . CARDINAL, FOLLOW [226] -> SHIFT CARDINAL GOTO 73
	expression/L2 = . INTEGER, FOLLOW [226] -> SHIFT INTEGER GOTO 74
	expression/L2 = . FLOAT, FOLLOW [226] -> SHIFT FLOAT GOTO 75
	expression/L2 = . "(" expression ")", FOLLOW [226] -> SHIFT '(' GOTO 76
	expression/L9 = . "&" expression, FOLLOW [226] -> SHIFT '&' GOTO 77
	expression/L1 = . "{" expressionlist "}", FOLLOW [226] -> SHIFT '{' GOTO 93
	expression/L1 = . "{" "}", FOLLOW [226] -> SHIFT '{' GOTO 93
	expression/L1 = . "new" typespec ":" expression, FOLLOW [226] -> SHIFT "new" GOTO 84
	expression/L2 = . "null", FOLLOW [226] -> SHIFT "null" GOTO 85
	expression/L9 = . "+" expression, FOLLOW [226] -> SHIFT '+' GOTO 86
	expression/L9 = . "-" expression, FOLLOW [226] -> SHIFT '-' GOTO 87
	expression/L9 = . "~" expression, FOLLOW [226] -> SHIFT '~' GOTO 88
	expression/L9 = . "!" expression, FOLLOW [226] -> SHIFT '!' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [226] -> SHIFT '*' GOTO 90
[144]
	expression/L3 = . expression "=" expression, FOLLOW [226] -> GOTO 221
	expression/L3 = . expression "+=" expression, FOLLOW [226] -> GOTO 221
	expression/L3 = . expression "-=" expression, FOLLOW [226] -> GOTO 221
	expression/L3 = . expression "*=" expression, FOLLOW [226] -> GOTO 221
	expression/L3 = . expression "/=" expression, FOLLOW [226] -> GOTO 221
	expression/L3 = . expression "%=" expression, FOLLOW [226] -> GOTO 221
	expression/L3 = . expression "&&=" expression, FOLLOW [226] -> GOTO 221
	expression/L3 = . expression "||=" expression, FOLLOW [226] -> GOTO 221
	expression/L3 = . expression "&=" expression, FOLLOW [226] -> GOTO 221
	expression/L3 = . expression "|=" expression, FOLLOW [226] -> GOTO 221
	expression/L3 = . expression "<<=" expression, FOLLOW [226] -> GOTO 221
	expression/L3 = . expression ">>=" expression, FOLLOW [226] -> GOTO 221
	expression/L4 = . expression "||" expression, FOLLOW [226] -> GOTO 221
	expression/L5 = . expression "&&" expression, FOLLOW [226] -> GOTO 221
	expression/L6 = . expression "|" expression, FOLLOW [226] -> GOTO 221
	expression/L7 = . expression "^" expression, FOLLOW [226] -> GOTO 221
	expression/L7 = . expression "&" expression, FOLLOW [226] -> GOTO 221
	expression/L8 = . expression "==" expression, FOLLOW [226] -> GOTO 221
	expression/L8 = . expression "!=" expression, FOLLOW [226] -> GOTO 221
	expression/L8 = expression "!=" . expression, FOLLOW [226] -> GOTO 221
	expression/L8 = . expression "<=" expression, FOLLOW [226] -> GOTO 221
	expression/L8 = . expression "<" expression, FOLLOW [226] -> GOTO 221
	expression/L8 = . expression ">=" expression, FOLLOW [226] -> GOTO 221
	expression/L8 = . expression ">" expression, FOLLOW [226] -> GOTO 221
	expression/L9 = . expression "+" expression, FOLLOW [226] -> GOTO 221
	expression/L9 = . expression "-" expression, FOLLOW [226] -> GOTO 221
	expression/L10 = . expression "*" expression, FOLLOW [226] -> GOTO 221
	expression/L10 = . expression "/" expression, FOLLOW [226] -> GOTO 221
	expression/L10 = . expression "%" expression, FOLLOW [226] -> GOTO 221
	expression/L11 = . expression "<<" expression, FOLLOW [226] -> GOTO 221
	expression/L11 = . expression ">>" expression, FOLLOW [226] -> GOTO 221
	expression/L12 = . expression "." IDENT, FOLLOW [226] -> GOTO 221
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [226] -> GOTO 221
	expression/L13 = . expression "(" ")", FOLLOW [226] -> GOTO 221
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [226] -> GOTO 221
	iexpression = . expression indirection IDENT, FOLLOW [226] -> GOTO 221
	expression/L12 = . iexpression, FOLLOW [226] -> GOTO 68
	expression/L2 = . BOOLEAN, FOLLOW [226] -> SHIFT BOOLEAN GOTO 69
	expression/L2 = . IDENT, FOLLOW [226] -> SHIFT IDENT GOTO 70
	expression/L2 = . DQSTRING, FOLLOW [226] -> SHIFT DQSTRING GOTO 71
	expression/L2 = . SQSTRING, FOLLOW [226] -> SHIFT SQSTRING GOTO 72
	expression/L2 = . CARDINAL, FOLLOW [226] -> SHIFT CARDINAL GOTO 73
	expression/L2 = . INTEGER, FOLLOW [226] -> SHIFT INTEGER GOTO 74
	expression/L2 = . FLOAT, FOLLOW [226] -> SHIFT FLOAT GOTO 75
	expression/L2 = . "(" expression ")", FOLLOW [226] -> SHIFT '(' GOTO 76
	expression/L9 = . "&" expression, FOLLOW [226] -> SHIFT '&' GOTO 77
	expression/L1 = . "{" expressionlist "}", FOLLOW [226] -> SHIFT '{' GOTO 93
	expression/L1 = . "{" "}", FOLLOW [226] -> SHIFT '{' GOTO 93
	expression/L1 = . "new" typespec ":" expression, FOLLOW [226] -> SHIFT "new" GOTO 84
	expression/L2 = . "null", FOLLOW [226] -> SHIFT "null" GOTO 85
	expression/L9 = . "+" expression, FOLLOW [226] -> SHIFT '+' GOTO 86
	expression/L9 = . "-" expression, FOLLOW [226] -> SHIFT '-' GOTO 87
	expression/L9 = . "~" expression, FOLLOW [226] -> SHIFT '~' GOTO 88
	expression/L9 = . "!" expression, FOLLOW [226] -> SHIFT '!' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [226] -> SHIFT '*' GOTO 90
[145]
	expression/L3 = . expression "=" expression, FOLLOW [226] -> GOTO 222
	expression/L3 = . expression "+=" expression, FOLLOW [226] -> GOTO 222
	expression/L3 = . expression "-=" expression, FOLLOW [226] -> GOTO 222
	expression/L3 = . expression "*=" expression, FOLLOW [226] -> GOTO 222
	expression/L3 = . expression "/=" expression, FOLLOW [226] -> GOTO 222
	expression/L3 = . expression "%=" expression, FOLLOW [226] -> GOTO 222
	expression/L3 = . expression "&&=" expression, FOLLOW [226] -> GOTO 222
	expression/L3 = . expression "||=" expression, FOLLOW [226] -> GOTO 222
	expression/L3 = . expression "&=" expression, FOLLOW [226] -> GOTO 222
	expression/L3 = . expression "|=" expression, FOLLOW [226] -> GOTO 222
	expression/L3 = . expression "<<=" expression, FOLLOW [226] -> GOTO 222
	expression/L3 = . expression ">>=" expression, FOLLOW [226] -> GOTO 222
	expression/L4 = . expression "||" expression, FOLLOW [226] -> GOTO 222
	expression/L5 = . expression "&&" expression, FOLLOW [226] -> GOTO 222
	expression/L6 = . expression "|" expression, FOLLOW [226] -> GOTO 222
	expression/L7 = . expression "^" expression, FOLLOW [226] -> GOTO 222
	expression/L7 = . expression "&" expression, FOLLOW [226] -> GOTO 222
	expression/L8 = . expression "==" expression, FOLLOW [226] -> GOTO 222
	expression/L8 = . expression "!=" expression, FOLLOW [226] -> GOTO 222
	expression/L8 = . expression "<=" expression, FOLLOW [226] -> GOTO 222
	expression/L8 = expression "<=" . expression, FOLLOW [226] -> GOTO 222
	expression/L8 = . expression "<" expression, FOLLOW [226] -> GOTO 222
	expression/L8 = . expression ">=" expression, FOLLOW [226] -> GOTO 222
	expression/L8 = . expression ">" expression, FOLLOW [226] -> GOTO 222
	expression/L9 = . expression "+" expression, FOLLOW [226] -> GOTO 222
	expression/L9 = . expression "-" expression, FOLLOW [226] -> GOTO 222
	expression/L10 = . expression "*" expression, FOLLOW [226] -> GOTO 222
	expression/L10 = . expression "/" expression, FOLLOW [226] -> GOTO 222
	expression/L10 = . expression "%" expression, FOLLOW [226] -> GOTO 222
	expression/L11 = . expression "<<" expression, FOLLOW [226] -> GOTO 222
	expression/L11 = . expression ">>" expression, FOLLOW [226] -> GOTO 222
	expression/L12 = . expression "." IDENT, FOLLOW [226] -> GOTO 222
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [226] -> GOTO 222
	expression/L13 = . expression "(" ")", FOLLOW [226] -> GOTO 222
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [226] -> GOTO 222
	iexpression = . expression indirection IDENT, FOLLOW [226] -> GOTO 222
	expression/L12 = . iexpression, FOLLOW [226] -> GOTO 68
	expression/L2 = . BOOLEAN, FOLLOW [226] -> SHIFT BOOLEAN GOTO 69
	expression/L2 = . IDENT, FOLLOW [226] -> SHIFT IDENT GOTO 70
	expression/L2 = . DQSTRING, FOLLOW [226] -> SHIFT DQSTRING GOTO 71
	expression/L2 = . SQSTRING, FOLLOW [226] -> SHIFT SQSTRING GOTO 72
	expression/L2 = . CARDINAL, FOLLOW [226] -> SHIFT CARDINAL GOTO 73
	expression/L2 = . INTEGER, FOLLOW [226] -> SHIFT INTEGER GOTO 74
	expression/L2 = . FLOAT, FOLLOW [226] -> SHIFT FLOAT GOTO 75
	expression/L2 = . "(" expression ")", FOLLOW [226] -> SHIFT '(' GOTO 76
	expression/L9 = . "&" expression, FOLLOW [226] -> SHIFT '&' GOTO 77
	expression/L1 = . "{" expressionlist "}", FOLLOW [226] -> SHIFT '{' GOTO 93
	expression/L1 = . "{" "}", FOLLOW [226] -> SHIFT '{' GOTO 93
	expression/L1 = . "new" typespec ":" expression, FOLLOW [226] -> SHIFT "new" GOTO 84
	expression/L2 = . "null", FOLLOW [226] -> SHIFT "null" GOTO 85
	expression/L9 = . "+" expression, FOLLOW [226] -> SHIFT '+' GOTO 86
	expression/L9 = . "-" expression, FOLLOW [226] -> SHIFT '-' GOTO 87
	expression/L9 = . "~" expression, FOLLOW [226] -> SHIFT '~' GOTO 88
	expression/L9 = . "!" expression, FOLLOW [226] -> SHIFT '!' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [226] -> SHIFT '*' GOTO 90
[146]
	expression/L3 = . expression "=" expression, FOLLOW [226] -> GOTO 223
	expression/L3 = . expression "+=" expression, FOLLOW [226] -> GOTO 223
	expression/L3 = . expression "-=" expression, FOLLOW [226] -> GOTO 223
	expression/L3 = . expression "*=" expression, FOLLOW [226] -> GOTO 223
	expression/L3 = . expression "/=" expression, FOLLOW [226] -> GOTO 223
	expression/L3 = . expression "%=" expression, FOLLOW [226] -> GOTO 223
	expression/L3 = . expression "&&=" expression, FOLLOW [226] -> GOTO 223
	expression/L3 = . expression "||=" expression, FOLLOW [226] -> GOTO 223
	expression/L3 = . expression "&=" expression, FOLLOW [226] -> GOTO 223
	expression/L3 = . expression "|=" expression, FOLLOW [226] -> GOTO 223
	expression/L3 = . expression "<<=" expression, FOLLOW [226] -> GOTO 223
	expression/L3 = . expression ">>=" expression, FOLLOW [226] -> GOTO 223
	expression/L4 = . expression "||" expression, FOLLOW [226] -> GOTO 223
	expression/L5 = . expression "&&" expression, FOLLOW [226] -> GOTO 223
	expression/L6 = . expression "|" expression, FOLLOW [226] -> GOTO 223
	expression/L7 = . expression "^" expression, FOLLOW [226] -> GOTO 223
	expression/L7 = . expression "&" expression, FOLLOW [226] -> GOTO 223
	expression/L8 = . expression "==" expression, FOLLOW [226] -> GOTO 223
	expression/L8 = . expression "!=" expression, FOLLOW [226] -> GOTO 223
	expression/L8 = . expression "<=" expression, FOLLOW [226] -> GOTO 223
	expression/L8 = . expression "<" expression, FOLLOW [226] -> GOTO 223
	expression/L8 = expression "<" . expression, FOLLOW [226] -> GOTO 223
	expression/L8 = . expression ">=" expression, FOLLOW [226] -> GOTO 223
	expression/L8 = . expression ">" expression, FOLLOW [226] -> GOTO 223
	expression/L9 = . expression "+" expression, FOLLOW [226] -> GOTO 223
	expression/L9 = . expression "-" expression, FOLLOW [226] -> GOTO 223
	expression/L10 = . expression "*" expression, FOLLOW [226] -> GOTO 223
	expression/L10 = . expression "/" expression, FOLLOW [226] -> GOTO 223
	expression/L10 = . expression "%" expression, FOLLOW [226] -> GOTO 223
	expression/L11 = . expression "<<" expression, FOLLOW [226] -> GOTO 223
	expression/L11 = . expression ">>" expression, FOLLOW [226] -> GOTO 223
	expression/L12 = . expression "." IDENT, FOLLOW [226] -> GOTO 223
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [226] -> GOTO 223
	expression/L13 = . expression "(" ")", FOLLOW [226] -> GOTO 223
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [226] -> GOTO 223
	iexpression = . expression indirection IDENT, FOLLOW [226] -> GOTO 223
	expression/L12 = . iexpression, FOLLOW [226] -> GOTO 68
	expression/L2 = . BOOLEAN, FOLLOW [226] -> SHIFT BOOLEAN GOTO 69
	expression/L2 = . IDENT, FOLLOW [226] -> SHIFT IDENT GOTO 70
	expression/L2 = . DQSTRING, FOLLOW [226] -> SHIFT DQSTRING GOTO 71
	expression/L2 = . SQSTRING, FOLLOW [226] -> SHIFT SQSTRING GOTO 72
	expression/L2 = . CARDINAL, FOLLOW [226] -> SHIFT CARDINAL GOTO 73
	expression/L2 = . INTEGER, FOLLOW [226] -> SHIFT INTEGER GOTO 74
	expression/L2 = . FLOAT, FOLLOW [226] -> SHIFT FLOAT GOTO 75
	expression/L2 = . "(" expression ")", FOLLOW [226] -> SHIFT '(' GOTO 76
	expression/L9 = . "&" expression, FOLLOW [226] -> SHIFT '&' GOTO 77
	expression/L1 = . "{" expressionlist "}", FOLLOW [226] -> SHIFT '{' GOTO 93
	expression/L1 = . "{" "}", FOLLOW [226] -> SHIFT '{' GOTO 93
	expression/L1 = . "new" typespec ":" expression, FOLLOW [226] -> SHIFT "new" GOTO 84
	expression/L2 = . "null", FOLLOW [226] -> SHIFT "null" GOTO 85
	expression/L9 = . "+" expression, FOLLOW [226] -> SHIFT '+' GOTO 86
	expression/L9 = . "-" expression, FOLLOW [226] -> SHIFT '-' GOTO 87
	expression/L9 = . "~" expression, FOLLOW [226] -> SHIFT '~' GOTO 88
	expression/L9 = . "!" expression, FOLLOW [226] -> SHIFT '!' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [226] -> SHIFT '*' GOTO 90
[147]
	expression/L3 = . expression "=" expression, FOLLOW [226] -> GOTO 224
	expression/L3 = . expression "+=" expression, FOLLOW [226] -> GOTO 224
	expression/L3 = . expression "-=" expression, FOLLOW [226] -> GOTO 224
	expression/L3 = . expression "*=" expression, FOLLOW [226] -> GOTO 224
	expression/L3 = . expression "/=" expression, FOLLOW [226] -> GOTO 224
	expression/L3 = . expression "%=" expression, FOLLOW [226] -> GOTO 224
	expression/L3 = . expression "&&=" expression, FOLLOW [226] -> GOTO 224
	expression/L3 = . expression "||=" expression, FOLLOW [226] -> GOTO 224
	expression/L3 = . expression "&=" expression, FOLLOW [226] -> GOTO 224
	expression/L3 = . expression "|=" expression, FOLLOW [226] -> GOTO 224
	expression/L3 = . expression "<<=" expression, FOLLOW [226] -> GOTO 224
	expression/L3 = . expression ">>=" expression, FOLLOW [226] -> GOTO 224
	expression/L4 = . expression "||" expression, FOLLOW [226] -> GOTO 224
	expression/L5 = . expression "&&" expression, FOLLOW [226] -> GOTO 224
	expression/L6 = . expression "|" expression, FOLLOW [226] -> GOTO 224
	expression/L7 = . expression "^" expression, FOLLOW [226] -> GOTO 224
	expression/L7 = . expression "&" expression, FOLLOW [226] -> GOTO 224
	expression/L8 = . expression "==" expression, FOLLOW [226] -> GOTO 224
	expression/L8 = . expression "!=" expression, FOLLOW [226] -> GOTO 224
	expression/L8 = . expression "<=" expression, FOLLOW [226] -> GOTO 224
	expression/L8 = . expression "<" expression, FOLLOW [226] -> GOTO 224
	expression/L8 = . expression ">=" expression, FOLLOW [226] -> GOTO 224
	expression/L8 = expression ">=" . expression, FOLLOW [226] -> GOTO 224
	expression/L8 = . expression ">" expression, FOLLOW [226] -> GOTO 224
	expression/L9 = . expression "+" expression, FOLLOW [226] -> GOTO 224
	expression/L9 = . expression "-" expression, FOLLOW [226] -> GOTO 224
	expression/L10 = . expression "*" expression, FOLLOW [226] -> GOTO 224
	expression/L10 = . expression "/" expression, FOLLOW [226] -> GOTO 224
	expression/L10 = . expression "%" expression, FOLLOW [226] -> GOTO 224
	expression/L11 = . expression "<<" expression, FOLLOW [226] -> GOTO 224
	expression/L11 = . expression ">>" expression, FOLLOW [226] -> GOTO 224
	expression/L12 = . expression "." IDENT, FOLLOW [226] -> GOTO 224
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [226] -> GOTO 224
	expression/L13 = . expression "(" ")", FOLLOW [226] -> GOTO 224
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [226] -> GOTO 224
	iexpression = . expression indirection IDENT, FOLLOW [226] -> GOTO 224
	expression/L12 = . iexpression, FOLLOW [226] -> GOTO 68
	expression/L2 = . BOOLEAN, FOLLOW [226] -> SHIFT BOOLEAN GOTO 69
	expression/L2 = . IDENT, FOLLOW [226] -> SHIFT IDENT GOTO 70
	expression/L2 = . DQSTRING, FOLLOW [226] -> SHIFT DQSTRING GOTO 71
	expression/L2 = . SQSTRING, FOLLOW [226] -> SHIFT SQSTRING GOTO 72
	expression/L2 = . CARDINAL, FOLLOW [226] -> SHIFT CARDINAL GOTO 73
	expression/L2 = . INTEGER, FOLLOW [226] -> SHIFT INTEGER GOTO 74
	expression/L2 = . FLOAT, FOLLOW [226] -> SHIFT FLOAT GOTO 75
	expression/L2 = . "(" expression ")", FOLLOW [226] -> SHIFT '(' GOTO 76
	expression/L9 = . "&" expression, FOLLOW [226] -> SHIFT '&' GOTO 77
	expression/L1 = . "{" expressionlist "}", FOLLOW [226] -> SHIFT '{' GOTO 93
	expression/L1 = . "{" "}", FOLLOW [226] -> SHIFT '{' GOTO 93
	expression/L1 = . "new" typespec ":" expression, FOLLOW [226] -> SHIFT "new" GOTO 84
	expression/L2 = . "null", FOLLOW [226] -> SHIFT "null" GOTO 85
	expression/L9 = . "+" expression, FOLLOW [226] -> SHIFT '+' GOTO 86
	expression/L9 = . "-" expression, FOLLOW [226] -> SHIFT '-' GOTO 87
	expression/L9 = . "~" expression, FOLLOW [226] -> SHIFT '~' GOTO 88
	expression/L9 = . "!" expression, FOLLOW [226] -> SHIFT '!' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [226] -> SHIFT '*' GOTO 90
[148]
	expression/L3 = . expression "=" expression, FOLLOW [226] -> GOTO 225
	expression/L3 = . expression "+=" expression, FOLLOW [226] -> GOTO 225
	expression/L3 = . expression "-=" expression, FOLLOW [226] -> GOTO 225
	expression/L3 = . expression "*=" expression, FOLLOW [226] -> GOTO 225
	expression/L3 = . expression "/=" expression, FOLLOW [226] -> GOTO 225
	expression/L3 = . expression "%=" expression, FOLLOW [226] -> GOTO 225
	expression/L3 = . expression "&&=" expression, FOLLOW [226] -> GOTO 225
	expression/L3 = . expression "||=" expression, FOLLOW [226] -> GOTO 225
	expression/L3 = . expression "&=" expression, FOLLOW [226] -> GOTO 225
	expression/L3 = . expression "|=" expression, FOLLOW [226] -> GOTO 225
	expression/L3 = . expression "<<=" expression, FOLLOW [226] -> GOTO 225
	expression/L3 = . expression ">>=" expression, FOLLOW [226] -> GOTO 225
	expression/L4 = . expression "||" expression, FOLLOW [226] -> GOTO 225
	expression/L5 = . expression "&&" expression, FOLLOW [226] -> GOTO 225
	expression/L6 = . expression "|" expression, FOLLOW [226] -> GOTO 225
	expression/L7 = . expression "^" expression, FOLLOW [226] -> GOTO 225
	expression/L7 = . expression "&" expression, FOLLOW [226] -> GOTO 225
	expression/L8 = . expression "==" expression, FOLLOW [226] -> GOTO 225
	expression/L8 = . expression "!=" expression, FOLLOW [226] -> GOTO 225
	expression/L8 = . expression "<=" expression, FOLLOW [226] -> GOTO 225
	expression/L8 = . expression "<" expression, FOLLOW [226] -> GOTO 225
	expression/L8 = . expression ">=" expression, FOLLOW [226] -> GOTO 225
	expression/L8 = . expression ">" expression, FOLLOW [226] -> GOTO 225
	expression/L8 = expression ">" . expression, FOLLOW [226] -> GOTO 225
	expression/L9 = . expression "+" expression, FOLLOW [226] -> GOTO 225
	expression/L9 = . expression "-" expression, FOLLOW [226] -> GOTO 225
	expression/L10 = . expression "*" expression, FOLLOW [226] -> GOTO 225
	expression/L10 = . expression "/" expression, FOLLOW [226] -> GOTO 225
	expression/L10 = . expression "%" expression, FOLLOW [226] -> GOTO 225
	expression/L11 = . expression "<<" expression, FOLLOW [226] -> GOTO 225
	expression/L11 = . expression ">>" expression, FOLLOW [226] -> GOTO 225
	expression/L12 = . expression "." IDENT, FOLLOW [226] -> GOTO 225
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [226] -> GOTO 225
	expression/L13 = . expression "(" ")", FOLLOW [226] -> GOTO 225
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [226] -> GOTO 225
	iexpression = . expression indirection IDENT, FOLLOW [226] -> GOTO 225
	expression/L12 = . iexpression, FOLLOW [226] -> GOTO 68
	expression/L2 = . BOOLEAN, FOLLOW [226] -> SHIFT BOOLEAN GOTO 69
	expression/L2 = . IDENT, FOLLOW [226] -> SHIFT IDENT GOTO 70
	expression/L2 = . DQSTRING, FOLLOW [226] -> SHIFT DQSTRING GOTO 71
	expression/L2 = . SQSTRING, FOLLOW [226] -> SHIFT SQSTRING GOTO 72
	expression/L2 = . CARDINAL, FOLLOW [226] -> SHIFT CARDINAL GOTO 73
	expression/L2 = . INTEGER, FOLLOW [226] -> SHIFT INTEGER GOTO 74
	expression/L2 = . FLOAT, FOLLOW [226] -> SHIFT FLOAT GOTO 75
	expression/L2 = . "(" expression ")", FOLLOW [226] -> SHIFT '(' GOTO 76
	expression/L9 = . "&" expression, FOLLOW [226] -> SHIFT '&' GOTO 77
	expression/L1 = . "{" expressionlist "}", FOLLOW [226] -> SHIFT '{' GOTO 93
	expression/L1 = . "{" "}", FOLLOW [226] -> SHIFT '{' GOTO 93
	expression/L1 = . "new" typespec ":" expression, FOLLOW [226] -> SHIFT "new" GOTO 84
	expression/L2 = . "null", FOLLOW [226] -> SHIFT "null" GOTO 85
	expression/L9 = . "+" expression, FOLLOW [226] -> SHIFT '+' GOTO 86
	expression/L9 = . "-" expression, FOLLOW [226] -> SHIFT '-' GOTO 87
	expression/L9 = . "~" expression, FOLLOW [226] -> SHIFT '~' GOTO 88
	expression/L9 = . "!" expression, FOLLOW [226] -> SHIFT '!' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [226] -> SHIFT '*' GOTO 90
[149]
	expression/L3 = . expression "=" expression, FOLLOW [226] -> GOTO 226
	expression/L3 = . expression "+=" expression, FOLLOW [226] -> GOTO 226
	expression/L3 = . expression "-=" expression, FOLLOW [226] -> GOTO 226
	expression/L3 = . expression "*=" expression, FOLLOW [226] -> GOTO 226
	expression/L3 = . expression "/=" expression, FOLLOW [226] -> GOTO 226
	expression/L3 = . expression "%=" expression, FOLLOW [226] -> GOTO 226
	expression/L3 = . expression "&&=" expression, FOLLOW [226] -> GOTO 226
	expression/L3 = . expression "||=" expression, FOLLOW [226] -> GOTO 226
	expression/L3 = . expression "&=" expression, FOLLOW [226] -> GOTO 226
	expression/L3 = . expression "|=" expression, FOLLOW [226] -> GOTO 226
	expression/L3 = . expression "<<=" expression, FOLLOW [226] -> GOTO 226
	expression/L3 = . expression ">>=" expression, FOLLOW [226] -> GOTO 226
	expression/L4 = . expression "||" expression, FOLLOW [226] -> GOTO 226
	expression/L5 = . expression "&&" expression, FOLLOW [226] -> GOTO 226
	expression/L6 = . expression "|" expression, FOLLOW [226] -> GOTO 226
	expression/L7 = . expression "^" expression, FOLLOW [226] -> GOTO 226
	expression/L7 = . expression "&" expression, FOLLOW [226] -> GOTO 226
	expression/L8 = . expression "==" expression, FOLLOW [226] -> GOTO 226
	expression/L8 = . expression "!=" expression, FOLLOW [226] -> GOTO 226
	expression/L8 = . expression "<=" expression, FOLLOW [226] -> GOTO 226
	expression/L8 = . expression "<" expression, FOLLOW [226] -> GOTO 226
	expression/L8 = . expression ">=" expression, FOLLOW [226] -> GOTO 226
	expression/L8 = . expression ">" expression, FOLLOW [226] -> GOTO 226
	expression/L9 = . expression "+" expression, FOLLOW [226] -> GOTO 226
	expression/L9 = expression "+" . expression, FOLLOW [226] -> GOTO 226
	expression/L9 = . expression "-" expression, FOLLOW [226] -> GOTO 226
	expression/L10 = . expression "*" expression, FOLLOW [226] -> GOTO 226
	expression/L10 = . expression "/" expression, FOLLOW [226] -> GOTO 226
	expression/L10 = . expression "%" expression, FOLLOW [226] -> GOTO 226
	expression/L11 = . expression "<<" expression, FOLLOW [226] -> GOTO 226
	expression/L11 = . expression ">>" expression, FOLLOW [226] -> GOTO 226
	expression/L12 = . expression "." IDENT, FOLLOW [226] -> GOTO 226
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [226] -> GOTO 226
	expression/L13 = . expression "(" ")", FOLLOW [226] -> GOTO 226
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [226] -> GOTO 226
	iexpression = . expression indirection IDENT, FOLLOW [226] -> GOTO 226
	expression/L12 = . iexpression, FOLLOW [226] -> GOTO 68
	expression/L2 = . BOOLEAN, FOLLOW [226] -> SHIFT BOOLEAN GOTO 69
	expression/L2 = . IDENT, FOLLOW [226] -> SHIFT IDENT GOTO 70
	expression/L2 = . DQSTRING, FOLLOW [226] -> SHIFT DQSTRING GOTO 71
	expression/L2 = . SQSTRING, FOLLOW [226] -> SHIFT SQSTRING GOTO 72
	expression/L2 = . CARDINAL, FOLLOW [226] -> SHIFT CARDINAL GOTO 73
	expression/L2 = . INTEGER, FOLLOW [226] -> SHIFT INTEGER GOTO 74
	expression/L2 = . FLOAT, FOLLOW [226] -> SHIFT FLOAT GOTO 75
	expression/L2 = . "(" expression ")", FOLLOW [226] -> SHIFT '(' GOTO 76
	expression/L9 = . "&" expression, FOLLOW [226] -> SHIFT '&' GOTO 77
	expression/L1 = . "{" expressionlist "}", FOLLOW [226] -> SHIFT '{' GOTO 93
	expression/L1 = . "{" "}", FOLLOW [226] -> SHIFT '{' GOTO 93
	expression/L1 = . "new" typespec ":" expression, FOLLOW [226] -> SHIFT "new" GOTO 84
	expression/L2 = . "null", FOLLOW [226] -> SHIFT "null" GOTO 85
	expression/L9 = . "+" expression, FOLLOW [226] -> SHIFT '+' GOTO 86
	expression/L9 = . "-" expression, FOLLOW [226] -> SHIFT '-' GOTO 87
	expression/L9 = . "~" expression, FOLLOW [226] -> SHIFT '~' GOTO 88
	expression/L9 = . "!" expression, FOLLOW [226] -> SHIFT '!' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [226] -> SHIFT '*' GOTO 90
[150]
	expression/L3 = . expression "=" expression, FOLLOW [226] -> GOTO 227
	expression/L3 = . expression "+=" expression, FOLLOW [226] -> GOTO 227
	expression/L3 = . expression "-=" expression, FOLLOW [226] -> GOTO 227
	expression/L3 = . expression "*=" expression, FOLLOW [226] -> GOTO 227
	expression/L3 = . expression "/=" expression, FOLLOW [226] -> GOTO 227
	expression/L3 = . expression "%=" expression, FOLLOW [226] -> GOTO 227
	expression/L3 = . expression "&&=" expression, FOLLOW [226] -> GOTO 227
	expression/L3 = . expression "||=" expression, FOLLOW [226] -> GOTO 227
	expression/L3 = . expression "&=" expression, FOLLOW [226] -> GOTO 227
	expression/L3 = . expression "|=" expression, FOLLOW [226] -> GOTO 227
	expression/L3 = . expression "<<=" expression, FOLLOW [226] -> GOTO 227
	expression/L3 = . expression ">>=" expression, FOLLOW [226] -> GOTO 227
	expression/L4 = . expression "||" expression, FOLLOW [226] -> GOTO 227
	expression/L5 = . expression "&&" expression, FOLLOW [226] -> GOTO 227
	expression/L6 = . expression "|" expression, FOLLOW [226] -> GOTO 227
	expression/L7 = . expression "^" expression, FOLLOW [226] -> GOTO 227
	expression/L7 = . expression "&" expression, FOLLOW [226] -> GOTO 227
	expression/L8 = . expression "==" expression, FOLLOW [226] -> GOTO 227
	expression/L8 = . expression "!=" expression, FOLLOW [226] -> GOTO 227
	expression/L8 = . expression "<=" expression, FOLLOW [226] -> GOTO 227
	expression/L8 = . expression "<" expression, FOLLOW [226] -> GOTO 227
	expression/L8 = . expression ">=" expression, FOLLOW [226] -> GOTO 227
	expression/L8 = . expression ">" expression, FOLLOW [226] -> GOTO 227
	expression/L9 = . expression "+" expression, FOLLOW [226] -> GOTO 227
	expression/L9 = . expression "-" expression, FOLLOW [226] -> GOTO 227
	expression/L9 = expression "-" . expression, FOLLOW [226] -> GOTO 227
	expression/L10 = . expression "*" expression, FOLLOW [226] -> GOTO 227
	expression/L10 = . expression "/" expression, FOLLOW [226] -> GOTO 227
	expression/L10 = . expression "%" expression, FOLLOW [226] -> GOTO 227
	expression/L11 = . expression "<<" expression, FOLLOW [226] -> GOTO 227
	expression/L11 = . expression ">>" expression, FOLLOW [226] -> GOTO 227
	expression/L12 = . expression "." IDENT, FOLLOW [226] -> GOTO 227
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [226] -> GOTO 227
	expression/L13 = . expression "(" ")", FOLLOW [226] -> GOTO 227
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [226] -> GOTO 227
	iexpression = . expression indirection IDENT, FOLLOW [226] -> GOTO 227
	expression/L12 = . iexpression, FOLLOW [226] -> GOTO 68
	expression/L2 = . BOOLEAN, FOLLOW [226] -> SHIFT BOOLEAN GOTO 69
	expression/L2 = . IDENT, FOLLOW [226] -> SHIFT IDENT GOTO 70
	expression/L2 = . DQSTRING, FOLLOW [226] -> SHIFT DQSTRING GOTO 71
	expression/L2 = . SQSTRING, FOLLOW [226] -> SHIFT SQSTRING GOTO 72
	expression/L2 = . CARDINAL, FOLLOW [226] -> SHIFT CARDINAL GOTO 73
	expression/L2 = . INTEGER, FOLLOW [226] -> SHIFT INTEGER GOTO 74
	expression/L2 = . FLOAT, FOLLOW [226] -> SHIFT FLOAT GOTO 75
	expression/L2 = . "(" expression ")", FOLLOW [226] -> SHIFT '(' GOTO 76
	expression/L9 = . "&" expression, FOLLOW [226] -> SHIFT '&' GOTO 77
	expression/L1 = . "{" expressionlist "}", FOLLOW [226] -> SHIFT '{' GOTO 93
	expression/L1 = . "{" "}", FOLLOW [226] -> SHIFT '{' GOTO 93
	expression/L1 = . "new" typespec ":" expression, FOLLOW [226] -> SHIFT "new" GOTO 84
	expression/L2 = . "null", FOLLOW [226] -> SHIFT "null" GOTO 85
	expression/L9 = . "+" expression, FOLLOW [226] -> SHIFT '+' GOTO 86
	expression/L9 = . "-" expression, FOLLOW [226] -> SHIFT '-' GOTO 87
	expression/L9 = . "~" expression, FOLLOW [226] -> SHIFT '~' GOTO 88
	expression/L9 = . "!" expression, FOLLOW [226] -> SHIFT '!' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [226] -> SHIFT '*' GOTO 90
[151]
	expression/L3 = . expression "=" expression, FOLLOW [226] -> GOTO 228
	expression/L3 = . expression "+=" expression, FOLLOW [226] -> GOTO 228
	expression/L3 = . expression "-=" expression, FOLLOW [226] -> GOTO 228
	expression/L3 = . expression "*=" expression, FOLLOW [226] -> GOTO 228
	expression/L3 = . expression "/=" expression, FOLLOW [226] -> GOTO 228
	expression/L3 = . expression "%=" expression, FOLLOW [226] -> GOTO 228
	expression/L3 = . expression "&&=" expression, FOLLOW [226] -> GOTO 228
	expression/L3 = . expression "||=" expression, FOLLOW [226] -> GOTO 228
	expression/L3 = . expression "&=" expression, FOLLOW [226] -> GOTO 228
	expression/L3 = . expression "|=" expression, FOLLOW [226] -> GOTO 228
	expression/L3 = . expression "<<=" expression, FOLLOW [226] -> GOTO 228
	expression/L3 = . expression ">>=" expression, FOLLOW [226] -> GOTO 228
	expression/L4 = . expression "||" expression, FOLLOW [226] -> GOTO 228
	expression/L5 = . expression "&&" expression, FOLLOW [226] -> GOTO 228
	expression/L6 = . expression "|" expression, FOLLOW [226] -> GOTO 228
	expression/L7 = . expression "^" expression, FOLLOW [226] -> GOTO 228
	expression/L7 = . expression "&" expression, FOLLOW [226] -> GOTO 228
	expression/L8 = . expression "==" expression, FOLLOW [226] -> GOTO 228
	expression/L8 = . expression "!=" expression, FOLLOW [226] -> GOTO 228
	expression/L8 = . expression "<=" expression, FOLLOW [226] -> GOTO 228
	expression/L8 = . expression "<" expression, FOLLOW [226] -> GOTO 228
	expression/L8 = . expression ">=" expression, FOLLOW [226] -> GOTO 228
	expression/L8 = . expression ">" expression, FOLLOW [226] -> GOTO 228
	expression/L9 = . expression "+" expression, FOLLOW [226] -> GOTO 228
	expression/L9 = . expression "-" expression, FOLLOW [226] -> GOTO 228
	expression/L10 = . expression "*" expression, FOLLOW [226] -> GOTO 228
	expression/L10 = expression "*" . expression, FOLLOW [226] -> GOTO 228
	expression/L10 = . expression "/" expression, FOLLOW [226] -> GOTO 228
	expression/L10 = . expression "%" expression, FOLLOW [226] -> GOTO 228
	expression/L11 = . expression "<<" expression, FOLLOW [226] -> GOTO 228
	expression/L11 = . expression ">>" expression, FOLLOW [226] -> GOTO 228
	expression/L12 = . expression "." IDENT, FOLLOW [226] -> GOTO 228
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [226] -> GOTO 228
	expression/L13 = . expression "(" ")", FOLLOW [226] -> GOTO 228
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [226] -> GOTO 228
	iexpression = . expression indirection IDENT, FOLLOW [226] -> GOTO 228
	expression/L12 = . iexpression, FOLLOW [226] -> GOTO 68
	expression/L2 = . BOOLEAN, FOLLOW [226] -> SHIFT BOOLEAN GOTO 69
	expression/L2 = . IDENT, FOLLOW [226] -> SHIFT IDENT GOTO 70
	expression/L2 = . DQSTRING, FOLLOW [226] -> SHIFT DQSTRING GOTO 71
	expression/L2 = . SQSTRING, FOLLOW [226] -> SHIFT SQSTRING GOTO 72
	expression/L2 = . CARDINAL, FOLLOW [226] -> SHIFT CARDINAL GOTO 73
	expression/L2 = . INTEGER, FOLLOW [226] -> SHIFT INTEGER GOTO 74
	expression/L2 = . FLOAT, FOLLOW [226] -> SHIFT FLOAT GOTO 75
	expression/L2 = . "(" expression ")", FOLLOW [226] -> SHIFT '(' GOTO 76
	expression/L9 = . "&" expression, FOLLOW [226] -> SHIFT '&' GOTO 77
	expression/L1 = . "{" expressionlist "}", FOLLOW [226] -> SHIFT '{' GOTO 93
	expression/L1 = . "{" "}", FOLLOW [226] -> SHIFT '{' GOTO 93
	expression/L1 = . "new" typespec ":" expression, FOLLOW [226] -> SHIFT "new" GOTO 84
	expression/L2 = . "null", FOLLOW [226] -> SHIFT "null" GOTO 85
	expression/L9 = . "+" expression, FOLLOW [226] -> SHIFT '+' GOTO 86
	expression/L9 = . "-" expression, FOLLOW [226] -> SHIFT '-' GOTO 87
	expression/L9 = . "~" expression, FOLLOW [226] -> SHIFT '~' GOTO 88
	expression/L9 = . "!" expression, FOLLOW [226] -> SHIFT '!' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [226] -> SHIFT '*' GOTO 90
[152]
	expression/L3 = . expression "=" expression, FOLLOW [226] -> GOTO 229
	expression/L3 = . expression "+=" expression, FOLLOW [226] -> GOTO 229
	expression/L3 = . expression "-=" expression, FOLLOW [226] -> GOTO 229
	expression/L3 = . expression "*=" expression, FOLLOW [226] -> GOTO 229
	expression/L3 = . expression "/=" expression, FOLLOW [226] -> GOTO 229
	expression/L3 = . expression "%=" expression, FOLLOW [226] -> GOTO 229
	expression/L3 = . expression "&&=" expression, FOLLOW [226] -> GOTO 229
	expression/L3 = . expression "||=" expression, FOLLOW [226] -> GOTO 229
	expression/L3 = . expression "&=" expression, FOLLOW [226] -> GOTO 229
	expression/L3 = . expression "|=" expression, FOLLOW [226] -> GOTO 229
	expression/L3 = . expression "<<=" expression, FOLLOW [226] -> GOTO 229
	expression/L3 = . expression ">>=" expression, FOLLOW [226] -> GOTO 229
	expression/L4 = . expression "||" expression, FOLLOW [226] -> GOTO 229
	expression/L5 = . expression "&&" expression, FOLLOW [226] -> GOTO 229
	expression/L6 = . expression "|" expression, FOLLOW [226] -> GOTO 229
	expression/L7 = . expression "^" expression, FOLLOW [226] -> GOTO 229
	expression/L7 = . expression "&" expression, FOLLOW [226] -> GOTO 229
	expression/L8 = . expression "==" expression, FOLLOW [226] -> GOTO 229
	expression/L8 = . expression "!=" expression, FOLLOW [226] -> GOTO 229
	expression/L8 = . expression "<=" expression, FOLLOW [226] -> GOTO 229
	expression/L8 = . expression "<" expression, FOLLOW [226] -> GOTO 229
	expression/L8 = . expression ">=" expression, FOLLOW [226] -> GOTO 229
	expression/L8 = . expression ">" expression, FOLLOW [226] -> GOTO 229
	expression/L9 = . expression "+" expression, FOLLOW [226] -> GOTO 229
	expression/L9 = . expression "-" expression, FOLLOW [226] -> GOTO 229
	expression/L10 = . expression "*" expression, FOLLOW [226] -> GOTO 229
	expression/L10 = . expression "/" expression, FOLLOW [226] -> GOTO 229
	expression/L10 = expression "/" . expression, FOLLOW [226] -> GOTO 229
	expression/L10 = . expression "%" expression, FOLLOW [226] -> GOTO 229
	expression/L11 = . expression "<<" expression, FOLLOW [226] -> GOTO 229
	expression/L11 = . expression ">>" expression, FOLLOW [226] -> GOTO 229
	expression/L12 = . expression "." IDENT, FOLLOW [226] -> GOTO 229
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [226] -> GOTO 229
	expression/L13 = . expression "(" ")", FOLLOW [226] -> GOTO 229
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [226] -> GOTO 229
	iexpression = . expression indirection IDENT, FOLLOW [226] -> GOTO 229
	expression/L12 = . iexpression, FOLLOW [226] -> GOTO 68
	expression/L2 = . BOOLEAN, FOLLOW [226] -> SHIFT BOOLEAN GOTO 69
	expression/L2 = . IDENT, FOLLOW [226] -> SHIFT IDENT GOTO 70
	expression/L2 = . DQSTRING, FOLLOW [226] -> SHIFT DQSTRING GOTO 71
	expression/L2 = . SQSTRING, FOLLOW [226] -> SHIFT SQSTRING GOTO 72
	expression/L2 = . CARDINAL, FOLLOW [226] -> SHIFT CARDINAL GOTO 73
	expression/L2 = . INTEGER, FOLLOW [226] -> SHIFT INTEGER GOTO 74
	expression/L2 = . FLOAT, FOLLOW [226] -> SHIFT FLOAT GOTO 75
	expression/L2 = . "(" expression ")", FOLLOW [226] -> SHIFT '(' GOTO 76
	expression/L9 = . "&" expression, FOLLOW [226] -> SHIFT '&' GOTO 77
	expression/L1 = . "{" expressionlist "}", FOLLOW [226] -> SHIFT '{' GOTO 93
	expression/L1 = . "{" "}", FOLLOW [226] -> SHIFT '{' GOTO 93
	expression/L1 = . "new" typespec ":" expression, FOLLOW [226] -> SHIFT "new" GOTO 84
	expression/L2 = . "null", FOLLOW [226] -> SHIFT "null" GOTO 85
	expression/L9 = . "+" expression, FOLLOW [226] -> SHIFT '+' GOTO 86
	expression/L9 = . "-" expression, FOLLOW [226] -> SHIFT '-' GOTO 87
	expression/L9 = . "~" expression, FOLLOW [226] -> SHIFT '~' GOTO 88
	expression/L9 = . "!" expression, FOLLOW [226] -> SHIFT '!' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [226] -> SHIFT '*' GOTO 90
[153]
	expression/L3 = . expression "=" expression, FOLLOW [226] -> GOTO 230
	expression/L3 = . expression "+=" expression, FOLLOW [226] -> GOTO 230
	expression/L3 = . expression "-=" expression, FOLLOW [226] -> GOTO 230
	expression/L3 = . expression "*=" expression, FOLLOW [226] -> GOTO 230
	expression/L3 = . expression "/=" expression, FOLLOW [226] -> GOTO 230
	expression/L3 = . expression "%=" expression, FOLLOW [226] -> GOTO 230
	expression/L3 = . expression "&&=" expression, FOLLOW [226] -> GOTO 230
	expression/L3 = . expression "||=" expression, FOLLOW [226] -> GOTO 230
	expression/L3 = . expression "&=" expression, FOLLOW [226] -> GOTO 230
	expression/L3 = . expression "|=" expression, FOLLOW [226] -> GOTO 230
	expression/L3 = . expression "<<=" expression, FOLLOW [226] -> GOTO 230
	expression/L3 = . expression ">>=" expression, FOLLOW [226] -> GOTO 230
	expression/L4 = . expression "||" expression, FOLLOW [226] -> GOTO 230
	expression/L5 = . expression "&&" expression, FOLLOW [226] -> GOTO 230
	expression/L6 = . expression "|" expression, FOLLOW [226] -> GOTO 230
	expression/L7 = . expression "^" expression, FOLLOW [226] -> GOTO 230
	expression/L7 = . expression "&" expression, FOLLOW [226] -> GOTO 230
	expression/L8 = . expression "==" expression, FOLLOW [226] -> GOTO 230
	expression/L8 = . expression "!=" expression, FOLLOW [226] -> GOTO 230
	expression/L8 = . expression "<=" expression, FOLLOW [226] -> GOTO 230
	expression/L8 = . expression "<" expression, FOLLOW [226] -> GOTO 230
	expression/L8 = . expression ">=" expression, FOLLOW [226] -> GOTO 230
	expression/L8 = . expression ">" expression, FOLLOW [226] -> GOTO 230
	expression/L9 = . expression "+" expression, FOLLOW [226] -> GOTO 230
	expression/L9 = . expression "-" expression, FOLLOW [226] -> GOTO 230
	expression/L10 = . expression "*" expression, FOLLOW [226] -> GOTO 230
	expression/L10 = . expression "/" expression, FOLLOW [226] -> GOTO 230
	expression/L10 = . expression "%" expression, FOLLOW [226] -> GOTO 230
	expression/L10 = expression "%" . expression, FOLLOW [226] -> GOTO 230
	expression/L11 = . expression "<<" expression, FOLLOW [226] -> GOTO 230
	expression/L11 = . expression ">>" expression, FOLLOW [226] -> GOTO 230
	expression/L12 = . expression "." IDENT, FOLLOW [226] -> GOTO 230
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [226] -> GOTO 230
	expression/L13 = . expression "(" ")", FOLLOW [226] -> GOTO 230
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [226] -> GOTO 230
	iexpression = . expression indirection IDENT, FOLLOW [226] -> GOTO 230
	expression/L12 = . iexpression, FOLLOW [226] -> GOTO 68
	expression/L2 = . BOOLEAN, FOLLOW [226] -> SHIFT BOOLEAN GOTO 69
	expression/L2 = . IDENT, FOLLOW [226] -> SHIFT IDENT GOTO 70
	expression/L2 = . DQSTRING, FOLLOW [226] -> SHIFT DQSTRING GOTO 71
	expression/L2 = . SQSTRING, FOLLOW [226] -> SHIFT SQSTRING GOTO 72
	expression/L2 = . CARDINAL, FOLLOW [226] -> SHIFT CARDINAL GOTO 73
	expression/L2 = . INTEGER, FOLLOW [226] -> SHIFT INTEGER GOTO 74
	expression/L2 = . FLOAT, FOLLOW [226] -> SHIFT FLOAT GOTO 75
	expression/L2 = . "(" expression ")", FOLLOW [226] -> SHIFT '(' GOTO 76
	expression/L9 = . "&" expression, FOLLOW [226] -> SHIFT '&' GOTO 77
	expression/L1 = . "{" expressionlist "}", FOLLOW [226] -> SHIFT '{' GOTO 93
	expression/L1 = . "{" "}", FOLLOW [226] -> SHIFT '{' GOTO 93
	expression/L1 = . "new" typespec ":" expression, FOLLOW [226] -> SHIFT "new" GOTO 84
	expression/L2 = . "null", FOLLOW [226] -> SHIFT "null" GOTO 85
	expression/L9 = . "+" expression, FOLLOW [226] -> SHIFT '+' GOTO 86
	expression/L9 = . "-" expression, FOLLOW [226] -> SHIFT '-' GOTO 87
	expression/L9 = . "~" expression, FOLLOW [226] -> SHIFT '~' GOTO 88
	expression/L9 = . "!" expression, FOLLOW [226] -> SHIFT '!' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [226] -> SHIFT '*' GOTO 90
[154]
	expression/L3 = . expression "=" expression, FOLLOW [226] -> GOTO 231
	expression/L3 = . expression "+=" expression, FOLLOW [226] -> GOTO 231
	expression/L3 = . expression "-=" expression, FOLLOW [226] -> GOTO 231
	expression/L3 = . expression "*=" expression, FOLLOW [226] -> GOTO 231
	expression/L3 = . expression "/=" expression, FOLLOW [226] -> GOTO 231
	expression/L3 = . expression "%=" expression, FOLLOW [226] -> GOTO 231
	expression/L3 = . expression "&&=" expression, FOLLOW [226] -> GOTO 231
	expression/L3 = . expression "||=" expression, FOLLOW [226] -> GOTO 231
	expression/L3 = . expression "&=" expression, FOLLOW [226] -> GOTO 231
	expression/L3 = . expression "|=" expression, FOLLOW [226] -> GOTO 231
	expression/L3 = . expression "<<=" expression, FOLLOW [226] -> GOTO 231
	expression/L3 = . expression ">>=" expression, FOLLOW [226] -> GOTO 231
	expression/L4 = . expression "||" expression, FOLLOW [226] -> GOTO 231
	expression/L5 = . expression "&&" expression, FOLLOW [226] -> GOTO 231
	expression/L6 = . expression "|" expression, FOLLOW [226] -> GOTO 231
	expression/L7 = . expression "^" expression, FOLLOW [226] -> GOTO 231
	expression/L7 = . expression "&" expression, FOLLOW [226] -> GOTO 231
	expression/L8 = . expression "==" expression, FOLLOW [226] -> GOTO 231
	expression/L8 = . expression "!=" expression, FOLLOW [226] -> GOTO 231
	expression/L8 = . expression "<=" expression, FOLLOW [226] -> GOTO 231
	expression/L8 = . expression "<" expression, FOLLOW [226] -> GOTO 231
	expression/L8 = . expression ">=" expression, FOLLOW [226] -> GOTO 231
	expression/L8 = . expression ">" expression, FOLLOW [226] -> GOTO 231
	expression/L9 = . expression "+" expression, FOLLOW [226] -> GOTO 231
	expression/L9 = . expression "-" expression, FOLLOW [226] -> GOTO 231
	expression/L10 = . expression "*" expression, FOLLOW [226] -> GOTO 231
	expression/L10 = . expression "/" expression, FOLLOW [226] -> GOTO 231
	expression/L10 = . expression "%" expression, FOLLOW [226] -> GOTO 231
	expression/L11 = . expression "<<" expression, FOLLOW [226] -> GOTO 231
	expression/L11 = expression "<<" . expression, FOLLOW [226] -> GOTO 231
	expression/L11 = . expression ">>" expression, FOLLOW [226] -> GOTO 231
	expression/L12 = . expression "." IDENT, FOLLOW [226] -> GOTO 231
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [226] -> GOTO 231
	expression/L13 = . expression "(" ")", FOLLOW [226] -> GOTO 231
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [226] -> GOTO 231
	iexpression = . expression indirection IDENT, FOLLOW [226] -> GOTO 231
	expression/L12 = . iexpression, FOLLOW [226] -> GOTO 68
	expression/L2 = . BOOLEAN, FOLLOW [226] -> SHIFT BOOLEAN GOTO 69
	expression/L2 = . IDENT, FOLLOW [226] -> SHIFT IDENT GOTO 70
	expression/L2 = . DQSTRING, FOLLOW [226] -> SHIFT DQSTRING GOTO 71
	expression/L2 = . SQSTRING, FOLLOW [226] -> SHIFT SQSTRING GOTO 72
	expression/L2 = . CARDINAL, FOLLOW [226] -> SHIFT CARDINAL GOTO 73
	expression/L2 = . INTEGER, FOLLOW [226] -> SHIFT INTEGER GOTO 74
	expression/L2 = . FLOAT, FOLLOW [226] -> SHIFT FLOAT GOTO 75
	expression/L2 = . "(" expression ")", FOLLOW [226] -> SHIFT '(' GOTO 76
	expression/L9 = . "&" expression, FOLLOW [226] -> SHIFT '&' GOTO 77
	expression/L1 = . "{" expressionlist "}", FOLLOW [226] -> SHIFT '{' GOTO 93
	expression/L1 = . "{" "}", FOLLOW [226] -> SHIFT '{' GOTO 93
	expression/L1 = . "new" typespec ":" expression, FOLLOW [226] -> SHIFT "new" GOTO 84
	expression/L2 = . "null", FOLLOW [226] -> SHIFT "null" GOTO 85
	expression/L9 = . "+" expression, FOLLOW [226] -> SHIFT '+' GOTO 86
	expression/L9 = . "-" expression, FOLLOW [226] -> SHIFT '-' GOTO 87
	expression/L9 = . "~" expression, FOLLOW [226] -> SHIFT '~' GOTO 88
	expression/L9 = . "!" expression, FOLLOW [226] -> SHIFT '!' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [226] -> SHIFT '*' GOTO 90
[155]
	expression/L3 = . expression "=" expression, FOLLOW [226] -> GOTO 232
	expression/L3 = . expression "+=" expression, FOLLOW [226] -> GOTO 232
	expression/L3 = . expression "-=" expression, FOLLOW [226] -> GOTO 232
	expression/L3 = . expression "*=" expression, FOLLOW [226] -> GOTO 232
	expression/L3 = . expression "/=" expression, FOLLOW [226] -> GOTO 232
	expression/L3 = . expression "%=" expression, FOLLOW [226] -> GOTO 232
	expression/L3 = . expression "&&=" expression, FOLLOW [226] -> GOTO 232
	expression/L3 = . expression "||=" expression, FOLLOW [226] -> GOTO 232
	expression/L3 = . expression "&=" expression, FOLLOW [226] -> GOTO 232
	expression/L3 = . expression "|=" expression, FOLLOW [226] -> GOTO 232
	expression/L3 = . expression "<<=" expression, FOLLOW [226] -> GOTO 232
	expression/L3 = . expression ">>=" expression, FOLLOW [226] -> GOTO 232
	expression/L4 = . expression "||" expression, FOLLOW [226] -> GOTO 232
	expression/L5 = . expression "&&" expression, FOLLOW [226] -> GOTO 232
	expression/L6 = . expression "|" expression, FOLLOW [226] -> GOTO 232
	expression/L7 = . expression "^" expression, FOLLOW [226] -> GOTO 232
	expression/L7 = . expression "&" expression, FOLLOW [226] -> GOTO 232
	expression/L8 = . expression "==" expression, FOLLOW [226] -> GOTO 232
	expression/L8 = . expression "!=" expression, FOLLOW [226] -> GOTO 232
	expression/L8 = . expression "<=" expression, FOLLOW [226] -> GOTO 232
	expression/L8 = . expression "<" expression, FOLLOW [226] -> GOTO 232
	expression/L8 = . expression ">=" expression, FOLLOW [226] -> GOTO 232
	expression/L8 = . expression ">" expression, FOLLOW [226] -> GOTO 232
	expression/L9 = . expression "+" expression, FOLLOW [226] -> GOTO 232
	expression/L9 = . expression "-" expression, FOLLOW [226] -> GOTO 232
	expression/L10 = . expression "*" expression, FOLLOW [226] -> GOTO 232
	expression/L10 = . expression "/" expression, FOLLOW [226] -> GOTO 232
	expression/L10 = . expression "%" expression, FOLLOW [226] -> GOTO 232
	expression/L11 = . expression "<<" expression, FOLLOW [226] -> GOTO 232
	expression/L11 = . expression ">>" expression, FOLLOW [226] -> GOTO 232
	expression/L11 = expression ">>" . expression, FOLLOW [226] -> GOTO 232
	expression/L12 = . expression "." IDENT, FOLLOW [226] -> GOTO 232
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [226] -> GOTO 232
	expression/L13 = . expression "(" ")", FOLLOW [226] -> GOTO 232
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [226] -> GOTO 232
	iexpression = . expression indirection IDENT, FOLLOW [226] -> GOTO 232
	expression/L12 = . iexpression, FOLLOW [226] -> GOTO 68
	expression/L2 = . BOOLEAN, FOLLOW [226] -> SHIFT BOOLEAN GOTO 69
	expression/L2 = . IDENT, FOLLOW [226] -> SHIFT IDENT GOTO 70
	expression/L2 = . DQSTRING, FOLLOW [226] -> SHIFT DQSTRING GOTO 71
	expression/L2 = . SQSTRING, FOLLOW [226] -> SHIFT SQSTRING GOTO 72
	expression/L2 = . CARDINAL, FOLLOW [226] -> SHIFT CARDINAL GOTO 73
	expression/L2 = . INTEGER, FOLLOW [226] -> SHIFT INTEGER GOTO 74
	expression/L2 = . FLOAT, FOLLOW [226] -> SHIFT FLOAT GOTO 75
	expression/L2 = . "(" expression ")", FOLLOW [226] -> SHIFT '(' GOTO 76
	expression/L9 = . "&" expression, FOLLOW [226] -> SHIFT '&' GOTO 77
	expression/L1 = . "{" expressionlist "}", FOLLOW [226] -> SHIFT '{' GOTO 93
	expression/L1 = . "{" "}", FOLLOW [226] -> SHIFT '{' GOTO 93
	expression/L1 = . "new" typespec ":" expression, FOLLOW [226] -> SHIFT "new" GOTO 84
	expression/L2 = . "null", FOLLOW [226] -> SHIFT "null" GOTO 85
	expression/L9 = . "+" expression, FOLLOW [226] -> SHIFT '+' GOTO 86
	expression/L9 = . "-" expression, FOLLOW [226] -> SHIFT '-' GOTO 87
	expression/L9 = . "~" expression, FOLLOW [226] -> SHIFT '~' GOTO 88
	expression/L9 = . "!" expression, FOLLOW [226] -> SHIFT '!' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [226] -> SHIFT '*' GOTO 90
[156]
	expression/L12 = expression "." . IDENT, FOLLOW [226] -> SHIFT IDENT GOTO 233
[157]
	indirection = "->" . indirection, FOLLOW [9] -> GOTO 234
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 157
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 157
	indirection = "->" . (99), FOLLOW [9] -> REDUCE indirection #1 CALL count
[158]
	iexpression = expression . indirection IDENT, FOLLOW [226] -> GOTO 122
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [226] -> SHIFT '(' GOTO 123
	expression/L13 = expression . "(" ")", FOLLOW [226] -> SHIFT '(' GOTO 123
	expression/L2 = "(" expression . ")", FOLLOW [226] -> SHIFT ')' GOTO 235
	expression/L7 = expression . "&" expression, FOLLOW [226] -> SHIFT '&' GOTO 125
	expression/L7 = expression . "^" expression, FOLLOW [226] -> SHIFT '^' GOTO 126
	expression/L3 = expression . "=" expression, FOLLOW [226] -> SHIFT '=' GOTO 127
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [226] -> SHIFT '[' GOTO 128
	expression/L3 = expression . "+=" expression, FOLLOW [226] -> SHIFT "+=" GOTO 129
	expression/L3 = expression . "-=" expression, FOLLOW [226] -> SHIFT "-=" GOTO 130
	expression/L3 = expression . "*=" expression, FOLLOW [226] -> SHIFT "*=" GOTO 131
	expression/L3 = expression . "/=" expression, FOLLOW [226] -> SHIFT "/=" GOTO 132
	expression/L3 = expression . "%=" expression, FOLLOW [226] -> SHIFT "%=" GOTO 133
	expression/L3 = expression . "&&=" expression, FOLLOW [226] -> SHIFT "&&=" GOTO 134
	expression/L3 = expression . "||=" expression, FOLLOW [226] -> SHIFT "||=" GOTO 135
	expression/L3 = expression . "&=" expression, FOLLOW [226] -> SHIFT "&=" GOTO 136
	expression/L3 = expression . "|=" expression, FOLLOW [226] -> SHIFT "|=" GOTO 137
	expression/L3 = expression . "<<=" expression, FOLLOW [226] -> SHIFT "<<=" GOTO 138
	expression/L3 = expression . ">>=" expression, FOLLOW [226] -> SHIFT ">>=" GOTO 139
	expression/L4 = expression . "||" expression, FOLLOW [226] -> SHIFT "||" GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [226] -> SHIFT "&&" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [226] -> SHIFT '|' GOTO 142
	expression/L8 = expression . "==" expression, FOLLOW [226] -> SHIFT "==" GOTO 143
	expression/L8 = expression . "!=" expression, FOLLOW [226] -> SHIFT "!=" GOTO 144
	expression/L8 = expression . "<=" expression, FOLLOW [226] -> SHIFT "<=" GOTO 145
	expression/L8 = expression . "<" expression, FOLLOW [226] -> SHIFT '<' GOTO 146
	expression/L8 = expression . ">=" expression, FOLLOW [226] -> SHIFT ">=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [226] -> SHIFT '>' GOTO 148
	expression/L9 = expression . "+" expression, FOLLOW [226] -> SHIFT '+' GOTO 149
	expression/L9 = expression . "-" expression, FOLLOW [226] -> SHIFT '-' GOTO 150
	expression/L10 = expression . "*" expression, FOLLOW [226] -> SHIFT '*' GOTO 151
	expression/L10 = expression . "/" expression, FOLLOW [226] -> SHIFT '/' GOTO 152
	expression/L10 = expression . "%" expression, FOLLOW [226] -> SHIFT '%' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [226] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [226] -> SHIFT ">>" GOTO 155
	expression/L12 = expression . "." IDENT, FOLLOW [226] -> SHIFT '.' GOTO 156
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 157
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 157
[159]
	iexpression = expression . indirection IDENT, FOLLOW [226] -> GOTO 122
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [226] -> SHIFT '(' GOTO 123
	expression/L13 = expression . "(" ")", FOLLOW [226] -> SHIFT '(' GOTO 123
	expression/L7 = expression . "&" expression, FOLLOW [226] -> SHIFT '&' GOTO 125
	expression/L7 = expression . "^" expression, FOLLOW [226] -> SHIFT '^' GOTO 126
	expression/L3 = expression . "=" expression, FOLLOW [226] -> SHIFT '=' GOTO 127
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [226] -> SHIFT '[' GOTO 128
	expression/L3 = expression . "+=" expression, FOLLOW [226] -> SHIFT "+=" GOTO 129
	expression/L3 = expression . "-=" expression, FOLLOW [226] -> SHIFT "-=" GOTO 130
	expression/L3 = expression . "*=" expression, FOLLOW [226] -> SHIFT "*=" GOTO 131
	expression/L3 = expression . "/=" expression, FOLLOW [226] -> SHIFT "/=" GOTO 132
	expression/L3 = expression . "%=" expression, FOLLOW [226] -> SHIFT "%=" GOTO 133
	expression/L3 = expression . "&&=" expression, FOLLOW [226] -> SHIFT "&&=" GOTO 134
	expression/L3 = expression . "||=" expression, FOLLOW [226] -> SHIFT "||=" GOTO 135
	expression/L3 = expression . "&=" expression, FOLLOW [226] -> SHIFT "&=" GOTO 136
	expression/L3 = expression . "|=" expression, FOLLOW [226] -> SHIFT "|=" GOTO 137
	expression/L3 = expression . "<<=" expression, FOLLOW [226] -> SHIFT "<<=" GOTO 138
	expression/L3 = expression . ">>=" expression, FOLLOW [226] -> SHIFT ">>=" GOTO 139
	expression/L4 = expression . "||" expression, FOLLOW [226] -> SHIFT "||" GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [226] -> SHIFT "&&" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [226] -> SHIFT '|' GOTO 142
	expression/L8 = expression . "==" expression, FOLLOW [226] -> SHIFT "==" GOTO 143
	expression/L8 = expression . "!=" expression, FOLLOW [226] -> SHIFT "!=" GOTO 144
	expression/L8 = expression . "<=" expression, FOLLOW [226] -> SHIFT "<=" GOTO 145
	expression/L8 = expression . "<" expression, FOLLOW [226] -> SHIFT '<' GOTO 146
	expression/L8 = expression . ">=" expression, FOLLOW [226] -> SHIFT ">=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [226] -> SHIFT '>' GOTO 148
	expression/L9 = expression . "+" expression, FOLLOW [226] -> SHIFT '+' GOTO 149
	expression/L9 = expression . "-" expression, FOLLOW [226] -> SHIFT '-' GOTO 150
	expression/L10 = expression . "*" expression, FOLLOW [226] -> SHIFT '*' GOTO 151
	expression/L10 = expression . "/" expression, FOLLOW [226] -> SHIFT '/' GOTO 152
	expression/L10 = expression . "%" expression, FOLLOW [226] -> SHIFT '%' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [226] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [226] -> SHIFT ">>" GOTO 155
	expression/L12 = expression . "." IDENT, FOLLOW [226] -> SHIFT '.' GOTO 156
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 157
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 157
	expression/L9 = "&" expression . (78), FOLLOW [226] -> REDUCE expression #2 CALL operator "&"
[160]
	statement/L1 = "{" codeblock . "}", FOLLOW [94] -> SHIFT '}' GOTO 236
[161]
	iexpression = expression . indirection IDENT, FOLLOW [171] -> GOTO 122
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [171] -> SHIFT '(' GOTO 123
	expression/L13 = expression . "(" ")", FOLLOW [171] -> SHIFT '(' GOTO 123
	statement/L1 = expression . ";", FOLLOW [94] -> SHIFT ';' GOTO 124
	expressionlist = expression . "," expressionlist, FOLLOW [16] -> SHIFT ',' GOTO 237
	expression/L7 = expression . "&" expression, FOLLOW [171] -> SHIFT '&' GOTO 125
	expression/L7 = expression . "^" expression, FOLLOW [171] -> SHIFT '^' GOTO 126
	expression/L3 = expression . "=" expression, FOLLOW [171] -> SHIFT '=' GOTO 127
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [171] -> SHIFT '[' GOTO 128
	expression/L3 = expression . "+=" expression, FOLLOW [171] -> SHIFT "+=" GOTO 129
	expression/L3 = expression . "-=" expression, FOLLOW [171] -> SHIFT "-=" GOTO 130
	expression/L3 = expression . "*=" expression, FOLLOW [171] -> SHIFT "*=" GOTO 131
	expression/L3 = expression . "/=" expression, FOLLOW [171] -> SHIFT "/=" GOTO 132
	expression/L3 = expression . "%=" expression, FOLLOW [171] -> SHIFT "%=" GOTO 133
	expression/L3 = expression . "&&=" expression, FOLLOW [171] -> SHIFT "&&=" GOTO 134
	expression/L3 = expression . "||=" expression, FOLLOW [171] -> SHIFT "||=" GOTO 135
	expression/L3 = expression . "&=" expression, FOLLOW [171] -> SHIFT "&=" GOTO 136
	expression/L3 = expression . "|=" expression, FOLLOW [171] -> SHIFT "|=" GOTO 137
	expression/L3 = expression . "<<=" expression, FOLLOW [171] -> SHIFT "<<=" GOTO 138
	expression/L3 = expression . ">>=" expression, FOLLOW [171] -> SHIFT ">>=" GOTO 139
	expression/L4 = expression . "||" expression, FOLLOW [171] -> SHIFT "||" GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [171] -> SHIFT "&&" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [171] -> SHIFT '|' GOTO 142
	expression/L8 = expression . "==" expression, FOLLOW [171] -> SHIFT "==" GOTO 143
	expression/L8 = expression . "!=" expression, FOLLOW [171] -> SHIFT "!=" GOTO 144
	expression/L8 = expression . "<=" expression, FOLLOW [171] -> SHIFT "<=" GOTO 145
	expression/L8 = expression . "<" expression, FOLLOW [171] -> SHIFT '<' GOTO 146
	expression/L8 = expression . ">=" expression, FOLLOW [171] -> SHIFT ">=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [171] -> SHIFT '>' GOTO 148
	expression/L9 = expression . "+" expression, FOLLOW [171] -> SHIFT '+' GOTO 149
	expression/L9 = expression . "-" expression, FOLLOW [171] -> SHIFT '-' GOTO 150
	expression/L10 = expression . "*" expression, FOLLOW [171] -> SHIFT '*' GOTO 151
	expression/L10 = expression . "/" expression, FOLLOW [171] -> SHIFT '/' GOTO 152
	expression/L10 = expression . "%" expression, FOLLOW [171] -> SHIFT '%' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [171] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [171] -> SHIFT ">>" GOTO 155
	expression/L12 = expression . "." IDENT, FOLLOW [171] -> SHIFT '.' GOTO 156
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 157
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 157
	expressionlist = expression ., FOLLOW [16] -> REDUCE expressionlist #1
[162]
	expression/L1 = "{" expressionlist . "}", FOLLOW [226] -> SHIFT '}' GOTO 238
[163]
	expression/L1 = "{" "}" . (52), FOLLOW [226] -> REDUCE expression #2 CALL structure
[164]
	statement/L1 = "var" variabledefinition . ";", FOLLOW [94] -> SHIFT ';' GOTO 239
[165]
	iexpression = expression . indirection IDENT, FOLLOW [93] -> GOTO 122
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [93] -> SHIFT '(' GOTO 123
	expression/L13 = expression . "(" ")", FOLLOW [93] -> SHIFT '(' GOTO 123
	statement/L1 = "return" expression . ";", FOLLOW [94] -> SHIFT ';' GOTO 240
	expression/L7 = expression . "&" expression, FOLLOW [93] -> SHIFT '&' GOTO 125
	expression/L7 = expression . "^" expression, FOLLOW [93] -> SHIFT '^' GOTO 126
	expression/L3 = expression . "=" expression, FOLLOW [93] -> SHIFT '=' GOTO 127
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [93] -> SHIFT '[' GOTO 128
	expression/L3 = expression . "+=" expression, FOLLOW [93] -> SHIFT "+=" GOTO 129
	expression/L3 = expression . "-=" expression, FOLLOW [93] -> SHIFT "-=" GOTO 130
	expression/L3 = expression . "*=" expression, FOLLOW [93] -> SHIFT "*=" GOTO 131
	expression/L3 = expression . "/=" expression, FOLLOW [93] -> SHIFT "/=" GOTO 132
	expression/L3 = expression . "%=" expression, FOLLOW [93] -> SHIFT "%=" GOTO 133
	expression/L3 = expression . "&&=" expression, FOLLOW [93] -> SHIFT "&&=" GOTO 134
	expression/L3 = expression . "||=" expression, FOLLOW [93] -> SHIFT "||=" GOTO 135
	expression/L3 = expression . "&=" expression, FOLLOW [93] -> SHIFT "&=" GOTO 136
	expression/L3 = expression . "|=" expression, FOLLOW [93] -> SHIFT "|=" GOTO 137
	expression/L3 = expression . "<<=" expression, FOLLOW [93] -> SHIFT "<<=" GOTO 138
	expression/L3 = expression . ">>=" expression, FOLLOW [93] -> SHIFT ">>=" GOTO 139
	expression/L4 = expression . "||" expression, FOLLOW [93] -> SHIFT "||" GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [93] -> SHIFT "&&" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [93] -> SHIFT '|' GOTO 142
	expression/L8 = expression . "==" expression, FOLLOW [93] -> SHIFT "==" GOTO 143
	expression/L8 = expression . "!=" expression, FOLLOW [93] -> SHIFT "!=" GOTO 144
	expression/L8 = expression . "<=" expression, FOLLOW [93] -> SHIFT "<=" GOTO 145
	expression/L8 = expression . "<" expression, FOLLOW [93] -> SHIFT '<' GOTO 146
	expression/L8 = expression . ">=" expression, FOLLOW [93] -> SHIFT ">=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [93] -> SHIFT '>' GOTO 148
	expression/L9 = expression . "+" expression, FOLLOW [93] -> SHIFT '+' GOTO 149
	expression/L9 = expression . "-" expression, FOLLOW [93] -> SHIFT '-' GOTO 150
	expression/L10 = expression . "*" expression, FOLLOW [93] -> SHIFT '*' GOTO 151
	expression/L10 = expression . "/" expression, FOLLOW [93] -> SHIFT '/' GOTO 152
	expression/L10 = expression . "%" expression, FOLLOW [93] -> SHIFT '%' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [93] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [93] -> SHIFT ">>" GOTO 155
	expression/L12 = expression . "." IDENT, FOLLOW [93] -> SHIFT '.' GOTO 156
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 157
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 157
[166]
	iexpression = expression . indirection IDENT, FOLLOW [93] -> GOTO 122
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [93] -> SHIFT '(' GOTO 123
	expression/L13 = expression . "(" ")", FOLLOW [93] -> SHIFT '(' GOTO 123
	statement/L1 = "delete" expression . ";", FOLLOW [94] -> SHIFT ';' GOTO 241
	expression/L7 = expression . "&" expression, FOLLOW [93] -> SHIFT '&' GOTO 125
	expression/L7 = expression . "^" expression, FOLLOW [93] -> SHIFT '^' GOTO 126
	expression/L3 = expression . "=" expression, FOLLOW [93] -> SHIFT '=' GOTO 127
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [93] -> SHIFT '[' GOTO 128
	expression/L3 = expression . "+=" expression, FOLLOW [93] -> SHIFT "+=" GOTO 129
	expression/L3 = expression . "-=" expression, FOLLOW [93] -> SHIFT "-=" GOTO 130
	expression/L3 = expression . "*=" expression, FOLLOW [93] -> SHIFT "*=" GOTO 131
	expression/L3 = expression . "/=" expression, FOLLOW [93] -> SHIFT "/=" GOTO 132
	expression/L3 = expression . "%=" expression, FOLLOW [93] -> SHIFT "%=" GOTO 133
	expression/L3 = expression . "&&=" expression, FOLLOW [93] -> SHIFT "&&=" GOTO 134
	expression/L3 = expression . "||=" expression, FOLLOW [93] -> SHIFT "||=" GOTO 135
	expression/L3 = expression . "&=" expression, FOLLOW [93] -> SHIFT "&=" GOTO 136
	expression/L3 = expression . "|=" expression, FOLLOW [93] -> SHIFT "|=" GOTO 137
	expression/L3 = expression . "<<=" expression, FOLLOW [93] -> SHIFT "<<=" GOTO 138
	expression/L3 = expression . ">>=" expression, FOLLOW [93] -> SHIFT ">>=" GOTO 139
	expression/L4 = expression . "||" expression, FOLLOW [93] -> SHIFT "||" GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [93] -> SHIFT "&&" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [93] -> SHIFT '|' GOTO 142
	expression/L8 = expression . "==" expression, FOLLOW [93] -> SHIFT "==" GOTO 143
	expression/L8 = expression . "!=" expression, FOLLOW [93] -> SHIFT "!=" GOTO 144
	expression/L8 = expression . "<=" expression, FOLLOW [93] -> SHIFT "<=" GOTO 145
	expression/L8 = expression . "<" expression, FOLLOW [93] -> SHIFT '<' GOTO 146
	expression/L8 = expression . ">=" expression, FOLLOW [93] -> SHIFT ">=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [93] -> SHIFT '>' GOTO 148
	expression/L9 = expression . "+" expression, FOLLOW [93] -> SHIFT '+' GOTO 149
	expression/L9 = expression . "-" expression, FOLLOW [93] -> SHIFT '-' GOTO 150
	expression/L10 = expression . "*" expression, FOLLOW [93] -> SHIFT '*' GOTO 151
	expression/L10 = expression . "/" expression, FOLLOW [93] -> SHIFT '/' GOTO 152
	expression/L10 = expression . "%" expression, FOLLOW [93] -> SHIFT '%' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [93] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [93] -> SHIFT ">>" GOTO 155
	expression/L12 = expression . "." IDENT, FOLLOW [93] -> SHIFT '.' GOTO 156
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 157
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 157
[167]
	statement/L1 = "if" "(" . expression ")" "{" codeblock "}", FOLLOW [94] -> GOTO 242
	statement/L1 = "if" "(" . expression ")" "{" codeblock "}" "else" "{" codeblock "}", FOLLOW [94] -> GOTO 242
	expression/L3 = . expression "=" expression, FOLLOW [217] -> GOTO 242
	expression/L3 = . expression "+=" expression, FOLLOW [217] -> GOTO 242
	expression/L3 = . expression "-=" expression, FOLLOW [217] -> GOTO 242
	expression/L3 = . expression "*=" expression, FOLLOW [217] -> GOTO 242
	expression/L3 = . expression "/=" expression, FOLLOW [217] -> GOTO 242
	expression/L3 = . expression "%=" expression, FOLLOW [217] -> GOTO 242
	expression/L3 = . expression "&&=" expression, FOLLOW [217] -> GOTO 242
	expression/L3 = . expression "||=" expression, FOLLOW [217] -> GOTO 242
	expression/L3 = . expression "&=" expression, FOLLOW [217] -> GOTO 242
	expression/L3 = . expression "|=" expression, FOLLOW [217] -> GOTO 242
	expression/L3 = . expression "<<=" expression, FOLLOW [217] -> GOTO 242
	expression/L3 = . expression ">>=" expression, FOLLOW [217] -> GOTO 242
	expression/L4 = . expression "||" expression, FOLLOW [217] -> GOTO 242
	expression/L5 = . expression "&&" expression, FOLLOW [217] -> GOTO 242
	expression/L6 = . expression "|" expression, FOLLOW [217] -> GOTO 242
	expression/L7 = . expression "^" expression, FOLLOW [217] -> GOTO 242
	expression/L7 = . expression "&" expression, FOLLOW [217] -> GOTO 242
	expression/L8 = . expression "==" expression, FOLLOW [217] -> GOTO 242
	expression/L8 = . expression "!=" expression, FOLLOW [217] -> GOTO 242
	expression/L8 = . expression "<=" expression, FOLLOW [217] -> GOTO 242
	expression/L8 = . expression "<" expression, FOLLOW [217] -> GOTO 242
	expression/L8 = . expression ">=" expression, FOLLOW [217] -> GOTO 242
	expression/L8 = . expression ">" expression, FOLLOW [217] -> GOTO 242
	expression/L9 = . expression "+" expression, FOLLOW [217] -> GOTO 242
	expression/L9 = . expression "-" expression, FOLLOW [217] -> GOTO 242
	expression/L10 = . expression "*" expression, FOLLOW [217] -> GOTO 242
	expression/L10 = . expression "/" expression, FOLLOW [217] -> GOTO 242
	expression/L10 = . expression "%" expression, FOLLOW [217] -> GOTO 242
	expression/L11 = . expression "<<" expression, FOLLOW [217] -> GOTO 242
	expression/L11 = . expression ">>" expression, FOLLOW [217] -> GOTO 242
	expression/L12 = . expression "." IDENT, FOLLOW [217] -> GOTO 242
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [217] -> GOTO 242
	expression/L13 = . expression "(" ")", FOLLOW [217] -> GOTO 242
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [217] -> GOTO 242
	iexpression = . expression indirection IDENT, FOLLOW [217] -> GOTO 242
	expression/L12 = . iexpression, FOLLOW [217] -> GOTO 68
	expression/L2 = . BOOLEAN, FOLLOW [217] -> SHIFT BOOLEAN GOTO 69
	expression/L2 = . IDENT, FOLLOW [217] -> SHIFT IDENT GOTO 70
	expression/L2 = . DQSTRING, FOLLOW [217] -> SHIFT DQSTRING GOTO 71
	expression/L2 = . SQSTRING, FOLLOW [217] -> SHIFT SQSTRING GOTO 72
	expression/L2 = . CARDINAL, FOLLOW [217] -> SHIFT CARDINAL GOTO 73
	expression/L2 = . INTEGER, FOLLOW [217] -> SHIFT INTEGER GOTO 74
	expression/L2 = . FLOAT, FOLLOW [217] -> SHIFT FLOAT GOTO 75
	expression/L2 = . "(" expression ")", FOLLOW [217] -> SHIFT '(' GOTO 76
	expression/L9 = . "&" expression, FOLLOW [217] -> SHIFT '&' GOTO 77
	expression/L1 = . "{" expressionlist "}", FOLLOW [217] -> SHIFT '{' GOTO 93
	expression/L1 = . "{" "}", FOLLOW [217] -> SHIFT '{' GOTO 93
	expression/L1 = . "new" typespec ":" expression, FOLLOW [217] -> SHIFT "new" GOTO 84
	expression/L2 = . "null", FOLLOW [217] -> SHIFT "null" GOTO 85
	expression/L9 = . "+" expression, FOLLOW [217] -> SHIFT '+' GOTO 86
	expression/L9 = . "-" expression, FOLLOW [217] -> SHIFT '-' GOTO 87
	expression/L9 = . "~" expression, FOLLOW [217] -> SHIFT '~' GOTO 88
	expression/L9 = . "!" expression, FOLLOW [217] -> SHIFT '!' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [217] -> SHIFT '*' GOTO 90
[168]
	statement/L1 = "while" "(" . expression ")" "{" codeblock "}", FOLLOW [94] -> GOTO 243
	expression/L3 = . expression "=" expression, FOLLOW [217] -> GOTO 243
	expression/L3 = . expression "+=" expression, FOLLOW [217] -> GOTO 243
	expression/L3 = . expression "-=" expression, FOLLOW [217] -> GOTO 243
	expression/L3 = . expression "*=" expression, FOLLOW [217] -> GOTO 243
	expression/L3 = . expression "/=" expression, FOLLOW [217] -> GOTO 243
	expression/L3 = . expression "%=" expression, FOLLOW [217] -> GOTO 243
	expression/L3 = . expression "&&=" expression, FOLLOW [217] -> GOTO 243
	expression/L3 = . expression "||=" expression, FOLLOW [217] -> GOTO 243
	expression/L3 = . expression "&=" expression, FOLLOW [217] -> GOTO 243
	expression/L3 = . expression "|=" expression, FOLLOW [217] -> GOTO 243
	expression/L3 = . expression "<<=" expression, FOLLOW [217] -> GOTO 243
	expression/L3 = . expression ">>=" expression, FOLLOW [217] -> GOTO 243
	expression/L4 = . expression "||" expression, FOLLOW [217] -> GOTO 243
	expression/L5 = . expression "&&" expression, FOLLOW [217] -> GOTO 243
	expression/L6 = . expression "|" expression, FOLLOW [217] -> GOTO 243
	expression/L7 = . expression "^" expression, FOLLOW [217] -> GOTO 243
	expression/L7 = . expression "&" expression, FOLLOW [217] -> GOTO 243
	expression/L8 = . expression "==" expression, FOLLOW [217] -> GOTO 243
	expression/L8 = . expression "!=" expression, FOLLOW [217] -> GOTO 243
	expression/L8 = . expression "<=" expression, FOLLOW [217] -> GOTO 243
	expression/L8 = . expression "<" expression, FOLLOW [217] -> GOTO 243
	expression/L8 = . expression ">=" expression, FOLLOW [217] -> GOTO 243
	expression/L8 = . expression ">" expression, FOLLOW [217] -> GOTO 243
	expression/L9 = . expression "+" expression, FOLLOW [217] -> GOTO 243
	expression/L9 = . expression "-" expression, FOLLOW [217] -> GOTO 243
	expression/L10 = . expression "*" expression, FOLLOW [217] -> GOTO 243
	expression/L10 = . expression "/" expression, FOLLOW [217] -> GOTO 243
	expression/L10 = . expression "%" expression, FOLLOW [217] -> GOTO 243
	expression/L11 = . expression "<<" expression, FOLLOW [217] -> GOTO 243
	expression/L11 = . expression ">>" expression, FOLLOW [217] -> GOTO 243
	expression/L12 = . expression "." IDENT, FOLLOW [217] -> GOTO 243
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [217] -> GOTO 243
	expression/L13 = . expression "(" ")", FOLLOW [217] -> GOTO 243
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [217] -> GOTO 243
	iexpression = . expression indirection IDENT, FOLLOW [217] -> GOTO 243
	expression/L12 = . iexpression, FOLLOW [217] -> GOTO 68
	expression/L2 = . BOOLEAN, FOLLOW [217] -> SHIFT BOOLEAN GOTO 69
	expression/L2 = . IDENT, FOLLOW [217] -> SHIFT IDENT GOTO 70
	expression/L2 = . DQSTRING, FOLLOW [217] -> SHIFT DQSTRING GOTO 71
	expression/L2 = . SQSTRING, FOLLOW [217] -> SHIFT SQSTRING GOTO 72
	expression/L2 = . CARDINAL, FOLLOW [217] -> SHIFT CARDINAL GOTO 73
	expression/L2 = . INTEGER, FOLLOW [217] -> SHIFT INTEGER GOTO 74
	expression/L2 = . FLOAT, FOLLOW [217] -> SHIFT FLOAT GOTO 75
	expression/L2 = . "(" expression ")", FOLLOW [217] -> SHIFT '(' GOTO 76
	expression/L9 = . "&" expression, FOLLOW [217] -> SHIFT '&' GOTO 77
	expression/L1 = . "{" expressionlist "}", FOLLOW [217] -> SHIFT '{' GOTO 93
	expression/L1 = . "{" "}", FOLLOW [217] -> SHIFT '{' GOTO 93
	expression/L1 = . "new" typespec ":" expression, FOLLOW [217] -> SHIFT "new" GOTO 84
	expression/L2 = . "null", FOLLOW [217] -> SHIFT "null" GOTO 85
	expression/L9 = . "+" expression, FOLLOW [217] -> SHIFT '+' GOTO 86
	expression/L9 = . "-" expression, FOLLOW [217] -> SHIFT '-' GOTO 87
	expression/L9 = . "~" expression, FOLLOW [217] -> SHIFT '~' GOTO 88
	expression/L9 = . "!" expression, FOLLOW [217] -> SHIFT '!' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [217] -> SHIFT '*' GOTO 90
[169]
	expression/L1 = "new" typespec . ":" expression, FOLLOW [226] -> SHIFT ':' GOTO 244
[170]
	iexpression = expression . indirection IDENT, FOLLOW [226] -> GOTO 122
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [226] -> SHIFT '(' GOTO 123
	expression/L13 = expression . "(" ")", FOLLOW [226] -> SHIFT '(' GOTO 123
	expression/L7 = expression . "&" expression, FOLLOW [226] -> SHIFT '&' GOTO 125
	expression/L7 = expression . "^" expression, FOLLOW [226] -> SHIFT '^' GOTO 126
	expression/L3 = expression . "=" expression, FOLLOW [226] -> SHIFT '=' GOTO 127
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [226] -> SHIFT '[' GOTO 128
	expression/L3 = expression . "+=" expression, FOLLOW [226] -> SHIFT "+=" GOTO 129
	expression/L3 = expression . "-=" expression, FOLLOW [226] -> SHIFT "-=" GOTO 130
	expression/L3 = expression . "*=" expression, FOLLOW [226] -> SHIFT "*=" GOTO 131
	expression/L3 = expression . "/=" expression, FOLLOW [226] -> SHIFT "/=" GOTO 132
	expression/L3 = expression . "%=" expression, FOLLOW [226] -> SHIFT "%=" GOTO 133
	expression/L3 = expression . "&&=" expression, FOLLOW [226] -> SHIFT "&&=" GOTO 134
	expression/L3 = expression . "||=" expression, FOLLOW [226] -> SHIFT "||=" GOTO 135
	expression/L3 = expression . "&=" expression, FOLLOW [226] -> SHIFT "&=" GOTO 136
	expression/L3 = expression . "|=" expression, FOLLOW [226] -> SHIFT "|=" GOTO 137
	expression/L3 = expression . "<<=" expression, FOLLOW [226] -> SHIFT "<<=" GOTO 138
	expression/L3 = expression . ">>=" expression, FOLLOW [226] -> SHIFT ">>=" GOTO 139
	expression/L4 = expression . "||" expression, FOLLOW [226] -> SHIFT "||" GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [226] -> SHIFT "&&" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [226] -> SHIFT '|' GOTO 142
	expression/L8 = expression . "==" expression, FOLLOW [226] -> SHIFT "==" GOTO 143
	expression/L8 = expression . "!=" expression, FOLLOW [226] -> SHIFT "!=" GOTO 144
	expression/L8 = expression . "<=" expression, FOLLOW [226] -> SHIFT "<=" GOTO 145
	expression/L8 = expression . "<" expression, FOLLOW [226] -> SHIFT '<' GOTO 146
	expression/L8 = expression . ">=" expression, FOLLOW [226] -> SHIFT ">=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [226] -> SHIFT '>' GOTO 148
	expression/L9 = expression . "+" expression, FOLLOW [226] -> SHIFT '+' GOTO 149
	expression/L9 = expression . "-" expression, FOLLOW [226] -> SHIFT '-' GOTO 150
	expression/L10 = expression . "*" expression, FOLLOW [226] -> SHIFT '*' GOTO 151
	expression/L10 = expression . "/" expression, FOLLOW [226] -> SHIFT '/' GOTO 152
	expression/L10 = expression . "%" expression, FOLLOW [226] -> SHIFT '%' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [226] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [226] -> SHIFT ">>" GOTO 155
	expression/L12 = expression . "." IDENT, FOLLOW [226] -> SHIFT '.' GOTO 156
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 157
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 157
	expression/L9 = "+" expression . (85), FOLLOW [226] -> REDUCE expression #2 CALL operator "+"
[171]
	iexpression = expression . indirection IDENT, FOLLOW [226] -> GOTO 122
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [226] -> SHIFT '(' GOTO 123
	expression/L13 = expression . "(" ")", FOLLOW [226] -> SHIFT '(' GOTO 123
	expression/L7 = expression . "&" expression, FOLLOW [226] -> SHIFT '&' GOTO 125
	expression/L7 = expression . "^" expression, FOLLOW [226] -> SHIFT '^' GOTO 126
	expression/L3 = expression . "=" expression, FOLLOW [226] -> SHIFT '=' GOTO 127
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [226] -> SHIFT '[' GOTO 128
	expression/L3 = expression . "+=" expression, FOLLOW [226] -> SHIFT "+=" GOTO 129
	expression/L3 = expression . "-=" expression, FOLLOW [226] -> SHIFT "-=" GOTO 130
	expression/L3 = expression . "*=" expression, FOLLOW [226] -> SHIFT "*=" GOTO 131
	expression/L3 = expression . "/=" expression, FOLLOW [226] -> SHIFT "/=" GOTO 132
	expression/L3 = expression . "%=" expression, FOLLOW [226] -> SHIFT "%=" GOTO 133
	expression/L3 = expression . "&&=" expression, FOLLOW [226] -> SHIFT "&&=" GOTO 134
	expression/L3 = expression . "||=" expression, FOLLOW [226] -> SHIFT "||=" GOTO 135
	expression/L3 = expression . "&=" expression, FOLLOW [226] -> SHIFT "&=" GOTO 136
	expression/L3 = expression . "|=" expression, FOLLOW [226] -> SHIFT "|=" GOTO 137
	expression/L3 = expression . "<<=" expression, FOLLOW [226] -> SHIFT "<<=" GOTO 138
	expression/L3 = expression . ">>=" expression, FOLLOW [226] -> SHIFT ">>=" GOTO 139
	expression/L4 = expression . "||" expression, FOLLOW [226] -> SHIFT "||" GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [226] -> SHIFT "&&" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [226] -> SHIFT '|' GOTO 142
	expression/L8 = expression . "==" expression, FOLLOW [226] -> SHIFT "==" GOTO 143
	expression/L8 = expression . "!=" expression, FOLLOW [226] -> SHIFT "!=" GOTO 144
	expression/L8 = expression . "<=" expression, FOLLOW [226] -> SHIFT "<=" GOTO 145
	expression/L8 = expression . "<" expression, FOLLOW [226] -> SHIFT '<' GOTO 146
	expression/L8 = expression . ">=" expression, FOLLOW [226] -> SHIFT ">=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [226] -> SHIFT '>' GOTO 148
	expression/L9 = expression . "+" expression, FOLLOW [226] -> SHIFT '+' GOTO 149
	expression/L9 = expression . "-" expression, FOLLOW [226] -> SHIFT '-' GOTO 150
	expression/L10 = expression . "*" expression, FOLLOW [226] -> SHIFT '*' GOTO 151
	expression/L10 = expression . "/" expression, FOLLOW [226] -> SHIFT '/' GOTO 152
	expression/L10 = expression . "%" expression, FOLLOW [226] -> SHIFT '%' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [226] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [226] -> SHIFT ">>" GOTO 155
	expression/L12 = expression . "." IDENT, FOLLOW [226] -> SHIFT '.' GOTO 156
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 157
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 157
	expression/L9 = "-" expression . (86), FOLLOW [226] -> REDUCE expression #2 CALL operator "-"
[172]
	iexpression = expression . indirection IDENT, FOLLOW [226] -> GOTO 122
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [226] -> SHIFT '(' GOTO 123
	expression/L13 = expression . "(" ")", FOLLOW [226] -> SHIFT '(' GOTO 123
	expression/L7 = expression . "&" expression, FOLLOW [226] -> SHIFT '&' GOTO 125
	expression/L7 = expression . "^" expression, FOLLOW [226] -> SHIFT '^' GOTO 126
	expression/L3 = expression . "=" expression, FOLLOW [226] -> SHIFT '=' GOTO 127
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [226] -> SHIFT '[' GOTO 128
	expression/L3 = expression . "+=" expression, FOLLOW [226] -> SHIFT "+=" GOTO 129
	expression/L3 = expression . "-=" expression, FOLLOW [226] -> SHIFT "-=" GOTO 130
	expression/L3 = expression . "*=" expression, FOLLOW [226] -> SHIFT "*=" GOTO 131
	expression/L3 = expression . "/=" expression, FOLLOW [226] -> SHIFT "/=" GOTO 132
	expression/L3 = expression . "%=" expression, FOLLOW [226] -> SHIFT "%=" GOTO 133
	expression/L3 = expression . "&&=" expression, FOLLOW [226] -> SHIFT "&&=" GOTO 134
	expression/L3 = expression . "||=" expression, FOLLOW [226] -> SHIFT "||=" GOTO 135
	expression/L3 = expression . "&=" expression, FOLLOW [226] -> SHIFT "&=" GOTO 136
	expression/L3 = expression . "|=" expression, FOLLOW [226] -> SHIFT "|=" GOTO 137
	expression/L3 = expression . "<<=" expression, FOLLOW [226] -> SHIFT "<<=" GOTO 138
	expression/L3 = expression . ">>=" expression, FOLLOW [226] -> SHIFT ">>=" GOTO 139
	expression/L4 = expression . "||" expression, FOLLOW [226] -> SHIFT "||" GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [226] -> SHIFT "&&" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [226] -> SHIFT '|' GOTO 142
	expression/L8 = expression . "==" expression, FOLLOW [226] -> SHIFT "==" GOTO 143
	expression/L8 = expression . "!=" expression, FOLLOW [226] -> SHIFT "!=" GOTO 144
	expression/L8 = expression . "<=" expression, FOLLOW [226] -> SHIFT "<=" GOTO 145
	expression/L8 = expression . "<" expression, FOLLOW [226] -> SHIFT '<' GOTO 146
	expression/L8 = expression . ">=" expression, FOLLOW [226] -> SHIFT ">=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [226] -> SHIFT '>' GOTO 148
	expression/L9 = expression . "+" expression, FOLLOW [226] -> SHIFT '+' GOTO 149
	expression/L9 = expression . "-" expression, FOLLOW [226] -> SHIFT '-' GOTO 150
	expression/L10 = expression . "*" expression, FOLLOW [226] -> SHIFT '*' GOTO 151
	expression/L10 = expression . "/" expression, FOLLOW [226] -> SHIFT '/' GOTO 152
	expression/L10 = expression . "%" expression, FOLLOW [226] -> SHIFT '%' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [226] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [226] -> SHIFT ">>" GOTO 155
	expression/L12 = expression . "." IDENT, FOLLOW [226] -> SHIFT '.' GOTO 156
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 157
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 157
	expression/L9 = "~" expression . (87), FOLLOW [226] -> REDUCE expression #2 CALL operator "~"
[173]
	iexpression = expression . indirection IDENT, FOLLOW [226] -> GOTO 122
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [226] -> SHIFT '(' GOTO 123
	expression/L13 = expression . "(" ")", FOLLOW [226] -> SHIFT '(' GOTO 123
	expression/L7 = expression . "&" expression, FOLLOW [226] -> SHIFT '&' GOTO 125
	expression/L7 = expression . "^" expression, FOLLOW [226] -> SHIFT '^' GOTO 126
	expression/L3 = expression . "=" expression, FOLLOW [226] -> SHIFT '=' GOTO 127
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [226] -> SHIFT '[' GOTO 128
	expression/L3 = expression . "+=" expression, FOLLOW [226] -> SHIFT "+=" GOTO 129
	expression/L3 = expression . "-=" expression, FOLLOW [226] -> SHIFT "-=" GOTO 130
	expression/L3 = expression . "*=" expression, FOLLOW [226] -> SHIFT "*=" GOTO 131
	expression/L3 = expression . "/=" expression, FOLLOW [226] -> SHIFT "/=" GOTO 132
	expression/L3 = expression . "%=" expression, FOLLOW [226] -> SHIFT "%=" GOTO 133
	expression/L3 = expression . "&&=" expression, FOLLOW [226] -> SHIFT "&&=" GOTO 134
	expression/L3 = expression . "||=" expression, FOLLOW [226] -> SHIFT "||=" GOTO 135
	expression/L3 = expression . "&=" expression, FOLLOW [226] -> SHIFT "&=" GOTO 136
	expression/L3 = expression . "|=" expression, FOLLOW [226] -> SHIFT "|=" GOTO 137
	expression/L3 = expression . "<<=" expression, FOLLOW [226] -> SHIFT "<<=" GOTO 138
	expression/L3 = expression . ">>=" expression, FOLLOW [226] -> SHIFT ">>=" GOTO 139
	expression/L4 = expression . "||" expression, FOLLOW [226] -> SHIFT "||" GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [226] -> SHIFT "&&" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [226] -> SHIFT '|' GOTO 142
	expression/L8 = expression . "==" expression, FOLLOW [226] -> SHIFT "==" GOTO 143
	expression/L8 = expression . "!=" expression, FOLLOW [226] -> SHIFT "!=" GOTO 144
	expression/L8 = expression . "<=" expression, FOLLOW [226] -> SHIFT "<=" GOTO 145
	expression/L8 = expression . "<" expression, FOLLOW [226] -> SHIFT '<' GOTO 146
	expression/L8 = expression . ">=" expression, FOLLOW [226] -> SHIFT ">=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [226] -> SHIFT '>' GOTO 148
	expression/L9 = expression . "+" expression, FOLLOW [226] -> SHIFT '+' GOTO 149
	expression/L9 = expression . "-" expression, FOLLOW [226] -> SHIFT '-' GOTO 150
	expression/L10 = expression . "*" expression, FOLLOW [226] -> SHIFT '*' GOTO 151
	expression/L10 = expression . "/" expression, FOLLOW [226] -> SHIFT '/' GOTO 152
	expression/L10 = expression . "%" expression, FOLLOW [226] -> SHIFT '%' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [226] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [226] -> SHIFT ">>" GOTO 155
	expression/L12 = expression . "." IDENT, FOLLOW [226] -> SHIFT '.' GOTO 156
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 157
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 157
	expression/L9 = "!" expression . (88), FOLLOW [226] -> REDUCE expression #2 CALL operator "!"
[174]
	iexpression = expression . indirection IDENT, FOLLOW [226] -> GOTO 122
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [226] -> SHIFT '(' GOTO 123
	expression/L13 = expression . "(" ")", FOLLOW [226] -> SHIFT '(' GOTO 123
	expression/L7 = expression . "&" expression, FOLLOW [226] -> SHIFT '&' GOTO 125
	expression/L7 = expression . "^" expression, FOLLOW [226] -> SHIFT '^' GOTO 126
	expression/L3 = expression . "=" expression, FOLLOW [226] -> SHIFT '=' GOTO 127
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [226] -> SHIFT '[' GOTO 128
	expression/L3 = expression . "+=" expression, FOLLOW [226] -> SHIFT "+=" GOTO 129
	expression/L3 = expression . "-=" expression, FOLLOW [226] -> SHIFT "-=" GOTO 130
	expression/L3 = expression . "*=" expression, FOLLOW [226] -> SHIFT "*=" GOTO 131
	expression/L3 = expression . "/=" expression, FOLLOW [226] -> SHIFT "/=" GOTO 132
	expression/L3 = expression . "%=" expression, FOLLOW [226] -> SHIFT "%=" GOTO 133
	expression/L3 = expression . "&&=" expression, FOLLOW [226] -> SHIFT "&&=" GOTO 134
	expression/L3 = expression . "||=" expression, FOLLOW [226] -> SHIFT "||=" GOTO 135
	expression/L3 = expression . "&=" expression, FOLLOW [226] -> SHIFT "&=" GOTO 136
	expression/L3 = expression . "|=" expression, FOLLOW [226] -> SHIFT "|=" GOTO 137
	expression/L3 = expression . "<<=" expression, FOLLOW [226] -> SHIFT "<<=" GOTO 138
	expression/L3 = expression . ">>=" expression, FOLLOW [226] -> SHIFT ">>=" GOTO 139
	expression/L4 = expression . "||" expression, FOLLOW [226] -> SHIFT "||" GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [226] -> SHIFT "&&" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [226] -> SHIFT '|' GOTO 142
	expression/L8 = expression . "==" expression, FOLLOW [226] -> SHIFT "==" GOTO 143
	expression/L8 = expression . "!=" expression, FOLLOW [226] -> SHIFT "!=" GOTO 144
	expression/L8 = expression . "<=" expression, FOLLOW [226] -> SHIFT "<=" GOTO 145
	expression/L8 = expression . "<" expression, FOLLOW [226] -> SHIFT '<' GOTO 146
	expression/L8 = expression . ">=" expression, FOLLOW [226] -> SHIFT ">=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [226] -> SHIFT '>' GOTO 148
	expression/L9 = expression . "+" expression, FOLLOW [226] -> SHIFT '+' GOTO 149
	expression/L9 = expression . "-" expression, FOLLOW [226] -> SHIFT '-' GOTO 150
	expression/L10 = expression . "*" expression, FOLLOW [226] -> SHIFT '*' GOTO 151
	expression/L10 = expression . "/" expression, FOLLOW [226] -> SHIFT '/' GOTO 152
	expression/L10 = expression . "%" expression, FOLLOW [226] -> SHIFT '%' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [226] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [226] -> SHIFT ">>" GOTO 155
	expression/L12 = expression . "." IDENT, FOLLOW [226] -> SHIFT '.' GOTO 156
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 157
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 157
	expression/L12 = "*" expression . (95), FOLLOW [226] -> REDUCE expression #2 CALL operator "->"
[175]
	iexpression = expression . indirection IDENT, FOLLOW [226] -> GOTO 122
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [226] -> SHIFT '(' GOTO 123
	expression/L13 = expression . "(" ")", FOLLOW [226] -> SHIFT '(' GOTO 123
	expressionlist = expression . "," expressionlist, FOLLOW [233] -> SHIFT ',' GOTO 237
	expression/L7 = expression . "&" expression, FOLLOW [226] -> SHIFT '&' GOTO 125
	expression/L7 = expression . "^" expression, FOLLOW [226] -> SHIFT '^' GOTO 126
	expression/L3 = expression . "=" expression, FOLLOW [226] -> SHIFT '=' GOTO 127
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [226] -> SHIFT '[' GOTO 128
	expression/L3 = expression . "+=" expression, FOLLOW [226] -> SHIFT "+=" GOTO 129
	expression/L3 = expression . "-=" expression, FOLLOW [226] -> SHIFT "-=" GOTO 130
	expression/L3 = expression . "*=" expression, FOLLOW [226] -> SHIFT "*=" GOTO 131
	expression/L3 = expression . "/=" expression, FOLLOW [226] -> SHIFT "/=" GOTO 132
	expression/L3 = expression . "%=" expression, FOLLOW [226] -> SHIFT "%=" GOTO 133
	expression/L3 = expression . "&&=" expression, FOLLOW [226] -> SHIFT "&&=" GOTO 134
	expression/L3 = expression . "||=" expression, FOLLOW [226] -> SHIFT "||=" GOTO 135
	expression/L3 = expression . "&=" expression, FOLLOW [226] -> SHIFT "&=" GOTO 136
	expression/L3 = expression . "|=" expression, FOLLOW [226] -> SHIFT "|=" GOTO 137
	expression/L3 = expression . "<<=" expression, FOLLOW [226] -> SHIFT "<<=" GOTO 138
	expression/L3 = expression . ">>=" expression, FOLLOW [226] -> SHIFT ">>=" GOTO 139
	expression/L4 = expression . "||" expression, FOLLOW [226] -> SHIFT "||" GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [226] -> SHIFT "&&" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [226] -> SHIFT '|' GOTO 142
	expression/L8 = expression . "==" expression, FOLLOW [226] -> SHIFT "==" GOTO 143
	expression/L8 = expression . "!=" expression, FOLLOW [226] -> SHIFT "!=" GOTO 144
	expression/L8 = expression . "<=" expression, FOLLOW [226] -> SHIFT "<=" GOTO 145
	expression/L8 = expression . "<" expression, FOLLOW [226] -> SHIFT '<' GOTO 146
	expression/L8 = expression . ">=" expression, FOLLOW [226] -> SHIFT ">=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [226] -> SHIFT '>' GOTO 148
	expression/L9 = expression . "+" expression, FOLLOW [226] -> SHIFT '+' GOTO 149
	expression/L9 = expression . "-" expression, FOLLOW [226] -> SHIFT '-' GOTO 150
	expression/L10 = expression . "*" expression, FOLLOW [226] -> SHIFT '*' GOTO 151
	expression/L10 = expression . "/" expression, FOLLOW [226] -> SHIFT '/' GOTO 152
	expression/L10 = expression . "%" expression, FOLLOW [226] -> SHIFT '%' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [226] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [226] -> SHIFT ">>" GOTO 155
	expression/L12 = expression . "." IDENT, FOLLOW [226] -> SHIFT '.' GOTO 156
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 157
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 157
	expressionlist = expression ., FOLLOW [233] -> REDUCE expressionlist #1
[176]
	variabledefinition = typespec IDENT "[" expression "]" . "=" expression, FOLLOW [13] -> SHIFT '=' GOTO 245
	variabledefinition = typespec IDENT "[" expression "]" . (step:51), FOLLOW [13] -> REDUCE variabledefinition #5 CALL vardef_array
[177]
	functiondefinition = linkage "function" typespec IDENT callablebody . (32), FOLLOW [228] -> REDUCE functiondefinition #5 CALL funcdef
[178]
	paramdecl = typespec . IDENT, FOLLOW [176] -> SHIFT IDENT GOTO 246
[179]
	callablebody = "(" parameterlist . ")" "{" codeblock "}", FOLLOW [228] -> SHIFT ')' GOTO 247
	callablebody = "(" parameterlist . ")" "const" "{" codeblock "}", FOLLOW [228] -> SHIFT ')' GOTO 247
[180]
	parameterlist = parameters . (39), FOLLOW [10] -> REDUCE parameterlist #1 CALL paramdeflist
[181]
	parameters = paramdecl . "," parameters, FOLLOW [10] -> SHIFT ',' GOTO 248
	parameters = paramdecl ., FOLLOW [10] -> REDUCE parameters #1
[182]
	typespec/L1 = "const" typename "^" "^" "&" . (23), FOLLOW [238] -> REDUCE typespec #5 CALL typespec "const^^&"
[183]
	structdefinition = "struct" IDENT "{" struct_definitionlist "}" . (step:25), FOLLOW [167] -> REDUCE structdefinition #5 CALL structdef
[184]
	struct_definitionlist = struct_definition struct_definitionlist ., FOLLOW [16] -> REDUCE struct_definitionlist #2
[185]
	interfacedefinition = "interface" IDENT "{" interface_definitionlist "}" . (step:26), FOLLOW [167] -> REDUCE interfacedefinition #5 CALL interfacedef
[186]
	interface_definitionlist = interface_definition interface_definitionlist ., FOLLOW [16] -> REDUCE interface_definitionlist #2
[187]
	interface_definition = "function" typespec . IDENT "(" parameterlist ")" ";", FOLLOW [164] -> SHIFT IDENT GOTO 249
	interface_definition = "function" typespec . IDENT "(" parameterlist ")" "const" ";", FOLLOW [164] -> SHIFT IDENT GOTO 249
[188]
	interface_definition = "procedure" IDENT . "(" parameterlist ")" ";", FOLLOW [164] -> SHIFT '(' GOTO 250
	interface_definition = "procedure" IDENT . "(" parameterlist ")" "const" ";", FOLLOW [164] -> SHIFT '(' GOTO 250
[189]
	classdefinition = "class" IDENT "{" class_definitionlist "}" . (step:28), FOLLOW [167] -> REDUCE classdefinition #5 CALL classdef
[190]
	class_definitionlist = class_definition class_definitionlist ., FOLLOW [16] -> REDUCE class_definitionlist #2
[191]
	constructordefinition = linkage "constructor" . callablebody, FOLLOW [166] -> GOTO 251
	callablebody = . "(" parameterlist ")" "{" codeblock "}", FOLLOW [166] -> SHIFT '(' GOTO 97
	callablebody = . "(" parameterlist ")" "const" "{" codeblock "}", FOLLOW [166] -> SHIFT '(' GOTO 97
[192]
	statement/L1 = . typedefinition ";", FOLLOW [94] -> GOTO 62
	functiondefinition = . linkage "function" typespec IDENT callablebody, FOLLOW [94] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [94] -> GOTO 14
	statement/L1 = . functiondefinition, FOLLOW [94] -> GOTO 63
	constructordefinition = "destructor" "{" . codeblock "}", FOLLOW [166] -> GOTO 252
	codeblock = . statementlist, FOLLOW [16] -> GOTO 65
	statementlist = . statement statementlist, FOLLOW [16] -> GOTO 66
	statement/L1 = . expression ";", FOLLOW [94] -> GOTO 67
	expression/L3 = . expression "=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression "+=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression "-=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression "*=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression "/=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression "%=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression "&&=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression "||=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression "&=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression "|=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression "<<=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression ">>=" expression, FOLLOW [93] -> GOTO 67
	expression/L4 = . expression "||" expression, FOLLOW [93] -> GOTO 67
	expression/L5 = . expression "&&" expression, FOLLOW [93] -> GOTO 67
	expression/L6 = . expression "|" expression, FOLLOW [93] -> GOTO 67
	expression/L7 = . expression "^" expression, FOLLOW [93] -> GOTO 67
	expression/L7 = . expression "&" expression, FOLLOW [93] -> GOTO 67
	expression/L8 = . expression "==" expression, FOLLOW [93] -> GOTO 67
	expression/L8 = . expression "!=" expression, FOLLOW [93] -> GOTO 67
	expression/L8 = . expression "<=" expression, FOLLOW [93] -> GOTO 67
	expression/L8 = . expression "<" expression, FOLLOW [93] -> GOTO 67
	expression/L8 = . expression ">=" expression, FOLLOW [93] -> GOTO 67
	expression/L8 = . expression ">" expression, FOLLOW [93] -> GOTO 67
	expression/L9 = . expression "+" expression, FOLLOW [93] -> GOTO 67
	expression/L9 = . expression "-" expression, FOLLOW [93] -> GOTO 67
	expression/L10 = . expression "*" expression, FOLLOW [93] -> GOTO 67
	expression/L10 = . expression "/" expression, FOLLOW [93] -> GOTO 67
	expression/L10 = . expression "%" expression, FOLLOW [93] -> GOTO 67
	expression/L11 = . expression "<<" expression, FOLLOW [93] -> GOTO 67
	expression/L11 = . expression ">>" expression, FOLLOW [93] -> GOTO 67
	expression/L12 = . expression "." IDENT, FOLLOW [93] -> GOTO 67
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [93] -> GOTO 67
	expression/L13 = . expression "(" ")", FOLLOW [93] -> GOTO 67
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [93] -> GOTO 67
	iexpression = . expression indirection IDENT, FOLLOW [93] -> GOTO 67
	expression/L12 = . iexpression, FOLLOW [93] -> GOTO 68
	expression/L2 = . BOOLEAN, FOLLOW [93] -> SHIFT BOOLEAN GOTO 69
	expression/L2 = . IDENT, FOLLOW [93] -> SHIFT IDENT GOTO 70
	expression/L2 = . DQSTRING, FOLLOW [93] -> SHIFT DQSTRING GOTO 71
	expression/L2 = . SQSTRING, FOLLOW [93] -> SHIFT SQSTRING GOTO 72
	expression/L2 = . CARDINAL, FOLLOW [93] -> SHIFT CARDINAL GOTO 73
	expression/L2 = . INTEGER, FOLLOW [93] -> SHIFT INTEGER GOTO 74
	expression/L2 = . FLOAT, FOLLOW [93] -> SHIFT FLOAT GOTO 75
	expression/L2 = . "(" expression ")", FOLLOW [93] -> SHIFT '(' GOTO 76
	expression/L9 = . "&" expression, FOLLOW [93] -> SHIFT '&' GOTO 77
	typedefinition = . "typedef" typename IDENT, FOLLOW [13] -> SHIFT "typedef" GOTO 19
	statement/L1 = . "{" codeblock "}", FOLLOW [94] -> SHIFT '{' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [93] -> SHIFT '{' GOTO 78
	expression/L1 = . "{" "}", FOLLOW [93] -> SHIFT '{' GOTO 78
	linkage = . "private", FOLLOW [58] -> SHIFT "private" GOTO 23
	linkage = . "public", FOLLOW [58] -> SHIFT "public" GOTO 24
	statement/L1 = . "var" variabledefinition ";", FOLLOW [94] -> SHIFT "var" GOTO 79
	statement/L1 = . "return" expression ";", FOLLOW [94] -> SHIFT "return" GOTO 80
	statement/L1 = . "delete" expression ";", FOLLOW [94] -> SHIFT "delete" GOTO 81
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}", FOLLOW [94] -> SHIFT "if" GOTO 82
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}", FOLLOW [94] -> SHIFT "if" GOTO 82
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}", FOLLOW [94] -> SHIFT "while" GOTO 83
	expression/L1 = . "new" typespec ":" expression, FOLLOW [93] -> SHIFT "new" GOTO 84
	expression/L2 = . "null", FOLLOW [93] -> SHIFT "null" GOTO 85
	expression/L9 = . "+" expression, FOLLOW [93] -> SHIFT '+' GOTO 86
	expression/L9 = . "-" expression, FOLLOW [93] -> SHIFT '-' GOTO 87
	expression/L9 = . "~" expression, FOLLOW [93] -> SHIFT '~' GOTO 88
	expression/L9 = . "!" expression, FOLLOW [93] -> SHIFT '!' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [93] -> SHIFT '*' GOTO 90
	statementlist = ., FOLLOW [16] -> REDUCE statementlist #0
	linkage = . (30), FOLLOW [58] -> REDUCE linkage #0 CALL linkage {linkage="internal",attributes="#0 nounwind"}
[193]
	inheritlist = . typename "," inheritlist, FOLLOW [17] -> GOTO 115
	inheritlist = . typename, FOLLOW [17] -> GOTO 115
	inheritlist = typename "," . inheritlist, FOLLOW [17] -> GOTO 253
	typename/L1 = . IDENT, FOLLOW [168] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [168] -> SHIFT IDENT GOTO 17
[194]
	classdefinition = "class" IDENT ":" inheritlist "{" . class_definitionlist "}", FOLLOW [167] -> GOTO 254
	class_definition = . struct_definition, FOLLOW [166] -> GOTO 107
	class_definitionlist = . class_definition class_definitionlist, FOLLOW [16] -> GOTO 108
	typespec/L1 = . typename, FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [9] -> GOTO 8
	variabledefinition = . typespec IDENT, FOLLOW [13] -> GOTO 9
	variabledefinition = . typespec IDENT "=" expression, FOLLOW [13] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]" "=" expression, FOLLOW [13] -> GOTO 9
	variabledefinition = . typespec IDENT "[" expression "]", FOLLOW [13] -> GOTO 9
	struct_definition = . typedefinition ";", FOLLOW [166] -> GOTO 10
	struct_definition = . structdefinition, FOLLOW [166] -> GOTO 11
	class_definition = . interfacedefinition, FOLLOW [166] -> GOTO 109
	class_definition = . classdefinition, FOLLOW [166] -> GOTO 110
	functiondefinition = . linkage "function" typespec IDENT callablebody, FOLLOW [166] -> GOTO 111
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [166] -> GOTO 111
	constructordefinition = . linkage "constructor" callablebody, FOLLOW [166] -> GOTO 111
	class_definition = . functiondefinition, FOLLOW [166] -> GOTO 112
	class_definition = . constructordefinition, FOLLOW [166] -> GOTO 113
	struct_definition = . variabledefinition ";", FOLLOW [166] -> GOTO 16
	typename/L1 = . IDENT, FOLLOW [59] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [59] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typedefinition = . "typedef" typename IDENT, FOLLOW [13] -> SHIFT "typedef" GOTO 19
	structdefinition = . "struct" IDENT "{" struct_definitionlist "}", FOLLOW [166] -> SHIFT "struct" GOTO 20
	interfacedefinition = . "interface" IDENT "{" interface_definitionlist "}", FOLLOW [166] -> SHIFT "interface" GOTO 21
	classdefinition = . "class" IDENT "{" class_definitionlist "}", FOLLOW [167] -> SHIFT "class" GOTO 22
	classdefinition = . "class" IDENT ":" inheritlist "{" class_definitionlist "}", FOLLOW [167] -> SHIFT "class" GOTO 22
	linkage = . "private", FOLLOW [165] -> SHIFT "private" GOTO 23
	linkage = . "public", FOLLOW [165] -> SHIFT "public" GOTO 24
	constructordefinition = . "destructor" "{" codeblock "}", FOLLOW [166] -> SHIFT "destructor" GOTO 114
	class_definitionlist = ., FOLLOW [16] -> REDUCE class_definitionlist #0
	linkage = . (30), FOLLOW [165] -> REDUCE linkage #0 CALL linkage {linkage="internal",attributes="#0 nounwind"}
[195]
	extern_paramlist = . extern_parameters, FOLLOW [177] -> GOTO 196
	extern_definition = "extern" DQSTRING "function" typespec IDENT "(" . extern_paramlist ")" ";", FOLLOW [56] -> GOTO 255
	extern_definition = "extern" DQSTRING "function" typespec IDENT "(" . extern_paramlist "..." ")" ";", FOLLOW [56] -> GOTO 255
	typespec/L1 = . typename, FOLLOW [179] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [179] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [179] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [179] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [179] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [179] -> GOTO 8
	extern_parameters = . typespec "," extern_parameters, FOLLOW [177] -> GOTO 198
	extern_parameters = . typespec, FOLLOW [177] -> GOTO 198
	typename/L1 = . IDENT, FOLLOW [180] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [180] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [179] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [179] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [179] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [179] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [179] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [179] -> SHIFT "const" GOTO 18
	extern_paramlist = ., FOLLOW [177] -> REDUCE extern_paramlist #0
[196]
	extern_paramlist = extern_parameters . (6), FOLLOW [177] -> REDUCE extern_paramlist #1 CALL extern_paramdeflist
[197]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist . ")" ";", FOLLOW [56] -> SHIFT ')' GOTO 256
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist . "..." ")" ";", FOLLOW [56] -> SHIFT "..." GOTO 257
[198]
	extern_parameters = typespec . "," extern_parameters, FOLLOW [177] -> SHIFT ',' GOTO 258
	extern_parameters = typespec ., FOLLOW [177] -> REDUCE extern_parameters #1
[199]
	iexpression = expression indirection IDENT . (98), FOLLOW [226] -> REDUCE iexpression #3 CALL rep_operator "->"
[200]
	expression/L13 = expression "(" expressionlist . ")", FOLLOW [226] -> SHIFT ')' GOTO 259
[201]
	expression/L13 = expression "(" ")" . (96), FOLLOW [226] -> REDUCE expression #3 CALL operator "()"
[202]
	iexpression = expression . indirection IDENT, FOLLOW [226] -> GOTO 122
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [226] -> SHIFT '(' GOTO 123
	expression/L13 = expression . "(" ")", FOLLOW [226] -> SHIFT '(' GOTO 123
	expression/L7 = expression . "&" expression, FOLLOW [226] -> SHIFT '&' GOTO 125
	expression/L7 = expression . "^" expression, FOLLOW [226] -> SHIFT '^' GOTO 126
	expression/L3 = expression . "=" expression, FOLLOW [226] -> SHIFT '=' GOTO 127
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [226] -> SHIFT '[' GOTO 128
	expression/L3 = expression . "+=" expression, FOLLOW [226] -> SHIFT "+=" GOTO 129
	expression/L3 = expression . "-=" expression, FOLLOW [226] -> SHIFT "-=" GOTO 130
	expression/L3 = expression . "*=" expression, FOLLOW [226] -> SHIFT "*=" GOTO 131
	expression/L3 = expression . "/=" expression, FOLLOW [226] -> SHIFT "/=" GOTO 132
	expression/L3 = expression . "%=" expression, FOLLOW [226] -> SHIFT "%=" GOTO 133
	expression/L3 = expression . "&&=" expression, FOLLOW [226] -> SHIFT "&&=" GOTO 134
	expression/L3 = expression . "||=" expression, FOLLOW [226] -> SHIFT "||=" GOTO 135
	expression/L3 = expression . "&=" expression, FOLLOW [226] -> SHIFT "&=" GOTO 136
	expression/L3 = expression . "|=" expression, FOLLOW [226] -> SHIFT "|=" GOTO 137
	expression/L3 = expression . "<<=" expression, FOLLOW [226] -> SHIFT "<<=" GOTO 138
	expression/L3 = expression . ">>=" expression, FOLLOW [226] -> SHIFT ">>=" GOTO 139
	expression/L4 = expression . "||" expression, FOLLOW [226] -> SHIFT "||" GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [226] -> SHIFT "&&" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [226] -> SHIFT '|' GOTO 142
	expression/L8 = expression . "==" expression, FOLLOW [226] -> SHIFT "==" GOTO 143
	expression/L8 = expression . "!=" expression, FOLLOW [226] -> SHIFT "!=" GOTO 144
	expression/L8 = expression . "<=" expression, FOLLOW [226] -> SHIFT "<=" GOTO 145
	expression/L8 = expression . "<" expression, FOLLOW [226] -> SHIFT '<' GOTO 146
	expression/L8 = expression . ">=" expression, FOLLOW [226] -> SHIFT ">=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [226] -> SHIFT '>' GOTO 148
	expression/L9 = expression . "+" expression, FOLLOW [226] -> SHIFT '+' GOTO 149
	expression/L9 = expression . "-" expression, FOLLOW [226] -> SHIFT '-' GOTO 150
	expression/L10 = expression . "*" expression, FOLLOW [226] -> SHIFT '*' GOTO 151
	expression/L10 = expression . "/" expression, FOLLOW [226] -> SHIFT '/' GOTO 152
	expression/L10 = expression . "%" expression, FOLLOW [226] -> SHIFT '%' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [226] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [226] -> SHIFT ">>" GOTO 155
	expression/L12 = expression . "." IDENT, FOLLOW [226] -> SHIFT '.' GOTO 156
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 157
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 157
	expression/L7 = expression "&" expression . (78), FOLLOW [226] -> REDUCE expression #3 CALL operator "&"
[203]
	iexpression = expression . indirection IDENT, FOLLOW [226] -> GOTO 122
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [226] -> SHIFT '(' GOTO 123
	expression/L13 = expression . "(" ")", FOLLOW [226] -> SHIFT '(' GOTO 123
	expression/L7 = expression . "&" expression, FOLLOW [226] -> SHIFT '&' GOTO 125
	expression/L7 = expression . "^" expression, FOLLOW [226] -> SHIFT '^' GOTO 126
	expression/L3 = expression . "=" expression, FOLLOW [226] -> SHIFT '=' GOTO 127
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [226] -> SHIFT '[' GOTO 128
	expression/L3 = expression . "+=" expression, FOLLOW [226] -> SHIFT "+=" GOTO 129
	expression/L3 = expression . "-=" expression, FOLLOW [226] -> SHIFT "-=" GOTO 130
	expression/L3 = expression . "*=" expression, FOLLOW [226] -> SHIFT "*=" GOTO 131
	expression/L3 = expression . "/=" expression, FOLLOW [226] -> SHIFT "/=" GOTO 132
	expression/L3 = expression . "%=" expression, FOLLOW [226] -> SHIFT "%=" GOTO 133
	expression/L3 = expression . "&&=" expression, FOLLOW [226] -> SHIFT "&&=" GOTO 134
	expression/L3 = expression . "||=" expression, FOLLOW [226] -> SHIFT "||=" GOTO 135
	expression/L3 = expression . "&=" expression, FOLLOW [226] -> SHIFT "&=" GOTO 136
	expression/L3 = expression . "|=" expression, FOLLOW [226] -> SHIFT "|=" GOTO 137
	expression/L3 = expression . "<<=" expression, FOLLOW [226] -> SHIFT "<<=" GOTO 138
	expression/L3 = expression . ">>=" expression, FOLLOW [226] -> SHIFT ">>=" GOTO 139
	expression/L4 = expression . "||" expression, FOLLOW [226] -> SHIFT "||" GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [226] -> SHIFT "&&" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [226] -> SHIFT '|' GOTO 142
	expression/L8 = expression . "==" expression, FOLLOW [226] -> SHIFT "==" GOTO 143
	expression/L8 = expression . "!=" expression, FOLLOW [226] -> SHIFT "!=" GOTO 144
	expression/L8 = expression . "<=" expression, FOLLOW [226] -> SHIFT "<=" GOTO 145
	expression/L8 = expression . "<" expression, FOLLOW [226] -> SHIFT '<' GOTO 146
	expression/L8 = expression . ">=" expression, FOLLOW [226] -> SHIFT ">=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [226] -> SHIFT '>' GOTO 148
	expression/L9 = expression . "+" expression, FOLLOW [226] -> SHIFT '+' GOTO 149
	expression/L9 = expression . "-" expression, FOLLOW [226] -> SHIFT '-' GOTO 150
	expression/L10 = expression . "*" expression, FOLLOW [226] -> SHIFT '*' GOTO 151
	expression/L10 = expression . "/" expression, FOLLOW [226] -> SHIFT '/' GOTO 152
	expression/L10 = expression . "%" expression, FOLLOW [226] -> SHIFT '%' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [226] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [226] -> SHIFT ">>" GOTO 155
	expression/L12 = expression . "." IDENT, FOLLOW [226] -> SHIFT '.' GOTO 156
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 157
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 157
	expression/L7 = expression "^" expression . (77), FOLLOW [226] -> REDUCE expression #3 CALL operator "^"
[204]
	iexpression = expression . indirection IDENT, FOLLOW [226] -> GOTO 122
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [226] -> SHIFT '(' GOTO 123
	expression/L13 = expression . "(" ")", FOLLOW [226] -> SHIFT '(' GOTO 123
	expression/L7 = expression . "&" expression, FOLLOW [226] -> SHIFT '&' GOTO 125
	expression/L7 = expression . "^" expression, FOLLOW [226] -> SHIFT '^' GOTO 126
	expression/L3 = expression . "=" expression, FOLLOW [226] -> SHIFT '=' GOTO 127
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [226] -> SHIFT '[' GOTO 128
	expression/L3 = expression . "+=" expression, FOLLOW [226] -> SHIFT "+=" GOTO 129
	expression/L3 = expression . "-=" expression, FOLLOW [226] -> SHIFT "-=" GOTO 130
	expression/L3 = expression . "*=" expression, FOLLOW [226] -> SHIFT "*=" GOTO 131
	expression/L3 = expression . "/=" expression, FOLLOW [226] -> SHIFT "/=" GOTO 132
	expression/L3 = expression . "%=" expression, FOLLOW [226] -> SHIFT "%=" GOTO 133
	expression/L3 = expression . "&&=" expression, FOLLOW [226] -> SHIFT "&&=" GOTO 134
	expression/L3 = expression . "||=" expression, FOLLOW [226] -> SHIFT "||=" GOTO 135
	expression/L3 = expression . "&=" expression, FOLLOW [226] -> SHIFT "&=" GOTO 136
	expression/L3 = expression . "|=" expression, FOLLOW [226] -> SHIFT "|=" GOTO 137
	expression/L3 = expression . "<<=" expression, FOLLOW [226] -> SHIFT "<<=" GOTO 138
	expression/L3 = expression . ">>=" expression, FOLLOW [226] -> SHIFT ">>=" GOTO 139
	expression/L4 = expression . "||" expression, FOLLOW [226] -> SHIFT "||" GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [226] -> SHIFT "&&" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [226] -> SHIFT '|' GOTO 142
	expression/L8 = expression . "==" expression, FOLLOW [226] -> SHIFT "==" GOTO 143
	expression/L8 = expression . "!=" expression, FOLLOW [226] -> SHIFT "!=" GOTO 144
	expression/L8 = expression . "<=" expression, FOLLOW [226] -> SHIFT "<=" GOTO 145
	expression/L8 = expression . "<" expression, FOLLOW [226] -> SHIFT '<' GOTO 146
	expression/L8 = expression . ">=" expression, FOLLOW [226] -> SHIFT ">=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [226] -> SHIFT '>' GOTO 148
	expression/L9 = expression . "+" expression, FOLLOW [226] -> SHIFT '+' GOTO 149
	expression/L9 = expression . "-" expression, FOLLOW [226] -> SHIFT '-' GOTO 150
	expression/L10 = expression . "*" expression, FOLLOW [226] -> SHIFT '*' GOTO 151
	expression/L10 = expression . "/" expression, FOLLOW [226] -> SHIFT '/' GOTO 152
	expression/L10 = expression . "%" expression, FOLLOW [226] -> SHIFT '%' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [226] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [226] -> SHIFT ">>" GOTO 155
	expression/L12 = expression . "." IDENT, FOLLOW [226] -> SHIFT '.' GOTO 156
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 157
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 157
	expression/L3 = expression "=" expression . (62), FOLLOW [226] -> REDUCE expression #3 CALL operator "="
[205]
	expression/L13 = expression "[" expressionlist . "]", FOLLOW [226] -> SHIFT ']' GOTO 260
[206]
	iexpression = expression . indirection IDENT, FOLLOW [226] -> GOTO 122
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [226] -> SHIFT '(' GOTO 123
	expression/L13 = expression . "(" ")", FOLLOW [226] -> SHIFT '(' GOTO 123
	expression/L7 = expression . "&" expression, FOLLOW [226] -> SHIFT '&' GOTO 125
	expression/L7 = expression . "^" expression, FOLLOW [226] -> SHIFT '^' GOTO 126
	expression/L3 = expression . "=" expression, FOLLOW [226] -> SHIFT '=' GOTO 127
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [226] -> SHIFT '[' GOTO 128
	expression/L3 = expression . "+=" expression, FOLLOW [226] -> SHIFT "+=" GOTO 129
	expression/L3 = expression . "-=" expression, FOLLOW [226] -> SHIFT "-=" GOTO 130
	expression/L3 = expression . "*=" expression, FOLLOW [226] -> SHIFT "*=" GOTO 131
	expression/L3 = expression . "/=" expression, FOLLOW [226] -> SHIFT "/=" GOTO 132
	expression/L3 = expression . "%=" expression, FOLLOW [226] -> SHIFT "%=" GOTO 133
	expression/L3 = expression . "&&=" expression, FOLLOW [226] -> SHIFT "&&=" GOTO 134
	expression/L3 = expression . "||=" expression, FOLLOW [226] -> SHIFT "||=" GOTO 135
	expression/L3 = expression . "&=" expression, FOLLOW [226] -> SHIFT "&=" GOTO 136
	expression/L3 = expression . "|=" expression, FOLLOW [226] -> SHIFT "|=" GOTO 137
	expression/L3 = expression . "<<=" expression, FOLLOW [226] -> SHIFT "<<=" GOTO 138
	expression/L3 = expression . ">>=" expression, FOLLOW [226] -> SHIFT ">>=" GOTO 139
	expression/L4 = expression . "||" expression, FOLLOW [226] -> SHIFT "||" GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [226] -> SHIFT "&&" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [226] -> SHIFT '|' GOTO 142
	expression/L8 = expression . "==" expression, FOLLOW [226] -> SHIFT "==" GOTO 143
	expression/L8 = expression . "!=" expression, FOLLOW [226] -> SHIFT "!=" GOTO 144
	expression/L8 = expression . "<=" expression, FOLLOW [226] -> SHIFT "<=" GOTO 145
	expression/L8 = expression . "<" expression, FOLLOW [226] -> SHIFT '<' GOTO 146
	expression/L8 = expression . ">=" expression, FOLLOW [226] -> SHIFT ">=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [226] -> SHIFT '>' GOTO 148
	expression/L9 = expression . "+" expression, FOLLOW [226] -> SHIFT '+' GOTO 149
	expression/L9 = expression . "-" expression, FOLLOW [226] -> SHIFT '-' GOTO 150
	expression/L10 = expression . "*" expression, FOLLOW [226] -> SHIFT '*' GOTO 151
	expression/L10 = expression . "/" expression, FOLLOW [226] -> SHIFT '/' GOTO 152
	expression/L10 = expression . "%" expression, FOLLOW [226] -> SHIFT '%' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [226] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [226] -> SHIFT ">>" GOTO 155
	expression/L12 = expression . "." IDENT, FOLLOW [226] -> SHIFT '.' GOTO 156
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 157
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 157
	expression/L3 = expression "+=" expression . (63), FOLLOW [226] -> REDUCE expression #3 CALL assign_operator "+"
[207]
	iexpression = expression . indirection IDENT, FOLLOW [226] -> GOTO 122
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [226] -> SHIFT '(' GOTO 123
	expression/L13 = expression . "(" ")", FOLLOW [226] -> SHIFT '(' GOTO 123
	expression/L7 = expression . "&" expression, FOLLOW [226] -> SHIFT '&' GOTO 125
	expression/L7 = expression . "^" expression, FOLLOW [226] -> SHIFT '^' GOTO 126
	expression/L3 = expression . "=" expression, FOLLOW [226] -> SHIFT '=' GOTO 127
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [226] -> SHIFT '[' GOTO 128
	expression/L3 = expression . "+=" expression, FOLLOW [226] -> SHIFT "+=" GOTO 129
	expression/L3 = expression . "-=" expression, FOLLOW [226] -> SHIFT "-=" GOTO 130
	expression/L3 = expression . "*=" expression, FOLLOW [226] -> SHIFT "*=" GOTO 131
	expression/L3 = expression . "/=" expression, FOLLOW [226] -> SHIFT "/=" GOTO 132
	expression/L3 = expression . "%=" expression, FOLLOW [226] -> SHIFT "%=" GOTO 133
	expression/L3 = expression . "&&=" expression, FOLLOW [226] -> SHIFT "&&=" GOTO 134
	expression/L3 = expression . "||=" expression, FOLLOW [226] -> SHIFT "||=" GOTO 135
	expression/L3 = expression . "&=" expression, FOLLOW [226] -> SHIFT "&=" GOTO 136
	expression/L3 = expression . "|=" expression, FOLLOW [226] -> SHIFT "|=" GOTO 137
	expression/L3 = expression . "<<=" expression, FOLLOW [226] -> SHIFT "<<=" GOTO 138
	expression/L3 = expression . ">>=" expression, FOLLOW [226] -> SHIFT ">>=" GOTO 139
	expression/L4 = expression . "||" expression, FOLLOW [226] -> SHIFT "||" GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [226] -> SHIFT "&&" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [226] -> SHIFT '|' GOTO 142
	expression/L8 = expression . "==" expression, FOLLOW [226] -> SHIFT "==" GOTO 143
	expression/L8 = expression . "!=" expression, FOLLOW [226] -> SHIFT "!=" GOTO 144
	expression/L8 = expression . "<=" expression, FOLLOW [226] -> SHIFT "<=" GOTO 145
	expression/L8 = expression . "<" expression, FOLLOW [226] -> SHIFT '<' GOTO 146
	expression/L8 = expression . ">=" expression, FOLLOW [226] -> SHIFT ">=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [226] -> SHIFT '>' GOTO 148
	expression/L9 = expression . "+" expression, FOLLOW [226] -> SHIFT '+' GOTO 149
	expression/L9 = expression . "-" expression, FOLLOW [226] -> SHIFT '-' GOTO 150
	expression/L10 = expression . "*" expression, FOLLOW [226] -> SHIFT '*' GOTO 151
	expression/L10 = expression . "/" expression, FOLLOW [226] -> SHIFT '/' GOTO 152
	expression/L10 = expression . "%" expression, FOLLOW [226] -> SHIFT '%' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [226] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [226] -> SHIFT ">>" GOTO 155
	expression/L12 = expression . "." IDENT, FOLLOW [226] -> SHIFT '.' GOTO 156
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 157
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 157
	expression/L3 = expression "-=" expression . (64), FOLLOW [226] -> REDUCE expression #3 CALL assign_operator "-"
[208]
	iexpression = expression . indirection IDENT, FOLLOW [226] -> GOTO 122
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [226] -> SHIFT '(' GOTO 123
	expression/L13 = expression . "(" ")", FOLLOW [226] -> SHIFT '(' GOTO 123
	expression/L7 = expression . "&" expression, FOLLOW [226] -> SHIFT '&' GOTO 125
	expression/L7 = expression . "^" expression, FOLLOW [226] -> SHIFT '^' GOTO 126
	expression/L3 = expression . "=" expression, FOLLOW [226] -> SHIFT '=' GOTO 127
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [226] -> SHIFT '[' GOTO 128
	expression/L3 = expression . "+=" expression, FOLLOW [226] -> SHIFT "+=" GOTO 129
	expression/L3 = expression . "-=" expression, FOLLOW [226] -> SHIFT "-=" GOTO 130
	expression/L3 = expression . "*=" expression, FOLLOW [226] -> SHIFT "*=" GOTO 131
	expression/L3 = expression . "/=" expression, FOLLOW [226] -> SHIFT "/=" GOTO 132
	expression/L3 = expression . "%=" expression, FOLLOW [226] -> SHIFT "%=" GOTO 133
	expression/L3 = expression . "&&=" expression, FOLLOW [226] -> SHIFT "&&=" GOTO 134
	expression/L3 = expression . "||=" expression, FOLLOW [226] -> SHIFT "||=" GOTO 135
	expression/L3 = expression . "&=" expression, FOLLOW [226] -> SHIFT "&=" GOTO 136
	expression/L3 = expression . "|=" expression, FOLLOW [226] -> SHIFT "|=" GOTO 137
	expression/L3 = expression . "<<=" expression, FOLLOW [226] -> SHIFT "<<=" GOTO 138
	expression/L3 = expression . ">>=" expression, FOLLOW [226] -> SHIFT ">>=" GOTO 139
	expression/L4 = expression . "||" expression, FOLLOW [226] -> SHIFT "||" GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [226] -> SHIFT "&&" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [226] -> SHIFT '|' GOTO 142
	expression/L8 = expression . "==" expression, FOLLOW [226] -> SHIFT "==" GOTO 143
	expression/L8 = expression . "!=" expression, FOLLOW [226] -> SHIFT "!=" GOTO 144
	expression/L8 = expression . "<=" expression, FOLLOW [226] -> SHIFT "<=" GOTO 145
	expression/L8 = expression . "<" expression, FOLLOW [226] -> SHIFT '<' GOTO 146
	expression/L8 = expression . ">=" expression, FOLLOW [226] -> SHIFT ">=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [226] -> SHIFT '>' GOTO 148
	expression/L9 = expression . "+" expression, FOLLOW [226] -> SHIFT '+' GOTO 149
	expression/L9 = expression . "-" expression, FOLLOW [226] -> SHIFT '-' GOTO 150
	expression/L10 = expression . "*" expression, FOLLOW [226] -> SHIFT '*' GOTO 151
	expression/L10 = expression . "/" expression, FOLLOW [226] -> SHIFT '/' GOTO 152
	expression/L10 = expression . "%" expression, FOLLOW [226] -> SHIFT '%' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [226] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [226] -> SHIFT ">>" GOTO 155
	expression/L12 = expression . "." IDENT, FOLLOW [226] -> SHIFT '.' GOTO 156
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 157
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 157
	expression/L3 = expression "*=" expression . (65), FOLLOW [226] -> REDUCE expression #3 CALL assign_operator "*"
[209]
	iexpression = expression . indirection IDENT, FOLLOW [226] -> GOTO 122
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [226] -> SHIFT '(' GOTO 123
	expression/L13 = expression . "(" ")", FOLLOW [226] -> SHIFT '(' GOTO 123
	expression/L7 = expression . "&" expression, FOLLOW [226] -> SHIFT '&' GOTO 125
	expression/L7 = expression . "^" expression, FOLLOW [226] -> SHIFT '^' GOTO 126
	expression/L3 = expression . "=" expression, FOLLOW [226] -> SHIFT '=' GOTO 127
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [226] -> SHIFT '[' GOTO 128
	expression/L3 = expression . "+=" expression, FOLLOW [226] -> SHIFT "+=" GOTO 129
	expression/L3 = expression . "-=" expression, FOLLOW [226] -> SHIFT "-=" GOTO 130
	expression/L3 = expression . "*=" expression, FOLLOW [226] -> SHIFT "*=" GOTO 131
	expression/L3 = expression . "/=" expression, FOLLOW [226] -> SHIFT "/=" GOTO 132
	expression/L3 = expression . "%=" expression, FOLLOW [226] -> SHIFT "%=" GOTO 133
	expression/L3 = expression . "&&=" expression, FOLLOW [226] -> SHIFT "&&=" GOTO 134
	expression/L3 = expression . "||=" expression, FOLLOW [226] -> SHIFT "||=" GOTO 135
	expression/L3 = expression . "&=" expression, FOLLOW [226] -> SHIFT "&=" GOTO 136
	expression/L3 = expression . "|=" expression, FOLLOW [226] -> SHIFT "|=" GOTO 137
	expression/L3 = expression . "<<=" expression, FOLLOW [226] -> SHIFT "<<=" GOTO 138
	expression/L3 = expression . ">>=" expression, FOLLOW [226] -> SHIFT ">>=" GOTO 139
	expression/L4 = expression . "||" expression, FOLLOW [226] -> SHIFT "||" GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [226] -> SHIFT "&&" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [226] -> SHIFT '|' GOTO 142
	expression/L8 = expression . "==" expression, FOLLOW [226] -> SHIFT "==" GOTO 143
	expression/L8 = expression . "!=" expression, FOLLOW [226] -> SHIFT "!=" GOTO 144
	expression/L8 = expression . "<=" expression, FOLLOW [226] -> SHIFT "<=" GOTO 145
	expression/L8 = expression . "<" expression, FOLLOW [226] -> SHIFT '<' GOTO 146
	expression/L8 = expression . ">=" expression, FOLLOW [226] -> SHIFT ">=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [226] -> SHIFT '>' GOTO 148
	expression/L9 = expression . "+" expression, FOLLOW [226] -> SHIFT '+' GOTO 149
	expression/L9 = expression . "-" expression, FOLLOW [226] -> SHIFT '-' GOTO 150
	expression/L10 = expression . "*" expression, FOLLOW [226] -> SHIFT '*' GOTO 151
	expression/L10 = expression . "/" expression, FOLLOW [226] -> SHIFT '/' GOTO 152
	expression/L10 = expression . "%" expression, FOLLOW [226] -> SHIFT '%' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [226] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [226] -> SHIFT ">>" GOTO 155
	expression/L12 = expression . "." IDENT, FOLLOW [226] -> SHIFT '.' GOTO 156
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 157
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 157
	expression/L3 = expression "/=" expression . (66), FOLLOW [226] -> REDUCE expression #3 CALL assign_operator "/"
[210]
	iexpression = expression . indirection IDENT, FOLLOW [226] -> GOTO 122
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [226] -> SHIFT '(' GOTO 123
	expression/L13 = expression . "(" ")", FOLLOW [226] -> SHIFT '(' GOTO 123
	expression/L7 = expression . "&" expression, FOLLOW [226] -> SHIFT '&' GOTO 125
	expression/L7 = expression . "^" expression, FOLLOW [226] -> SHIFT '^' GOTO 126
	expression/L3 = expression . "=" expression, FOLLOW [226] -> SHIFT '=' GOTO 127
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [226] -> SHIFT '[' GOTO 128
	expression/L3 = expression . "+=" expression, FOLLOW [226] -> SHIFT "+=" GOTO 129
	expression/L3 = expression . "-=" expression, FOLLOW [226] -> SHIFT "-=" GOTO 130
	expression/L3 = expression . "*=" expression, FOLLOW [226] -> SHIFT "*=" GOTO 131
	expression/L3 = expression . "/=" expression, FOLLOW [226] -> SHIFT "/=" GOTO 132
	expression/L3 = expression . "%=" expression, FOLLOW [226] -> SHIFT "%=" GOTO 133
	expression/L3 = expression . "&&=" expression, FOLLOW [226] -> SHIFT "&&=" GOTO 134
	expression/L3 = expression . "||=" expression, FOLLOW [226] -> SHIFT "||=" GOTO 135
	expression/L3 = expression . "&=" expression, FOLLOW [226] -> SHIFT "&=" GOTO 136
	expression/L3 = expression . "|=" expression, FOLLOW [226] -> SHIFT "|=" GOTO 137
	expression/L3 = expression . "<<=" expression, FOLLOW [226] -> SHIFT "<<=" GOTO 138
	expression/L3 = expression . ">>=" expression, FOLLOW [226] -> SHIFT ">>=" GOTO 139
	expression/L4 = expression . "||" expression, FOLLOW [226] -> SHIFT "||" GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [226] -> SHIFT "&&" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [226] -> SHIFT '|' GOTO 142
	expression/L8 = expression . "==" expression, FOLLOW [226] -> SHIFT "==" GOTO 143
	expression/L8 = expression . "!=" expression, FOLLOW [226] -> SHIFT "!=" GOTO 144
	expression/L8 = expression . "<=" expression, FOLLOW [226] -> SHIFT "<=" GOTO 145
	expression/L8 = expression . "<" expression, FOLLOW [226] -> SHIFT '<' GOTO 146
	expression/L8 = expression . ">=" expression, FOLLOW [226] -> SHIFT ">=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [226] -> SHIFT '>' GOTO 148
	expression/L9 = expression . "+" expression, FOLLOW [226] -> SHIFT '+' GOTO 149
	expression/L9 = expression . "-" expression, FOLLOW [226] -> SHIFT '-' GOTO 150
	expression/L10 = expression . "*" expression, FOLLOW [226] -> SHIFT '*' GOTO 151
	expression/L10 = expression . "/" expression, FOLLOW [226] -> SHIFT '/' GOTO 152
	expression/L10 = expression . "%" expression, FOLLOW [226] -> SHIFT '%' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [226] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [226] -> SHIFT ">>" GOTO 155
	expression/L12 = expression . "." IDENT, FOLLOW [226] -> SHIFT '.' GOTO 156
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 157
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 157
	expression/L3 = expression "%=" expression . (67), FOLLOW [226] -> REDUCE expression #3 CALL assign_operator "%"
[211]
	iexpression = expression . indirection IDENT, FOLLOW [226] -> GOTO 122
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [226] -> SHIFT '(' GOTO 123
	expression/L13 = expression . "(" ")", FOLLOW [226] -> SHIFT '(' GOTO 123
	expression/L7 = expression . "&" expression, FOLLOW [226] -> SHIFT '&' GOTO 125
	expression/L7 = expression . "^" expression, FOLLOW [226] -> SHIFT '^' GOTO 126
	expression/L3 = expression . "=" expression, FOLLOW [226] -> SHIFT '=' GOTO 127
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [226] -> SHIFT '[' GOTO 128
	expression/L3 = expression . "+=" expression, FOLLOW [226] -> SHIFT "+=" GOTO 129
	expression/L3 = expression . "-=" expression, FOLLOW [226] -> SHIFT "-=" GOTO 130
	expression/L3 = expression . "*=" expression, FOLLOW [226] -> SHIFT "*=" GOTO 131
	expression/L3 = expression . "/=" expression, FOLLOW [226] -> SHIFT "/=" GOTO 132
	expression/L3 = expression . "%=" expression, FOLLOW [226] -> SHIFT "%=" GOTO 133
	expression/L3 = expression . "&&=" expression, FOLLOW [226] -> SHIFT "&&=" GOTO 134
	expression/L3 = expression . "||=" expression, FOLLOW [226] -> SHIFT "||=" GOTO 135
	expression/L3 = expression . "&=" expression, FOLLOW [226] -> SHIFT "&=" GOTO 136
	expression/L3 = expression . "|=" expression, FOLLOW [226] -> SHIFT "|=" GOTO 137
	expression/L3 = expression . "<<=" expression, FOLLOW [226] -> SHIFT "<<=" GOTO 138
	expression/L3 = expression . ">>=" expression, FOLLOW [226] -> SHIFT ">>=" GOTO 139
	expression/L4 = expression . "||" expression, FOLLOW [226] -> SHIFT "||" GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [226] -> SHIFT "&&" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [226] -> SHIFT '|' GOTO 142
	expression/L8 = expression . "==" expression, FOLLOW [226] -> SHIFT "==" GOTO 143
	expression/L8 = expression . "!=" expression, FOLLOW [226] -> SHIFT "!=" GOTO 144
	expression/L8 = expression . "<=" expression, FOLLOW [226] -> SHIFT "<=" GOTO 145
	expression/L8 = expression . "<" expression, FOLLOW [226] -> SHIFT '<' GOTO 146
	expression/L8 = expression . ">=" expression, FOLLOW [226] -> SHIFT ">=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [226] -> SHIFT '>' GOTO 148
	expression/L9 = expression . "+" expression, FOLLOW [226] -> SHIFT '+' GOTO 149
	expression/L9 = expression . "-" expression, FOLLOW [226] -> SHIFT '-' GOTO 150
	expression/L10 = expression . "*" expression, FOLLOW [226] -> SHIFT '*' GOTO 151
	expression/L10 = expression . "/" expression, FOLLOW [226] -> SHIFT '/' GOTO 152
	expression/L10 = expression . "%" expression, FOLLOW [226] -> SHIFT '%' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [226] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [226] -> SHIFT ">>" GOTO 155
	expression/L12 = expression . "." IDENT, FOLLOW [226] -> SHIFT '.' GOTO 156
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 157
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 157
	expression/L3 = expression "&&=" expression . (68), FOLLOW [226] -> REDUCE expression #3 CALL assign_operator "&&"
[212]
	iexpression = expression . indirection IDENT, FOLLOW [226] -> GOTO 122
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [226] -> SHIFT '(' GOTO 123
	expression/L13 = expression . "(" ")", FOLLOW [226] -> SHIFT '(' GOTO 123
	expression/L7 = expression . "&" expression, FOLLOW [226] -> SHIFT '&' GOTO 125
	expression/L7 = expression . "^" expression, FOLLOW [226] -> SHIFT '^' GOTO 126
	expression/L3 = expression . "=" expression, FOLLOW [226] -> SHIFT '=' GOTO 127
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [226] -> SHIFT '[' GOTO 128
	expression/L3 = expression . "+=" expression, FOLLOW [226] -> SHIFT "+=" GOTO 129
	expression/L3 = expression . "-=" expression, FOLLOW [226] -> SHIFT "-=" GOTO 130
	expression/L3 = expression . "*=" expression, FOLLOW [226] -> SHIFT "*=" GOTO 131
	expression/L3 = expression . "/=" expression, FOLLOW [226] -> SHIFT "/=" GOTO 132
	expression/L3 = expression . "%=" expression, FOLLOW [226] -> SHIFT "%=" GOTO 133
	expression/L3 = expression . "&&=" expression, FOLLOW [226] -> SHIFT "&&=" GOTO 134
	expression/L3 = expression . "||=" expression, FOLLOW [226] -> SHIFT "||=" GOTO 135
	expression/L3 = expression . "&=" expression, FOLLOW [226] -> SHIFT "&=" GOTO 136
	expression/L3 = expression . "|=" expression, FOLLOW [226] -> SHIFT "|=" GOTO 137
	expression/L3 = expression . "<<=" expression, FOLLOW [226] -> SHIFT "<<=" GOTO 138
	expression/L3 = expression . ">>=" expression, FOLLOW [226] -> SHIFT ">>=" GOTO 139
	expression/L4 = expression . "||" expression, FOLLOW [226] -> SHIFT "||" GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [226] -> SHIFT "&&" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [226] -> SHIFT '|' GOTO 142
	expression/L8 = expression . "==" expression, FOLLOW [226] -> SHIFT "==" GOTO 143
	expression/L8 = expression . "!=" expression, FOLLOW [226] -> SHIFT "!=" GOTO 144
	expression/L8 = expression . "<=" expression, FOLLOW [226] -> SHIFT "<=" GOTO 145
	expression/L8 = expression . "<" expression, FOLLOW [226] -> SHIFT '<' GOTO 146
	expression/L8 = expression . ">=" expression, FOLLOW [226] -> SHIFT ">=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [226] -> SHIFT '>' GOTO 148
	expression/L9 = expression . "+" expression, FOLLOW [226] -> SHIFT '+' GOTO 149
	expression/L9 = expression . "-" expression, FOLLOW [226] -> SHIFT '-' GOTO 150
	expression/L10 = expression . "*" expression, FOLLOW [226] -> SHIFT '*' GOTO 151
	expression/L10 = expression . "/" expression, FOLLOW [226] -> SHIFT '/' GOTO 152
	expression/L10 = expression . "%" expression, FOLLOW [226] -> SHIFT '%' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [226] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [226] -> SHIFT ">>" GOTO 155
	expression/L12 = expression . "." IDENT, FOLLOW [226] -> SHIFT '.' GOTO 156
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 157
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 157
	expression/L3 = expression "||=" expression . (69), FOLLOW [226] -> REDUCE expression #3 CALL assign_operator "||"
[213]
	iexpression = expression . indirection IDENT, FOLLOW [226] -> GOTO 122
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [226] -> SHIFT '(' GOTO 123
	expression/L13 = expression . "(" ")", FOLLOW [226] -> SHIFT '(' GOTO 123
	expression/L7 = expression . "&" expression, FOLLOW [226] -> SHIFT '&' GOTO 125
	expression/L7 = expression . "^" expression, FOLLOW [226] -> SHIFT '^' GOTO 126
	expression/L3 = expression . "=" expression, FOLLOW [226] -> SHIFT '=' GOTO 127
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [226] -> SHIFT '[' GOTO 128
	expression/L3 = expression . "+=" expression, FOLLOW [226] -> SHIFT "+=" GOTO 129
	expression/L3 = expression . "-=" expression, FOLLOW [226] -> SHIFT "-=" GOTO 130
	expression/L3 = expression . "*=" expression, FOLLOW [226] -> SHIFT "*=" GOTO 131
	expression/L3 = expression . "/=" expression, FOLLOW [226] -> SHIFT "/=" GOTO 132
	expression/L3 = expression . "%=" expression, FOLLOW [226] -> SHIFT "%=" GOTO 133
	expression/L3 = expression . "&&=" expression, FOLLOW [226] -> SHIFT "&&=" GOTO 134
	expression/L3 = expression . "||=" expression, FOLLOW [226] -> SHIFT "||=" GOTO 135
	expression/L3 = expression . "&=" expression, FOLLOW [226] -> SHIFT "&=" GOTO 136
	expression/L3 = expression . "|=" expression, FOLLOW [226] -> SHIFT "|=" GOTO 137
	expression/L3 = expression . "<<=" expression, FOLLOW [226] -> SHIFT "<<=" GOTO 138
	expression/L3 = expression . ">>=" expression, FOLLOW [226] -> SHIFT ">>=" GOTO 139
	expression/L4 = expression . "||" expression, FOLLOW [226] -> SHIFT "||" GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [226] -> SHIFT "&&" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [226] -> SHIFT '|' GOTO 142
	expression/L8 = expression . "==" expression, FOLLOW [226] -> SHIFT "==" GOTO 143
	expression/L8 = expression . "!=" expression, FOLLOW [226] -> SHIFT "!=" GOTO 144
	expression/L8 = expression . "<=" expression, FOLLOW [226] -> SHIFT "<=" GOTO 145
	expression/L8 = expression . "<" expression, FOLLOW [226] -> SHIFT '<' GOTO 146
	expression/L8 = expression . ">=" expression, FOLLOW [226] -> SHIFT ">=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [226] -> SHIFT '>' GOTO 148
	expression/L9 = expression . "+" expression, FOLLOW [226] -> SHIFT '+' GOTO 149
	expression/L9 = expression . "-" expression, FOLLOW [226] -> SHIFT '-' GOTO 150
	expression/L10 = expression . "*" expression, FOLLOW [226] -> SHIFT '*' GOTO 151
	expression/L10 = expression . "/" expression, FOLLOW [226] -> SHIFT '/' GOTO 152
	expression/L10 = expression . "%" expression, FOLLOW [226] -> SHIFT '%' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [226] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [226] -> SHIFT ">>" GOTO 155
	expression/L12 = expression . "." IDENT, FOLLOW [226] -> SHIFT '.' GOTO 156
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 157
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 157
	expression/L3 = expression "&=" expression . (70), FOLLOW [226] -> REDUCE expression #3 CALL assign_operator "&"
[214]
	iexpression = expression . indirection IDENT, FOLLOW [226] -> GOTO 122
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [226] -> SHIFT '(' GOTO 123
	expression/L13 = expression . "(" ")", FOLLOW [226] -> SHIFT '(' GOTO 123
	expression/L7 = expression . "&" expression, FOLLOW [226] -> SHIFT '&' GOTO 125
	expression/L7 = expression . "^" expression, FOLLOW [226] -> SHIFT '^' GOTO 126
	expression/L3 = expression . "=" expression, FOLLOW [226] -> SHIFT '=' GOTO 127
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [226] -> SHIFT '[' GOTO 128
	expression/L3 = expression . "+=" expression, FOLLOW [226] -> SHIFT "+=" GOTO 129
	expression/L3 = expression . "-=" expression, FOLLOW [226] -> SHIFT "-=" GOTO 130
	expression/L3 = expression . "*=" expression, FOLLOW [226] -> SHIFT "*=" GOTO 131
	expression/L3 = expression . "/=" expression, FOLLOW [226] -> SHIFT "/=" GOTO 132
	expression/L3 = expression . "%=" expression, FOLLOW [226] -> SHIFT "%=" GOTO 133
	expression/L3 = expression . "&&=" expression, FOLLOW [226] -> SHIFT "&&=" GOTO 134
	expression/L3 = expression . "||=" expression, FOLLOW [226] -> SHIFT "||=" GOTO 135
	expression/L3 = expression . "&=" expression, FOLLOW [226] -> SHIFT "&=" GOTO 136
	expression/L3 = expression . "|=" expression, FOLLOW [226] -> SHIFT "|=" GOTO 137
	expression/L3 = expression . "<<=" expression, FOLLOW [226] -> SHIFT "<<=" GOTO 138
	expression/L3 = expression . ">>=" expression, FOLLOW [226] -> SHIFT ">>=" GOTO 139
	expression/L4 = expression . "||" expression, FOLLOW [226] -> SHIFT "||" GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [226] -> SHIFT "&&" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [226] -> SHIFT '|' GOTO 142
	expression/L8 = expression . "==" expression, FOLLOW [226] -> SHIFT "==" GOTO 143
	expression/L8 = expression . "!=" expression, FOLLOW [226] -> SHIFT "!=" GOTO 144
	expression/L8 = expression . "<=" expression, FOLLOW [226] -> SHIFT "<=" GOTO 145
	expression/L8 = expression . "<" expression, FOLLOW [226] -> SHIFT '<' GOTO 146
	expression/L8 = expression . ">=" expression, FOLLOW [226] -> SHIFT ">=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [226] -> SHIFT '>' GOTO 148
	expression/L9 = expression . "+" expression, FOLLOW [226] -> SHIFT '+' GOTO 149
	expression/L9 = expression . "-" expression, FOLLOW [226] -> SHIFT '-' GOTO 150
	expression/L10 = expression . "*" expression, FOLLOW [226] -> SHIFT '*' GOTO 151
	expression/L10 = expression . "/" expression, FOLLOW [226] -> SHIFT '/' GOTO 152
	expression/L10 = expression . "%" expression, FOLLOW [226] -> SHIFT '%' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [226] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [226] -> SHIFT ">>" GOTO 155
	expression/L12 = expression . "." IDENT, FOLLOW [226] -> SHIFT '.' GOTO 156
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 157
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 157
	expression/L3 = expression "|=" expression . (71), FOLLOW [226] -> REDUCE expression #3 CALL assign_operator "|"
[215]
	iexpression = expression . indirection IDENT, FOLLOW [226] -> GOTO 122
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [226] -> SHIFT '(' GOTO 123
	expression/L13 = expression . "(" ")", FOLLOW [226] -> SHIFT '(' GOTO 123
	expression/L7 = expression . "&" expression, FOLLOW [226] -> SHIFT '&' GOTO 125
	expression/L7 = expression . "^" expression, FOLLOW [226] -> SHIFT '^' GOTO 126
	expression/L3 = expression . "=" expression, FOLLOW [226] -> SHIFT '=' GOTO 127
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [226] -> SHIFT '[' GOTO 128
	expression/L3 = expression . "+=" expression, FOLLOW [226] -> SHIFT "+=" GOTO 129
	expression/L3 = expression . "-=" expression, FOLLOW [226] -> SHIFT "-=" GOTO 130
	expression/L3 = expression . "*=" expression, FOLLOW [226] -> SHIFT "*=" GOTO 131
	expression/L3 = expression . "/=" expression, FOLLOW [226] -> SHIFT "/=" GOTO 132
	expression/L3 = expression . "%=" expression, FOLLOW [226] -> SHIFT "%=" GOTO 133
	expression/L3 = expression . "&&=" expression, FOLLOW [226] -> SHIFT "&&=" GOTO 134
	expression/L3 = expression . "||=" expression, FOLLOW [226] -> SHIFT "||=" GOTO 135
	expression/L3 = expression . "&=" expression, FOLLOW [226] -> SHIFT "&=" GOTO 136
	expression/L3 = expression . "|=" expression, FOLLOW [226] -> SHIFT "|=" GOTO 137
	expression/L3 = expression . "<<=" expression, FOLLOW [226] -> SHIFT "<<=" GOTO 138
	expression/L3 = expression . ">>=" expression, FOLLOW [226] -> SHIFT ">>=" GOTO 139
	expression/L4 = expression . "||" expression, FOLLOW [226] -> SHIFT "||" GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [226] -> SHIFT "&&" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [226] -> SHIFT '|' GOTO 142
	expression/L8 = expression . "==" expression, FOLLOW [226] -> SHIFT "==" GOTO 143
	expression/L8 = expression . "!=" expression, FOLLOW [226] -> SHIFT "!=" GOTO 144
	expression/L8 = expression . "<=" expression, FOLLOW [226] -> SHIFT "<=" GOTO 145
	expression/L8 = expression . "<" expression, FOLLOW [226] -> SHIFT '<' GOTO 146
	expression/L8 = expression . ">=" expression, FOLLOW [226] -> SHIFT ">=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [226] -> SHIFT '>' GOTO 148
	expression/L9 = expression . "+" expression, FOLLOW [226] -> SHIFT '+' GOTO 149
	expression/L9 = expression . "-" expression, FOLLOW [226] -> SHIFT '-' GOTO 150
	expression/L10 = expression . "*" expression, FOLLOW [226] -> SHIFT '*' GOTO 151
	expression/L10 = expression . "/" expression, FOLLOW [226] -> SHIFT '/' GOTO 152
	expression/L10 = expression . "%" expression, FOLLOW [226] -> SHIFT '%' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [226] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [226] -> SHIFT ">>" GOTO 155
	expression/L12 = expression . "." IDENT, FOLLOW [226] -> SHIFT '.' GOTO 156
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 157
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 157
	expression/L3 = expression "<<=" expression . (72), FOLLOW [226] -> REDUCE expression #3 CALL assign_operator "<<"
[216]
	iexpression = expression . indirection IDENT, FOLLOW [226] -> GOTO 122
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [226] -> SHIFT '(' GOTO 123
	expression/L13 = expression . "(" ")", FOLLOW [226] -> SHIFT '(' GOTO 123
	expression/L7 = expression . "&" expression, FOLLOW [226] -> SHIFT '&' GOTO 125
	expression/L7 = expression . "^" expression, FOLLOW [226] -> SHIFT '^' GOTO 126
	expression/L3 = expression . "=" expression, FOLLOW [226] -> SHIFT '=' GOTO 127
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [226] -> SHIFT '[' GOTO 128
	expression/L3 = expression . "+=" expression, FOLLOW [226] -> SHIFT "+=" GOTO 129
	expression/L3 = expression . "-=" expression, FOLLOW [226] -> SHIFT "-=" GOTO 130
	expression/L3 = expression . "*=" expression, FOLLOW [226] -> SHIFT "*=" GOTO 131
	expression/L3 = expression . "/=" expression, FOLLOW [226] -> SHIFT "/=" GOTO 132
	expression/L3 = expression . "%=" expression, FOLLOW [226] -> SHIFT "%=" GOTO 133
	expression/L3 = expression . "&&=" expression, FOLLOW [226] -> SHIFT "&&=" GOTO 134
	expression/L3 = expression . "||=" expression, FOLLOW [226] -> SHIFT "||=" GOTO 135
	expression/L3 = expression . "&=" expression, FOLLOW [226] -> SHIFT "&=" GOTO 136
	expression/L3 = expression . "|=" expression, FOLLOW [226] -> SHIFT "|=" GOTO 137
	expression/L3 = expression . "<<=" expression, FOLLOW [226] -> SHIFT "<<=" GOTO 138
	expression/L3 = expression . ">>=" expression, FOLLOW [226] -> SHIFT ">>=" GOTO 139
	expression/L4 = expression . "||" expression, FOLLOW [226] -> SHIFT "||" GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [226] -> SHIFT "&&" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [226] -> SHIFT '|' GOTO 142
	expression/L8 = expression . "==" expression, FOLLOW [226] -> SHIFT "==" GOTO 143
	expression/L8 = expression . "!=" expression, FOLLOW [226] -> SHIFT "!=" GOTO 144
	expression/L8 = expression . "<=" expression, FOLLOW [226] -> SHIFT "<=" GOTO 145
	expression/L8 = expression . "<" expression, FOLLOW [226] -> SHIFT '<' GOTO 146
	expression/L8 = expression . ">=" expression, FOLLOW [226] -> SHIFT ">=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [226] -> SHIFT '>' GOTO 148
	expression/L9 = expression . "+" expression, FOLLOW [226] -> SHIFT '+' GOTO 149
	expression/L9 = expression . "-" expression, FOLLOW [226] -> SHIFT '-' GOTO 150
	expression/L10 = expression . "*" expression, FOLLOW [226] -> SHIFT '*' GOTO 151
	expression/L10 = expression . "/" expression, FOLLOW [226] -> SHIFT '/' GOTO 152
	expression/L10 = expression . "%" expression, FOLLOW [226] -> SHIFT '%' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [226] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [226] -> SHIFT ">>" GOTO 155
	expression/L12 = expression . "." IDENT, FOLLOW [226] -> SHIFT '.' GOTO 156
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 157
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 157
	expression/L3 = expression ">>=" expression . (73), FOLLOW [226] -> REDUCE expression #3 CALL assign_operator ">>"
[217]
	iexpression = expression . indirection IDENT, FOLLOW [226] -> GOTO 122
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [226] -> SHIFT '(' GOTO 123
	expression/L13 = expression . "(" ")", FOLLOW [226] -> SHIFT '(' GOTO 123
	expression/L7 = expression . "&" expression, FOLLOW [226] -> SHIFT '&' GOTO 125
	expression/L7 = expression . "^" expression, FOLLOW [226] -> SHIFT '^' GOTO 126
	expression/L3 = expression . "=" expression, FOLLOW [226] -> SHIFT '=' GOTO 127
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [226] -> SHIFT '[' GOTO 128
	expression/L3 = expression . "+=" expression, FOLLOW [226] -> SHIFT "+=" GOTO 129
	expression/L3 = expression . "-=" expression, FOLLOW [226] -> SHIFT "-=" GOTO 130
	expression/L3 = expression . "*=" expression, FOLLOW [226] -> SHIFT "*=" GOTO 131
	expression/L3 = expression . "/=" expression, FOLLOW [226] -> SHIFT "/=" GOTO 132
	expression/L3 = expression . "%=" expression, FOLLOW [226] -> SHIFT "%=" GOTO 133
	expression/L3 = expression . "&&=" expression, FOLLOW [226] -> SHIFT "&&=" GOTO 134
	expression/L3 = expression . "||=" expression, FOLLOW [226] -> SHIFT "||=" GOTO 135
	expression/L3 = expression . "&=" expression, FOLLOW [226] -> SHIFT "&=" GOTO 136
	expression/L3 = expression . "|=" expression, FOLLOW [226] -> SHIFT "|=" GOTO 137
	expression/L3 = expression . "<<=" expression, FOLLOW [226] -> SHIFT "<<=" GOTO 138
	expression/L3 = expression . ">>=" expression, FOLLOW [226] -> SHIFT ">>=" GOTO 139
	expression/L4 = expression . "||" expression, FOLLOW [226] -> SHIFT "||" GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [226] -> SHIFT "&&" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [226] -> SHIFT '|' GOTO 142
	expression/L8 = expression . "==" expression, FOLLOW [226] -> SHIFT "==" GOTO 143
	expression/L8 = expression . "!=" expression, FOLLOW [226] -> SHIFT "!=" GOTO 144
	expression/L8 = expression . "<=" expression, FOLLOW [226] -> SHIFT "<=" GOTO 145
	expression/L8 = expression . "<" expression, FOLLOW [226] -> SHIFT '<' GOTO 146
	expression/L8 = expression . ">=" expression, FOLLOW [226] -> SHIFT ">=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [226] -> SHIFT '>' GOTO 148
	expression/L9 = expression . "+" expression, FOLLOW [226] -> SHIFT '+' GOTO 149
	expression/L9 = expression . "-" expression, FOLLOW [226] -> SHIFT '-' GOTO 150
	expression/L10 = expression . "*" expression, FOLLOW [226] -> SHIFT '*' GOTO 151
	expression/L10 = expression . "/" expression, FOLLOW [226] -> SHIFT '/' GOTO 152
	expression/L10 = expression . "%" expression, FOLLOW [226] -> SHIFT '%' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [226] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [226] -> SHIFT ">>" GOTO 155
	expression/L12 = expression . "." IDENT, FOLLOW [226] -> SHIFT '.' GOTO 156
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 157
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 157
	expression/L4 = expression "||" expression . (74), FOLLOW [226] -> REDUCE expression #3 CALL operator "||"
[218]
	iexpression = expression . indirection IDENT, FOLLOW [226] -> GOTO 122
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [226] -> SHIFT '(' GOTO 123
	expression/L13 = expression . "(" ")", FOLLOW [226] -> SHIFT '(' GOTO 123
	expression/L7 = expression . "&" expression, FOLLOW [226] -> SHIFT '&' GOTO 125
	expression/L7 = expression . "^" expression, FOLLOW [226] -> SHIFT '^' GOTO 126
	expression/L3 = expression . "=" expression, FOLLOW [226] -> SHIFT '=' GOTO 127
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [226] -> SHIFT '[' GOTO 128
	expression/L3 = expression . "+=" expression, FOLLOW [226] -> SHIFT "+=" GOTO 129
	expression/L3 = expression . "-=" expression, FOLLOW [226] -> SHIFT "-=" GOTO 130
	expression/L3 = expression . "*=" expression, FOLLOW [226] -> SHIFT "*=" GOTO 131
	expression/L3 = expression . "/=" expression, FOLLOW [226] -> SHIFT "/=" GOTO 132
	expression/L3 = expression . "%=" expression, FOLLOW [226] -> SHIFT "%=" GOTO 133
	expression/L3 = expression . "&&=" expression, FOLLOW [226] -> SHIFT "&&=" GOTO 134
	expression/L3 = expression . "||=" expression, FOLLOW [226] -> SHIFT "||=" GOTO 135
	expression/L3 = expression . "&=" expression, FOLLOW [226] -> SHIFT "&=" GOTO 136
	expression/L3 = expression . "|=" expression, FOLLOW [226] -> SHIFT "|=" GOTO 137
	expression/L3 = expression . "<<=" expression, FOLLOW [226] -> SHIFT "<<=" GOTO 138
	expression/L3 = expression . ">>=" expression, FOLLOW [226] -> SHIFT ">>=" GOTO 139
	expression/L4 = expression . "||" expression, FOLLOW [226] -> SHIFT "||" GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [226] -> SHIFT "&&" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [226] -> SHIFT '|' GOTO 142
	expression/L8 = expression . "==" expression, FOLLOW [226] -> SHIFT "==" GOTO 143
	expression/L8 = expression . "!=" expression, FOLLOW [226] -> SHIFT "!=" GOTO 144
	expression/L8 = expression . "<=" expression, FOLLOW [226] -> SHIFT "<=" GOTO 145
	expression/L8 = expression . "<" expression, FOLLOW [226] -> SHIFT '<' GOTO 146
	expression/L8 = expression . ">=" expression, FOLLOW [226] -> SHIFT ">=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [226] -> SHIFT '>' GOTO 148
	expression/L9 = expression . "+" expression, FOLLOW [226] -> SHIFT '+' GOTO 149
	expression/L9 = expression . "-" expression, FOLLOW [226] -> SHIFT '-' GOTO 150
	expression/L10 = expression . "*" expression, FOLLOW [226] -> SHIFT '*' GOTO 151
	expression/L10 = expression . "/" expression, FOLLOW [226] -> SHIFT '/' GOTO 152
	expression/L10 = expression . "%" expression, FOLLOW [226] -> SHIFT '%' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [226] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [226] -> SHIFT ">>" GOTO 155
	expression/L12 = expression . "." IDENT, FOLLOW [226] -> SHIFT '.' GOTO 156
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 157
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 157
	expression/L5 = expression "&&" expression . (75), FOLLOW [226] -> REDUCE expression #3 CALL operator "&&"
[219]
	iexpression = expression . indirection IDENT, FOLLOW [226] -> GOTO 122
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [226] -> SHIFT '(' GOTO 123
	expression/L13 = expression . "(" ")", FOLLOW [226] -> SHIFT '(' GOTO 123
	expression/L7 = expression . "&" expression, FOLLOW [226] -> SHIFT '&' GOTO 125
	expression/L7 = expression . "^" expression, FOLLOW [226] -> SHIFT '^' GOTO 126
	expression/L3 = expression . "=" expression, FOLLOW [226] -> SHIFT '=' GOTO 127
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [226] -> SHIFT '[' GOTO 128
	expression/L3 = expression . "+=" expression, FOLLOW [226] -> SHIFT "+=" GOTO 129
	expression/L3 = expression . "-=" expression, FOLLOW [226] -> SHIFT "-=" GOTO 130
	expression/L3 = expression . "*=" expression, FOLLOW [226] -> SHIFT "*=" GOTO 131
	expression/L3 = expression . "/=" expression, FOLLOW [226] -> SHIFT "/=" GOTO 132
	expression/L3 = expression . "%=" expression, FOLLOW [226] -> SHIFT "%=" GOTO 133
	expression/L3 = expression . "&&=" expression, FOLLOW [226] -> SHIFT "&&=" GOTO 134
	expression/L3 = expression . "||=" expression, FOLLOW [226] -> SHIFT "||=" GOTO 135
	expression/L3 = expression . "&=" expression, FOLLOW [226] -> SHIFT "&=" GOTO 136
	expression/L3 = expression . "|=" expression, FOLLOW [226] -> SHIFT "|=" GOTO 137
	expression/L3 = expression . "<<=" expression, FOLLOW [226] -> SHIFT "<<=" GOTO 138
	expression/L3 = expression . ">>=" expression, FOLLOW [226] -> SHIFT ">>=" GOTO 139
	expression/L4 = expression . "||" expression, FOLLOW [226] -> SHIFT "||" GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [226] -> SHIFT "&&" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [226] -> SHIFT '|' GOTO 142
	expression/L8 = expression . "==" expression, FOLLOW [226] -> SHIFT "==" GOTO 143
	expression/L8 = expression . "!=" expression, FOLLOW [226] -> SHIFT "!=" GOTO 144
	expression/L8 = expression . "<=" expression, FOLLOW [226] -> SHIFT "<=" GOTO 145
	expression/L8 = expression . "<" expression, FOLLOW [226] -> SHIFT '<' GOTO 146
	expression/L8 = expression . ">=" expression, FOLLOW [226] -> SHIFT ">=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [226] -> SHIFT '>' GOTO 148
	expression/L9 = expression . "+" expression, FOLLOW [226] -> SHIFT '+' GOTO 149
	expression/L9 = expression . "-" expression, FOLLOW [226] -> SHIFT '-' GOTO 150
	expression/L10 = expression . "*" expression, FOLLOW [226] -> SHIFT '*' GOTO 151
	expression/L10 = expression . "/" expression, FOLLOW [226] -> SHIFT '/' GOTO 152
	expression/L10 = expression . "%" expression, FOLLOW [226] -> SHIFT '%' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [226] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [226] -> SHIFT ">>" GOTO 155
	expression/L12 = expression . "." IDENT, FOLLOW [226] -> SHIFT '.' GOTO 156
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 157
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 157
	expression/L6 = expression "|" expression . (76), FOLLOW [226] -> REDUCE expression #3 CALL operator "|"
[220]
	iexpression = expression . indirection IDENT, FOLLOW [226] -> GOTO 122
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [226] -> SHIFT '(' GOTO 123
	expression/L13 = expression . "(" ")", FOLLOW [226] -> SHIFT '(' GOTO 123
	expression/L7 = expression . "&" expression, FOLLOW [226] -> SHIFT '&' GOTO 125
	expression/L7 = expression . "^" expression, FOLLOW [226] -> SHIFT '^' GOTO 126
	expression/L3 = expression . "=" expression, FOLLOW [226] -> SHIFT '=' GOTO 127
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [226] -> SHIFT '[' GOTO 128
	expression/L3 = expression . "+=" expression, FOLLOW [226] -> SHIFT "+=" GOTO 129
	expression/L3 = expression . "-=" expression, FOLLOW [226] -> SHIFT "-=" GOTO 130
	expression/L3 = expression . "*=" expression, FOLLOW [226] -> SHIFT "*=" GOTO 131
	expression/L3 = expression . "/=" expression, FOLLOW [226] -> SHIFT "/=" GOTO 132
	expression/L3 = expression . "%=" expression, FOLLOW [226] -> SHIFT "%=" GOTO 133
	expression/L3 = expression . "&&=" expression, FOLLOW [226] -> SHIFT "&&=" GOTO 134
	expression/L3 = expression . "||=" expression, FOLLOW [226] -> SHIFT "||=" GOTO 135
	expression/L3 = expression . "&=" expression, FOLLOW [226] -> SHIFT "&=" GOTO 136
	expression/L3 = expression . "|=" expression, FOLLOW [226] -> SHIFT "|=" GOTO 137
	expression/L3 = expression . "<<=" expression, FOLLOW [226] -> SHIFT "<<=" GOTO 138
	expression/L3 = expression . ">>=" expression, FOLLOW [226] -> SHIFT ">>=" GOTO 139
	expression/L4 = expression . "||" expression, FOLLOW [226] -> SHIFT "||" GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [226] -> SHIFT "&&" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [226] -> SHIFT '|' GOTO 142
	expression/L8 = expression . "==" expression, FOLLOW [226] -> SHIFT "==" GOTO 143
	expression/L8 = expression . "!=" expression, FOLLOW [226] -> SHIFT "!=" GOTO 144
	expression/L8 = expression . "<=" expression, FOLLOW [226] -> SHIFT "<=" GOTO 145
	expression/L8 = expression . "<" expression, FOLLOW [226] -> SHIFT '<' GOTO 146
	expression/L8 = expression . ">=" expression, FOLLOW [226] -> SHIFT ">=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [226] -> SHIFT '>' GOTO 148
	expression/L9 = expression . "+" expression, FOLLOW [226] -> SHIFT '+' GOTO 149
	expression/L9 = expression . "-" expression, FOLLOW [226] -> SHIFT '-' GOTO 150
	expression/L10 = expression . "*" expression, FOLLOW [226] -> SHIFT '*' GOTO 151
	expression/L10 = expression . "/" expression, FOLLOW [226] -> SHIFT '/' GOTO 152
	expression/L10 = expression . "%" expression, FOLLOW [226] -> SHIFT '%' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [226] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [226] -> SHIFT ">>" GOTO 155
	expression/L12 = expression . "." IDENT, FOLLOW [226] -> SHIFT '.' GOTO 156
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 157
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 157
	expression/L8 = expression "==" expression . (79), FOLLOW [226] -> REDUCE expression #3 CALL operator "=="
[221]
	iexpression = expression . indirection IDENT, FOLLOW [226] -> GOTO 122
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [226] -> SHIFT '(' GOTO 123
	expression/L13 = expression . "(" ")", FOLLOW [226] -> SHIFT '(' GOTO 123
	expression/L7 = expression . "&" expression, FOLLOW [226] -> SHIFT '&' GOTO 125
	expression/L7 = expression . "^" expression, FOLLOW [226] -> SHIFT '^' GOTO 126
	expression/L3 = expression . "=" expression, FOLLOW [226] -> SHIFT '=' GOTO 127
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [226] -> SHIFT '[' GOTO 128
	expression/L3 = expression . "+=" expression, FOLLOW [226] -> SHIFT "+=" GOTO 129
	expression/L3 = expression . "-=" expression, FOLLOW [226] -> SHIFT "-=" GOTO 130
	expression/L3 = expression . "*=" expression, FOLLOW [226] -> SHIFT "*=" GOTO 131
	expression/L3 = expression . "/=" expression, FOLLOW [226] -> SHIFT "/=" GOTO 132
	expression/L3 = expression . "%=" expression, FOLLOW [226] -> SHIFT "%=" GOTO 133
	expression/L3 = expression . "&&=" expression, FOLLOW [226] -> SHIFT "&&=" GOTO 134
	expression/L3 = expression . "||=" expression, FOLLOW [226] -> SHIFT "||=" GOTO 135
	expression/L3 = expression . "&=" expression, FOLLOW [226] -> SHIFT "&=" GOTO 136
	expression/L3 = expression . "|=" expression, FOLLOW [226] -> SHIFT "|=" GOTO 137
	expression/L3 = expression . "<<=" expression, FOLLOW [226] -> SHIFT "<<=" GOTO 138
	expression/L3 = expression . ">>=" expression, FOLLOW [226] -> SHIFT ">>=" GOTO 139
	expression/L4 = expression . "||" expression, FOLLOW [226] -> SHIFT "||" GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [226] -> SHIFT "&&" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [226] -> SHIFT '|' GOTO 142
	expression/L8 = expression . "==" expression, FOLLOW [226] -> SHIFT "==" GOTO 143
	expression/L8 = expression . "!=" expression, FOLLOW [226] -> SHIFT "!=" GOTO 144
	expression/L8 = expression . "<=" expression, FOLLOW [226] -> SHIFT "<=" GOTO 145
	expression/L8 = expression . "<" expression, FOLLOW [226] -> SHIFT '<' GOTO 146
	expression/L8 = expression . ">=" expression, FOLLOW [226] -> SHIFT ">=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [226] -> SHIFT '>' GOTO 148
	expression/L9 = expression . "+" expression, FOLLOW [226] -> SHIFT '+' GOTO 149
	expression/L9 = expression . "-" expression, FOLLOW [226] -> SHIFT '-' GOTO 150
	expression/L10 = expression . "*" expression, FOLLOW [226] -> SHIFT '*' GOTO 151
	expression/L10 = expression . "/" expression, FOLLOW [226] -> SHIFT '/' GOTO 152
	expression/L10 = expression . "%" expression, FOLLOW [226] -> SHIFT '%' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [226] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [226] -> SHIFT ">>" GOTO 155
	expression/L12 = expression . "." IDENT, FOLLOW [226] -> SHIFT '.' GOTO 156
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 157
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 157
	expression/L8 = expression "!=" expression . (80), FOLLOW [226] -> REDUCE expression #3 CALL operator "!="
[222]
	iexpression = expression . indirection IDENT, FOLLOW [226] -> GOTO 122
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [226] -> SHIFT '(' GOTO 123
	expression/L13 = expression . "(" ")", FOLLOW [226] -> SHIFT '(' GOTO 123
	expression/L7 = expression . "&" expression, FOLLOW [226] -> SHIFT '&' GOTO 125
	expression/L7 = expression . "^" expression, FOLLOW [226] -> SHIFT '^' GOTO 126
	expression/L3 = expression . "=" expression, FOLLOW [226] -> SHIFT '=' GOTO 127
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [226] -> SHIFT '[' GOTO 128
	expression/L3 = expression . "+=" expression, FOLLOW [226] -> SHIFT "+=" GOTO 129
	expression/L3 = expression . "-=" expression, FOLLOW [226] -> SHIFT "-=" GOTO 130
	expression/L3 = expression . "*=" expression, FOLLOW [226] -> SHIFT "*=" GOTO 131
	expression/L3 = expression . "/=" expression, FOLLOW [226] -> SHIFT "/=" GOTO 132
	expression/L3 = expression . "%=" expression, FOLLOW [226] -> SHIFT "%=" GOTO 133
	expression/L3 = expression . "&&=" expression, FOLLOW [226] -> SHIFT "&&=" GOTO 134
	expression/L3 = expression . "||=" expression, FOLLOW [226] -> SHIFT "||=" GOTO 135
	expression/L3 = expression . "&=" expression, FOLLOW [226] -> SHIFT "&=" GOTO 136
	expression/L3 = expression . "|=" expression, FOLLOW [226] -> SHIFT "|=" GOTO 137
	expression/L3 = expression . "<<=" expression, FOLLOW [226] -> SHIFT "<<=" GOTO 138
	expression/L3 = expression . ">>=" expression, FOLLOW [226] -> SHIFT ">>=" GOTO 139
	expression/L4 = expression . "||" expression, FOLLOW [226] -> SHIFT "||" GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [226] -> SHIFT "&&" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [226] -> SHIFT '|' GOTO 142
	expression/L8 = expression . "==" expression, FOLLOW [226] -> SHIFT "==" GOTO 143
	expression/L8 = expression . "!=" expression, FOLLOW [226] -> SHIFT "!=" GOTO 144
	expression/L8 = expression . "<=" expression, FOLLOW [226] -> SHIFT "<=" GOTO 145
	expression/L8 = expression . "<" expression, FOLLOW [226] -> SHIFT '<' GOTO 146
	expression/L8 = expression . ">=" expression, FOLLOW [226] -> SHIFT ">=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [226] -> SHIFT '>' GOTO 148
	expression/L9 = expression . "+" expression, FOLLOW [226] -> SHIFT '+' GOTO 149
	expression/L9 = expression . "-" expression, FOLLOW [226] -> SHIFT '-' GOTO 150
	expression/L10 = expression . "*" expression, FOLLOW [226] -> SHIFT '*' GOTO 151
	expression/L10 = expression . "/" expression, FOLLOW [226] -> SHIFT '/' GOTO 152
	expression/L10 = expression . "%" expression, FOLLOW [226] -> SHIFT '%' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [226] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [226] -> SHIFT ">>" GOTO 155
	expression/L12 = expression . "." IDENT, FOLLOW [226] -> SHIFT '.' GOTO 156
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 157
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 157
	expression/L8 = expression "<=" expression . (81), FOLLOW [226] -> REDUCE expression #3 CALL operator "<="
[223]
	iexpression = expression . indirection IDENT, FOLLOW [226] -> GOTO 122
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [226] -> SHIFT '(' GOTO 123
	expression/L13 = expression . "(" ")", FOLLOW [226] -> SHIFT '(' GOTO 123
	expression/L7 = expression . "&" expression, FOLLOW [226] -> SHIFT '&' GOTO 125
	expression/L7 = expression . "^" expression, FOLLOW [226] -> SHIFT '^' GOTO 126
	expression/L3 = expression . "=" expression, FOLLOW [226] -> SHIFT '=' GOTO 127
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [226] -> SHIFT '[' GOTO 128
	expression/L3 = expression . "+=" expression, FOLLOW [226] -> SHIFT "+=" GOTO 129
	expression/L3 = expression . "-=" expression, FOLLOW [226] -> SHIFT "-=" GOTO 130
	expression/L3 = expression . "*=" expression, FOLLOW [226] -> SHIFT "*=" GOTO 131
	expression/L3 = expression . "/=" expression, FOLLOW [226] -> SHIFT "/=" GOTO 132
	expression/L3 = expression . "%=" expression, FOLLOW [226] -> SHIFT "%=" GOTO 133
	expression/L3 = expression . "&&=" expression, FOLLOW [226] -> SHIFT "&&=" GOTO 134
	expression/L3 = expression . "||=" expression, FOLLOW [226] -> SHIFT "||=" GOTO 135
	expression/L3 = expression . "&=" expression, FOLLOW [226] -> SHIFT "&=" GOTO 136
	expression/L3 = expression . "|=" expression, FOLLOW [226] -> SHIFT "|=" GOTO 137
	expression/L3 = expression . "<<=" expression, FOLLOW [226] -> SHIFT "<<=" GOTO 138
	expression/L3 = expression . ">>=" expression, FOLLOW [226] -> SHIFT ">>=" GOTO 139
	expression/L4 = expression . "||" expression, FOLLOW [226] -> SHIFT "||" GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [226] -> SHIFT "&&" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [226] -> SHIFT '|' GOTO 142
	expression/L8 = expression . "==" expression, FOLLOW [226] -> SHIFT "==" GOTO 143
	expression/L8 = expression . "!=" expression, FOLLOW [226] -> SHIFT "!=" GOTO 144
	expression/L8 = expression . "<=" expression, FOLLOW [226] -> SHIFT "<=" GOTO 145
	expression/L8 = expression . "<" expression, FOLLOW [226] -> SHIFT '<' GOTO 146
	expression/L8 = expression . ">=" expression, FOLLOW [226] -> SHIFT ">=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [226] -> SHIFT '>' GOTO 148
	expression/L9 = expression . "+" expression, FOLLOW [226] -> SHIFT '+' GOTO 149
	expression/L9 = expression . "-" expression, FOLLOW [226] -> SHIFT '-' GOTO 150
	expression/L10 = expression . "*" expression, FOLLOW [226] -> SHIFT '*' GOTO 151
	expression/L10 = expression . "/" expression, FOLLOW [226] -> SHIFT '/' GOTO 152
	expression/L10 = expression . "%" expression, FOLLOW [226] -> SHIFT '%' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [226] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [226] -> SHIFT ">>" GOTO 155
	expression/L12 = expression . "." IDENT, FOLLOW [226] -> SHIFT '.' GOTO 156
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 157
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 157
	expression/L8 = expression "<" expression . (82), FOLLOW [226] -> REDUCE expression #3 CALL operator "<"
[224]
	iexpression = expression . indirection IDENT, FOLLOW [226] -> GOTO 122
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [226] -> SHIFT '(' GOTO 123
	expression/L13 = expression . "(" ")", FOLLOW [226] -> SHIFT '(' GOTO 123
	expression/L7 = expression . "&" expression, FOLLOW [226] -> SHIFT '&' GOTO 125
	expression/L7 = expression . "^" expression, FOLLOW [226] -> SHIFT '^' GOTO 126
	expression/L3 = expression . "=" expression, FOLLOW [226] -> SHIFT '=' GOTO 127
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [226] -> SHIFT '[' GOTO 128
	expression/L3 = expression . "+=" expression, FOLLOW [226] -> SHIFT "+=" GOTO 129
	expression/L3 = expression . "-=" expression, FOLLOW [226] -> SHIFT "-=" GOTO 130
	expression/L3 = expression . "*=" expression, FOLLOW [226] -> SHIFT "*=" GOTO 131
	expression/L3 = expression . "/=" expression, FOLLOW [226] -> SHIFT "/=" GOTO 132
	expression/L3 = expression . "%=" expression, FOLLOW [226] -> SHIFT "%=" GOTO 133
	expression/L3 = expression . "&&=" expression, FOLLOW [226] -> SHIFT "&&=" GOTO 134
	expression/L3 = expression . "||=" expression, FOLLOW [226] -> SHIFT "||=" GOTO 135
	expression/L3 = expression . "&=" expression, FOLLOW [226] -> SHIFT "&=" GOTO 136
	expression/L3 = expression . "|=" expression, FOLLOW [226] -> SHIFT "|=" GOTO 137
	expression/L3 = expression . "<<=" expression, FOLLOW [226] -> SHIFT "<<=" GOTO 138
	expression/L3 = expression . ">>=" expression, FOLLOW [226] -> SHIFT ">>=" GOTO 139
	expression/L4 = expression . "||" expression, FOLLOW [226] -> SHIFT "||" GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [226] -> SHIFT "&&" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [226] -> SHIFT '|' GOTO 142
	expression/L8 = expression . "==" expression, FOLLOW [226] -> SHIFT "==" GOTO 143
	expression/L8 = expression . "!=" expression, FOLLOW [226] -> SHIFT "!=" GOTO 144
	expression/L8 = expression . "<=" expression, FOLLOW [226] -> SHIFT "<=" GOTO 145
	expression/L8 = expression . "<" expression, FOLLOW [226] -> SHIFT '<' GOTO 146
	expression/L8 = expression . ">=" expression, FOLLOW [226] -> SHIFT ">=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [226] -> SHIFT '>' GOTO 148
	expression/L9 = expression . "+" expression, FOLLOW [226] -> SHIFT '+' GOTO 149
	expression/L9 = expression . "-" expression, FOLLOW [226] -> SHIFT '-' GOTO 150
	expression/L10 = expression . "*" expression, FOLLOW [226] -> SHIFT '*' GOTO 151
	expression/L10 = expression . "/" expression, FOLLOW [226] -> SHIFT '/' GOTO 152
	expression/L10 = expression . "%" expression, FOLLOW [226] -> SHIFT '%' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [226] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [226] -> SHIFT ">>" GOTO 155
	expression/L12 = expression . "." IDENT, FOLLOW [226] -> SHIFT '.' GOTO 156
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 157
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 157
	expression/L8 = expression ">=" expression . (83), FOLLOW [226] -> REDUCE expression #3 CALL operator ">="
[225]
	iexpression = expression . indirection IDENT, FOLLOW [226] -> GOTO 122
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [226] -> SHIFT '(' GOTO 123
	expression/L13 = expression . "(" ")", FOLLOW [226] -> SHIFT '(' GOTO 123
	expression/L7 = expression . "&" expression, FOLLOW [226] -> SHIFT '&' GOTO 125
	expression/L7 = expression . "^" expression, FOLLOW [226] -> SHIFT '^' GOTO 126
	expression/L3 = expression . "=" expression, FOLLOW [226] -> SHIFT '=' GOTO 127
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [226] -> SHIFT '[' GOTO 128
	expression/L3 = expression . "+=" expression, FOLLOW [226] -> SHIFT "+=" GOTO 129
	expression/L3 = expression . "-=" expression, FOLLOW [226] -> SHIFT "-=" GOTO 130
	expression/L3 = expression . "*=" expression, FOLLOW [226] -> SHIFT "*=" GOTO 131
	expression/L3 = expression . "/=" expression, FOLLOW [226] -> SHIFT "/=" GOTO 132
	expression/L3 = expression . "%=" expression, FOLLOW [226] -> SHIFT "%=" GOTO 133
	expression/L3 = expression . "&&=" expression, FOLLOW [226] -> SHIFT "&&=" GOTO 134
	expression/L3 = expression . "||=" expression, FOLLOW [226] -> SHIFT "||=" GOTO 135
	expression/L3 = expression . "&=" expression, FOLLOW [226] -> SHIFT "&=" GOTO 136
	expression/L3 = expression . "|=" expression, FOLLOW [226] -> SHIFT "|=" GOTO 137
	expression/L3 = expression . "<<=" expression, FOLLOW [226] -> SHIFT "<<=" GOTO 138
	expression/L3 = expression . ">>=" expression, FOLLOW [226] -> SHIFT ">>=" GOTO 139
	expression/L4 = expression . "||" expression, FOLLOW [226] -> SHIFT "||" GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [226] -> SHIFT "&&" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [226] -> SHIFT '|' GOTO 142
	expression/L8 = expression . "==" expression, FOLLOW [226] -> SHIFT "==" GOTO 143
	expression/L8 = expression . "!=" expression, FOLLOW [226] -> SHIFT "!=" GOTO 144
	expression/L8 = expression . "<=" expression, FOLLOW [226] -> SHIFT "<=" GOTO 145
	expression/L8 = expression . "<" expression, FOLLOW [226] -> SHIFT '<' GOTO 146
	expression/L8 = expression . ">=" expression, FOLLOW [226] -> SHIFT ">=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [226] -> SHIFT '>' GOTO 148
	expression/L9 = expression . "+" expression, FOLLOW [226] -> SHIFT '+' GOTO 149
	expression/L9 = expression . "-" expression, FOLLOW [226] -> SHIFT '-' GOTO 150
	expression/L10 = expression . "*" expression, FOLLOW [226] -> SHIFT '*' GOTO 151
	expression/L10 = expression . "/" expression, FOLLOW [226] -> SHIFT '/' GOTO 152
	expression/L10 = expression . "%" expression, FOLLOW [226] -> SHIFT '%' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [226] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [226] -> SHIFT ">>" GOTO 155
	expression/L12 = expression . "." IDENT, FOLLOW [226] -> SHIFT '.' GOTO 156
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 157
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 157
	expression/L8 = expression ">" expression . (84), FOLLOW [226] -> REDUCE expression #3 CALL operator ">"
[226]
	iexpression = expression . indirection IDENT, FOLLOW [226] -> GOTO 122
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [226] -> SHIFT '(' GOTO 123
	expression/L13 = expression . "(" ")", FOLLOW [226] -> SHIFT '(' GOTO 123
	expression/L7 = expression . "&" expression, FOLLOW [226] -> SHIFT '&' GOTO 125
	expression/L7 = expression . "^" expression, FOLLOW [226] -> SHIFT '^' GOTO 126
	expression/L3 = expression . "=" expression, FOLLOW [226] -> SHIFT '=' GOTO 127
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [226] -> SHIFT '[' GOTO 128
	expression/L3 = expression . "+=" expression, FOLLOW [226] -> SHIFT "+=" GOTO 129
	expression/L3 = expression . "-=" expression, FOLLOW [226] -> SHIFT "-=" GOTO 130
	expression/L3 = expression . "*=" expression, FOLLOW [226] -> SHIFT "*=" GOTO 131
	expression/L3 = expression . "/=" expression, FOLLOW [226] -> SHIFT "/=" GOTO 132
	expression/L3 = expression . "%=" expression, FOLLOW [226] -> SHIFT "%=" GOTO 133
	expression/L3 = expression . "&&=" expression, FOLLOW [226] -> SHIFT "&&=" GOTO 134
	expression/L3 = expression . "||=" expression, FOLLOW [226] -> SHIFT "||=" GOTO 135
	expression/L3 = expression . "&=" expression, FOLLOW [226] -> SHIFT "&=" GOTO 136
	expression/L3 = expression . "|=" expression, FOLLOW [226] -> SHIFT "|=" GOTO 137
	expression/L3 = expression . "<<=" expression, FOLLOW [226] -> SHIFT "<<=" GOTO 138
	expression/L3 = expression . ">>=" expression, FOLLOW [226] -> SHIFT ">>=" GOTO 139
	expression/L4 = expression . "||" expression, FOLLOW [226] -> SHIFT "||" GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [226] -> SHIFT "&&" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [226] -> SHIFT '|' GOTO 142
	expression/L8 = expression . "==" expression, FOLLOW [226] -> SHIFT "==" GOTO 143
	expression/L8 = expression . "!=" expression, FOLLOW [226] -> SHIFT "!=" GOTO 144
	expression/L8 = expression . "<=" expression, FOLLOW [226] -> SHIFT "<=" GOTO 145
	expression/L8 = expression . "<" expression, FOLLOW [226] -> SHIFT '<' GOTO 146
	expression/L8 = expression . ">=" expression, FOLLOW [226] -> SHIFT ">=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [226] -> SHIFT '>' GOTO 148
	expression/L9 = expression . "+" expression, FOLLOW [226] -> SHIFT '+' GOTO 149
	expression/L9 = expression . "-" expression, FOLLOW [226] -> SHIFT '-' GOTO 150
	expression/L10 = expression . "*" expression, FOLLOW [226] -> SHIFT '*' GOTO 151
	expression/L10 = expression . "/" expression, FOLLOW [226] -> SHIFT '/' GOTO 152
	expression/L10 = expression . "%" expression, FOLLOW [226] -> SHIFT '%' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [226] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [226] -> SHIFT ">>" GOTO 155
	expression/L12 = expression . "." IDENT, FOLLOW [226] -> SHIFT '.' GOTO 156
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 157
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 157
	expression/L9 = expression "+" expression . (85), FOLLOW [226] -> REDUCE expression #3 CALL operator "+"
[227]
	iexpression = expression . indirection IDENT, FOLLOW [226] -> GOTO 122
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [226] -> SHIFT '(' GOTO 123
	expression/L13 = expression . "(" ")", FOLLOW [226] -> SHIFT '(' GOTO 123
	expression/L7 = expression . "&" expression, FOLLOW [226] -> SHIFT '&' GOTO 125
	expression/L7 = expression . "^" expression, FOLLOW [226] -> SHIFT '^' GOTO 126
	expression/L3 = expression . "=" expression, FOLLOW [226] -> SHIFT '=' GOTO 127
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [226] -> SHIFT '[' GOTO 128
	expression/L3 = expression . "+=" expression, FOLLOW [226] -> SHIFT "+=" GOTO 129
	expression/L3 = expression . "-=" expression, FOLLOW [226] -> SHIFT "-=" GOTO 130
	expression/L3 = expression . "*=" expression, FOLLOW [226] -> SHIFT "*=" GOTO 131
	expression/L3 = expression . "/=" expression, FOLLOW [226] -> SHIFT "/=" GOTO 132
	expression/L3 = expression . "%=" expression, FOLLOW [226] -> SHIFT "%=" GOTO 133
	expression/L3 = expression . "&&=" expression, FOLLOW [226] -> SHIFT "&&=" GOTO 134
	expression/L3 = expression . "||=" expression, FOLLOW [226] -> SHIFT "||=" GOTO 135
	expression/L3 = expression . "&=" expression, FOLLOW [226] -> SHIFT "&=" GOTO 136
	expression/L3 = expression . "|=" expression, FOLLOW [226] -> SHIFT "|=" GOTO 137
	expression/L3 = expression . "<<=" expression, FOLLOW [226] -> SHIFT "<<=" GOTO 138
	expression/L3 = expression . ">>=" expression, FOLLOW [226] -> SHIFT ">>=" GOTO 139
	expression/L4 = expression . "||" expression, FOLLOW [226] -> SHIFT "||" GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [226] -> SHIFT "&&" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [226] -> SHIFT '|' GOTO 142
	expression/L8 = expression . "==" expression, FOLLOW [226] -> SHIFT "==" GOTO 143
	expression/L8 = expression . "!=" expression, FOLLOW [226] -> SHIFT "!=" GOTO 144
	expression/L8 = expression . "<=" expression, FOLLOW [226] -> SHIFT "<=" GOTO 145
	expression/L8 = expression . "<" expression, FOLLOW [226] -> SHIFT '<' GOTO 146
	expression/L8 = expression . ">=" expression, FOLLOW [226] -> SHIFT ">=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [226] -> SHIFT '>' GOTO 148
	expression/L9 = expression . "+" expression, FOLLOW [226] -> SHIFT '+' GOTO 149
	expression/L9 = expression . "-" expression, FOLLOW [226] -> SHIFT '-' GOTO 150
	expression/L10 = expression . "*" expression, FOLLOW [226] -> SHIFT '*' GOTO 151
	expression/L10 = expression . "/" expression, FOLLOW [226] -> SHIFT '/' GOTO 152
	expression/L10 = expression . "%" expression, FOLLOW [226] -> SHIFT '%' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [226] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [226] -> SHIFT ">>" GOTO 155
	expression/L12 = expression . "." IDENT, FOLLOW [226] -> SHIFT '.' GOTO 156
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 157
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 157
	expression/L9 = expression "-" expression . (86), FOLLOW [226] -> REDUCE expression #3 CALL operator "-"
[228]
	iexpression = expression . indirection IDENT, FOLLOW [226] -> GOTO 122
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [226] -> SHIFT '(' GOTO 123
	expression/L13 = expression . "(" ")", FOLLOW [226] -> SHIFT '(' GOTO 123
	expression/L7 = expression . "&" expression, FOLLOW [226] -> SHIFT '&' GOTO 125
	expression/L7 = expression . "^" expression, FOLLOW [226] -> SHIFT '^' GOTO 126
	expression/L3 = expression . "=" expression, FOLLOW [226] -> SHIFT '=' GOTO 127
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [226] -> SHIFT '[' GOTO 128
	expression/L3 = expression . "+=" expression, FOLLOW [226] -> SHIFT "+=" GOTO 129
	expression/L3 = expression . "-=" expression, FOLLOW [226] -> SHIFT "-=" GOTO 130
	expression/L3 = expression . "*=" expression, FOLLOW [226] -> SHIFT "*=" GOTO 131
	expression/L3 = expression . "/=" expression, FOLLOW [226] -> SHIFT "/=" GOTO 132
	expression/L3 = expression . "%=" expression, FOLLOW [226] -> SHIFT "%=" GOTO 133
	expression/L3 = expression . "&&=" expression, FOLLOW [226] -> SHIFT "&&=" GOTO 134
	expression/L3 = expression . "||=" expression, FOLLOW [226] -> SHIFT "||=" GOTO 135
	expression/L3 = expression . "&=" expression, FOLLOW [226] -> SHIFT "&=" GOTO 136
	expression/L3 = expression . "|=" expression, FOLLOW [226] -> SHIFT "|=" GOTO 137
	expression/L3 = expression . "<<=" expression, FOLLOW [226] -> SHIFT "<<=" GOTO 138
	expression/L3 = expression . ">>=" expression, FOLLOW [226] -> SHIFT ">>=" GOTO 139
	expression/L4 = expression . "||" expression, FOLLOW [226] -> SHIFT "||" GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [226] -> SHIFT "&&" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [226] -> SHIFT '|' GOTO 142
	expression/L8 = expression . "==" expression, FOLLOW [226] -> SHIFT "==" GOTO 143
	expression/L8 = expression . "!=" expression, FOLLOW [226] -> SHIFT "!=" GOTO 144
	expression/L8 = expression . "<=" expression, FOLLOW [226] -> SHIFT "<=" GOTO 145
	expression/L8 = expression . "<" expression, FOLLOW [226] -> SHIFT '<' GOTO 146
	expression/L8 = expression . ">=" expression, FOLLOW [226] -> SHIFT ">=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [226] -> SHIFT '>' GOTO 148
	expression/L9 = expression . "+" expression, FOLLOW [226] -> SHIFT '+' GOTO 149
	expression/L9 = expression . "-" expression, FOLLOW [226] -> SHIFT '-' GOTO 150
	expression/L10 = expression . "*" expression, FOLLOW [226] -> SHIFT '*' GOTO 151
	expression/L10 = expression . "/" expression, FOLLOW [226] -> SHIFT '/' GOTO 152
	expression/L10 = expression . "%" expression, FOLLOW [226] -> SHIFT '%' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [226] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [226] -> SHIFT ">>" GOTO 155
	expression/L12 = expression . "." IDENT, FOLLOW [226] -> SHIFT '.' GOTO 156
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 157
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 157
	expression/L10 = expression "*" expression . (89), FOLLOW [226] -> REDUCE expression #3 CALL operator "*"
[229]
	iexpression = expression . indirection IDENT, FOLLOW [226] -> GOTO 122
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [226] -> SHIFT '(' GOTO 123
	expression/L13 = expression . "(" ")", FOLLOW [226] -> SHIFT '(' GOTO 123
	expression/L7 = expression . "&" expression, FOLLOW [226] -> SHIFT '&' GOTO 125
	expression/L7 = expression . "^" expression, FOLLOW [226] -> SHIFT '^' GOTO 126
	expression/L3 = expression . "=" expression, FOLLOW [226] -> SHIFT '=' GOTO 127
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [226] -> SHIFT '[' GOTO 128
	expression/L3 = expression . "+=" expression, FOLLOW [226] -> SHIFT "+=" GOTO 129
	expression/L3 = expression . "-=" expression, FOLLOW [226] -> SHIFT "-=" GOTO 130
	expression/L3 = expression . "*=" expression, FOLLOW [226] -> SHIFT "*=" GOTO 131
	expression/L3 = expression . "/=" expression, FOLLOW [226] -> SHIFT "/=" GOTO 132
	expression/L3 = expression . "%=" expression, FOLLOW [226] -> SHIFT "%=" GOTO 133
	expression/L3 = expression . "&&=" expression, FOLLOW [226] -> SHIFT "&&=" GOTO 134
	expression/L3 = expression . "||=" expression, FOLLOW [226] -> SHIFT "||=" GOTO 135
	expression/L3 = expression . "&=" expression, FOLLOW [226] -> SHIFT "&=" GOTO 136
	expression/L3 = expression . "|=" expression, FOLLOW [226] -> SHIFT "|=" GOTO 137
	expression/L3 = expression . "<<=" expression, FOLLOW [226] -> SHIFT "<<=" GOTO 138
	expression/L3 = expression . ">>=" expression, FOLLOW [226] -> SHIFT ">>=" GOTO 139
	expression/L4 = expression . "||" expression, FOLLOW [226] -> SHIFT "||" GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [226] -> SHIFT "&&" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [226] -> SHIFT '|' GOTO 142
	expression/L8 = expression . "==" expression, FOLLOW [226] -> SHIFT "==" GOTO 143
	expression/L8 = expression . "!=" expression, FOLLOW [226] -> SHIFT "!=" GOTO 144
	expression/L8 = expression . "<=" expression, FOLLOW [226] -> SHIFT "<=" GOTO 145
	expression/L8 = expression . "<" expression, FOLLOW [226] -> SHIFT '<' GOTO 146
	expression/L8 = expression . ">=" expression, FOLLOW [226] -> SHIFT ">=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [226] -> SHIFT '>' GOTO 148
	expression/L9 = expression . "+" expression, FOLLOW [226] -> SHIFT '+' GOTO 149
	expression/L9 = expression . "-" expression, FOLLOW [226] -> SHIFT '-' GOTO 150
	expression/L10 = expression . "*" expression, FOLLOW [226] -> SHIFT '*' GOTO 151
	expression/L10 = expression . "/" expression, FOLLOW [226] -> SHIFT '/' GOTO 152
	expression/L10 = expression . "%" expression, FOLLOW [226] -> SHIFT '%' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [226] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [226] -> SHIFT ">>" GOTO 155
	expression/L12 = expression . "." IDENT, FOLLOW [226] -> SHIFT '.' GOTO 156
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 157
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 157
	expression/L10 = expression "/" expression . (90), FOLLOW [226] -> REDUCE expression #3 CALL operator "/"
[230]
	iexpression = expression . indirection IDENT, FOLLOW [226] -> GOTO 122
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [226] -> SHIFT '(' GOTO 123
	expression/L13 = expression . "(" ")", FOLLOW [226] -> SHIFT '(' GOTO 123
	expression/L7 = expression . "&" expression, FOLLOW [226] -> SHIFT '&' GOTO 125
	expression/L7 = expression . "^" expression, FOLLOW [226] -> SHIFT '^' GOTO 126
	expression/L3 = expression . "=" expression, FOLLOW [226] -> SHIFT '=' GOTO 127
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [226] -> SHIFT '[' GOTO 128
	expression/L3 = expression . "+=" expression, FOLLOW [226] -> SHIFT "+=" GOTO 129
	expression/L3 = expression . "-=" expression, FOLLOW [226] -> SHIFT "-=" GOTO 130
	expression/L3 = expression . "*=" expression, FOLLOW [226] -> SHIFT "*=" GOTO 131
	expression/L3 = expression . "/=" expression, FOLLOW [226] -> SHIFT "/=" GOTO 132
	expression/L3 = expression . "%=" expression, FOLLOW [226] -> SHIFT "%=" GOTO 133
	expression/L3 = expression . "&&=" expression, FOLLOW [226] -> SHIFT "&&=" GOTO 134
	expression/L3 = expression . "||=" expression, FOLLOW [226] -> SHIFT "||=" GOTO 135
	expression/L3 = expression . "&=" expression, FOLLOW [226] -> SHIFT "&=" GOTO 136
	expression/L3 = expression . "|=" expression, FOLLOW [226] -> SHIFT "|=" GOTO 137
	expression/L3 = expression . "<<=" expression, FOLLOW [226] -> SHIFT "<<=" GOTO 138
	expression/L3 = expression . ">>=" expression, FOLLOW [226] -> SHIFT ">>=" GOTO 139
	expression/L4 = expression . "||" expression, FOLLOW [226] -> SHIFT "||" GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [226] -> SHIFT "&&" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [226] -> SHIFT '|' GOTO 142
	expression/L8 = expression . "==" expression, FOLLOW [226] -> SHIFT "==" GOTO 143
	expression/L8 = expression . "!=" expression, FOLLOW [226] -> SHIFT "!=" GOTO 144
	expression/L8 = expression . "<=" expression, FOLLOW [226] -> SHIFT "<=" GOTO 145
	expression/L8 = expression . "<" expression, FOLLOW [226] -> SHIFT '<' GOTO 146
	expression/L8 = expression . ">=" expression, FOLLOW [226] -> SHIFT ">=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [226] -> SHIFT '>' GOTO 148
	expression/L9 = expression . "+" expression, FOLLOW [226] -> SHIFT '+' GOTO 149
	expression/L9 = expression . "-" expression, FOLLOW [226] -> SHIFT '-' GOTO 150
	expression/L10 = expression . "*" expression, FOLLOW [226] -> SHIFT '*' GOTO 151
	expression/L10 = expression . "/" expression, FOLLOW [226] -> SHIFT '/' GOTO 152
	expression/L10 = expression . "%" expression, FOLLOW [226] -> SHIFT '%' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [226] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [226] -> SHIFT ">>" GOTO 155
	expression/L12 = expression . "." IDENT, FOLLOW [226] -> SHIFT '.' GOTO 156
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 157
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 157
	expression/L10 = expression "%" expression . (91), FOLLOW [226] -> REDUCE expression #3 CALL operator "%"
[231]
	iexpression = expression . indirection IDENT, FOLLOW [226] -> GOTO 122
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [226] -> SHIFT '(' GOTO 123
	expression/L13 = expression . "(" ")", FOLLOW [226] -> SHIFT '(' GOTO 123
	expression/L7 = expression . "&" expression, FOLLOW [226] -> SHIFT '&' GOTO 125
	expression/L7 = expression . "^" expression, FOLLOW [226] -> SHIFT '^' GOTO 126
	expression/L3 = expression . "=" expression, FOLLOW [226] -> SHIFT '=' GOTO 127
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [226] -> SHIFT '[' GOTO 128
	expression/L3 = expression . "+=" expression, FOLLOW [226] -> SHIFT "+=" GOTO 129
	expression/L3 = expression . "-=" expression, FOLLOW [226] -> SHIFT "-=" GOTO 130
	expression/L3 = expression . "*=" expression, FOLLOW [226] -> SHIFT "*=" GOTO 131
	expression/L3 = expression . "/=" expression, FOLLOW [226] -> SHIFT "/=" GOTO 132
	expression/L3 = expression . "%=" expression, FOLLOW [226] -> SHIFT "%=" GOTO 133
	expression/L3 = expression . "&&=" expression, FOLLOW [226] -> SHIFT "&&=" GOTO 134
	expression/L3 = expression . "||=" expression, FOLLOW [226] -> SHIFT "||=" GOTO 135
	expression/L3 = expression . "&=" expression, FOLLOW [226] -> SHIFT "&=" GOTO 136
	expression/L3 = expression . "|=" expression, FOLLOW [226] -> SHIFT "|=" GOTO 137
	expression/L3 = expression . "<<=" expression, FOLLOW [226] -> SHIFT "<<=" GOTO 138
	expression/L3 = expression . ">>=" expression, FOLLOW [226] -> SHIFT ">>=" GOTO 139
	expression/L4 = expression . "||" expression, FOLLOW [226] -> SHIFT "||" GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [226] -> SHIFT "&&" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [226] -> SHIFT '|' GOTO 142
	expression/L8 = expression . "==" expression, FOLLOW [226] -> SHIFT "==" GOTO 143
	expression/L8 = expression . "!=" expression, FOLLOW [226] -> SHIFT "!=" GOTO 144
	expression/L8 = expression . "<=" expression, FOLLOW [226] -> SHIFT "<=" GOTO 145
	expression/L8 = expression . "<" expression, FOLLOW [226] -> SHIFT '<' GOTO 146
	expression/L8 = expression . ">=" expression, FOLLOW [226] -> SHIFT ">=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [226] -> SHIFT '>' GOTO 148
	expression/L9 = expression . "+" expression, FOLLOW [226] -> SHIFT '+' GOTO 149
	expression/L9 = expression . "-" expression, FOLLOW [226] -> SHIFT '-' GOTO 150
	expression/L10 = expression . "*" expression, FOLLOW [226] -> SHIFT '*' GOTO 151
	expression/L10 = expression . "/" expression, FOLLOW [226] -> SHIFT '/' GOTO 152
	expression/L10 = expression . "%" expression, FOLLOW [226] -> SHIFT '%' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [226] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [226] -> SHIFT ">>" GOTO 155
	expression/L12 = expression . "." IDENT, FOLLOW [226] -> SHIFT '.' GOTO 156
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 157
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 157
	expression/L11 = expression "<<" expression . (92), FOLLOW [226] -> REDUCE expression #3 CALL operator "<<"
[232]
	iexpression = expression . indirection IDENT, FOLLOW [226] -> GOTO 122
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [226] -> SHIFT '(' GOTO 123
	expression/L13 = expression . "(" ")", FOLLOW [226] -> SHIFT '(' GOTO 123
	expression/L7 = expression . "&" expression, FOLLOW [226] -> SHIFT '&' GOTO 125
	expression/L7 = expression . "^" expression, FOLLOW [226] -> SHIFT '^' GOTO 126
	expression/L3 = expression . "=" expression, FOLLOW [226] -> SHIFT '=' GOTO 127
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [226] -> SHIFT '[' GOTO 128
	expression/L3 = expression . "+=" expression, FOLLOW [226] -> SHIFT "+=" GOTO 129
	expression/L3 = expression . "-=" expression, FOLLOW [226] -> SHIFT "-=" GOTO 130
	expression/L3 = expression . "*=" expression, FOLLOW [226] -> SHIFT "*=" GOTO 131
	expression/L3 = expression . "/=" expression, FOLLOW [226] -> SHIFT "/=" GOTO 132
	expression/L3 = expression . "%=" expression, FOLLOW [226] -> SHIFT "%=" GOTO 133
	expression/L3 = expression . "&&=" expression, FOLLOW [226] -> SHIFT "&&=" GOTO 134
	expression/L3 = expression . "||=" expression, FOLLOW [226] -> SHIFT "||=" GOTO 135
	expression/L3 = expression . "&=" expression, FOLLOW [226] -> SHIFT "&=" GOTO 136
	expression/L3 = expression . "|=" expression, FOLLOW [226] -> SHIFT "|=" GOTO 137
	expression/L3 = expression . "<<=" expression, FOLLOW [226] -> SHIFT "<<=" GOTO 138
	expression/L3 = expression . ">>=" expression, FOLLOW [226] -> SHIFT ">>=" GOTO 139
	expression/L4 = expression . "||" expression, FOLLOW [226] -> SHIFT "||" GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [226] -> SHIFT "&&" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [226] -> SHIFT '|' GOTO 142
	expression/L8 = expression . "==" expression, FOLLOW [226] -> SHIFT "==" GOTO 143
	expression/L8 = expression . "!=" expression, FOLLOW [226] -> SHIFT "!=" GOTO 144
	expression/L8 = expression . "<=" expression, FOLLOW [226] -> SHIFT "<=" GOTO 145
	expression/L8 = expression . "<" expression, FOLLOW [226] -> SHIFT '<' GOTO 146
	expression/L8 = expression . ">=" expression, FOLLOW [226] -> SHIFT ">=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [226] -> SHIFT '>' GOTO 148
	expression/L9 = expression . "+" expression, FOLLOW [226] -> SHIFT '+' GOTO 149
	expression/L9 = expression . "-" expression, FOLLOW [226] -> SHIFT '-' GOTO 150
	expression/L10 = expression . "*" expression, FOLLOW [226] -> SHIFT '*' GOTO 151
	expression/L10 = expression . "/" expression, FOLLOW [226] -> SHIFT '/' GOTO 152
	expression/L10 = expression . "%" expression, FOLLOW [226] -> SHIFT '%' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [226] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [226] -> SHIFT ">>" GOTO 155
	expression/L12 = expression . "." IDENT, FOLLOW [226] -> SHIFT '.' GOTO 156
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 157
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 157
	expression/L11 = expression ">>" expression . (93), FOLLOW [226] -> REDUCE expression #3 CALL operator ">>"
[233]
	expression/L12 = expression "." IDENT . (94), FOLLOW [226] -> REDUCE expression #3 CALL member
[234]
	indirection = "->" indirection . (99), FOLLOW [9] -> REDUCE indirection #2 CALL count
[235]
	expression/L2 = "(" expression ")" ., FOLLOW [226] -> REDUCE expression #3
[236]
	statement/L1 = "{" codeblock "}" . (scope), FOLLOW [94] -> REDUCE statement #3
[237]
	expression/L3 = . expression "=" expression, FOLLOW [219] -> GOTO 175
	expression/L3 = . expression "+=" expression, FOLLOW [219] -> GOTO 175
	expression/L3 = . expression "-=" expression, FOLLOW [219] -> GOTO 175
	expression/L3 = . expression "*=" expression, FOLLOW [219] -> GOTO 175
	expression/L3 = . expression "/=" expression, FOLLOW [219] -> GOTO 175
	expression/L3 = . expression "%=" expression, FOLLOW [219] -> GOTO 175
	expression/L3 = . expression "&&=" expression, FOLLOW [219] -> GOTO 175
	expression/L3 = . expression "||=" expression, FOLLOW [219] -> GOTO 175
	expression/L3 = . expression "&=" expression, FOLLOW [219] -> GOTO 175
	expression/L3 = . expression "|=" expression, FOLLOW [219] -> GOTO 175
	expression/L3 = . expression "<<=" expression, FOLLOW [219] -> GOTO 175
	expression/L3 = . expression ">>=" expression, FOLLOW [219] -> GOTO 175
	expression/L4 = . expression "||" expression, FOLLOW [219] -> GOTO 175
	expression/L5 = . expression "&&" expression, FOLLOW [219] -> GOTO 175
	expression/L6 = . expression "|" expression, FOLLOW [219] -> GOTO 175
	expression/L7 = . expression "^" expression, FOLLOW [219] -> GOTO 175
	expression/L7 = . expression "&" expression, FOLLOW [219] -> GOTO 175
	expression/L8 = . expression "==" expression, FOLLOW [219] -> GOTO 175
	expression/L8 = . expression "!=" expression, FOLLOW [219] -> GOTO 175
	expression/L8 = . expression "<=" expression, FOLLOW [219] -> GOTO 175
	expression/L8 = . expression "<" expression, FOLLOW [219] -> GOTO 175
	expression/L8 = . expression ">=" expression, FOLLOW [219] -> GOTO 175
	expression/L8 = . expression ">" expression, FOLLOW [219] -> GOTO 175
	expression/L9 = . expression "+" expression, FOLLOW [219] -> GOTO 175
	expression/L9 = . expression "-" expression, FOLLOW [219] -> GOTO 175
	expression/L10 = . expression "*" expression, FOLLOW [219] -> GOTO 175
	expression/L10 = . expression "/" expression, FOLLOW [219] -> GOTO 175
	expression/L10 = . expression "%" expression, FOLLOW [219] -> GOTO 175
	expression/L11 = . expression "<<" expression, FOLLOW [219] -> GOTO 175
	expression/L11 = . expression ">>" expression, FOLLOW [219] -> GOTO 175
	expression/L12 = . expression "." IDENT, FOLLOW [219] -> GOTO 175
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [219] -> GOTO 175
	expression/L13 = . expression "(" ")", FOLLOW [219] -> GOTO 175
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [219] -> GOTO 175
	iexpression = . expression indirection IDENT, FOLLOW [219] -> GOTO 175
	expressionlist = . expression "," expressionlist, FOLLOW [233] -> GOTO 175
	expressionlist = . expression, FOLLOW [233] -> GOTO 175
	expression/L12 = . iexpression, FOLLOW [219] -> GOTO 68
	expressionlist = expression "," . expressionlist, FOLLOW [233] -> GOTO 261
	expression/L2 = . BOOLEAN, FOLLOW [219] -> SHIFT BOOLEAN GOTO 69
	expression/L2 = . IDENT, FOLLOW [219] -> SHIFT IDENT GOTO 70
	expression/L2 = . DQSTRING, FOLLOW [219] -> SHIFT DQSTRING GOTO 71
	expression/L2 = . SQSTRING, FOLLOW [219] -> SHIFT SQSTRING GOTO 72
	expression/L2 = . CARDINAL, FOLLOW [219] -> SHIFT CARDINAL GOTO 73
	expression/L2 = . INTEGER, FOLLOW [219] -> SHIFT INTEGER GOTO 74
	expression/L2 = . FLOAT, FOLLOW [219] -> SHIFT FLOAT GOTO 75
	expression/L2 = . "(" expression ")", FOLLOW [219] -> SHIFT '(' GOTO 76
	expression/L9 = . "&" expression, FOLLOW [219] -> SHIFT '&' GOTO 77
	expression/L1 = . "{" expressionlist "}", FOLLOW [219] -> SHIFT '{' GOTO 93
	expression/L1 = . "{" "}", FOLLOW [219] -> SHIFT '{' GOTO 93
	expression/L1 = . "new" typespec ":" expression, FOLLOW [219] -> SHIFT "new" GOTO 84
	expression/L2 = . "null", FOLLOW [219] -> SHIFT "null" GOTO 85
	expression/L9 = . "+" expression, FOLLOW [219] -> SHIFT '+' GOTO 86
	expression/L9 = . "-" expression, FOLLOW [219] -> SHIFT '-' GOTO 87
	expression/L9 = . "~" expression, FOLLOW [219] -> SHIFT '~' GOTO 88
	expression/L9 = . "!" expression, FOLLOW [219] -> SHIFT '!' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [219] -> SHIFT '*' GOTO 90
[238]
	expression/L1 = "{" expressionlist "}" . (52), FOLLOW [226] -> REDUCE expression #3 CALL structure
[239]
	statement/L1 = "var" variabledefinition ";" . (11), FOLLOW [94] -> REDUCE statement #3 CALL definition
[240]
	statement/L1 = "return" expression ";" . (step:43), FOLLOW [94] -> REDUCE statement #3 CALL return_value
[241]
	statement/L1 = "delete" expression ";" . (44), FOLLOW [94] -> REDUCE statement #3 CALL delete
[242]
	iexpression = expression . indirection IDENT, FOLLOW [217] -> GOTO 122
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [217] -> SHIFT '(' GOTO 123
	expression/L13 = expression . "(" ")", FOLLOW [217] -> SHIFT '(' GOTO 123
	statement/L1 = "if" "(" expression . ")" "{" codeblock "}", FOLLOW [94] -> SHIFT ')' GOTO 262
	statement/L1 = "if" "(" expression . ")" "{" codeblock "}" "else" "{" codeblock "}", FOLLOW [94] -> SHIFT ')' GOTO 262
	expression/L7 = expression . "&" expression, FOLLOW [217] -> SHIFT '&' GOTO 125
	expression/L7 = expression . "^" expression, FOLLOW [217] -> SHIFT '^' GOTO 126
	expression/L3 = expression . "=" expression, FOLLOW [217] -> SHIFT '=' GOTO 127
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [217] -> SHIFT '[' GOTO 128
	expression/L3 = expression . "+=" expression, FOLLOW [217] -> SHIFT "+=" GOTO 129
	expression/L3 = expression . "-=" expression, FOLLOW [217] -> SHIFT "-=" GOTO 130
	expression/L3 = expression . "*=" expression, FOLLOW [217] -> SHIFT "*=" GOTO 131
	expression/L3 = expression . "/=" expression, FOLLOW [217] -> SHIFT "/=" GOTO 132
	expression/L3 = expression . "%=" expression, FOLLOW [217] -> SHIFT "%=" GOTO 133
	expression/L3 = expression . "&&=" expression, FOLLOW [217] -> SHIFT "&&=" GOTO 134
	expression/L3 = expression . "||=" expression, FOLLOW [217] -> SHIFT "||=" GOTO 135
	expression/L3 = expression . "&=" expression, FOLLOW [217] -> SHIFT "&=" GOTO 136
	expression/L3 = expression . "|=" expression, FOLLOW [217] -> SHIFT "|=" GOTO 137
	expression/L3 = expression . "<<=" expression, FOLLOW [217] -> SHIFT "<<=" GOTO 138
	expression/L3 = expression . ">>=" expression, FOLLOW [217] -> SHIFT ">>=" GOTO 139
	expression/L4 = expression . "||" expression, FOLLOW [217] -> SHIFT "||" GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [217] -> SHIFT "&&" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [217] -> SHIFT '|' GOTO 142
	expression/L8 = expression . "==" expression, FOLLOW [217] -> SHIFT "==" GOTO 143
	expression/L8 = expression . "!=" expression, FOLLOW [217] -> SHIFT "!=" GOTO 144
	expression/L8 = expression . "<=" expression, FOLLOW [217] -> SHIFT "<=" GOTO 145
	expression/L8 = expression . "<" expression, FOLLOW [217] -> SHIFT '<' GOTO 146
	expression/L8 = expression . ">=" expression, FOLLOW [217] -> SHIFT ">=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [217] -> SHIFT '>' GOTO 148
	expression/L9 = expression . "+" expression, FOLLOW [217] -> SHIFT '+' GOTO 149
	expression/L9 = expression . "-" expression, FOLLOW [217] -> SHIFT '-' GOTO 150
	expression/L10 = expression . "*" expression, FOLLOW [217] -> SHIFT '*' GOTO 151
	expression/L10 = expression . "/" expression, FOLLOW [217] -> SHIFT '/' GOTO 152
	expression/L10 = expression . "%" expression, FOLLOW [217] -> SHIFT '%' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [217] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [217] -> SHIFT ">>" GOTO 155
	expression/L12 = expression . "." IDENT, FOLLOW [217] -> SHIFT '.' GOTO 156
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 157
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 157
[243]
	iexpression = expression . indirection IDENT, FOLLOW [217] -> GOTO 122
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [217] -> SHIFT '(' GOTO 123
	expression/L13 = expression . "(" ")", FOLLOW [217] -> SHIFT '(' GOTO 123
	statement/L1 = "while" "(" expression . ")" "{" codeblock "}", FOLLOW [94] -> SHIFT ')' GOTO 263
	expression/L7 = expression . "&" expression, FOLLOW [217] -> SHIFT '&' GOTO 125
	expression/L7 = expression . "^" expression, FOLLOW [217] -> SHIFT '^' GOTO 126
	expression/L3 = expression . "=" expression, FOLLOW [217] -> SHIFT '=' GOTO 127
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [217] -> SHIFT '[' GOTO 128
	expression/L3 = expression . "+=" expression, FOLLOW [217] -> SHIFT "+=" GOTO 129
	expression/L3 = expression . "-=" expression, FOLLOW [217] -> SHIFT "-=" GOTO 130
	expression/L3 = expression . "*=" expression, FOLLOW [217] -> SHIFT "*=" GOTO 131
	expression/L3 = expression . "/=" expression, FOLLOW [217] -> SHIFT "/=" GOTO 132
	expression/L3 = expression . "%=" expression, FOLLOW [217] -> SHIFT "%=" GOTO 133
	expression/L3 = expression . "&&=" expression, FOLLOW [217] -> SHIFT "&&=" GOTO 134
	expression/L3 = expression . "||=" expression, FOLLOW [217] -> SHIFT "||=" GOTO 135
	expression/L3 = expression . "&=" expression, FOLLOW [217] -> SHIFT "&=" GOTO 136
	expression/L3 = expression . "|=" expression, FOLLOW [217] -> SHIFT "|=" GOTO 137
	expression/L3 = expression . "<<=" expression, FOLLOW [217] -> SHIFT "<<=" GOTO 138
	expression/L3 = expression . ">>=" expression, FOLLOW [217] -> SHIFT ">>=" GOTO 139
	expression/L4 = expression . "||" expression, FOLLOW [217] -> SHIFT "||" GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [217] -> SHIFT "&&" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [217] -> SHIFT '|' GOTO 142
	expression/L8 = expression . "==" expression, FOLLOW [217] -> SHIFT "==" GOTO 143
	expression/L8 = expression . "!=" expression, FOLLOW [217] -> SHIFT "!=" GOTO 144
	expression/L8 = expression . "<=" expression, FOLLOW [217] -> SHIFT "<=" GOTO 145
	expression/L8 = expression . "<" expression, FOLLOW [217] -> SHIFT '<' GOTO 146
	expression/L8 = expression . ">=" expression, FOLLOW [217] -> SHIFT ">=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [217] -> SHIFT '>' GOTO 148
	expression/L9 = expression . "+" expression, FOLLOW [217] -> SHIFT '+' GOTO 149
	expression/L9 = expression . "-" expression, FOLLOW [217] -> SHIFT '-' GOTO 150
	expression/L10 = expression . "*" expression, FOLLOW [217] -> SHIFT '*' GOTO 151
	expression/L10 = expression . "/" expression, FOLLOW [217] -> SHIFT '/' GOTO 152
	expression/L10 = expression . "%" expression, FOLLOW [217] -> SHIFT '%' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [217] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [217] -> SHIFT ">>" GOTO 155
	expression/L12 = expression . "." IDENT, FOLLOW [217] -> SHIFT '.' GOTO 156
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 157
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 157
[244]
	expression/L1 = "new" typespec ":" . expression, FOLLOW [226] -> GOTO 264
	expression/L3 = . expression "=" expression, FOLLOW [226] -> GOTO 264
	expression/L3 = . expression "+=" expression, FOLLOW [226] -> GOTO 264
	expression/L3 = . expression "-=" expression, FOLLOW [226] -> GOTO 264
	expression/L3 = . expression "*=" expression, FOLLOW [226] -> GOTO 264
	expression/L3 = . expression "/=" expression, FOLLOW [226] -> GOTO 264
	expression/L3 = . expression "%=" expression, FOLLOW [226] -> GOTO 264
	expression/L3 = . expression "&&=" expression, FOLLOW [226] -> GOTO 264
	expression/L3 = . expression "||=" expression, FOLLOW [226] -> GOTO 264
	expression/L3 = . expression "&=" expression, FOLLOW [226] -> GOTO 264
	expression/L3 = . expression "|=" expression, FOLLOW [226] -> GOTO 264
	expression/L3 = . expression "<<=" expression, FOLLOW [226] -> GOTO 264
	expression/L3 = . expression ">>=" expression, FOLLOW [226] -> GOTO 264
	expression/L4 = . expression "||" expression, FOLLOW [226] -> GOTO 264
	expression/L5 = . expression "&&" expression, FOLLOW [226] -> GOTO 264
	expression/L6 = . expression "|" expression, FOLLOW [226] -> GOTO 264
	expression/L7 = . expression "^" expression, FOLLOW [226] -> GOTO 264
	expression/L7 = . expression "&" expression, FOLLOW [226] -> GOTO 264
	expression/L8 = . expression "==" expression, FOLLOW [226] -> GOTO 264
	expression/L8 = . expression "!=" expression, FOLLOW [226] -> GOTO 264
	expression/L8 = . expression "<=" expression, FOLLOW [226] -> GOTO 264
	expression/L8 = . expression "<" expression, FOLLOW [226] -> GOTO 264
	expression/L8 = . expression ">=" expression, FOLLOW [226] -> GOTO 264
	expression/L8 = . expression ">" expression, FOLLOW [226] -> GOTO 264
	expression/L9 = . expression "+" expression, FOLLOW [226] -> GOTO 264
	expression/L9 = . expression "-" expression, FOLLOW [226] -> GOTO 264
	expression/L10 = . expression "*" expression, FOLLOW [226] -> GOTO 264
	expression/L10 = . expression "/" expression, FOLLOW [226] -> GOTO 264
	expression/L10 = . expression "%" expression, FOLLOW [226] -> GOTO 264
	expression/L11 = . expression "<<" expression, FOLLOW [226] -> GOTO 264
	expression/L11 = . expression ">>" expression, FOLLOW [226] -> GOTO 264
	expression/L12 = . expression "." IDENT, FOLLOW [226] -> GOTO 264
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [226] -> GOTO 264
	expression/L13 = . expression "(" ")", FOLLOW [226] -> GOTO 264
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [226] -> GOTO 264
	iexpression = . expression indirection IDENT, FOLLOW [226] -> GOTO 264
	expression/L12 = . iexpression, FOLLOW [226] -> GOTO 68
	expression/L2 = . BOOLEAN, FOLLOW [226] -> SHIFT BOOLEAN GOTO 69
	expression/L2 = . IDENT, FOLLOW [226] -> SHIFT IDENT GOTO 70
	expression/L2 = . DQSTRING, FOLLOW [226] -> SHIFT DQSTRING GOTO 71
	expression/L2 = . SQSTRING, FOLLOW [226] -> SHIFT SQSTRING GOTO 72
	expression/L2 = . CARDINAL, FOLLOW [226] -> SHIFT CARDINAL GOTO 73
	expression/L2 = . INTEGER, FOLLOW [226] -> SHIFT INTEGER GOTO 74
	expression/L2 = . FLOAT, FOLLOW [226] -> SHIFT FLOAT GOTO 75
	expression/L2 = . "(" expression ")", FOLLOW [226] -> SHIFT '(' GOTO 76
	expression/L9 = . "&" expression, FOLLOW [226] -> SHIFT '&' GOTO 77
	expression/L1 = . "{" expressionlist "}", FOLLOW [226] -> SHIFT '{' GOTO 93
	expression/L1 = . "{" "}", FOLLOW [226] -> SHIFT '{' GOTO 93
	expression/L1 = . "new" typespec ":" expression, FOLLOW [226] -> SHIFT "new" GOTO 84
	expression/L2 = . "null", FOLLOW [226] -> SHIFT "null" GOTO 85
	expression/L9 = . "+" expression, FOLLOW [226] -> SHIFT '+' GOTO 86
	expression/L9 = . "-" expression, FOLLOW [226] -> SHIFT '-' GOTO 87
	expression/L9 = . "~" expression, FOLLOW [226] -> SHIFT '~' GOTO 88
	expression/L9 = . "!" expression, FOLLOW [226] -> SHIFT '!' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [226] -> SHIFT '*' GOTO 90
[245]
	variabledefinition = typespec IDENT "[" expression "]" "=" . expression, FOLLOW [13] -> GOTO 265
	expression/L3 = . expression "=" expression, FOLLOW [93] -> GOTO 265
	expression/L3 = . expression "+=" expression, FOLLOW [93] -> GOTO 265
	expression/L3 = . expression "-=" expression, FOLLOW [93] -> GOTO 265
	expression/L3 = . expression "*=" expression, FOLLOW [93] -> GOTO 265
	expression/L3 = . expression "/=" expression, FOLLOW [93] -> GOTO 265
	expression/L3 = . expression "%=" expression, FOLLOW [93] -> GOTO 265
	expression/L3 = . expression "&&=" expression, FOLLOW [93] -> GOTO 265
	expression/L3 = . expression "||=" expression, FOLLOW [93] -> GOTO 265
	expression/L3 = . expression "&=" expression, FOLLOW [93] -> GOTO 265
	expression/L3 = . expression "|=" expression, FOLLOW [93] -> GOTO 265
	expression/L3 = . expression "<<=" expression, FOLLOW [93] -> GOTO 265
	expression/L3 = . expression ">>=" expression, FOLLOW [93] -> GOTO 265
	expression/L4 = . expression "||" expression, FOLLOW [93] -> GOTO 265
	expression/L5 = . expression "&&" expression, FOLLOW [93] -> GOTO 265
	expression/L6 = . expression "|" expression, FOLLOW [93] -> GOTO 265
	expression/L7 = . expression "^" expression, FOLLOW [93] -> GOTO 265
	expression/L7 = . expression "&" expression, FOLLOW [93] -> GOTO 265
	expression/L8 = . expression "==" expression, FOLLOW [93] -> GOTO 265
	expression/L8 = . expression "!=" expression, FOLLOW [93] -> GOTO 265
	expression/L8 = . expression "<=" expression, FOLLOW [93] -> GOTO 265
	expression/L8 = . expression "<" expression, FOLLOW [93] -> GOTO 265
	expression/L8 = . expression ">=" expression, FOLLOW [93] -> GOTO 265
	expression/L8 = . expression ">" expression, FOLLOW [93] -> GOTO 265
	expression/L9 = . expression "+" expression, FOLLOW [93] -> GOTO 265
	expression/L9 = . expression "-" expression, FOLLOW [93] -> GOTO 265
	expression/L10 = . expression "*" expression, FOLLOW [93] -> GOTO 265
	expression/L10 = . expression "/" expression, FOLLOW [93] -> GOTO 265
	expression/L10 = . expression "%" expression, FOLLOW [93] -> GOTO 265
	expression/L11 = . expression "<<" expression, FOLLOW [93] -> GOTO 265
	expression/L11 = . expression ">>" expression, FOLLOW [93] -> GOTO 265
	expression/L12 = . expression "." IDENT, FOLLOW [93] -> GOTO 265
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [93] -> GOTO 265
	expression/L13 = . expression "(" ")", FOLLOW [93] -> GOTO 265
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [93] -> GOTO 265
	iexpression = . expression indirection IDENT, FOLLOW [93] -> GOTO 265
	expression/L12 = . iexpression, FOLLOW [93] -> GOTO 68
	expression/L2 = . BOOLEAN, FOLLOW [93] -> SHIFT BOOLEAN GOTO 69
	expression/L2 = . IDENT, FOLLOW [93] -> SHIFT IDENT GOTO 70
	expression/L2 = . DQSTRING, FOLLOW [93] -> SHIFT DQSTRING GOTO 71
	expression/L2 = . SQSTRING, FOLLOW [93] -> SHIFT SQSTRING GOTO 72
	expression/L2 = . CARDINAL, FOLLOW [93] -> SHIFT CARDINAL GOTO 73
	expression/L2 = . INTEGER, FOLLOW [93] -> SHIFT INTEGER GOTO 74
	expression/L2 = . FLOAT, FOLLOW [93] -> SHIFT FLOAT GOTO 75
	expression/L2 = . "(" expression ")", FOLLOW [93] -> SHIFT '(' GOTO 76
	expression/L9 = . "&" expression, FOLLOW [93] -> SHIFT '&' GOTO 77
	expression/L1 = . "{" expressionlist "}", FOLLOW [93] -> SHIFT '{' GOTO 93
	expression/L1 = . "{" "}", FOLLOW [93] -> SHIFT '{' GOTO 93
	expression/L1 = . "new" typespec ":" expression, FOLLOW [93] -> SHIFT "new" GOTO 84
	expression/L2 = . "null", FOLLOW [93] -> SHIFT "null" GOTO 85
	expression/L9 = . "+" expression, FOLLOW [93] -> SHIFT '+' GOTO 86
	expression/L9 = . "-" expression, FOLLOW [93] -> SHIFT '-' GOTO 87
	expression/L9 = . "~" expression, FOLLOW [93] -> SHIFT '~' GOTO 88
	expression/L9 = . "!" expression, FOLLOW [93] -> SHIFT '!' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [93] -> SHIFT '*' GOTO 90
[246]
	paramdecl = typespec IDENT . (40), FOLLOW [176] -> REDUCE paramdecl #2 CALL paramdef
[247]
	callablebody = "(" parameterlist ")" . "const" "{" codeblock "}", FOLLOW [228] -> SHIFT "const" GOTO 266
	callablebody = "(" parameterlist ")" . "{" codeblock "}", FOLLOW [228] -> SHIFT '{' GOTO 267
[248]
	typespec/L1 = . typename, FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [9] -> GOTO 8
	paramdecl = . typespec IDENT, FOLLOW [176] -> GOTO 178
	parameters = paramdecl "," . parameters, FOLLOW [10] -> GOTO 268
	parameters = . paramdecl "," parameters, FOLLOW [10] -> GOTO 181
	parameters = . paramdecl, FOLLOW [10] -> GOTO 181
	typename/L1 = . IDENT, FOLLOW [59] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [59] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
[249]
	interface_definition = "function" typespec IDENT . "(" parameterlist ")" ";", FOLLOW [164] -> SHIFT '(' GOTO 269
	interface_definition = "function" typespec IDENT . "(" parameterlist ")" "const" ";", FOLLOW [164] -> SHIFT '(' GOTO 269
[250]
	typespec/L1 = . typename, FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [9] -> GOTO 8
	paramdecl = . typespec IDENT, FOLLOW [176] -> GOTO 178
	interface_definition = "procedure" IDENT "(" . parameterlist ")" ";", FOLLOW [164] -> GOTO 270
	interface_definition = "procedure" IDENT "(" . parameterlist ")" "const" ";", FOLLOW [164] -> GOTO 270
	parameterlist = . parameters, FOLLOW [10] -> GOTO 180
	parameters = . paramdecl "," parameters, FOLLOW [10] -> GOTO 181
	parameters = . paramdecl, FOLLOW [10] -> GOTO 181
	typename/L1 = . IDENT, FOLLOW [59] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [59] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	parameterlist = ., FOLLOW [10] -> REDUCE parameterlist #0
[251]
	constructordefinition = linkage "constructor" callablebody . (34), FOLLOW [166] -> REDUCE constructordefinition #3 CALL constructordef
[252]
	constructordefinition = "destructor" "{" codeblock . "}", FOLLOW [166] -> SHIFT '}' GOTO 271
[253]
	inheritlist = typename "," inheritlist . (step:27), FOLLOW [17] -> REDUCE inheritlist #3 CALL inheritdef
[254]
	classdefinition = "class" IDENT ":" inheritlist "{" class_definitionlist . "}", FOLLOW [167] -> SHIFT '}' GOTO 272
[255]
	extern_definition = "extern" DQSTRING "function" typespec IDENT "(" extern_paramlist . ")" ";", FOLLOW [56] -> SHIFT ')' GOTO 273
	extern_definition = "extern" DQSTRING "function" typespec IDENT "(" extern_paramlist . "..." ")" ";", FOLLOW [56] -> SHIFT "..." GOTO 274
[256]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist ")" . ";", FOLLOW [56] -> SHIFT ';' GOTO 275
[257]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist "..." . ")" ";", FOLLOW [56] -> SHIFT ')' GOTO 276
[258]
	extern_parameters = typespec "," . extern_parameters, FOLLOW [177] -> GOTO 277
	typespec/L1 = . typename, FOLLOW [179] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [179] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [179] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [179] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [179] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [179] -> GOTO 8
	extern_parameters = . typespec "," extern_parameters, FOLLOW [177] -> GOTO 198
	extern_parameters = . typespec, FOLLOW [177] -> GOTO 198
	typename/L1 = . IDENT, FOLLOW [180] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [180] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [179] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [179] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [179] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [179] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [179] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [179] -> SHIFT "const" GOTO 18
[259]
	expression/L13 = expression "(" expressionlist ")" . (96), FOLLOW [226] -> REDUCE expression #4 CALL operator "()"
[260]
	expression/L13 = expression "[" expressionlist "]" . (97), FOLLOW [226] -> REDUCE expression #4 CALL operator "[]"
[261]
	expressionlist = expression "," expressionlist ., FOLLOW [233] -> REDUCE expressionlist #3
[262]
	statement/L1 = "if" "(" expression ")" . "{" codeblock "}", FOLLOW [94] -> SHIFT '{' GOTO 278
	statement/L1 = "if" "(" expression ")" . "{" codeblock "}" "else" "{" codeblock "}", FOLLOW [94] -> SHIFT '{' GOTO 278
[263]
	statement/L1 = "while" "(" expression ")" . "{" codeblock "}", FOLLOW [94] -> SHIFT '{' GOTO 279
[264]
	iexpression = expression . indirection IDENT, FOLLOW [226] -> GOTO 122
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [226] -> SHIFT '(' GOTO 123
	expression/L13 = expression . "(" ")", FOLLOW [226] -> SHIFT '(' GOTO 123
	expression/L7 = expression . "&" expression, FOLLOW [226] -> SHIFT '&' GOTO 125
	expression/L7 = expression . "^" expression, FOLLOW [226] -> SHIFT '^' GOTO 126
	expression/L3 = expression . "=" expression, FOLLOW [226] -> SHIFT '=' GOTO 127
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [226] -> SHIFT '[' GOTO 128
	expression/L3 = expression . "+=" expression, FOLLOW [226] -> SHIFT "+=" GOTO 129
	expression/L3 = expression . "-=" expression, FOLLOW [226] -> SHIFT "-=" GOTO 130
	expression/L3 = expression . "*=" expression, FOLLOW [226] -> SHIFT "*=" GOTO 131
	expression/L3 = expression . "/=" expression, FOLLOW [226] -> SHIFT "/=" GOTO 132
	expression/L3 = expression . "%=" expression, FOLLOW [226] -> SHIFT "%=" GOTO 133
	expression/L3 = expression . "&&=" expression, FOLLOW [226] -> SHIFT "&&=" GOTO 134
	expression/L3 = expression . "||=" expression, FOLLOW [226] -> SHIFT "||=" GOTO 135
	expression/L3 = expression . "&=" expression, FOLLOW [226] -> SHIFT "&=" GOTO 136
	expression/L3 = expression . "|=" expression, FOLLOW [226] -> SHIFT "|=" GOTO 137
	expression/L3 = expression . "<<=" expression, FOLLOW [226] -> SHIFT "<<=" GOTO 138
	expression/L3 = expression . ">>=" expression, FOLLOW [226] -> SHIFT ">>=" GOTO 139
	expression/L4 = expression . "||" expression, FOLLOW [226] -> SHIFT "||" GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [226] -> SHIFT "&&" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [226] -> SHIFT '|' GOTO 142
	expression/L8 = expression . "==" expression, FOLLOW [226] -> SHIFT "==" GOTO 143
	expression/L8 = expression . "!=" expression, FOLLOW [226] -> SHIFT "!=" GOTO 144
	expression/L8 = expression . "<=" expression, FOLLOW [226] -> SHIFT "<=" GOTO 145
	expression/L8 = expression . "<" expression, FOLLOW [226] -> SHIFT '<' GOTO 146
	expression/L8 = expression . ">=" expression, FOLLOW [226] -> SHIFT ">=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [226] -> SHIFT '>' GOTO 148
	expression/L9 = expression . "+" expression, FOLLOW [226] -> SHIFT '+' GOTO 149
	expression/L9 = expression . "-" expression, FOLLOW [226] -> SHIFT '-' GOTO 150
	expression/L10 = expression . "*" expression, FOLLOW [226] -> SHIFT '*' GOTO 151
	expression/L10 = expression . "/" expression, FOLLOW [226] -> SHIFT '/' GOTO 152
	expression/L10 = expression . "%" expression, FOLLOW [226] -> SHIFT '%' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [226] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [226] -> SHIFT ">>" GOTO 155
	expression/L12 = expression . "." IDENT, FOLLOW [226] -> SHIFT '.' GOTO 156
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 157
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 157
	expression/L1 = "new" typespec ":" expression . (53), FOLLOW [226] -> REDUCE expression #4 CALL allocate
[265]
	iexpression = expression . indirection IDENT, FOLLOW [93] -> GOTO 122
	expression/L13 = expression . "(" expressionlist ")", FOLLOW [93] -> SHIFT '(' GOTO 123
	expression/L13 = expression . "(" ")", FOLLOW [93] -> SHIFT '(' GOTO 123
	expression/L7 = expression . "&" expression, FOLLOW [93] -> SHIFT '&' GOTO 125
	expression/L7 = expression . "^" expression, FOLLOW [93] -> SHIFT '^' GOTO 126
	expression/L3 = expression . "=" expression, FOLLOW [93] -> SHIFT '=' GOTO 127
	expression/L13 = expression . "[" expressionlist "]", FOLLOW [93] -> SHIFT '[' GOTO 128
	expression/L3 = expression . "+=" expression, FOLLOW [93] -> SHIFT "+=" GOTO 129
	expression/L3 = expression . "-=" expression, FOLLOW [93] -> SHIFT "-=" GOTO 130
	expression/L3 = expression . "*=" expression, FOLLOW [93] -> SHIFT "*=" GOTO 131
	expression/L3 = expression . "/=" expression, FOLLOW [93] -> SHIFT "/=" GOTO 132
	expression/L3 = expression . "%=" expression, FOLLOW [93] -> SHIFT "%=" GOTO 133
	expression/L3 = expression . "&&=" expression, FOLLOW [93] -> SHIFT "&&=" GOTO 134
	expression/L3 = expression . "||=" expression, FOLLOW [93] -> SHIFT "||=" GOTO 135
	expression/L3 = expression . "&=" expression, FOLLOW [93] -> SHIFT "&=" GOTO 136
	expression/L3 = expression . "|=" expression, FOLLOW [93] -> SHIFT "|=" GOTO 137
	expression/L3 = expression . "<<=" expression, FOLLOW [93] -> SHIFT "<<=" GOTO 138
	expression/L3 = expression . ">>=" expression, FOLLOW [93] -> SHIFT ">>=" GOTO 139
	expression/L4 = expression . "||" expression, FOLLOW [93] -> SHIFT "||" GOTO 140
	expression/L5 = expression . "&&" expression, FOLLOW [93] -> SHIFT "&&" GOTO 141
	expression/L6 = expression . "|" expression, FOLLOW [93] -> SHIFT '|' GOTO 142
	expression/L8 = expression . "==" expression, FOLLOW [93] -> SHIFT "==" GOTO 143
	expression/L8 = expression . "!=" expression, FOLLOW [93] -> SHIFT "!=" GOTO 144
	expression/L8 = expression . "<=" expression, FOLLOW [93] -> SHIFT "<=" GOTO 145
	expression/L8 = expression . "<" expression, FOLLOW [93] -> SHIFT '<' GOTO 146
	expression/L8 = expression . ">=" expression, FOLLOW [93] -> SHIFT ">=" GOTO 147
	expression/L8 = expression . ">" expression, FOLLOW [93] -> SHIFT '>' GOTO 148
	expression/L9 = expression . "+" expression, FOLLOW [93] -> SHIFT '+' GOTO 149
	expression/L9 = expression . "-" expression, FOLLOW [93] -> SHIFT '-' GOTO 150
	expression/L10 = expression . "*" expression, FOLLOW [93] -> SHIFT '*' GOTO 151
	expression/L10 = expression . "/" expression, FOLLOW [93] -> SHIFT '/' GOTO 152
	expression/L10 = expression . "%" expression, FOLLOW [93] -> SHIFT '%' GOTO 153
	expression/L11 = expression . "<<" expression, FOLLOW [93] -> SHIFT "<<" GOTO 154
	expression/L11 = expression . ">>" expression, FOLLOW [93] -> SHIFT ">>" GOTO 155
	expression/L12 = expression . "." IDENT, FOLLOW [93] -> SHIFT '.' GOTO 156
	indirection = . "->" indirection, FOLLOW [9] -> SHIFT "->" GOTO 157
	indirection = . "->", FOLLOW [9] -> SHIFT "->" GOTO 157
	variabledefinition = typespec IDENT "[" expression "]" "=" expression . (step:50), FOLLOW [13] -> REDUCE variabledefinition #7 CALL vardef_array_assign
[266]
	callablebody = "(" parameterlist ")" "const" . "{" codeblock "}", FOLLOW [228] -> SHIFT '{' GOTO 280
[267]
	statement/L1 = . typedefinition ";", FOLLOW [94] -> GOTO 62
	functiondefinition = . linkage "function" typespec IDENT callablebody, FOLLOW [94] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [94] -> GOTO 14
	statement/L1 = . functiondefinition, FOLLOW [94] -> GOTO 63
	callablebody = "(" parameterlist ")" "{" . codeblock "}", FOLLOW [228] -> GOTO 281
	codeblock = . statementlist, FOLLOW [16] -> GOTO 65
	statementlist = . statement statementlist, FOLLOW [16] -> GOTO 66
	statement/L1 = . expression ";", FOLLOW [94] -> GOTO 67
	expression/L3 = . expression "=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression "+=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression "-=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression "*=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression "/=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression "%=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression "&&=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression "||=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression "&=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression "|=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression "<<=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression ">>=" expression, FOLLOW [93] -> GOTO 67
	expression/L4 = . expression "||" expression, FOLLOW [93] -> GOTO 67
	expression/L5 = . expression "&&" expression, FOLLOW [93] -> GOTO 67
	expression/L6 = . expression "|" expression, FOLLOW [93] -> GOTO 67
	expression/L7 = . expression "^" expression, FOLLOW [93] -> GOTO 67
	expression/L7 = . expression "&" expression, FOLLOW [93] -> GOTO 67
	expression/L8 = . expression "==" expression, FOLLOW [93] -> GOTO 67
	expression/L8 = . expression "!=" expression, FOLLOW [93] -> GOTO 67
	expression/L8 = . expression "<=" expression, FOLLOW [93] -> GOTO 67
	expression/L8 = . expression "<" expression, FOLLOW [93] -> GOTO 67
	expression/L8 = . expression ">=" expression, FOLLOW [93] -> GOTO 67
	expression/L8 = . expression ">" expression, FOLLOW [93] -> GOTO 67
	expression/L9 = . expression "+" expression, FOLLOW [93] -> GOTO 67
	expression/L9 = . expression "-" expression, FOLLOW [93] -> GOTO 67
	expression/L10 = . expression "*" expression, FOLLOW [93] -> GOTO 67
	expression/L10 = . expression "/" expression, FOLLOW [93] -> GOTO 67
	expression/L10 = . expression "%" expression, FOLLOW [93] -> GOTO 67
	expression/L11 = . expression "<<" expression, FOLLOW [93] -> GOTO 67
	expression/L11 = . expression ">>" expression, FOLLOW [93] -> GOTO 67
	expression/L12 = . expression "." IDENT, FOLLOW [93] -> GOTO 67
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [93] -> GOTO 67
	expression/L13 = . expression "(" ")", FOLLOW [93] -> GOTO 67
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [93] -> GOTO 67
	iexpression = . expression indirection IDENT, FOLLOW [93] -> GOTO 67
	expression/L12 = . iexpression, FOLLOW [93] -> GOTO 68
	expression/L2 = . BOOLEAN, FOLLOW [93] -> SHIFT BOOLEAN GOTO 69
	expression/L2 = . IDENT, FOLLOW [93] -> SHIFT IDENT GOTO 70
	expression/L2 = . DQSTRING, FOLLOW [93] -> SHIFT DQSTRING GOTO 71
	expression/L2 = . SQSTRING, FOLLOW [93] -> SHIFT SQSTRING GOTO 72
	expression/L2 = . CARDINAL, FOLLOW [93] -> SHIFT CARDINAL GOTO 73
	expression/L2 = . INTEGER, FOLLOW [93] -> SHIFT INTEGER GOTO 74
	expression/L2 = . FLOAT, FOLLOW [93] -> SHIFT FLOAT GOTO 75
	expression/L2 = . "(" expression ")", FOLLOW [93] -> SHIFT '(' GOTO 76
	expression/L9 = . "&" expression, FOLLOW [93] -> SHIFT '&' GOTO 77
	typedefinition = . "typedef" typename IDENT, FOLLOW [13] -> SHIFT "typedef" GOTO 19
	statement/L1 = . "{" codeblock "}", FOLLOW [94] -> SHIFT '{' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [93] -> SHIFT '{' GOTO 78
	expression/L1 = . "{" "}", FOLLOW [93] -> SHIFT '{' GOTO 78
	linkage = . "private", FOLLOW [58] -> SHIFT "private" GOTO 23
	linkage = . "public", FOLLOW [58] -> SHIFT "public" GOTO 24
	statement/L1 = . "var" variabledefinition ";", FOLLOW [94] -> SHIFT "var" GOTO 79
	statement/L1 = . "return" expression ";", FOLLOW [94] -> SHIFT "return" GOTO 80
	statement/L1 = . "delete" expression ";", FOLLOW [94] -> SHIFT "delete" GOTO 81
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}", FOLLOW [94] -> SHIFT "if" GOTO 82
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}", FOLLOW [94] -> SHIFT "if" GOTO 82
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}", FOLLOW [94] -> SHIFT "while" GOTO 83
	expression/L1 = . "new" typespec ":" expression, FOLLOW [93] -> SHIFT "new" GOTO 84
	expression/L2 = . "null", FOLLOW [93] -> SHIFT "null" GOTO 85
	expression/L9 = . "+" expression, FOLLOW [93] -> SHIFT '+' GOTO 86
	expression/L9 = . "-" expression, FOLLOW [93] -> SHIFT '-' GOTO 87
	expression/L9 = . "~" expression, FOLLOW [93] -> SHIFT '~' GOTO 88
	expression/L9 = . "!" expression, FOLLOW [93] -> SHIFT '!' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [93] -> SHIFT '*' GOTO 90
	statementlist = ., FOLLOW [16] -> REDUCE statementlist #0
	linkage = . (30), FOLLOW [58] -> REDUCE linkage #0 CALL linkage {linkage="internal",attributes="#0 nounwind"}
[268]
	parameters = paramdecl "," parameters ., FOLLOW [10] -> REDUCE parameters #3
[269]
	typespec/L1 = . typename, FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "&", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^", FOLLOW [9] -> GOTO 8
	typespec/L1 = . typename "^" "^" "&", FOLLOW [9] -> GOTO 8
	paramdecl = . typespec IDENT, FOLLOW [176] -> GOTO 178
	interface_definition = "function" typespec IDENT "(" . parameterlist ")" ";", FOLLOW [164] -> GOTO 282
	interface_definition = "function" typespec IDENT "(" . parameterlist ")" "const" ";", FOLLOW [164] -> GOTO 282
	parameterlist = . parameters, FOLLOW [10] -> GOTO 180
	parameters = . paramdecl "," parameters, FOLLOW [10] -> GOTO 181
	parameters = . paramdecl, FOLLOW [10] -> GOTO 181
	typename/L1 = . IDENT, FOLLOW [59] -> SHIFT IDENT GOTO 17
	typename/L1 = . IDENT "::" typename, FOLLOW [59] -> SHIFT IDENT GOTO 17
	typespec/L1 = . "const" typename, FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^", FOLLOW [9] -> SHIFT "const" GOTO 18
	typespec/L1 = . "const" typename "^" "^" "&", FOLLOW [9] -> SHIFT "const" GOTO 18
	parameterlist = ., FOLLOW [10] -> REDUCE parameterlist #0
[270]
	interface_definition = "procedure" IDENT "(" parameterlist . ")" ";", FOLLOW [164] -> SHIFT ')' GOTO 283
	interface_definition = "procedure" IDENT "(" parameterlist . ")" "const" ";", FOLLOW [164] -> SHIFT ')' GOTO 283
[271]
	constructordefinition = "destructor" "{" codeblock "}" . (35), FOLLOW [166] -> REDUCE constructordefinition #4 CALL destructordef
[272]
	classdefinition = "class" IDENT ":" inheritlist "{" class_definitionlist "}" . (step:29), FOLLOW [167] -> REDUCE classdefinition #7 CALL classdef_inherit
[273]
	extern_definition = "extern" DQSTRING "function" typespec IDENT "(" extern_paramlist ")" . ";", FOLLOW [56] -> SHIFT ';' GOTO 284
[274]
	extern_definition = "extern" DQSTRING "function" typespec IDENT "(" extern_paramlist "..." . ")" ";", FOLLOW [56] -> SHIFT ')' GOTO 285
[275]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist ")" ";" . (3), FOLLOW [56] -> REDUCE extern_definition #8 CALL extern_procdef
[276]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist "..." ")" . ";", FOLLOW [56] -> SHIFT ';' GOTO 286
[277]
	extern_parameters = typespec "," extern_parameters ., FOLLOW [177] -> REDUCE extern_parameters #3
[278]
	statement/L1 = . typedefinition ";", FOLLOW [94] -> GOTO 62
	functiondefinition = . linkage "function" typespec IDENT callablebody, FOLLOW [94] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [94] -> GOTO 14
	statement/L1 = . functiondefinition, FOLLOW [94] -> GOTO 63
	statement/L1 = "if" "(" expression ")" "{" . codeblock "}", FOLLOW [94] -> GOTO 287
	statement/L1 = "if" "(" expression ")" "{" . codeblock "}" "else" "{" codeblock "}", FOLLOW [94] -> GOTO 287
	codeblock = . statementlist, FOLLOW [16] -> GOTO 65
	statementlist = . statement statementlist, FOLLOW [16] -> GOTO 66
	statement/L1 = . expression ";", FOLLOW [94] -> GOTO 67
	expression/L3 = . expression "=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression "+=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression "-=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression "*=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression "/=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression "%=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression "&&=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression "||=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression "&=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression "|=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression "<<=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression ">>=" expression, FOLLOW [93] -> GOTO 67
	expression/L4 = . expression "||" expression, FOLLOW [93] -> GOTO 67
	expression/L5 = . expression "&&" expression, FOLLOW [93] -> GOTO 67
	expression/L6 = . expression "|" expression, FOLLOW [93] -> GOTO 67
	expression/L7 = . expression "^" expression, FOLLOW [93] -> GOTO 67
	expression/L7 = . expression "&" expression, FOLLOW [93] -> GOTO 67
	expression/L8 = . expression "==" expression, FOLLOW [93] -> GOTO 67
	expression/L8 = . expression "!=" expression, FOLLOW [93] -> GOTO 67
	expression/L8 = . expression "<=" expression, FOLLOW [93] -> GOTO 67
	expression/L8 = . expression "<" expression, FOLLOW [93] -> GOTO 67
	expression/L8 = . expression ">=" expression, FOLLOW [93] -> GOTO 67
	expression/L8 = . expression ">" expression, FOLLOW [93] -> GOTO 67
	expression/L9 = . expression "+" expression, FOLLOW [93] -> GOTO 67
	expression/L9 = . expression "-" expression, FOLLOW [93] -> GOTO 67
	expression/L10 = . expression "*" expression, FOLLOW [93] -> GOTO 67
	expression/L10 = . expression "/" expression, FOLLOW [93] -> GOTO 67
	expression/L10 = . expression "%" expression, FOLLOW [93] -> GOTO 67
	expression/L11 = . expression "<<" expression, FOLLOW [93] -> GOTO 67
	expression/L11 = . expression ">>" expression, FOLLOW [93] -> GOTO 67
	expression/L12 = . expression "." IDENT, FOLLOW [93] -> GOTO 67
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [93] -> GOTO 67
	expression/L13 = . expression "(" ")", FOLLOW [93] -> GOTO 67
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [93] -> GOTO 67
	iexpression = . expression indirection IDENT, FOLLOW [93] -> GOTO 67
	expression/L12 = . iexpression, FOLLOW [93] -> GOTO 68
	expression/L2 = . BOOLEAN, FOLLOW [93] -> SHIFT BOOLEAN GOTO 69
	expression/L2 = . IDENT, FOLLOW [93] -> SHIFT IDENT GOTO 70
	expression/L2 = . DQSTRING, FOLLOW [93] -> SHIFT DQSTRING GOTO 71
	expression/L2 = . SQSTRING, FOLLOW [93] -> SHIFT SQSTRING GOTO 72
	expression/L2 = . CARDINAL, FOLLOW [93] -> SHIFT CARDINAL GOTO 73
	expression/L2 = . INTEGER, FOLLOW [93] -> SHIFT INTEGER GOTO 74
	expression/L2 = . FLOAT, FOLLOW [93] -> SHIFT FLOAT GOTO 75
	expression/L2 = . "(" expression ")", FOLLOW [93] -> SHIFT '(' GOTO 76
	expression/L9 = . "&" expression, FOLLOW [93] -> SHIFT '&' GOTO 77
	typedefinition = . "typedef" typename IDENT, FOLLOW [13] -> SHIFT "typedef" GOTO 19
	statement/L1 = . "{" codeblock "}", FOLLOW [94] -> SHIFT '{' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [93] -> SHIFT '{' GOTO 78
	expression/L1 = . "{" "}", FOLLOW [93] -> SHIFT '{' GOTO 78
	linkage = . "private", FOLLOW [58] -> SHIFT "private" GOTO 23
	linkage = . "public", FOLLOW [58] -> SHIFT "public" GOTO 24
	statement/L1 = . "var" variabledefinition ";", FOLLOW [94] -> SHIFT "var" GOTO 79
	statement/L1 = . "return" expression ";", FOLLOW [94] -> SHIFT "return" GOTO 80
	statement/L1 = . "delete" expression ";", FOLLOW [94] -> SHIFT "delete" GOTO 81
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}", FOLLOW [94] -> SHIFT "if" GOTO 82
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}", FOLLOW [94] -> SHIFT "if" GOTO 82
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}", FOLLOW [94] -> SHIFT "while" GOTO 83
	expression/L1 = . "new" typespec ":" expression, FOLLOW [93] -> SHIFT "new" GOTO 84
	expression/L2 = . "null", FOLLOW [93] -> SHIFT "null" GOTO 85
	expression/L9 = . "+" expression, FOLLOW [93] -> SHIFT '+' GOTO 86
	expression/L9 = . "-" expression, FOLLOW [93] -> SHIFT '-' GOTO 87
	expression/L9 = . "~" expression, FOLLOW [93] -> SHIFT '~' GOTO 88
	expression/L9 = . "!" expression, FOLLOW [93] -> SHIFT '!' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [93] -> SHIFT '*' GOTO 90
	statementlist = ., FOLLOW [16] -> REDUCE statementlist #0
	linkage = . (30), FOLLOW [58] -> REDUCE linkage #0 CALL linkage {linkage="internal",attributes="#0 nounwind"}
[279]
	statement/L1 = . typedefinition ";", FOLLOW [94] -> GOTO 62
	functiondefinition = . linkage "function" typespec IDENT callablebody, FOLLOW [94] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [94] -> GOTO 14
	statement/L1 = . functiondefinition, FOLLOW [94] -> GOTO 63
	statement/L1 = "while" "(" expression ")" "{" . codeblock "}", FOLLOW [94] -> GOTO 288
	codeblock = . statementlist, FOLLOW [16] -> GOTO 65
	statementlist = . statement statementlist, FOLLOW [16] -> GOTO 66
	statement/L1 = . expression ";", FOLLOW [94] -> GOTO 67
	expression/L3 = . expression "=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression "+=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression "-=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression "*=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression "/=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression "%=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression "&&=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression "||=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression "&=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression "|=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression "<<=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression ">>=" expression, FOLLOW [93] -> GOTO 67
	expression/L4 = . expression "||" expression, FOLLOW [93] -> GOTO 67
	expression/L5 = . expression "&&" expression, FOLLOW [93] -> GOTO 67
	expression/L6 = . expression "|" expression, FOLLOW [93] -> GOTO 67
	expression/L7 = . expression "^" expression, FOLLOW [93] -> GOTO 67
	expression/L7 = . expression "&" expression, FOLLOW [93] -> GOTO 67
	expression/L8 = . expression "==" expression, FOLLOW [93] -> GOTO 67
	expression/L8 = . expression "!=" expression, FOLLOW [93] -> GOTO 67
	expression/L8 = . expression "<=" expression, FOLLOW [93] -> GOTO 67
	expression/L8 = . expression "<" expression, FOLLOW [93] -> GOTO 67
	expression/L8 = . expression ">=" expression, FOLLOW [93] -> GOTO 67
	expression/L8 = . expression ">" expression, FOLLOW [93] -> GOTO 67
	expression/L9 = . expression "+" expression, FOLLOW [93] -> GOTO 67
	expression/L9 = . expression "-" expression, FOLLOW [93] -> GOTO 67
	expression/L10 = . expression "*" expression, FOLLOW [93] -> GOTO 67
	expression/L10 = . expression "/" expression, FOLLOW [93] -> GOTO 67
	expression/L10 = . expression "%" expression, FOLLOW [93] -> GOTO 67
	expression/L11 = . expression "<<" expression, FOLLOW [93] -> GOTO 67
	expression/L11 = . expression ">>" expression, FOLLOW [93] -> GOTO 67
	expression/L12 = . expression "." IDENT, FOLLOW [93] -> GOTO 67
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [93] -> GOTO 67
	expression/L13 = . expression "(" ")", FOLLOW [93] -> GOTO 67
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [93] -> GOTO 67
	iexpression = . expression indirection IDENT, FOLLOW [93] -> GOTO 67
	expression/L12 = . iexpression, FOLLOW [93] -> GOTO 68
	expression/L2 = . BOOLEAN, FOLLOW [93] -> SHIFT BOOLEAN GOTO 69
	expression/L2 = . IDENT, FOLLOW [93] -> SHIFT IDENT GOTO 70
	expression/L2 = . DQSTRING, FOLLOW [93] -> SHIFT DQSTRING GOTO 71
	expression/L2 = . SQSTRING, FOLLOW [93] -> SHIFT SQSTRING GOTO 72
	expression/L2 = . CARDINAL, FOLLOW [93] -> SHIFT CARDINAL GOTO 73
	expression/L2 = . INTEGER, FOLLOW [93] -> SHIFT INTEGER GOTO 74
	expression/L2 = . FLOAT, FOLLOW [93] -> SHIFT FLOAT GOTO 75
	expression/L2 = . "(" expression ")", FOLLOW [93] -> SHIFT '(' GOTO 76
	expression/L9 = . "&" expression, FOLLOW [93] -> SHIFT '&' GOTO 77
	typedefinition = . "typedef" typename IDENT, FOLLOW [13] -> SHIFT "typedef" GOTO 19
	statement/L1 = . "{" codeblock "}", FOLLOW [94] -> SHIFT '{' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [93] -> SHIFT '{' GOTO 78
	expression/L1 = . "{" "}", FOLLOW [93] -> SHIFT '{' GOTO 78
	linkage = . "private", FOLLOW [58] -> SHIFT "private" GOTO 23
	linkage = . "public", FOLLOW [58] -> SHIFT "public" GOTO 24
	statement/L1 = . "var" variabledefinition ";", FOLLOW [94] -> SHIFT "var" GOTO 79
	statement/L1 = . "return" expression ";", FOLLOW [94] -> SHIFT "return" GOTO 80
	statement/L1 = . "delete" expression ";", FOLLOW [94] -> SHIFT "delete" GOTO 81
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}", FOLLOW [94] -> SHIFT "if" GOTO 82
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}", FOLLOW [94] -> SHIFT "if" GOTO 82
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}", FOLLOW [94] -> SHIFT "while" GOTO 83
	expression/L1 = . "new" typespec ":" expression, FOLLOW [93] -> SHIFT "new" GOTO 84
	expression/L2 = . "null", FOLLOW [93] -> SHIFT "null" GOTO 85
	expression/L9 = . "+" expression, FOLLOW [93] -> SHIFT '+' GOTO 86
	expression/L9 = . "-" expression, FOLLOW [93] -> SHIFT '-' GOTO 87
	expression/L9 = . "~" expression, FOLLOW [93] -> SHIFT '~' GOTO 88
	expression/L9 = . "!" expression, FOLLOW [93] -> SHIFT '!' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [93] -> SHIFT '*' GOTO 90
	statementlist = ., FOLLOW [16] -> REDUCE statementlist #0
	linkage = . (30), FOLLOW [58] -> REDUCE linkage #0 CALL linkage {linkage="internal",attributes="#0 nounwind"}
[280]
	statement/L1 = . typedefinition ";", FOLLOW [94] -> GOTO 62
	functiondefinition = . linkage "function" typespec IDENT callablebody, FOLLOW [94] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [94] -> GOTO 14
	statement/L1 = . functiondefinition, FOLLOW [94] -> GOTO 63
	callablebody = "(" parameterlist ")" "const" "{" . codeblock "}", FOLLOW [228] -> GOTO 289
	codeblock = . statementlist, FOLLOW [16] -> GOTO 65
	statementlist = . statement statementlist, FOLLOW [16] -> GOTO 66
	statement/L1 = . expression ";", FOLLOW [94] -> GOTO 67
	expression/L3 = . expression "=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression "+=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression "-=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression "*=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression "/=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression "%=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression "&&=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression "||=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression "&=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression "|=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression "<<=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression ">>=" expression, FOLLOW [93] -> GOTO 67
	expression/L4 = . expression "||" expression, FOLLOW [93] -> GOTO 67
	expression/L5 = . expression "&&" expression, FOLLOW [93] -> GOTO 67
	expression/L6 = . expression "|" expression, FOLLOW [93] -> GOTO 67
	expression/L7 = . expression "^" expression, FOLLOW [93] -> GOTO 67
	expression/L7 = . expression "&" expression, FOLLOW [93] -> GOTO 67
	expression/L8 = . expression "==" expression, FOLLOW [93] -> GOTO 67
	expression/L8 = . expression "!=" expression, FOLLOW [93] -> GOTO 67
	expression/L8 = . expression "<=" expression, FOLLOW [93] -> GOTO 67
	expression/L8 = . expression "<" expression, FOLLOW [93] -> GOTO 67
	expression/L8 = . expression ">=" expression, FOLLOW [93] -> GOTO 67
	expression/L8 = . expression ">" expression, FOLLOW [93] -> GOTO 67
	expression/L9 = . expression "+" expression, FOLLOW [93] -> GOTO 67
	expression/L9 = . expression "-" expression, FOLLOW [93] -> GOTO 67
	expression/L10 = . expression "*" expression, FOLLOW [93] -> GOTO 67
	expression/L10 = . expression "/" expression, FOLLOW [93] -> GOTO 67
	expression/L10 = . expression "%" expression, FOLLOW [93] -> GOTO 67
	expression/L11 = . expression "<<" expression, FOLLOW [93] -> GOTO 67
	expression/L11 = . expression ">>" expression, FOLLOW [93] -> GOTO 67
	expression/L12 = . expression "." IDENT, FOLLOW [93] -> GOTO 67
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [93] -> GOTO 67
	expression/L13 = . expression "(" ")", FOLLOW [93] -> GOTO 67
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [93] -> GOTO 67
	iexpression = . expression indirection IDENT, FOLLOW [93] -> GOTO 67
	expression/L12 = . iexpression, FOLLOW [93] -> GOTO 68
	expression/L2 = . BOOLEAN, FOLLOW [93] -> SHIFT BOOLEAN GOTO 69
	expression/L2 = . IDENT, FOLLOW [93] -> SHIFT IDENT GOTO 70
	expression/L2 = . DQSTRING, FOLLOW [93] -> SHIFT DQSTRING GOTO 71
	expression/L2 = . SQSTRING, FOLLOW [93] -> SHIFT SQSTRING GOTO 72
	expression/L2 = . CARDINAL, FOLLOW [93] -> SHIFT CARDINAL GOTO 73
	expression/L2 = . INTEGER, FOLLOW [93] -> SHIFT INTEGER GOTO 74
	expression/L2 = . FLOAT, FOLLOW [93] -> SHIFT FLOAT GOTO 75
	expression/L2 = . "(" expression ")", FOLLOW [93] -> SHIFT '(' GOTO 76
	expression/L9 = . "&" expression, FOLLOW [93] -> SHIFT '&' GOTO 77
	typedefinition = . "typedef" typename IDENT, FOLLOW [13] -> SHIFT "typedef" GOTO 19
	statement/L1 = . "{" codeblock "}", FOLLOW [94] -> SHIFT '{' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [93] -> SHIFT '{' GOTO 78
	expression/L1 = . "{" "}", FOLLOW [93] -> SHIFT '{' GOTO 78
	linkage = . "private", FOLLOW [58] -> SHIFT "private" GOTO 23
	linkage = . "public", FOLLOW [58] -> SHIFT "public" GOTO 24
	statement/L1 = . "var" variabledefinition ";", FOLLOW [94] -> SHIFT "var" GOTO 79
	statement/L1 = . "return" expression ";", FOLLOW [94] -> SHIFT "return" GOTO 80
	statement/L1 = . "delete" expression ";", FOLLOW [94] -> SHIFT "delete" GOTO 81
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}", FOLLOW [94] -> SHIFT "if" GOTO 82
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}", FOLLOW [94] -> SHIFT "if" GOTO 82
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}", FOLLOW [94] -> SHIFT "while" GOTO 83
	expression/L1 = . "new" typespec ":" expression, FOLLOW [93] -> SHIFT "new" GOTO 84
	expression/L2 = . "null", FOLLOW [93] -> SHIFT "null" GOTO 85
	expression/L9 = . "+" expression, FOLLOW [93] -> SHIFT '+' GOTO 86
	expression/L9 = . "-" expression, FOLLOW [93] -> SHIFT '-' GOTO 87
	expression/L9 = . "~" expression, FOLLOW [93] -> SHIFT '~' GOTO 88
	expression/L9 = . "!" expression, FOLLOW [93] -> SHIFT '!' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [93] -> SHIFT '*' GOTO 90
	statementlist = ., FOLLOW [16] -> REDUCE statementlist #0
	linkage = . (30), FOLLOW [58] -> REDUCE linkage #0 CALL linkage {linkage="internal",attributes="#0 nounwind"}
[281]
	callablebody = "(" parameterlist ")" "{" codeblock . "}", FOLLOW [228] -> SHIFT '}' GOTO 290
[282]
	interface_definition = "function" typespec IDENT "(" parameterlist . ")" ";", FOLLOW [164] -> SHIFT ')' GOTO 291
	interface_definition = "function" typespec IDENT "(" parameterlist . ")" "const" ";", FOLLOW [164] -> SHIFT ')' GOTO 291
[283]
	interface_definition = "procedure" IDENT "(" parameterlist ")" . ";", FOLLOW [164] -> SHIFT ';' GOTO 292
	interface_definition = "procedure" IDENT "(" parameterlist ")" . "const" ";", FOLLOW [164] -> SHIFT "const" GOTO 293
[284]
	extern_definition = "extern" DQSTRING "function" typespec IDENT "(" extern_paramlist ")" ";" . (2), FOLLOW [56] -> REDUCE extern_definition #9 CALL extern_funcdef
[285]
	extern_definition = "extern" DQSTRING "function" typespec IDENT "(" extern_paramlist "..." ")" . ";", FOLLOW [56] -> SHIFT ';' GOTO 294
[286]
	extern_definition = "extern" DQSTRING "procedure" IDENT "(" extern_paramlist "..." ")" ";" . (5), FOLLOW [56] -> REDUCE extern_definition #9 CALL extern_procdef_vararg
[287]
	statement/L1 = "if" "(" expression ")" "{" codeblock . "}", FOLLOW [94] -> SHIFT '}' GOTO 295
	statement/L1 = "if" "(" expression ")" "{" codeblock . "}" "else" "{" codeblock "}", FOLLOW [94] -> SHIFT '}' GOTO 295
[288]
	statement/L1 = "while" "(" expression ")" "{" codeblock . "}", FOLLOW [94] -> SHIFT '}' GOTO 296
[289]
	callablebody = "(" parameterlist ")" "const" "{" codeblock . "}", FOLLOW [228] -> SHIFT '}' GOTO 297
[290]
	callablebody = "(" parameterlist ")" "{" codeblock "}" . (scope:36), FOLLOW [228] -> REDUCE callablebody #6 CALL callablebody "&"
[291]
	interface_definition = "function" typespec IDENT "(" parameterlist ")" . ";", FOLLOW [164] -> SHIFT ';' GOTO 298
	interface_definition = "function" typespec IDENT "(" parameterlist ")" . "const" ";", FOLLOW [164] -> SHIFT "const" GOTO 299
[292]
	interface_definition = "procedure" IDENT "(" parameterlist ")" ";" . (9), FOLLOW [164] -> REDUCE interface_definition #6 CALL interface_procdef "&"
[293]
	interface_definition = "procedure" IDENT "(" parameterlist ")" "const" . ";", FOLLOW [164] -> SHIFT ';' GOTO 300
[294]
	extern_definition = "extern" DQSTRING "function" typespec IDENT "(" extern_paramlist "..." ")" ";" . (4), FOLLOW [56] -> REDUCE extern_definition #10 CALL extern_funcdef_vararg
[295]
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" . "else" "{" codeblock "}", FOLLOW [94] -> SHIFT "else" GOTO 301
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" . (scope:45), FOLLOW [94] -> REDUCE statement #7 CALL conditional_if
[296]
	statement/L1 = "while" "(" expression ")" "{" codeblock "}" . (scope:47), FOLLOW [94] -> REDUCE statement #7 CALL conditional_while
[297]
	callablebody = "(" parameterlist ")" "const" "{" codeblock "}" . (scope:37), FOLLOW [228] -> REDUCE callablebody #7 CALL callablebody "const&"
[298]
	interface_definition = "function" typespec IDENT "(" parameterlist ")" ";" . (7), FOLLOW [164] -> REDUCE interface_definition #7 CALL interface_funcdef "&"
[299]
	interface_definition = "function" typespec IDENT "(" parameterlist ")" "const" . ";", FOLLOW [164] -> SHIFT ';' GOTO 302
[300]
	interface_definition = "procedure" IDENT "(" parameterlist ")" "const" ";" . (10), FOLLOW [164] -> REDUCE interface_definition #7 CALL interface_procdef "const&"
[301]
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" "else" . "{" codeblock "}", FOLLOW [94] -> SHIFT '{' GOTO 303
[302]
	interface_definition = "function" typespec IDENT "(" parameterlist ")" "const" ";" . (8), FOLLOW [164] -> REDUCE interface_definition #8 CALL interface_funcdef "const&"
[303]
	statement/L1 = . typedefinition ";", FOLLOW [94] -> GOTO 62
	functiondefinition = . linkage "function" typespec IDENT callablebody, FOLLOW [94] -> GOTO 14
	functiondefinition = . linkage "procedure" IDENT callablebody, FOLLOW [94] -> GOTO 14
	statement/L1 = . functiondefinition, FOLLOW [94] -> GOTO 63
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" "else" "{" . codeblock "}", FOLLOW [94] -> GOTO 304
	codeblock = . statementlist, FOLLOW [16] -> GOTO 65
	statementlist = . statement statementlist, FOLLOW [16] -> GOTO 66
	statement/L1 = . expression ";", FOLLOW [94] -> GOTO 67
	expression/L3 = . expression "=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression "+=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression "-=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression "*=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression "/=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression "%=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression "&&=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression "||=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression "&=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression "|=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression "<<=" expression, FOLLOW [93] -> GOTO 67
	expression/L3 = . expression ">>=" expression, FOLLOW [93] -> GOTO 67
	expression/L4 = . expression "||" expression, FOLLOW [93] -> GOTO 67
	expression/L5 = . expression "&&" expression, FOLLOW [93] -> GOTO 67
	expression/L6 = . expression "|" expression, FOLLOW [93] -> GOTO 67
	expression/L7 = . expression "^" expression, FOLLOW [93] -> GOTO 67
	expression/L7 = . expression "&" expression, FOLLOW [93] -> GOTO 67
	expression/L8 = . expression "==" expression, FOLLOW [93] -> GOTO 67
	expression/L8 = . expression "!=" expression, FOLLOW [93] -> GOTO 67
	expression/L8 = . expression "<=" expression, FOLLOW [93] -> GOTO 67
	expression/L8 = . expression "<" expression, FOLLOW [93] -> GOTO 67
	expression/L8 = . expression ">=" expression, FOLLOW [93] -> GOTO 67
	expression/L8 = . expression ">" expression, FOLLOW [93] -> GOTO 67
	expression/L9 = . expression "+" expression, FOLLOW [93] -> GOTO 67
	expression/L9 = . expression "-" expression, FOLLOW [93] -> GOTO 67
	expression/L10 = . expression "*" expression, FOLLOW [93] -> GOTO 67
	expression/L10 = . expression "/" expression, FOLLOW [93] -> GOTO 67
	expression/L10 = . expression "%" expression, FOLLOW [93] -> GOTO 67
	expression/L11 = . expression "<<" expression, FOLLOW [93] -> GOTO 67
	expression/L11 = . expression ">>" expression, FOLLOW [93] -> GOTO 67
	expression/L12 = . expression "." IDENT, FOLLOW [93] -> GOTO 67
	expression/L13 = . expression "(" expressionlist ")", FOLLOW [93] -> GOTO 67
	expression/L13 = . expression "(" ")", FOLLOW [93] -> GOTO 67
	expression/L13 = . expression "[" expressionlist "]", FOLLOW [93] -> GOTO 67
	iexpression = . expression indirection IDENT, FOLLOW [93] -> GOTO 67
	expression/L12 = . iexpression, FOLLOW [93] -> GOTO 68
	expression/L2 = . BOOLEAN, FOLLOW [93] -> SHIFT BOOLEAN GOTO 69
	expression/L2 = . IDENT, FOLLOW [93] -> SHIFT IDENT GOTO 70
	expression/L2 = . DQSTRING, FOLLOW [93] -> SHIFT DQSTRING GOTO 71
	expression/L2 = . SQSTRING, FOLLOW [93] -> SHIFT SQSTRING GOTO 72
	expression/L2 = . CARDINAL, FOLLOW [93] -> SHIFT CARDINAL GOTO 73
	expression/L2 = . INTEGER, FOLLOW [93] -> SHIFT INTEGER GOTO 74
	expression/L2 = . FLOAT, FOLLOW [93] -> SHIFT FLOAT GOTO 75
	expression/L2 = . "(" expression ")", FOLLOW [93] -> SHIFT '(' GOTO 76
	expression/L9 = . "&" expression, FOLLOW [93] -> SHIFT '&' GOTO 77
	typedefinition = . "typedef" typename IDENT, FOLLOW [13] -> SHIFT "typedef" GOTO 19
	statement/L1 = . "{" codeblock "}", FOLLOW [94] -> SHIFT '{' GOTO 78
	expression/L1 = . "{" expressionlist "}", FOLLOW [93] -> SHIFT '{' GOTO 78
	expression/L1 = . "{" "}", FOLLOW [93] -> SHIFT '{' GOTO 78
	linkage = . "private", FOLLOW [58] -> SHIFT "private" GOTO 23
	linkage = . "public", FOLLOW [58] -> SHIFT "public" GOTO 24
	statement/L1 = . "var" variabledefinition ";", FOLLOW [94] -> SHIFT "var" GOTO 79
	statement/L1 = . "return" expression ";", FOLLOW [94] -> SHIFT "return" GOTO 80
	statement/L1 = . "delete" expression ";", FOLLOW [94] -> SHIFT "delete" GOTO 81
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}", FOLLOW [94] -> SHIFT "if" GOTO 82
	statement/L1 = . "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}", FOLLOW [94] -> SHIFT "if" GOTO 82
	statement/L1 = . "while" "(" expression ")" "{" codeblock "}", FOLLOW [94] -> SHIFT "while" GOTO 83
	expression/L1 = . "new" typespec ":" expression, FOLLOW [93] -> SHIFT "new" GOTO 84
	expression/L2 = . "null", FOLLOW [93] -> SHIFT "null" GOTO 85
	expression/L9 = . "+" expression, FOLLOW [93] -> SHIFT '+' GOTO 86
	expression/L9 = . "-" expression, FOLLOW [93] -> SHIFT '-' GOTO 87
	expression/L9 = . "~" expression, FOLLOW [93] -> SHIFT '~' GOTO 88
	expression/L9 = . "!" expression, FOLLOW [93] -> SHIFT '!' GOTO 89
	expression/L12 = . "*" expression, FOLLOW [93] -> SHIFT '*' GOTO 90
	statementlist = ., FOLLOW [16] -> REDUCE statementlist #0
	linkage = . (30), FOLLOW [58] -> REDUCE linkage #0 CALL linkage {linkage="internal",attributes="#0 nounwind"}
[304]
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock . "}", FOLLOW [94] -> SHIFT '}' GOTO 305
[305]
	statement/L1 = "if" "(" expression ")" "{" codeblock "}" "else" "{" codeblock "}" . (scope:46), FOLLOW [94] -> REDUCE statement #11 CALL conditional_if_else

-- Function calls:
(1) program
(2) extern_funcdef
(3) extern_procdef
(4) extern_funcdef_vararg
(5) extern_procdef_vararg
(6) extern_paramdeflist
(7) interface_funcdef, "&"
(8) interface_funcdef, "const&"
(9) interface_procdef, "&"
(10) interface_procdef, "const&"
(11) definition
(12) typespec, ""
(13) typespec, "const "
(14) typespec, "&"
(15) typespec, "const&"
(16) typespec, "^"
(17) typespec, "const^"
(18) typespec, "^&"
(19) typespec, "const^&"
(20) typespec, "^^"
(21) typespec, "const^^"
(22) typespec, "^^&"
(23) typespec, "const^^&"
(24) typedef
(25) structdef
(26) interfacedef
(27) inheritdef
(28) classdef
(29) classdef_inherit
(30) linkage, {linkage="internal",attributes="#0 nounwind"}
(31) linkage, {linkage="external",attributes="#0 noinline nounwind"}
(32) funcdef
(33) procdef
(34) constructordef
(35) destructordef
(36) callablebody, "&"
(37) callablebody, "const&"
(38) main_procdef
(39) paramdeflist
(40) paramdef
(41) codeblock
(42) free_expression
(43) return_value
(44) delete
(45) conditional_if
(46) conditional_if_else
(47) conditional_while
(48) vardef
(49) vardef_assign
(50) vardef_array_assign
(51) vardef_array
(52) structure
(53) allocate
(54) variable
(55) constant, "constexpr bool"
(56) constant, "constexpr uint"
(57) constant, "constexpr int"
(58) constant, "constexpr float"
(59) null, "constexpr float"
(60) string_constant, "constexpr float"
(61) char_constant, "constexpr float"
(62) operator, "="
(63) assign_operator, "+"
(64) assign_operator, "-"
(65) assign_operator, "*"
(66) assign_operator, "/"
(67) assign_operator, "%"
(68) assign_operator, "&&"
(69) assign_operator, "||"
(70) assign_operator, "&"
(71) assign_operator, "|"
(72) assign_operator, "<<"
(73) assign_operator, ">>"
(74) operator, "||"
(75) operator, "&&"
(76) operator, "|"
(77) operator, "^"
(78) operator, "&"
(79) operator, "=="
(80) operator, "!="
(81) operator, "<="
(82) operator, "<"
(83) operator, ">="
(84) operator, ">"
(85) operator, "+"
(86) operator, "-"
(87) operator, "~"
(88) operator, "!"
(89) operator, "*"
(90) operator, "/"
(91) operator, "%"
(92) operator, "<<"
(93) operator, ">>"
(94) member
(95) operator, "->"
(96) operator, "()"
(97) operator, "[]"
(98) rep_operator, "->"
(99) count

-- Action table:
[1]
	$ => Reduce #0 extern_definitionlist
	IDENT => Reduce #0 extern_definitionlist
	"extern" => Shift goto 4
	"function" => Reduce #0 extern_definitionlist
	"procedure" => Reduce #0 extern_definitionlist
	"const" => Reduce #0 extern_definitionlist
	"typedef" => Reduce #0 extern_definitionlist
	"struct" => Reduce #0 extern_definitionlist
	"interface" => Reduce #0 extern_definitionlist
	"class" => Reduce #0 extern_definitionlist
	"private" => Reduce #0 extern_definitionlist
	"public" => Reduce #0 extern_definitionlist
	"main" => Reduce #0 extern_definitionlist
[2]
	$ => Reduce #0 free_definitionlist
	IDENT => Shift goto 17
	"function" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	"procedure" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	"const" => Shift goto 18
	"typedef" => Shift goto 19
	"struct" => Shift goto 20
	"interface" => Shift goto 21
	"class" => Shift goto 22
	"private" => Shift goto 23
	"public" => Shift goto 24
	"main" => Reduce #0 free_definitionlist
[3]
	$ => Reduce #0 extern_definitionlist
	IDENT => Reduce #0 extern_definitionlist
	"extern" => Shift goto 4
	"function" => Reduce #0 extern_definitionlist
	"procedure" => Reduce #0 extern_definitionlist
	"const" => Reduce #0 extern_definitionlist
	"typedef" => Reduce #0 extern_definitionlist
	"struct" => Reduce #0 extern_definitionlist
	"interface" => Reduce #0 extern_definitionlist
	"class" => Reduce #0 extern_definitionlist
	"private" => Reduce #0 extern_definitionlist
	"public" => Reduce #0 extern_definitionlist
	"main" => Reduce #0 extern_definitionlist
[4]
	DQSTRING => Shift goto 26
[5]
	$ => Reduce #0 main_procedure
	"main" => Shift goto 28
[6]
	$ => Reduce #1 free_definition
	IDENT => Reduce #1 free_definition
	"function" => Reduce #1 free_definition
	"procedure" => Reduce #1 free_definition
	"const" => Reduce #1 free_definition
	"typedef" => Reduce #1 free_definition
	"struct" => Reduce #1 free_definition
	"interface" => Reduce #1 free_definition
	"class" => Reduce #1 free_definition
	"private" => Reduce #1 free_definition
	"public" => Reduce #1 free_definition
	"main" => Reduce #1 free_definition
[7]
	$ => Reduce #0 free_definitionlist
	IDENT => Shift goto 17
	"function" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	"procedure" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	"const" => Shift goto 18
	"typedef" => Shift goto 19
	"struct" => Shift goto 20
	"interface" => Shift goto 21
	"class" => Shift goto 22
	"private" => Shift goto 23
	"public" => Shift goto 24
	"main" => Reduce #0 free_definitionlist
[8]
	IDENT => Reduce #1 typespec call typespec ""
	')' => Reduce #1 typespec call typespec ""
	"..." => Reduce #1 typespec call typespec ""
	',' => Reduce #1 typespec call typespec ""
	'&' => Shift goto 30
	'^' => Shift goto 31
	':' => Reduce #1 typespec call typespec ""
[9]
	IDENT => Shift goto 32
[10]
	';' => Shift goto 33
[11]
	$ => Reduce #1 struct_definition call definition
	IDENT => Reduce #1 struct_definition call definition
	"function" => Reduce #1 struct_definition call definition
	"procedure" => Reduce #1 struct_definition call definition
	"const" => Reduce #1 struct_definition call definition
	"typedef" => Reduce #1 struct_definition call definition
	"struct" => Reduce #1 struct_definition call definition
	'}' => Reduce #1 struct_definition call definition
	"interface" => Reduce #1 struct_definition call definition
	"class" => Reduce #1 struct_definition call definition
	"private" => Reduce #1 struct_definition call definition
	"public" => Reduce #1 struct_definition call definition
	"constructor" => Reduce #1 struct_definition call definition
	"destructor" => Reduce #1 struct_definition call definition
	"main" => Reduce #1 struct_definition call definition
[12]
	$ => Reduce #1 free_definition call definition
	IDENT => Reduce #1 free_definition call definition
	"function" => Reduce #1 free_definition call definition
	"procedure" => Reduce #1 free_definition call definition
	"const" => Reduce #1 free_definition call definition
	"typedef" => Reduce #1 free_definition call definition
	"struct" => Reduce #1 free_definition call definition
	"interface" => Reduce #1 free_definition call definition
	"class" => Reduce #1 free_definition call definition
	"private" => Reduce #1 free_definition call definition
	"public" => Reduce #1 free_definition call definition
	"main" => Reduce #1 free_definition call definition
[13]
	$ => Reduce #1 free_definition call definition
	IDENT => Reduce #1 free_definition call definition
	"function" => Reduce #1 free_definition call definition
	"procedure" => Reduce #1 free_definition call definition
	"const" => Reduce #1 free_definition call definition
	"typedef" => Reduce #1 free_definition call definition
	"struct" => Reduce #1 free_definition call definition
	"interface" => Reduce #1 free_definition call definition
	"class" => Reduce #1 free_definition call definition
	"private" => Reduce #1 free_definition call definition
	"public" => Reduce #1 free_definition call definition
	"main" => Reduce #1 free_definition call definition
[14]
	"function" => Shift goto 34
	"procedure" => Shift goto 35
[15]
	$ => Reduce #1 free_definition call definition
	IDENT => Reduce #1 free_definition call definition
	"function" => Reduce #1 free_definition call definition
	"procedure" => Reduce #1 free_definition call definition
	"const" => Reduce #1 free_definition call definition
	"typedef" => Reduce #1 free_definition call definition
	"struct" => Reduce #1 free_definition call definition
	"interface" => Reduce #1 free_definition call definition
	"class" => Reduce #1 free_definition call definition
	"private" => Reduce #1 free_definition call definition
	"public" => Reduce #1 free_definition call definition
	"main" => Reduce #1 free_definition call definition
[16]
	';' => Shift goto 36
[17]
	IDENT => Reduce #1 typename
	')' => Reduce #1 typename
	"..." => Reduce #1 typename
	',' => Reduce #1 typename
	"::" => Shift goto 37
	'&' => Reduce #1 typename
	'^' => Reduce #1 typename
	'{' => Reduce #1 typename
	':' => Reduce #1 typename
[18]
	IDENT => Shift goto 17
[19]
	IDENT => Shift goto 17
[20]
	IDENT => Shift goto 40
[21]
	IDENT => Shift goto 41
[22]
	IDENT => Shift goto 42
[23]
	"function" => Reduce #1 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	"procedure" => Reduce #1 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	"constructor" => Reduce #1 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
[24]
	"function" => Reduce #1 linkage call linkage {linkage="external",attributes="#0 noinline nounwind"}
	"procedure" => Reduce #1 linkage call linkage {linkage="external",attributes="#0 noinline nounwind"}
	"constructor" => Reduce #1 linkage call linkage {linkage="external",attributes="#0 noinline nounwind"}
[25]
	$ => Reduce #2 extern_definitionlist
	IDENT => Reduce #2 extern_definitionlist
	"function" => Reduce #2 extern_definitionlist
	"procedure" => Reduce #2 extern_definitionlist
	"const" => Reduce #2 extern_definitionlist
	"typedef" => Reduce #2 extern_definitionlist
	"struct" => Reduce #2 extern_definitionlist
	"interface" => Reduce #2 extern_definitionlist
	"class" => Reduce #2 extern_definitionlist
	"private" => Reduce #2 extern_definitionlist
	"public" => Reduce #2 extern_definitionlist
	"main" => Reduce #2 extern_definitionlist
[26]
	"function" => Shift goto 43
	"procedure" => Shift goto 44
[27]
	$ => Accept
[28]
	'{' => Shift goto 45
[29]
	$ => Reduce #2 free_definitionlist
	"main" => Reduce #2 free_definitionlist
[30]
	IDENT => Reduce #2 typespec call typespec "&"
	')' => Reduce #2 typespec call typespec "&"
	"..." => Reduce #2 typespec call typespec "&"
	',' => Reduce #2 typespec call typespec "&"
	':' => Reduce #2 typespec call typespec "&"
[31]
	IDENT => Reduce #2 typespec call typespec "^"
	')' => Reduce #2 typespec call typespec "^"
	"..." => Reduce #2 typespec call typespec "^"
	',' => Reduce #2 typespec call typespec "^"
	'&' => Shift goto 46
	'^' => Shift goto 47
	':' => Reduce #2 typespec call typespec "^"
[32]
	';' => Reduce #2 variabledefinition call vardef
	'=' => Shift goto 48
	'[' => Shift goto 49
[33]
	$ => Reduce #2 struct_definition call definition
	IDENT => Reduce #2 struct_definition call definition
	"function" => Reduce #2 struct_definition call definition
	"procedure" => Reduce #2 struct_definition call definition
	"const" => Reduce #2 struct_definition call definition
	"typedef" => Reduce #2 struct_definition call definition
	"struct" => Reduce #2 struct_definition call definition
	'}' => Reduce #2 struct_definition call definition
	"interface" => Reduce #2 struct_definition call definition
	"class" => Reduce #2 struct_definition call definition
	"private" => Reduce #2 struct_definition call definition
	"public" => Reduce #2 struct_definition call definition
	"constructor" => Reduce #2 struct_definition call definition
	"destructor" => Reduce #2 struct_definition call definition
	"main" => Reduce #2 struct_definition call definition
[34]
	IDENT => Shift goto 17
	"const" => Shift goto 18
[35]
	IDENT => Shift goto 51
[36]
	$ => Reduce #2 struct_definition call definition
	IDENT => Reduce #2 struct_definition call definition
	"function" => Reduce #2 struct_definition call definition
	"procedure" => Reduce #2 struct_definition call definition
	"const" => Reduce #2 struct_definition call definition
	"typedef" => Reduce #2 struct_definition call definition
	"struct" => Reduce #2 struct_definition call definition
	'}' => Reduce #2 struct_definition call definition
	"interface" => Reduce #2 struct_definition call definition
	"class" => Reduce #2 struct_definition call definition
	"private" => Reduce #2 struct_definition call definition
	"public" => Reduce #2 struct_definition call definition
	"constructor" => Reduce #2 struct_definition call definition
	"destructor" => Reduce #2 struct_definition call definition
	"main" => Reduce #2 struct_definition call definition
[37]
	IDENT => Shift goto 17
[38]
	IDENT => Reduce #2 typespec call typespec "const "
	')' => Reduce #2 typespec call typespec "const "
	"..." => Reduce #2 typespec call typespec "const "
	',' => Reduce #2 typespec call typespec "const "
	'&' => Shift goto 53
	'^' => Shift goto 54
	':' => Reduce #2 typespec call typespec "const "
[39]
	IDENT => Shift goto 55
[40]
	'{' => Shift goto 56
[41]
	'{' => Shift goto 57
[42]
	'{' => Shift goto 58
	':' => Shift goto 59
[43]
	IDENT => Shift goto 17
	"const" => Shift goto 18
[44]
	IDENT => Shift goto 61
[45]
	BOOLEAN => Shift goto 69
	IDENT => Shift goto 70
	DQSTRING => Shift goto 71
	SQSTRING => Shift goto 72
	CARDINAL => Shift goto 73
	INTEGER => Shift goto 74
	FLOAT => Shift goto 75
	"function" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	'(' => Shift goto 76
	"procedure" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	'&' => Shift goto 77
	"typedef" => Shift goto 19
	'{' => Shift goto 78
	'}' => Reduce #0 statementlist
	"private" => Shift goto 23
	"public" => Shift goto 24
	"var" => Shift goto 79
	"return" => Shift goto 80
	"delete" => Shift goto 81
	"if" => Shift goto 82
	"while" => Shift goto 83
	"new" => Shift goto 84
	"null" => Shift goto 85
	'+' => Shift goto 86
	'-' => Shift goto 87
	'~' => Shift goto 88
	'!' => Shift goto 89
	'*' => Shift goto 90
[46]
	IDENT => Reduce #3 typespec call typespec "^&"
	')' => Reduce #3 typespec call typespec "^&"
	"..." => Reduce #3 typespec call typespec "^&"
	',' => Reduce #3 typespec call typespec "^&"
	':' => Reduce #3 typespec call typespec "^&"
[47]
	IDENT => Reduce #3 typespec call typespec "^^"
	')' => Reduce #3 typespec call typespec "^^"
	"..." => Reduce #3 typespec call typespec "^^"
	',' => Reduce #3 typespec call typespec "^^"
	'&' => Shift goto 91
	':' => Reduce #3 typespec call typespec "^^"
[48]
	BOOLEAN => Shift goto 69
	IDENT => Shift goto 70
	DQSTRING => Shift goto 71
	SQSTRING => Shift goto 72
	CARDINAL => Shift goto 73
	INTEGER => Shift goto 74
	FLOAT => Shift goto 75
	'(' => Shift goto 76
	'&' => Shift goto 77
	'{' => Shift goto 93
	"new" => Shift goto 84
	"null" => Shift goto 85
	'+' => Shift goto 86
	'-' => Shift goto 87
	'~' => Shift goto 88
	'!' => Shift goto 89
	'*' => Shift goto 90
[49]
	BOOLEAN => Shift goto 69
	IDENT => Shift goto 70
	DQSTRING => Shift goto 71
	SQSTRING => Shift goto 72
	CARDINAL => Shift goto 73
	INTEGER => Shift goto 74
	FLOAT => Shift goto 75
	'(' => Shift goto 76
	'&' => Shift goto 77
	'{' => Shift goto 93
	"new" => Shift goto 84
	"null" => Shift goto 85
	'+' => Shift goto 86
	'-' => Shift goto 87
	'~' => Shift goto 88
	'!' => Shift goto 89
	'*' => Shift goto 90
[50]
	IDENT => Shift goto 95
[51]
	'(' => Shift goto 97
[52]
	IDENT => Reduce #3 typename
	')' => Reduce #3 typename
	"..." => Reduce #3 typename
	',' => Reduce #3 typename
	'&' => Reduce #3 typename
	'^' => Reduce #3 typename
	'{' => Reduce #3 typename
	':' => Reduce #3 typename
[53]
	IDENT => Reduce #3 typespec call typespec "const&"
	')' => Reduce #3 typespec call typespec "const&"
	"..." => Reduce #3 typespec call typespec "const&"
	',' => Reduce #3 typespec call typespec "const&"
	':' => Reduce #3 typespec call typespec "const&"
[54]
	IDENT => Reduce #3 typespec call typespec "const^"
	')' => Reduce #3 typespec call typespec "const^"
	"..." => Reduce #3 typespec call typespec "const^"
	',' => Reduce #3 typespec call typespec "const^"
	'&' => Shift goto 98
	'^' => Shift goto 99
	':' => Reduce #3 typespec call typespec "const^"
[55]
	';' => Reduce #3 typedefinition call typedef
[56]
	IDENT => Shift goto 17
	"const" => Shift goto 18
	"typedef" => Shift goto 19
	"struct" => Shift goto 20
	'}' => Reduce #0 struct_definitionlist
[57]
	"function" => Shift goto 104
	"procedure" => Shift goto 105
	'}' => Reduce #0 interface_definitionlist
[58]
	IDENT => Shift goto 17
	"function" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	"procedure" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	"const" => Shift goto 18
	"typedef" => Shift goto 19
	"struct" => Shift goto 20
	'}' => Reduce #0 class_definitionlist
	"interface" => Shift goto 21
	"class" => Shift goto 22
	"private" => Shift goto 23
	"public" => Shift goto 24
	"constructor" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	"destructor" => Shift goto 114
[59]
	IDENT => Shift goto 17
[60]
	IDENT => Shift goto 117
[61]
	'(' => Shift goto 118
[62]
	';' => Shift goto 119
[63]
	$ => Reduce #1 statement call definition
	BOOLEAN => Reduce #1 statement call definition
	IDENT => Reduce #1 statement call definition
	DQSTRING => Reduce #1 statement call definition
	SQSTRING => Reduce #1 statement call definition
	CARDINAL => Reduce #1 statement call definition
	INTEGER => Reduce #1 statement call definition
	FLOAT => Reduce #1 statement call definition
	"function" => Reduce #1 statement call definition
	'(' => Reduce #1 statement call definition
	"procedure" => Reduce #1 statement call definition
	'&' => Reduce #1 statement call definition
	"typedef" => Reduce #1 statement call definition
	'{' => Reduce #1 statement call definition
	'}' => Reduce #1 statement call definition
	"private" => Reduce #1 statement call definition
	"public" => Reduce #1 statement call definition
	"var" => Reduce #1 statement call definition
	"return" => Reduce #1 statement call definition
	"delete" => Reduce #1 statement call definition
	"if" => Reduce #1 statement call definition
	"while" => Reduce #1 statement call definition
	"new" => Reduce #1 statement call definition
	"null" => Reduce #1 statement call definition
	'+' => Reduce #1 statement call definition
	'-' => Reduce #1 statement call definition
	'~' => Reduce #1 statement call definition
	'!' => Reduce #1 statement call definition
	'*' => Reduce #1 statement call definition
[64]
	'}' => Shift goto 120
[65]
	'}' => Reduce #1 codeblock call codeblock
[66]
	BOOLEAN => Shift goto 69
	IDENT => Shift goto 70
	DQSTRING => Shift goto 71
	SQSTRING => Shift goto 72
	CARDINAL => Shift goto 73
	INTEGER => Shift goto 74
	FLOAT => Shift goto 75
	"function" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	'(' => Shift goto 76
	"procedure" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	'&' => Shift goto 77
	"typedef" => Shift goto 19
	'{' => Shift goto 78
	'}' => Reduce #0 statementlist
	"private" => Shift goto 23
	"public" => Shift goto 24
	"var" => Shift goto 79
	"return" => Shift goto 80
	"delete" => Shift goto 81
	"if" => Shift goto 82
	"while" => Shift goto 83
	"new" => Shift goto 84
	"null" => Shift goto 85
	'+' => Shift goto 86
	'-' => Shift goto 87
	'~' => Shift goto 88
	'!' => Shift goto 89
	'*' => Shift goto 90
[67]
	'(' => Shift goto 123
	';' => Shift goto 124
	'&' => Shift goto 125
	'^' => Shift goto 126
	'=' => Shift goto 127
	'[' => Shift goto 128
	"+=" => Shift goto 129
	"-=" => Shift goto 130
	"*=" => Shift goto 131
	"/=" => Shift goto 132
	"%=" => Shift goto 133
	"&&=" => Shift goto 134
	"||=" => Shift goto 135
	"&=" => Shift goto 136
	"|=" => Shift goto 137
	"<<=" => Shift goto 138
	">>=" => Shift goto 139
	"||" => Shift goto 140
	"&&" => Shift goto 141
	'|' => Shift goto 142
	"==" => Shift goto 143
	"!=" => Shift goto 144
	"<=" => Shift goto 145
	'<' => Shift goto 146
	">=" => Shift goto 147
	'>' => Shift goto 148
	'+' => Shift goto 149
	'-' => Shift goto 150
	'*' => Shift goto 151
	'/' => Shift goto 152
	'%' => Shift goto 153
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'.' => Shift goto 156
	"->" => Shift goto 157
[68]
	'(' => Reduce #1 expression
	')' => Reduce #1 expression
	';' => Reduce #1 expression
	',' => Reduce #1 expression
	'&' => Reduce #1 expression
	'^' => Reduce #1 expression
	'}' => Reduce #1 expression
	'=' => Reduce #1 expression
	'[' => Reduce #1 expression
	']' => Reduce #1 expression
	"+=" => Reduce #1 expression
	"-=" => Reduce #1 expression
	"*=" => Reduce #1 expression
	"/=" => Reduce #1 expression
	"%=" => Reduce #1 expression
	"&&=" => Reduce #1 expression
	"||=" => Reduce #1 expression
	"&=" => Reduce #1 expression
	"|=" => Reduce #1 expression
	"<<=" => Reduce #1 expression
	">>=" => Reduce #1 expression
	"||" => Reduce #1 expression
	"&&" => Reduce #1 expression
	'|' => Reduce #1 expression
	"==" => Reduce #1 expression
	"!=" => Reduce #1 expression
	"<=" => Reduce #1 expression
	'<' => Reduce #1 expression
	">=" => Reduce #1 expression
	'>' => Reduce #1 expression
	'+' => Reduce #1 expression
	'-' => Reduce #1 expression
	'*' => Reduce #1 expression
	'/' => Reduce #1 expression
	'%' => Reduce #1 expression
	"<<" => Reduce #1 expression
	">>" => Reduce #1 expression
	'.' => Reduce #1 expression
	"->" => Reduce #1 expression
[69]
	'(' => Reduce #1 expression call constant "constexpr bool"
	')' => Reduce #1 expression call constant "constexpr bool"
	';' => Reduce #1 expression call constant "constexpr bool"
	',' => Reduce #1 expression call constant "constexpr bool"
	'&' => Reduce #1 expression call constant "constexpr bool"
	'^' => Reduce #1 expression call constant "constexpr bool"
	'}' => Reduce #1 expression call constant "constexpr bool"
	'=' => Reduce #1 expression call constant "constexpr bool"
	'[' => Reduce #1 expression call constant "constexpr bool"
	']' => Reduce #1 expression call constant "constexpr bool"
	"+=" => Reduce #1 expression call constant "constexpr bool"
	"-=" => Reduce #1 expression call constant "constexpr bool"
	"*=" => Reduce #1 expression call constant "constexpr bool"
	"/=" => Reduce #1 expression call constant "constexpr bool"
	"%=" => Reduce #1 expression call constant "constexpr bool"
	"&&=" => Reduce #1 expression call constant "constexpr bool"
	"||=" => Reduce #1 expression call constant "constexpr bool"
	"&=" => Reduce #1 expression call constant "constexpr bool"
	"|=" => Reduce #1 expression call constant "constexpr bool"
	"<<=" => Reduce #1 expression call constant "constexpr bool"
	">>=" => Reduce #1 expression call constant "constexpr bool"
	"||" => Reduce #1 expression call constant "constexpr bool"
	"&&" => Reduce #1 expression call constant "constexpr bool"
	'|' => Reduce #1 expression call constant "constexpr bool"
	"==" => Reduce #1 expression call constant "constexpr bool"
	"!=" => Reduce #1 expression call constant "constexpr bool"
	"<=" => Reduce #1 expression call constant "constexpr bool"
	'<' => Reduce #1 expression call constant "constexpr bool"
	">=" => Reduce #1 expression call constant "constexpr bool"
	'>' => Reduce #1 expression call constant "constexpr bool"
	'+' => Reduce #1 expression call constant "constexpr bool"
	'-' => Reduce #1 expression call constant "constexpr bool"
	'*' => Reduce #1 expression call constant "constexpr bool"
	'/' => Reduce #1 expression call constant "constexpr bool"
	'%' => Reduce #1 expression call constant "constexpr bool"
	"<<" => Reduce #1 expression call constant "constexpr bool"
	">>" => Reduce #1 expression call constant "constexpr bool"
	'.' => Reduce #1 expression call constant "constexpr bool"
	"->" => Reduce #1 expression call constant "constexpr bool"
[70]
	'(' => Reduce #1 expression call variable
	')' => Reduce #1 expression call variable
	';' => Reduce #1 expression call variable
	',' => Reduce #1 expression call variable
	'&' => Reduce #1 expression call variable
	'^' => Reduce #1 expression call variable
	'}' => Reduce #1 expression call variable
	'=' => Reduce #1 expression call variable
	'[' => Reduce #1 expression call variable
	']' => Reduce #1 expression call variable
	"+=" => Reduce #1 expression call variable
	"-=" => Reduce #1 expression call variable
	"*=" => Reduce #1 expression call variable
	"/=" => Reduce #1 expression call variable
	"%=" => Reduce #1 expression call variable
	"&&=" => Reduce #1 expression call variable
	"||=" => Reduce #1 expression call variable
	"&=" => Reduce #1 expression call variable
	"|=" => Reduce #1 expression call variable
	"<<=" => Reduce #1 expression call variable
	">>=" => Reduce #1 expression call variable
	"||" => Reduce #1 expression call variable
	"&&" => Reduce #1 expression call variable
	'|' => Reduce #1 expression call variable
	"==" => Reduce #1 expression call variable
	"!=" => Reduce #1 expression call variable
	"<=" => Reduce #1 expression call variable
	'<' => Reduce #1 expression call variable
	">=" => Reduce #1 expression call variable
	'>' => Reduce #1 expression call variable
	'+' => Reduce #1 expression call variable
	'-' => Reduce #1 expression call variable
	'*' => Reduce #1 expression call variable
	'/' => Reduce #1 expression call variable
	'%' => Reduce #1 expression call variable
	"<<" => Reduce #1 expression call variable
	">>" => Reduce #1 expression call variable
	'.' => Reduce #1 expression call variable
	"->" => Reduce #1 expression call variable
[71]
	'(' => Reduce #1 expression call string_constant "constexpr float"
	')' => Reduce #1 expression call string_constant "constexpr float"
	';' => Reduce #1 expression call string_constant "constexpr float"
	',' => Reduce #1 expression call string_constant "constexpr float"
	'&' => Reduce #1 expression call string_constant "constexpr float"
	'^' => Reduce #1 expression call string_constant "constexpr float"
	'}' => Reduce #1 expression call string_constant "constexpr float"
	'=' => Reduce #1 expression call string_constant "constexpr float"
	'[' => Reduce #1 expression call string_constant "constexpr float"
	']' => Reduce #1 expression call string_constant "constexpr float"
	"+=" => Reduce #1 expression call string_constant "constexpr float"
	"-=" => Reduce #1 expression call string_constant "constexpr float"
	"*=" => Reduce #1 expression call string_constant "constexpr float"
	"/=" => Reduce #1 expression call string_constant "constexpr float"
	"%=" => Reduce #1 expression call string_constant "constexpr float"
	"&&=" => Reduce #1 expression call string_constant "constexpr float"
	"||=" => Reduce #1 expression call string_constant "constexpr float"
	"&=" => Reduce #1 expression call string_constant "constexpr float"
	"|=" => Reduce #1 expression call string_constant "constexpr float"
	"<<=" => Reduce #1 expression call string_constant "constexpr float"
	">>=" => Reduce #1 expression call string_constant "constexpr float"
	"||" => Reduce #1 expression call string_constant "constexpr float"
	"&&" => Reduce #1 expression call string_constant "constexpr float"
	'|' => Reduce #1 expression call string_constant "constexpr float"
	"==" => Reduce #1 expression call string_constant "constexpr float"
	"!=" => Reduce #1 expression call string_constant "constexpr float"
	"<=" => Reduce #1 expression call string_constant "constexpr float"
	'<' => Reduce #1 expression call string_constant "constexpr float"
	">=" => Reduce #1 expression call string_constant "constexpr float"
	'>' => Reduce #1 expression call string_constant "constexpr float"
	'+' => Reduce #1 expression call string_constant "constexpr float"
	'-' => Reduce #1 expression call string_constant "constexpr float"
	'*' => Reduce #1 expression call string_constant "constexpr float"
	'/' => Reduce #1 expression call string_constant "constexpr float"
	'%' => Reduce #1 expression call string_constant "constexpr float"
	"<<" => Reduce #1 expression call string_constant "constexpr float"
	">>" => Reduce #1 expression call string_constant "constexpr float"
	'.' => Reduce #1 expression call string_constant "constexpr float"
	"->" => Reduce #1 expression call string_constant "constexpr float"
[72]
	'(' => Reduce #1 expression call char_constant "constexpr float"
	')' => Reduce #1 expression call char_constant "constexpr float"
	';' => Reduce #1 expression call char_constant "constexpr float"
	',' => Reduce #1 expression call char_constant "constexpr float"
	'&' => Reduce #1 expression call char_constant "constexpr float"
	'^' => Reduce #1 expression call char_constant "constexpr float"
	'}' => Reduce #1 expression call char_constant "constexpr float"
	'=' => Reduce #1 expression call char_constant "constexpr float"
	'[' => Reduce #1 expression call char_constant "constexpr float"
	']' => Reduce #1 expression call char_constant "constexpr float"
	"+=" => Reduce #1 expression call char_constant "constexpr float"
	"-=" => Reduce #1 expression call char_constant "constexpr float"
	"*=" => Reduce #1 expression call char_constant "constexpr float"
	"/=" => Reduce #1 expression call char_constant "constexpr float"
	"%=" => Reduce #1 expression call char_constant "constexpr float"
	"&&=" => Reduce #1 expression call char_constant "constexpr float"
	"||=" => Reduce #1 expression call char_constant "constexpr float"
	"&=" => Reduce #1 expression call char_constant "constexpr float"
	"|=" => Reduce #1 expression call char_constant "constexpr float"
	"<<=" => Reduce #1 expression call char_constant "constexpr float"
	">>=" => Reduce #1 expression call char_constant "constexpr float"
	"||" => Reduce #1 expression call char_constant "constexpr float"
	"&&" => Reduce #1 expression call char_constant "constexpr float"
	'|' => Reduce #1 expression call char_constant "constexpr float"
	"==" => Reduce #1 expression call char_constant "constexpr float"
	"!=" => Reduce #1 expression call char_constant "constexpr float"
	"<=" => Reduce #1 expression call char_constant "constexpr float"
	'<' => Reduce #1 expression call char_constant "constexpr float"
	">=" => Reduce #1 expression call char_constant "constexpr float"
	'>' => Reduce #1 expression call char_constant "constexpr float"
	'+' => Reduce #1 expression call char_constant "constexpr float"
	'-' => Reduce #1 expression call char_constant "constexpr float"
	'*' => Reduce #1 expression call char_constant "constexpr float"
	'/' => Reduce #1 expression call char_constant "constexpr float"
	'%' => Reduce #1 expression call char_constant "constexpr float"
	"<<" => Reduce #1 expression call char_constant "constexpr float"
	">>" => Reduce #1 expression call char_constant "constexpr float"
	'.' => Reduce #1 expression call char_constant "constexpr float"
	"->" => Reduce #1 expression call char_constant "constexpr float"
[73]
	'(' => Reduce #1 expression call constant "constexpr uint"
	')' => Reduce #1 expression call constant "constexpr uint"
	';' => Reduce #1 expression call constant "constexpr uint"
	',' => Reduce #1 expression call constant "constexpr uint"
	'&' => Reduce #1 expression call constant "constexpr uint"
	'^' => Reduce #1 expression call constant "constexpr uint"
	'}' => Reduce #1 expression call constant "constexpr uint"
	'=' => Reduce #1 expression call constant "constexpr uint"
	'[' => Reduce #1 expression call constant "constexpr uint"
	']' => Reduce #1 expression call constant "constexpr uint"
	"+=" => Reduce #1 expression call constant "constexpr uint"
	"-=" => Reduce #1 expression call constant "constexpr uint"
	"*=" => Reduce #1 expression call constant "constexpr uint"
	"/=" => Reduce #1 expression call constant "constexpr uint"
	"%=" => Reduce #1 expression call constant "constexpr uint"
	"&&=" => Reduce #1 expression call constant "constexpr uint"
	"||=" => Reduce #1 expression call constant "constexpr uint"
	"&=" => Reduce #1 expression call constant "constexpr uint"
	"|=" => Reduce #1 expression call constant "constexpr uint"
	"<<=" => Reduce #1 expression call constant "constexpr uint"
	">>=" => Reduce #1 expression call constant "constexpr uint"
	"||" => Reduce #1 expression call constant "constexpr uint"
	"&&" => Reduce #1 expression call constant "constexpr uint"
	'|' => Reduce #1 expression call constant "constexpr uint"
	"==" => Reduce #1 expression call constant "constexpr uint"
	"!=" => Reduce #1 expression call constant "constexpr uint"
	"<=" => Reduce #1 expression call constant "constexpr uint"
	'<' => Reduce #1 expression call constant "constexpr uint"
	">=" => Reduce #1 expression call constant "constexpr uint"
	'>' => Reduce #1 expression call constant "constexpr uint"
	'+' => Reduce #1 expression call constant "constexpr uint"
	'-' => Reduce #1 expression call constant "constexpr uint"
	'*' => Reduce #1 expression call constant "constexpr uint"
	'/' => Reduce #1 expression call constant "constexpr uint"
	'%' => Reduce #1 expression call constant "constexpr uint"
	"<<" => Reduce #1 expression call constant "constexpr uint"
	">>" => Reduce #1 expression call constant "constexpr uint"
	'.' => Reduce #1 expression call constant "constexpr uint"
	"->" => Reduce #1 expression call constant "constexpr uint"
[74]
	'(' => Reduce #1 expression call constant "constexpr int"
	')' => Reduce #1 expression call constant "constexpr int"
	';' => Reduce #1 expression call constant "constexpr int"
	',' => Reduce #1 expression call constant "constexpr int"
	'&' => Reduce #1 expression call constant "constexpr int"
	'^' => Reduce #1 expression call constant "constexpr int"
	'}' => Reduce #1 expression call constant "constexpr int"
	'=' => Reduce #1 expression call constant "constexpr int"
	'[' => Reduce #1 expression call constant "constexpr int"
	']' => Reduce #1 expression call constant "constexpr int"
	"+=" => Reduce #1 expression call constant "constexpr int"
	"-=" => Reduce #1 expression call constant "constexpr int"
	"*=" => Reduce #1 expression call constant "constexpr int"
	"/=" => Reduce #1 expression call constant "constexpr int"
	"%=" => Reduce #1 expression call constant "constexpr int"
	"&&=" => Reduce #1 expression call constant "constexpr int"
	"||=" => Reduce #1 expression call constant "constexpr int"
	"&=" => Reduce #1 expression call constant "constexpr int"
	"|=" => Reduce #1 expression call constant "constexpr int"
	"<<=" => Reduce #1 expression call constant "constexpr int"
	">>=" => Reduce #1 expression call constant "constexpr int"
	"||" => Reduce #1 expression call constant "constexpr int"
	"&&" => Reduce #1 expression call constant "constexpr int"
	'|' => Reduce #1 expression call constant "constexpr int"
	"==" => Reduce #1 expression call constant "constexpr int"
	"!=" => Reduce #1 expression call constant "constexpr int"
	"<=" => Reduce #1 expression call constant "constexpr int"
	'<' => Reduce #1 expression call constant "constexpr int"
	">=" => Reduce #1 expression call constant "constexpr int"
	'>' => Reduce #1 expression call constant "constexpr int"
	'+' => Reduce #1 expression call constant "constexpr int"
	'-' => Reduce #1 expression call constant "constexpr int"
	'*' => Reduce #1 expression call constant "constexpr int"
	'/' => Reduce #1 expression call constant "constexpr int"
	'%' => Reduce #1 expression call constant "constexpr int"
	"<<" => Reduce #1 expression call constant "constexpr int"
	">>" => Reduce #1 expression call constant "constexpr int"
	'.' => Reduce #1 expression call constant "constexpr int"
	"->" => Reduce #1 expression call constant "constexpr int"
[75]
	'(' => Reduce #1 expression call constant "constexpr float"
	')' => Reduce #1 expression call constant "constexpr float"
	';' => Reduce #1 expression call constant "constexpr float"
	',' => Reduce #1 expression call constant "constexpr float"
	'&' => Reduce #1 expression call constant "constexpr float"
	'^' => Reduce #1 expression call constant "constexpr float"
	'}' => Reduce #1 expression call constant "constexpr float"
	'=' => Reduce #1 expression call constant "constexpr float"
	'[' => Reduce #1 expression call constant "constexpr float"
	']' => Reduce #1 expression call constant "constexpr float"
	"+=" => Reduce #1 expression call constant "constexpr float"
	"-=" => Reduce #1 expression call constant "constexpr float"
	"*=" => Reduce #1 expression call constant "constexpr float"
	"/=" => Reduce #1 expression call constant "constexpr float"
	"%=" => Reduce #1 expression call constant "constexpr float"
	"&&=" => Reduce #1 expression call constant "constexpr float"
	"||=" => Reduce #1 expression call constant "constexpr float"
	"&=" => Reduce #1 expression call constant "constexpr float"
	"|=" => Reduce #1 expression call constant "constexpr float"
	"<<=" => Reduce #1 expression call constant "constexpr float"
	">>=" => Reduce #1 expression call constant "constexpr float"
	"||" => Reduce #1 expression call constant "constexpr float"
	"&&" => Reduce #1 expression call constant "constexpr float"
	'|' => Reduce #1 expression call constant "constexpr float"
	"==" => Reduce #1 expression call constant "constexpr float"
	"!=" => Reduce #1 expression call constant "constexpr float"
	"<=" => Reduce #1 expression call constant "constexpr float"
	'<' => Reduce #1 expression call constant "constexpr float"
	">=" => Reduce #1 expression call constant "constexpr float"
	'>' => Reduce #1 expression call constant "constexpr float"
	'+' => Reduce #1 expression call constant "constexpr float"
	'-' => Reduce #1 expression call constant "constexpr float"
	'*' => Reduce #1 expression call constant "constexpr float"
	'/' => Reduce #1 expression call constant "constexpr float"
	'%' => Reduce #1 expression call constant "constexpr float"
	"<<" => Reduce #1 expression call constant "constexpr float"
	">>" => Reduce #1 expression call constant "constexpr float"
	'.' => Reduce #1 expression call constant "constexpr float"
	"->" => Reduce #1 expression call constant "constexpr float"
[76]
	BOOLEAN => Shift goto 69
	IDENT => Shift goto 70
	DQSTRING => Shift goto 71
	SQSTRING => Shift goto 72
	CARDINAL => Shift goto 73
	INTEGER => Shift goto 74
	FLOAT => Shift goto 75
	'(' => Shift goto 76
	'&' => Shift goto 77
	'{' => Shift goto 93
	"new" => Shift goto 84
	"null" => Shift goto 85
	'+' => Shift goto 86
	'-' => Shift goto 87
	'~' => Shift goto 88
	'!' => Shift goto 89
	'*' => Shift goto 90
[77]
	BOOLEAN => Shift goto 69
	IDENT => Shift goto 70
	DQSTRING => Shift goto 71
	SQSTRING => Shift goto 72
	CARDINAL => Shift goto 73
	INTEGER => Shift goto 74
	FLOAT => Shift goto 75
	'(' => Shift goto 76
	'&' => Shift goto 77
	'{' => Shift goto 93
	"new" => Shift goto 84
	"null" => Shift goto 85
	'+' => Shift goto 86
	'-' => Shift goto 87
	'~' => Shift goto 88
	'!' => Shift goto 89
	'*' => Shift goto 90
[78]
	BOOLEAN => Shift goto 69
	IDENT => Shift goto 70
	DQSTRING => Shift goto 71
	SQSTRING => Shift goto 72
	CARDINAL => Shift goto 73
	INTEGER => Shift goto 74
	FLOAT => Shift goto 75
	"function" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	'(' => Shift goto 76
	"procedure" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	'&' => Shift goto 77
	"typedef" => Shift goto 19
	'{' => Shift goto 78
	'}' => Shift goto 163
	"private" => Shift goto 23
	"public" => Shift goto 24
	"var" => Shift goto 79
	"return" => Shift goto 80
	"delete" => Shift goto 81
	"if" => Shift goto 82
	"while" => Shift goto 83
	"new" => Shift goto 84
	"null" => Shift goto 85
	'+' => Shift goto 86
	'-' => Shift goto 87
	'~' => Shift goto 88
	'!' => Shift goto 89
	'*' => Shift goto 90
[79]
	IDENT => Shift goto 17
	"const" => Shift goto 18
[80]
	BOOLEAN => Shift goto 69
	IDENT => Shift goto 70
	DQSTRING => Shift goto 71
	SQSTRING => Shift goto 72
	CARDINAL => Shift goto 73
	INTEGER => Shift goto 74
	FLOAT => Shift goto 75
	'(' => Shift goto 76
	'&' => Shift goto 77
	'{' => Shift goto 93
	"new" => Shift goto 84
	"null" => Shift goto 85
	'+' => Shift goto 86
	'-' => Shift goto 87
	'~' => Shift goto 88
	'!' => Shift goto 89
	'*' => Shift goto 90
[81]
	BOOLEAN => Shift goto 69
	IDENT => Shift goto 70
	DQSTRING => Shift goto 71
	SQSTRING => Shift goto 72
	CARDINAL => Shift goto 73
	INTEGER => Shift goto 74
	FLOAT => Shift goto 75
	'(' => Shift goto 76
	'&' => Shift goto 77
	'{' => Shift goto 93
	"new" => Shift goto 84
	"null" => Shift goto 85
	'+' => Shift goto 86
	'-' => Shift goto 87
	'~' => Shift goto 88
	'!' => Shift goto 89
	'*' => Shift goto 90
[82]
	'(' => Shift goto 167
[83]
	'(' => Shift goto 168
[84]
	IDENT => Shift goto 17
	"const" => Shift goto 18
[85]
	'(' => Reduce #1 expression call null "constexpr float"
	')' => Reduce #1 expression call null "constexpr float"
	';' => Reduce #1 expression call null "constexpr float"
	',' => Reduce #1 expression call null "constexpr float"
	'&' => Reduce #1 expression call null "constexpr float"
	'^' => Reduce #1 expression call null "constexpr float"
	'}' => Reduce #1 expression call null "constexpr float"
	'=' => Reduce #1 expression call null "constexpr float"
	'[' => Reduce #1 expression call null "constexpr float"
	']' => Reduce #1 expression call null "constexpr float"
	"+=" => Reduce #1 expression call null "constexpr float"
	"-=" => Reduce #1 expression call null "constexpr float"
	"*=" => Reduce #1 expression call null "constexpr float"
	"/=" => Reduce #1 expression call null "constexpr float"
	"%=" => Reduce #1 expression call null "constexpr float"
	"&&=" => Reduce #1 expression call null "constexpr float"
	"||=" => Reduce #1 expression call null "constexpr float"
	"&=" => Reduce #1 expression call null "constexpr float"
	"|=" => Reduce #1 expression call null "constexpr float"
	"<<=" => Reduce #1 expression call null "constexpr float"
	">>=" => Reduce #1 expression call null "constexpr float"
	"||" => Reduce #1 expression call null "constexpr float"
	"&&" => Reduce #1 expression call null "constexpr float"
	'|' => Reduce #1 expression call null "constexpr float"
	"==" => Reduce #1 expression call null "constexpr float"
	"!=" => Reduce #1 expression call null "constexpr float"
	"<=" => Reduce #1 expression call null "constexpr float"
	'<' => Reduce #1 expression call null "constexpr float"
	">=" => Reduce #1 expression call null "constexpr float"
	'>' => Reduce #1 expression call null "constexpr float"
	'+' => Reduce #1 expression call null "constexpr float"
	'-' => Reduce #1 expression call null "constexpr float"
	'*' => Reduce #1 expression call null "constexpr float"
	'/' => Reduce #1 expression call null "constexpr float"
	'%' => Reduce #1 expression call null "constexpr float"
	"<<" => Reduce #1 expression call null "constexpr float"
	">>" => Reduce #1 expression call null "constexpr float"
	'.' => Reduce #1 expression call null "constexpr float"
	"->" => Reduce #1 expression call null "constexpr float"
[86]
	BOOLEAN => Shift goto 69
	IDENT => Shift goto 70
	DQSTRING => Shift goto 71
	SQSTRING => Shift goto 72
	CARDINAL => Shift goto 73
	INTEGER => Shift goto 74
	FLOAT => Shift goto 75
	'(' => Shift goto 76
	'&' => Shift goto 77
	'{' => Shift goto 93
	"new" => Shift goto 84
	"null" => Shift goto 85
	'+' => Shift goto 86
	'-' => Shift goto 87
	'~' => Shift goto 88
	'!' => Shift goto 89
	'*' => Shift goto 90
[87]
	BOOLEAN => Shift goto 69
	IDENT => Shift goto 70
	DQSTRING => Shift goto 71
	SQSTRING => Shift goto 72
	CARDINAL => Shift goto 73
	INTEGER => Shift goto 74
	FLOAT => Shift goto 75
	'(' => Shift goto 76
	'&' => Shift goto 77
	'{' => Shift goto 93
	"new" => Shift goto 84
	"null" => Shift goto 85
	'+' => Shift goto 86
	'-' => Shift goto 87
	'~' => Shift goto 88
	'!' => Shift goto 89
	'*' => Shift goto 90
[88]
	BOOLEAN => Shift goto 69
	IDENT => Shift goto 70
	DQSTRING => Shift goto 71
	SQSTRING => Shift goto 72
	CARDINAL => Shift goto 73
	INTEGER => Shift goto 74
	FLOAT => Shift goto 75
	'(' => Shift goto 76
	'&' => Shift goto 77
	'{' => Shift goto 93
	"new" => Shift goto 84
	"null" => Shift goto 85
	'+' => Shift goto 86
	'-' => Shift goto 87
	'~' => Shift goto 88
	'!' => Shift goto 89
	'*' => Shift goto 90
[89]
	BOOLEAN => Shift goto 69
	IDENT => Shift goto 70
	DQSTRING => Shift goto 71
	SQSTRING => Shift goto 72
	CARDINAL => Shift goto 73
	INTEGER => Shift goto 74
	FLOAT => Shift goto 75
	'(' => Shift goto 76
	'&' => Shift goto 77
	'{' => Shift goto 93
	"new" => Shift goto 84
	"null" => Shift goto 85
	'+' => Shift goto 86
	'-' => Shift goto 87
	'~' => Shift goto 88
	'!' => Shift goto 89
	'*' => Shift goto 90
[90]
	BOOLEAN => Shift goto 69
	IDENT => Shift goto 70
	DQSTRING => Shift goto 71
	SQSTRING => Shift goto 72
	CARDINAL => Shift goto 73
	INTEGER => Shift goto 74
	FLOAT => Shift goto 75
	'(' => Shift goto 76
	'&' => Shift goto 77
	'{' => Shift goto 93
	"new" => Shift goto 84
	"null" => Shift goto 85
	'+' => Shift goto 86
	'-' => Shift goto 87
	'~' => Shift goto 88
	'!' => Shift goto 89
	'*' => Shift goto 90
[91]
	IDENT => Reduce #4 typespec call typespec "^^&"
	')' => Reduce #4 typespec call typespec "^^&"
	"..." => Reduce #4 typespec call typespec "^^&"
	',' => Reduce #4 typespec call typespec "^^&"
	':' => Reduce #4 typespec call typespec "^^&"
[92]
	'(' => Shift goto 123
	';' => Reduce #4 variabledefinition call vardef_assign
	'&' => Shift goto 125
	'^' => Shift goto 126
	'=' => Shift goto 127
	'[' => Shift goto 128
	"+=" => Shift goto 129
	"-=" => Shift goto 130
	"*=" => Shift goto 131
	"/=" => Shift goto 132
	"%=" => Shift goto 133
	"&&=" => Shift goto 134
	"||=" => Shift goto 135
	"&=" => Shift goto 136
	"|=" => Shift goto 137
	"<<=" => Shift goto 138
	">>=" => Shift goto 139
	"||" => Shift goto 140
	"&&" => Shift goto 141
	'|' => Shift goto 142
	"==" => Shift goto 143
	"!=" => Shift goto 144
	"<=" => Shift goto 145
	'<' => Shift goto 146
	">=" => Shift goto 147
	'>' => Shift goto 148
	'+' => Shift goto 149
	'-' => Shift goto 150
	'*' => Shift goto 151
	'/' => Shift goto 152
	'%' => Shift goto 153
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'.' => Shift goto 156
	"->" => Shift goto 157
[93]
	BOOLEAN => Shift goto 69
	IDENT => Shift goto 70
	DQSTRING => Shift goto 71
	SQSTRING => Shift goto 72
	CARDINAL => Shift goto 73
	INTEGER => Shift goto 74
	FLOAT => Shift goto 75
	'(' => Shift goto 76
	'&' => Shift goto 77
	'{' => Shift goto 93
	'}' => Shift goto 163
	"new" => Shift goto 84
	"null" => Shift goto 85
	'+' => Shift goto 86
	'-' => Shift goto 87
	'~' => Shift goto 88
	'!' => Shift goto 89
	'*' => Shift goto 90
[94]
	'(' => Shift goto 123
	'&' => Shift goto 125
	'^' => Shift goto 126
	'=' => Shift goto 127
	'[' => Shift goto 128
	']' => Shift goto 176
	"+=" => Shift goto 129
	"-=" => Shift goto 130
	"*=" => Shift goto 131
	"/=" => Shift goto 132
	"%=" => Shift goto 133
	"&&=" => Shift goto 134
	"||=" => Shift goto 135
	"&=" => Shift goto 136
	"|=" => Shift goto 137
	"<<=" => Shift goto 138
	">>=" => Shift goto 139
	"||" => Shift goto 140
	"&&" => Shift goto 141
	'|' => Shift goto 142
	"==" => Shift goto 143
	"!=" => Shift goto 144
	"<=" => Shift goto 145
	'<' => Shift goto 146
	">=" => Shift goto 147
	'>' => Shift goto 148
	'+' => Shift goto 149
	'-' => Shift goto 150
	'*' => Shift goto 151
	'/' => Shift goto 152
	'%' => Shift goto 153
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'.' => Shift goto 156
	"->" => Shift goto 157
[95]
	'(' => Shift goto 97
[96]
	$ => Reduce #4 functiondefinition call procdef
	BOOLEAN => Reduce #4 functiondefinition call procdef
	IDENT => Reduce #4 functiondefinition call procdef
	DQSTRING => Reduce #4 functiondefinition call procdef
	SQSTRING => Reduce #4 functiondefinition call procdef
	CARDINAL => Reduce #4 functiondefinition call procdef
	INTEGER => Reduce #4 functiondefinition call procdef
	FLOAT => Reduce #4 functiondefinition call procdef
	"function" => Reduce #4 functiondefinition call procdef
	'(' => Reduce #4 functiondefinition call procdef
	"procedure" => Reduce #4 functiondefinition call procdef
	"const" => Reduce #4 functiondefinition call procdef
	'&' => Reduce #4 functiondefinition call procdef
	"typedef" => Reduce #4 functiondefinition call procdef
	"struct" => Reduce #4 functiondefinition call procdef
	'{' => Reduce #4 functiondefinition call procdef
	'}' => Reduce #4 functiondefinition call procdef
	"interface" => Reduce #4 functiondefinition call procdef
	"class" => Reduce #4 functiondefinition call procdef
	"private" => Reduce #4 functiondefinition call procdef
	"public" => Reduce #4 functiondefinition call procdef
	"constructor" => Reduce #4 functiondefinition call procdef
	"destructor" => Reduce #4 functiondefinition call procdef
	"main" => Reduce #4 functiondefinition call procdef
	"var" => Reduce #4 functiondefinition call procdef
	"return" => Reduce #4 functiondefinition call procdef
	"delete" => Reduce #4 functiondefinition call procdef
	"if" => Reduce #4 functiondefinition call procdef
	"while" => Reduce #4 functiondefinition call procdef
	"new" => Reduce #4 functiondefinition call procdef
	"null" => Reduce #4 functiondefinition call procdef
	'+' => Reduce #4 functiondefinition call procdef
	'-' => Reduce #4 functiondefinition call procdef
	'~' => Reduce #4 functiondefinition call procdef
	'!' => Reduce #4 functiondefinition call procdef
	'*' => Reduce #4 functiondefinition call procdef
[97]
	IDENT => Shift goto 17
	')' => Reduce #0 parameterlist
	"const" => Shift goto 18
[98]
	IDENT => Reduce #4 typespec call typespec "const^&"
	')' => Reduce #4 typespec call typespec "const^&"
	"..." => Reduce #4 typespec call typespec "const^&"
	',' => Reduce #4 typespec call typespec "const^&"
	':' => Reduce #4 typespec call typespec "const^&"
[99]
	IDENT => Reduce #4 typespec call typespec "const^^"
	')' => Reduce #4 typespec call typespec "const^^"
	"..." => Reduce #4 typespec call typespec "const^^"
	',' => Reduce #4 typespec call typespec "const^^"
	'&' => Shift goto 182
	':' => Reduce #4 typespec call typespec "const^^"
[100]
	'}' => Shift goto 183
[101]
	IDENT => Shift goto 17
	"const" => Shift goto 18
	"typedef" => Shift goto 19
	"struct" => Shift goto 20
	'}' => Reduce #0 struct_definitionlist
[102]
	'}' => Shift goto 185
[103]
	"function" => Shift goto 104
	"procedure" => Shift goto 105
	'}' => Reduce #0 interface_definitionlist
[104]
	IDENT => Shift goto 17
	"const" => Shift goto 18
[105]
	IDENT => Shift goto 188
[106]
	'}' => Shift goto 189
[107]
	$ => Reduce #1 class_definition
	IDENT => Reduce #1 class_definition
	"function" => Reduce #1 class_definition
	"procedure" => Reduce #1 class_definition
	"const" => Reduce #1 class_definition
	"typedef" => Reduce #1 class_definition
	"struct" => Reduce #1 class_definition
	'}' => Reduce #1 class_definition
	"interface" => Reduce #1 class_definition
	"class" => Reduce #1 class_definition
	"private" => Reduce #1 class_definition
	"public" => Reduce #1 class_definition
	"constructor" => Reduce #1 class_definition
	"destructor" => Reduce #1 class_definition
[108]
	IDENT => Shift goto 17
	"function" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	"procedure" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	"const" => Shift goto 18
	"typedef" => Shift goto 19
	"struct" => Shift goto 20
	'}' => Reduce #0 class_definitionlist
	"interface" => Shift goto 21
	"class" => Shift goto 22
	"private" => Shift goto 23
	"public" => Shift goto 24
	"constructor" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	"destructor" => Shift goto 114
[109]
	$ => Reduce #1 class_definition call definition
	IDENT => Reduce #1 class_definition call definition
	"function" => Reduce #1 class_definition call definition
	"procedure" => Reduce #1 class_definition call definition
	"const" => Reduce #1 class_definition call definition
	"typedef" => Reduce #1 class_definition call definition
	"struct" => Reduce #1 class_definition call definition
	'}' => Reduce #1 class_definition call definition
	"interface" => Reduce #1 class_definition call definition
	"class" => Reduce #1 class_definition call definition
	"private" => Reduce #1 class_definition call definition
	"public" => Reduce #1 class_definition call definition
	"constructor" => Reduce #1 class_definition call definition
	"destructor" => Reduce #1 class_definition call definition
[110]
	$ => Reduce #1 class_definition call definition
	IDENT => Reduce #1 class_definition call definition
	"function" => Reduce #1 class_definition call definition
	"procedure" => Reduce #1 class_definition call definition
	"const" => Reduce #1 class_definition call definition
	"typedef" => Reduce #1 class_definition call definition
	"struct" => Reduce #1 class_definition call definition
	'}' => Reduce #1 class_definition call definition
	"interface" => Reduce #1 class_definition call definition
	"class" => Reduce #1 class_definition call definition
	"private" => Reduce #1 class_definition call definition
	"public" => Reduce #1 class_definition call definition
	"constructor" => Reduce #1 class_definition call definition
	"destructor" => Reduce #1 class_definition call definition
[111]
	"function" => Shift goto 34
	"procedure" => Shift goto 35
	"constructor" => Shift goto 191
[112]
	$ => Reduce #1 class_definition call definition
	IDENT => Reduce #1 class_definition call definition
	"function" => Reduce #1 class_definition call definition
	"procedure" => Reduce #1 class_definition call definition
	"const" => Reduce #1 class_definition call definition
	"typedef" => Reduce #1 class_definition call definition
	"struct" => Reduce #1 class_definition call definition
	'}' => Reduce #1 class_definition call definition
	"interface" => Reduce #1 class_definition call definition
	"class" => Reduce #1 class_definition call definition
	"private" => Reduce #1 class_definition call definition
	"public" => Reduce #1 class_definition call definition
	"constructor" => Reduce #1 class_definition call definition
	"destructor" => Reduce #1 class_definition call definition
[113]
	$ => Reduce #1 class_definition
	IDENT => Reduce #1 class_definition
	"function" => Reduce #1 class_definition
	"procedure" => Reduce #1 class_definition
	"const" => Reduce #1 class_definition
	"typedef" => Reduce #1 class_definition
	"struct" => Reduce #1 class_definition
	'}' => Reduce #1 class_definition
	"interface" => Reduce #1 class_definition
	"class" => Reduce #1 class_definition
	"private" => Reduce #1 class_definition
	"public" => Reduce #1 class_definition
	"constructor" => Reduce #1 class_definition
	"destructor" => Reduce #1 class_definition
[114]
	'{' => Shift goto 192
[115]
	',' => Shift goto 193
	'{' => Reduce #1 inheritlist call inheritdef
[116]
	'{' => Shift goto 194
[117]
	'(' => Shift goto 195
[118]
	IDENT => Shift goto 17
	')' => Reduce #0 extern_paramlist
	"..." => Reduce #0 extern_paramlist
	"const" => Shift goto 18
[119]
	$ => Reduce #2 statement call definition
	BOOLEAN => Reduce #2 statement call definition
	IDENT => Reduce #2 statement call definition
	DQSTRING => Reduce #2 statement call definition
	SQSTRING => Reduce #2 statement call definition
	CARDINAL => Reduce #2 statement call definition
	INTEGER => Reduce #2 statement call definition
	FLOAT => Reduce #2 statement call definition
	"function" => Reduce #2 statement call definition
	'(' => Reduce #2 statement call definition
	"procedure" => Reduce #2 statement call definition
	'&' => Reduce #2 statement call definition
	"typedef" => Reduce #2 statement call definition
	'{' => Reduce #2 statement call definition
	'}' => Reduce #2 statement call definition
	"private" => Reduce #2 statement call definition
	"public" => Reduce #2 statement call definition
	"var" => Reduce #2 statement call definition
	"return" => Reduce #2 statement call definition
	"delete" => Reduce #2 statement call definition
	"if" => Reduce #2 statement call definition
	"while" => Reduce #2 statement call definition
	"new" => Reduce #2 statement call definition
	"null" => Reduce #2 statement call definition
	'+' => Reduce #2 statement call definition
	'-' => Reduce #2 statement call definition
	'~' => Reduce #2 statement call definition
	'!' => Reduce #2 statement call definition
	'*' => Reduce #2 statement call definition
[120]
	$ => Reduce #4 main_procedure call main_procdef
[121]
	'}' => Reduce #2 statementlist
[122]
	IDENT => Shift goto 199
[123]
	BOOLEAN => Shift goto 69
	IDENT => Shift goto 70
	DQSTRING => Shift goto 71
	SQSTRING => Shift goto 72
	CARDINAL => Shift goto 73
	INTEGER => Shift goto 74
	FLOAT => Shift goto 75
	'(' => Shift goto 76
	')' => Shift goto 201
	'&' => Shift goto 77
	'{' => Shift goto 93
	"new" => Shift goto 84
	"null" => Shift goto 85
	'+' => Shift goto 86
	'-' => Shift goto 87
	'~' => Shift goto 88
	'!' => Shift goto 89
	'*' => Shift goto 90
[124]
	$ => Reduce #2 statement call free_expression
	BOOLEAN => Reduce #2 statement call free_expression
	IDENT => Reduce #2 statement call free_expression
	DQSTRING => Reduce #2 statement call free_expression
	SQSTRING => Reduce #2 statement call free_expression
	CARDINAL => Reduce #2 statement call free_expression
	INTEGER => Reduce #2 statement call free_expression
	FLOAT => Reduce #2 statement call free_expression
	"function" => Reduce #2 statement call free_expression
	'(' => Reduce #2 statement call free_expression
	"procedure" => Reduce #2 statement call free_expression
	'&' => Reduce #2 statement call free_expression
	"typedef" => Reduce #2 statement call free_expression
	'{' => Reduce #2 statement call free_expression
	'}' => Reduce #2 statement call free_expression
	"private" => Reduce #2 statement call free_expression
	"public" => Reduce #2 statement call free_expression
	"var" => Reduce #2 statement call free_expression
	"return" => Reduce #2 statement call free_expression
	"delete" => Reduce #2 statement call free_expression
	"if" => Reduce #2 statement call free_expression
	"while" => Reduce #2 statement call free_expression
	"new" => Reduce #2 statement call free_expression
	"null" => Reduce #2 statement call free_expression
	'+' => Reduce #2 statement call free_expression
	'-' => Reduce #2 statement call free_expression
	'~' => Reduce #2 statement call free_expression
	'!' => Reduce #2 statement call free_expression
	'*' => Reduce #2 statement call free_expression
[125]
	BOOLEAN => Shift goto 69
	IDENT => Shift goto 70
	DQSTRING => Shift goto 71
	SQSTRING => Shift goto 72
	CARDINAL => Shift goto 73
	INTEGER => Shift goto 74
	FLOAT => Shift goto 75
	'(' => Shift goto 76
	'&' => Shift goto 77
	'{' => Shift goto 93
	"new" => Shift goto 84
	"null" => Shift goto 85
	'+' => Shift goto 86
	'-' => Shift goto 87
	'~' => Shift goto 88
	'!' => Shift goto 89
	'*' => Shift goto 90
[126]
	BOOLEAN => Shift goto 69
	IDENT => Shift goto 70
	DQSTRING => Shift goto 71
	SQSTRING => Shift goto 72
	CARDINAL => Shift goto 73
	INTEGER => Shift goto 74
	FLOAT => Shift goto 75
	'(' => Shift goto 76
	'&' => Shift goto 77
	'{' => Shift goto 93
	"new" => Shift goto 84
	"null" => Shift goto 85
	'+' => Shift goto 86
	'-' => Shift goto 87
	'~' => Shift goto 88
	'!' => Shift goto 89
	'*' => Shift goto 90
[127]
	BOOLEAN => Shift goto 69
	IDENT => Shift goto 70
	DQSTRING => Shift goto 71
	SQSTRING => Shift goto 72
	CARDINAL => Shift goto 73
	INTEGER => Shift goto 74
	FLOAT => Shift goto 75
	'(' => Shift goto 76
	'&' => Shift goto 77
	'{' => Shift goto 93
	"new" => Shift goto 84
	"null" => Shift goto 85
	'+' => Shift goto 86
	'-' => Shift goto 87
	'~' => Shift goto 88
	'!' => Shift goto 89
	'*' => Shift goto 90
[128]
	BOOLEAN => Shift goto 69
	IDENT => Shift goto 70
	DQSTRING => Shift goto 71
	SQSTRING => Shift goto 72
	CARDINAL => Shift goto 73
	INTEGER => Shift goto 74
	FLOAT => Shift goto 75
	'(' => Shift goto 76
	'&' => Shift goto 77
	'{' => Shift goto 93
	"new" => Shift goto 84
	"null" => Shift goto 85
	'+' => Shift goto 86
	'-' => Shift goto 87
	'~' => Shift goto 88
	'!' => Shift goto 89
	'*' => Shift goto 90
[129]
	BOOLEAN => Shift goto 69
	IDENT => Shift goto 70
	DQSTRING => Shift goto 71
	SQSTRING => Shift goto 72
	CARDINAL => Shift goto 73
	INTEGER => Shift goto 74
	FLOAT => Shift goto 75
	'(' => Shift goto 76
	'&' => Shift goto 77
	'{' => Shift goto 93
	"new" => Shift goto 84
	"null" => Shift goto 85
	'+' => Shift goto 86
	'-' => Shift goto 87
	'~' => Shift goto 88
	'!' => Shift goto 89
	'*' => Shift goto 90
[130]
	BOOLEAN => Shift goto 69
	IDENT => Shift goto 70
	DQSTRING => Shift goto 71
	SQSTRING => Shift goto 72
	CARDINAL => Shift goto 73
	INTEGER => Shift goto 74
	FLOAT => Shift goto 75
	'(' => Shift goto 76
	'&' => Shift goto 77
	'{' => Shift goto 93
	"new" => Shift goto 84
	"null" => Shift goto 85
	'+' => Shift goto 86
	'-' => Shift goto 87
	'~' => Shift goto 88
	'!' => Shift goto 89
	'*' => Shift goto 90
[131]
	BOOLEAN => Shift goto 69
	IDENT => Shift goto 70
	DQSTRING => Shift goto 71
	SQSTRING => Shift goto 72
	CARDINAL => Shift goto 73
	INTEGER => Shift goto 74
	FLOAT => Shift goto 75
	'(' => Shift goto 76
	'&' => Shift goto 77
	'{' => Shift goto 93
	"new" => Shift goto 84
	"null" => Shift goto 85
	'+' => Shift goto 86
	'-' => Shift goto 87
	'~' => Shift goto 88
	'!' => Shift goto 89
	'*' => Shift goto 90
[132]
	BOOLEAN => Shift goto 69
	IDENT => Shift goto 70
	DQSTRING => Shift goto 71
	SQSTRING => Shift goto 72
	CARDINAL => Shift goto 73
	INTEGER => Shift goto 74
	FLOAT => Shift goto 75
	'(' => Shift goto 76
	'&' => Shift goto 77
	'{' => Shift goto 93
	"new" => Shift goto 84
	"null" => Shift goto 85
	'+' => Shift goto 86
	'-' => Shift goto 87
	'~' => Shift goto 88
	'!' => Shift goto 89
	'*' => Shift goto 90
[133]
	BOOLEAN => Shift goto 69
	IDENT => Shift goto 70
	DQSTRING => Shift goto 71
	SQSTRING => Shift goto 72
	CARDINAL => Shift goto 73
	INTEGER => Shift goto 74
	FLOAT => Shift goto 75
	'(' => Shift goto 76
	'&' => Shift goto 77
	'{' => Shift goto 93
	"new" => Shift goto 84
	"null" => Shift goto 85
	'+' => Shift goto 86
	'-' => Shift goto 87
	'~' => Shift goto 88
	'!' => Shift goto 89
	'*' => Shift goto 90
[134]
	BOOLEAN => Shift goto 69
	IDENT => Shift goto 70
	DQSTRING => Shift goto 71
	SQSTRING => Shift goto 72
	CARDINAL => Shift goto 73
	INTEGER => Shift goto 74
	FLOAT => Shift goto 75
	'(' => Shift goto 76
	'&' => Shift goto 77
	'{' => Shift goto 93
	"new" => Shift goto 84
	"null" => Shift goto 85
	'+' => Shift goto 86
	'-' => Shift goto 87
	'~' => Shift goto 88
	'!' => Shift goto 89
	'*' => Shift goto 90
[135]
	BOOLEAN => Shift goto 69
	IDENT => Shift goto 70
	DQSTRING => Shift goto 71
	SQSTRING => Shift goto 72
	CARDINAL => Shift goto 73
	INTEGER => Shift goto 74
	FLOAT => Shift goto 75
	'(' => Shift goto 76
	'&' => Shift goto 77
	'{' => Shift goto 93
	"new" => Shift goto 84
	"null" => Shift goto 85
	'+' => Shift goto 86
	'-' => Shift goto 87
	'~' => Shift goto 88
	'!' => Shift goto 89
	'*' => Shift goto 90
[136]
	BOOLEAN => Shift goto 69
	IDENT => Shift goto 70
	DQSTRING => Shift goto 71
	SQSTRING => Shift goto 72
	CARDINAL => Shift goto 73
	INTEGER => Shift goto 74
	FLOAT => Shift goto 75
	'(' => Shift goto 76
	'&' => Shift goto 77
	'{' => Shift goto 93
	"new" => Shift goto 84
	"null" => Shift goto 85
	'+' => Shift goto 86
	'-' => Shift goto 87
	'~' => Shift goto 88
	'!' => Shift goto 89
	'*' => Shift goto 90
[137]
	BOOLEAN => Shift goto 69
	IDENT => Shift goto 70
	DQSTRING => Shift goto 71
	SQSTRING => Shift goto 72
	CARDINAL => Shift goto 73
	INTEGER => Shift goto 74
	FLOAT => Shift goto 75
	'(' => Shift goto 76
	'&' => Shift goto 77
	'{' => Shift goto 93
	"new" => Shift goto 84
	"null" => Shift goto 85
	'+' => Shift goto 86
	'-' => Shift goto 87
	'~' => Shift goto 88
	'!' => Shift goto 89
	'*' => Shift goto 90
[138]
	BOOLEAN => Shift goto 69
	IDENT => Shift goto 70
	DQSTRING => Shift goto 71
	SQSTRING => Shift goto 72
	CARDINAL => Shift goto 73
	INTEGER => Shift goto 74
	FLOAT => Shift goto 75
	'(' => Shift goto 76
	'&' => Shift goto 77
	'{' => Shift goto 93
	"new" => Shift goto 84
	"null" => Shift goto 85
	'+' => Shift goto 86
	'-' => Shift goto 87
	'~' => Shift goto 88
	'!' => Shift goto 89
	'*' => Shift goto 90
[139]
	BOOLEAN => Shift goto 69
	IDENT => Shift goto 70
	DQSTRING => Shift goto 71
	SQSTRING => Shift goto 72
	CARDINAL => Shift goto 73
	INTEGER => Shift goto 74
	FLOAT => Shift goto 75
	'(' => Shift goto 76
	'&' => Shift goto 77
	'{' => Shift goto 93
	"new" => Shift goto 84
	"null" => Shift goto 85
	'+' => Shift goto 86
	'-' => Shift goto 87
	'~' => Shift goto 88
	'!' => Shift goto 89
	'*' => Shift goto 90
[140]
	BOOLEAN => Shift goto 69
	IDENT => Shift goto 70
	DQSTRING => Shift goto 71
	SQSTRING => Shift goto 72
	CARDINAL => Shift goto 73
	INTEGER => Shift goto 74
	FLOAT => Shift goto 75
	'(' => Shift goto 76
	'&' => Shift goto 77
	'{' => Shift goto 93
	"new" => Shift goto 84
	"null" => Shift goto 85
	'+' => Shift goto 86
	'-' => Shift goto 87
	'~' => Shift goto 88
	'!' => Shift goto 89
	'*' => Shift goto 90
[141]
	BOOLEAN => Shift goto 69
	IDENT => Shift goto 70
	DQSTRING => Shift goto 71
	SQSTRING => Shift goto 72
	CARDINAL => Shift goto 73
	INTEGER => Shift goto 74
	FLOAT => Shift goto 75
	'(' => Shift goto 76
	'&' => Shift goto 77
	'{' => Shift goto 93
	"new" => Shift goto 84
	"null" => Shift goto 85
	'+' => Shift goto 86
	'-' => Shift goto 87
	'~' => Shift goto 88
	'!' => Shift goto 89
	'*' => Shift goto 90
[142]
	BOOLEAN => Shift goto 69
	IDENT => Shift goto 70
	DQSTRING => Shift goto 71
	SQSTRING => Shift goto 72
	CARDINAL => Shift goto 73
	INTEGER => Shift goto 74
	FLOAT => Shift goto 75
	'(' => Shift goto 76
	'&' => Shift goto 77
	'{' => Shift goto 93
	"new" => Shift goto 84
	"null" => Shift goto 85
	'+' => Shift goto 86
	'-' => Shift goto 87
	'~' => Shift goto 88
	'!' => Shift goto 89
	'*' => Shift goto 90
[143]
	BOOLEAN => Shift goto 69
	IDENT => Shift goto 70
	DQSTRING => Shift goto 71
	SQSTRING => Shift goto 72
	CARDINAL => Shift goto 73
	INTEGER => Shift goto 74
	FLOAT => Shift goto 75
	'(' => Shift goto 76
	'&' => Shift goto 77
	'{' => Shift goto 93
	"new" => Shift goto 84
	"null" => Shift goto 85
	'+' => Shift goto 86
	'-' => Shift goto 87
	'~' => Shift goto 88
	'!' => Shift goto 89
	'*' => Shift goto 90
[144]
	BOOLEAN => Shift goto 69
	IDENT => Shift goto 70
	DQSTRING => Shift goto 71
	SQSTRING => Shift goto 72
	CARDINAL => Shift goto 73
	INTEGER => Shift goto 74
	FLOAT => Shift goto 75
	'(' => Shift goto 76
	'&' => Shift goto 77
	'{' => Shift goto 93
	"new" => Shift goto 84
	"null" => Shift goto 85
	'+' => Shift goto 86
	'-' => Shift goto 87
	'~' => Shift goto 88
	'!' => Shift goto 89
	'*' => Shift goto 90
[145]
	BOOLEAN => Shift goto 69
	IDENT => Shift goto 70
	DQSTRING => Shift goto 71
	SQSTRING => Shift goto 72
	CARDINAL => Shift goto 73
	INTEGER => Shift goto 74
	FLOAT => Shift goto 75
	'(' => Shift goto 76
	'&' => Shift goto 77
	'{' => Shift goto 93
	"new" => Shift goto 84
	"null" => Shift goto 85
	'+' => Shift goto 86
	'-' => Shift goto 87
	'~' => Shift goto 88
	'!' => Shift goto 89
	'*' => Shift goto 90
[146]
	BOOLEAN => Shift goto 69
	IDENT => Shift goto 70
	DQSTRING => Shift goto 71
	SQSTRING => Shift goto 72
	CARDINAL => Shift goto 73
	INTEGER => Shift goto 74
	FLOAT => Shift goto 75
	'(' => Shift goto 76
	'&' => Shift goto 77
	'{' => Shift goto 93
	"new" => Shift goto 84
	"null" => Shift goto 85
	'+' => Shift goto 86
	'-' => Shift goto 87
	'~' => Shift goto 88
	'!' => Shift goto 89
	'*' => Shift goto 90
[147]
	BOOLEAN => Shift goto 69
	IDENT => Shift goto 70
	DQSTRING => Shift goto 71
	SQSTRING => Shift goto 72
	CARDINAL => Shift goto 73
	INTEGER => Shift goto 74
	FLOAT => Shift goto 75
	'(' => Shift goto 76
	'&' => Shift goto 77
	'{' => Shift goto 93
	"new" => Shift goto 84
	"null" => Shift goto 85
	'+' => Shift goto 86
	'-' => Shift goto 87
	'~' => Shift goto 88
	'!' => Shift goto 89
	'*' => Shift goto 90
[148]
	BOOLEAN => Shift goto 69
	IDENT => Shift goto 70
	DQSTRING => Shift goto 71
	SQSTRING => Shift goto 72
	CARDINAL => Shift goto 73
	INTEGER => Shift goto 74
	FLOAT => Shift goto 75
	'(' => Shift goto 76
	'&' => Shift goto 77
	'{' => Shift goto 93
	"new" => Shift goto 84
	"null" => Shift goto 85
	'+' => Shift goto 86
	'-' => Shift goto 87
	'~' => Shift goto 88
	'!' => Shift goto 89
	'*' => Shift goto 90
[149]
	BOOLEAN => Shift goto 69
	IDENT => Shift goto 70
	DQSTRING => Shift goto 71
	SQSTRING => Shift goto 72
	CARDINAL => Shift goto 73
	INTEGER => Shift goto 74
	FLOAT => Shift goto 75
	'(' => Shift goto 76
	'&' => Shift goto 77
	'{' => Shift goto 93
	"new" => Shift goto 84
	"null" => Shift goto 85
	'+' => Shift goto 86
	'-' => Shift goto 87
	'~' => Shift goto 88
	'!' => Shift goto 89
	'*' => Shift goto 90
[150]
	BOOLEAN => Shift goto 69
	IDENT => Shift goto 70
	DQSTRING => Shift goto 71
	SQSTRING => Shift goto 72
	CARDINAL => Shift goto 73
	INTEGER => Shift goto 74
	FLOAT => Shift goto 75
	'(' => Shift goto 76
	'&' => Shift goto 77
	'{' => Shift goto 93
	"new" => Shift goto 84
	"null" => Shift goto 85
	'+' => Shift goto 86
	'-' => Shift goto 87
	'~' => Shift goto 88
	'!' => Shift goto 89
	'*' => Shift goto 90
[151]
	BOOLEAN => Shift goto 69
	IDENT => Shift goto 70
	DQSTRING => Shift goto 71
	SQSTRING => Shift goto 72
	CARDINAL => Shift goto 73
	INTEGER => Shift goto 74
	FLOAT => Shift goto 75
	'(' => Shift goto 76
	'&' => Shift goto 77
	'{' => Shift goto 93
	"new" => Shift goto 84
	"null" => Shift goto 85
	'+' => Shift goto 86
	'-' => Shift goto 87
	'~' => Shift goto 88
	'!' => Shift goto 89
	'*' => Shift goto 90
[152]
	BOOLEAN => Shift goto 69
	IDENT => Shift goto 70
	DQSTRING => Shift goto 71
	SQSTRING => Shift goto 72
	CARDINAL => Shift goto 73
	INTEGER => Shift goto 74
	FLOAT => Shift goto 75
	'(' => Shift goto 76
	'&' => Shift goto 77
	'{' => Shift goto 93
	"new" => Shift goto 84
	"null" => Shift goto 85
	'+' => Shift goto 86
	'-' => Shift goto 87
	'~' => Shift goto 88
	'!' => Shift goto 89
	'*' => Shift goto 90
[153]
	BOOLEAN => Shift goto 69
	IDENT => Shift goto 70
	DQSTRING => Shift goto 71
	SQSTRING => Shift goto 72
	CARDINAL => Shift goto 73
	INTEGER => Shift goto 74
	FLOAT => Shift goto 75
	'(' => Shift goto 76
	'&' => Shift goto 77
	'{' => Shift goto 93
	"new" => Shift goto 84
	"null" => Shift goto 85
	'+' => Shift goto 86
	'-' => Shift goto 87
	'~' => Shift goto 88
	'!' => Shift goto 89
	'*' => Shift goto 90
[154]
	BOOLEAN => Shift goto 69
	IDENT => Shift goto 70
	DQSTRING => Shift goto 71
	SQSTRING => Shift goto 72
	CARDINAL => Shift goto 73
	INTEGER => Shift goto 74
	FLOAT => Shift goto 75
	'(' => Shift goto 76
	'&' => Shift goto 77
	'{' => Shift goto 93
	"new" => Shift goto 84
	"null" => Shift goto 85
	'+' => Shift goto 86
	'-' => Shift goto 87
	'~' => Shift goto 88
	'!' => Shift goto 89
	'*' => Shift goto 90
[155]
	BOOLEAN => Shift goto 69
	IDENT => Shift goto 70
	DQSTRING => Shift goto 71
	SQSTRING => Shift goto 72
	CARDINAL => Shift goto 73
	INTEGER => Shift goto 74
	FLOAT => Shift goto 75
	'(' => Shift goto 76
	'&' => Shift goto 77
	'{' => Shift goto 93
	"new" => Shift goto 84
	"null" => Shift goto 85
	'+' => Shift goto 86
	'-' => Shift goto 87
	'~' => Shift goto 88
	'!' => Shift goto 89
	'*' => Shift goto 90
[156]
	IDENT => Shift goto 233
[157]
	IDENT => Reduce #1 indirection call count
	"->" => Shift goto 157
[158]
	'(' => Shift goto 123
	')' => Shift goto 235
	'&' => Shift goto 125
	'^' => Shift goto 126
	'=' => Shift goto 127
	'[' => Shift goto 128
	"+=" => Shift goto 129
	"-=" => Shift goto 130
	"*=" => Shift goto 131
	"/=" => Shift goto 132
	"%=" => Shift goto 133
	"&&=" => Shift goto 134
	"||=" => Shift goto 135
	"&=" => Shift goto 136
	"|=" => Shift goto 137
	"<<=" => Shift goto 138
	">>=" => Shift goto 139
	"||" => Shift goto 140
	"&&" => Shift goto 141
	'|' => Shift goto 142
	"==" => Shift goto 143
	"!=" => Shift goto 144
	"<=" => Shift goto 145
	'<' => Shift goto 146
	">=" => Shift goto 147
	'>' => Shift goto 148
	'+' => Shift goto 149
	'-' => Shift goto 150
	'*' => Shift goto 151
	'/' => Shift goto 152
	'%' => Shift goto 153
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'.' => Shift goto 156
	"->" => Shift goto 157
[159]
	'(' => Shift goto 123
	')' => Reduce #2 expression call operator "&"
	';' => Reduce #2 expression call operator "&"
	',' => Reduce #2 expression call operator "&"
	'&' => Reduce #2 expression call operator "&"
	'^' => Reduce #2 expression call operator "&"
	'}' => Reduce #2 expression call operator "&"
	'=' => Reduce #2 expression call operator "&"
	'[' => Shift goto 128
	']' => Reduce #2 expression call operator "&"
	"+=" => Reduce #2 expression call operator "&"
	"-=" => Reduce #2 expression call operator "&"
	"*=" => Reduce #2 expression call operator "&"
	"/=" => Reduce #2 expression call operator "&"
	"%=" => Reduce #2 expression call operator "&"
	"&&=" => Reduce #2 expression call operator "&"
	"||=" => Reduce #2 expression call operator "&"
	"&=" => Reduce #2 expression call operator "&"
	"|=" => Reduce #2 expression call operator "&"
	"<<=" => Reduce #2 expression call operator "&"
	">>=" => Reduce #2 expression call operator "&"
	"||" => Reduce #2 expression call operator "&"
	"&&" => Reduce #2 expression call operator "&"
	'|' => Reduce #2 expression call operator "&"
	"==" => Reduce #2 expression call operator "&"
	"!=" => Reduce #2 expression call operator "&"
	"<=" => Reduce #2 expression call operator "&"
	'<' => Reduce #2 expression call operator "&"
	">=" => Reduce #2 expression call operator "&"
	'>' => Reduce #2 expression call operator "&"
	'+' => Reduce #2 expression call operator "&"
	'-' => Reduce #2 expression call operator "&"
	'*' => Shift goto 151
	'/' => Shift goto 152
	'%' => Shift goto 153
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'.' => Shift goto 156
	"->" => Reduce #2 expression call operator "&"
[160]
	'}' => Shift goto 236
[161]
	'(' => Shift goto 123
	';' => Shift goto 124
	',' => Shift goto 237
	'&' => Shift goto 125
	'^' => Shift goto 126
	'}' => Reduce #1 expressionlist
	'=' => Shift goto 127
	'[' => Shift goto 128
	"+=" => Shift goto 129
	"-=" => Shift goto 130
	"*=" => Shift goto 131
	"/=" => Shift goto 132
	"%=" => Shift goto 133
	"&&=" => Shift goto 134
	"||=" => Shift goto 135
	"&=" => Shift goto 136
	"|=" => Shift goto 137
	"<<=" => Shift goto 138
	">>=" => Shift goto 139
	"||" => Shift goto 140
	"&&" => Shift goto 141
	'|' => Shift goto 142
	"==" => Shift goto 143
	"!=" => Shift goto 144
	"<=" => Shift goto 145
	'<' => Shift goto 146
	">=" => Shift goto 147
	'>' => Shift goto 148
	'+' => Shift goto 149
	'-' => Shift goto 150
	'*' => Shift goto 151
	'/' => Shift goto 152
	'%' => Shift goto 153
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'.' => Shift goto 156
	"->" => Shift goto 157
[162]
	'}' => Shift goto 238
[163]
	'(' => Reduce #2 expression call structure
	')' => Reduce #2 expression call structure
	';' => Reduce #2 expression call structure
	',' => Reduce #2 expression call structure
	'&' => Reduce #2 expression call structure
	'^' => Reduce #2 expression call structure
	'}' => Reduce #2 expression call structure
	'=' => Reduce #2 expression call structure
	'[' => Reduce #2 expression call structure
	']' => Reduce #2 expression call structure
	"+=" => Reduce #2 expression call structure
	"-=" => Reduce #2 expression call structure
	"*=" => Reduce #2 expression call structure
	"/=" => Reduce #2 expression call structure
	"%=" => Reduce #2 expression call structure
	"&&=" => Reduce #2 expression call structure
	"||=" => Reduce #2 expression call structure
	"&=" => Reduce #2 expression call structure
	"|=" => Reduce #2 expression call structure
	"<<=" => Reduce #2 expression call structure
	">>=" => Reduce #2 expression call structure
	"||" => Reduce #2 expression call structure
	"&&" => Reduce #2 expression call structure
	'|' => Reduce #2 expression call structure
	"==" => Reduce #2 expression call structure
	"!=" => Reduce #2 expression call structure
	"<=" => Reduce #2 expression call structure
	'<' => Reduce #2 expression call structure
	">=" => Reduce #2 expression call structure
	'>' => Reduce #2 expression call structure
	'+' => Reduce #2 expression call structure
	'-' => Reduce #2 expression call structure
	'*' => Reduce #2 expression call structure
	'/' => Reduce #2 expression call structure
	'%' => Reduce #2 expression call structure
	"<<" => Reduce #2 expression call structure
	">>" => Reduce #2 expression call structure
	'.' => Reduce #2 expression call structure
	"->" => Reduce #2 expression call structure
[164]
	';' => Shift goto 239
[165]
	'(' => Shift goto 123
	';' => Shift goto 240
	'&' => Shift goto 125
	'^' => Shift goto 126
	'=' => Shift goto 127
	'[' => Shift goto 128
	"+=" => Shift goto 129
	"-=" => Shift goto 130
	"*=" => Shift goto 131
	"/=" => Shift goto 132
	"%=" => Shift goto 133
	"&&=" => Shift goto 134
	"||=" => Shift goto 135
	"&=" => Shift goto 136
	"|=" => Shift goto 137
	"<<=" => Shift goto 138
	">>=" => Shift goto 139
	"||" => Shift goto 140
	"&&" => Shift goto 141
	'|' => Shift goto 142
	"==" => Shift goto 143
	"!=" => Shift goto 144
	"<=" => Shift goto 145
	'<' => Shift goto 146
	">=" => Shift goto 147
	'>' => Shift goto 148
	'+' => Shift goto 149
	'-' => Shift goto 150
	'*' => Shift goto 151
	'/' => Shift goto 152
	'%' => Shift goto 153
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'.' => Shift goto 156
	"->" => Shift goto 157
[166]
	'(' => Shift goto 123
	';' => Shift goto 241
	'&' => Shift goto 125
	'^' => Shift goto 126
	'=' => Shift goto 127
	'[' => Shift goto 128
	"+=" => Shift goto 129
	"-=" => Shift goto 130
	"*=" => Shift goto 131
	"/=" => Shift goto 132
	"%=" => Shift goto 133
	"&&=" => Shift goto 134
	"||=" => Shift goto 135
	"&=" => Shift goto 136
	"|=" => Shift goto 137
	"<<=" => Shift goto 138
	">>=" => Shift goto 139
	"||" => Shift goto 140
	"&&" => Shift goto 141
	'|' => Shift goto 142
	"==" => Shift goto 143
	"!=" => Shift goto 144
	"<=" => Shift goto 145
	'<' => Shift goto 146
	">=" => Shift goto 147
	'>' => Shift goto 148
	'+' => Shift goto 149
	'-' => Shift goto 150
	'*' => Shift goto 151
	'/' => Shift goto 152
	'%' => Shift goto 153
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'.' => Shift goto 156
	"->" => Shift goto 157
[167]
	BOOLEAN => Shift goto 69
	IDENT => Shift goto 70
	DQSTRING => Shift goto 71
	SQSTRING => Shift goto 72
	CARDINAL => Shift goto 73
	INTEGER => Shift goto 74
	FLOAT => Shift goto 75
	'(' => Shift goto 76
	'&' => Shift goto 77
	'{' => Shift goto 93
	"new" => Shift goto 84
	"null" => Shift goto 85
	'+' => Shift goto 86
	'-' => Shift goto 87
	'~' => Shift goto 88
	'!' => Shift goto 89
	'*' => Shift goto 90
[168]
	BOOLEAN => Shift goto 69
	IDENT => Shift goto 70
	DQSTRING => Shift goto 71
	SQSTRING => Shift goto 72
	CARDINAL => Shift goto 73
	INTEGER => Shift goto 74
	FLOAT => Shift goto 75
	'(' => Shift goto 76
	'&' => Shift goto 77
	'{' => Shift goto 93
	"new" => Shift goto 84
	"null" => Shift goto 85
	'+' => Shift goto 86
	'-' => Shift goto 87
	'~' => Shift goto 88
	'!' => Shift goto 89
	'*' => Shift goto 90
[169]
	':' => Shift goto 244
[170]
	'(' => Shift goto 123
	')' => Reduce #2 expression call operator "+"
	';' => Reduce #2 expression call operator "+"
	',' => Reduce #2 expression call operator "+"
	'&' => Reduce #2 expression call operator "+"
	'^' => Reduce #2 expression call operator "+"
	'}' => Reduce #2 expression call operator "+"
	'=' => Reduce #2 expression call operator "+"
	'[' => Shift goto 128
	']' => Reduce #2 expression call operator "+"
	"+=" => Reduce #2 expression call operator "+"
	"-=" => Reduce #2 expression call operator "+"
	"*=" => Reduce #2 expression call operator "+"
	"/=" => Reduce #2 expression call operator "+"
	"%=" => Reduce #2 expression call operator "+"
	"&&=" => Reduce #2 expression call operator "+"
	"||=" => Reduce #2 expression call operator "+"
	"&=" => Reduce #2 expression call operator "+"
	"|=" => Reduce #2 expression call operator "+"
	"<<=" => Reduce #2 expression call operator "+"
	">>=" => Reduce #2 expression call operator "+"
	"||" => Reduce #2 expression call operator "+"
	"&&" => Reduce #2 expression call operator "+"
	'|' => Reduce #2 expression call operator "+"
	"==" => Reduce #2 expression call operator "+"
	"!=" => Reduce #2 expression call operator "+"
	"<=" => Reduce #2 expression call operator "+"
	'<' => Reduce #2 expression call operator "+"
	">=" => Reduce #2 expression call operator "+"
	'>' => Reduce #2 expression call operator "+"
	'+' => Reduce #2 expression call operator "+"
	'-' => Reduce #2 expression call operator "+"
	'*' => Shift goto 151
	'/' => Shift goto 152
	'%' => Shift goto 153
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'.' => Shift goto 156
	"->" => Reduce #2 expression call operator "+"
[171]
	'(' => Shift goto 123
	')' => Reduce #2 expression call operator "-"
	';' => Reduce #2 expression call operator "-"
	',' => Reduce #2 expression call operator "-"
	'&' => Reduce #2 expression call operator "-"
	'^' => Reduce #2 expression call operator "-"
	'}' => Reduce #2 expression call operator "-"
	'=' => Reduce #2 expression call operator "-"
	'[' => Shift goto 128
	']' => Reduce #2 expression call operator "-"
	"+=" => Reduce #2 expression call operator "-"
	"-=" => Reduce #2 expression call operator "-"
	"*=" => Reduce #2 expression call operator "-"
	"/=" => Reduce #2 expression call operator "-"
	"%=" => Reduce #2 expression call operator "-"
	"&&=" => Reduce #2 expression call operator "-"
	"||=" => Reduce #2 expression call operator "-"
	"&=" => Reduce #2 expression call operator "-"
	"|=" => Reduce #2 expression call operator "-"
	"<<=" => Reduce #2 expression call operator "-"
	">>=" => Reduce #2 expression call operator "-"
	"||" => Reduce #2 expression call operator "-"
	"&&" => Reduce #2 expression call operator "-"
	'|' => Reduce #2 expression call operator "-"
	"==" => Reduce #2 expression call operator "-"
	"!=" => Reduce #2 expression call operator "-"
	"<=" => Reduce #2 expression call operator "-"
	'<' => Reduce #2 expression call operator "-"
	">=" => Reduce #2 expression call operator "-"
	'>' => Reduce #2 expression call operator "-"
	'+' => Reduce #2 expression call operator "-"
	'-' => Reduce #2 expression call operator "-"
	'*' => Shift goto 151
	'/' => Shift goto 152
	'%' => Shift goto 153
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'.' => Shift goto 156
	"->" => Reduce #2 expression call operator "-"
[172]
	'(' => Shift goto 123
	')' => Reduce #2 expression call operator "~"
	';' => Reduce #2 expression call operator "~"
	',' => Reduce #2 expression call operator "~"
	'&' => Reduce #2 expression call operator "~"
	'^' => Reduce #2 expression call operator "~"
	'}' => Reduce #2 expression call operator "~"
	'=' => Reduce #2 expression call operator "~"
	'[' => Shift goto 128
	']' => Reduce #2 expression call operator "~"
	"+=" => Reduce #2 expression call operator "~"
	"-=" => Reduce #2 expression call operator "~"
	"*=" => Reduce #2 expression call operator "~"
	"/=" => Reduce #2 expression call operator "~"
	"%=" => Reduce #2 expression call operator "~"
	"&&=" => Reduce #2 expression call operator "~"
	"||=" => Reduce #2 expression call operator "~"
	"&=" => Reduce #2 expression call operator "~"
	"|=" => Reduce #2 expression call operator "~"
	"<<=" => Reduce #2 expression call operator "~"
	">>=" => Reduce #2 expression call operator "~"
	"||" => Reduce #2 expression call operator "~"
	"&&" => Reduce #2 expression call operator "~"
	'|' => Reduce #2 expression call operator "~"
	"==" => Reduce #2 expression call operator "~"
	"!=" => Reduce #2 expression call operator "~"
	"<=" => Reduce #2 expression call operator "~"
	'<' => Reduce #2 expression call operator "~"
	">=" => Reduce #2 expression call operator "~"
	'>' => Reduce #2 expression call operator "~"
	'+' => Reduce #2 expression call operator "~"
	'-' => Reduce #2 expression call operator "~"
	'*' => Shift goto 151
	'/' => Shift goto 152
	'%' => Shift goto 153
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'.' => Shift goto 156
	"->" => Reduce #2 expression call operator "~"
[173]
	'(' => Shift goto 123
	')' => Reduce #2 expression call operator "!"
	';' => Reduce #2 expression call operator "!"
	',' => Reduce #2 expression call operator "!"
	'&' => Reduce #2 expression call operator "!"
	'^' => Reduce #2 expression call operator "!"
	'}' => Reduce #2 expression call operator "!"
	'=' => Reduce #2 expression call operator "!"
	'[' => Shift goto 128
	']' => Reduce #2 expression call operator "!"
	"+=" => Reduce #2 expression call operator "!"
	"-=" => Reduce #2 expression call operator "!"
	"*=" => Reduce #2 expression call operator "!"
	"/=" => Reduce #2 expression call operator "!"
	"%=" => Reduce #2 expression call operator "!"
	"&&=" => Reduce #2 expression call operator "!"
	"||=" => Reduce #2 expression call operator "!"
	"&=" => Reduce #2 expression call operator "!"
	"|=" => Reduce #2 expression call operator "!"
	"<<=" => Reduce #2 expression call operator "!"
	">>=" => Reduce #2 expression call operator "!"
	"||" => Reduce #2 expression call operator "!"
	"&&" => Reduce #2 expression call operator "!"
	'|' => Reduce #2 expression call operator "!"
	"==" => Reduce #2 expression call operator "!"
	"!=" => Reduce #2 expression call operator "!"
	"<=" => Reduce #2 expression call operator "!"
	'<' => Reduce #2 expression call operator "!"
	">=" => Reduce #2 expression call operator "!"
	'>' => Reduce #2 expression call operator "!"
	'+' => Reduce #2 expression call operator "!"
	'-' => Reduce #2 expression call operator "!"
	'*' => Shift goto 151
	'/' => Shift goto 152
	'%' => Shift goto 153
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'.' => Shift goto 156
	"->" => Reduce #2 expression call operator "!"
[174]
	'(' => Shift goto 123
	')' => Reduce #2 expression call operator "->"
	';' => Reduce #2 expression call operator "->"
	',' => Reduce #2 expression call operator "->"
	'&' => Reduce #2 expression call operator "->"
	'^' => Reduce #2 expression call operator "->"
	'}' => Reduce #2 expression call operator "->"
	'=' => Reduce #2 expression call operator "->"
	'[' => Shift goto 128
	']' => Reduce #2 expression call operator "->"
	"+=" => Reduce #2 expression call operator "->"
	"-=" => Reduce #2 expression call operator "->"
	"*=" => Reduce #2 expression call operator "->"
	"/=" => Reduce #2 expression call operator "->"
	"%=" => Reduce #2 expression call operator "->"
	"&&=" => Reduce #2 expression call operator "->"
	"||=" => Reduce #2 expression call operator "->"
	"&=" => Reduce #2 expression call operator "->"
	"|=" => Reduce #2 expression call operator "->"
	"<<=" => Reduce #2 expression call operator "->"
	">>=" => Reduce #2 expression call operator "->"
	"||" => Reduce #2 expression call operator "->"
	"&&" => Reduce #2 expression call operator "->"
	'|' => Reduce #2 expression call operator "->"
	"==" => Reduce #2 expression call operator "->"
	"!=" => Reduce #2 expression call operator "->"
	"<=" => Reduce #2 expression call operator "->"
	'<' => Reduce #2 expression call operator "->"
	">=" => Reduce #2 expression call operator "->"
	'>' => Reduce #2 expression call operator "->"
	'+' => Reduce #2 expression call operator "->"
	'-' => Reduce #2 expression call operator "->"
	'*' => Reduce #2 expression call operator "->"
	'/' => Reduce #2 expression call operator "->"
	'%' => Reduce #2 expression call operator "->"
	"<<" => Reduce #2 expression call operator "->"
	">>" => Reduce #2 expression call operator "->"
	'.' => Reduce #2 expression call operator "->"
	"->" => Reduce #2 expression call operator "->"
[175]
	'(' => Shift goto 123
	')' => Reduce #1 expressionlist
	',' => Shift goto 237
	'&' => Shift goto 125
	'^' => Shift goto 126
	'}' => Reduce #1 expressionlist
	'=' => Shift goto 127
	'[' => Shift goto 128
	']' => Reduce #1 expressionlist
	"+=" => Shift goto 129
	"-=" => Shift goto 130
	"*=" => Shift goto 131
	"/=" => Shift goto 132
	"%=" => Shift goto 133
	"&&=" => Shift goto 134
	"||=" => Shift goto 135
	"&=" => Shift goto 136
	"|=" => Shift goto 137
	"<<=" => Shift goto 138
	">>=" => Shift goto 139
	"||" => Shift goto 140
	"&&" => Shift goto 141
	'|' => Shift goto 142
	"==" => Shift goto 143
	"!=" => Shift goto 144
	"<=" => Shift goto 145
	'<' => Shift goto 146
	">=" => Shift goto 147
	'>' => Shift goto 148
	'+' => Shift goto 149
	'-' => Shift goto 150
	'*' => Shift goto 151
	'/' => Shift goto 152
	'%' => Shift goto 153
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'.' => Shift goto 156
	"->" => Shift goto 157
[176]
	';' => Reduce #5 variabledefinition call vardef_array
	'=' => Shift goto 245
[177]
	$ => Reduce #5 functiondefinition call funcdef
	BOOLEAN => Reduce #5 functiondefinition call funcdef
	IDENT => Reduce #5 functiondefinition call funcdef
	DQSTRING => Reduce #5 functiondefinition call funcdef
	SQSTRING => Reduce #5 functiondefinition call funcdef
	CARDINAL => Reduce #5 functiondefinition call funcdef
	INTEGER => Reduce #5 functiondefinition call funcdef
	FLOAT => Reduce #5 functiondefinition call funcdef
	"function" => Reduce #5 functiondefinition call funcdef
	'(' => Reduce #5 functiondefinition call funcdef
	"procedure" => Reduce #5 functiondefinition call funcdef
	"const" => Reduce #5 functiondefinition call funcdef
	'&' => Reduce #5 functiondefinition call funcdef
	"typedef" => Reduce #5 functiondefinition call funcdef
	"struct" => Reduce #5 functiondefinition call funcdef
	'{' => Reduce #5 functiondefinition call funcdef
	'}' => Reduce #5 functiondefinition call funcdef
	"interface" => Reduce #5 functiondefinition call funcdef
	"class" => Reduce #5 functiondefinition call funcdef
	"private" => Reduce #5 functiondefinition call funcdef
	"public" => Reduce #5 functiondefinition call funcdef
	"constructor" => Reduce #5 functiondefinition call funcdef
	"destructor" => Reduce #5 functiondefinition call funcdef
	"main" => Reduce #5 functiondefinition call funcdef
	"var" => Reduce #5 functiondefinition call funcdef
	"return" => Reduce #5 functiondefinition call funcdef
	"delete" => Reduce #5 functiondefinition call funcdef
	"if" => Reduce #5 functiondefinition call funcdef
	"while" => Reduce #5 functiondefinition call funcdef
	"new" => Reduce #5 functiondefinition call funcdef
	"null" => Reduce #5 functiondefinition call funcdef
	'+' => Reduce #5 functiondefinition call funcdef
	'-' => Reduce #5 functiondefinition call funcdef
	'~' => Reduce #5 functiondefinition call funcdef
	'!' => Reduce #5 functiondefinition call funcdef
	'*' => Reduce #5 functiondefinition call funcdef
[178]
	IDENT => Shift goto 246
[179]
	')' => Shift goto 247
[180]
	')' => Reduce #1 parameterlist call paramdeflist
[181]
	')' => Reduce #1 parameters
	',' => Shift goto 248
[182]
	IDENT => Reduce #5 typespec call typespec "const^^&"
	')' => Reduce #5 typespec call typespec "const^^&"
	"..." => Reduce #5 typespec call typespec "const^^&"
	',' => Reduce #5 typespec call typespec "const^^&"
	':' => Reduce #5 typespec call typespec "const^^&"
[183]
	$ => Reduce #5 structdefinition call structdef
	IDENT => Reduce #5 structdefinition call structdef
	"function" => Reduce #5 structdefinition call structdef
	"procedure" => Reduce #5 structdefinition call structdef
	"const" => Reduce #5 structdefinition call structdef
	"typedef" => Reduce #5 structdefinition call structdef
	"struct" => Reduce #5 structdefinition call structdef
	'}' => Reduce #5 structdefinition call structdef
	"interface" => Reduce #5 structdefinition call structdef
	"class" => Reduce #5 structdefinition call structdef
	"private" => Reduce #5 structdefinition call structdef
	"public" => Reduce #5 structdefinition call structdef
	"constructor" => Reduce #5 structdefinition call structdef
	"destructor" => Reduce #5 structdefinition call structdef
	"main" => Reduce #5 structdefinition call structdef
[184]
	'}' => Reduce #2 struct_definitionlist
[185]
	$ => Reduce #5 interfacedefinition call interfacedef
	IDENT => Reduce #5 interfacedefinition call interfacedef
	"function" => Reduce #5 interfacedefinition call interfacedef
	"procedure" => Reduce #5 interfacedefinition call interfacedef
	"const" => Reduce #5 interfacedefinition call interfacedef
	"typedef" => Reduce #5 interfacedefinition call interfacedef
	"struct" => Reduce #5 interfacedefinition call interfacedef
	'}' => Reduce #5 interfacedefinition call interfacedef
	"interface" => Reduce #5 interfacedefinition call interfacedef
	"class" => Reduce #5 interfacedefinition call interfacedef
	"private" => Reduce #5 interfacedefinition call interfacedef
	"public" => Reduce #5 interfacedefinition call interfacedef
	"constructor" => Reduce #5 interfacedefinition call interfacedef
	"destructor" => Reduce #5 interfacedefinition call interfacedef
	"main" => Reduce #5 interfacedefinition call interfacedef
[186]
	'}' => Reduce #2 interface_definitionlist
[187]
	IDENT => Shift goto 249
[188]
	'(' => Shift goto 250
[189]
	$ => Reduce #5 classdefinition call classdef
	IDENT => Reduce #5 classdefinition call classdef
	"function" => Reduce #5 classdefinition call classdef
	"procedure" => Reduce #5 classdefinition call classdef
	"const" => Reduce #5 classdefinition call classdef
	"typedef" => Reduce #5 classdefinition call classdef
	"struct" => Reduce #5 classdefinition call classdef
	'}' => Reduce #5 classdefinition call classdef
	"interface" => Reduce #5 classdefinition call classdef
	"class" => Reduce #5 classdefinition call classdef
	"private" => Reduce #5 classdefinition call classdef
	"public" => Reduce #5 classdefinition call classdef
	"constructor" => Reduce #5 classdefinition call classdef
	"destructor" => Reduce #5 classdefinition call classdef
	"main" => Reduce #5 classdefinition call classdef
[190]
	'}' => Reduce #2 class_definitionlist
[191]
	'(' => Shift goto 97
[192]
	BOOLEAN => Shift goto 69
	IDENT => Shift goto 70
	DQSTRING => Shift goto 71
	SQSTRING => Shift goto 72
	CARDINAL => Shift goto 73
	INTEGER => Shift goto 74
	FLOAT => Shift goto 75
	"function" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	'(' => Shift goto 76
	"procedure" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	'&' => Shift goto 77
	"typedef" => Shift goto 19
	'{' => Shift goto 78
	'}' => Reduce #0 statementlist
	"private" => Shift goto 23
	"public" => Shift goto 24
	"var" => Shift goto 79
	"return" => Shift goto 80
	"delete" => Shift goto 81
	"if" => Shift goto 82
	"while" => Shift goto 83
	"new" => Shift goto 84
	"null" => Shift goto 85
	'+' => Shift goto 86
	'-' => Shift goto 87
	'~' => Shift goto 88
	'!' => Shift goto 89
	'*' => Shift goto 90
[193]
	IDENT => Shift goto 17
[194]
	IDENT => Shift goto 17
	"function" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	"procedure" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	"const" => Shift goto 18
	"typedef" => Shift goto 19
	"struct" => Shift goto 20
	'}' => Reduce #0 class_definitionlist
	"interface" => Shift goto 21
	"class" => Shift goto 22
	"private" => Shift goto 23
	"public" => Shift goto 24
	"constructor" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	"destructor" => Shift goto 114
[195]
	IDENT => Shift goto 17
	')' => Reduce #0 extern_paramlist
	"..." => Reduce #0 extern_paramlist
	"const" => Shift goto 18
[196]
	')' => Reduce #1 extern_paramlist call extern_paramdeflist
	"..." => Reduce #1 extern_paramlist call extern_paramdeflist
[197]
	')' => Shift goto 256
	"..." => Shift goto 257
[198]
	')' => Reduce #1 extern_parameters
	"..." => Reduce #1 extern_parameters
	',' => Shift goto 258
[199]
	'(' => Reduce #3 iexpression call rep_operator "->"
	')' => Reduce #3 iexpression call rep_operator "->"
	';' => Reduce #3 iexpression call rep_operator "->"
	',' => Reduce #3 iexpression call rep_operator "->"
	'&' => Reduce #3 iexpression call rep_operator "->"
	'^' => Reduce #3 iexpression call rep_operator "->"
	'}' => Reduce #3 iexpression call rep_operator "->"
	'=' => Reduce #3 iexpression call rep_operator "->"
	'[' => Reduce #3 iexpression call rep_operator "->"
	']' => Reduce #3 iexpression call rep_operator "->"
	"+=" => Reduce #3 iexpression call rep_operator "->"
	"-=" => Reduce #3 iexpression call rep_operator "->"
	"*=" => Reduce #3 iexpression call rep_operator "->"
	"/=" => Reduce #3 iexpression call rep_operator "->"
	"%=" => Reduce #3 iexpression call rep_operator "->"
	"&&=" => Reduce #3 iexpression call rep_operator "->"
	"||=" => Reduce #3 iexpression call rep_operator "->"
	"&=" => Reduce #3 iexpression call rep_operator "->"
	"|=" => Reduce #3 iexpression call rep_operator "->"
	"<<=" => Reduce #3 iexpression call rep_operator "->"
	">>=" => Reduce #3 iexpression call rep_operator "->"
	"||" => Reduce #3 iexpression call rep_operator "->"
	"&&" => Reduce #3 iexpression call rep_operator "->"
	'|' => Reduce #3 iexpression call rep_operator "->"
	"==" => Reduce #3 iexpression call rep_operator "->"
	"!=" => Reduce #3 iexpression call rep_operator "->"
	"<=" => Reduce #3 iexpression call rep_operator "->"
	'<' => Reduce #3 iexpression call rep_operator "->"
	">=" => Reduce #3 iexpression call rep_operator "->"
	'>' => Reduce #3 iexpression call rep_operator "->"
	'+' => Reduce #3 iexpression call rep_operator "->"
	'-' => Reduce #3 iexpression call rep_operator "->"
	'*' => Reduce #3 iexpression call rep_operator "->"
	'/' => Reduce #3 iexpression call rep_operator "->"
	'%' => Reduce #3 iexpression call rep_operator "->"
	"<<" => Reduce #3 iexpression call rep_operator "->"
	">>" => Reduce #3 iexpression call rep_operator "->"
	'.' => Reduce #3 iexpression call rep_operator "->"
	"->" => Reduce #3 iexpression call rep_operator "->"
[200]
	')' => Shift goto 259
[201]
	'(' => Reduce #3 expression call operator "()"
	')' => Reduce #3 expression call operator "()"
	';' => Reduce #3 expression call operator "()"
	',' => Reduce #3 expression call operator "()"
	'&' => Reduce #3 expression call operator "()"
	'^' => Reduce #3 expression call operator "()"
	'}' => Reduce #3 expression call operator "()"
	'=' => Reduce #3 expression call operator "()"
	'[' => Reduce #3 expression call operator "()"
	']' => Reduce #3 expression call operator "()"
	"+=" => Reduce #3 expression call operator "()"
	"-=" => Reduce #3 expression call operator "()"
	"*=" => Reduce #3 expression call operator "()"
	"/=" => Reduce #3 expression call operator "()"
	"%=" => Reduce #3 expression call operator "()"
	"&&=" => Reduce #3 expression call operator "()"
	"||=" => Reduce #3 expression call operator "()"
	"&=" => Reduce #3 expression call operator "()"
	"|=" => Reduce #3 expression call operator "()"
	"<<=" => Reduce #3 expression call operator "()"
	">>=" => Reduce #3 expression call operator "()"
	"||" => Reduce #3 expression call operator "()"
	"&&" => Reduce #3 expression call operator "()"
	'|' => Reduce #3 expression call operator "()"
	"==" => Reduce #3 expression call operator "()"
	"!=" => Reduce #3 expression call operator "()"
	"<=" => Reduce #3 expression call operator "()"
	'<' => Reduce #3 expression call operator "()"
	">=" => Reduce #3 expression call operator "()"
	'>' => Reduce #3 expression call operator "()"
	'+' => Reduce #3 expression call operator "()"
	'-' => Reduce #3 expression call operator "()"
	'*' => Reduce #3 expression call operator "()"
	'/' => Reduce #3 expression call operator "()"
	'%' => Reduce #3 expression call operator "()"
	"<<" => Reduce #3 expression call operator "()"
	">>" => Reduce #3 expression call operator "()"
	'.' => Reduce #3 expression call operator "()"
	"->" => Reduce #3 expression call operator "()"
[202]
	'(' => Shift goto 123
	')' => Reduce #3 expression call operator "&"
	';' => Reduce #3 expression call operator "&"
	',' => Reduce #3 expression call operator "&"
	'&' => Reduce #3 expression call operator "&"
	'^' => Reduce #3 expression call operator "&"
	'}' => Reduce #3 expression call operator "&"
	'=' => Reduce #3 expression call operator "&"
	'[' => Shift goto 128
	']' => Reduce #3 expression call operator "&"
	"+=" => Reduce #3 expression call operator "&"
	"-=" => Reduce #3 expression call operator "&"
	"*=" => Reduce #3 expression call operator "&"
	"/=" => Reduce #3 expression call operator "&"
	"%=" => Reduce #3 expression call operator "&"
	"&&=" => Reduce #3 expression call operator "&"
	"||=" => Reduce #3 expression call operator "&"
	"&=" => Reduce #3 expression call operator "&"
	"|=" => Reduce #3 expression call operator "&"
	"<<=" => Reduce #3 expression call operator "&"
	">>=" => Reduce #3 expression call operator "&"
	"||" => Reduce #3 expression call operator "&"
	"&&" => Reduce #3 expression call operator "&"
	'|' => Reduce #3 expression call operator "&"
	"==" => Shift goto 143
	"!=" => Shift goto 144
	"<=" => Shift goto 145
	'<' => Shift goto 146
	">=" => Shift goto 147
	'>' => Shift goto 148
	'+' => Shift goto 149
	'-' => Shift goto 150
	'*' => Shift goto 151
	'/' => Shift goto 152
	'%' => Shift goto 153
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'.' => Shift goto 156
	"->" => Reduce #3 expression call operator "&"
[203]
	'(' => Shift goto 123
	')' => Reduce #3 expression call operator "^"
	';' => Reduce #3 expression call operator "^"
	',' => Reduce #3 expression call operator "^"
	'&' => Reduce #3 expression call operator "^"
	'^' => Reduce #3 expression call operator "^"
	'}' => Reduce #3 expression call operator "^"
	'=' => Reduce #3 expression call operator "^"
	'[' => Shift goto 128
	']' => Reduce #3 expression call operator "^"
	"+=" => Reduce #3 expression call operator "^"
	"-=" => Reduce #3 expression call operator "^"
	"*=" => Reduce #3 expression call operator "^"
	"/=" => Reduce #3 expression call operator "^"
	"%=" => Reduce #3 expression call operator "^"
	"&&=" => Reduce #3 expression call operator "^"
	"||=" => Reduce #3 expression call operator "^"
	"&=" => Reduce #3 expression call operator "^"
	"|=" => Reduce #3 expression call operator "^"
	"<<=" => Reduce #3 expression call operator "^"
	">>=" => Reduce #3 expression call operator "^"
	"||" => Reduce #3 expression call operator "^"
	"&&" => Reduce #3 expression call operator "^"
	'|' => Reduce #3 expression call operator "^"
	"==" => Shift goto 143
	"!=" => Shift goto 144
	"<=" => Shift goto 145
	'<' => Shift goto 146
	">=" => Shift goto 147
	'>' => Shift goto 148
	'+' => Shift goto 149
	'-' => Shift goto 150
	'*' => Shift goto 151
	'/' => Shift goto 152
	'%' => Shift goto 153
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'.' => Shift goto 156
	"->" => Reduce #3 expression call operator "^"
[204]
	'(' => Shift goto 123
	')' => Reduce #3 expression call operator "="
	';' => Reduce #3 expression call operator "="
	',' => Reduce #3 expression call operator "="
	'&' => Shift goto 125
	'^' => Shift goto 126
	'}' => Reduce #3 expression call operator "="
	'=' => Reduce #3 expression call operator "="
	'[' => Shift goto 128
	']' => Reduce #3 expression call operator "="
	"+=" => Reduce #3 expression call operator "="
	"-=" => Reduce #3 expression call operator "="
	"*=" => Reduce #3 expression call operator "="
	"/=" => Reduce #3 expression call operator "="
	"%=" => Reduce #3 expression call operator "="
	"&&=" => Reduce #3 expression call operator "="
	"||=" => Reduce #3 expression call operator "="
	"&=" => Reduce #3 expression call operator "="
	"|=" => Reduce #3 expression call operator "="
	"<<=" => Reduce #3 expression call operator "="
	">>=" => Reduce #3 expression call operator "="
	"||" => Shift goto 140
	"&&" => Shift goto 141
	'|' => Shift goto 142
	"==" => Shift goto 143
	"!=" => Shift goto 144
	"<=" => Shift goto 145
	'<' => Shift goto 146
	">=" => Shift goto 147
	'>' => Shift goto 148
	'+' => Shift goto 149
	'-' => Shift goto 150
	'*' => Shift goto 151
	'/' => Shift goto 152
	'%' => Shift goto 153
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'.' => Shift goto 156
	"->" => Reduce #3 expression call operator "="
[205]
	']' => Shift goto 260
[206]
	'(' => Shift goto 123
	')' => Reduce #3 expression call assign_operator "+"
	';' => Reduce #3 expression call assign_operator "+"
	',' => Reduce #3 expression call assign_operator "+"
	'&' => Shift goto 125
	'^' => Shift goto 126
	'}' => Reduce #3 expression call assign_operator "+"
	'=' => Reduce #3 expression call assign_operator "+"
	'[' => Shift goto 128
	']' => Reduce #3 expression call assign_operator "+"
	"+=" => Reduce #3 expression call assign_operator "+"
	"-=" => Reduce #3 expression call assign_operator "+"
	"*=" => Reduce #3 expression call assign_operator "+"
	"/=" => Reduce #3 expression call assign_operator "+"
	"%=" => Reduce #3 expression call assign_operator "+"
	"&&=" => Reduce #3 expression call assign_operator "+"
	"||=" => Reduce #3 expression call assign_operator "+"
	"&=" => Reduce #3 expression call assign_operator "+"
	"|=" => Reduce #3 expression call assign_operator "+"
	"<<=" => Reduce #3 expression call assign_operator "+"
	">>=" => Reduce #3 expression call assign_operator "+"
	"||" => Shift goto 140
	"&&" => Shift goto 141
	'|' => Shift goto 142
	"==" => Shift goto 143
	"!=" => Shift goto 144
	"<=" => Shift goto 145
	'<' => Shift goto 146
	">=" => Shift goto 147
	'>' => Shift goto 148
	'+' => Shift goto 149
	'-' => Shift goto 150
	'*' => Shift goto 151
	'/' => Shift goto 152
	'%' => Shift goto 153
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'.' => Shift goto 156
	"->" => Reduce #3 expression call assign_operator "+"
[207]
	'(' => Shift goto 123
	')' => Reduce #3 expression call assign_operator "-"
	';' => Reduce #3 expression call assign_operator "-"
	',' => Reduce #3 expression call assign_operator "-"
	'&' => Shift goto 125
	'^' => Shift goto 126
	'}' => Reduce #3 expression call assign_operator "-"
	'=' => Reduce #3 expression call assign_operator "-"
	'[' => Shift goto 128
	']' => Reduce #3 expression call assign_operator "-"
	"+=" => Reduce #3 expression call assign_operator "-"
	"-=" => Reduce #3 expression call assign_operator "-"
	"*=" => Reduce #3 expression call assign_operator "-"
	"/=" => Reduce #3 expression call assign_operator "-"
	"%=" => Reduce #3 expression call assign_operator "-"
	"&&=" => Reduce #3 expression call assign_operator "-"
	"||=" => Reduce #3 expression call assign_operator "-"
	"&=" => Reduce #3 expression call assign_operator "-"
	"|=" => Reduce #3 expression call assign_operator "-"
	"<<=" => Reduce #3 expression call assign_operator "-"
	">>=" => Reduce #3 expression call assign_operator "-"
	"||" => Shift goto 140
	"&&" => Shift goto 141
	'|' => Shift goto 142
	"==" => Shift goto 143
	"!=" => Shift goto 144
	"<=" => Shift goto 145
	'<' => Shift goto 146
	">=" => Shift goto 147
	'>' => Shift goto 148
	'+' => Shift goto 149
	'-' => Shift goto 150
	'*' => Shift goto 151
	'/' => Shift goto 152
	'%' => Shift goto 153
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'.' => Shift goto 156
	"->" => Reduce #3 expression call assign_operator "-"
[208]
	'(' => Shift goto 123
	')' => Reduce #3 expression call assign_operator "*"
	';' => Reduce #3 expression call assign_operator "*"
	',' => Reduce #3 expression call assign_operator "*"
	'&' => Shift goto 125
	'^' => Shift goto 126
	'}' => Reduce #3 expression call assign_operator "*"
	'=' => Reduce #3 expression call assign_operator "*"
	'[' => Shift goto 128
	']' => Reduce #3 expression call assign_operator "*"
	"+=" => Reduce #3 expression call assign_operator "*"
	"-=" => Reduce #3 expression call assign_operator "*"
	"*=" => Reduce #3 expression call assign_operator "*"
	"/=" => Reduce #3 expression call assign_operator "*"
	"%=" => Reduce #3 expression call assign_operator "*"
	"&&=" => Reduce #3 expression call assign_operator "*"
	"||=" => Reduce #3 expression call assign_operator "*"
	"&=" => Reduce #3 expression call assign_operator "*"
	"|=" => Reduce #3 expression call assign_operator "*"
	"<<=" => Reduce #3 expression call assign_operator "*"
	">>=" => Reduce #3 expression call assign_operator "*"
	"||" => Shift goto 140
	"&&" => Shift goto 141
	'|' => Shift goto 142
	"==" => Shift goto 143
	"!=" => Shift goto 144
	"<=" => Shift goto 145
	'<' => Shift goto 146
	">=" => Shift goto 147
	'>' => Shift goto 148
	'+' => Shift goto 149
	'-' => Shift goto 150
	'*' => Shift goto 151
	'/' => Shift goto 152
	'%' => Shift goto 153
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'.' => Shift goto 156
	"->" => Reduce #3 expression call assign_operator "*"
[209]
	'(' => Shift goto 123
	')' => Reduce #3 expression call assign_operator "/"
	';' => Reduce #3 expression call assign_operator "/"
	',' => Reduce #3 expression call assign_operator "/"
	'&' => Shift goto 125
	'^' => Shift goto 126
	'}' => Reduce #3 expression call assign_operator "/"
	'=' => Reduce #3 expression call assign_operator "/"
	'[' => Shift goto 128
	']' => Reduce #3 expression call assign_operator "/"
	"+=" => Reduce #3 expression call assign_operator "/"
	"-=" => Reduce #3 expression call assign_operator "/"
	"*=" => Reduce #3 expression call assign_operator "/"
	"/=" => Reduce #3 expression call assign_operator "/"
	"%=" => Reduce #3 expression call assign_operator "/"
	"&&=" => Reduce #3 expression call assign_operator "/"
	"||=" => Reduce #3 expression call assign_operator "/"
	"&=" => Reduce #3 expression call assign_operator "/"
	"|=" => Reduce #3 expression call assign_operator "/"
	"<<=" => Reduce #3 expression call assign_operator "/"
	">>=" => Reduce #3 expression call assign_operator "/"
	"||" => Shift goto 140
	"&&" => Shift goto 141
	'|' => Shift goto 142
	"==" => Shift goto 143
	"!=" => Shift goto 144
	"<=" => Shift goto 145
	'<' => Shift goto 146
	">=" => Shift goto 147
	'>' => Shift goto 148
	'+' => Shift goto 149
	'-' => Shift goto 150
	'*' => Shift goto 151
	'/' => Shift goto 152
	'%' => Shift goto 153
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'.' => Shift goto 156
	"->" => Reduce #3 expression call assign_operator "/"
[210]
	'(' => Shift goto 123
	')' => Reduce #3 expression call assign_operator "%"
	';' => Reduce #3 expression call assign_operator "%"
	',' => Reduce #3 expression call assign_operator "%"
	'&' => Shift goto 125
	'^' => Shift goto 126
	'}' => Reduce #3 expression call assign_operator "%"
	'=' => Reduce #3 expression call assign_operator "%"
	'[' => Shift goto 128
	']' => Reduce #3 expression call assign_operator "%"
	"+=" => Reduce #3 expression call assign_operator "%"
	"-=" => Reduce #3 expression call assign_operator "%"
	"*=" => Reduce #3 expression call assign_operator "%"
	"/=" => Reduce #3 expression call assign_operator "%"
	"%=" => Reduce #3 expression call assign_operator "%"
	"&&=" => Reduce #3 expression call assign_operator "%"
	"||=" => Reduce #3 expression call assign_operator "%"
	"&=" => Reduce #3 expression call assign_operator "%"
	"|=" => Reduce #3 expression call assign_operator "%"
	"<<=" => Reduce #3 expression call assign_operator "%"
	">>=" => Reduce #3 expression call assign_operator "%"
	"||" => Shift goto 140
	"&&" => Shift goto 141
	'|' => Shift goto 142
	"==" => Shift goto 143
	"!=" => Shift goto 144
	"<=" => Shift goto 145
	'<' => Shift goto 146
	">=" => Shift goto 147
	'>' => Shift goto 148
	'+' => Shift goto 149
	'-' => Shift goto 150
	'*' => Shift goto 151
	'/' => Shift goto 152
	'%' => Shift goto 153
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'.' => Shift goto 156
	"->" => Reduce #3 expression call assign_operator "%"
[211]
	'(' => Shift goto 123
	')' => Reduce #3 expression call assign_operator "&&"
	';' => Reduce #3 expression call assign_operator "&&"
	',' => Reduce #3 expression call assign_operator "&&"
	'&' => Shift goto 125
	'^' => Shift goto 126
	'}' => Reduce #3 expression call assign_operator "&&"
	'=' => Reduce #3 expression call assign_operator "&&"
	'[' => Shift goto 128
	']' => Reduce #3 expression call assign_operator "&&"
	"+=" => Reduce #3 expression call assign_operator "&&"
	"-=" => Reduce #3 expression call assign_operator "&&"
	"*=" => Reduce #3 expression call assign_operator "&&"
	"/=" => Reduce #3 expression call assign_operator "&&"
	"%=" => Reduce #3 expression call assign_operator "&&"
	"&&=" => Reduce #3 expression call assign_operator "&&"
	"||=" => Reduce #3 expression call assign_operator "&&"
	"&=" => Reduce #3 expression call assign_operator "&&"
	"|=" => Reduce #3 expression call assign_operator "&&"
	"<<=" => Reduce #3 expression call assign_operator "&&"
	">>=" => Reduce #3 expression call assign_operator "&&"
	"||" => Shift goto 140
	"&&" => Shift goto 141
	'|' => Shift goto 142
	"==" => Shift goto 143
	"!=" => Shift goto 144
	"<=" => Shift goto 145
	'<' => Shift goto 146
	">=" => Shift goto 147
	'>' => Shift goto 148
	'+' => Shift goto 149
	'-' => Shift goto 150
	'*' => Shift goto 151
	'/' => Shift goto 152
	'%' => Shift goto 153
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'.' => Shift goto 156
	"->" => Reduce #3 expression call assign_operator "&&"
[212]
	'(' => Shift goto 123
	')' => Reduce #3 expression call assign_operator "||"
	';' => Reduce #3 expression call assign_operator "||"
	',' => Reduce #3 expression call assign_operator "||"
	'&' => Shift goto 125
	'^' => Shift goto 126
	'}' => Reduce #3 expression call assign_operator "||"
	'=' => Reduce #3 expression call assign_operator "||"
	'[' => Shift goto 128
	']' => Reduce #3 expression call assign_operator "||"
	"+=" => Reduce #3 expression call assign_operator "||"
	"-=" => Reduce #3 expression call assign_operator "||"
	"*=" => Reduce #3 expression call assign_operator "||"
	"/=" => Reduce #3 expression call assign_operator "||"
	"%=" => Reduce #3 expression call assign_operator "||"
	"&&=" => Reduce #3 expression call assign_operator "||"
	"||=" => Reduce #3 expression call assign_operator "||"
	"&=" => Reduce #3 expression call assign_operator "||"
	"|=" => Reduce #3 expression call assign_operator "||"
	"<<=" => Reduce #3 expression call assign_operator "||"
	">>=" => Reduce #3 expression call assign_operator "||"
	"||" => Shift goto 140
	"&&" => Shift goto 141
	'|' => Shift goto 142
	"==" => Shift goto 143
	"!=" => Shift goto 144
	"<=" => Shift goto 145
	'<' => Shift goto 146
	">=" => Shift goto 147
	'>' => Shift goto 148
	'+' => Shift goto 149
	'-' => Shift goto 150
	'*' => Shift goto 151
	'/' => Shift goto 152
	'%' => Shift goto 153
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'.' => Shift goto 156
	"->" => Reduce #3 expression call assign_operator "||"
[213]
	'(' => Shift goto 123
	')' => Reduce #3 expression call assign_operator "&"
	';' => Reduce #3 expression call assign_operator "&"
	',' => Reduce #3 expression call assign_operator "&"
	'&' => Shift goto 125
	'^' => Shift goto 126
	'}' => Reduce #3 expression call assign_operator "&"
	'=' => Reduce #3 expression call assign_operator "&"
	'[' => Shift goto 128
	']' => Reduce #3 expression call assign_operator "&"
	"+=" => Reduce #3 expression call assign_operator "&"
	"-=" => Reduce #3 expression call assign_operator "&"
	"*=" => Reduce #3 expression call assign_operator "&"
	"/=" => Reduce #3 expression call assign_operator "&"
	"%=" => Reduce #3 expression call assign_operator "&"
	"&&=" => Reduce #3 expression call assign_operator "&"
	"||=" => Reduce #3 expression call assign_operator "&"
	"&=" => Reduce #3 expression call assign_operator "&"
	"|=" => Reduce #3 expression call assign_operator "&"
	"<<=" => Reduce #3 expression call assign_operator "&"
	">>=" => Reduce #3 expression call assign_operator "&"
	"||" => Shift goto 140
	"&&" => Shift goto 141
	'|' => Shift goto 142
	"==" => Shift goto 143
	"!=" => Shift goto 144
	"<=" => Shift goto 145
	'<' => Shift goto 146
	">=" => Shift goto 147
	'>' => Shift goto 148
	'+' => Shift goto 149
	'-' => Shift goto 150
	'*' => Shift goto 151
	'/' => Shift goto 152
	'%' => Shift goto 153
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'.' => Shift goto 156
	"->" => Reduce #3 expression call assign_operator "&"
[214]
	'(' => Shift goto 123
	')' => Reduce #3 expression call assign_operator "|"
	';' => Reduce #3 expression call assign_operator "|"
	',' => Reduce #3 expression call assign_operator "|"
	'&' => Shift goto 125
	'^' => Shift goto 126
	'}' => Reduce #3 expression call assign_operator "|"
	'=' => Reduce #3 expression call assign_operator "|"
	'[' => Shift goto 128
	']' => Reduce #3 expression call assign_operator "|"
	"+=" => Reduce #3 expression call assign_operator "|"
	"-=" => Reduce #3 expression call assign_operator "|"
	"*=" => Reduce #3 expression call assign_operator "|"
	"/=" => Reduce #3 expression call assign_operator "|"
	"%=" => Reduce #3 expression call assign_operator "|"
	"&&=" => Reduce #3 expression call assign_operator "|"
	"||=" => Reduce #3 expression call assign_operator "|"
	"&=" => Reduce #3 expression call assign_operator "|"
	"|=" => Reduce #3 expression call assign_operator "|"
	"<<=" => Reduce #3 expression call assign_operator "|"
	">>=" => Reduce #3 expression call assign_operator "|"
	"||" => Shift goto 140
	"&&" => Shift goto 141
	'|' => Shift goto 142
	"==" => Shift goto 143
	"!=" => Shift goto 144
	"<=" => Shift goto 145
	'<' => Shift goto 146
	">=" => Shift goto 147
	'>' => Shift goto 148
	'+' => Shift goto 149
	'-' => Shift goto 150
	'*' => Shift goto 151
	'/' => Shift goto 152
	'%' => Shift goto 153
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'.' => Shift goto 156
	"->" => Reduce #3 expression call assign_operator "|"
[215]
	'(' => Shift goto 123
	')' => Reduce #3 expression call assign_operator "<<"
	';' => Reduce #3 expression call assign_operator "<<"
	',' => Reduce #3 expression call assign_operator "<<"
	'&' => Shift goto 125
	'^' => Shift goto 126
	'}' => Reduce #3 expression call assign_operator "<<"
	'=' => Reduce #3 expression call assign_operator "<<"
	'[' => Shift goto 128
	']' => Reduce #3 expression call assign_operator "<<"
	"+=" => Reduce #3 expression call assign_operator "<<"
	"-=" => Reduce #3 expression call assign_operator "<<"
	"*=" => Reduce #3 expression call assign_operator "<<"
	"/=" => Reduce #3 expression call assign_operator "<<"
	"%=" => Reduce #3 expression call assign_operator "<<"
	"&&=" => Reduce #3 expression call assign_operator "<<"
	"||=" => Reduce #3 expression call assign_operator "<<"
	"&=" => Reduce #3 expression call assign_operator "<<"
	"|=" => Reduce #3 expression call assign_operator "<<"
	"<<=" => Reduce #3 expression call assign_operator "<<"
	">>=" => Reduce #3 expression call assign_operator "<<"
	"||" => Shift goto 140
	"&&" => Shift goto 141
	'|' => Shift goto 142
	"==" => Shift goto 143
	"!=" => Shift goto 144
	"<=" => Shift goto 145
	'<' => Shift goto 146
	">=" => Shift goto 147
	'>' => Shift goto 148
	'+' => Shift goto 149
	'-' => Shift goto 150
	'*' => Shift goto 151
	'/' => Shift goto 152
	'%' => Shift goto 153
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'.' => Shift goto 156
	"->" => Reduce #3 expression call assign_operator "<<"
[216]
	'(' => Shift goto 123
	')' => Reduce #3 expression call assign_operator ">>"
	';' => Reduce #3 expression call assign_operator ">>"
	',' => Reduce #3 expression call assign_operator ">>"
	'&' => Shift goto 125
	'^' => Shift goto 126
	'}' => Reduce #3 expression call assign_operator ">>"
	'=' => Reduce #3 expression call assign_operator ">>"
	'[' => Shift goto 128
	']' => Reduce #3 expression call assign_operator ">>"
	"+=" => Reduce #3 expression call assign_operator ">>"
	"-=" => Reduce #3 expression call assign_operator ">>"
	"*=" => Reduce #3 expression call assign_operator ">>"
	"/=" => Reduce #3 expression call assign_operator ">>"
	"%=" => Reduce #3 expression call assign_operator ">>"
	"&&=" => Reduce #3 expression call assign_operator ">>"
	"||=" => Reduce #3 expression call assign_operator ">>"
	"&=" => Reduce #3 expression call assign_operator ">>"
	"|=" => Reduce #3 expression call assign_operator ">>"
	"<<=" => Reduce #3 expression call assign_operator ">>"
	">>=" => Reduce #3 expression call assign_operator ">>"
	"||" => Shift goto 140
	"&&" => Shift goto 141
	'|' => Shift goto 142
	"==" => Shift goto 143
	"!=" => Shift goto 144
	"<=" => Shift goto 145
	'<' => Shift goto 146
	">=" => Shift goto 147
	'>' => Shift goto 148
	'+' => Shift goto 149
	'-' => Shift goto 150
	'*' => Shift goto 151
	'/' => Shift goto 152
	'%' => Shift goto 153
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'.' => Shift goto 156
	"->" => Reduce #3 expression call assign_operator ">>"
[217]
	'(' => Shift goto 123
	')' => Reduce #3 expression call operator "||"
	';' => Reduce #3 expression call operator "||"
	',' => Reduce #3 expression call operator "||"
	'&' => Shift goto 125
	'^' => Shift goto 126
	'}' => Reduce #3 expression call operator "||"
	'=' => Reduce #3 expression call operator "||"
	'[' => Shift goto 128
	']' => Reduce #3 expression call operator "||"
	"+=" => Reduce #3 expression call operator "||"
	"-=" => Reduce #3 expression call operator "||"
	"*=" => Reduce #3 expression call operator "||"
	"/=" => Reduce #3 expression call operator "||"
	"%=" => Reduce #3 expression call operator "||"
	"&&=" => Reduce #3 expression call operator "||"
	"||=" => Reduce #3 expression call operator "||"
	"&=" => Reduce #3 expression call operator "||"
	"|=" => Reduce #3 expression call operator "||"
	"<<=" => Reduce #3 expression call operator "||"
	">>=" => Reduce #3 expression call operator "||"
	"||" => Reduce #3 expression call operator "||"
	"&&" => Shift goto 141
	'|' => Shift goto 142
	"==" => Shift goto 143
	"!=" => Shift goto 144
	"<=" => Shift goto 145
	'<' => Shift goto 146
	">=" => Shift goto 147
	'>' => Shift goto 148
	'+' => Shift goto 149
	'-' => Shift goto 150
	'*' => Shift goto 151
	'/' => Shift goto 152
	'%' => Shift goto 153
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'.' => Shift goto 156
	"->" => Reduce #3 expression call operator "||"
[218]
	'(' => Shift goto 123
	')' => Reduce #3 expression call operator "&&"
	';' => Reduce #3 expression call operator "&&"
	',' => Reduce #3 expression call operator "&&"
	'&' => Shift goto 125
	'^' => Shift goto 126
	'}' => Reduce #3 expression call operator "&&"
	'=' => Reduce #3 expression call operator "&&"
	'[' => Shift goto 128
	']' => Reduce #3 expression call operator "&&"
	"+=" => Reduce #3 expression call operator "&&"
	"-=" => Reduce #3 expression call operator "&&"
	"*=" => Reduce #3 expression call operator "&&"
	"/=" => Reduce #3 expression call operator "&&"
	"%=" => Reduce #3 expression call operator "&&"
	"&&=" => Reduce #3 expression call operator "&&"
	"||=" => Reduce #3 expression call operator "&&"
	"&=" => Reduce #3 expression call operator "&&"
	"|=" => Reduce #3 expression call operator "&&"
	"<<=" => Reduce #3 expression call operator "&&"
	">>=" => Reduce #3 expression call operator "&&"
	"||" => Reduce #3 expression call operator "&&"
	"&&" => Reduce #3 expression call operator "&&"
	'|' => Shift goto 142
	"==" => Shift goto 143
	"!=" => Shift goto 144
	"<=" => Shift goto 145
	'<' => Shift goto 146
	">=" => Shift goto 147
	'>' => Shift goto 148
	'+' => Shift goto 149
	'-' => Shift goto 150
	'*' => Shift goto 151
	'/' => Shift goto 152
	'%' => Shift goto 153
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'.' => Shift goto 156
	"->" => Reduce #3 expression call operator "&&"
[219]
	'(' => Shift goto 123
	')' => Reduce #3 expression call operator "|"
	';' => Reduce #3 expression call operator "|"
	',' => Reduce #3 expression call operator "|"
	'&' => Shift goto 125
	'^' => Shift goto 126
	'}' => Reduce #3 expression call operator "|"
	'=' => Reduce #3 expression call operator "|"
	'[' => Shift goto 128
	']' => Reduce #3 expression call operator "|"
	"+=" => Reduce #3 expression call operator "|"
	"-=" => Reduce #3 expression call operator "|"
	"*=" => Reduce #3 expression call operator "|"
	"/=" => Reduce #3 expression call operator "|"
	"%=" => Reduce #3 expression call operator "|"
	"&&=" => Reduce #3 expression call operator "|"
	"||=" => Reduce #3 expression call operator "|"
	"&=" => Reduce #3 expression call operator "|"
	"|=" => Reduce #3 expression call operator "|"
	"<<=" => Reduce #3 expression call operator "|"
	">>=" => Reduce #3 expression call operator "|"
	"||" => Reduce #3 expression call operator "|"
	"&&" => Reduce #3 expression call operator "|"
	'|' => Reduce #3 expression call operator "|"
	"==" => Shift goto 143
	"!=" => Shift goto 144
	"<=" => Shift goto 145
	'<' => Shift goto 146
	">=" => Shift goto 147
	'>' => Shift goto 148
	'+' => Shift goto 149
	'-' => Shift goto 150
	'*' => Shift goto 151
	'/' => Shift goto 152
	'%' => Shift goto 153
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'.' => Shift goto 156
	"->" => Reduce #3 expression call operator "|"
[220]
	'(' => Shift goto 123
	')' => Reduce #3 expression call operator "=="
	';' => Reduce #3 expression call operator "=="
	',' => Reduce #3 expression call operator "=="
	'&' => Reduce #3 expression call operator "=="
	'^' => Reduce #3 expression call operator "=="
	'}' => Reduce #3 expression call operator "=="
	'=' => Reduce #3 expression call operator "=="
	'[' => Shift goto 128
	']' => Reduce #3 expression call operator "=="
	"+=" => Reduce #3 expression call operator "=="
	"-=" => Reduce #3 expression call operator "=="
	"*=" => Reduce #3 expression call operator "=="
	"/=" => Reduce #3 expression call operator "=="
	"%=" => Reduce #3 expression call operator "=="
	"&&=" => Reduce #3 expression call operator "=="
	"||=" => Reduce #3 expression call operator "=="
	"&=" => Reduce #3 expression call operator "=="
	"|=" => Reduce #3 expression call operator "=="
	"<<=" => Reduce #3 expression call operator "=="
	">>=" => Reduce #3 expression call operator "=="
	"||" => Reduce #3 expression call operator "=="
	"&&" => Reduce #3 expression call operator "=="
	'|' => Reduce #3 expression call operator "=="
	"==" => Reduce #3 expression call operator "=="
	"!=" => Reduce #3 expression call operator "=="
	"<=" => Reduce #3 expression call operator "=="
	'<' => Reduce #3 expression call operator "=="
	">=" => Reduce #3 expression call operator "=="
	'>' => Reduce #3 expression call operator "=="
	'+' => Shift goto 149
	'-' => Shift goto 150
	'*' => Shift goto 151
	'/' => Shift goto 152
	'%' => Shift goto 153
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'.' => Shift goto 156
	"->" => Reduce #3 expression call operator "=="
[221]
	'(' => Shift goto 123
	')' => Reduce #3 expression call operator "!="
	';' => Reduce #3 expression call operator "!="
	',' => Reduce #3 expression call operator "!="
	'&' => Reduce #3 expression call operator "!="
	'^' => Reduce #3 expression call operator "!="
	'}' => Reduce #3 expression call operator "!="
	'=' => Reduce #3 expression call operator "!="
	'[' => Shift goto 128
	']' => Reduce #3 expression call operator "!="
	"+=" => Reduce #3 expression call operator "!="
	"-=" => Reduce #3 expression call operator "!="
	"*=" => Reduce #3 expression call operator "!="
	"/=" => Reduce #3 expression call operator "!="
	"%=" => Reduce #3 expression call operator "!="
	"&&=" => Reduce #3 expression call operator "!="
	"||=" => Reduce #3 expression call operator "!="
	"&=" => Reduce #3 expression call operator "!="
	"|=" => Reduce #3 expression call operator "!="
	"<<=" => Reduce #3 expression call operator "!="
	">>=" => Reduce #3 expression call operator "!="
	"||" => Reduce #3 expression call operator "!="
	"&&" => Reduce #3 expression call operator "!="
	'|' => Reduce #3 expression call operator "!="
	"==" => Reduce #3 expression call operator "!="
	"!=" => Reduce #3 expression call operator "!="
	"<=" => Reduce #3 expression call operator "!="
	'<' => Reduce #3 expression call operator "!="
	">=" => Reduce #3 expression call operator "!="
	'>' => Reduce #3 expression call operator "!="
	'+' => Shift goto 149
	'-' => Shift goto 150
	'*' => Shift goto 151
	'/' => Shift goto 152
	'%' => Shift goto 153
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'.' => Shift goto 156
	"->" => Reduce #3 expression call operator "!="
[222]
	'(' => Shift goto 123
	')' => Reduce #3 expression call operator "<="
	';' => Reduce #3 expression call operator "<="
	',' => Reduce #3 expression call operator "<="
	'&' => Reduce #3 expression call operator "<="
	'^' => Reduce #3 expression call operator "<="
	'}' => Reduce #3 expression call operator "<="
	'=' => Reduce #3 expression call operator "<="
	'[' => Shift goto 128
	']' => Reduce #3 expression call operator "<="
	"+=" => Reduce #3 expression call operator "<="
	"-=" => Reduce #3 expression call operator "<="
	"*=" => Reduce #3 expression call operator "<="
	"/=" => Reduce #3 expression call operator "<="
	"%=" => Reduce #3 expression call operator "<="
	"&&=" => Reduce #3 expression call operator "<="
	"||=" => Reduce #3 expression call operator "<="
	"&=" => Reduce #3 expression call operator "<="
	"|=" => Reduce #3 expression call operator "<="
	"<<=" => Reduce #3 expression call operator "<="
	">>=" => Reduce #3 expression call operator "<="
	"||" => Reduce #3 expression call operator "<="
	"&&" => Reduce #3 expression call operator "<="
	'|' => Reduce #3 expression call operator "<="
	"==" => Reduce #3 expression call operator "<="
	"!=" => Reduce #3 expression call operator "<="
	"<=" => Reduce #3 expression call operator "<="
	'<' => Reduce #3 expression call operator "<="
	">=" => Reduce #3 expression call operator "<="
	'>' => Reduce #3 expression call operator "<="
	'+' => Shift goto 149
	'-' => Shift goto 150
	'*' => Shift goto 151
	'/' => Shift goto 152
	'%' => Shift goto 153
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'.' => Shift goto 156
	"->" => Reduce #3 expression call operator "<="
[223]
	'(' => Shift goto 123
	')' => Reduce #3 expression call operator "<"
	';' => Reduce #3 expression call operator "<"
	',' => Reduce #3 expression call operator "<"
	'&' => Reduce #3 expression call operator "<"
	'^' => Reduce #3 expression call operator "<"
	'}' => Reduce #3 expression call operator "<"
	'=' => Reduce #3 expression call operator "<"
	'[' => Shift goto 128
	']' => Reduce #3 expression call operator "<"
	"+=" => Reduce #3 expression call operator "<"
	"-=" => Reduce #3 expression call operator "<"
	"*=" => Reduce #3 expression call operator "<"
	"/=" => Reduce #3 expression call operator "<"
	"%=" => Reduce #3 expression call operator "<"
	"&&=" => Reduce #3 expression call operator "<"
	"||=" => Reduce #3 expression call operator "<"
	"&=" => Reduce #3 expression call operator "<"
	"|=" => Reduce #3 expression call operator "<"
	"<<=" => Reduce #3 expression call operator "<"
	">>=" => Reduce #3 expression call operator "<"
	"||" => Reduce #3 expression call operator "<"
	"&&" => Reduce #3 expression call operator "<"
	'|' => Reduce #3 expression call operator "<"
	"==" => Reduce #3 expression call operator "<"
	"!=" => Reduce #3 expression call operator "<"
	"<=" => Reduce #3 expression call operator "<"
	'<' => Reduce #3 expression call operator "<"
	">=" => Reduce #3 expression call operator "<"
	'>' => Reduce #3 expression call operator "<"
	'+' => Shift goto 149
	'-' => Shift goto 150
	'*' => Shift goto 151
	'/' => Shift goto 152
	'%' => Shift goto 153
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'.' => Shift goto 156
	"->" => Reduce #3 expression call operator "<"
[224]
	'(' => Shift goto 123
	')' => Reduce #3 expression call operator ">="
	';' => Reduce #3 expression call operator ">="
	',' => Reduce #3 expression call operator ">="
	'&' => Reduce #3 expression call operator ">="
	'^' => Reduce #3 expression call operator ">="
	'}' => Reduce #3 expression call operator ">="
	'=' => Reduce #3 expression call operator ">="
	'[' => Shift goto 128
	']' => Reduce #3 expression call operator ">="
	"+=" => Reduce #3 expression call operator ">="
	"-=" => Reduce #3 expression call operator ">="
	"*=" => Reduce #3 expression call operator ">="
	"/=" => Reduce #3 expression call operator ">="
	"%=" => Reduce #3 expression call operator ">="
	"&&=" => Reduce #3 expression call operator ">="
	"||=" => Reduce #3 expression call operator ">="
	"&=" => Reduce #3 expression call operator ">="
	"|=" => Reduce #3 expression call operator ">="
	"<<=" => Reduce #3 expression call operator ">="
	">>=" => Reduce #3 expression call operator ">="
	"||" => Reduce #3 expression call operator ">="
	"&&" => Reduce #3 expression call operator ">="
	'|' => Reduce #3 expression call operator ">="
	"==" => Reduce #3 expression call operator ">="
	"!=" => Reduce #3 expression call operator ">="
	"<=" => Reduce #3 expression call operator ">="
	'<' => Reduce #3 expression call operator ">="
	">=" => Reduce #3 expression call operator ">="
	'>' => Reduce #3 expression call operator ">="
	'+' => Shift goto 149
	'-' => Shift goto 150
	'*' => Shift goto 151
	'/' => Shift goto 152
	'%' => Shift goto 153
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'.' => Shift goto 156
	"->" => Reduce #3 expression call operator ">="
[225]
	'(' => Shift goto 123
	')' => Reduce #3 expression call operator ">"
	';' => Reduce #3 expression call operator ">"
	',' => Reduce #3 expression call operator ">"
	'&' => Reduce #3 expression call operator ">"
	'^' => Reduce #3 expression call operator ">"
	'}' => Reduce #3 expression call operator ">"
	'=' => Reduce #3 expression call operator ">"
	'[' => Shift goto 128
	']' => Reduce #3 expression call operator ">"
	"+=" => Reduce #3 expression call operator ">"
	"-=" => Reduce #3 expression call operator ">"
	"*=" => Reduce #3 expression call operator ">"
	"/=" => Reduce #3 expression call operator ">"
	"%=" => Reduce #3 expression call operator ">"
	"&&=" => Reduce #3 expression call operator ">"
	"||=" => Reduce #3 expression call operator ">"
	"&=" => Reduce #3 expression call operator ">"
	"|=" => Reduce #3 expression call operator ">"
	"<<=" => Reduce #3 expression call operator ">"
	">>=" => Reduce #3 expression call operator ">"
	"||" => Reduce #3 expression call operator ">"
	"&&" => Reduce #3 expression call operator ">"
	'|' => Reduce #3 expression call operator ">"
	"==" => Reduce #3 expression call operator ">"
	"!=" => Reduce #3 expression call operator ">"
	"<=" => Reduce #3 expression call operator ">"
	'<' => Reduce #3 expression call operator ">"
	">=" => Reduce #3 expression call operator ">"
	'>' => Reduce #3 expression call operator ">"
	'+' => Shift goto 149
	'-' => Shift goto 150
	'*' => Shift goto 151
	'/' => Shift goto 152
	'%' => Shift goto 153
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'.' => Shift goto 156
	"->" => Reduce #3 expression call operator ">"
[226]
	'(' => Shift goto 123
	')' => Reduce #3 expression call operator "+"
	';' => Reduce #3 expression call operator "+"
	',' => Reduce #3 expression call operator "+"
	'&' => Reduce #3 expression call operator "+"
	'^' => Reduce #3 expression call operator "+"
	'}' => Reduce #3 expression call operator "+"
	'=' => Reduce #3 expression call operator "+"
	'[' => Shift goto 128
	']' => Reduce #3 expression call operator "+"
	"+=" => Reduce #3 expression call operator "+"
	"-=" => Reduce #3 expression call operator "+"
	"*=" => Reduce #3 expression call operator "+"
	"/=" => Reduce #3 expression call operator "+"
	"%=" => Reduce #3 expression call operator "+"
	"&&=" => Reduce #3 expression call operator "+"
	"||=" => Reduce #3 expression call operator "+"
	"&=" => Reduce #3 expression call operator "+"
	"|=" => Reduce #3 expression call operator "+"
	"<<=" => Reduce #3 expression call operator "+"
	">>=" => Reduce #3 expression call operator "+"
	"||" => Reduce #3 expression call operator "+"
	"&&" => Reduce #3 expression call operator "+"
	'|' => Reduce #3 expression call operator "+"
	"==" => Reduce #3 expression call operator "+"
	"!=" => Reduce #3 expression call operator "+"
	"<=" => Reduce #3 expression call operator "+"
	'<' => Reduce #3 expression call operator "+"
	">=" => Reduce #3 expression call operator "+"
	'>' => Reduce #3 expression call operator "+"
	'+' => Reduce #3 expression call operator "+"
	'-' => Reduce #3 expression call operator "+"
	'*' => Shift goto 151
	'/' => Shift goto 152
	'%' => Shift goto 153
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'.' => Shift goto 156
	"->" => Reduce #3 expression call operator "+"
[227]
	'(' => Shift goto 123
	')' => Reduce #3 expression call operator "-"
	';' => Reduce #3 expression call operator "-"
	',' => Reduce #3 expression call operator "-"
	'&' => Reduce #3 expression call operator "-"
	'^' => Reduce #3 expression call operator "-"
	'}' => Reduce #3 expression call operator "-"
	'=' => Reduce #3 expression call operator "-"
	'[' => Shift goto 128
	']' => Reduce #3 expression call operator "-"
	"+=" => Reduce #3 expression call operator "-"
	"-=" => Reduce #3 expression call operator "-"
	"*=" => Reduce #3 expression call operator "-"
	"/=" => Reduce #3 expression call operator "-"
	"%=" => Reduce #3 expression call operator "-"
	"&&=" => Reduce #3 expression call operator "-"
	"||=" => Reduce #3 expression call operator "-"
	"&=" => Reduce #3 expression call operator "-"
	"|=" => Reduce #3 expression call operator "-"
	"<<=" => Reduce #3 expression call operator "-"
	">>=" => Reduce #3 expression call operator "-"
	"||" => Reduce #3 expression call operator "-"
	"&&" => Reduce #3 expression call operator "-"
	'|' => Reduce #3 expression call operator "-"
	"==" => Reduce #3 expression call operator "-"
	"!=" => Reduce #3 expression call operator "-"
	"<=" => Reduce #3 expression call operator "-"
	'<' => Reduce #3 expression call operator "-"
	">=" => Reduce #3 expression call operator "-"
	'>' => Reduce #3 expression call operator "-"
	'+' => Reduce #3 expression call operator "-"
	'-' => Reduce #3 expression call operator "-"
	'*' => Shift goto 151
	'/' => Shift goto 152
	'%' => Shift goto 153
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'.' => Shift goto 156
	"->" => Reduce #3 expression call operator "-"
[228]
	'(' => Shift goto 123
	')' => Reduce #3 expression call operator "*"
	';' => Reduce #3 expression call operator "*"
	',' => Reduce #3 expression call operator "*"
	'&' => Reduce #3 expression call operator "*"
	'^' => Reduce #3 expression call operator "*"
	'}' => Reduce #3 expression call operator "*"
	'=' => Reduce #3 expression call operator "*"
	'[' => Shift goto 128
	']' => Reduce #3 expression call operator "*"
	"+=" => Reduce #3 expression call operator "*"
	"-=" => Reduce #3 expression call operator "*"
	"*=" => Reduce #3 expression call operator "*"
	"/=" => Reduce #3 expression call operator "*"
	"%=" => Reduce #3 expression call operator "*"
	"&&=" => Reduce #3 expression call operator "*"
	"||=" => Reduce #3 expression call operator "*"
	"&=" => Reduce #3 expression call operator "*"
	"|=" => Reduce #3 expression call operator "*"
	"<<=" => Reduce #3 expression call operator "*"
	">>=" => Reduce #3 expression call operator "*"
	"||" => Reduce #3 expression call operator "*"
	"&&" => Reduce #3 expression call operator "*"
	'|' => Reduce #3 expression call operator "*"
	"==" => Reduce #3 expression call operator "*"
	"!=" => Reduce #3 expression call operator "*"
	"<=" => Reduce #3 expression call operator "*"
	'<' => Reduce #3 expression call operator "*"
	">=" => Reduce #3 expression call operator "*"
	'>' => Reduce #3 expression call operator "*"
	'+' => Reduce #3 expression call operator "*"
	'-' => Reduce #3 expression call operator "*"
	'*' => Reduce #3 expression call operator "*"
	'/' => Reduce #3 expression call operator "*"
	'%' => Reduce #3 expression call operator "*"
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'.' => Shift goto 156
	"->" => Reduce #3 expression call operator "*"
[229]
	'(' => Shift goto 123
	')' => Reduce #3 expression call operator "/"
	';' => Reduce #3 expression call operator "/"
	',' => Reduce #3 expression call operator "/"
	'&' => Reduce #3 expression call operator "/"
	'^' => Reduce #3 expression call operator "/"
	'}' => Reduce #3 expression call operator "/"
	'=' => Reduce #3 expression call operator "/"
	'[' => Shift goto 128
	']' => Reduce #3 expression call operator "/"
	"+=" => Reduce #3 expression call operator "/"
	"-=" => Reduce #3 expression call operator "/"
	"*=" => Reduce #3 expression call operator "/"
	"/=" => Reduce #3 expression call operator "/"
	"%=" => Reduce #3 expression call operator "/"
	"&&=" => Reduce #3 expression call operator "/"
	"||=" => Reduce #3 expression call operator "/"
	"&=" => Reduce #3 expression call operator "/"
	"|=" => Reduce #3 expression call operator "/"
	"<<=" => Reduce #3 expression call operator "/"
	">>=" => Reduce #3 expression call operator "/"
	"||" => Reduce #3 expression call operator "/"
	"&&" => Reduce #3 expression call operator "/"
	'|' => Reduce #3 expression call operator "/"
	"==" => Reduce #3 expression call operator "/"
	"!=" => Reduce #3 expression call operator "/"
	"<=" => Reduce #3 expression call operator "/"
	'<' => Reduce #3 expression call operator "/"
	">=" => Reduce #3 expression call operator "/"
	'>' => Reduce #3 expression call operator "/"
	'+' => Reduce #3 expression call operator "/"
	'-' => Reduce #3 expression call operator "/"
	'*' => Reduce #3 expression call operator "/"
	'/' => Reduce #3 expression call operator "/"
	'%' => Reduce #3 expression call operator "/"
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'.' => Shift goto 156
	"->" => Reduce #3 expression call operator "/"
[230]
	'(' => Shift goto 123
	')' => Reduce #3 expression call operator "%"
	';' => Reduce #3 expression call operator "%"
	',' => Reduce #3 expression call operator "%"
	'&' => Reduce #3 expression call operator "%"
	'^' => Reduce #3 expression call operator "%"
	'}' => Reduce #3 expression call operator "%"
	'=' => Reduce #3 expression call operator "%"
	'[' => Shift goto 128
	']' => Reduce #3 expression call operator "%"
	"+=" => Reduce #3 expression call operator "%"
	"-=" => Reduce #3 expression call operator "%"
	"*=" => Reduce #3 expression call operator "%"
	"/=" => Reduce #3 expression call operator "%"
	"%=" => Reduce #3 expression call operator "%"
	"&&=" => Reduce #3 expression call operator "%"
	"||=" => Reduce #3 expression call operator "%"
	"&=" => Reduce #3 expression call operator "%"
	"|=" => Reduce #3 expression call operator "%"
	"<<=" => Reduce #3 expression call operator "%"
	">>=" => Reduce #3 expression call operator "%"
	"||" => Reduce #3 expression call operator "%"
	"&&" => Reduce #3 expression call operator "%"
	'|' => Reduce #3 expression call operator "%"
	"==" => Reduce #3 expression call operator "%"
	"!=" => Reduce #3 expression call operator "%"
	"<=" => Reduce #3 expression call operator "%"
	'<' => Reduce #3 expression call operator "%"
	">=" => Reduce #3 expression call operator "%"
	'>' => Reduce #3 expression call operator "%"
	'+' => Reduce #3 expression call operator "%"
	'-' => Reduce #3 expression call operator "%"
	'*' => Reduce #3 expression call operator "%"
	'/' => Reduce #3 expression call operator "%"
	'%' => Reduce #3 expression call operator "%"
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'.' => Shift goto 156
	"->" => Reduce #3 expression call operator "%"
[231]
	'(' => Shift goto 123
	')' => Reduce #3 expression call operator "<<"
	';' => Reduce #3 expression call operator "<<"
	',' => Reduce #3 expression call operator "<<"
	'&' => Reduce #3 expression call operator "<<"
	'^' => Reduce #3 expression call operator "<<"
	'}' => Reduce #3 expression call operator "<<"
	'=' => Reduce #3 expression call operator "<<"
	'[' => Shift goto 128
	']' => Reduce #3 expression call operator "<<"
	"+=" => Reduce #3 expression call operator "<<"
	"-=" => Reduce #3 expression call operator "<<"
	"*=" => Reduce #3 expression call operator "<<"
	"/=" => Reduce #3 expression call operator "<<"
	"%=" => Reduce #3 expression call operator "<<"
	"&&=" => Reduce #3 expression call operator "<<"
	"||=" => Reduce #3 expression call operator "<<"
	"&=" => Reduce #3 expression call operator "<<"
	"|=" => Reduce #3 expression call operator "<<"
	"<<=" => Reduce #3 expression call operator "<<"
	">>=" => Reduce #3 expression call operator "<<"
	"||" => Reduce #3 expression call operator "<<"
	"&&" => Reduce #3 expression call operator "<<"
	'|' => Reduce #3 expression call operator "<<"
	"==" => Reduce #3 expression call operator "<<"
	"!=" => Reduce #3 expression call operator "<<"
	"<=" => Reduce #3 expression call operator "<<"
	'<' => Reduce #3 expression call operator "<<"
	">=" => Reduce #3 expression call operator "<<"
	'>' => Reduce #3 expression call operator "<<"
	'+' => Reduce #3 expression call operator "<<"
	'-' => Reduce #3 expression call operator "<<"
	'*' => Reduce #3 expression call operator "<<"
	'/' => Reduce #3 expression call operator "<<"
	'%' => Reduce #3 expression call operator "<<"
	"<<" => Reduce #3 expression call operator "<<"
	">>" => Reduce #3 expression call operator "<<"
	'.' => Shift goto 156
	"->" => Reduce #3 expression call operator "<<"
[232]
	'(' => Shift goto 123
	')' => Reduce #3 expression call operator ">>"
	';' => Reduce #3 expression call operator ">>"
	',' => Reduce #3 expression call operator ">>"
	'&' => Reduce #3 expression call operator ">>"
	'^' => Reduce #3 expression call operator ">>"
	'}' => Reduce #3 expression call operator ">>"
	'=' => Reduce #3 expression call operator ">>"
	'[' => Shift goto 128
	']' => Reduce #3 expression call operator ">>"
	"+=" => Reduce #3 expression call operator ">>"
	"-=" => Reduce #3 expression call operator ">>"
	"*=" => Reduce #3 expression call operator ">>"
	"/=" => Reduce #3 expression call operator ">>"
	"%=" => Reduce #3 expression call operator ">>"
	"&&=" => Reduce #3 expression call operator ">>"
	"||=" => Reduce #3 expression call operator ">>"
	"&=" => Reduce #3 expression call operator ">>"
	"|=" => Reduce #3 expression call operator ">>"
	"<<=" => Reduce #3 expression call operator ">>"
	">>=" => Reduce #3 expression call operator ">>"
	"||" => Reduce #3 expression call operator ">>"
	"&&" => Reduce #3 expression call operator ">>"
	'|' => Reduce #3 expression call operator ">>"
	"==" => Reduce #3 expression call operator ">>"
	"!=" => Reduce #3 expression call operator ">>"
	"<=" => Reduce #3 expression call operator ">>"
	'<' => Reduce #3 expression call operator ">>"
	">=" => Reduce #3 expression call operator ">>"
	'>' => Reduce #3 expression call operator ">>"
	'+' => Reduce #3 expression call operator ">>"
	'-' => Reduce #3 expression call operator ">>"
	'*' => Reduce #3 expression call operator ">>"
	'/' => Reduce #3 expression call operator ">>"
	'%' => Reduce #3 expression call operator ">>"
	"<<" => Reduce #3 expression call operator ">>"
	">>" => Reduce #3 expression call operator ">>"
	'.' => Shift goto 156
	"->" => Reduce #3 expression call operator ">>"
[233]
	'(' => Reduce #3 expression call member
	')' => Reduce #3 expression call member
	';' => Reduce #3 expression call member
	',' => Reduce #3 expression call member
	'&' => Reduce #3 expression call member
	'^' => Reduce #3 expression call member
	'}' => Reduce #3 expression call member
	'=' => Reduce #3 expression call member
	'[' => Reduce #3 expression call member
	']' => Reduce #3 expression call member
	"+=" => Reduce #3 expression call member
	"-=" => Reduce #3 expression call member
	"*=" => Reduce #3 expression call member
	"/=" => Reduce #3 expression call member
	"%=" => Reduce #3 expression call member
	"&&=" => Reduce #3 expression call member
	"||=" => Reduce #3 expression call member
	"&=" => Reduce #3 expression call member
	"|=" => Reduce #3 expression call member
	"<<=" => Reduce #3 expression call member
	">>=" => Reduce #3 expression call member
	"||" => Reduce #3 expression call member
	"&&" => Reduce #3 expression call member
	'|' => Reduce #3 expression call member
	"==" => Reduce #3 expression call member
	"!=" => Reduce #3 expression call member
	"<=" => Reduce #3 expression call member
	'<' => Reduce #3 expression call member
	">=" => Reduce #3 expression call member
	'>' => Reduce #3 expression call member
	'+' => Reduce #3 expression call member
	'-' => Reduce #3 expression call member
	'*' => Reduce #3 expression call member
	'/' => Reduce #3 expression call member
	'%' => Reduce #3 expression call member
	"<<" => Reduce #3 expression call member
	">>" => Reduce #3 expression call member
	'.' => Reduce #3 expression call member
	"->" => Reduce #3 expression call member
[234]
	IDENT => Reduce #2 indirection call count
[235]
	'(' => Reduce #3 expression
	')' => Reduce #3 expression
	';' => Reduce #3 expression
	',' => Reduce #3 expression
	'&' => Reduce #3 expression
	'^' => Reduce #3 expression
	'}' => Reduce #3 expression
	'=' => Reduce #3 expression
	'[' => Reduce #3 expression
	']' => Reduce #3 expression
	"+=" => Reduce #3 expression
	"-=" => Reduce #3 expression
	"*=" => Reduce #3 expression
	"/=" => Reduce #3 expression
	"%=" => Reduce #3 expression
	"&&=" => Reduce #3 expression
	"||=" => Reduce #3 expression
	"&=" => Reduce #3 expression
	"|=" => Reduce #3 expression
	"<<=" => Reduce #3 expression
	">>=" => Reduce #3 expression
	"||" => Reduce #3 expression
	"&&" => Reduce #3 expression
	'|' => Reduce #3 expression
	"==" => Reduce #3 expression
	"!=" => Reduce #3 expression
	"<=" => Reduce #3 expression
	'<' => Reduce #3 expression
	">=" => Reduce #3 expression
	'>' => Reduce #3 expression
	'+' => Reduce #3 expression
	'-' => Reduce #3 expression
	'*' => Reduce #3 expression
	'/' => Reduce #3 expression
	'%' => Reduce #3 expression
	"<<" => Reduce #3 expression
	">>" => Reduce #3 expression
	'.' => Reduce #3 expression
	"->" => Reduce #3 expression
[236]
	$ => Reduce #3 statement
	BOOLEAN => Reduce #3 statement
	IDENT => Reduce #3 statement
	DQSTRING => Reduce #3 statement
	SQSTRING => Reduce #3 statement
	CARDINAL => Reduce #3 statement
	INTEGER => Reduce #3 statement
	FLOAT => Reduce #3 statement
	"function" => Reduce #3 statement
	'(' => Reduce #3 statement
	"procedure" => Reduce #3 statement
	'&' => Reduce #3 statement
	"typedef" => Reduce #3 statement
	'{' => Reduce #3 statement
	'}' => Reduce #3 statement
	"private" => Reduce #3 statement
	"public" => Reduce #3 statement
	"var" => Reduce #3 statement
	"return" => Reduce #3 statement
	"delete" => Reduce #3 statement
	"if" => Reduce #3 statement
	"while" => Reduce #3 statement
	"new" => Reduce #3 statement
	"null" => Reduce #3 statement
	'+' => Reduce #3 statement
	'-' => Reduce #3 statement
	'~' => Reduce #3 statement
	'!' => Reduce #3 statement
	'*' => Reduce #3 statement
[237]
	BOOLEAN => Shift goto 69
	IDENT => Shift goto 70
	DQSTRING => Shift goto 71
	SQSTRING => Shift goto 72
	CARDINAL => Shift goto 73
	INTEGER => Shift goto 74
	FLOAT => Shift goto 75
	'(' => Shift goto 76
	'&' => Shift goto 77
	'{' => Shift goto 93
	"new" => Shift goto 84
	"null" => Shift goto 85
	'+' => Shift goto 86
	'-' => Shift goto 87
	'~' => Shift goto 88
	'!' => Shift goto 89
	'*' => Shift goto 90
[238]
	'(' => Reduce #3 expression call structure
	')' => Reduce #3 expression call structure
	';' => Reduce #3 expression call structure
	',' => Reduce #3 expression call structure
	'&' => Reduce #3 expression call structure
	'^' => Reduce #3 expression call structure
	'}' => Reduce #3 expression call structure
	'=' => Reduce #3 expression call structure
	'[' => Reduce #3 expression call structure
	']' => Reduce #3 expression call structure
	"+=" => Reduce #3 expression call structure
	"-=" => Reduce #3 expression call structure
	"*=" => Reduce #3 expression call structure
	"/=" => Reduce #3 expression call structure
	"%=" => Reduce #3 expression call structure
	"&&=" => Reduce #3 expression call structure
	"||=" => Reduce #3 expression call structure
	"&=" => Reduce #3 expression call structure
	"|=" => Reduce #3 expression call structure
	"<<=" => Reduce #3 expression call structure
	">>=" => Reduce #3 expression call structure
	"||" => Reduce #3 expression call structure
	"&&" => Reduce #3 expression call structure
	'|' => Reduce #3 expression call structure
	"==" => Reduce #3 expression call structure
	"!=" => Reduce #3 expression call structure
	"<=" => Reduce #3 expression call structure
	'<' => Reduce #3 expression call structure
	">=" => Reduce #3 expression call structure
	'>' => Reduce #3 expression call structure
	'+' => Reduce #3 expression call structure
	'-' => Reduce #3 expression call structure
	'*' => Reduce #3 expression call structure
	'/' => Reduce #3 expression call structure
	'%' => Reduce #3 expression call structure
	"<<" => Reduce #3 expression call structure
	">>" => Reduce #3 expression call structure
	'.' => Reduce #3 expression call structure
	"->" => Reduce #3 expression call structure
[239]
	$ => Reduce #3 statement call definition
	BOOLEAN => Reduce #3 statement call definition
	IDENT => Reduce #3 statement call definition
	DQSTRING => Reduce #3 statement call definition
	SQSTRING => Reduce #3 statement call definition
	CARDINAL => Reduce #3 statement call definition
	INTEGER => Reduce #3 statement call definition
	FLOAT => Reduce #3 statement call definition
	"function" => Reduce #3 statement call definition
	'(' => Reduce #3 statement call definition
	"procedure" => Reduce #3 statement call definition
	'&' => Reduce #3 statement call definition
	"typedef" => Reduce #3 statement call definition
	'{' => Reduce #3 statement call definition
	'}' => Reduce #3 statement call definition
	"private" => Reduce #3 statement call definition
	"public" => Reduce #3 statement call definition
	"var" => Reduce #3 statement call definition
	"return" => Reduce #3 statement call definition
	"delete" => Reduce #3 statement call definition
	"if" => Reduce #3 statement call definition
	"while" => Reduce #3 statement call definition
	"new" => Reduce #3 statement call definition
	"null" => Reduce #3 statement call definition
	'+' => Reduce #3 statement call definition
	'-' => Reduce #3 statement call definition
	'~' => Reduce #3 statement call definition
	'!' => Reduce #3 statement call definition
	'*' => Reduce #3 statement call definition
[240]
	$ => Reduce #3 statement call return_value
	BOOLEAN => Reduce #3 statement call return_value
	IDENT => Reduce #3 statement call return_value
	DQSTRING => Reduce #3 statement call return_value
	SQSTRING => Reduce #3 statement call return_value
	CARDINAL => Reduce #3 statement call return_value
	INTEGER => Reduce #3 statement call return_value
	FLOAT => Reduce #3 statement call return_value
	"function" => Reduce #3 statement call return_value
	'(' => Reduce #3 statement call return_value
	"procedure" => Reduce #3 statement call return_value
	'&' => Reduce #3 statement call return_value
	"typedef" => Reduce #3 statement call return_value
	'{' => Reduce #3 statement call return_value
	'}' => Reduce #3 statement call return_value
	"private" => Reduce #3 statement call return_value
	"public" => Reduce #3 statement call return_value
	"var" => Reduce #3 statement call return_value
	"return" => Reduce #3 statement call return_value
	"delete" => Reduce #3 statement call return_value
	"if" => Reduce #3 statement call return_value
	"while" => Reduce #3 statement call return_value
	"new" => Reduce #3 statement call return_value
	"null" => Reduce #3 statement call return_value
	'+' => Reduce #3 statement call return_value
	'-' => Reduce #3 statement call return_value
	'~' => Reduce #3 statement call return_value
	'!' => Reduce #3 statement call return_value
	'*' => Reduce #3 statement call return_value
[241]
	$ => Reduce #3 statement call delete
	BOOLEAN => Reduce #3 statement call delete
	IDENT => Reduce #3 statement call delete
	DQSTRING => Reduce #3 statement call delete
	SQSTRING => Reduce #3 statement call delete
	CARDINAL => Reduce #3 statement call delete
	INTEGER => Reduce #3 statement call delete
	FLOAT => Reduce #3 statement call delete
	"function" => Reduce #3 statement call delete
	'(' => Reduce #3 statement call delete
	"procedure" => Reduce #3 statement call delete
	'&' => Reduce #3 statement call delete
	"typedef" => Reduce #3 statement call delete
	'{' => Reduce #3 statement call delete
	'}' => Reduce #3 statement call delete
	"private" => Reduce #3 statement call delete
	"public" => Reduce #3 statement call delete
	"var" => Reduce #3 statement call delete
	"return" => Reduce #3 statement call delete
	"delete" => Reduce #3 statement call delete
	"if" => Reduce #3 statement call delete
	"while" => Reduce #3 statement call delete
	"new" => Reduce #3 statement call delete
	"null" => Reduce #3 statement call delete
	'+' => Reduce #3 statement call delete
	'-' => Reduce #3 statement call delete
	'~' => Reduce #3 statement call delete
	'!' => Reduce #3 statement call delete
	'*' => Reduce #3 statement call delete
[242]
	'(' => Shift goto 123
	')' => Shift goto 262
	'&' => Shift goto 125
	'^' => Shift goto 126
	'=' => Shift goto 127
	'[' => Shift goto 128
	"+=" => Shift goto 129
	"-=" => Shift goto 130
	"*=" => Shift goto 131
	"/=" => Shift goto 132
	"%=" => Shift goto 133
	"&&=" => Shift goto 134
	"||=" => Shift goto 135
	"&=" => Shift goto 136
	"|=" => Shift goto 137
	"<<=" => Shift goto 138
	">>=" => Shift goto 139
	"||" => Shift goto 140
	"&&" => Shift goto 141
	'|' => Shift goto 142
	"==" => Shift goto 143
	"!=" => Shift goto 144
	"<=" => Shift goto 145
	'<' => Shift goto 146
	">=" => Shift goto 147
	'>' => Shift goto 148
	'+' => Shift goto 149
	'-' => Shift goto 150
	'*' => Shift goto 151
	'/' => Shift goto 152
	'%' => Shift goto 153
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'.' => Shift goto 156
	"->" => Shift goto 157
[243]
	'(' => Shift goto 123
	')' => Shift goto 263
	'&' => Shift goto 125
	'^' => Shift goto 126
	'=' => Shift goto 127
	'[' => Shift goto 128
	"+=" => Shift goto 129
	"-=" => Shift goto 130
	"*=" => Shift goto 131
	"/=" => Shift goto 132
	"%=" => Shift goto 133
	"&&=" => Shift goto 134
	"||=" => Shift goto 135
	"&=" => Shift goto 136
	"|=" => Shift goto 137
	"<<=" => Shift goto 138
	">>=" => Shift goto 139
	"||" => Shift goto 140
	"&&" => Shift goto 141
	'|' => Shift goto 142
	"==" => Shift goto 143
	"!=" => Shift goto 144
	"<=" => Shift goto 145
	'<' => Shift goto 146
	">=" => Shift goto 147
	'>' => Shift goto 148
	'+' => Shift goto 149
	'-' => Shift goto 150
	'*' => Shift goto 151
	'/' => Shift goto 152
	'%' => Shift goto 153
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'.' => Shift goto 156
	"->" => Shift goto 157
[244]
	BOOLEAN => Shift goto 69
	IDENT => Shift goto 70
	DQSTRING => Shift goto 71
	SQSTRING => Shift goto 72
	CARDINAL => Shift goto 73
	INTEGER => Shift goto 74
	FLOAT => Shift goto 75
	'(' => Shift goto 76
	'&' => Shift goto 77
	'{' => Shift goto 93
	"new" => Shift goto 84
	"null" => Shift goto 85
	'+' => Shift goto 86
	'-' => Shift goto 87
	'~' => Shift goto 88
	'!' => Shift goto 89
	'*' => Shift goto 90
[245]
	BOOLEAN => Shift goto 69
	IDENT => Shift goto 70
	DQSTRING => Shift goto 71
	SQSTRING => Shift goto 72
	CARDINAL => Shift goto 73
	INTEGER => Shift goto 74
	FLOAT => Shift goto 75
	'(' => Shift goto 76
	'&' => Shift goto 77
	'{' => Shift goto 93
	"new" => Shift goto 84
	"null" => Shift goto 85
	'+' => Shift goto 86
	'-' => Shift goto 87
	'~' => Shift goto 88
	'!' => Shift goto 89
	'*' => Shift goto 90
[246]
	')' => Reduce #2 paramdecl call paramdef
	',' => Reduce #2 paramdecl call paramdef
[247]
	"const" => Shift goto 266
	'{' => Shift goto 267
[248]
	IDENT => Shift goto 17
	"const" => Shift goto 18
[249]
	'(' => Shift goto 269
[250]
	IDENT => Shift goto 17
	')' => Reduce #0 parameterlist
	"const" => Shift goto 18
[251]
	$ => Reduce #3 constructordefinition call constructordef
	IDENT => Reduce #3 constructordefinition call constructordef
	"function" => Reduce #3 constructordefinition call constructordef
	"procedure" => Reduce #3 constructordefinition call constructordef
	"const" => Reduce #3 constructordefinition call constructordef
	"typedef" => Reduce #3 constructordefinition call constructordef
	"struct" => Reduce #3 constructordefinition call constructordef
	'}' => Reduce #3 constructordefinition call constructordef
	"interface" => Reduce #3 constructordefinition call constructordef
	"class" => Reduce #3 constructordefinition call constructordef
	"private" => Reduce #3 constructordefinition call constructordef
	"public" => Reduce #3 constructordefinition call constructordef
	"constructor" => Reduce #3 constructordefinition call constructordef
	"destructor" => Reduce #3 constructordefinition call constructordef
[252]
	'}' => Shift goto 271
[253]
	'{' => Reduce #3 inheritlist call inheritdef
[254]
	'}' => Shift goto 272
[255]
	')' => Shift goto 273
	"..." => Shift goto 274
[256]
	';' => Shift goto 275
[257]
	')' => Shift goto 276
[258]
	IDENT => Shift goto 17
	"const" => Shift goto 18
[259]
	'(' => Reduce #4 expression call operator "()"
	')' => Reduce #4 expression call operator "()"
	';' => Reduce #4 expression call operator "()"
	',' => Reduce #4 expression call operator "()"
	'&' => Reduce #4 expression call operator "()"
	'^' => Reduce #4 expression call operator "()"
	'}' => Reduce #4 expression call operator "()"
	'=' => Reduce #4 expression call operator "()"
	'[' => Reduce #4 expression call operator "()"
	']' => Reduce #4 expression call operator "()"
	"+=" => Reduce #4 expression call operator "()"
	"-=" => Reduce #4 expression call operator "()"
	"*=" => Reduce #4 expression call operator "()"
	"/=" => Reduce #4 expression call operator "()"
	"%=" => Reduce #4 expression call operator "()"
	"&&=" => Reduce #4 expression call operator "()"
	"||=" => Reduce #4 expression call operator "()"
	"&=" => Reduce #4 expression call operator "()"
	"|=" => Reduce #4 expression call operator "()"
	"<<=" => Reduce #4 expression call operator "()"
	">>=" => Reduce #4 expression call operator "()"
	"||" => Reduce #4 expression call operator "()"
	"&&" => Reduce #4 expression call operator "()"
	'|' => Reduce #4 expression call operator "()"
	"==" => Reduce #4 expression call operator "()"
	"!=" => Reduce #4 expression call operator "()"
	"<=" => Reduce #4 expression call operator "()"
	'<' => Reduce #4 expression call operator "()"
	">=" => Reduce #4 expression call operator "()"
	'>' => Reduce #4 expression call operator "()"
	'+' => Reduce #4 expression call operator "()"
	'-' => Reduce #4 expression call operator "()"
	'*' => Reduce #4 expression call operator "()"
	'/' => Reduce #4 expression call operator "()"
	'%' => Reduce #4 expression call operator "()"
	"<<" => Reduce #4 expression call operator "()"
	">>" => Reduce #4 expression call operator "()"
	'.' => Reduce #4 expression call operator "()"
	"->" => Reduce #4 expression call operator "()"
[260]
	'(' => Reduce #4 expression call operator "[]"
	')' => Reduce #4 expression call operator "[]"
	';' => Reduce #4 expression call operator "[]"
	',' => Reduce #4 expression call operator "[]"
	'&' => Reduce #4 expression call operator "[]"
	'^' => Reduce #4 expression call operator "[]"
	'}' => Reduce #4 expression call operator "[]"
	'=' => Reduce #4 expression call operator "[]"
	'[' => Reduce #4 expression call operator "[]"
	']' => Reduce #4 expression call operator "[]"
	"+=" => Reduce #4 expression call operator "[]"
	"-=" => Reduce #4 expression call operator "[]"
	"*=" => Reduce #4 expression call operator "[]"
	"/=" => Reduce #4 expression call operator "[]"
	"%=" => Reduce #4 expression call operator "[]"
	"&&=" => Reduce #4 expression call operator "[]"
	"||=" => Reduce #4 expression call operator "[]"
	"&=" => Reduce #4 expression call operator "[]"
	"|=" => Reduce #4 expression call operator "[]"
	"<<=" => Reduce #4 expression call operator "[]"
	">>=" => Reduce #4 expression call operator "[]"
	"||" => Reduce #4 expression call operator "[]"
	"&&" => Reduce #4 expression call operator "[]"
	'|' => Reduce #4 expression call operator "[]"
	"==" => Reduce #4 expression call operator "[]"
	"!=" => Reduce #4 expression call operator "[]"
	"<=" => Reduce #4 expression call operator "[]"
	'<' => Reduce #4 expression call operator "[]"
	">=" => Reduce #4 expression call operator "[]"
	'>' => Reduce #4 expression call operator "[]"
	'+' => Reduce #4 expression call operator "[]"
	'-' => Reduce #4 expression call operator "[]"
	'*' => Reduce #4 expression call operator "[]"
	'/' => Reduce #4 expression call operator "[]"
	'%' => Reduce #4 expression call operator "[]"
	"<<" => Reduce #4 expression call operator "[]"
	">>" => Reduce #4 expression call operator "[]"
	'.' => Reduce #4 expression call operator "[]"
	"->" => Reduce #4 expression call operator "[]"
[261]
	')' => Reduce #3 expressionlist
	'}' => Reduce #3 expressionlist
	']' => Reduce #3 expressionlist
[262]
	'{' => Shift goto 278
[263]
	'{' => Shift goto 279
[264]
	'(' => Shift goto 123
	')' => Reduce #4 expression call allocate
	';' => Reduce #4 expression call allocate
	',' => Reduce #4 expression call allocate
	'&' => Shift goto 125
	'^' => Shift goto 126
	'}' => Reduce #4 expression call allocate
	'=' => Shift goto 127
	'[' => Shift goto 128
	']' => Reduce #4 expression call allocate
	"+=" => Shift goto 129
	"-=" => Shift goto 130
	"*=" => Shift goto 131
	"/=" => Shift goto 132
	"%=" => Shift goto 133
	"&&=" => Shift goto 134
	"||=" => Shift goto 135
	"&=" => Shift goto 136
	"|=" => Shift goto 137
	"<<=" => Shift goto 138
	">>=" => Shift goto 139
	"||" => Shift goto 140
	"&&" => Shift goto 141
	'|' => Shift goto 142
	"==" => Shift goto 143
	"!=" => Shift goto 144
	"<=" => Shift goto 145
	'<' => Shift goto 146
	">=" => Shift goto 147
	'>' => Shift goto 148
	'+' => Shift goto 149
	'-' => Shift goto 150
	'*' => Shift goto 151
	'/' => Shift goto 152
	'%' => Shift goto 153
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'.' => Shift goto 156
	"->" => Reduce #4 expression call allocate
[265]
	'(' => Shift goto 123
	';' => Reduce #7 variabledefinition call vardef_array_assign
	'&' => Shift goto 125
	'^' => Shift goto 126
	'=' => Shift goto 127
	'[' => Shift goto 128
	"+=" => Shift goto 129
	"-=" => Shift goto 130
	"*=" => Shift goto 131
	"/=" => Shift goto 132
	"%=" => Shift goto 133
	"&&=" => Shift goto 134
	"||=" => Shift goto 135
	"&=" => Shift goto 136
	"|=" => Shift goto 137
	"<<=" => Shift goto 138
	">>=" => Shift goto 139
	"||" => Shift goto 140
	"&&" => Shift goto 141
	'|' => Shift goto 142
	"==" => Shift goto 143
	"!=" => Shift goto 144
	"<=" => Shift goto 145
	'<' => Shift goto 146
	">=" => Shift goto 147
	'>' => Shift goto 148
	'+' => Shift goto 149
	'-' => Shift goto 150
	'*' => Shift goto 151
	'/' => Shift goto 152
	'%' => Shift goto 153
	"<<" => Shift goto 154
	">>" => Shift goto 155
	'.' => Shift goto 156
	"->" => Shift goto 157
[266]
	'{' => Shift goto 280
[267]
	BOOLEAN => Shift goto 69
	IDENT => Shift goto 70
	DQSTRING => Shift goto 71
	SQSTRING => Shift goto 72
	CARDINAL => Shift goto 73
	INTEGER => Shift goto 74
	FLOAT => Shift goto 75
	"function" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	'(' => Shift goto 76
	"procedure" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	'&' => Shift goto 77
	"typedef" => Shift goto 19
	'{' => Shift goto 78
	'}' => Reduce #0 statementlist
	"private" => Shift goto 23
	"public" => Shift goto 24
	"var" => Shift goto 79
	"return" => Shift goto 80
	"delete" => Shift goto 81
	"if" => Shift goto 82
	"while" => Shift goto 83
	"new" => Shift goto 84
	"null" => Shift goto 85
	'+' => Shift goto 86
	'-' => Shift goto 87
	'~' => Shift goto 88
	'!' => Shift goto 89
	'*' => Shift goto 90
[268]
	')' => Reduce #3 parameters
[269]
	IDENT => Shift goto 17
	')' => Reduce #0 parameterlist
	"const" => Shift goto 18
[270]
	')' => Shift goto 283
[271]
	$ => Reduce #4 constructordefinition call destructordef
	IDENT => Reduce #4 constructordefinition call destructordef
	"function" => Reduce #4 constructordefinition call destructordef
	"procedure" => Reduce #4 constructordefinition call destructordef
	"const" => Reduce #4 constructordefinition call destructordef
	"typedef" => Reduce #4 constructordefinition call destructordef
	"struct" => Reduce #4 constructordefinition call destructordef
	'}' => Reduce #4 constructordefinition call destructordef
	"interface" => Reduce #4 constructordefinition call destructordef
	"class" => Reduce #4 constructordefinition call destructordef
	"private" => Reduce #4 constructordefinition call destructordef
	"public" => Reduce #4 constructordefinition call destructordef
	"constructor" => Reduce #4 constructordefinition call destructordef
	"destructor" => Reduce #4 constructordefinition call destructordef
[272]
	$ => Reduce #7 classdefinition call classdef_inherit
	IDENT => Reduce #7 classdefinition call classdef_inherit
	"function" => Reduce #7 classdefinition call classdef_inherit
	"procedure" => Reduce #7 classdefinition call classdef_inherit
	"const" => Reduce #7 classdefinition call classdef_inherit
	"typedef" => Reduce #7 classdefinition call classdef_inherit
	"struct" => Reduce #7 classdefinition call classdef_inherit
	'}' => Reduce #7 classdefinition call classdef_inherit
	"interface" => Reduce #7 classdefinition call classdef_inherit
	"class" => Reduce #7 classdefinition call classdef_inherit
	"private" => Reduce #7 classdefinition call classdef_inherit
	"public" => Reduce #7 classdefinition call classdef_inherit
	"constructor" => Reduce #7 classdefinition call classdef_inherit
	"destructor" => Reduce #7 classdefinition call classdef_inherit
	"main" => Reduce #7 classdefinition call classdef_inherit
[273]
	';' => Shift goto 284
[274]
	')' => Shift goto 285
[275]
	$ => Reduce #8 extern_definition call extern_procdef
	IDENT => Reduce #8 extern_definition call extern_procdef
	"extern" => Reduce #8 extern_definition call extern_procdef
	"function" => Reduce #8 extern_definition call extern_procdef
	"procedure" => Reduce #8 extern_definition call extern_procdef
	"const" => Reduce #8 extern_definition call extern_procdef
	"typedef" => Reduce #8 extern_definition call extern_procdef
	"struct" => Reduce #8 extern_definition call extern_procdef
	"interface" => Reduce #8 extern_definition call extern_procdef
	"class" => Reduce #8 extern_definition call extern_procdef
	"private" => Reduce #8 extern_definition call extern_procdef
	"public" => Reduce #8 extern_definition call extern_procdef
	"main" => Reduce #8 extern_definition call extern_procdef
[276]
	';' => Shift goto 286
[277]
	')' => Reduce #3 extern_parameters
	"..." => Reduce #3 extern_parameters
[278]
	BOOLEAN => Shift goto 69
	IDENT => Shift goto 70
	DQSTRING => Shift goto 71
	SQSTRING => Shift goto 72
	CARDINAL => Shift goto 73
	INTEGER => Shift goto 74
	FLOAT => Shift goto 75
	"function" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	'(' => Shift goto 76
	"procedure" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	'&' => Shift goto 77
	"typedef" => Shift goto 19
	'{' => Shift goto 78
	'}' => Reduce #0 statementlist
	"private" => Shift goto 23
	"public" => Shift goto 24
	"var" => Shift goto 79
	"return" => Shift goto 80
	"delete" => Shift goto 81
	"if" => Shift goto 82
	"while" => Shift goto 83
	"new" => Shift goto 84
	"null" => Shift goto 85
	'+' => Shift goto 86
	'-' => Shift goto 87
	'~' => Shift goto 88
	'!' => Shift goto 89
	'*' => Shift goto 90
[279]
	BOOLEAN => Shift goto 69
	IDENT => Shift goto 70
	DQSTRING => Shift goto 71
	SQSTRING => Shift goto 72
	CARDINAL => Shift goto 73
	INTEGER => Shift goto 74
	FLOAT => Shift goto 75
	"function" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	'(' => Shift goto 76
	"procedure" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	'&' => Shift goto 77
	"typedef" => Shift goto 19
	'{' => Shift goto 78
	'}' => Reduce #0 statementlist
	"private" => Shift goto 23
	"public" => Shift goto 24
	"var" => Shift goto 79
	"return" => Shift goto 80
	"delete" => Shift goto 81
	"if" => Shift goto 82
	"while" => Shift goto 83
	"new" => Shift goto 84
	"null" => Shift goto 85
	'+' => Shift goto 86
	'-' => Shift goto 87
	'~' => Shift goto 88
	'!' => Shift goto 89
	'*' => Shift goto 90
[280]
	BOOLEAN => Shift goto 69
	IDENT => Shift goto 70
	DQSTRING => Shift goto 71
	SQSTRING => Shift goto 72
	CARDINAL => Shift goto 73
	INTEGER => Shift goto 74
	FLOAT => Shift goto 75
	"function" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	'(' => Shift goto 76
	"procedure" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	'&' => Shift goto 77
	"typedef" => Shift goto 19
	'{' => Shift goto 78
	'}' => Reduce #0 statementlist
	"private" => Shift goto 23
	"public" => Shift goto 24
	"var" => Shift goto 79
	"return" => Shift goto 80
	"delete" => Shift goto 81
	"if" => Shift goto 82
	"while" => Shift goto 83
	"new" => Shift goto 84
	"null" => Shift goto 85
	'+' => Shift goto 86
	'-' => Shift goto 87
	'~' => Shift goto 88
	'!' => Shift goto 89
	'*' => Shift goto 90
[281]
	'}' => Shift goto 290
[282]
	')' => Shift goto 291
[283]
	';' => Shift goto 292
	"const" => Shift goto 293
[284]
	$ => Reduce #9 extern_definition call extern_funcdef
	IDENT => Reduce #9 extern_definition call extern_funcdef
	"extern" => Reduce #9 extern_definition call extern_funcdef
	"function" => Reduce #9 extern_definition call extern_funcdef
	"procedure" => Reduce #9 extern_definition call extern_funcdef
	"const" => Reduce #9 extern_definition call extern_funcdef
	"typedef" => Reduce #9 extern_definition call extern_funcdef
	"struct" => Reduce #9 extern_definition call extern_funcdef
	"interface" => Reduce #9 extern_definition call extern_funcdef
	"class" => Reduce #9 extern_definition call extern_funcdef
	"private" => Reduce #9 extern_definition call extern_funcdef
	"public" => Reduce #9 extern_definition call extern_funcdef
	"main" => Reduce #9 extern_definition call extern_funcdef
[285]
	';' => Shift goto 294
[286]
	$ => Reduce #9 extern_definition call extern_procdef_vararg
	IDENT => Reduce #9 extern_definition call extern_procdef_vararg
	"extern" => Reduce #9 extern_definition call extern_procdef_vararg
	"function" => Reduce #9 extern_definition call extern_procdef_vararg
	"procedure" => Reduce #9 extern_definition call extern_procdef_vararg
	"const" => Reduce #9 extern_definition call extern_procdef_vararg
	"typedef" => Reduce #9 extern_definition call extern_procdef_vararg
	"struct" => Reduce #9 extern_definition call extern_procdef_vararg
	"interface" => Reduce #9 extern_definition call extern_procdef_vararg
	"class" => Reduce #9 extern_definition call extern_procdef_vararg
	"private" => Reduce #9 extern_definition call extern_procdef_vararg
	"public" => Reduce #9 extern_definition call extern_procdef_vararg
	"main" => Reduce #9 extern_definition call extern_procdef_vararg
[287]
	'}' => Shift goto 295
[288]
	'}' => Shift goto 296
[289]
	'}' => Shift goto 297
[290]
	$ => Reduce #6 callablebody call callablebody "&"
	BOOLEAN => Reduce #6 callablebody call callablebody "&"
	IDENT => Reduce #6 callablebody call callablebody "&"
	DQSTRING => Reduce #6 callablebody call callablebody "&"
	SQSTRING => Reduce #6 callablebody call callablebody "&"
	CARDINAL => Reduce #6 callablebody call callablebody "&"
	INTEGER => Reduce #6 callablebody call callablebody "&"
	FLOAT => Reduce #6 callablebody call callablebody "&"
	"function" => Reduce #6 callablebody call callablebody "&"
	'(' => Reduce #6 callablebody call callablebody "&"
	"procedure" => Reduce #6 callablebody call callablebody "&"
	"const" => Reduce #6 callablebody call callablebody "&"
	'&' => Reduce #6 callablebody call callablebody "&"
	"typedef" => Reduce #6 callablebody call callablebody "&"
	"struct" => Reduce #6 callablebody call callablebody "&"
	'{' => Reduce #6 callablebody call callablebody "&"
	'}' => Reduce #6 callablebody call callablebody "&"
	"interface" => Reduce #6 callablebody call callablebody "&"
	"class" => Reduce #6 callablebody call callablebody "&"
	"private" => Reduce #6 callablebody call callablebody "&"
	"public" => Reduce #6 callablebody call callablebody "&"
	"constructor" => Reduce #6 callablebody call callablebody "&"
	"destructor" => Reduce #6 callablebody call callablebody "&"
	"main" => Reduce #6 callablebody call callablebody "&"
	"var" => Reduce #6 callablebody call callablebody "&"
	"return" => Reduce #6 callablebody call callablebody "&"
	"delete" => Reduce #6 callablebody call callablebody "&"
	"if" => Reduce #6 callablebody call callablebody "&"
	"while" => Reduce #6 callablebody call callablebody "&"
	"new" => Reduce #6 callablebody call callablebody "&"
	"null" => Reduce #6 callablebody call callablebody "&"
	'+' => Reduce #6 callablebody call callablebody "&"
	'-' => Reduce #6 callablebody call callablebody "&"
	'~' => Reduce #6 callablebody call callablebody "&"
	'!' => Reduce #6 callablebody call callablebody "&"
	'*' => Reduce #6 callablebody call callablebody "&"
[291]
	';' => Shift goto 298
	"const" => Shift goto 299
[292]
	$ => Reduce #6 interface_definition call interface_procdef "&"
	"function" => Reduce #6 interface_definition call interface_procdef "&"
	"procedure" => Reduce #6 interface_definition call interface_procdef "&"
	'}' => Reduce #6 interface_definition call interface_procdef "&"
[293]
	';' => Shift goto 300
[294]
	$ => Reduce #10 extern_definition call extern_funcdef_vararg
	IDENT => Reduce #10 extern_definition call extern_funcdef_vararg
	"extern" => Reduce #10 extern_definition call extern_funcdef_vararg
	"function" => Reduce #10 extern_definition call extern_funcdef_vararg
	"procedure" => Reduce #10 extern_definition call extern_funcdef_vararg
	"const" => Reduce #10 extern_definition call extern_funcdef_vararg
	"typedef" => Reduce #10 extern_definition call extern_funcdef_vararg
	"struct" => Reduce #10 extern_definition call extern_funcdef_vararg
	"interface" => Reduce #10 extern_definition call extern_funcdef_vararg
	"class" => Reduce #10 extern_definition call extern_funcdef_vararg
	"private" => Reduce #10 extern_definition call extern_funcdef_vararg
	"public" => Reduce #10 extern_definition call extern_funcdef_vararg
	"main" => Reduce #10 extern_definition call extern_funcdef_vararg
[295]
	$ => Reduce #7 statement call conditional_if
	BOOLEAN => Reduce #7 statement call conditional_if
	IDENT => Reduce #7 statement call conditional_if
	DQSTRING => Reduce #7 statement call conditional_if
	SQSTRING => Reduce #7 statement call conditional_if
	CARDINAL => Reduce #7 statement call conditional_if
	INTEGER => Reduce #7 statement call conditional_if
	FLOAT => Reduce #7 statement call conditional_if
	"function" => Reduce #7 statement call conditional_if
	'(' => Reduce #7 statement call conditional_if
	"procedure" => Reduce #7 statement call conditional_if
	'&' => Reduce #7 statement call conditional_if
	"typedef" => Reduce #7 statement call conditional_if
	'{' => Reduce #7 statement call conditional_if
	'}' => Reduce #7 statement call conditional_if
	"private" => Reduce #7 statement call conditional_if
	"public" => Reduce #7 statement call conditional_if
	"var" => Reduce #7 statement call conditional_if
	"return" => Reduce #7 statement call conditional_if
	"delete" => Reduce #7 statement call conditional_if
	"if" => Reduce #7 statement call conditional_if
	"else" => Shift goto 301
	"while" => Reduce #7 statement call conditional_if
	"new" => Reduce #7 statement call conditional_if
	"null" => Reduce #7 statement call conditional_if
	'+' => Reduce #7 statement call conditional_if
	'-' => Reduce #7 statement call conditional_if
	'~' => Reduce #7 statement call conditional_if
	'!' => Reduce #7 statement call conditional_if
	'*' => Reduce #7 statement call conditional_if
[296]
	$ => Reduce #7 statement call conditional_while
	BOOLEAN => Reduce #7 statement call conditional_while
	IDENT => Reduce #7 statement call conditional_while
	DQSTRING => Reduce #7 statement call conditional_while
	SQSTRING => Reduce #7 statement call conditional_while
	CARDINAL => Reduce #7 statement call conditional_while
	INTEGER => Reduce #7 statement call conditional_while
	FLOAT => Reduce #7 statement call conditional_while
	"function" => Reduce #7 statement call conditional_while
	'(' => Reduce #7 statement call conditional_while
	"procedure" => Reduce #7 statement call conditional_while
	'&' => Reduce #7 statement call conditional_while
	"typedef" => Reduce #7 statement call conditional_while
	'{' => Reduce #7 statement call conditional_while
	'}' => Reduce #7 statement call conditional_while
	"private" => Reduce #7 statement call conditional_while
	"public" => Reduce #7 statement call conditional_while
	"var" => Reduce #7 statement call conditional_while
	"return" => Reduce #7 statement call conditional_while
	"delete" => Reduce #7 statement call conditional_while
	"if" => Reduce #7 statement call conditional_while
	"while" => Reduce #7 statement call conditional_while
	"new" => Reduce #7 statement call conditional_while
	"null" => Reduce #7 statement call conditional_while
	'+' => Reduce #7 statement call conditional_while
	'-' => Reduce #7 statement call conditional_while
	'~' => Reduce #7 statement call conditional_while
	'!' => Reduce #7 statement call conditional_while
	'*' => Reduce #7 statement call conditional_while
[297]
	$ => Reduce #7 callablebody call callablebody "const&"
	BOOLEAN => Reduce #7 callablebody call callablebody "const&"
	IDENT => Reduce #7 callablebody call callablebody "const&"
	DQSTRING => Reduce #7 callablebody call callablebody "const&"
	SQSTRING => Reduce #7 callablebody call callablebody "const&"
	CARDINAL => Reduce #7 callablebody call callablebody "const&"
	INTEGER => Reduce #7 callablebody call callablebody "const&"
	FLOAT => Reduce #7 callablebody call callablebody "const&"
	"function" => Reduce #7 callablebody call callablebody "const&"
	'(' => Reduce #7 callablebody call callablebody "const&"
	"procedure" => Reduce #7 callablebody call callablebody "const&"
	"const" => Reduce #7 callablebody call callablebody "const&"
	'&' => Reduce #7 callablebody call callablebody "const&"
	"typedef" => Reduce #7 callablebody call callablebody "const&"
	"struct" => Reduce #7 callablebody call callablebody "const&"
	'{' => Reduce #7 callablebody call callablebody "const&"
	'}' => Reduce #7 callablebody call callablebody "const&"
	"interface" => Reduce #7 callablebody call callablebody "const&"
	"class" => Reduce #7 callablebody call callablebody "const&"
	"private" => Reduce #7 callablebody call callablebody "const&"
	"public" => Reduce #7 callablebody call callablebody "const&"
	"constructor" => Reduce #7 callablebody call callablebody "const&"
	"destructor" => Reduce #7 callablebody call callablebody "const&"
	"main" => Reduce #7 callablebody call callablebody "const&"
	"var" => Reduce #7 callablebody call callablebody "const&"
	"return" => Reduce #7 callablebody call callablebody "const&"
	"delete" => Reduce #7 callablebody call callablebody "const&"
	"if" => Reduce #7 callablebody call callablebody "const&"
	"while" => Reduce #7 callablebody call callablebody "const&"
	"new" => Reduce #7 callablebody call callablebody "const&"
	"null" => Reduce #7 callablebody call callablebody "const&"
	'+' => Reduce #7 callablebody call callablebody "const&"
	'-' => Reduce #7 callablebody call callablebody "const&"
	'~' => Reduce #7 callablebody call callablebody "const&"
	'!' => Reduce #7 callablebody call callablebody "const&"
	'*' => Reduce #7 callablebody call callablebody "const&"
[298]
	$ => Reduce #7 interface_definition call interface_funcdef "&"
	"function" => Reduce #7 interface_definition call interface_funcdef "&"
	"procedure" => Reduce #7 interface_definition call interface_funcdef "&"
	'}' => Reduce #7 interface_definition call interface_funcdef "&"
[299]
	';' => Shift goto 302
[300]
	$ => Reduce #7 interface_definition call interface_procdef "const&"
	"function" => Reduce #7 interface_definition call interface_procdef "const&"
	"procedure" => Reduce #7 interface_definition call interface_procdef "const&"
	'}' => Reduce #7 interface_definition call interface_procdef "const&"
[301]
	'{' => Shift goto 303
[302]
	$ => Reduce #8 interface_definition call interface_funcdef "const&"
	"function" => Reduce #8 interface_definition call interface_funcdef "const&"
	"procedure" => Reduce #8 interface_definition call interface_funcdef "const&"
	'}' => Reduce #8 interface_definition call interface_funcdef "const&"
[303]
	BOOLEAN => Shift goto 69
	IDENT => Shift goto 70
	DQSTRING => Shift goto 71
	SQSTRING => Shift goto 72
	CARDINAL => Shift goto 73
	INTEGER => Shift goto 74
	FLOAT => Shift goto 75
	"function" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	'(' => Shift goto 76
	"procedure" => Reduce #0 linkage call linkage {linkage="internal",attributes="#0 nounwind"}
	'&' => Shift goto 77
	"typedef" => Shift goto 19
	'{' => Shift goto 78
	'}' => Reduce #0 statementlist
	"private" => Shift goto 23
	"public" => Shift goto 24
	"var" => Shift goto 79
	"return" => Shift goto 80
	"delete" => Shift goto 81
	"if" => Shift goto 82
	"while" => Shift goto 83
	"new" => Shift goto 84
	"null" => Shift goto 85
	'+' => Shift goto 86
	'-' => Shift goto 87
	'~' => Shift goto 88
	'!' => Shift goto 89
	'*' => Shift goto 90
[304]
	'}' => Shift goto 305
[305]
	$ => Reduce #11 statement call conditional_if_else
	BOOLEAN => Reduce #11 statement call conditional_if_else
	IDENT => Reduce #11 statement call conditional_if_else
	DQSTRING => Reduce #11 statement call conditional_if_else
	SQSTRING => Reduce #11 statement call conditional_if_else
	CARDINAL => Reduce #11 statement call conditional_if_else
	INTEGER => Reduce #11 statement call conditional_if_else
	FLOAT => Reduce #11 statement call conditional_if_else
	"function" => Reduce #11 statement call conditional_if_else
	'(' => Reduce #11 statement call conditional_if_else
	"procedure" => Reduce #11 statement call conditional_if_else
	'&' => Reduce #11 statement call conditional_if_else
	"typedef" => Reduce #11 statement call conditional_if_else
	'{' => Reduce #11 statement call conditional_if_else
	'}' => Reduce #11 statement call conditional_if_else
	"private" => Reduce #11 statement call conditional_if_else
	"public" => Reduce #11 statement call conditional_if_else
	"var" => Reduce #11 statement call conditional_if_else
	"return" => Reduce #11 statement call conditional_if_else
	"delete" => Reduce #11 statement call conditional_if_else
	"if" => Reduce #11 statement call conditional_if_else
	"while" => Reduce #11 statement call conditional_if_else
	"new" => Reduce #11 statement call conditional_if_else
	"null" => Reduce #11 statement call conditional_if_else
	'+' => Reduce #11 statement call conditional_if_else
	'-' => Reduce #11 statement call conditional_if_else
	'~' => Reduce #11 statement call conditional_if_else
	'!' => Reduce #11 statement call conditional_if_else
	'*' => Reduce #11 statement call conditional_if_else

-- Goto table:
[1]
	extern_definitionlist => 2
	extern_definition => 3
[2]
	free_definitionlist => 5
	struct_definition => 6
	free_definition => 7
	typename => 8
	typespec => 9
	typedefinition => 10
	structdefinition => 11
	interfacedefinition => 12
	classdefinition => 13
	linkage => 14
	functiondefinition => 15
	variabledefinition => 16
[3]
	extern_definitionlist => 25
	extern_definition => 3
[5]
	main_procedure => 27
[7]
	free_definitionlist => 29
	struct_definition => 6
	free_definition => 7
	typename => 8
	typespec => 9
	typedefinition => 10
	structdefinition => 11
	interfacedefinition => 12
	classdefinition => 13
	linkage => 14
	functiondefinition => 15
	variabledefinition => 16
[18]
	typename => 38
[19]
	typename => 39
[34]
	typename => 8
	typespec => 50
[37]
	typename => 52
[43]
	typename => 8
	typespec => 60
[45]
	typedefinition => 62
	linkage => 14
	functiondefinition => 63
	codeblock => 64
	statementlist => 65
	statement => 66
	expression => 67
	iexpression => 68
[48]
	expression => 92
	iexpression => 68
[49]
	expression => 94
	iexpression => 68
[51]
	callablebody => 96
[56]
	struct_definitionlist => 100
	struct_definition => 101
	typename => 8
	typespec => 9
	typedefinition => 10
	structdefinition => 11
	variabledefinition => 16
[57]
	interface_definitionlist => 102
	interface_definition => 103
[58]
	class_definitionlist => 106
	struct_definition => 107
	class_definition => 108
	typename => 8
	typespec => 9
	typedefinition => 10
	structdefinition => 11
	interfacedefinition => 109
	classdefinition => 110
	linkage => 111
	functiondefinition => 112
	constructordefinition => 113
	variabledefinition => 16
[59]
	typename => 115
	inheritlist => 116
[66]
	typedefinition => 62
	linkage => 14
	functiondefinition => 63
	statementlist => 121
	statement => 66
	expression => 67
	iexpression => 68
[67]
	indirection => 122
[76]
	expression => 158
	iexpression => 68
[77]
	expression => 159
	iexpression => 68
[78]
	typedefinition => 62
	linkage => 14
	functiondefinition => 63
	codeblock => 160
	statementlist => 65
	statement => 66
	expression => 161
	iexpression => 68
	expressionlist => 162
[79]
	typename => 8
	typespec => 9
	variabledefinition => 164
[80]
	expression => 165
	iexpression => 68
[81]
	expression => 166
	iexpression => 68
[84]
	typename => 8
	typespec => 169
[86]
	expression => 170
	iexpression => 68
[87]
	expression => 171
	iexpression => 68
[88]
	expression => 172
	iexpression => 68
[89]
	expression => 173
	iexpression => 68
[90]
	expression => 174
	iexpression => 68
[92]
	indirection => 122
[93]
	expression => 175
	iexpression => 68
	expressionlist => 162
[94]
	indirection => 122
[95]
	callablebody => 177
[97]
	typename => 8
	typespec => 178
	parameterlist => 179
	parameters => 180
	paramdecl => 181
[101]
	struct_definitionlist => 184
	struct_definition => 101
	typename => 8
	typespec => 9
	typedefinition => 10
	structdefinition => 11
	variabledefinition => 16
[103]
	interface_definitionlist => 186
	interface_definition => 103
[104]
	typename => 8
	typespec => 187
[108]
	class_definitionlist => 190
	struct_definition => 107
	class_definition => 108
	typename => 8
	typespec => 9
	typedefinition => 10
	structdefinition => 11
	interfacedefinition => 109
	classdefinition => 110
	linkage => 111
	functiondefinition => 112
	constructordefinition => 113
	variabledefinition => 16
[118]
	extern_parameters => 196
	extern_paramlist => 197
	typename => 8
	typespec => 198
[123]
	expression => 175
	iexpression => 68
	expressionlist => 200
[125]
	expression => 202
	iexpression => 68
[126]
	expression => 203
	iexpression => 68
[127]
	expression => 204
	iexpression => 68
[128]
	expression => 175
	iexpression => 68
	expressionlist => 205
[129]
	expression => 206
	iexpression => 68
[130]
	expression => 207
	iexpression => 68
[131]
	expression => 208
	iexpression => 68
[132]
	expression => 209
	iexpression => 68
[133]
	expression => 210
	iexpression => 68
[134]
	expression => 211
	iexpression => 68
[135]
	expression => 212
	iexpression => 68
[136]
	expression => 213
	iexpression => 68
[137]
	expression => 214
	iexpression => 68
[138]
	expression => 215
	iexpression => 68
[139]
	expression => 216
	iexpression => 68
[140]
	expression => 217
	iexpression => 68
[141]
	expression => 218
	iexpression => 68
[142]
	expression => 219
	iexpression => 68
[143]
	expression => 220
	iexpression => 68
[144]
	expression => 221
	iexpression => 68
[145]
	expression => 222
	iexpression => 68
[146]
	expression => 223
	iexpression => 68
[147]
	expression => 224
	iexpression => 68
[148]
	expression => 225
	iexpression => 68
[149]
	expression => 226
	iexpression => 68
[150]
	expression => 227
	iexpression => 68
[151]
	expression => 228
	iexpression => 68
[152]
	expression => 229
	iexpression => 68
[153]
	expression => 230
	iexpression => 68
[154]
	expression => 231
	iexpression => 68
[155]
	expression => 232
	iexpression => 68
[157]
	indirection => 234
[158]
	indirection => 122
[159]
	indirection => 122
[161]
	indirection => 122
[165]
	indirection => 122
[166]
	indirection => 122
[167]
	expression => 242
	iexpression => 68
[168]
	expression => 243
	iexpression => 68
[170]
	indirection => 122
[171]
	indirection => 122
[172]
	indirection => 122
[173]
	indirection => 122
[174]
	indirection => 122
[175]
	indirection => 122
[191]
	callablebody => 251
[192]
	typedefinition => 62
	linkage => 14
	functiondefinition => 63
	codeblock => 252
	statementlist => 65
	statement => 66
	expression => 67
	iexpression => 68
[193]
	typename => 115
	inheritlist => 253
[194]
	class_definitionlist => 254
	struct_definition => 107
	class_definition => 108
	typename => 8
	typespec => 9
	typedefinition => 10
	structdefinition => 11
	interfacedefinition => 109
	classdefinition => 110
	linkage => 111
	functiondefinition => 112
	constructordefinition => 113
	variabledefinition => 16
[195]
	extern_parameters => 196
	extern_paramlist => 255
	typename => 8
	typespec => 198
[202]
	indirection => 122
[203]
	indirection => 122
[204]
	indirection => 122
[206]
	indirection => 122
[207]
	indirection => 122
[208]
	indirection => 122
[209]
	indirection => 122
[210]
	indirection => 122
[211]
	indirection => 122
[212]
	indirection => 122
[213]
	indirection => 122
[214]
	indirection => 122
[215]
	indirection => 122
[216]
	indirection => 122
[217]
	indirection => 122
[218]
	indirection => 122
[219]
	indirection => 122
[220]
	indirection => 122
[221]
	indirection => 122
[222]
	indirection => 122
[223]
	indirection => 122
[224]
	indirection => 122
[225]
	indirection => 122
[226]
	indirection => 122
[227]
	indirection => 122
[228]
	indirection => 122
[229]
	indirection => 122
[230]
	indirection => 122
[231]
	indirection => 122
[232]
	indirection => 122
[237]
	expression => 175
	iexpression => 68
	expressionlist => 261
[242]
	indirection => 122
[243]
	indirection => 122
[244]
	expression => 264
	iexpression => 68
[245]
	expression => 265
	iexpression => 68
[248]
	typename => 8
	typespec => 178
	parameters => 268
	paramdecl => 181
[250]
	typename => 8
	typespec => 178
	parameterlist => 270
	parameters => 180
	paramdecl => 181
[258]
	extern_parameters => 277
	typename => 8
	typespec => 198
[264]
	indirection => 122
[265]
	indirection => 122
[267]
	typedefinition => 62
	linkage => 14
	functiondefinition => 63
	codeblock => 281
	statementlist => 65
	statement => 66
	expression => 67
	iexpression => 68
[269]
	typename => 8
	typespec => 178
	parameterlist => 282
	parameters => 180
	paramdecl => 181
[278]
	typedefinition => 62
	linkage => 14
	functiondefinition => 63
	codeblock => 287
	statementlist => 65
	statement => 66
	expression => 67
	iexpression => 68
[279]
	typedefinition => 62
	linkage => 14
	functiondefinition => 63
	codeblock => 288
	statementlist => 65
	statement => 66
	expression => 67
	iexpression => 68
[280]
	typedefinition => 62
	linkage => 14
	functiondefinition => 63
	codeblock => 289
	statementlist => 65
	statement => 66
	expression => 67
	iexpression => 68
[303]
	typedefinition => 62
	linkage => 14
	functiondefinition => 63
	codeblock => 304
	statementlist => 65
	statement => 66
	expression => 67
	iexpression => 68

