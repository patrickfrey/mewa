Shift token "extern" at line 1 in state 1, goto 4
Shift token DQSTRING = "C" at line 1 in state 4, goto 26
Shift token "procedure" at line 1 in state 26, goto 44
Shift token IDENT = "printf" at line 1 in state 44, goto 61
Shift token '(' at line 1 in state 61, goto 118
Shift token "const" at line 1 in state 118, goto 18
Shift token IDENT = "byte" at line 1 in state 18, goto 17
Reduce #1 to typename by token '^' at line 1 in state 17, goto 38
Shift token '^' at line 1 in state 38, goto 54
Reduce #3 to typespec by token ',' at line 1 in state 54, call typespec "const^", goto 198
Shift token ',' at line 1 in state 198, goto 258
Shift token IDENT = "int" at line 1 in state 258, goto 17
Reduce #1 to typename by token ')' at line 1 in state 17, goto 8
Reduce #1 to typespec by token ')' at line 1 in state 8, call typespec "", goto 198
Reduce #1 to extern_parameters by token ')' at line 1 in state 198, goto 277
Reduce #3 to extern_parameters by token ')' at line 1 in state 277, goto 196
Reduce #1 to extern_paramlist by token ')' at line 1 in state 196, call extern_paramdeflist, goto 197
Shift token ')' at line 1 in state 197, goto 256
Shift token ';' at line 1 in state 256, goto 275
Reduce #8 to extern_definition by token "private" at line 3 in state 275, call extern_procdef, goto 3
Reduce #0 to extern_definitionlist by token "private" at line 3 in state 3, goto 25
Reduce #2 to extern_definitionlist by token "private" at line 3 in state 25, goto 2
Shift token "private" at line 3 in state 2, goto 23
Reduce #1 to linkage by token "procedure" at line 3 in state 23, call linkage {linkage="internal",attributes="#0 nounwind"}, goto 14
Shift token "procedure" at line 3 in state 14, goto 35
Shift token IDENT = "swap" at line 3 in state 35, goto 51
Shift token '(' at line 3 in state 51, goto 97
Shift token IDENT = "int" at line 3 in state 97, goto 17
Reduce #1 to typename by token '&' at line 3 in state 17, goto 8
Shift token '&' at line 3 in state 8, goto 30
Reduce #2 to typespec by token IDENT = "a" at line 3 in state 30, call typespec "&", goto 178
Shift token IDENT = "a" at line 3 in state 178, goto 246
Reduce #2 to paramdecl by token ',' at line 3 in state 246, call paramdef, goto 181
Shift token ',' at line 3 in state 181, goto 248
Shift token IDENT = "int" at line 3 in state 248, goto 17
Reduce #1 to typename by token '&' at line 3 in state 17, goto 8
Shift token '&' at line 3 in state 8, goto 30
Reduce #2 to typespec by token IDENT = "b" at line 3 in state 30, call typespec "&", goto 178
Shift token IDENT = "b" at line 3 in state 178, goto 246
Reduce #2 to paramdecl by token ')' at line 3 in state 246, call paramdef, goto 181
Reduce #1 to parameters by token ')' at line 3 in state 181, goto 268
Reduce #3 to parameters by token ')' at line 3 in state 268, goto 180
Reduce #1 to parameterlist by token ')' at line 3 in state 180, call paramdeflist, goto 179
Shift token ')' at line 3 in state 179, goto 247
Shift token '{' at line 4 in state 247, goto 267
Shift token "var" at line 5 in state 267, goto 79
Shift token IDENT = "int" at line 5 in state 79, goto 17
Reduce #1 to typename by token IDENT = "tmp" at line 5 in state 17, goto 8
Reduce #1 to typespec by token IDENT = "tmp" at line 5 in state 8, call typespec "", goto 9
Shift token IDENT = "tmp" at line 5 in state 9, goto 32
Shift token '=' at line 5 in state 32, goto 48
Shift token IDENT = "a" at line 5 in state 48, goto 70
Reduce #1 to expression by token ';' at line 5 in state 70, call variable, goto 92
Reduce #4 to variabledefinition by token ';' at line 5 in state 92, call vardef_assign, goto 164
Shift token ';' at line 5 in state 164, goto 239
Reduce #3 to statement by token IDENT = "a" at line 6 in state 239, call definition, goto 66
Shift token IDENT = "a" at line 6 in state 66, goto 70
Reduce #1 to expression by token '=' at line 6 in state 70, call variable, goto 67
Shift token '=' at line 6 in state 67, goto 127
Shift token IDENT = "b" at line 6 in state 127, goto 70
Reduce #1 to expression by token ';' at line 6 in state 70, call variable, goto 204
Reduce #3 to expression by token ';' at line 6 in state 204, call operator "=", goto 67
Shift token ';' at line 6 in state 67, goto 124
Reduce #2 to statement by token IDENT = "b" at line 7 in state 124, call free_expression, goto 66
Shift token IDENT = "b" at line 7 in state 66, goto 70
Reduce #1 to expression by token '=' at line 7 in state 70, call variable, goto 67
Shift token '=' at line 7 in state 67, goto 127
Shift token IDENT = "tmp" at line 7 in state 127, goto 70
Reduce #1 to expression by token ';' at line 7 in state 70, call variable, goto 204
Reduce #3 to expression by token ';' at line 7 in state 204, call operator "=", goto 67
Shift token ';' at line 7 in state 67, goto 124
Reduce #2 to statement by token '}' at line 8 in state 124, call free_expression, goto 66
Reduce #0 to statementlist by token '}' at line 8 in state 66, goto 121
Reduce #2 to statementlist by token '}' at line 8 in state 121, goto 121
Reduce #2 to statementlist by token '}' at line 8 in state 121, goto 121
Reduce #2 to statementlist by token '}' at line 8 in state 121, goto 65
Reduce #1 to codeblock by token '}' at line 8 in state 65, call codeblock, goto 281
Shift token '}' at line 8 in state 281, goto 290
Reduce #6 to callablebody by token "private" at line 10 in state 290, call callablebody "&", goto 96
Reduce #4 to functiondefinition by token "private" at line 10 in state 96, call procdef, goto 15
Reduce #1 to free_definition by token "private" at line 10 in state 15, call definition, goto 7
Shift token "private" at line 10 in state 7, goto 23
Reduce #1 to linkage by token "function" at line 10 in state 23, call linkage {linkage="internal",attributes="#0 nounwind"}, goto 14
Shift token "function" at line 10 in state 14, goto 34
Shift token IDENT = "int" at line 10 in state 34, goto 17
Reduce #1 to typename by token IDENT = "fibonacci" at line 10 in state 17, goto 8
Reduce #1 to typespec by token IDENT = "fibonacci" at line 10 in state 8, call typespec "", goto 50
Shift token IDENT = "fibonacci" at line 10 in state 50, goto 95
Shift token '(' at line 10 in state 95, goto 97
Shift token IDENT = "int" at line 10 in state 97, goto 17
Reduce #1 to typename by token IDENT = "n" at line 10 in state 17, goto 8
Reduce #1 to typespec by token IDENT = "n" at line 10 in state 8, call typespec "", goto 178
Shift token IDENT = "n" at line 10 in state 178, goto 246
Reduce #2 to paramdecl by token ')' at line 10 in state 246, call paramdef, goto 181
Reduce #1 to parameters by token ')' at line 10 in state 181, goto 180
Reduce #1 to parameterlist by token ')' at line 10 in state 180, call paramdeflist, goto 179
Shift token ')' at line 10 in state 179, goto 247
Shift token '{' at line 11 in state 247, goto 267
Shift token "var" at line 12 in state 267, goto 79
Shift token IDENT = "int" at line 12 in state 79, goto 17
Reduce #1 to typename by token IDENT = "i1" at line 12 in state 17, goto 8
Reduce #1 to typespec by token IDENT = "i1" at line 12 in state 8, call typespec "", goto 9
Shift token IDENT = "i1" at line 12 in state 9, goto 32
Shift token '=' at line 12 in state 32, goto 48
Shift token CARDINAL = "0" at line 12 in state 48, goto 73
Reduce #1 to expression by token ';' at line 12 in state 73, call constant "constexpr uint", goto 92
Reduce #4 to variabledefinition by token ';' at line 12 in state 92, call vardef_assign, goto 164
Shift token ';' at line 12 in state 164, goto 239
Reduce #3 to statement by token "var" at line 13 in state 239, call definition, goto 66
Shift token "var" at line 13 in state 66, goto 79
Shift token IDENT = "int" at line 13 in state 79, goto 17
Reduce #1 to typename by token IDENT = "i2" at line 13 in state 17, goto 8
Reduce #1 to typespec by token IDENT = "i2" at line 13 in state 8, call typespec "", goto 9
Shift token IDENT = "i2" at line 13 in state 9, goto 32
Shift token '=' at line 13 in state 32, goto 48
Shift token CARDINAL = "1" at line 13 in state 48, goto 73
Reduce #1 to expression by token ';' at line 13 in state 73, call constant "constexpr uint", goto 92
Reduce #4 to variabledefinition by token ';' at line 13 in state 92, call vardef_assign, goto 164
Shift token ';' at line 13 in state 164, goto 239
Reduce #3 to statement by token "var" at line 14 in state 239, call definition, goto 66
Shift token "var" at line 14 in state 66, goto 79
Shift token IDENT = "int" at line 14 in state 79, goto 17
Reduce #1 to typename by token IDENT = "i" at line 14 in state 17, goto 8
Reduce #1 to typespec by token IDENT = "i" at line 14 in state 8, call typespec "", goto 9
Shift token IDENT = "i" at line 14 in state 9, goto 32
Shift token '=' at line 14 in state 32, goto 48
Shift token CARDINAL = "0" at line 14 in state 48, goto 73
Reduce #1 to expression by token ';' at line 14 in state 73, call constant "constexpr uint", goto 92
Reduce #4 to variabledefinition by token ';' at line 14 in state 92, call vardef_assign, goto 164
Shift token ';' at line 14 in state 164, goto 239
Reduce #3 to statement by token "while" at line 15 in state 239, call definition, goto 66
Shift token "while" at line 15 in state 66, goto 83
Shift token '(' at line 15 in state 83, goto 168
Shift token IDENT = "i" at line 15 in state 168, goto 70
Reduce #1 to expression by token '<' at line 15 in state 70, call variable, goto 243
Shift token '<' at line 15 in state 243, goto 146
Shift token IDENT = "n" at line 15 in state 146, goto 70
Reduce #1 to expression by token ')' at line 15 in state 70, call variable, goto 223
Reduce #3 to expression by token ')' at line 15 in state 223, call operator "<", goto 243
Shift token ')' at line 15 in state 243, goto 263
Shift token '{' at line 16 in state 263, goto 279
Shift token IDENT = "i1" at line 17 in state 279, goto 70
Reduce #1 to expression by token '=' at line 17 in state 70, call variable, goto 67
Shift token '=' at line 17 in state 67, goto 127
Shift token IDENT = "i2" at line 17 in state 127, goto 70
Reduce #1 to expression by token '+' at line 17 in state 70, call variable, goto 204
Shift token '+' at line 17 in state 204, goto 149
Shift token IDENT = "i1" at line 17 in state 149, goto 70
Reduce #1 to expression by token ';' at line 17 in state 70, call variable, goto 226
Reduce #3 to expression by token ';' at line 17 in state 226, call operator "+", goto 204
Reduce #3 to expression by token ';' at line 17 in state 204, call operator "=", goto 67
Shift token ';' at line 17 in state 67, goto 124
Reduce #2 to statement by token IDENT = "swap" at line 18 in state 124, call free_expression, goto 66
Shift token IDENT = "swap" at line 18 in state 66, goto 70
Reduce #1 to expression by token '(' at line 18 in state 70, call variable, goto 67
Shift token '(' at line 18 in state 67, goto 123
Shift token IDENT = "i1" at line 18 in state 123, goto 70
Reduce #1 to expression by token ',' at line 18 in state 70, call variable, goto 175
Shift token ',' at line 18 in state 175, goto 237
Shift token IDENT = "i2" at line 18 in state 237, goto 70
Reduce #1 to expression by token ')' at line 18 in state 70, call variable, goto 175
Reduce #1 to expressionlist by token ')' at line 18 in state 175, goto 261
Reduce #3 to expressionlist by token ')' at line 18 in state 261, goto 200
Shift token ')' at line 18 in state 200, goto 259
Reduce #4 to expression by token ';' at line 18 in state 259, call operator "()", goto 67
Shift token ';' at line 18 in state 67, goto 124
Reduce #2 to statement by token IDENT = "i" at line 19 in state 124, call free_expression, goto 66
Shift token IDENT = "i" at line 19 in state 66, goto 70
Reduce #1 to expression by token "+=" at line 19 in state 70, call variable, goto 67
Shift token "+=" at line 19 in state 67, goto 129
Shift token CARDINAL = "1" at line 19 in state 129, goto 73
Reduce #1 to expression by token ';' at line 19 in state 73, call constant "constexpr uint", goto 206
Reduce #3 to expression by token ';' at line 19 in state 206, call assign_operator "+", goto 67
Shift token ';' at line 19 in state 67, goto 124
Reduce #2 to statement by token '}' at line 20 in state 124, call free_expression, goto 66
Reduce #0 to statementlist by token '}' at line 20 in state 66, goto 121
Reduce #2 to statementlist by token '}' at line 20 in state 121, goto 121
Reduce #2 to statementlist by token '}' at line 20 in state 121, goto 121
Reduce #2 to statementlist by token '}' at line 20 in state 121, goto 65
Reduce #1 to codeblock by token '}' at line 20 in state 65, call codeblock, goto 288
Shift token '}' at line 20 in state 288, goto 296
Reduce #7 to statement by token "return" at line 21 in state 296, call conditional_while, goto 66
Shift token "return" at line 21 in state 66, goto 80
Shift token IDENT = "i2" at line 21 in state 80, goto 70
Reduce #1 to expression by token ';' at line 21 in state 70, call variable, goto 165
Shift token ';' at line 21 in state 165, goto 240
Reduce #3 to statement by token '}' at line 22 in state 240, call return_value, goto 66
Reduce #0 to statementlist by token '}' at line 22 in state 66, goto 121
Reduce #2 to statementlist by token '}' at line 22 in state 121, goto 121
Reduce #2 to statementlist by token '}' at line 22 in state 121, goto 121
Reduce #2 to statementlist by token '}' at line 22 in state 121, goto 121
Reduce #2 to statementlist by token '}' at line 22 in state 121, goto 121
Reduce #2 to statementlist by token '}' at line 22 in state 121, goto 65
Reduce #1 to codeblock by token '}' at line 22 in state 65, call codeblock, goto 281
Shift token '}' at line 22 in state 281, goto 290
Reduce #6 to callablebody by token "main" at line 24 in state 290, call callablebody "&", goto 177
Reduce #5 to functiondefinition by token "main" at line 24 in state 177, call funcdef, goto 15
Reduce #1 to free_definition by token "main" at line 24 in state 15, call definition, goto 7
Reduce #0 to free_definitionlist by token "main" at line 24 in state 7, goto 29
Reduce #2 to free_definitionlist by token "main" at line 24 in state 29, goto 29
Reduce #2 to free_definitionlist by token "main" at line 24 in state 29, goto 5
Shift token "main" at line 24 in state 5, goto 28
Shift token '{' at line 25 in state 28, goto 45
Shift token "var" at line 26 in state 45, goto 79
Shift token IDENT = "int" at line 26 in state 79, goto 17
Reduce #1 to typename by token IDENT = "val" at line 26 in state 17, goto 8
Reduce #1 to typespec by token IDENT = "val" at line 26 in state 8, call typespec "", goto 9
Shift token IDENT = "val" at line 26 in state 9, goto 32
Shift token '=' at line 26 in state 32, goto 48
Shift token IDENT = "fibonacci" at line 26 in state 48, goto 70
Reduce #1 to expression by token '(' at line 26 in state 70, call variable, goto 92
Shift token '(' at line 26 in state 92, goto 123
Shift token CARDINAL = "20" at line 26 in state 123, goto 73
Reduce #1 to expression by token ')' at line 26 in state 73, call constant "constexpr uint", goto 175
Reduce #1 to expressionlist by token ')' at line 26 in state 175, goto 200
Shift token ')' at line 26 in state 200, goto 259
Reduce #4 to expression by token ';' at line 26 in state 259, call operator "()", goto 92
Reduce #4 to variabledefinition by token ';' at line 26 in state 92, call vardef_assign, goto 164
Shift token ';' at line 26 in state 164, goto 239
Reduce #3 to statement by token IDENT = "printf" at line 27 in state 239, call definition, goto 66
Shift token IDENT = "printf" at line 27 in state 66, goto 70
Reduce #1 to expression by token '(' at line 27 in state 70, call variable, goto 67
Shift token '(' at line 27 in state 67, goto 123
Shift token DQSTRING = "Result: %d\n" at line 27 in state 123, goto 71
Reduce #1 to expression by token ',' at line 27 in state 71, call string_constant "constexpr float", goto 175
Shift token ',' at line 27 in state 175, goto 237
Shift token IDENT = "val" at line 27 in state 237, goto 70
Reduce #1 to expression by token ')' at line 27 in state 70, call variable, goto 175
Reduce #1 to expressionlist by token ')' at line 27 in state 175, goto 261
Reduce #3 to expressionlist by token ')' at line 27 in state 261, goto 200
Shift token ')' at line 27 in state 200, goto 259
Reduce #4 to expression by token ';' at line 27 in state 259, call operator "()", goto 67
Shift token ';' at line 27 in state 67, goto 124
Reduce #2 to statement by token '}' at line 28 in state 124, call free_expression, goto 66
Reduce #0 to statementlist by token '}' at line 28 in state 66, goto 121
Reduce #2 to statementlist by token '}' at line 28 in state 121, goto 121
Reduce #2 to statementlist by token '}' at line 28 in state 121, goto 65
Reduce #1 to codeblock by token '}' at line 28 in state 65, call codeblock, goto 64
Shift token '}' at line 28 in state 64, goto 120
Accept
Calling Lua function: program
Lua call result [1]
{
  arg = {
    {
      arg = {
        {
          line = 1,
          name = "DQSTRING",
          value = "C"},
        {
          line = 1,
          name = "IDENT",
          value = "printf"},
        {
          arg = {
            {
              arg = {
                {
                  line = 1,
                  name = "IDENT",
                  value = "byte"}},
              call = {
                name = "typespec const^",
                obj = "const^",
                proc = <function>},
              line = 1,
              step = 0},
            {
              arg = {
                {
                  line = 1,
                  name = "IDENT",
                  value = "int"}},
              call = {
                name = "typespec ",
                obj = "",
                proc = <function>},
              line = 1,
              step = 0}},
          call = {
            name = "extern_paramdeflist",
            proc = <function>},
          line = 1,
          step = 0}},
      call = {
        name = "extern_procdef",
        proc = <function>},
      line = 1,
      step = 0},
    {
      arg = {
        {
          arg = {
            {
              arg = {},
              call = {
                name = "linkage {linkage="internal",attributes="#0 nounwind"}",
                obj = {
                  attributes = "#0 nounwind",
                  linkage = "internal"},
                proc = <function>},
              line = 1,
              step = 0},
            {
              line = 3,
              name = "IDENT",
              value = "swap"},
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {
                        {
                          arg = {
                            {
                              line = 3,
                              name = "IDENT",
                              value = "int"}},
                          call = {
                            name = "typespec &",
                            obj = "&",
                            proc = <function>},
                          line = 3,
                          step = 0},
                        {
                          line = 3,
                          name = "IDENT",
                          value = "a"}},
                      call = {
                        name = "paramdef",
                        proc = <function>},
                      line = 3,
                      step = 0},
                    {
                      arg = {
                        {
                          arg = {
                            {
                              line = 3,
                              name = "IDENT",
                              value = "int"}},
                          call = {
                            name = "typespec &",
                            obj = "&",
                            proc = <function>},
                          line = 3,
                          step = 0},
                        {
                          line = 3,
                          name = "IDENT",
                          value = "b"}},
                      call = {
                        name = "paramdef",
                        proc = <function>},
                      line = 3,
                      step = 0}},
                  call = {
                    name = "paramdeflist",
                    proc = <function>},
                  line = 3,
                  step = 0},
                {
                  arg = {
                    {
                      arg = {
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  line = 5,
                                  name = "IDENT",
                                  value = "int"}},
                              call = {
                                name = "typespec ",
                                obj = "",
                                proc = <function>},
                              line = 5,
                              step = 0},
                            {
                              line = 5,
                              name = "IDENT",
                              value = "tmp"},
                            {
                              arg = {
                                {
                                  line = 5,
                                  name = "IDENT",
                                  value = "a"}},
                              call = {
                                name = "variable",
                                proc = <function>},
                              line = 5,
                              step = 0}},
                          call = {
                            name = "vardef_assign",
                            proc = <function>},
                          line = 5,
                          step = 1}},
                      call = {
                        name = "definition",
                        proc = <function>},
                      line = 5,
                      step = 1},
                    {
                      arg = {
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  line = 6,
                                  name = "IDENT",
                                  value = "a"}},
                              call = {
                                name = "variable",
                                proc = <function>},
                              line = 6,
                              step = 1},
                            {
                              arg = {
                                {
                                  line = 6,
                                  name = "IDENT",
                                  value = "b"}},
                              call = {
                                name = "variable",
                                proc = <function>},
                              line = 6,
                              step = 1}},
                          call = {
                            name = "operator =",
                            obj = "=",
                            proc = <function>},
                          line = 6,
                          step = 1}},
                      call = {
                        name = "free_expression",
                        proc = <function>},
                      line = 6,
                      step = 1},
                    {
                      arg = {
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  line = 7,
                                  name = "IDENT",
                                  value = "b"}},
                              call = {
                                name = "variable",
                                proc = <function>},
                              line = 7,
                              step = 1},
                            {
                              arg = {
                                {
                                  line = 7,
                                  name = "IDENT",
                                  value = "tmp"}},
                              call = {
                                name = "variable",
                                proc = <function>},
                              line = 7,
                              step = 1}},
                          call = {
                            name = "operator =",
                            obj = "=",
                            proc = <function>},
                          line = 7,
                          step = 1}},
                      call = {
                        name = "free_expression",
                        proc = <function>},
                      line = 7,
                      step = 1}},
                  call = {
                    name = "codeblock",
                    proc = <function>},
                  line = 7,
                  step = 1}},
              call = {
                name = "callablebody &",
                obj = "&",
                proc = <function>},
              line = 7,
              scope = {
                0,
                2}}},
          call = {
            name = "procdef",
            proc = <function>},
          line = 7,
          step = 2}},
      call = {
        name = "definition",
        proc = <function>},
      line = 7,
      step = 2},
    {
      arg = {
        {
          arg = {
            {
              arg = {},
              call = {
                name = "linkage {linkage="internal",attributes="#0 nounwind"}",
                obj = {
                  attributes = "#0 nounwind",
                  linkage = "internal"},
                proc = <function>},
              line = 7,
              step = 2},
            {
              arg = {
                {
                  line = 10,
                  name = "IDENT",
                  value = "int"}},
              call = {
                name = "typespec ",
                obj = "",
                proc = <function>},
              line = 10,
              step = 2},
            {
              line = 10,
              name = "IDENT",
              value = "fibonacci"},
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {
                        {
                          arg = {
                            {
                              line = 10,
                              name = "IDENT",
                              value = "int"}},
                          call = {
                            name = "typespec ",
                            obj = "",
                            proc = <function>},
                          line = 10,
                          step = 2},
                        {
                          line = 10,
                          name = "IDENT",
                          value = "n"}},
                      call = {
                        name = "paramdef",
                        proc = <function>},
                      line = 10,
                      step = 2}},
                  call = {
                    name = "paramdeflist",
                    proc = <function>},
                  line = 10,
                  step = 2},
                {
                  arg = {
                    {
                      arg = {
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  line = 12,
                                  name = "IDENT",
                                  value = "int"}},
                              call = {
                                name = "typespec ",
                                obj = "",
                                proc = <function>},
                              line = 12,
                              step = 2},
                            {
                              line = 12,
                              name = "IDENT",
                              value = "i1"},
                            {
                              arg = {
                                {
                                  line = 12,
                                  name = "CARDINAL",
                                  value = "0"}},
                              call = {
                                name = "constant constexpr uint",
                                obj = "constexpr uint",
                                proc = <function>},
                              line = 12,
                              step = 2}},
                          call = {
                            name = "vardef_assign",
                            proc = <function>},
                          line = 12,
                          step = 3}},
                      call = {
                        name = "definition",
                        proc = <function>},
                      line = 12,
                      step = 3},
                    {
                      arg = {
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  line = 13,
                                  name = "IDENT",
                                  value = "int"}},
                              call = {
                                name = "typespec ",
                                obj = "",
                                proc = <function>},
                              line = 13,
                              step = 3},
                            {
                              line = 13,
                              name = "IDENT",
                              value = "i2"},
                            {
                              arg = {
                                {
                                  line = 13,
                                  name = "CARDINAL",
                                  value = "1"}},
                              call = {
                                name = "constant constexpr uint",
                                obj = "constexpr uint",
                                proc = <function>},
                              line = 13,
                              step = 3}},
                          call = {
                            name = "vardef_assign",
                            proc = <function>},
                          line = 13,
                          step = 4}},
                      call = {
                        name = "definition",
                        proc = <function>},
                      line = 13,
                      step = 4},
                    {
                      arg = {
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  line = 14,
                                  name = "IDENT",
                                  value = "int"}},
                              call = {
                                name = "typespec ",
                                obj = "",
                                proc = <function>},
                              line = 14,
                              step = 4},
                            {
                              line = 14,
                              name = "IDENT",
                              value = "i"},
                            {
                              arg = {
                                {
                                  line = 14,
                                  name = "CARDINAL",
                                  value = "0"}},
                              call = {
                                name = "constant constexpr uint",
                                obj = "constexpr uint",
                                proc = <function>},
                              line = 14,
                              step = 4}},
                          call = {
                            name = "vardef_assign",
                            proc = <function>},
                          line = 14,
                          step = 5}},
                      call = {
                        name = "definition",
                        proc = <function>},
                      line = 14,
                      step = 5},
                    {
                      arg = {
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  line = 15,
                                  name = "IDENT",
                                  value = "i"}},
                              call = {
                                name = "variable",
                                proc = <function>},
                              line = 15,
                              step = 5},
                            {
                              arg = {
                                {
                                  line = 15,
                                  name = "IDENT",
                                  value = "n"}},
                              call = {
                                name = "variable",
                                proc = <function>},
                              line = 15,
                              step = 5}},
                          call = {
                            name = "operator <",
                            obj = "<",
                            proc = <function>},
                          line = 15,
                          step = 5},
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          line = 17,
                                          name = "IDENT",
                                          value = "i1"}},
                                      call = {
                                        name = "variable",
                                        proc = <function>},
                                      line = 17,
                                      step = 5},
                                    {
                                      arg = {
                                        {
                                          arg = {
                                            {
                                              line = 17,
                                              name = "IDENT",
                                              value = "i2"}},
                                          call = {
                                            name = "variable",
                                            proc = <function>},
                                          line = 17,
                                          step = 5},
                                        {
                                          arg = {
                                            {
                                              line = 17,
                                              name = "IDENT",
                                              value = "i1"}},
                                          call = {
                                            name = "variable",
                                            proc = <function>},
                                          line = 17,
                                          step = 5}},
                                      call = {
                                        name = "operator +",
                                        obj = "+",
                                        proc = <function>},
                                      line = 17,
                                      step = 5}},
                                  call = {
                                    name = "operator =",
                                    obj = "=",
                                    proc = <function>},
                                  line = 17,
                                  step = 5}},
                              call = {
                                name = "free_expression",
                                proc = <function>},
                              line = 17,
                              step = 5},
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          line = 18,
                                          name = "IDENT",
                                          value = "swap"}},
                                      call = {
                                        name = "variable",
                                        proc = <function>},
                                      line = 18,
                                      step = 5},
                                    {
                                      arg = {
                                        {
                                          line = 18,
                                          name = "IDENT",
                                          value = "i1"}},
                                      call = {
                                        name = "variable",
                                        proc = <function>},
                                      line = 18,
                                      step = 5},
                                    {
                                      arg = {
                                        {
                                          line = 18,
                                          name = "IDENT",
                                          value = "i2"}},
                                      call = {
                                        name = "variable",
                                        proc = <function>},
                                      line = 18,
                                      step = 5}},
                                  call = {
                                    name = "operator ()",
                                    obj = "()",
                                    proc = <function>},
                                  line = 18,
                                  step = 5}},
                              call = {
                                name = "free_expression",
                                proc = <function>},
                              line = 18,
                              step = 5},
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          line = 19,
                                          name = "IDENT",
                                          value = "i"}},
                                      call = {
                                        name = "variable",
                                        proc = <function>},
                                      line = 19,
                                      step = 5},
                                    {
                                      arg = {
                                        {
                                          line = 19,
                                          name = "CARDINAL",
                                          value = "1"}},
                                      call = {
                                        name = "constant constexpr uint",
                                        obj = "constexpr uint",
                                        proc = <function>},
                                      line = 19,
                                      step = 5}},
                                  call = {
                                    name = "assign_operator +",
                                    obj = "+",
                                    proc = <function>},
                                  line = 19,
                                  step = 5}},
                              call = {
                                name = "free_expression",
                                proc = <function>},
                              line = 19,
                              step = 5}},
                          call = {
                            name = "codeblock",
                            proc = <function>},
                          line = 19,
                          step = 5}},
                      call = {
                        name = "conditional_while",
                        proc = <function>},
                      line = 19,
                      scope = {
                        5,
                        6}},
                    {
                      arg = {
                        {
                          arg = {
                            {
                              line = 21,
                              name = "IDENT",
                              value = "i2"}},
                          call = {
                            name = "variable",
                            proc = <function>},
                          line = 21,
                          step = 6}},
                      call = {
                        name = "return_value",
                        proc = <function>},
                      line = 21,
                      step = 7}},
                  call = {
                    name = "codeblock",
                    proc = <function>},
                  line = 21,
                  step = 7}},
              call = {
                name = "callablebody &",
                obj = "&",
                proc = <function>},
              line = 21,
              scope = {
                2,
                8}}},
          call = {
            name = "funcdef",
            proc = <function>},
          line = 21,
          step = 8}},
      call = {
        name = "definition",
        proc = <function>},
      line = 21,
      step = 8},
    {
      arg = {
        {
          arg = {
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {
                        {
                          line = 26,
                          name = "IDENT",
                          value = "int"}},
                      call = {
                        name = "typespec ",
                        obj = "",
                        proc = <function>},
                      line = 26,
                      step = 8},
                    {
                      line = 26,
                      name = "IDENT",
                      value = "val"},
                    {
                      arg = {
                        {
                          arg = {
                            {
                              line = 26,
                              name = "IDENT",
                              value = "fibonacci"}},
                          call = {
                            name = "variable",
                            proc = <function>},
                          line = 26,
                          step = 8},
                        {
                          arg = {
                            {
                              line = 26,
                              name = "CARDINAL",
                              value = "20"}},
                          call = {
                            name = "constant constexpr uint",
                            obj = "constexpr uint",
                            proc = <function>},
                          line = 26,
                          step = 8}},
                      call = {
                        name = "operator ()",
                        obj = "()",
                        proc = <function>},
                      line = 26,
                      step = 8}},
                  call = {
                    name = "vardef_assign",
                    proc = <function>},
                  line = 26,
                  step = 9}},
              call = {
                name = "definition",
                proc = <function>},
              line = 26,
              step = 9},
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {
                        {
                          line = 27,
                          name = "IDENT",
                          value = "printf"}},
                      call = {
                        name = "variable",
                        proc = <function>},
                      line = 27,
                      step = 9},
                    {
                      arg = {
                        {
                          line = 27,
                          name = "DQSTRING",
                          value = "Result: %d\\n"}},
                      call = {
                        name = "string_constant constexpr float",
                        obj = "constexpr float",
                        proc = <function>},
                      line = 27,
                      step = 9},
                    {
                      arg = {
                        {
                          line = 27,
                          name = "IDENT",
                          value = "val"}},
                      call = {
                        name = "variable",
                        proc = <function>},
                      line = 27,
                      step = 9}},
                  call = {
                    name = "operator ()",
                    obj = "()",
                    proc = <function>},
                  line = 27,
                  step = 9}},
              call = {
                name = "free_expression",
                proc = <function>},
              line = 27,
              step = 9}},
          call = {
            name = "codeblock",
            proc = <function>},
          line = 27,
          step = 9}},
      call = {
        name = "main_procdef",
        proc = <function>},
      line = 27,
      scope = {
        8,
        10}}},
  call = {
    name = "program",
    proc = <function>},
  line = 27,
  step = 10}
