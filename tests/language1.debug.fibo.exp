Shift token "extern" at line 3 in state XXX, goto XXX
Shift token DQSTRING = "C" at line 3 in state XXX, goto XXX
Shift token "procedure" at line 3 in state XXX, goto XXX
Shift token IDENT = "printf" at line 3 in state XXX, goto XXX
Shift token '(' at line 3 in state XXX, goto XXX
Shift token "const" at line 3 in state XXX, goto XXX
Shift token IDENT = "byte" at line 3 in state XXX, goto XXX
Reduce #1 to typename by token '^' at line 3 in state XXX, goto XXX
Reduce #2 to typehdr by token '^' at line 3 in state XXX, call typehdr {const=true}, goto XXX
Reduce #1 to typegen by token '^' at line 3 in state XXX, goto XXX
Shift token '^' at line 3 in state XXX, goto XXX
Reduce #2 to typegen by token IDENT = "fmt" at line 3 in state XXX, call typegen_pointer {const=false}, goto XXX
Reduce #1 to typespec by token IDENT = "fmt" at line 3 in state XXX, call typespec, goto XXX
Shift token IDENT = "fmt" at line 3 in state XXX, goto XXX
Shift token ',' at line 3 in state XXX, goto XXX
Shift token IDENT = "int" at line 3 in state XXX, goto XXX
Reduce #1 to typename by token IDENT = "arg" at line 3 in state XXX, goto XXX
Reduce #1 to typehdr by token IDENT = "arg" at line 3 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token IDENT = "arg" at line 3 in state XXX, goto XXX
Reduce #1 to typespec by token IDENT = "arg" at line 3 in state XXX, call typespec, goto XXX
Shift token IDENT = "arg" at line 3 in state XXX, goto XXX
Reduce #2 to extern_parameters by token ')' at line 3 in state XXX, call extern_paramdeftail, goto XXX
Reduce #4 to extern_parameters by token ')' at line 3 in state XXX, call extern_paramdef, goto XXX
Reduce #1 to extern_paramlist by token ')' at line 3 in state XXX, call extern_paramdeflist, goto XXX
Shift token ')' at line 3 in state XXX, goto XXX
Shift token ';' at line 3 in state XXX, goto XXX
Reduce #8 to extern_definition by token "private" at line 5 in state XXX, call extern_procdef, goto XXX
Reduce #0 to extern_definitionlist by token "private" at line 5 in state XXX, goto XXX
Reduce #2 to extern_definitionlist by token "private" at line 5 in state XXX, goto XXX
Shift token "private" at line 5 in state XXX, goto XXX
Reduce #1 to linkage by token "function" at line 5 in state XXX, call linkage {private=true,linkage="internal",explicit=true}, goto XXX
Shift token "function" at line 5 in state XXX, goto XXX
Shift token IDENT = "fibonacci" at line 5 in state XXX, goto XXX
Shift token IDENT = "int" at line 5 in state XXX, goto XXX
Reduce #1 to typename by token '(' at line 5 in state XXX, goto XXX
Reduce #1 to typehdr by token '(' at line 5 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token '(' at line 5 in state XXX, goto XXX
Reduce #1 to typespec by token '(' at line 5 in state XXX, call typespec, goto XXX
Shift token '(' at line 5 in state XXX, goto XXX
Shift token IDENT = "int" at line 5 in state XXX, goto XXX
Reduce #1 to typename by token IDENT = "n" at line 5 in state XXX, goto XXX
Reduce #1 to typehdr by token IDENT = "n" at line 5 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token IDENT = "n" at line 5 in state XXX, goto XXX
Reduce #1 to typespec by token IDENT = "n" at line 5 in state XXX, call typespec, goto XXX
Shift token IDENT = "n" at line 5 in state XXX, goto XXX
Reduce #2 to paramdecl by token ')' at line 5 in state XXX, call paramdef, goto XXX
Reduce #1 to parameters by token ')' at line 5 in state XXX, goto XXX
Reduce #1 to parameterlist by token ')' at line 5 in state XXX, call paramdeflist, goto XXX
Shift token ')' at line 5 in state XXX, goto XXX
Shift token "nothrow" at line 5 in state XXX, goto XXX
Shift token '{' at line 6 in state XXX, goto XXX
Reduce #0 to linkage by token "procedure" at line 7 in state XXX, call linkage {private=false,linkage="external",explicit=false}, goto XXX
Shift token "procedure" at line 7 in state XXX, goto XXX
Shift token IDENT = "swap" at line 7 in state XXX, goto XXX
Shift token '(' at line 7 in state XXX, goto XXX
Shift token IDENT = "int" at line 7 in state XXX, goto XXX
Reduce #1 to typename by token '&' at line 7 in state XXX, goto XXX
Reduce #1 to typehdr by token '&' at line 7 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token '&' at line 7 in state XXX, goto XXX
Shift token '&' at line 7 in state XXX, goto XXX
Reduce #2 to typespec by token IDENT = "a" at line 7 in state XXX, call typespec_ref, goto XXX
Shift token IDENT = "a" at line 7 in state XXX, goto XXX
Reduce #2 to paramdecl by token ',' at line 7 in state XXX, call paramdef, goto XXX
Shift token ',' at line 7 in state XXX, goto XXX
Shift token IDENT = "int" at line 7 in state XXX, goto XXX
Reduce #1 to typename by token '&' at line 7 in state XXX, goto XXX
Reduce #1 to typehdr by token '&' at line 7 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token '&' at line 7 in state XXX, goto XXX
Shift token '&' at line 7 in state XXX, goto XXX
Reduce #2 to typespec by token IDENT = "b" at line 7 in state XXX, call typespec_ref, goto XXX
Shift token IDENT = "b" at line 7 in state XXX, goto XXX
Reduce #2 to paramdecl by token ')' at line 7 in state XXX, call paramdef, goto XXX
Reduce #1 to parameters by token ')' at line 7 in state XXX, goto XXX
Reduce #3 to parameters by token ')' at line 7 in state XXX, goto XXX
Reduce #1 to parameterlist by token ')' at line 7 in state XXX, call paramdeflist, goto XXX
Shift token ')' at line 7 in state XXX, goto XXX
Shift token "nothrow" at line 7 in state XXX, goto XXX
Shift token '{' at line 8 in state XXX, goto XXX
Shift token "var" at line 9 in state XXX, goto XXX
Shift token IDENT = "int" at line 9 in state XXX, goto XXX
Reduce #1 to typename by token IDENT = "tmp" at line 9 in state XXX, goto XXX
Reduce #1 to typehdr by token IDENT = "tmp" at line 9 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token IDENT = "tmp" at line 9 in state XXX, goto XXX
Reduce #1 to typespec by token IDENT = "tmp" at line 9 in state XXX, call typespec, goto XXX
Shift token IDENT = "tmp" at line 9 in state XXX, goto XXX
Shift token '=' at line 9 in state XXX, goto XXX
Shift token IDENT = "a" at line 9 in state XXX, goto XXX
Reduce #1 to expression by token ';' at line 9 in state XXX, call variable, goto XXX
Reduce #4 to variabledefinition by token ';' at line 9 in state XXX, call vardef_assign, goto XXX
Shift token ';' at line 9 in state XXX, goto XXX
Reduce #3 to statement by token IDENT = "a" at line 10 in state XXX, call definition 1, goto XXX
Shift token IDENT = "a" at line 10 in state XXX, goto XXX
Reduce #1 to expression by token '=' at line 10 in state XXX, call variable, goto XXX
Shift token '=' at line 10 in state XXX, goto XXX
Shift token IDENT = "b" at line 10 in state XXX, goto XXX
Reduce #1 to expression by token ';' at line 10 in state XXX, call variable, goto XXX
Reduce #3 to expression by token ';' at line 10 in state XXX, call binop "=", goto XXX
Shift token ';' at line 10 in state XXX, goto XXX
Reduce #2 to statement by token IDENT = "b" at line 11 in state XXX, call free_expression, goto XXX
Shift token IDENT = "b" at line 11 in state XXX, goto XXX
Reduce #1 to expression by token '=' at line 11 in state XXX, call variable, goto XXX
Shift token '=' at line 11 in state XXX, goto XXX
Shift token IDENT = "tmp" at line 11 in state XXX, goto XXX
Reduce #1 to expression by token ';' at line 11 in state XXX, call variable, goto XXX
Reduce #3 to expression by token ';' at line 11 in state XXX, call binop "=", goto XXX
Shift token ';' at line 11 in state XXX, goto XXX
Reduce #2 to statement by token '}' at line 12 in state XXX, call free_expression, goto XXX
Reduce #0 to statementlist by token '}' at line 12 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 12 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 12 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 12 in state XXX, goto XXX
Shift token '}' at line 12 in state XXX, goto XXX
Reduce #7 to callablebody by token "var" at line 13 in state XXX, call callablebody {throws=false,const=false}, goto XXX
Reduce #4 to functiondefinition by token "var" at line 13 in state XXX, call procdef, goto XXX
Reduce #1 to statement by token "var" at line 13 in state XXX, call definition 1, goto XXX
Shift token "var" at line 13 in state XXX, goto XXX
Shift token IDENT = "int" at line 13 in state XXX, goto XXX
Reduce #1 to typename by token IDENT = "i1" at line 13 in state XXX, goto XXX
Reduce #1 to typehdr by token IDENT = "i1" at line 13 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token IDENT = "i1" at line 13 in state XXX, goto XXX
Reduce #1 to typespec by token IDENT = "i1" at line 13 in state XXX, call typespec, goto XXX
Shift token IDENT = "i1" at line 13 in state XXX, goto XXX
Shift token '=' at line 13 in state XXX, goto XXX
Shift token UINTEGER = "0" at line 13 in state XXX, goto XXX
Reduce #1 to expression by token ';' at line 13 in state XXX, call constant "constexpr uint", goto XXX
Reduce #4 to variabledefinition by token ';' at line 13 in state XXX, call vardef_assign, goto XXX
Shift token ';' at line 13 in state XXX, goto XXX
Reduce #3 to statement by token "var" at line 14 in state XXX, call definition 1, goto XXX
Shift token "var" at line 14 in state XXX, goto XXX
Shift token IDENT = "int" at line 14 in state XXX, goto XXX
Reduce #1 to typename by token IDENT = "i2" at line 14 in state XXX, goto XXX
Reduce #1 to typehdr by token IDENT = "i2" at line 14 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token IDENT = "i2" at line 14 in state XXX, goto XXX
Reduce #1 to typespec by token IDENT = "i2" at line 14 in state XXX, call typespec, goto XXX
Shift token IDENT = "i2" at line 14 in state XXX, goto XXX
Shift token '=' at line 14 in state XXX, goto XXX
Shift token UINTEGER = "1" at line 14 in state XXX, goto XXX
Reduce #1 to expression by token ';' at line 14 in state XXX, call constant "constexpr uint", goto XXX
Reduce #4 to variabledefinition by token ';' at line 14 in state XXX, call vardef_assign, goto XXX
Shift token ';' at line 14 in state XXX, goto XXX
Reduce #3 to statement by token "var" at line 15 in state XXX, call definition 1, goto XXX
Shift token "var" at line 15 in state XXX, goto XXX
Shift token IDENT = "int" at line 15 in state XXX, goto XXX
Reduce #1 to typename by token IDENT = "i" at line 15 in state XXX, goto XXX
Reduce #1 to typehdr by token IDENT = "i" at line 15 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token IDENT = "i" at line 15 in state XXX, goto XXX
Reduce #1 to typespec by token IDENT = "i" at line 15 in state XXX, call typespec, goto XXX
Shift token IDENT = "i" at line 15 in state XXX, goto XXX
Shift token '=' at line 15 in state XXX, goto XXX
Shift token UINTEGER = "0" at line 15 in state XXX, goto XXX
Reduce #1 to expression by token ';' at line 15 in state XXX, call constant "constexpr uint", goto XXX
Reduce #4 to variabledefinition by token ';' at line 15 in state XXX, call vardef_assign, goto XXX
Shift token ';' at line 15 in state XXX, goto XXX
Reduce #3 to statement by token "while" at line 16 in state XXX, call definition 1, goto XXX
Shift token "while" at line 16 in state XXX, goto XXX
Shift token '(' at line 16 in state XXX, goto XXX
Shift token IDENT = "i" at line 16 in state XXX, goto XXX
Reduce #1 to expression by token '<' at line 16 in state XXX, call variable, goto XXX
Shift token '<' at line 16 in state XXX, goto XXX
Shift token IDENT = "n" at line 16 in state XXX, goto XXX
Reduce #1 to expression by token ')' at line 16 in state XXX, call variable, goto XXX
Reduce #3 to expression by token ')' at line 16 in state XXX, call binop "<", goto XXX
Shift token ')' at line 16 in state XXX, goto XXX
Shift token '{' at line 17 in state XXX, goto XXX
Shift token IDENT = "i1" at line 18 in state XXX, goto XXX
Reduce #1 to expression by token '=' at line 18 in state XXX, call variable, goto XXX
Shift token '=' at line 18 in state XXX, goto XXX
Shift token IDENT = "i2" at line 18 in state XXX, goto XXX
Reduce #1 to expression by token '+' at line 18 in state XXX, call variable, goto XXX
Shift token '+' at line 18 in state XXX, goto XXX
Shift token IDENT = "i1" at line 18 in state XXX, goto XXX
Reduce #1 to expression by token ';' at line 18 in state XXX, call variable, goto XXX
Reduce #3 to expression by token ';' at line 18 in state XXX, call binop "+", goto XXX
Reduce #3 to expression by token ';' at line 18 in state XXX, call binop "=", goto XXX
Shift token ';' at line 18 in state XXX, goto XXX
Reduce #2 to statement by token IDENT = "swap" at line 19 in state XXX, call free_expression, goto XXX
Shift token IDENT = "swap" at line 19 in state XXX, goto XXX
Reduce #1 to expression by token '(' at line 19 in state XXX, call variable, goto XXX
Shift token '(' at line 19 in state XXX, goto XXX
Shift token IDENT = "i1" at line 19 in state XXX, goto XXX
Reduce #1 to expression by token ',' at line 19 in state XXX, call variable, goto XXX
Shift token ',' at line 19 in state XXX, goto XXX
Shift token IDENT = "i2" at line 19 in state XXX, goto XXX
Reduce #1 to expression by token ')' at line 19 in state XXX, call variable, goto XXX
Reduce #1 to expressionlist by token ')' at line 19 in state XXX, goto XXX
Reduce #3 to expressionlist by token ')' at line 19 in state XXX, goto XXX
Shift token ')' at line 19 in state XXX, goto XXX
Reduce #4 to expression by token ';' at line 19 in state XXX, call operator "()", goto XXX
Shift token ';' at line 19 in state XXX, goto XXX
Reduce #2 to statement by token IDENT = "i" at line 20 in state XXX, call free_expression, goto XXX
Shift token IDENT = "i" at line 20 in state XXX, goto XXX
Reduce #1 to expression by token "+=" at line 20 in state XXX, call variable, goto XXX
Shift token "+=" at line 20 in state XXX, goto XXX
Shift token UINTEGER = "1" at line 20 in state XXX, goto XXX
Reduce #1 to expression by token ';' at line 20 in state XXX, call constant "constexpr uint", goto XXX
Reduce #3 to expression by token ';' at line 20 in state XXX, call assign_operator "+", goto XXX
Shift token ';' at line 20 in state XXX, goto XXX
Reduce #2 to statement by token '}' at line 21 in state XXX, call free_expression, goto XXX
Reduce #0 to statementlist by token '}' at line 21 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 21 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 21 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 21 in state XXX, goto XXX
Shift token '}' at line 21 in state XXX, goto XXX
Reduce #3 to codeblock by token "return" at line 22 in state XXX, call codeblock, goto XXX
Reduce #5 to statement by token "return" at line 22 in state XXX, call conditional_while, goto XXX
Shift token "return" at line 22 in state XXX, goto XXX
Shift token IDENT = "i2" at line 22 in state XXX, goto XXX
Reduce #1 to expression by token ';' at line 22 in state XXX, call variable, goto XXX
Shift token ';' at line 22 in state XXX, goto XXX
Reduce #3 to statement by token '}' at line 23 in state XXX, call return_value, goto XXX
Reduce #0 to statementlist by token '}' at line 23 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 23 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 23 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 23 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 23 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 23 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 23 in state XXX, goto XXX
Shift token '}' at line 23 in state XXX, goto XXX
Reduce #7 to callablebody by token "main" at line 25 in state XXX, call callablebody {throws=false,const=false}, goto XXX
Reduce #5 to functiondefinition by token "main" at line 25 in state XXX, call funcdef, goto XXX
Reduce #1 to free_definition by token "main" at line 25 in state XXX, call definition 1, goto XXX
Reduce #0 to free_definitionlist by token "main" at line 25 in state XXX, goto XXX
Reduce #2 to free_definitionlist by token "main" at line 25 in state XXX, goto XXX
Shift token "main" at line 25 in state XXX, goto XXX
Shift token '{' at line 26 in state XXX, goto XXX
Shift token "var" at line 27 in state XXX, goto XXX
Shift token IDENT = "int" at line 27 in state XXX, goto XXX
Reduce #1 to typename by token IDENT = "val" at line 27 in state XXX, goto XXX
Reduce #1 to typehdr by token IDENT = "val" at line 27 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token IDENT = "val" at line 27 in state XXX, goto XXX
Reduce #1 to typespec by token IDENT = "val" at line 27 in state XXX, call typespec, goto XXX
Shift token IDENT = "val" at line 27 in state XXX, goto XXX
Shift token '=' at line 27 in state XXX, goto XXX
Shift token IDENT = "fibonacci" at line 27 in state XXX, goto XXX
Reduce #1 to expression by token '(' at line 27 in state XXX, call variable, goto XXX
Shift token '(' at line 27 in state XXX, goto XXX
Shift token UINTEGER = "20" at line 27 in state XXX, goto XXX
Reduce #1 to expression by token ')' at line 27 in state XXX, call constant "constexpr uint", goto XXX
Reduce #1 to expressionlist by token ')' at line 27 in state XXX, goto XXX
Shift token ')' at line 27 in state XXX, goto XXX
Reduce #4 to expression by token ';' at line 27 in state XXX, call operator "()", goto XXX
Reduce #4 to variabledefinition by token ';' at line 27 in state XXX, call vardef_assign, goto XXX
Shift token ';' at line 27 in state XXX, goto XXX
Reduce #3 to statement by token IDENT = "printf" at line 28 in state XXX, call definition 1, goto XXX
Shift token IDENT = "printf" at line 28 in state XXX, goto XXX
Reduce #1 to expression by token '(' at line 28 in state XXX, call variable, goto XXX
Shift token '(' at line 28 in state XXX, goto XXX
Shift token DQSTRING = "Result: %d\n" at line 28 in state XXX, goto XXX
Reduce #1 to expression by token ',' at line 28 in state XXX, call string_constant, goto XXX
Shift token ',' at line 28 in state XXX, goto XXX
Shift token IDENT = "val" at line 28 in state XXX, goto XXX
Reduce #1 to expression by token ')' at line 28 in state XXX, call variable, goto XXX
Reduce #1 to expressionlist by token ')' at line 28 in state XXX, goto XXX
Reduce #3 to expressionlist by token ')' at line 28 in state XXX, goto XXX
Shift token ')' at line 28 in state XXX, goto XXX
Reduce #4 to expression by token ';' at line 28 in state XXX, call operator "()", goto XXX
Shift token ';' at line 28 in state XXX, goto XXX
Reduce #2 to statement by token '}' at line 29 in state XXX, call free_expression, goto XXX
Reduce #0 to statementlist by token '}' at line 29 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 29 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 29 in state XXX, goto XXX
Shift token '}' at line 29 in state XXX, goto XXX
Reduce #2 to main_procedure by token $ at line 31 in state XXX, call main_procdef, goto XXX
Accept
Calling Lua function: program
Lua call result [1]
{
  arg = {
    {
      arg = {
        {
          line = 3,
          name = "DQSTRING",
          value = "C"},
        {
          line = 3,
          name = "IDENT",
          value = "printf"},
        {
          arg = {
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {
                        {
                          arg = {
                            {
                              line = 3,
                              name = "IDENT",
                              value = "byte"}},
                          call = {
                            name = "typehdr {const=true}",
                            obj = {
                              const = true},
                            proc = <function>},
                          line = 3,
                          step = 0}},
                      call = {
                        name = "typegen_pointer {const=false}",
                        obj = {
                          const = false},
                        proc = <function>},
                      line = 3,
                      step = 0}},
                  call = {
                    name = "typespec",
                    proc = <function>},
                  line = 3,
                  step = 0},
                {
                  line = 3,
                  name = "IDENT",
                  value = "fmt"},
                {
                  arg = {
                    {
                      arg = {
                        {
                          arg = {
                            {
                              line = 3,
                              name = "IDENT",
                              value = "int"}},
                          call = {
                            name = "typehdr {const=false}",
                            obj = {
                              const = false},
                            proc = <function>},
                          line = 3,
                          step = 0}},
                      call = {
                        name = "typespec",
                        proc = <function>},
                      line = 3,
                      step = 0},
                    {
                      line = 3,
                      name = "IDENT",
                      value = "arg"}},
                  call = {
                    name = "extern_paramdeftail",
                    proc = <function>},
                  line = 3,
                  step = 0}},
              call = {
                name = "extern_paramdef",
                proc = <function>},
              line = 3,
              step = 0}},
          call = {
            name = "extern_paramdeflist",
            proc = <function>},
          line = 3,
          step = 0}},
      call = {
        name = "extern_procdef",
        proc = <function>},
      line = 3,
      step = 0},
    {
      arg = {
        {
          arg = {
            {
              arg = {},
              call = {
                name = "linkage {private=true,linkage="internal",explicit=true}",
                obj = {
                  explicit = true,
                  linkage = "internal",
                  private = true},
                proc = <function>},
              line = 3,
              step = 0},
            {
              line = 5,
              name = "IDENT",
              value = "fibonacci"},
            {
              arg = {
                {
                  arg = {
                    {
                      line = 5,
                      name = "IDENT",
                      value = "int"}},
                  call = {
                    name = "typehdr {const=false}",
                    obj = {
                      const = false},
                    proc = <function>},
                  line = 5,
                  step = 0}},
              call = {
                name = "typespec",
                proc = <function>},
              line = 5,
              step = 0},
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  line = 5,
                                  name = "IDENT",
                                  value = "int"}},
                              call = {
                                name = "typehdr {const=false}",
                                obj = {
                                  const = false},
                                proc = <function>},
                              line = 5,
                              step = 0}},
                          call = {
                            name = "typespec",
                            proc = <function>},
                          line = 5,
                          step = 0},
                        {
                          line = 5,
                          name = "IDENT",
                          value = "n"}},
                      call = {
                        name = "paramdef",
                        proc = <function>},
                      line = 5,
                      step = 0}},
                  call = {
                    name = "paramdeflist",
                    proc = <function>},
                  line = 5,
                  step = 0},
                {
                  arg = {
                    {
                      arg = {
                        {
                          arg = {},
                          call = {
                            name = "linkage {private=false,linkage="external",explicit=false}",
                            obj = {
                              explicit = false,
                              linkage = "internal",
                              private = true},
                            proc = <function>},
                          line = 5,
                          step = 0},
                        {
                          line = 7,
                          name = "IDENT",
                          value = "swap"},
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          arg = {
                                            {
                                              line = 7,
                                              name = "IDENT",
                                              value = "int"}},
                                          call = {
                                            name = "typehdr {const=false}",
                                            obj = {
                                              const = false},
                                            proc = <function>},
                                          line = 7,
                                          step = 0}},
                                      call = {
                                        name = "typespec_ref",
                                        proc = <function>},
                                      line = 7,
                                      step = 0},
                                    {
                                      line = 7,
                                      name = "IDENT",
                                      value = "a"}},
                                  call = {
                                    name = "paramdef",
                                    proc = <function>},
                                  line = 7,
                                  step = 0},
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          arg = {
                                            {
                                              line = 7,
                                              name = "IDENT",
                                              value = "int"}},
                                          call = {
                                            name = "typehdr {const=false}",
                                            obj = {
                                              const = false},
                                            proc = <function>},
                                          line = 7,
                                          step = 0}},
                                      call = {
                                        name = "typespec_ref",
                                        proc = <function>},
                                      line = 7,
                                      step = 0},
                                    {
                                      line = 7,
                                      name = "IDENT",
                                      value = "b"}},
                                  call = {
                                    name = "paramdef",
                                    proc = <function>},
                                  line = 7,
                                  step = 0}},
                              call = {
                                name = "paramdeflist",
                                proc = <function>},
                              line = 7,
                              step = 0},
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          arg = {
                                            {
                                              line = 9,
                                              name = "IDENT",
                                              value = "int"}},
                                          call = {
                                            name = "typehdr {const=false}",
                                            obj = {
                                              const = false},
                                            proc = <function>},
                                          line = 9,
                                          step = 0}},
                                      call = {
                                        name = "typespec",
                                        proc = <function>},
                                      line = 9,
                                      step = 0},
                                    {
                                      line = 9,
                                      name = "IDENT",
                                      value = "tmp"},
                                    {
                                      arg = {
                                        {
                                          line = 9,
                                          name = "IDENT",
                                          value = "a"}},
                                      call = {
                                        name = "variable",
                                        proc = <function>},
                                      line = 9,
                                      step = 0}},
                                  call = {
                                    name = "vardef_assign",
                                    proc = <function>},
                                  line = 9,
                                  step = 1}},
                              call = {
                                name = "definition 1",
                                obj = 1,
                                proc = <function>},
                              line = 9,
                              step = 2},
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          line = 10,
                                          name = "IDENT",
                                          value = "a"}},
                                      call = {
                                        name = "variable",
                                        proc = <function>},
                                      line = 10,
                                      step = 2},
                                    {
                                      arg = {
                                        {
                                          line = 10,
                                          name = "IDENT",
                                          value = "b"}},
                                      call = {
                                        name = "variable",
                                        proc = <function>},
                                      line = 10,
                                      step = 2}},
                                  call = {
                                    name = "binop =",
                                    obj = "=",
                                    proc = <function>},
                                  line = 10,
                                  step = 3}},
                              call = {
                                name = "free_expression",
                                proc = <function>},
                              line = 10,
                              step = 3},
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          line = 11,
                                          name = "IDENT",
                                          value = "b"}},
                                      call = {
                                        name = "variable",
                                        proc = <function>},
                                      line = 11,
                                      step = 3},
                                    {
                                      arg = {
                                        {
                                          line = 11,
                                          name = "IDENT",
                                          value = "tmp"}},
                                      call = {
                                        name = "variable",
                                        proc = <function>},
                                      line = 11,
                                      step = 3}},
                                  call = {
                                    name = "binop =",
                                    obj = "=",
                                    proc = <function>},
                                  line = 11,
                                  step = 4}},
                              call = {
                                name = "free_expression",
                                proc = <function>},
                              line = 11,
                              step = 4}},
                          call = {
                            name = "callablebody {throws=false,const=false}",
                            obj = {
                              const = false,
                              throws = false},
                            proc = <function>},
                          line = 11,
                          scope = {
                            0,
                            5}}},
                      call = {
                        name = "procdef",
                        proc = <function>},
                      id = 2,
                      line = 11,
                      step = 5}},
                  call = {
                    name = "definition 1",
                    obj = 1,
                    proc = <function>},
                  line = 11,
                  step = 5},
                {
                  arg = {
                    {
                      arg = {
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  line = 13,
                                  name = "IDENT",
                                  value = "int"}},
                              call = {
                                name = "typehdr {const=false}",
                                obj = {
                                  const = false},
                                proc = <function>},
                              line = 13,
                              step = 5}},
                          call = {
                            name = "typespec",
                            proc = <function>},
                          line = 13,
                          step = 5},
                        {
                          line = 13,
                          name = "IDENT",
                          value = "i1"},
                        {
                          arg = {
                            {
                              line = 13,
                              name = "UINTEGER",
                              value = "0"}},
                          call = {
                            name = "constant constexpr uint",
                            obj = "constexpr uint",
                            proc = <function>},
                          line = 13,
                          step = 5}},
                      call = {
                        name = "vardef_assign",
                        proc = <function>},
                      line = 13,
                      step = 6}},
                  call = {
                    name = "definition 1",
                    obj = 1,
                    proc = <function>},
                  line = 13,
                  step = 7},
                {
                  arg = {
                    {
                      arg = {
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  line = 14,
                                  name = "IDENT",
                                  value = "int"}},
                              call = {
                                name = "typehdr {const=false}",
                                obj = {
                                  const = false},
                                proc = <function>},
                              line = 14,
                              step = 7}},
                          call = {
                            name = "typespec",
                            proc = <function>},
                          line = 14,
                          step = 7},
                        {
                          line = 14,
                          name = "IDENT",
                          value = "i2"},
                        {
                          arg = {
                            {
                              line = 14,
                              name = "UINTEGER",
                              value = "1"}},
                          call = {
                            name = "constant constexpr uint",
                            obj = "constexpr uint",
                            proc = <function>},
                          line = 14,
                          step = 7}},
                      call = {
                        name = "vardef_assign",
                        proc = <function>},
                      line = 14,
                      step = 8}},
                  call = {
                    name = "definition 1",
                    obj = 1,
                    proc = <function>},
                  line = 14,
                  step = 9},
                {
                  arg = {
                    {
                      arg = {
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  line = 15,
                                  name = "IDENT",
                                  value = "int"}},
                              call = {
                                name = "typehdr {const=false}",
                                obj = {
                                  const = false},
                                proc = <function>},
                              line = 15,
                              step = 9}},
                          call = {
                            name = "typespec",
                            proc = <function>},
                          line = 15,
                          step = 9},
                        {
                          line = 15,
                          name = "IDENT",
                          value = "i"},
                        {
                          arg = {
                            {
                              line = 15,
                              name = "UINTEGER",
                              value = "0"}},
                          call = {
                            name = "constant constexpr uint",
                            obj = "constexpr uint",
                            proc = <function>},
                          line = 15,
                          step = 9}},
                      call = {
                        name = "vardef_assign",
                        proc = <function>},
                      line = 15,
                      step = 10}},
                  call = {
                    name = "definition 1",
                    obj = 1,
                    proc = <function>},
                  line = 15,
                  step = 11},
                {
                  arg = {
                    {
                      arg = {
                        {
                          arg = {
                            {
                              line = 16,
                              name = "IDENT",
                              value = "i"}},
                          call = {
                            name = "variable",
                            proc = <function>},
                          line = 16,
                          step = 11},
                        {
                          arg = {
                            {
                              line = 16,
                              name = "IDENT",
                              value = "n"}},
                          call = {
                            name = "variable",
                            proc = <function>},
                          line = 16,
                          step = 11}},
                      call = {
                        name = "binop <",
                        obj = "<",
                        proc = <function>},
                      line = 16,
                      step = 11},
                    {
                      arg = {
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      line = 18,
                                      name = "IDENT",
                                      value = "i1"}},
                                  call = {
                                    name = "variable",
                                    proc = <function>},
                                  line = 18,
                                  step = 11},
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          line = 18,
                                          name = "IDENT",
                                          value = "i2"}},
                                      call = {
                                        name = "variable",
                                        proc = <function>},
                                      line = 18,
                                      step = 11},
                                    {
                                      arg = {
                                        {
                                          line = 18,
                                          name = "IDENT",
                                          value = "i1"}},
                                      call = {
                                        name = "variable",
                                        proc = <function>},
                                      line = 18,
                                      step = 11}},
                                  call = {
                                    name = "binop +",
                                    obj = "+",
                                    proc = <function>},
                                  line = 18,
                                  step = 11}},
                              call = {
                                name = "binop =",
                                obj = "=",
                                proc = <function>},
                              line = 18,
                              step = 12}},
                          call = {
                            name = "free_expression",
                            proc = <function>},
                          line = 18,
                          step = 12},
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      line = 19,
                                      name = "IDENT",
                                      value = "swap"}},
                                  call = {
                                    name = "variable",
                                    proc = <function>},
                                  line = 19,
                                  step = 12},
                                {
                                  arg = {
                                    {
                                      line = 19,
                                      name = "IDENT",
                                      value = "i1"}},
                                  call = {
                                    name = "variable",
                                    proc = <function>},
                                  line = 19,
                                  step = 12},
                                {
                                  arg = {
                                    {
                                      line = 19,
                                      name = "IDENT",
                                      value = "i2"}},
                                  call = {
                                    name = "variable",
                                    proc = <function>},
                                  line = 19,
                                  step = 12}},
                              call = {
                                name = "operator ()",
                                obj = "()",
                                proc = <function>},
                              line = 19,
                              step = 12}},
                          call = {
                            name = "free_expression",
                            proc = <function>},
                          line = 19,
                          step = 12},
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      line = 20,
                                      name = "IDENT",
                                      value = "i"}},
                                  call = {
                                    name = "variable",
                                    proc = <function>},
                                  line = 20,
                                  step = 12},
                                {
                                  arg = {
                                    {
                                      line = 20,
                                      name = "UINTEGER",
                                      value = "1"}},
                                  call = {
                                    name = "constant constexpr uint",
                                    obj = "constexpr uint",
                                    proc = <function>},
                                  line = 20,
                                  step = 12}},
                              call = {
                                name = "assign_operator +",
                                obj = "+",
                                proc = <function>},
                              line = 20,
                              step = 13}},
                          call = {
                            name = "free_expression",
                            proc = <function>},
                          line = 20,
                          step = 13}},
                      call = {
                        name = "codeblock",
                        proc = <function>},
                      line = 20,
                      scope = {
                        11,
                        14}}},
                  call = {
                    name = "conditional_while",
                    proc = <function>},
                  line = 20,
                  step = 14},
                {
                  arg = {
                    {
                      arg = {
                        {
                          line = 22,
                          name = "IDENT",
                          value = "i2"}},
                      call = {
                        name = "variable",
                        proc = <function>},
                      line = 22,
                      step = 14}},
                  call = {
                    name = "return_value",
                    proc = <function>},
                  line = 22,
                  step = 15}},
              call = {
                name = "callablebody {throws=false,const=false}",
                obj = {
                  const = false,
                  throws = false},
                proc = <function>},
              line = 22,
              scope = {
                0,
                16}}},
          call = {
            name = "funcdef",
            proc = <function>},
          id = 1,
          line = 22,
          step = 16}},
      call = {
        name = "definition 1",
        obj = 1,
        proc = <function>},
      line = 22,
      step = 16},
    {
      arg = {
        {
          arg = {
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {
                        {
                          arg = {
                            {
                              line = 27,
                              name = "IDENT",
                              value = "int"}},
                          call = {
                            name = "typehdr {const=false}",
                            obj = {
                              const = false},
                            proc = <function>},
                          line = 27,
                          step = 16}},
                      call = {
                        name = "typespec",
                        proc = <function>},
                      line = 27,
                      step = 16},
                    {
                      line = 27,
                      name = "IDENT",
                      value = "val"},
                    {
                      arg = {
                        {
                          arg = {
                            {
                              line = 27,
                              name = "IDENT",
                              value = "fibonacci"}},
                          call = {
                            name = "variable",
                            proc = <function>},
                          line = 27,
                          step = 16},
                        {
                          arg = {
                            {
                              line = 27,
                              name = "UINTEGER",
                              value = "20"}},
                          call = {
                            name = "constant constexpr uint",
                            obj = "constexpr uint",
                            proc = <function>},
                          line = 27,
                          step = 16}},
                      call = {
                        name = "operator ()",
                        obj = "()",
                        proc = <function>},
                      line = 27,
                      step = 16}},
                  call = {
                    name = "vardef_assign",
                    proc = <function>},
                  line = 27,
                  step = 17}},
              call = {
                name = "definition 1",
                obj = 1,
                proc = <function>},
              line = 27,
              step = 18},
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {
                        {
                          line = 28,
                          name = "IDENT",
                          value = "printf"}},
                      call = {
                        name = "variable",
                        proc = <function>},
                      line = 28,
                      step = 18},
                    {
                      arg = {
                        {
                          line = 28,
                          name = "DQSTRING",
                          value = "Result: %d\\n"}},
                      call = {
                        name = "string_constant",
                        proc = <function>},
                      line = 28,
                      step = 18},
                    {
                      arg = {
                        {
                          line = 28,
                          name = "IDENT",
                          value = "val"}},
                      call = {
                        name = "variable",
                        proc = <function>},
                      line = 28,
                      step = 18}},
                  call = {
                    name = "operator ()",
                    obj = "()",
                    proc = <function>},
                  line = 28,
                  step = 18}},
              call = {
                name = "free_expression",
                proc = <function>},
              line = 28,
              step = 18}},
          call = {
            name = "codeblock",
            proc = <function>},
          line = 28,
          scope = {
            16,
            19}}},
      call = {
        name = "main_procdef",
        proc = <function>},
      line = 28,
      step = 19}},
  call = {
    name = "program",
    proc = <function>},
  line = 28,
  step = 19}
