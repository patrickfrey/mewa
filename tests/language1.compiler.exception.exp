
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__ctors, i8* null }]
@llvm.global_dtors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__dtors, i8* null }]

declare external i32 @__gxx_personality_v0( ... ) nounwind
declare external void @putchar( i8 ) nounwind
declare external i8* @malloc( i64 ) nounwind
declare external void @free( i8* ) nounwind
declare external i8* @memcpy( i8*, i8*, i64 ) nounwind
declare external i64 @strlen( i8* ) nounwind
%std__String = type { i8*, i32 }
declare external i8* @strdup( i8* ) nounwind
%__L_Exception = type { i64, i8* }
@__L_ExceptionSize = constant i32 ptrtoint(%__L_Exception* getelementptr(%__L_Exception, %__L_Exception* null, i32 1) to i32)
declare external i8* @__cxa_allocate_exception( i32)
declare external void @__cxa_throw( i8*, i8*, i8*) noreturn
@_ZTVN10__cxxabiv117__class_type_infoE = external dso_local global i8*
$__typename__L_Exception = comdat any
$__typeinfo__L_Exception = comdat any
@__typename__L_Exception = linkonce_odr dso_local constant [11 x i8] c"9exception\00", comdat, align 1
@__typeinfo__L_Exception = linkonce_odr dso_local constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__typename__L_Exception, i32 0, i32 0) }, comdat, align 8
define dso_local void @__L_init__Exception( %__L_Exception* %exception, i64 %code, i8* %msg) {
%ObjCodeRef = getelementptr inbounds %__L_Exception, %__L_Exception* %exception, i32 0, i32 0
store i64 %code, i64* %ObjCodeRef
%ObjMsgRef = getelementptr inbounds %__L_Exception, %__L_Exception* %exception, i32 0, i32 1
%IsNull = icmp ne i8* %msg, null
br i1 %IsNull, label %L_COPY, label %L_NULL
L_COPY:
%MsgCopy = call i8* @strdup( i8* %msg) nounwind
store i8* %MsgCopy, i8** %ObjMsgRef
br label %L_CONT
L_NULL:
store i8* null, i8** %ObjMsgRef
br label %L_CONT
L_CONT:
ret void
}
define dso_local void @__L_throw__Exception( %__L_Exception* %exception) {
%SizeObObj = load i32, i32* @__L_ExceptionSize
%Mem = call i8* @__cxa_allocate_exception( i32 %SizeObObj) nounwind
%Obj = bitcast i8* %Mem to %__L_Exception*
%exceptionVal = load %__L_Exception, %__L_Exception* %exception
store %__L_Exception %exceptionVal, %__L_Exception* %Obj
call void @__cxa_throw( i8* %Mem, i8* bitcast ({ i8*, i8* }* @__typeinfo__L_Exception to i8*), i8* null) noreturn
unreachable
}
define dso_local void @__L_free__ExceptionMsg( i8* %msg) {
%IsNull = icmp ne i8* %msg, null
br i1 %IsNull, label %L_FREE, label %L_DONE
L_FREE:
call void @free( i8* %msg) nounwind
br label %L_DONE
L_DONE:
ret void
}
define private dso_local void @__partial_dtor_std__String( %std__String* %ths, i32 %istate) {
enter:
br label %end
end:
ret void
}
define private dso_local void @__ctor_init_20__std__String( [20 x %std__String]* %ar, i32 %start)#0 nounwind {
enter:
%ths_base = getelementptr inbounds [20 x %std__String], [20 x %std__String]* %ar, i32 0, i32 %start
%ths_top = getelementptr inbounds [20 x %std__String], [20 x %std__String]* %ar, i32 0, i32 20
br label %loop
loop:
%ths = phi %std__String* [%ths_base, %enter], [%A2, %cond]
call void @__C_std__String__$ctor( %std__String* %ths)
br label %cond
cond:
%A2 = getelementptr inbounds %std__String, %std__String* %ths, i64 1
%A3 = icmp eq %std__String* %A2, %ths_top
br i1 %A3, label %end, label %loop
end:
ret void
}
define private dso_local void @__dtor_20__std__String( [20 x %std__String]* %ar, i32 %arsize) alwaysinline {
enter:
%X1 = icmp eq i32 %arsize, 0
br i1 %X1, label %end, label %start
start:
%artop = sub nsw i32 %arsize, 1
%base = getelementptr inbounds [20 x %std__String], [20 x %std__String]* %ar, i32 0, i32 0
%top = getelementptr inbounds [20 x %std__String], [20 x %std__String]* %ar, i32 0, i32 %artop
br label %loop
loop:
%ths = phi %std__String* [%top, %start], [%A2, %loop]
%A2 = getelementptr inbounds %std__String, %std__String* %ths, i64 -1
call void @__dtor_std__String( %std__String* %ths)
%A3 = icmp eq %std__String* %ths, %base
br i1 %A3, label %end, label %loop
end:
ret void
}


define internal void @_GLOBAL__ctors() nounwind uwtable readnone optsize ssp section ".text.startup" {
  ret void
}

define internal void @_GLOBAL__dtors() nounwind uwtable readnone optsize ssp section ".text.startup" {
  ret void
}

declare external void @printf( i8*, ... ) nounwind
@g_allocCnt = internal global i32 0, align 4
@g_maxAllocCnt = internal global i32 0, align 4
@g_exceptionCode = internal global i64 0, align 8
@string1 = private unnamed_addr constant [11 x i8] c"Throw: %s\0A\00"
@string2 = private unnamed_addr constant [32 x i8] c"Max allowed allocations reached\00"
@string3 = private unnamed_addr constant [14 x i8] c"Out of memory\00"
define internal i8* @allocmem__i64( i64 %r1 ) #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
%exception = alloca %__L_Exception
%r2 = load i32, i32* @g_allocCnt
%r3 = add nsw i32 %r2, 1
store i32 %r3, i32* @g_allocCnt
%r4 = load i32, i32* @g_allocCnt
%r5 = load i32, i32* @g_maxAllocCnt
%r6 = icmp eq i32 %r4, %r5
br i1 %r6, label %L4, label %L3
L4:
%r7 = getelementptr inbounds [11 x i8], [11 x i8]* @string1, i64 0, i64 0
%r8 = getelementptr inbounds [32 x i8], [32 x i8]* @string2, i64 0, i64 0
call void(i8*,  ...) @printf( i8* %r7, i8* %r8)
%r9 = getelementptr inbounds [32 x i8], [32 x i8]* @string2, i64 0, i64 0
call void @__L_init__Exception( %__L_Exception* %exception, i64 201, i8* %r9)
br label %L2
L3:
%r11 = alloca i8*
%r10 = call i8* @malloc( i64 %r1)
store i8* %r10, i8** %r11
%r12 = load i8*, i8** %r11
%r13 = icmp eq i8* %r12, null
br i1 %r13, label %L7, label %L6
L7:
%r14 = getelementptr inbounds [11 x i8], [11 x i8]* @string1, i64 0, i64 0
%r15 = getelementptr inbounds [14 x i8], [14 x i8]* @string3, i64 0, i64 0
call void(i8*,  ...) @printf( i8* %r14, i8* %r15)
%r16 = getelementptr inbounds [14 x i8], [14 x i8]* @string3, i64 0, i64 0
call void @__L_init__Exception( %__L_Exception* %exception, i64 12, i8* %r16)
br label %L2
L6:
%r17 = load i8*, i8** %r11
br label %L8
L2:
call void @__L_throw__Exception( %__L_Exception* %exception)
unreachable
L8:
ret i8* %r17
}
define internal void @freemem__i8$( i8* %r1 ) #0 nounwind {
entry:
call void @free( i8* %r1)
br label %L1
L1:
ret void
}
@string4 = private unnamed_addr constant [28 x i8] c"Default constructor string\0A\00"
define external void @__C_std__String__$ctor( %std__String* %ths ) #0 nounwind {
entry:
%r1 = getelementptr inbounds [28 x i8], [28 x i8]* @string4, i64 0, i64 0
call void(i8*,  ...) @printf( i8* %r1)
%r2 = getelementptr inbounds %std__String, %std__String* %ths, i32 0, i32 0
store i8* null, i8** %r2
%r3 = getelementptr inbounds %std__String, %std__String* %ths, i32 0, i32 1
store i32 0, i32* %r3
br label %L1
L1:
ret void
}
@string5 = private unnamed_addr constant [25 x i8] c"Constructor string [%s]\0A\00"
define external void @__C_std__String__$ctor__i8$( %std__String* %ths, i8* %r1 ) #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
%excptr = alloca i8*
%excidx = alloca i32
%initstate = alloca i32
%r3 = alloca i32, align 4
%r2 = call i64 @strlen( i8* %r1)
%r4 = trunc i64 %r2 to i32
store i32 %r4, i32* %r3
%r5 = getelementptr inbounds %std__String, %std__String* %ths, i32 0, i32 0
%r6 = load i32, i32* %r3
%r7 = add nsw i32 %r6, 1
%r8 = sext i32 %r7 to i64
%r9 = invoke i8* @allocmem__i64( i64 %r8) to label %L3 unwind label %L1
L3:
store i8* %r9, i8** %r5
%r18 = getelementptr inbounds %std__String, %std__String* %ths, i32 0, i32 1
%r19 = load i32, i32* %r3
store i32 %r19, i32* %r18
%r20 = getelementptr inbounds %std__String, %std__String* %ths, i32 0, i32 0
%r21 = load i8*, i8** %r20
%r22 = load i32, i32* %r3
%r23 = sext i32 %r22 to i64
%r24 = call i8* @memcpy( i8* %r21, i8* %r1, i64 %r23)
%r25 = getelementptr inbounds %std__String, %std__String* %ths, i32 0, i32 0
%r26 = load i8*, i8** %r25
%r27 = load i32, i32* %r3
%r28 = getelementptr i8, i8* %r26, i32 %r27
store i8 0, i8* %r28
%r29 = getelementptr inbounds [25 x i8], [25 x i8]* @string5, i64 0, i64 0
%r30 = call i8* @__C_std__String__c_str__const( %std__String* %ths)
call void(i8*,  ...) @printf( i8* %r29, i8* %r30)
br label %L4
L1:
%r15 = landingpad { i8*, i32 } cleanup
%r16 = extractvalue { i8*, i32 } %r15, 0
store i8* %r16, i8** %excptr
%r17 = extractvalue { i8*, i32 } %r15, 1
store i32 %r17, i32* %excidx
store i32 0, i32* %initstate
br label %L2
L2:
%r10 = load i32, i32* %initstate
call void @__partial_dtor_std__String( %std__String* %ths, i32 %r10)
%r11 = load i8*, i8** %excptr
%r12 = load i32, i32* %excidx
%r13 = insertvalue { i8*, i32 } undef, i8* %r11, 0
%r14 = insertvalue { i8*, i32 } %r13, i32 %r12, 1
resume { i8*, i32 } %r14
L4:
ret void
}
@string6 = private unnamed_addr constant [24 x i8] c"Destructor string [%s]\0A\00"
define external void @__dtor_std__String( %std__String* %ths ) #0 nounwind {
entry:
%r1 = getelementptr inbounds [24 x i8], [24 x i8]* @string6, i64 0, i64 0
%r2 = call i8* @__C_std__String__c_str__const( %std__String* %ths)
call void(i8*,  ...) @printf( i8* %r1, i8* %r2)
%r3 = getelementptr inbounds %std__String, %std__String* %ths, i32 0, i32 0
%r4 = load i8*, i8** %r3
call void @freemem__i8$( i8* %r4)
br label %L1
L1:
ret void
}
@string7 = private unnamed_addr constant [12 x i8] c"Get string\0A\00"
@string8 = private unnamed_addr constant [1 x i8] c"\00"
define external i8* @__C_std__String__c_str__const( %std__String* %ths ) #0 nounwind {
entry:
%r1 = getelementptr inbounds [12 x i8], [12 x i8]* @string7, i64 0, i64 0
call void(i8*,  ...) @printf( i8* %r1)
%r2 = getelementptr inbounds %std__String, %std__String* %ths, i32 0, i32 0
%r3 = load i8*, i8** %r2
%r4 = icmp ne i8* %r3, null
br i1 %r4, label %L5, label %L4
L5:
%r5 = getelementptr inbounds %std__String, %std__String* %ths, i32 0, i32 0
%r6 = load i8*, i8** %r5
br label %L2
L4:
%r7 = getelementptr inbounds [1 x i8], [1 x i8]* @string8, i64 0, i64 0
br label %L3
L2:
ret i8* %r6
L3:
ret i8* %r7
}
@string9 = private unnamed_addr constant [13 x i8] c"Hello world!\00"
@string10 = private unnamed_addr constant [7 x i8] c"DEBUG\0A\00"
@string11 = private unnamed_addr constant [2 x i8] c"H\00"
@string12 = private unnamed_addr constant [2 x i8] c"e\00"
@string13 = private unnamed_addr constant [2 x i8] c"l\00"
@string14 = private unnamed_addr constant [2 x i8] c"o\00"
@string15 = private unnamed_addr constant [2 x i8] c" \00"
@string16 = private unnamed_addr constant [2 x i8] c"w\00"
@string17 = private unnamed_addr constant [2 x i8] c"r\00"
@string18 = private unnamed_addr constant [3 x i8] c"d!\00"
@string19 = private unnamed_addr constant [4 x i8] c"%s\0A\00"
@string20 = private unnamed_addr constant [16 x i8] c"ERR %ld %ld %s\0A\00"
define internal void @test__i32( i32 %r1 ) #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
%exception = alloca %__L_Exception
%excptr = alloca i8*
%excidx = alloca i32
store i32 %r1, i32* @g_allocCnt
%r3 = alloca %std__String, align 8
%r2 = getelementptr inbounds [13 x i8], [13 x i8]* @string9, i64 0, i64 0
invoke void @__C_std__String__$ctor__i8$( %std__String* %r3, i8* %r2) to label %L4 unwind label %L3
L4:
%r8 = getelementptr inbounds [7 x i8], [7 x i8]* @string10, i64 0, i64 0
call void(i8*,  ...) @printf( i8* %r8)
%r20 = alloca [20 x %std__String], align 8
%r21 = getelementptr inbounds [20 x %std__String], [20 x %std__String]* %r20, i32 0, i32 0
%r9 = getelementptr inbounds [2 x i8], [2 x i8]* @string11, i64 0, i64 0
invoke void @__C_std__String__$ctor__i8$( %std__String* %r21, i8* %r9) to label %L8 unwind label %L5
L8:
%r26 = getelementptr inbounds [20 x %std__String], [20 x %std__String]* %r20, i32 0, i32 1
%r10 = getelementptr inbounds [2 x i8], [2 x i8]* @string12, i64 0, i64 0
invoke void @__C_std__String__$ctor__i8$( %std__String* %r26, i8* %r10) to label %L10 unwind label %L9
L10:
%r31 = getelementptr inbounds [20 x %std__String], [20 x %std__String]* %r20, i32 0, i32 2
%r11 = getelementptr inbounds [2 x i8], [2 x i8]* @string13, i64 0, i64 0
invoke void @__C_std__String__$ctor__i8$( %std__String* %r31, i8* %r11) to label %L12 unwind label %L11
L12:
%r36 = getelementptr inbounds [20 x %std__String], [20 x %std__String]* %r20, i32 0, i32 3
%r12 = getelementptr inbounds [2 x i8], [2 x i8]* @string13, i64 0, i64 0
invoke void @__C_std__String__$ctor__i8$( %std__String* %r36, i8* %r12) to label %L14 unwind label %L13
L14:
%r41 = getelementptr inbounds [20 x %std__String], [20 x %std__String]* %r20, i32 0, i32 4
%r13 = getelementptr inbounds [2 x i8], [2 x i8]* @string14, i64 0, i64 0
invoke void @__C_std__String__$ctor__i8$( %std__String* %r41, i8* %r13) to label %L16 unwind label %L15
L16:
%r46 = getelementptr inbounds [20 x %std__String], [20 x %std__String]* %r20, i32 0, i32 5
%r14 = getelementptr inbounds [2 x i8], [2 x i8]* @string15, i64 0, i64 0
invoke void @__C_std__String__$ctor__i8$( %std__String* %r46, i8* %r14) to label %L18 unwind label %L17
L18:
%r51 = getelementptr inbounds [20 x %std__String], [20 x %std__String]* %r20, i32 0, i32 6
%r15 = getelementptr inbounds [2 x i8], [2 x i8]* @string16, i64 0, i64 0
invoke void @__C_std__String__$ctor__i8$( %std__String* %r51, i8* %r15) to label %L20 unwind label %L19
L20:
%r56 = getelementptr inbounds [20 x %std__String], [20 x %std__String]* %r20, i32 0, i32 7
%r16 = getelementptr inbounds [2 x i8], [2 x i8]* @string14, i64 0, i64 0
invoke void @__C_std__String__$ctor__i8$( %std__String* %r56, i8* %r16) to label %L22 unwind label %L21
L22:
%r61 = getelementptr inbounds [20 x %std__String], [20 x %std__String]* %r20, i32 0, i32 8
%r17 = getelementptr inbounds [2 x i8], [2 x i8]* @string17, i64 0, i64 0
invoke void @__C_std__String__$ctor__i8$( %std__String* %r61, i8* %r17) to label %L24 unwind label %L23
L24:
%r66 = getelementptr inbounds [20 x %std__String], [20 x %std__String]* %r20, i32 0, i32 9
%r18 = getelementptr inbounds [2 x i8], [2 x i8]* @string13, i64 0, i64 0
invoke void @__C_std__String__$ctor__i8$( %std__String* %r66, i8* %r18) to label %L26 unwind label %L25
L26:
%r71 = getelementptr inbounds [20 x %std__String], [20 x %std__String]* %r20, i32 0, i32 10
%r19 = getelementptr inbounds [3 x i8], [3 x i8]* @string18, i64 0, i64 0
invoke void @__C_std__String__$ctor__i8$( %std__String* %r71, i8* %r19) to label %L28 unwind label %L27
L28:
call void @__ctor_init_20__std__String( [20 x %std__String]* %r20, i32 11)
%r76 = getelementptr inbounds [4 x i8], [4 x i8]* @string19, i64 0, i64 0
%r77 = call i8* @__C_std__String__c_str__const( %std__String* %r3)
call void(i8*,  ...) @printf( i8* %r76, i8* %r77)
br label %L1
L1:
%r80 = getelementptr inbounds %__L_Exception, %__L_Exception* %exception, i32 0, i32 0
%r78 = load i64, i64* %r80
%r81 = getelementptr inbounds %__L_Exception, %__L_Exception* %exception, i32 0, i32 1
%r79 = load i8*, i8** %r81
%r82 = getelementptr inbounds [16 x i8], [16 x i8]* @string20, i64 0, i64 0
%r83 = load i64, i64* @g_exceptionCode
call void(i8*,  ...) @printf( i8* %r82, i64 %r83, i64 %r78, i8* %r79)
br label %L32
L2:
br label %L1
L3:
%r4 = landingpad { i8*, i32 } catch i8* bitcast ({ i8*, i8* }* @__typeinfo__L_Exception to i8*)
%r5 = extractvalue { i8*, i32 } %r4, 0
%r6 = bitcast i8* %r5 to %__L_Exception*
%r7 = load %__L_Exception, %__L_Exception* %r6
store %__L_Exception %r7, %__L_Exception* %exception
br label %L2
L5:
%r22 = landingpad { i8*, i32 } catch i8* bitcast ({ i8*, i8* }* @__typeinfo__L_Exception to i8*)
%r23 = extractvalue { i8*, i32 } %r22, 0
%r24 = bitcast i8* %r23 to %__L_Exception*
%r25 = load %__L_Exception, %__L_Exception* %r24
store %__L_Exception %r25, %__L_Exception* %exception
br label %L7
L9:
%r27 = landingpad { i8*, i32 } catch i8* bitcast ({ i8*, i8* }* @__typeinfo__L_Exception to i8*)
%r28 = extractvalue { i8*, i32 } %r27, 0
%r29 = bitcast i8* %r28 to %__L_Exception*
%r30 = load %__L_Exception, %__L_Exception* %r29
store %__L_Exception %r30, %__L_Exception* %exception
br label %L7
L11:
%r32 = landingpad { i8*, i32 } catch i8* bitcast ({ i8*, i8* }* @__typeinfo__L_Exception to i8*)
%r33 = extractvalue { i8*, i32 } %r32, 0
%r34 = bitcast i8* %r33 to %__L_Exception*
%r35 = load %__L_Exception, %__L_Exception* %r34
store %__L_Exception %r35, %__L_Exception* %exception
br label %L7
L13:
%r37 = landingpad { i8*, i32 } catch i8* bitcast ({ i8*, i8* }* @__typeinfo__L_Exception to i8*)
%r38 = extractvalue { i8*, i32 } %r37, 0
%r39 = bitcast i8* %r38 to %__L_Exception*
%r40 = load %__L_Exception, %__L_Exception* %r39
store %__L_Exception %r40, %__L_Exception* %exception
br label %L7
L15:
%r42 = landingpad { i8*, i32 } catch i8* bitcast ({ i8*, i8* }* @__typeinfo__L_Exception to i8*)
%r43 = extractvalue { i8*, i32 } %r42, 0
%r44 = bitcast i8* %r43 to %__L_Exception*
%r45 = load %__L_Exception, %__L_Exception* %r44
store %__L_Exception %r45, %__L_Exception* %exception
br label %L7
L17:
%r47 = landingpad { i8*, i32 } catch i8* bitcast ({ i8*, i8* }* @__typeinfo__L_Exception to i8*)
%r48 = extractvalue { i8*, i32 } %r47, 0
%r49 = bitcast i8* %r48 to %__L_Exception*
%r50 = load %__L_Exception, %__L_Exception* %r49
store %__L_Exception %r50, %__L_Exception* %exception
br label %L7
L19:
%r52 = landingpad { i8*, i32 } catch i8* bitcast ({ i8*, i8* }* @__typeinfo__L_Exception to i8*)
%r53 = extractvalue { i8*, i32 } %r52, 0
%r54 = bitcast i8* %r53 to %__L_Exception*
%r55 = load %__L_Exception, %__L_Exception* %r54
store %__L_Exception %r55, %__L_Exception* %exception
br label %L7
L21:
%r57 = landingpad { i8*, i32 } catch i8* bitcast ({ i8*, i8* }* @__typeinfo__L_Exception to i8*)
%r58 = extractvalue { i8*, i32 } %r57, 0
%r59 = bitcast i8* %r58 to %__L_Exception*
%r60 = load %__L_Exception, %__L_Exception* %r59
store %__L_Exception %r60, %__L_Exception* %exception
br label %L7
L23:
%r62 = landingpad { i8*, i32 } catch i8* bitcast ({ i8*, i8* }* @__typeinfo__L_Exception to i8*)
%r63 = extractvalue { i8*, i32 } %r62, 0
%r64 = bitcast i8* %r63 to %__L_Exception*
%r65 = load %__L_Exception, %__L_Exception* %r64
store %__L_Exception %r65, %__L_Exception* %exception
br label %L7
L25:
%r67 = landingpad { i8*, i32 } catch i8* bitcast ({ i8*, i8* }* @__typeinfo__L_Exception to i8*)
%r68 = extractvalue { i8*, i32 } %r67, 0
%r69 = bitcast i8* %r68 to %__L_Exception*
%r70 = load %__L_Exception, %__L_Exception* %r69
store %__L_Exception %r70, %__L_Exception* %exception
br label %L7
L27:
%r72 = landingpad { i8*, i32 } catch i8* bitcast ({ i8*, i8* }* @__typeinfo__L_Exception to i8*)
%r73 = extractvalue { i8*, i32 } %r72, 0
%r74 = bitcast i8* %r73 to %__L_Exception*
%r75 = load %__L_Exception, %__L_Exception* %r74
store %__L_Exception %r75, %__L_Exception* %exception
br label %L7
L7:
call void @__dtor_std__String( %std__String* %r3)
br label %L6
L6:
br label %L2
L32:
ret void
}

define dso_local i32 @main(i32 %argc, i8** %argv) #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
{
entry:
%r1 = alloca i32, align 4
call void @test__i32( i32 100)
call void @test__i32( i32 1)
store i32 0, i32* %r1
br label %L2
L2:
br label %L1
L1:
%r2 = load i32, i32* %r1
ret i32 %r2
}


