
define internal void @swap_i32$( i32* %r1, i32* %r2 ) #0 nounwind {
entry:
%r4 = load i32, i32* %r2
store i32 %r4, i32* %r1, align 4
%r5 = load i32, i32* %r3
store i32 %r5, i32* %r2, align 4
}


define internal i32 @fibonacci__i32( i32 %r1 ) #0 nounwind {
entry:
L3:
br i1 %r7, label %L2, label %L1
L2:
%r8 = load i32, i32* %r3
%r9 = load i32, i32* %r2
%r10 = add nsw i32 %r8, %r9
store i32 %r10, i32* %r2, align 4
call void @swap_i32$( i32* %r2, i32* %r2)
%r18 = load i32, i32* %r4
%r19 = add nsw i32 %r18, 1
store i32 %r19, i32* %r4, align 4
br %L3
L1:
ret i32 %r3
}

FALSE, NOT CHECKED YET mv build/language1.compiler.out  tests/language1.compiler.exp!
