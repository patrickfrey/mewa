Shift token "extern" at line 3 in state XXX, goto XXX
Shift token DQSTRING = "C" at line 3 in state XXX, goto XXX
Shift token "procedure" at line 3 in state XXX, goto XXX
Shift token IDENT = "printf" at line 3 in state XXX, goto XXX
Shift token '(' at line 3 in state XXX, goto XXX
Shift token "const" at line 3 in state XXX, goto XXX
Shift token IDENT = "byte" at line 3 in state XXX, goto XXX
Reduce #1 to typename by token '^' at line 3 in state XXX, goto XXX
Reduce #2 to typehdr by token '^' at line 3 in state XXX, call typehdr {const=true}, goto XXX
Reduce #1 to typegen by token '^' at line 3 in state XXX, goto XXX
Shift token '^' at line 3 in state XXX, goto XXX
Reduce #2 to typegen by token IDENT = "fmt" at line 3 in state XXX, call typegen_pointer {const=false}, goto XXX
Reduce #1 to typespec by token IDENT = "fmt" at line 3 in state XXX, call typespec, goto XXX
Shift token IDENT = "fmt" at line 3 in state XXX, goto XXX
Reduce #2 to extern_parameters by token "..." at line 3 in state XXX, call extern_paramdeftail, goto XXX
Reduce #1 to extern_paramlist by token "..." at line 3 in state XXX, call extern_paramdeflist, goto XXX
Shift token "..." at line 3 in state XXX, goto XXX
Shift token ')' at line 3 in state XXX, goto XXX
Shift token ';' at line 3 in state XXX, goto XXX
Reduce #9 to extern_definition by token "extern" at line 4 in state XXX, call extern_procdef_vararg, goto XXX
Shift token "extern" at line 4 in state XXX, goto XXX
Shift token DQSTRING = "C" at line 4 in state XXX, goto XXX
Shift token "function" at line 4 in state XXX, goto XXX
Shift token IDENT = "malloc" at line 4 in state XXX, goto XXX
Shift token IDENT = "byte" at line 4 in state XXX, goto XXX
Reduce #1 to typename by token '^' at line 4 in state XXX, goto XXX
Reduce #1 to typehdr by token '^' at line 4 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token '^' at line 4 in state XXX, goto XXX
Shift token '^' at line 4 in state XXX, goto XXX
Reduce #2 to typegen by token '(' at line 4 in state XXX, call typegen_pointer {const=false}, goto XXX
Reduce #1 to typespec by token '(' at line 4 in state XXX, call typespec, goto XXX
Shift token '(' at line 4 in state XXX, goto XXX
Shift token IDENT = "long" at line 4 in state XXX, goto XXX
Reduce #1 to typename by token ')' at line 4 in state XXX, goto XXX
Reduce #1 to typehdr by token ')' at line 4 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token ')' at line 4 in state XXX, goto XXX
Reduce #1 to typespec by token ')' at line 4 in state XXX, call typespec, goto XXX
Reduce #1 to extern_parameters by token ')' at line 4 in state XXX, call extern_paramdeftail, goto XXX
Reduce #1 to extern_paramlist by token ')' at line 4 in state XXX, call extern_paramdeflist, goto XXX
Shift token ')' at line 4 in state XXX, goto XXX
Shift token ';' at line 4 in state XXX, goto XXX
Reduce #9 to extern_definition by token "generic" at line 6 in state XXX, call extern_funcdef, goto XXX
Reduce #0 to extern_definitionlist by token "generic" at line 6 in state XXX, goto XXX
Reduce #2 to extern_definitionlist by token "generic" at line 6 in state XXX, goto XXX
Reduce #2 to extern_definitionlist by token "generic" at line 6 in state XXX, goto XXX
Shift token "generic" at line 6 in state XXX, goto XXX
Shift token "class" at line 6 in state XXX, goto XXX
Shift token IDENT = "Array" at line 6 in state XXX, goto XXX
Shift token '[' at line 6 in state XXX, goto XXX
Shift token IDENT = "ELEMENT" at line 6 in state XXX, goto XXX
Shift token ',' at line 6 in state XXX, goto XXX
Shift token IDENT = "SIZE" at line 6 in state XXX, goto XXX
Reduce #1 to generic_identlist by token ']' at line 6 in state XXX, call generic_header_ident, goto XXX
Reduce #3 to generic_identlist by token ']' at line 6 in state XXX, call generic_header_ident, goto XXX
Reduce #1 to generic_header by token ']' at line 6 in state XXX, call generic_header, goto XXX
Shift token ']' at line 6 in state XXX, goto XXX
Shift token '{' at line 7 in state XXX, goto XXX
Reduce #0 to linkage by token "constructor" at line 8 in state XXX, call linkage {private=false,linkage="external",explicit=false}, goto XXX
Shift token "constructor" at line 8 in state XXX, goto XXX
Shift token '(' at line 8 in state XXX, goto XXX
Reduce #0 to parameterlist by token ')' at line 8 in state XXX, call paramdeflist, goto XXX
Shift token ')' at line 8 in state XXX, goto XXX
Shift token '{' at line 8 in state XXX, goto XXX
Reduce #0 to statementlist by token '}' at line 8 in state XXX, goto XXX
Reduce #1 to codeblock by token '}' at line 8 in state XXX, call codeblock, goto XXX
Shift token '}' at line 8 in state XXX, goto XXX
Reduce #6 to callablebody by token "constructor" at line 9 in state XXX, call callablebody {throws=true,const=false}, goto XXX
Reduce #3 to constructordefinition by token "constructor" at line 9 in state XXX, call constructordef, goto XXX
Reduce #1 to inclass_definition by token "constructor" at line 9 in state XXX, call definition_decl_impl_pass 4, goto XXX
Reduce #0 to linkage by token "constructor" at line 9 in state XXX, call linkage {private=false,linkage="external",explicit=false}, goto XXX
Shift token "constructor" at line 9 in state XXX, goto XXX
Shift token '(' at line 9 in state XXX, goto XXX
Shift token "const" at line 9 in state XXX, goto XXX
Shift token IDENT = "ELEMENT" at line 9 in state XXX, goto XXX
Reduce #1 to typename by token '[' at line 9 in state XXX, goto XXX
Reduce #2 to typehdr by token '[' at line 9 in state XXX, call typehdr {const=true}, goto XXX
Reduce #1 to typegen by token '[' at line 9 in state XXX, goto XXX
Shift token '[' at line 9 in state XXX, goto XXX
Shift token IDENT = "SIZE" at line 9 in state XXX, goto XXX
Reduce #1 to typename by token ']' at line 9 in state XXX, goto XXX
Reduce #1 to typehdr by token ']' at line 9 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token ']' at line 9 in state XXX, goto XXX
Reduce #1 to generic_instance_deflist by token ']' at line 9 in state XXX, call generic_instance_type, goto XXX
Reduce #1 to generic_instance by token ']' at line 9 in state XXX, call generic_instance, goto XXX
Shift token ']' at line 9 in state XXX, goto XXX
Reduce #4 to typegen by token '&' at line 9 in state XXX, call typegen_generic, goto XXX
Shift token '&' at line 9 in state XXX, goto XXX
Reduce #2 to typespec by token IDENT = "ar_" at line 9 in state XXX, call typespec_ref, goto XXX
Shift token IDENT = "ar_" at line 9 in state XXX, goto XXX
Reduce #2 to paramdecl by token ')' at line 9 in state XXX, call paramdef, goto XXX
Reduce #1 to parameters by token ')' at line 9 in state XXX, goto XXX
Reduce #1 to parameterlist by token ')' at line 9 in state XXX, call paramdeflist, goto XXX
Shift token ')' at line 9 in state XXX, goto XXX
Shift token '{' at line 10 in state XXX, goto XXX
Shift token IDENT = "m_ar" at line 11 in state XXX, goto XXX
Reduce #1 to expression by token '=' at line 11 in state XXX, call variable, goto XXX
Shift token '=' at line 11 in state XXX, goto XXX
Shift token IDENT = "ar_" at line 11 in state XXX, goto XXX
Reduce #1 to expression by token ';' at line 11 in state XXX, call variable, goto XXX
Reduce #3 to expression by token ';' at line 11 in state XXX, call binop "=", goto XXX
Shift token ';' at line 11 in state XXX, goto XXX
Reduce #2 to statement by token '}' at line 12 in state XXX, call free_expression, goto XXX
Reduce #0 to statementlist by token '}' at line 12 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 12 in state XXX, goto XXX
Reduce #1 to codeblock by token '}' at line 12 in state XXX, call codeblock, goto XXX
Shift token '}' at line 12 in state XXX, goto XXX
Reduce #6 to callablebody by token "public" at line 13 in state XXX, call callablebody {throws=true,const=false}, goto XXX
Reduce #3 to constructordefinition by token "public" at line 13 in state XXX, call constructordef, goto XXX
Reduce #1 to inclass_definition by token "public" at line 13 in state XXX, call definition_decl_impl_pass 4, goto XXX
Shift token "public" at line 13 in state XXX, goto XXX
Reduce #1 to linkage by token "operator" at line 13 in state XXX, call linkage {private=false,linkage="external",explicit=true}, goto XXX
Shift token "operator" at line 13 in state XXX, goto XXX
Shift token '[' at line 13 in state XXX, goto XXX
Shift token ']' at line 13 in state XXX, goto XXX
Reduce #2 to operatordecl by token IDENT = "ELEMENT" at line 13 in state XXX, call operatordecl {name="[]",symbol="get"}, goto XXX
Shift token IDENT = "ELEMENT" at line 13 in state XXX, goto XXX
Reduce #1 to typename by token '&' at line 13 in state XXX, goto XXX
Reduce #1 to typehdr by token '&' at line 13 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token '&' at line 13 in state XXX, goto XXX
Shift token '&' at line 13 in state XXX, goto XXX
Reduce #2 to typespec by token '(' at line 13 in state XXX, call typespec_ref, goto XXX
Shift token '(' at line 13 in state XXX, goto XXX
Shift token IDENT = "uint" at line 13 in state XXX, goto XXX
Reduce #1 to typename by token IDENT = "idx" at line 13 in state XXX, goto XXX
Reduce #1 to typehdr by token IDENT = "idx" at line 13 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token IDENT = "idx" at line 13 in state XXX, goto XXX
Reduce #1 to typespec by token IDENT = "idx" at line 13 in state XXX, call typespec, goto XXX
Shift token IDENT = "idx" at line 13 in state XXX, goto XXX
Reduce #2 to paramdecl by token ')' at line 13 in state XXX, call paramdef, goto XXX
Reduce #1 to parameters by token ')' at line 13 in state XXX, goto XXX
Reduce #1 to parameterlist by token ')' at line 13 in state XXX, call paramdeflist, goto XXX
Shift token ')' at line 13 in state XXX, goto XXX
Shift token '{' at line 14 in state XXX, goto XXX
Shift token "return" at line 15 in state XXX, goto XXX
Shift token IDENT = "m_ar" at line 15 in state XXX, goto XXX
Reduce #1 to expression by token '[' at line 15 in state XXX, call variable, goto XXX
Shift token '[' at line 15 in state XXX, goto XXX
Shift token IDENT = "idx" at line 15 in state XXX, goto XXX
Reduce #1 to expression by token ']' at line 15 in state XXX, call variable, goto XXX
Reduce #1 to expressionlist by token ']' at line 15 in state XXX, goto XXX
Shift token ']' at line 15 in state XXX, goto XXX
Reduce #4 to expression by token ';' at line 15 in state XXX, call operator_array "[]", goto XXX
Shift token ';' at line 15 in state XXX, goto XXX
Reduce #3 to statement by token '}' at line 16 in state XXX, call return_value, goto XXX
Reduce #0 to statementlist by token '}' at line 16 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 16 in state XXX, goto XXX
Reduce #1 to codeblock by token '}' at line 16 in state XXX, call codeblock, goto XXX
Shift token '}' at line 16 in state XXX, goto XXX
Reduce #6 to callablebody by token "public" at line 17 in state XXX, call callablebody {throws=true,const=false}, goto XXX
Reduce #5 to operatordefinition by token "public" at line 17 in state XXX, call operator_funcdef, goto XXX
Reduce #1 to inclass_definition by token "public" at line 17 in state XXX, call definition_decl_impl_pass 4, goto XXX
Shift token "public" at line 17 in state XXX, goto XXX
Reduce #1 to linkage by token "operator" at line 17 in state XXX, call linkage {private=false,linkage="external",explicit=true}, goto XXX
Shift token "operator" at line 17 in state XXX, goto XXX
Shift token '[' at line 17 in state XXX, goto XXX
Shift token ']' at line 17 in state XXX, goto XXX
Reduce #2 to operatordecl by token "const" at line 17 in state XXX, call operatordecl {name="[]",symbol="get"}, goto XXX
Shift token "const" at line 17 in state XXX, goto XXX
Shift token IDENT = "ELEMENT" at line 17 in state XXX, goto XXX
Reduce #1 to typename by token '&' at line 17 in state XXX, goto XXX
Reduce #2 to typehdr by token '&' at line 17 in state XXX, call typehdr {const=true}, goto XXX
Reduce #1 to typegen by token '&' at line 17 in state XXX, goto XXX
Shift token '&' at line 17 in state XXX, goto XXX
Reduce #2 to typespec by token '(' at line 17 in state XXX, call typespec_ref, goto XXX
Shift token '(' at line 17 in state XXX, goto XXX
Shift token IDENT = "uint" at line 17 in state XXX, goto XXX
Reduce #1 to typename by token IDENT = "idx" at line 17 in state XXX, goto XXX
Reduce #1 to typehdr by token IDENT = "idx" at line 17 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token IDENT = "idx" at line 17 in state XXX, goto XXX
Reduce #1 to typespec by token IDENT = "idx" at line 17 in state XXX, call typespec, goto XXX
Shift token IDENT = "idx" at line 17 in state XXX, goto XXX
Reduce #2 to paramdecl by token ')' at line 17 in state XXX, call paramdef, goto XXX
Reduce #1 to parameters by token ')' at line 17 in state XXX, goto XXX
Reduce #1 to parameterlist by token ')' at line 17 in state XXX, call paramdeflist, goto XXX
Shift token ')' at line 17 in state XXX, goto XXX
Shift token "const" at line 17 in state XXX, goto XXX
Shift token '{' at line 18 in state XXX, goto XXX
Shift token "return" at line 19 in state XXX, goto XXX
Shift token IDENT = "m_ar" at line 19 in state XXX, goto XXX
Reduce #1 to expression by token '[' at line 19 in state XXX, call variable, goto XXX
Shift token '[' at line 19 in state XXX, goto XXX
Shift token IDENT = "idx" at line 19 in state XXX, goto XXX
Reduce #1 to expression by token ']' at line 19 in state XXX, call variable, goto XXX
Reduce #1 to expressionlist by token ']' at line 19 in state XXX, goto XXX
Shift token ']' at line 19 in state XXX, goto XXX
Reduce #4 to expression by token ';' at line 19 in state XXX, call operator_array "[]", goto XXX
Shift token ';' at line 19 in state XXX, goto XXX
Reduce #3 to statement by token '}' at line 20 in state XXX, call return_value, goto XXX
Reduce #0 to statementlist by token '}' at line 20 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 20 in state XXX, goto XXX
Reduce #1 to codeblock by token '}' at line 20 in state XXX, call codeblock, goto XXX
Shift token '}' at line 20 in state XXX, goto XXX
Reduce #7 to callablebody by token IDENT = "ELEMENT" at line 21 in state XXX, call callablebody {throws=true,const=true}, goto XXX
Reduce #5 to operatordefinition by token IDENT = "ELEMENT" at line 21 in state XXX, call operator_funcdef, goto XXX
Reduce #1 to inclass_definition by token IDENT = "ELEMENT" at line 21 in state XXX, call definition_decl_impl_pass 4, goto XXX
Shift token IDENT = "ELEMENT" at line 21 in state XXX, goto XXX
Reduce #1 to typename by token '[' at line 21 in state XXX, goto XXX
Reduce #1 to typehdr by token '[' at line 21 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token '[' at line 21 in state XXX, goto XXX
Shift token '[' at line 21 in state XXX, goto XXX
Shift token IDENT = "SIZE" at line 21 in state XXX, goto XXX
Reduce #1 to typename by token ']' at line 21 in state XXX, goto XXX
Reduce #1 to typehdr by token ']' at line 21 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token ']' at line 21 in state XXX, goto XXX
Reduce #1 to generic_instance_deflist by token ']' at line 21 in state XXX, call generic_instance_type, goto XXX
Reduce #1 to generic_instance by token ']' at line 21 in state XXX, call generic_instance, goto XXX
Shift token ']' at line 21 in state XXX, goto XXX
Reduce #4 to typegen by token IDENT = "m_ar" at line 21 in state XXX, call typegen_generic, goto XXX
Reduce #1 to typespec by token IDENT = "m_ar" at line 21 in state XXX, call typespec, goto XXX
Shift token IDENT = "m_ar" at line 21 in state XXX, goto XXX
Reduce #2 to variabledefinition by token ';' at line 21 in state XXX, call vardef, goto XXX
Shift token ';' at line 21 in state XXX, goto XXX
Reduce #2 to inclass_definition by token '}' at line 22 in state XXX, call definition 2, goto XXX
Reduce #0 to inclass_definitionlist by token '}' at line 22 in state XXX, goto XXX
Reduce #2 to inclass_definitionlist by token '}' at line 22 in state XXX, goto XXX
Reduce #2 to inclass_definitionlist by token '}' at line 22 in state XXX, goto XXX
Reduce #2 to inclass_definitionlist by token '}' at line 22 in state XXX, goto XXX
Reduce #2 to inclass_definitionlist by token '}' at line 22 in state XXX, goto XXX
Reduce #2 to inclass_definitionlist by token '}' at line 22 in state XXX, goto XXX
Shift token '}' at line 22 in state XXX, goto XXX
Reduce #9 to classdefinition by token "main" at line 24 in state XXX, call generic_classdef, goto XXX
Reduce #1 to free_definition by token "main" at line 24 in state XXX, call definition 1, goto XXX
Reduce #0 to free_definitionlist by token "main" at line 24 in state XXX, goto XXX
Reduce #2 to free_definitionlist by token "main" at line 24 in state XXX, goto XXX
Shift token "main" at line 24 in state XXX, goto XXX
Shift token '{' at line 24 in state XXX, goto XXX
Shift token "var" at line 25 in state XXX, goto XXX
Shift token IDENT = "Array" at line 25 in state XXX, goto XXX
Reduce #1 to typename by token '[' at line 25 in state XXX, goto XXX
Reduce #1 to typehdr by token '[' at line 25 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token '[' at line 25 in state XXX, goto XXX
Shift token '[' at line 25 in state XXX, goto XXX
Shift token IDENT = "float" at line 25 in state XXX, goto XXX
Reduce #1 to typename by token ',' at line 25 in state XXX, goto XXX
Reduce #1 to typehdr by token ',' at line 25 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token ',' at line 25 in state XXX, goto XXX
Shift token ',' at line 25 in state XXX, goto XXX
Shift token UINTEGER = "5" at line 25 in state XXX, goto XXX
Reduce #1 to generic_instance_deflist by token ']' at line 25 in state XXX, call generic_instance_dimension, goto XXX
Reduce #3 to generic_instance_deflist by token ']' at line 25 in state XXX, call generic_instance_type, goto XXX
Reduce #1 to generic_instance by token ']' at line 25 in state XXX, call generic_instance, goto XXX
Shift token ']' at line 25 in state XXX, goto XXX
Reduce #4 to typegen by token IDENT = "array" at line 25 in state XXX, call typegen_generic, goto XXX
Reduce #1 to typespec by token IDENT = "array" at line 25 in state XXX, call typespec, goto XXX
Shift token IDENT = "array" at line 25 in state XXX, goto XXX
Shift token '=' at line 25 in state XXX, goto XXX
Shift token '{' at line 25 in state XXX, goto XXX
Shift token FLOAT = "1.1" at line 25 in state XXX, goto XXX
Reduce #1 to expression by token ',' at line 25 in state XXX, call constant "constexpr float", goto XXX
Shift token ',' at line 25 in state XXX, goto XXX
Shift token FLOAT = "2.2" at line 25 in state XXX, goto XXX
Reduce #1 to expression by token ',' at line 25 in state XXX, call constant "constexpr float", goto XXX
Shift token ',' at line 25 in state XXX, goto XXX
Shift token FLOAT = "3.3" at line 25 in state XXX, goto XXX
Reduce #1 to expression by token ',' at line 25 in state XXX, call constant "constexpr float", goto XXX
Shift token ',' at line 25 in state XXX, goto XXX
Shift token FLOAT = "4.4" at line 25 in state XXX, goto XXX
Reduce #1 to expression by token ',' at line 25 in state XXX, call constant "constexpr float", goto XXX
Shift token ',' at line 25 in state XXX, goto XXX
Shift token FLOAT = "5.5" at line 25 in state XXX, goto XXX
Reduce #1 to expression by token '}' at line 25 in state XXX, call constant "constexpr float", goto XXX
Reduce #1 to expressionlist by token '}' at line 25 in state XXX, goto XXX
Reduce #3 to expressionlist by token '}' at line 25 in state XXX, goto XXX
Reduce #3 to expressionlist by token '}' at line 25 in state XXX, goto XXX
Reduce #3 to expressionlist by token '}' at line 25 in state XXX, goto XXX
Reduce #3 to expressionlist by token '}' at line 25 in state XXX, goto XXX
Shift token '}' at line 25 in state XXX, goto XXX
Reduce #3 to expression by token ';' at line 25 in state XXX, call structure, goto XXX
Reduce #4 to variabledefinition by token ';' at line 25 in state XXX, call vardef_assign, goto XXX
Shift token ';' at line 25 in state XXX, goto XXX
Reduce #3 to statement by token IDENT = "array" at line 27 in state XXX, call definition 1, goto XXX
Shift token IDENT = "array" at line 27 in state XXX, goto XXX
Reduce #1 to expression by token '[' at line 27 in state XXX, call variable, goto XXX
Shift token '[' at line 27 in state XXX, goto XXX
Shift token UINTEGER = "1" at line 27 in state XXX, goto XXX
Reduce #1 to expression by token ']' at line 27 in state XXX, call constant "constexpr uint", goto XXX
Reduce #1 to expressionlist by token ']' at line 27 in state XXX, goto XXX
Shift token ']' at line 27 in state XXX, goto XXX
Reduce #4 to expression by token '=' at line 27 in state XXX, call operator_array "[]", goto XXX
Shift token '=' at line 27 in state XXX, goto XXX
Shift token FLOAT = "-11.11" at line 27 in state XXX, goto XXX
Reduce #1 to expression by token ';' at line 27 in state XXX, call constant "constexpr float", goto XXX
Reduce #3 to expression by token ';' at line 27 in state XXX, call binop "=", goto XXX
Shift token ';' at line 27 in state XXX, goto XXX
Reduce #2 to statement by token IDENT = "array" at line 28 in state XXX, call free_expression, goto XXX
Shift token IDENT = "array" at line 28 in state XXX, goto XXX
Reduce #1 to expression by token '[' at line 28 in state XXX, call variable, goto XXX
Shift token '[' at line 28 in state XXX, goto XXX
Shift token UINTEGER = "3" at line 28 in state XXX, goto XXX
Reduce #1 to expression by token ']' at line 28 in state XXX, call constant "constexpr uint", goto XXX
Reduce #1 to expressionlist by token ']' at line 28 in state XXX, goto XXX
Shift token ']' at line 28 in state XXX, goto XXX
Reduce #4 to expression by token '=' at line 28 in state XXX, call operator_array "[]", goto XXX
Shift token '=' at line 28 in state XXX, goto XXX
Shift token FLOAT = "-33.33" at line 28 in state XXX, goto XXX
Reduce #1 to expression by token ';' at line 28 in state XXX, call constant "constexpr float", goto XXX
Reduce #3 to expression by token ';' at line 28 in state XXX, call binop "=", goto XXX
Shift token ';' at line 28 in state XXX, goto XXX
Reduce #2 to statement by token "var" at line 30 in state XXX, call free_expression, goto XXX
Shift token "var" at line 30 in state XXX, goto XXX
Shift token IDENT = "int" at line 30 in state XXX, goto XXX
Reduce #1 to typename by token IDENT = "i" at line 30 in state XXX, goto XXX
Reduce #1 to typehdr by token IDENT = "i" at line 30 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token IDENT = "i" at line 30 in state XXX, goto XXX
Reduce #1 to typespec by token IDENT = "i" at line 30 in state XXX, call typespec, goto XXX
Shift token IDENT = "i" at line 30 in state XXX, goto XXX
Shift token '=' at line 30 in state XXX, goto XXX
Shift token UINTEGER = "0" at line 30 in state XXX, goto XXX
Reduce #1 to expression by token ';' at line 30 in state XXX, call constant "constexpr uint", goto XXX
Reduce #4 to variabledefinition by token ';' at line 30 in state XXX, call vardef_assign, goto XXX
Shift token ';' at line 30 in state XXX, goto XXX
Reduce #3 to statement by token "while" at line 31 in state XXX, call definition 1, goto XXX
Shift token "while" at line 31 in state XXX, goto XXX
Shift token '(' at line 31 in state XXX, goto XXX
Shift token IDENT = "i" at line 31 in state XXX, goto XXX
Reduce #1 to expression by token '<' at line 31 in state XXX, call variable, goto XXX
Shift token '<' at line 31 in state XXX, goto XXX
Shift token UINTEGER = "5" at line 31 in state XXX, goto XXX
Reduce #1 to expression by token ')' at line 31 in state XXX, call constant "constexpr uint", goto XXX
Reduce #3 to expression by token ')' at line 31 in state XXX, call binop "<", goto XXX
Shift token ')' at line 31 in state XXX, goto XXX
Shift token '{' at line 31 in state XXX, goto XXX
Shift token IDENT = "printf" at line 32 in state XXX, goto XXX
Reduce #1 to expression by token '(' at line 32 in state XXX, call variable, goto XXX
Shift token '(' at line 32 in state XXX, goto XXX
Shift token DQSTRING = "ARRAY[ %d] = %.4f\n" at line 32 in state XXX, goto XXX
Reduce #1 to expression by token ',' at line 32 in state XXX, call string_constant, goto XXX
Shift token ',' at line 32 in state XXX, goto XXX
Shift token IDENT = "i" at line 32 in state XXX, goto XXX
Reduce #1 to expression by token ',' at line 32 in state XXX, call variable, goto XXX
Shift token ',' at line 32 in state XXX, goto XXX
Shift token IDENT = "array" at line 32 in state XXX, goto XXX
Reduce #1 to expression by token '[' at line 32 in state XXX, call variable, goto XXX
Shift token '[' at line 32 in state XXX, goto XXX
Shift token IDENT = "i" at line 32 in state XXX, goto XXX
Reduce #1 to expression by token ']' at line 32 in state XXX, call variable, goto XXX
Reduce #1 to expressionlist by token ']' at line 32 in state XXX, goto XXX
Shift token ']' at line 32 in state XXX, goto XXX
Reduce #4 to expression by token ')' at line 32 in state XXX, call operator_array "[]", goto XXX
Reduce #1 to expressionlist by token ')' at line 32 in state XXX, goto XXX
Reduce #3 to expressionlist by token ')' at line 32 in state XXX, goto XXX
Reduce #3 to expressionlist by token ')' at line 32 in state XXX, goto XXX
Shift token ')' at line 32 in state XXX, goto XXX
Reduce #4 to expression by token ';' at line 32 in state XXX, call operator "()", goto XXX
Shift token ';' at line 32 in state XXX, goto XXX
Reduce #2 to statement by token IDENT = "i" at line 33 in state XXX, call free_expression, goto XXX
Shift token IDENT = "i" at line 33 in state XXX, goto XXX
Reduce #1 to expression by token "+=" at line 33 in state XXX, call variable, goto XXX
Shift token "+=" at line 33 in state XXX, goto XXX
Shift token UINTEGER = "1" at line 33 in state XXX, goto XXX
Reduce #1 to expression by token ';' at line 33 in state XXX, call constant "constexpr uint", goto XXX
Reduce #3 to expression by token ';' at line 33 in state XXX, call assign_operator "+", goto XXX
Shift token ';' at line 33 in state XXX, goto XXX
Reduce #2 to statement by token '}' at line 34 in state XXX, call free_expression, goto XXX
Reduce #0 to statementlist by token '}' at line 34 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 34 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 34 in state XXX, goto XXX
Reduce #1 to codeblock by token '}' at line 34 in state XXX, call codeblock, goto XXX
Shift token '}' at line 34 in state XXX, goto XXX
Reduce #7 to statement by token '}' at line 35 in state XXX, call conditional_while, goto XXX
Reduce #0 to statementlist by token '}' at line 35 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 35 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 35 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 35 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 35 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 35 in state XXX, goto XXX
Reduce #1 to codeblock by token '}' at line 35 in state XXX, call codeblock, goto XXX
Shift token '}' at line 35 in state XXX, goto XXX
Accept
Calling Lua function: program
Lua call result [1]
{
  arg = {
    {
      arg = {
        {
          line = 3,
          name = "DQSTRING",
          value = "C"},
        {
          line = 3,
          name = "IDENT",
          value = "printf"},
        {
          arg = {
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {
                        {
                          arg = {
                            {
                              line = 3,
                              name = "IDENT",
                              value = "byte"}},
                          call = {
                            name = "typehdr {const=true}",
                            obj = {
                              const = true},
                            proc = <function>},
                          line = 3,
                          step = 0}},
                      call = {
                        name = "typegen_pointer {const=false}",
                        obj = {
                          const = false},
                        proc = <function>},
                      line = 3,
                      step = 0}},
                  call = {
                    name = "typespec",
                    proc = <function>},
                  line = 3,
                  step = 0},
                {
                  line = 3,
                  name = "IDENT",
                  value = "fmt"}},
              call = {
                name = "extern_paramdeftail",
                proc = <function>},
              line = 3,
              step = 0}},
          call = {
            name = "extern_paramdeflist",
            proc = <function>},
          line = 3,
          step = 0}},
      call = {
        name = "extern_procdef_vararg",
        proc = <function>},
      line = 3,
      step = 0},
    {
      arg = {
        {
          line = 4,
          name = "DQSTRING",
          value = "C"},
        {
          line = 4,
          name = "IDENT",
          value = "malloc"},
        {
          arg = {
            {
              arg = {
                {
                  arg = {
                    {
                      line = 4,
                      name = "IDENT",
                      value = "byte"}},
                  call = {
                    name = "typehdr {const=false}",
                    obj = {
                      const = false},
                    proc = <function>},
                  line = 4,
                  step = 0}},
              call = {
                name = "typegen_pointer {const=false}",
                obj = {
                  const = false},
                proc = <function>},
              line = 4,
              step = 0}},
          call = {
            name = "typespec",
            proc = <function>},
          line = 4,
          step = 0},
        {
          arg = {
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {
                        {
                          line = 4,
                          name = "IDENT",
                          value = "long"}},
                      call = {
                        name = "typehdr {const=false}",
                        obj = {
                          const = false},
                        proc = <function>},
                      line = 4,
                      step = 0}},
                  call = {
                    name = "typespec",
                    proc = <function>},
                  line = 4,
                  step = 0}},
              call = {
                name = "extern_paramdeftail",
                proc = <function>},
              line = 4,
              step = 0}},
          call = {
            name = "extern_paramdeflist",
            proc = <function>},
          line = 4,
          step = 0}},
      call = {
        name = "extern_funcdef",
        proc = <function>},
      line = 4,
      step = 0},
    {
      arg = {
        {
          arg = {
            {
              line = 6,
              name = "IDENT",
              value = "Array"},
            {
              arg = {
                {
                  arg = {
                    {
                      line = 6,
                      name = "IDENT",
                      value = "ELEMENT"},
                    {
                      arg = {
                        {
                          line = 6,
                          name = "IDENT",
                          value = "SIZE"}},
                      call = {
                        name = "generic_header_ident",
                        proc = <function>},
                      line = 6,
                      step = 0}},
                  call = {
                    name = "generic_header_ident",
                    proc = <function>},
                  line = 6,
                  step = 0}},
              call = {
                name = "generic_header",
                proc = <function>},
              line = 6,
              step = 0},
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {},
                      call = {
                        name = "linkage {private=false,linkage="external",explicit=false}",
                        obj = {
                          explicit = false,
                          linkage = "external",
                          private = false},
                        proc = <function>},
                      line = 6,
                      step = 0},
                    {
                      arg = {
                        {
                          arg = {},
                          call = {
                            name = "paramdeflist",
                            proc = <function>},
                          line = 6,
                          step = 0},
                        {
                          arg = {},
                          call = {
                            name = "codeblock",
                            proc = <function>},
                          line = 6,
                          step = 0}},
                      call = {
                        name = "callablebody {throws=true,const=false}",
                        obj = {
                          const = false,
                          throws = true},
                        proc = <function>},
                      line = 6,
                      scope = {
                        0,
                        1}}},
                  call = {
                    name = "constructordef",
                    proc = <function>},
                  id = 1,
                  line = 6,
                  step = 1}},
              call = {
                name = "definition_decl_impl_pass 4",
                obj = 4,
                proc = <function>},
              line = 6,
              step = 1},
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {},
                      call = {
                        name = "linkage {private=false,linkage="external",explicit=false}",
                        obj = {
                          explicit = false,
                          linkage = "external",
                          private = false},
                        proc = <function>},
                      line = 6,
                      step = 1},
                    {
                      arg = {
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          arg = {
                                            {
                                              line = 9,
                                              name = "IDENT",
                                              value = "ELEMENT"}},
                                          call = {
                                            name = "typehdr {const=true}",
                                            obj = {
                                              const = true},
                                            proc = <function>},
                                          line = 9,
                                          step = 1},
                                        {
                                          arg = {
                                            {
                                              arg = {
                                                {
                                                  arg = {
                                                    {
                                                      line = 9,
                                                      name = "IDENT",
                                                      value = "SIZE"}},
                                                  call = {
                                                    name = "typehdr {const=false}",
                                                    obj = {
                                                      const = false},
                                                    proc = <function>},
                                                  line = 9,
                                                  step = 1}},
                                              call = {
                                                name = "generic_instance_type",
                                                proc = <function>},
                                              line = 9,
                                              step = 1}},
                                          call = {
                                            name = "generic_instance",
                                            proc = <function>},
                                          line = 9,
                                          step = 1}},
                                      call = {
                                        name = "typegen_generic",
                                        proc = <function>},
                                      line = 9,
                                      step = 1}},
                                  call = {
                                    name = "typespec_ref",
                                    proc = <function>},
                                  line = 9,
                                  step = 1},
                                {
                                  line = 9,
                                  name = "IDENT",
                                  value = "ar_"}},
                              call = {
                                name = "paramdef",
                                proc = <function>},
                              line = 9,
                              step = 1}},
                          call = {
                            name = "paramdeflist",
                            proc = <function>},
                          line = 9,
                          step = 1},
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          line = 11,
                                          name = "IDENT",
                                          value = "m_ar"}},
                                      call = {
                                        name = "variable",
                                        proc = <function>},
                                      line = 11,
                                      step = 1},
                                    {
                                      arg = {
                                        {
                                          line = 11,
                                          name = "IDENT",
                                          value = "ar_"}},
                                      call = {
                                        name = "variable",
                                        proc = <function>},
                                      line = 11,
                                      step = 1}},
                                  call = {
                                    name = "binop =",
                                    obj = "=",
                                    proc = <function>},
                                  line = 11,
                                  step = 1}},
                              call = {
                                name = "free_expression",
                                proc = <function>},
                              line = 11,
                              step = 1}},
                          call = {
                            name = "codeblock",
                            proc = <function>},
                          line = 11,
                          step = 1}},
                      call = {
                        name = "callablebody {throws=true,const=false}",
                        obj = {
                          const = false,
                          throws = true},
                        proc = <function>},
                      line = 11,
                      scope = {
                        1,
                        2}}},
                  call = {
                    name = "constructordef",
                    proc = <function>},
                  id = 2,
                  line = 11,
                  step = 2}},
              call = {
                name = "definition_decl_impl_pass 4",
                obj = 4,
                proc = <function>},
              line = 11,
              step = 2},
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {},
                      call = {
                        name = "linkage {private=false,linkage="external",explicit=true}",
                        obj = {
                          explicit = true,
                          linkage = "external",
                          private = false},
                        proc = <function>},
                      line = 11,
                      step = 2},
                    {
                      arg = {},
                      call = {
                        name = "operatordecl {name="[]",symbol="get"}",
                        obj = {
                          name = "[]",
                          symbol = "get"},
                        proc = <function>},
                      line = 11,
                      step = 2},
                    {
                      arg = {
                        {
                          arg = {
                            {
                              line = 13,
                              name = "IDENT",
                              value = "ELEMENT"}},
                          call = {
                            name = "typehdr {const=false}",
                            obj = {
                              const = false},
                            proc = <function>},
                          line = 13,
                          step = 2}},
                      call = {
                        name = "typespec_ref",
                        proc = <function>},
                      line = 13,
                      step = 2},
                    {
                      arg = {
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          line = 13,
                                          name = "IDENT",
                                          value = "uint"}},
                                      call = {
                                        name = "typehdr {const=false}",
                                        obj = {
                                          const = false},
                                        proc = <function>},
                                      line = 13,
                                      step = 2}},
                                  call = {
                                    name = "typespec",
                                    proc = <function>},
                                  line = 13,
                                  step = 2},
                                {
                                  line = 13,
                                  name = "IDENT",
                                  value = "idx"}},
                              call = {
                                name = "paramdef",
                                proc = <function>},
                              line = 13,
                              step = 2}},
                          call = {
                            name = "paramdeflist",
                            proc = <function>},
                          line = 13,
                          step = 2},
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          line = 15,
                                          name = "IDENT",
                                          value = "m_ar"}},
                                      call = {
                                        name = "variable",
                                        proc = <function>},
                                      line = 15,
                                      step = 2},
                                    {
                                      arg = {
                                        {
                                          line = 15,
                                          name = "IDENT",
                                          value = "idx"}},
                                      call = {
                                        name = "variable",
                                        proc = <function>},
                                      line = 15,
                                      step = 2}},
                                  call = {
                                    name = "operator_array []",
                                    obj = "[]",
                                    proc = <function>},
                                  line = 15,
                                  step = 2}},
                              call = {
                                name = "return_value",
                                proc = <function>},
                              line = 15,
                              step = 3}},
                          call = {
                            name = "codeblock",
                            proc = <function>},
                          line = 15,
                          step = 3}},
                      call = {
                        name = "callablebody {throws=true,const=false}",
                        obj = {
                          const = false,
                          throws = true},
                        proc = <function>},
                      line = 15,
                      scope = {
                        2,
                        4}}},
                  call = {
                    name = "operator_funcdef",
                    proc = <function>},
                  id = 3,
                  line = 15,
                  step = 4}},
              call = {
                name = "definition_decl_impl_pass 4",
                obj = 4,
                proc = <function>},
              line = 15,
              step = 4},
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {},
                      call = {
                        name = "linkage {private=false,linkage="external",explicit=true}",
                        obj = {
                          explicit = true,
                          linkage = "external",
                          private = false},
                        proc = <function>},
                      line = 15,
                      step = 4},
                    {
                      arg = {},
                      call = {
                        name = "operatordecl {name="[]",symbol="get"}",
                        obj = {
                          name = "[]",
                          symbol = "get"},
                        proc = <function>},
                      line = 15,
                      step = 4},
                    {
                      arg = {
                        {
                          arg = {
                            {
                              line = 17,
                              name = "IDENT",
                              value = "ELEMENT"}},
                          call = {
                            name = "typehdr {const=true}",
                            obj = {
                              const = true},
                            proc = <function>},
                          line = 17,
                          step = 4}},
                      call = {
                        name = "typespec_ref",
                        proc = <function>},
                      line = 17,
                      step = 4},
                    {
                      arg = {
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          line = 17,
                                          name = "IDENT",
                                          value = "uint"}},
                                      call = {
                                        name = "typehdr {const=false}",
                                        obj = {
                                          const = false},
                                        proc = <function>},
                                      line = 17,
                                      step = 4}},
                                  call = {
                                    name = "typespec",
                                    proc = <function>},
                                  line = 17,
                                  step = 4},
                                {
                                  line = 17,
                                  name = "IDENT",
                                  value = "idx"}},
                              call = {
                                name = "paramdef",
                                proc = <function>},
                              line = 17,
                              step = 4}},
                          call = {
                            name = "paramdeflist",
                            proc = <function>},
                          line = 17,
                          step = 4},
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          line = 19,
                                          name = "IDENT",
                                          value = "m_ar"}},
                                      call = {
                                        name = "variable",
                                        proc = <function>},
                                      line = 19,
                                      step = 4},
                                    {
                                      arg = {
                                        {
                                          line = 19,
                                          name = "IDENT",
                                          value = "idx"}},
                                      call = {
                                        name = "variable",
                                        proc = <function>},
                                      line = 19,
                                      step = 4}},
                                  call = {
                                    name = "operator_array []",
                                    obj = "[]",
                                    proc = <function>},
                                  line = 19,
                                  step = 4}},
                              call = {
                                name = "return_value",
                                proc = <function>},
                              line = 19,
                              step = 5}},
                          call = {
                            name = "codeblock",
                            proc = <function>},
                          line = 19,
                          step = 5}},
                      call = {
                        name = "callablebody {throws=true,const=true}",
                        obj = {
                          const = true,
                          throws = true},
                        proc = <function>},
                      line = 19,
                      scope = {
                        4,
                        6}}},
                  call = {
                    name = "operator_funcdef",
                    proc = <function>},
                  id = 4,
                  line = 19,
                  step = 6}},
              call = {
                name = "definition_decl_impl_pass 4",
                obj = 4,
                proc = <function>},
              line = 19,
              step = 6},
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  line = 21,
                                  name = "IDENT",
                                  value = "ELEMENT"}},
                              call = {
                                name = "typehdr {const=false}",
                                obj = {
                                  const = false},
                                proc = <function>},
                              line = 21,
                              step = 6},
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          line = 21,
                                          name = "IDENT",
                                          value = "SIZE"}},
                                      call = {
                                        name = "typehdr {const=false}",
                                        obj = {
                                          const = false},
                                        proc = <function>},
                                      line = 21,
                                      step = 6}},
                                  call = {
                                    name = "generic_instance_type",
                                    proc = <function>},
                                  line = 21,
                                  step = 6}},
                              call = {
                                name = "generic_instance",
                                proc = <function>},
                              line = 21,
                              step = 6}},
                          call = {
                            name = "typegen_generic",
                            proc = <function>},
                          line = 21,
                          step = 6}},
                      call = {
                        name = "typespec",
                        proc = <function>},
                      line = 21,
                      step = 6},
                    {
                      line = 21,
                      name = "IDENT",
                      value = "m_ar"}},
                  call = {
                    name = "vardef",
                    proc = <function>},
                  line = 21,
                  step = 7}},
              call = {
                name = "definition 2",
                obj = 2,
                proc = <function>},
              line = 21,
              step = 7}},
          call = {
            name = "generic_classdef",
            proc = <function>},
          line = 21,
          step = 8}},
      call = {
        name = "definition 1",
        obj = 1,
        proc = <function>},
      line = 21,
      step = 8},
    {
      arg = {
        {
          arg = {
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  line = 25,
                                  name = "IDENT",
                                  value = "Array"}},
                              call = {
                                name = "typehdr {const=false}",
                                obj = {
                                  const = false},
                                proc = <function>},
                              line = 25,
                              step = 8},
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          line = 25,
                                          name = "IDENT",
                                          value = "float"}},
                                      call = {
                                        name = "typehdr {const=false}",
                                        obj = {
                                          const = false},
                                        proc = <function>},
                                      line = 25,
                                      step = 8},
                                    {
                                      arg = {
                                        {
                                          line = 25,
                                          name = "UINTEGER",
                                          value = "5"}},
                                      call = {
                                        name = "generic_instance_dimension",
                                        proc = <function>},
                                      line = 25,
                                      step = 8}},
                                  call = {
                                    name = "generic_instance_type",
                                    proc = <function>},
                                  line = 25,
                                  step = 8}},
                              call = {
                                name = "generic_instance",
                                proc = <function>},
                              line = 25,
                              step = 8}},
                          call = {
                            name = "typegen_generic",
                            proc = <function>},
                          line = 25,
                          step = 8}},
                      call = {
                        name = "typespec",
                        proc = <function>},
                      line = 25,
                      step = 8},
                    {
                      line = 25,
                      name = "IDENT",
                      value = "array"},
                    {
                      arg = {
                        {
                          arg = {
                            {
                              line = 25,
                              name = "FLOAT",
                              value = "1.1"}},
                          call = {
                            name = "constant constexpr float",
                            obj = "constexpr float",
                            proc = <function>},
                          line = 25,
                          step = 8},
                        {
                          arg = {
                            {
                              line = 25,
                              name = "FLOAT",
                              value = "2.2"}},
                          call = {
                            name = "constant constexpr float",
                            obj = "constexpr float",
                            proc = <function>},
                          line = 25,
                          step = 8},
                        {
                          arg = {
                            {
                              line = 25,
                              name = "FLOAT",
                              value = "3.3"}},
                          call = {
                            name = "constant constexpr float",
                            obj = "constexpr float",
                            proc = <function>},
                          line = 25,
                          step = 8},
                        {
                          arg = {
                            {
                              line = 25,
                              name = "FLOAT",
                              value = "4.4"}},
                          call = {
                            name = "constant constexpr float",
                            obj = "constexpr float",
                            proc = <function>},
                          line = 25,
                          step = 8},
                        {
                          arg = {
                            {
                              line = 25,
                              name = "FLOAT",
                              value = "5.5"}},
                          call = {
                            name = "constant constexpr float",
                            obj = "constexpr float",
                            proc = <function>},
                          line = 25,
                          step = 8}},
                      call = {
                        name = "structure",
                        proc = <function>},
                      line = 25,
                      step = 8}},
                  call = {
                    name = "vardef_assign",
                    proc = <function>},
                  line = 25,
                  step = 9}},
              call = {
                name = "definition 1",
                obj = 1,
                proc = <function>},
              line = 25,
              step = 9},
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {
                        {
                          arg = {
                            {
                              line = 27,
                              name = "IDENT",
                              value = "array"}},
                          call = {
                            name = "variable",
                            proc = <function>},
                          line = 27,
                          step = 9},
                        {
                          arg = {
                            {
                              line = 27,
                              name = "UINTEGER",
                              value = "1"}},
                          call = {
                            name = "constant constexpr uint",
                            obj = "constexpr uint",
                            proc = <function>},
                          line = 27,
                          step = 9}},
                      call = {
                        name = "operator_array []",
                        obj = "[]",
                        proc = <function>},
                      line = 27,
                      step = 9},
                    {
                      arg = {
                        {
                          line = 27,
                          name = "FLOAT",
                          value = "-11.11"}},
                      call = {
                        name = "constant constexpr float",
                        obj = "constexpr float",
                        proc = <function>},
                      line = 27,
                      step = 9}},
                  call = {
                    name = "binop =",
                    obj = "=",
                    proc = <function>},
                  line = 27,
                  step = 9}},
              call = {
                name = "free_expression",
                proc = <function>},
              line = 27,
              step = 9},
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {
                        {
                          arg = {
                            {
                              line = 28,
                              name = "IDENT",
                              value = "array"}},
                          call = {
                            name = "variable",
                            proc = <function>},
                          line = 28,
                          step = 9},
                        {
                          arg = {
                            {
                              line = 28,
                              name = "UINTEGER",
                              value = "3"}},
                          call = {
                            name = "constant constexpr uint",
                            obj = "constexpr uint",
                            proc = <function>},
                          line = 28,
                          step = 9}},
                      call = {
                        name = "operator_array []",
                        obj = "[]",
                        proc = <function>},
                      line = 28,
                      step = 9},
                    {
                      arg = {
                        {
                          line = 28,
                          name = "FLOAT",
                          value = "-33.33"}},
                      call = {
                        name = "constant constexpr float",
                        obj = "constexpr float",
                        proc = <function>},
                      line = 28,
                      step = 9}},
                  call = {
                    name = "binop =",
                    obj = "=",
                    proc = <function>},
                  line = 28,
                  step = 9}},
              call = {
                name = "free_expression",
                proc = <function>},
              line = 28,
              step = 9},
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {
                        {
                          arg = {
                            {
                              line = 30,
                              name = "IDENT",
                              value = "int"}},
                          call = {
                            name = "typehdr {const=false}",
                            obj = {
                              const = false},
                            proc = <function>},
                          line = 30,
                          step = 9}},
                      call = {
                        name = "typespec",
                        proc = <function>},
                      line = 30,
                      step = 9},
                    {
                      line = 30,
                      name = "IDENT",
                      value = "i"},
                    {
                      arg = {
                        {
                          line = 30,
                          name = "UINTEGER",
                          value = "0"}},
                      call = {
                        name = "constant constexpr uint",
                        obj = "constexpr uint",
                        proc = <function>},
                      line = 30,
                      step = 9}},
                  call = {
                    name = "vardef_assign",
                    proc = <function>},
                  line = 30,
                  step = 10}},
              call = {
                name = "definition 1",
                obj = 1,
                proc = <function>},
              line = 30,
              step = 10},
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {
                        {
                          line = 31,
                          name = "IDENT",
                          value = "i"}},
                      call = {
                        name = "variable",
                        proc = <function>},
                      line = 31,
                      step = 10},
                    {
                      arg = {
                        {
                          line = 31,
                          name = "UINTEGER",
                          value = "5"}},
                      call = {
                        name = "constant constexpr uint",
                        obj = "constexpr uint",
                        proc = <function>},
                      line = 31,
                      step = 10}},
                  call = {
                    name = "binop <",
                    obj = "<",
                    proc = <function>},
                  line = 31,
                  step = 10},
                {
                  arg = {
                    {
                      arg = {
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  line = 32,
                                  name = "IDENT",
                                  value = "printf"}},
                              call = {
                                name = "variable",
                                proc = <function>},
                              line = 32,
                              step = 10},
                            {
                              arg = {
                                {
                                  line = 32,
                                  name = "DQSTRING",
                                  value = "ARRAY[ %d] = %.4f\\n"}},
                              call = {
                                name = "string_constant",
                                proc = <function>},
                              line = 32,
                              step = 10},
                            {
                              arg = {
                                {
                                  line = 32,
                                  name = "IDENT",
                                  value = "i"}},
                              call = {
                                name = "variable",
                                proc = <function>},
                              line = 32,
                              step = 10},
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      line = 32,
                                      name = "IDENT",
                                      value = "array"}},
                                  call = {
                                    name = "variable",
                                    proc = <function>},
                                  line = 32,
                                  step = 10},
                                {
                                  arg = {
                                    {
                                      line = 32,
                                      name = "IDENT",
                                      value = "i"}},
                                  call = {
                                    name = "variable",
                                    proc = <function>},
                                  line = 32,
                                  step = 10}},
                              call = {
                                name = "operator_array []",
                                obj = "[]",
                                proc = <function>},
                              line = 32,
                              step = 10}},
                          call = {
                            name = "operator ()",
                            obj = "()",
                            proc = <function>},
                          line = 32,
                          step = 10}},
                      call = {
                        name = "free_expression",
                        proc = <function>},
                      line = 32,
                      step = 10},
                    {
                      arg = {
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  line = 33,
                                  name = "IDENT",
                                  value = "i"}},
                              call = {
                                name = "variable",
                                proc = <function>},
                              line = 33,
                              step = 10},
                            {
                              arg = {
                                {
                                  line = 33,
                                  name = "UINTEGER",
                                  value = "1"}},
                              call = {
                                name = "constant constexpr uint",
                                obj = "constexpr uint",
                                proc = <function>},
                              line = 33,
                              step = 10}},
                          call = {
                            name = "assign_operator +",
                            obj = "+",
                            proc = <function>},
                          line = 33,
                          step = 10}},
                      call = {
                        name = "free_expression",
                        proc = <function>},
                      line = 33,
                      step = 10}},
                  call = {
                    name = "codeblock",
                    proc = <function>},
                  line = 33,
                  step = 10}},
              call = {
                name = "conditional_while",
                proc = <function>},
              line = 33,
              scope = {
                10,
                11}}},
          call = {
            name = "codeblock",
            proc = <function>},
          line = 33,
          step = 11}},
      call = {
        name = "main_procdef",
        proc = <function>},
      line = 33,
      scope = {
        8,
        12}}},
  call = {
    name = "program",
    proc = <function>},
  line = 33,
  step = 12}
