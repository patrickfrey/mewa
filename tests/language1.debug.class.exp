Shift token "extern" at line 1 in state 1, goto 4
Shift token DQSTRING = "C" at line 1 in state 4, goto 30
Shift token "procedure" at line 1 in state 30, goto 58
Shift token IDENT = "printf" at line 1 in state 58, goto 86
Shift token '(' at line 1 in state 86, goto 168
Shift token "const" at line 1 in state 168, goto 19
Shift token IDENT = "byte" at line 1 in state 19, goto 18
Reduce #1 to typename by token '^' at line 1 in state 18, goto 7
Reduce #1 to generic_typename by token '^' at line 1 in state 7, goto 43
Shift token '^' at line 1 in state 43, goto 70
Reduce #3 to typespec by token IDENT = "fmt" at line 1 in state 70, call typespec "const^", goto 253
Shift token IDENT = "fmt" at line 1 in state 253, goto 353
Reduce #2 to extern_parameters by token "..." at line 1 in state 353, call extern_paramdef, goto 251
Reduce #1 to extern_paramlist by token "..." at line 1 in state 251, call extern_paramdeflist, goto 291
Shift token "..." at line 1 in state 291, goto 367
Shift token ')' at line 1 in state 367, goto 402
Shift token ';' at line 1 in state 402, goto 424
Reduce #9 to extern_definition by token "interface" at line 3 in state 424, call extern_procdef_vararg, goto 3
Reduce #0 to extern_definitionlist by token "interface" at line 3 in state 3, goto 29
Reduce #2 to extern_definitionlist by token "interface" at line 3 in state 29, goto 2
Shift token "interface" at line 3 in state 2, goto 25
Shift token IDENT = "Object" at line 3 in state 25, goto 55
Shift token '{' at line 4 in state 55, goto 83
Shift token "function" at line 5 in state 83, goto 156
Shift token IDENT = "x" at line 5 in state 156, goto 261
Shift token IDENT = "int" at line 5 in state 261, goto 18
Reduce #1 to typename by token '(' at line 5 in state 18, goto 7
Reduce #1 to generic_typename by token '(' at line 5 in state 7, goto 8
Reduce #1 to typespec by token '(' at line 5 in state 8, call typespec "", goto 359
Shift token '(' at line 5 in state 359, goto 395
Reduce #0 to extern_paramlist by token ')' at line 5 in state 395, call extern_paramdeflist, goto 418
Shift token ')' at line 5 in state 418, goto 436
Shift token "const" at line 5 in state 436, goto 449
Shift token ';' at line 5 in state 449, goto 456
Reduce #8 to ininterf_definition by token "function" at line 6 in state 456, call interface_funcdef {const=true}, goto 155
Shift token "function" at line 6 in state 155, goto 156
Shift token IDENT = "y" at line 6 in state 156, goto 261
Shift token IDENT = "int" at line 6 in state 261, goto 18
Reduce #1 to typename by token '(' at line 6 in state 18, goto 7
Reduce #1 to generic_typename by token '(' at line 6 in state 7, goto 8
Reduce #1 to typespec by token '(' at line 6 in state 8, call typespec "", goto 359
Shift token '(' at line 6 in state 359, goto 395
Reduce #0 to extern_paramlist by token ')' at line 6 in state 395, call extern_paramdeflist, goto 418
Shift token ')' at line 6 in state 418, goto 436
Shift token "const" at line 6 in state 436, goto 449
Shift token ';' at line 6 in state 449, goto 456
Reduce #8 to ininterf_definition by token "function" at line 7 in state 456, call interface_funcdef {const=true}, goto 155
Shift token "function" at line 7 in state 155, goto 156
Shift token IDENT = "ofs_x" at line 7 in state 156, goto 261
Shift token IDENT = "int" at line 7 in state 261, goto 18
Reduce #1 to typename by token '(' at line 7 in state 18, goto 7
Reduce #1 to generic_typename by token '(' at line 7 in state 7, goto 8
Reduce #1 to typespec by token '(' at line 7 in state 8, call typespec "", goto 359
Shift token '(' at line 7 in state 359, goto 395
Shift token IDENT = "int" at line 7 in state 395, goto 18
Reduce #1 to typename by token IDENT = "addx" at line 7 in state 18, goto 7
Reduce #1 to generic_typename by token IDENT = "addx" at line 7 in state 7, goto 8
Reduce #1 to typespec by token IDENT = "addx" at line 7 in state 8, call typespec "", goto 253
Shift token IDENT = "addx" at line 7 in state 253, goto 353
Reduce #2 to extern_parameters by token ')' at line 7 in state 353, call extern_paramdef, goto 251
Reduce #1 to extern_paramlist by token ')' at line 7 in state 251, call extern_paramdeflist, goto 418
Shift token ')' at line 7 in state 418, goto 436
Shift token "const" at line 7 in state 436, goto 449
Shift token ';' at line 7 in state 449, goto 456
Reduce #8 to ininterf_definition by token "function" at line 8 in state 456, call interface_funcdef {const=true}, goto 155
Shift token "function" at line 8 in state 155, goto 156
Shift token IDENT = "ofs_y" at line 8 in state 156, goto 261
Shift token IDENT = "int" at line 8 in state 261, goto 18
Reduce #1 to typename by token '(' at line 8 in state 18, goto 7
Reduce #1 to generic_typename by token '(' at line 8 in state 7, goto 8
Reduce #1 to typespec by token '(' at line 8 in state 8, call typespec "", goto 359
Shift token '(' at line 8 in state 359, goto 395
Shift token IDENT = "int" at line 8 in state 395, goto 18
Reduce #1 to typename by token IDENT = "addy" at line 8 in state 18, goto 7
Reduce #1 to generic_typename by token IDENT = "addy" at line 8 in state 7, goto 8
Reduce #1 to typespec by token IDENT = "addy" at line 8 in state 8, call typespec "", goto 253
Shift token IDENT = "addy" at line 8 in state 253, goto 353
Reduce #2 to extern_parameters by token ')' at line 8 in state 353, call extern_paramdef, goto 251
Reduce #1 to extern_paramlist by token ')' at line 8 in state 251, call extern_paramdeflist, goto 418
Shift token ')' at line 8 in state 418, goto 436
Shift token "const" at line 8 in state 436, goto 449
Shift token ';' at line 8 in state 449, goto 456
Reduce #8 to ininterf_definition by token '}' at line 9 in state 456, call interface_funcdef {const=true}, goto 155
Reduce #0 to ininterf_definitionlist by token '}' at line 9 in state 155, goto 260
Reduce #2 to ininterf_definitionlist by token '}' at line 9 in state 260, goto 260
Reduce #2 to ininterf_definitionlist by token '}' at line 9 in state 260, goto 260
Reduce #2 to ininterf_definitionlist by token '}' at line 9 in state 260, goto 260
Reduce #2 to ininterf_definitionlist by token '}' at line 9 in state 260, goto 154
Shift token '}' at line 9 in state 154, goto 259
Reduce #5 to interfacedefinition by token "interface" at line 11 in state 259, call interfacedef, goto 12
Reduce #1 to free_definition by token "interface" at line 11 in state 12, call definition 1, goto 6
Shift token "interface" at line 11 in state 6, goto 25
Shift token IDENT = "ObjectUpdater" at line 11 in state 25, goto 55
Shift token '{' at line 12 in state 55, goto 83
Shift token "operator" at line 13 in state 83, goto 158
Shift token '=' at line 13 in state 158, goto 269
Reduce #1 to operatordecl by token '(' at line 13 in state 269, call operatordecl {name="=",symbol="assign"}, goto 263
Shift token '(' at line 13 in state 263, goto 362
Shift token IDENT = "int" at line 13 in state 362, goto 18
Reduce #1 to typename by token IDENT = "x_" at line 13 in state 18, goto 7
Reduce #1 to generic_typename by token IDENT = "x_" at line 13 in state 7, goto 8
Reduce #1 to typespec by token IDENT = "x_" at line 13 in state 8, call typespec "", goto 253
Shift token IDENT = "x_" at line 13 in state 253, goto 353
Shift token ',' at line 13 in state 353, goto 387
Shift token IDENT = "int" at line 13 in state 387, goto 18
Reduce #1 to typename by token IDENT = "y_" at line 13 in state 18, goto 7
Reduce #1 to generic_typename by token IDENT = "y_" at line 13 in state 7, goto 8
Reduce #1 to typespec by token IDENT = "y_" at line 13 in state 8, call typespec "", goto 253
Shift token IDENT = "y_" at line 13 in state 253, goto 353
Reduce #2 to extern_parameters by token ')' at line 13 in state 353, call extern_paramdef, goto 413
Reduce #4 to extern_parameters by token ')' at line 13 in state 413, call extern_paramdef, goto 251
Reduce #1 to extern_paramlist by token ')' at line 13 in state 251, call extern_paramdeflist, goto 398
Shift token ')' at line 13 in state 398, goto 421
Shift token ';' at line 13 in state 421, goto 440
Reduce #6 to ininterf_definition by token '}' at line 14 in state 440, call interface_operator_procdef {const=false}, goto 155
Reduce #0 to ininterf_definitionlist by token '}' at line 14 in state 155, goto 260
Reduce #2 to ininterf_definitionlist by token '}' at line 14 in state 260, goto 154
Shift token '}' at line 14 in state 154, goto 259
Reduce #5 to interfacedefinition by token "class" at line 16 in state 259, call interfacedef, goto 12
Reduce #1 to free_definition by token "class" at line 16 in state 12, call definition 1, goto 6
Shift token "class" at line 16 in state 6, goto 21
Shift token IDENT = "Point" at line 16 in state 21, goto 47
Shift token ':' at line 16 in state 47, goto 76
Shift token IDENT = "Object" at line 16 in state 76, goto 18
Reduce #1 to typename by token ',' at line 16 in state 18, goto 7
Reduce #1 to generic_typename by token ',' at line 16 in state 7, goto 49
Reduce #1 to typepath by token ',' at line 16 in state 49, call typespec "", goto 142
Shift token ',' at line 16 in state 142, goto 244
Shift token IDENT = "ObjectUpdater" at line 16 in state 244, goto 18
Reduce #1 to typename by token '{' at line 17 in state 18, goto 7
Reduce #1 to generic_typename by token '{' at line 17 in state 7, goto 49
Reduce #1 to typepath by token '{' at line 17 in state 49, call typespec "", goto 142
Reduce #1 to inheritlist by token '{' at line 17 in state 142, call inheritdef 1, goto 349
Reduce #3 to inheritlist by token '{' at line 17 in state 349, call inheritdef 1, goto 143
Shift token '{' at line 17 in state 143, goto 245
Shift token "public" at line 18 in state 245, goto 28
Reduce #1 to linkage by token "constructor" at line 18 in state 28, call linkage {private=false,linkage="external"}, goto 136
Shift token "constructor" at line 18 in state 136, goto 241
Shift token '(' at line 18 in state 241, goto 347
Shift token IDENT = "int" at line 18 in state 347, goto 18
Reduce #1 to typename by token IDENT = "x_" at line 18 in state 18, goto 7
Reduce #1 to generic_typename by token IDENT = "x_" at line 18 in state 7, goto 8
Reduce #1 to typespec by token IDENT = "x_" at line 18 in state 8, call typespec "", goto 233
Shift token IDENT = "x_" at line 18 in state 233, goto 342
Reduce #2 to paramdecl by token ',' at line 18 in state 342, call paramdef, goto 236
Shift token ',' at line 18 in state 236, goto 344
Shift token IDENT = "int" at line 18 in state 344, goto 18
Reduce #1 to typename by token IDENT = "y_" at line 18 in state 18, goto 7
Reduce #1 to generic_typename by token IDENT = "y_" at line 18 in state 7, goto 8
Reduce #1 to typespec by token IDENT = "y_" at line 18 in state 8, call typespec "", goto 233
Shift token IDENT = "y_" at line 18 in state 233, goto 342
Reduce #2 to paramdecl by token ')' at line 18 in state 342, call paramdef, goto 236
Reduce #1 to parameters by token ')' at line 18 in state 236, goto 379
Reduce #3 to parameters by token ')' at line 18 in state 379, goto 235
Reduce #1 to parameterlist by token ')' at line 18 in state 235, call paramdeflist, goto 383
Shift token ')' at line 18 in state 383, goto 412
Shift token '{' at line 19 in state 412, goto 378
Shift token IDENT = "m_x" at line 20 in state 378, goto 95
Reduce #1 to expression by token '=' at line 20 in state 95, call variable, goto 92
Shift token '=' at line 20 in state 92, goto 180
Shift token IDENT = "x_" at line 20 in state 180, goto 95
Reduce #1 to expression by token ';' at line 20 in state 95, call variable, goto 300
Reduce #3 to expression by token ';' at line 20 in state 300, call operator "=", goto 92
Shift token ';' at line 20 in state 92, goto 174
Reduce #2 to statement by token IDENT = "this" at line 21 in state 174, call free_expression, goto 91
Shift token IDENT = "this" at line 21 in state 91, goto 95
Reduce #1 to expression by token "->" at line 21 in state 95, call variable, goto 92
Shift token "->" at line 21 in state 92, goto 179
Reduce #1 to indirection by token IDENT = "m_y" at line 21 in state 179, call count, goto 172
Shift token IDENT = "m_y" at line 21 in state 172, goto 292
Reduce #3 to iexpression by token '=' at line 21 in state 292, call rep_operator "->", goto 93
Reduce #1 to expression by token '=' at line 21 in state 93, goto 92
Shift token '=' at line 21 in state 92, goto 180
Shift token IDENT = "y_" at line 21 in state 180, goto 95
Reduce #1 to expression by token ';' at line 21 in state 95, call variable, goto 300
Reduce #3 to expression by token ';' at line 21 in state 300, call operator "=", goto 92
Shift token ';' at line 21 in state 92, goto 174
Reduce #2 to statement by token '}' at line 22 in state 174, call free_expression, goto 91
Reduce #0 to statementlist by token '}' at line 22 in state 91, goto 171
Reduce #2 to statementlist by token '}' at line 22 in state 171, goto 171
Reduce #2 to statementlist by token '}' at line 22 in state 171, goto 90
Reduce #1 to codeblock by token '}' at line 22 in state 90, call codeblock, goto 409
Shift token '}' at line 22 in state 409, goto 430
Reduce #6 to callablebody by token "public" at line 24 in state 430, call callablebody, goto 346
Reduce #3 to constructordefinition by token "public" at line 24 in state 346, call constructordef, goto 138
Reduce #1 to inclass_definition by token "public" at line 24 in state 138, call definition 2, goto 131
Shift token "public" at line 24 in state 131, goto 28
Reduce #1 to linkage by token "operator" at line 24 in state 28, call linkage {private=false,linkage="external"}, goto 136
Shift token "operator" at line 24 in state 136, goto 240
Shift token '=' at line 24 in state 240, goto 269
Reduce #1 to operatordecl by token '(' at line 24 in state 269, call operatordecl {name="=",symbol="assign"}, goto 345
Shift token '(' at line 24 in state 345, goto 126
Shift token IDENT = "int" at line 24 in state 126, goto 18
Reduce #1 to typename by token IDENT = "x_" at line 24 in state 18, goto 7
Reduce #1 to generic_typename by token IDENT = "x_" at line 24 in state 7, goto 8
Reduce #1 to typespec by token IDENT = "x_" at line 24 in state 8, call typespec "", goto 233
Shift token IDENT = "x_" at line 24 in state 233, goto 342
Reduce #2 to paramdecl by token ',' at line 24 in state 342, call paramdef, goto 236
Shift token ',' at line 24 in state 236, goto 344
Shift token IDENT = "int" at line 24 in state 344, goto 18
Reduce #1 to typename by token IDENT = "y_" at line 24 in state 18, goto 7
Reduce #1 to generic_typename by token IDENT = "y_" at line 24 in state 7, goto 8
Reduce #1 to typespec by token IDENT = "y_" at line 24 in state 8, call typespec "", goto 233
Shift token IDENT = "y_" at line 24 in state 233, goto 342
Reduce #2 to paramdecl by token ')' at line 24 in state 342, call paramdef, goto 236
Reduce #1 to parameters by token ')' at line 24 in state 236, goto 379
Reduce #3 to parameters by token ')' at line 24 in state 379, goto 235
Reduce #1 to parameterlist by token ')' at line 24 in state 235, call paramdeflist, goto 234
Shift token ')' at line 24 in state 234, goto 343
Shift token '{' at line 25 in state 343, goto 378
Shift token IDENT = "this" at line 26 in state 378, goto 95
Reduce #1 to expression by token "->" at line 26 in state 95, call variable, goto 92
Shift token "->" at line 26 in state 92, goto 179
Reduce #1 to indirection by token IDENT = "m_x" at line 26 in state 179, call count, goto 172
Shift token IDENT = "m_x" at line 26 in state 172, goto 292
Reduce #3 to iexpression by token '=' at line 26 in state 292, call rep_operator "->", goto 93
Reduce #1 to expression by token '=' at line 26 in state 93, goto 92
Shift token '=' at line 26 in state 92, goto 180
Shift token IDENT = "x_" at line 26 in state 180, goto 95
Reduce #1 to expression by token ';' at line 26 in state 95, call variable, goto 300
Reduce #3 to expression by token ';' at line 26 in state 300, call operator "=", goto 92
Shift token ';' at line 26 in state 92, goto 174
Reduce #2 to statement by token IDENT = "m_y" at line 27 in state 174, call free_expression, goto 91
Shift token IDENT = "m_y" at line 27 in state 91, goto 95
Reduce #1 to expression by token '=' at line 27 in state 95, call variable, goto 92
Shift token '=' at line 27 in state 92, goto 180
Shift token IDENT = "y_" at line 27 in state 180, goto 95
Reduce #1 to expression by token ';' at line 27 in state 95, call variable, goto 300
Reduce #3 to expression by token ';' at line 27 in state 300, call operator "=", goto 92
Shift token ';' at line 27 in state 92, goto 174
Reduce #2 to statement by token '}' at line 28 in state 174, call free_expression, goto 91
Reduce #0 to statementlist by token '}' at line 28 in state 91, goto 171
Reduce #2 to statementlist by token '}' at line 28 in state 171, goto 171
Reduce #2 to statementlist by token '}' at line 28 in state 171, goto 90
Reduce #1 to codeblock by token '}' at line 28 in state 90, call codeblock, goto 409
Shift token '}' at line 28 in state 409, goto 430
Reduce #6 to callablebody by token "public" at line 30 in state 430, call callablebody, goto 381
Reduce #4 to operatordefinition by token "public" at line 30 in state 381, call operator_procdef {const=false}, goto 139
Reduce #1 to inclass_definition by token "public" at line 30 in state 139, call definition 2, goto 131
Shift token "public" at line 30 in state 131, goto 28
Reduce #1 to linkage by token "function" at line 30 in state 28, call linkage {private=false,linkage="external"}, goto 136
Shift token "function" at line 30 in state 136, goto 39
Shift token IDENT = "x" at line 30 in state 39, goto 66
Shift token IDENT = "int" at line 30 in state 66, goto 18
Reduce #1 to typename by token '(' at line 30 in state 18, goto 7
Reduce #1 to generic_typename by token '(' at line 30 in state 7, goto 8
Reduce #1 to typespec by token '(' at line 30 in state 8, call typespec "", goto 123
Shift token '(' at line 30 in state 123, goto 126
Reduce #0 to parameterlist by token ')' at line 30 in state 126, call paramdeflist, goto 234
Shift token ')' at line 30 in state 234, goto 343
Shift token "const" at line 30 in state 343, goto 377
Shift token '{' at line 31 in state 377, goto 408
Shift token "return" at line 32 in state 408, goto 110
Shift token IDENT = "m_x" at line 32 in state 110, goto 95
Reduce #1 to expression by token ';' at line 32 in state 95, call variable, goto 221
Shift token ';' at line 32 in state 221, goto 334
Reduce #3 to statement by token '}' at line 33 in state 334, call return_value, goto 91
Reduce #0 to statementlist by token '}' at line 33 in state 91, goto 171
Reduce #2 to statementlist by token '}' at line 33 in state 171, goto 90
Reduce #1 to codeblock by token '}' at line 33 in state 90, call codeblock, goto 429
Shift token '}' at line 33 in state 429, goto 446
Reduce #7 to callablebody_const by token "public" at line 35 in state 446, call callablebody, goto 232
Reduce #5 to functiondefinition by token "public" at line 35 in state 232, call funcdef {const=true}, goto 137
Reduce #1 to inclass_definition by token "public" at line 35 in state 137, call definition 2, goto 131
Shift token "public" at line 35 in state 131, goto 28
Reduce #1 to linkage by token "function" at line 35 in state 28, call linkage {private=false,linkage="external"}, goto 136
Shift token "function" at line 35 in state 136, goto 39
Shift token IDENT = "y" at line 35 in state 39, goto 66
Shift token IDENT = "int" at line 35 in state 66, goto 18
Reduce #1 to typename by token '(' at line 35 in state 18, goto 7
Reduce #1 to generic_typename by token '(' at line 35 in state 7, goto 8
Reduce #1 to typespec by token '(' at line 35 in state 8, call typespec "", goto 123
Shift token '(' at line 35 in state 123, goto 126
Reduce #0 to parameterlist by token ')' at line 35 in state 126, call paramdeflist, goto 234
Shift token ')' at line 35 in state 234, goto 343
Shift token "const" at line 35 in state 343, goto 377
Shift token '{' at line 36 in state 377, goto 408
Shift token "return" at line 37 in state 408, goto 110
Shift token IDENT = "this" at line 37 in state 110, goto 95
Reduce #1 to expression by token "->" at line 37 in state 95, call variable, goto 221
Shift token "->" at line 37 in state 221, goto 179
Reduce #1 to indirection by token IDENT = "m_y" at line 37 in state 179, call count, goto 172
Shift token IDENT = "m_y" at line 37 in state 172, goto 292
Reduce #3 to iexpression by token ';' at line 37 in state 292, call rep_operator "->", goto 93
Reduce #1 to expression by token ';' at line 37 in state 93, goto 221
Shift token ';' at line 37 in state 221, goto 334
Reduce #3 to statement by token '}' at line 38 in state 334, call return_value, goto 91
Reduce #0 to statementlist by token '}' at line 38 in state 91, goto 171
Reduce #2 to statementlist by token '}' at line 38 in state 171, goto 90
Reduce #1 to codeblock by token '}' at line 38 in state 90, call codeblock, goto 429
Shift token '}' at line 38 in state 429, goto 446
Reduce #7 to callablebody_const by token "function" at line 40 in state 446, call callablebody, goto 232
Reduce #5 to functiondefinition by token "function" at line 40 in state 232, call funcdef {const=true}, goto 137
Reduce #1 to inclass_definition by token "function" at line 40 in state 137, call definition 2, goto 131
Reduce #0 to linkage by token "function" at line 40 in state 131, call linkage {private=false,linkage="external"}, goto 136
Shift token "function" at line 40 in state 136, goto 39
Shift token IDENT = "ofs_x" at line 40 in state 39, goto 66
Shift token IDENT = "int" at line 40 in state 66, goto 18
Reduce #1 to typename by token '(' at line 40 in state 18, goto 7
Reduce #1 to generic_typename by token '(' at line 40 in state 7, goto 8
Reduce #1 to typespec by token '(' at line 40 in state 8, call typespec "", goto 123
Shift token '(' at line 40 in state 123, goto 126
Shift token IDENT = "int" at line 40 in state 126, goto 18
Reduce #1 to typename by token IDENT = "addx" at line 40 in state 18, goto 7
Reduce #1 to generic_typename by token IDENT = "addx" at line 40 in state 7, goto 8
Reduce #1 to typespec by token IDENT = "addx" at line 40 in state 8, call typespec "", goto 233
Shift token IDENT = "addx" at line 40 in state 233, goto 342
Reduce #2 to paramdecl by token ')' at line 40 in state 342, call paramdef, goto 236
Reduce #1 to parameters by token ')' at line 40 in state 236, goto 235
Reduce #1 to parameterlist by token ')' at line 40 in state 235, call paramdeflist, goto 234
Shift token ')' at line 40 in state 234, goto 343
Shift token "const" at line 40 in state 343, goto 377
Shift token '{' at line 41 in state 377, goto 408
Shift token "return" at line 42 in state 408, goto 110
Shift token IDENT = "m_x" at line 42 in state 110, goto 95
Reduce #1 to expression by token '+' at line 42 in state 95, call variable, goto 221
Shift token '+' at line 42 in state 221, goto 181
Shift token IDENT = "addx" at line 42 in state 181, goto 95
Reduce #1 to expression by token ';' at line 42 in state 95, call variable, goto 301
Reduce #3 to expression by token ';' at line 42 in state 301, call operator "+", goto 221
Shift token ';' at line 42 in state 221, goto 334
Reduce #3 to statement by token '}' at line 43 in state 334, call return_value, goto 91
Reduce #0 to statementlist by token '}' at line 43 in state 91, goto 171
Reduce #2 to statementlist by token '}' at line 43 in state 171, goto 90
Reduce #1 to codeblock by token '}' at line 43 in state 90, call codeblock, goto 429
Shift token '}' at line 43 in state 429, goto 446
Reduce #7 to callablebody_const by token "function" at line 45 in state 446, call callablebody, goto 232
Reduce #5 to functiondefinition by token "function" at line 45 in state 232, call funcdef {const=true}, goto 137
Reduce #1 to inclass_definition by token "function" at line 45 in state 137, call definition 2, goto 131
Reduce #0 to linkage by token "function" at line 45 in state 131, call linkage {private=false,linkage="external"}, goto 136
Shift token "function" at line 45 in state 136, goto 39
Shift token IDENT = "ofs_y" at line 45 in state 39, goto 66
Shift token IDENT = "int" at line 45 in state 66, goto 18
Reduce #1 to typename by token '(' at line 45 in state 18, goto 7
Reduce #1 to generic_typename by token '(' at line 45 in state 7, goto 8
Reduce #1 to typespec by token '(' at line 45 in state 8, call typespec "", goto 123
Shift token '(' at line 45 in state 123, goto 126
Shift token IDENT = "int" at line 45 in state 126, goto 18
Reduce #1 to typename by token IDENT = "addy" at line 45 in state 18, goto 7
Reduce #1 to generic_typename by token IDENT = "addy" at line 45 in state 7, goto 8
Reduce #1 to typespec by token IDENT = "addy" at line 45 in state 8, call typespec "", goto 233
Shift token IDENT = "addy" at line 45 in state 233, goto 342
Reduce #2 to paramdecl by token ')' at line 45 in state 342, call paramdef, goto 236
Reduce #1 to parameters by token ')' at line 45 in state 236, goto 235
Reduce #1 to parameterlist by token ')' at line 45 in state 235, call paramdeflist, goto 234
Shift token ')' at line 45 in state 234, goto 343
Shift token "const" at line 45 in state 343, goto 377
Shift token '{' at line 46 in state 377, goto 408
Shift token "return" at line 47 in state 408, goto 110
Shift token IDENT = "m_y" at line 47 in state 110, goto 95
Reduce #1 to expression by token '+' at line 47 in state 95, call variable, goto 221
Shift token '+' at line 47 in state 221, goto 181
Shift token IDENT = "addy" at line 47 in state 181, goto 95
Reduce #1 to expression by token ';' at line 47 in state 95, call variable, goto 301
Reduce #3 to expression by token ';' at line 47 in state 301, call operator "+", goto 221
Shift token ';' at line 47 in state 221, goto 334
Reduce #3 to statement by token '}' at line 48 in state 334, call return_value, goto 91
Reduce #0 to statementlist by token '}' at line 48 in state 91, goto 171
Reduce #2 to statementlist by token '}' at line 48 in state 171, goto 90
Reduce #1 to codeblock by token '}' at line 48 in state 90, call codeblock, goto 429
Shift token '}' at line 48 in state 429, goto 446
Reduce #7 to callablebody_const by token "public" at line 50 in state 446, call callablebody, goto 232
Reduce #5 to functiondefinition by token "public" at line 50 in state 232, call funcdef {const=true}, goto 137
Reduce #1 to inclass_definition by token "public" at line 50 in state 137, call definition 2, goto 131
Shift token "public" at line 50 in state 131, goto 28
Reduce #1 to linkage by token "function" at line 50 in state 28, call linkage {private=false,linkage="external"}, goto 136
Shift token "function" at line 50 in state 136, goto 39
Shift token IDENT = "object" at line 50 in state 39, goto 66
Shift token IDENT = "Object" at line 50 in state 66, goto 18
Reduce #1 to typename by token '(' at line 50 in state 18, goto 7
Reduce #1 to generic_typename by token '(' at line 50 in state 7, goto 8
Reduce #1 to typespec by token '(' at line 50 in state 8, call typespec "", goto 123
Shift token '(' at line 50 in state 123, goto 126
Reduce #0 to parameterlist by token ')' at line 50 in state 126, call paramdeflist, goto 234
Shift token ')' at line 50 in state 234, goto 343
Shift token "const" at line 50 in state 343, goto 377
Shift token '{' at line 51 in state 377, goto 408
Shift token "return" at line 52 in state 408, goto 110
Shift token IDENT = "this" at line 52 in state 110, goto 95
Reduce #1 to expression by token "->" at line 52 in state 95, call variable, goto 221
Shift token "->" at line 52 in state 221, goto 179
Reduce #1 to indirection by token IDENT = "Object" at line 52 in state 179, call count, goto 172
Shift token IDENT = "Object" at line 52 in state 172, goto 292
Reduce #3 to iexpression by token ';' at line 52 in state 292, call rep_operator "->", goto 93
Reduce #1 to expression by token ';' at line 52 in state 93, goto 221
Shift token ';' at line 52 in state 221, goto 334
Reduce #3 to statement by token '}' at line 53 in state 334, call return_value, goto 91
Reduce #0 to statementlist by token '}' at line 53 in state 91, goto 171
Reduce #2 to statementlist by token '}' at line 53 in state 171, goto 90
Reduce #1 to codeblock by token '}' at line 53 in state 90, call codeblock, goto 429
Shift token '}' at line 53 in state 429, goto 446
Reduce #7 to callablebody_const by token "public" at line 54 in state 446, call callablebody, goto 232
Reduce #5 to functiondefinition by token "public" at line 54 in state 232, call funcdef {const=true}, goto 137
Reduce #1 to inclass_definition by token "public" at line 54 in state 137, call definition 2, goto 131
Shift token "public" at line 54 in state 131, goto 28
Reduce #1 to linkage by token "function" at line 54 in state 28, call linkage {private=false,linkage="external"}, goto 136
Shift token "function" at line 54 in state 136, goto 39
Shift token IDENT = "updater" at line 54 in state 39, goto 66
Shift token IDENT = "ObjectUpdater" at line 54 in state 66, goto 18
Reduce #1 to typename by token '(' at line 54 in state 18, goto 7
Reduce #1 to generic_typename by token '(' at line 54 in state 7, goto 8
Reduce #1 to typespec by token '(' at line 54 in state 8, call typespec "", goto 123
Shift token '(' at line 54 in state 123, goto 126
Reduce #0 to parameterlist by token ')' at line 54 in state 126, call paramdeflist, goto 234
Shift token ')' at line 54 in state 234, goto 343
Shift token '{' at line 55 in state 343, goto 378
Shift token "return" at line 56 in state 378, goto 110
Shift token IDENT = "this" at line 56 in state 110, goto 95
Reduce #1 to expression by token "->" at line 56 in state 95, call variable, goto 221
Shift token "->" at line 56 in state 221, goto 179
Reduce #1 to indirection by token IDENT = "ObjectUpdater" at line 56 in state 179, call count, goto 172
Shift token IDENT = "ObjectUpdater" at line 56 in state 172, goto 292
Reduce #3 to iexpression by token ';' at line 56 in state 292, call rep_operator "->", goto 93
Reduce #1 to expression by token ';' at line 56 in state 93, goto 221
Shift token ';' at line 56 in state 221, goto 334
Reduce #3 to statement by token '}' at line 57 in state 334, call return_value, goto 91
Reduce #0 to statementlist by token '}' at line 57 in state 91, goto 171
Reduce #2 to statementlist by token '}' at line 57 in state 171, goto 90
Reduce #1 to codeblock by token '}' at line 57 in state 90, call codeblock, goto 409
Shift token '}' at line 57 in state 409, goto 430
Reduce #6 to callablebody by token IDENT = "int" at line 59 in state 430, call callablebody, goto 231
Reduce #5 to functiondefinition by token IDENT = "int" at line 59 in state 231, call funcdef {const=false}, goto 137
Reduce #1 to inclass_definition by token IDENT = "int" at line 59 in state 137, call definition 2, goto 131
Shift token IDENT = "int" at line 59 in state 131, goto 18
Reduce #1 to typename by token IDENT = "m_x" at line 59 in state 18, goto 7
Reduce #1 to generic_typename by token IDENT = "m_x" at line 59 in state 7, goto 8
Reduce #1 to typespec by token IDENT = "m_x" at line 59 in state 8, call typespec "", goto 9
Shift token IDENT = "m_x" at line 59 in state 9, goto 37
Reduce #2 to variabledefinition by token ';' at line 59 in state 37, call vardef, goto 140
Shift token ';' at line 59 in state 140, goto 242
Reduce #2 to inclass_definition by token IDENT = "int" at line 60 in state 242, call definition 1, goto 131
Shift token IDENT = "int" at line 60 in state 131, goto 18
Reduce #1 to typename by token IDENT = "m_y" at line 60 in state 18, goto 7
Reduce #1 to generic_typename by token IDENT = "m_y" at line 60 in state 7, goto 8
Reduce #1 to typespec by token IDENT = "m_y" at line 60 in state 8, call typespec "", goto 9
Shift token IDENT = "m_y" at line 60 in state 9, goto 37
Reduce #2 to variabledefinition by token ';' at line 60 in state 37, call vardef, goto 140
Shift token ';' at line 60 in state 140, goto 242
Reduce #2 to inclass_definition by token '}' at line 61 in state 242, call definition 1, goto 131
Reduce #0 to inclass_definitionlist by token '}' at line 61 in state 131, goto 238
Reduce #2 to inclass_definitionlist by token '}' at line 61 in state 238, goto 238
Reduce #2 to inclass_definitionlist by token '}' at line 61 in state 238, goto 238
Reduce #2 to inclass_definitionlist by token '}' at line 61 in state 238, goto 238
Reduce #2 to inclass_definitionlist by token '}' at line 61 in state 238, goto 238
Reduce #2 to inclass_definitionlist by token '}' at line 61 in state 238, goto 238
Reduce #2 to inclass_definitionlist by token '}' at line 61 in state 238, goto 238
Reduce #2 to inclass_definitionlist by token '}' at line 61 in state 238, goto 238
Reduce #2 to inclass_definitionlist by token '}' at line 61 in state 238, goto 238
Reduce #2 to inclass_definitionlist by token '}' at line 61 in state 238, goto 238
Reduce #2 to inclass_definitionlist by token '}' at line 61 in state 238, goto 350
Shift token '}' at line 61 in state 350, goto 385
Reduce #7 to classdefinition by token "class" at line 63 in state 385, call classdef, goto 14
Reduce #1 to free_definition by token "class" at line 63 in state 14, call definition 1, goto 6
Shift token "class" at line 63 in state 6, goto 21
Shift token IDENT = "Line" at line 63 in state 21, goto 47
Shift token ':' at line 63 in state 47, goto 76
Shift token IDENT = "Point" at line 63 in state 76, goto 18
Reduce #1 to typename by token '{' at line 64 in state 18, goto 7
Reduce #1 to generic_typename by token '{' at line 64 in state 7, goto 49
Reduce #1 to typepath by token '{' at line 64 in state 49, call typespec "", goto 142
Reduce #1 to inheritlist by token '{' at line 64 in state 142, call inheritdef 1, goto 143
Shift token '{' at line 64 in state 143, goto 245
Shift token "public" at line 65 in state 245, goto 28
Reduce #1 to linkage by token "constructor" at line 65 in state 28, call linkage {private=false,linkage="external"}, goto 136
Shift token "constructor" at line 65 in state 136, goto 241
Shift token '(' at line 65 in state 241, goto 347
Shift token IDENT = "int" at line 65 in state 347, goto 18
Reduce #1 to typename by token IDENT = "x_" at line 65 in state 18, goto 7
Reduce #1 to generic_typename by token IDENT = "x_" at line 65 in state 7, goto 8
Reduce #1 to typespec by token IDENT = "x_" at line 65 in state 8, call typespec "", goto 233
Shift token IDENT = "x_" at line 65 in state 233, goto 342
Reduce #2 to paramdecl by token ',' at line 65 in state 342, call paramdef, goto 236
Shift token ',' at line 65 in state 236, goto 344
Shift token IDENT = "int" at line 65 in state 344, goto 18
Reduce #1 to typename by token IDENT = "y_" at line 65 in state 18, goto 7
Reduce #1 to generic_typename by token IDENT = "y_" at line 65 in state 7, goto 8
Reduce #1 to typespec by token IDENT = "y_" at line 65 in state 8, call typespec "", goto 233
Shift token IDENT = "y_" at line 65 in state 233, goto 342
Reduce #2 to paramdecl by token ')' at line 65 in state 342, call paramdef, goto 236
Reduce #1 to parameters by token ')' at line 65 in state 236, goto 379
Reduce #3 to parameters by token ')' at line 65 in state 379, goto 235
Reduce #1 to parameterlist by token ')' at line 65 in state 235, call paramdeflist, goto 383
Shift token ')' at line 65 in state 383, goto 412
Shift token '{' at line 66 in state 412, goto 378
Shift token IDENT = "this" at line 67 in state 378, goto 95
Reduce #1 to expression by token "->" at line 67 in state 95, call variable, goto 92
Shift token "->" at line 67 in state 92, goto 179
Reduce #1 to indirection by token IDENT = "Point" at line 67 in state 179, call count, goto 172
Shift token IDENT = "Point" at line 67 in state 172, goto 292
Reduce #3 to iexpression by token '=' at line 67 in state 292, call rep_operator "->", goto 93
Reduce #1 to expression by token '=' at line 67 in state 93, goto 92
Shift token '=' at line 67 in state 92, goto 180
Shift token '{' at line 67 in state 180, goto 121
Shift token IDENT = "x_" at line 67 in state 121, goto 95
Reduce #1 to expression by token ',' at line 67 in state 95, call variable, goto 229
Shift token ',' at line 67 in state 229, goto 331
Shift token IDENT = "y_" at line 67 in state 331, goto 95
Reduce #1 to expression by token '}' at line 67 in state 95, call variable, goto 229
Reduce #1 to expressionlist by token '}' at line 67 in state 229, goto 370
Reduce #3 to expressionlist by token '}' at line 67 in state 370, goto 213
Shift token '}' at line 67 in state 213, goto 332
Reduce #3 to expression by token ';' at line 67 in state 332, call structure, goto 300
Reduce #3 to expression by token ';' at line 67 in state 300, call operator "=", goto 92
Shift token ';' at line 67 in state 92, goto 174
Reduce #2 to statement by token '}' at line 68 in state 174, call free_expression, goto 91
Reduce #0 to statementlist by token '}' at line 68 in state 91, goto 171
Reduce #2 to statementlist by token '}' at line 68 in state 171, goto 90
Reduce #1 to codeblock by token '}' at line 68 in state 90, call codeblock, goto 409
Shift token '}' at line 68 in state 409, goto 430
Reduce #6 to callablebody by token "public" at line 70 in state 430, call callablebody, goto 346
Reduce #3 to constructordefinition by token "public" at line 70 in state 346, call constructordef, goto 138
Reduce #1 to inclass_definition by token "public" at line 70 in state 138, call definition 2, goto 131
Shift token "public" at line 70 in state 131, goto 28
Reduce #1 to linkage by token "procedure" at line 70 in state 28, call linkage {private=false,linkage="external"}, goto 136
Shift token "procedure" at line 70 in state 136, goto 40
Shift token IDENT = "move" at line 70 in state 40, goto 67
Shift token '(' at line 70 in state 67, goto 126
Shift token IDENT = "int" at line 70 in state 126, goto 18
Reduce #1 to typename by token IDENT = "x_" at line 70 in state 18, goto 7
Reduce #1 to generic_typename by token IDENT = "x_" at line 70 in state 7, goto 8
Reduce #1 to typespec by token IDENT = "x_" at line 70 in state 8, call typespec "", goto 233
Shift token IDENT = "x_" at line 70 in state 233, goto 342
Reduce #2 to paramdecl by token ',' at line 70 in state 342, call paramdef, goto 236
Shift token ',' at line 70 in state 236, goto 344
Shift token IDENT = "int" at line 70 in state 344, goto 18
Reduce #1 to typename by token IDENT = "y_" at line 70 in state 18, goto 7
Reduce #1 to generic_typename by token IDENT = "y_" at line 70 in state 7, goto 8
Reduce #1 to typespec by token IDENT = "y_" at line 70 in state 8, call typespec "", goto 233
Shift token IDENT = "y_" at line 70 in state 233, goto 342
Reduce #2 to paramdecl by token ')' at line 70 in state 342, call paramdef, goto 236
Reduce #1 to parameters by token ')' at line 70 in state 236, goto 379
Reduce #3 to parameters by token ')' at line 70 in state 379, goto 235
Reduce #1 to parameterlist by token ')' at line 70 in state 235, call paramdeflist, goto 234
Shift token ')' at line 70 in state 234, goto 343
Shift token '{' at line 71 in state 343, goto 378
Shift token IDENT = "this" at line 72 in state 378, goto 95
Reduce #1 to expression by token "->" at line 72 in state 95, call variable, goto 92
Shift token "->" at line 72 in state 92, goto 179
Reduce #1 to indirection by token IDENT = "Point" at line 72 in state 179, call count, goto 172
Shift token IDENT = "Point" at line 72 in state 172, goto 292
Reduce #3 to iexpression by token '=' at line 72 in state 292, call rep_operator "->", goto 93
Reduce #1 to expression by token '=' at line 72 in state 93, goto 92
Shift token '=' at line 72 in state 92, goto 180
Shift token '{' at line 72 in state 180, goto 121
Shift token IDENT = "x_" at line 72 in state 121, goto 95
Reduce #1 to expression by token ',' at line 72 in state 95, call variable, goto 229
Shift token ',' at line 72 in state 229, goto 331
Shift token IDENT = "y_" at line 72 in state 331, goto 95
Reduce #1 to expression by token '}' at line 72 in state 95, call variable, goto 229
Reduce #1 to expressionlist by token '}' at line 72 in state 229, goto 370
Reduce #3 to expressionlist by token '}' at line 72 in state 370, goto 213
Shift token '}' at line 72 in state 213, goto 332
Reduce #3 to expression by token ';' at line 72 in state 332, call structure, goto 300
Reduce #3 to expression by token ';' at line 72 in state 300, call operator "=", goto 92
Shift token ';' at line 72 in state 92, goto 174
Reduce #2 to statement by token '}' at line 73 in state 174, call free_expression, goto 91
Reduce #0 to statementlist by token '}' at line 73 in state 91, goto 171
Reduce #2 to statementlist by token '}' at line 73 in state 171, goto 90
Reduce #1 to codeblock by token '}' at line 73 in state 90, call codeblock, goto 409
Shift token '}' at line 73 in state 409, goto 430
Reduce #6 to callablebody by token '}' at line 74 in state 430, call callablebody, goto 124
Reduce #4 to functiondefinition by token '}' at line 74 in state 124, call procdef {const=false}, goto 137
Reduce #1 to inclass_definition by token '}' at line 74 in state 137, call definition 2, goto 131
Reduce #0 to inclass_definitionlist by token '}' at line 74 in state 131, goto 238
Reduce #2 to inclass_definitionlist by token '}' at line 74 in state 238, goto 238
Reduce #2 to inclass_definitionlist by token '}' at line 74 in state 238, goto 350
Shift token '}' at line 74 in state 350, goto 385
Reduce #7 to classdefinition by token "main" at line 76 in state 385, call classdef, goto 14
Reduce #1 to free_definition by token "main" at line 76 in state 14, call definition 1, goto 6
Reduce #0 to free_definitionlist by token "main" at line 76 in state 6, goto 33
Reduce #2 to free_definitionlist by token "main" at line 76 in state 33, goto 33
Reduce #2 to free_definitionlist by token "main" at line 76 in state 33, goto 33
Reduce #2 to free_definitionlist by token "main" at line 76 in state 33, goto 33
Reduce #2 to free_definitionlist by token "main" at line 76 in state 33, goto 5
Shift token "main" at line 76 in state 5, goto 32
Shift token '{' at line 76 in state 32, goto 59
Shift token "var" at line 77 in state 59, goto 109
Shift token IDENT = "float" at line 77 in state 109, goto 18
Reduce #1 to typename by token IDENT = "x" at line 77 in state 18, goto 7
Reduce #1 to generic_typename by token IDENT = "x" at line 77 in state 7, goto 8
Reduce #1 to typespec by token IDENT = "x" at line 77 in state 8, call typespec "", goto 9
Shift token IDENT = "x" at line 77 in state 9, goto 37
Shift token '=' at line 77 in state 37, goto 64
Shift token FLOAT = "1.23" at line 77 in state 64, goto 100
Reduce #1 to expression by token ';' at line 77 in state 100, call constant "constexpr float", goto 120
Reduce #4 to variabledefinition by token ';' at line 77 in state 120, call vardef_assign, goto 220
Shift token ';' at line 77 in state 220, goto 333
Reduce #3 to statement by token "var" at line 78 in state 333, call definition, goto 91
Shift token "var" at line 78 in state 91, goto 109
Shift token IDENT = "Line" at line 78 in state 109, goto 18
Reduce #1 to typename by token IDENT = "ab" at line 78 in state 18, goto 7
Reduce #1 to generic_typename by token IDENT = "ab" at line 78 in state 7, goto 8
Reduce #1 to typespec by token IDENT = "ab" at line 78 in state 8, call typespec "", goto 9
Shift token IDENT = "ab" at line 78 in state 9, goto 37
Shift token '=' at line 78 in state 37, goto 64
Shift token '{' at line 78 in state 64, goto 121
Shift token FLOAT = "1.23" at line 78 in state 121, goto 100
Reduce #1 to expression by token ',' at line 78 in state 100, call constant "constexpr float", goto 229
Shift token ',' at line 78 in state 229, goto 331
Shift token FLOAT = "4.23" at line 78 in state 331, goto 100
Reduce #1 to expression by token '}' at line 78 in state 100, call constant "constexpr float", goto 229
Reduce #1 to expressionlist by token '}' at line 78 in state 229, goto 370
Reduce #3 to expressionlist by token '}' at line 78 in state 370, goto 213
Shift token '}' at line 78 in state 213, goto 332
Reduce #3 to expression by token ';' at line 78 in state 332, call structure, goto 120
Reduce #4 to variabledefinition by token ';' at line 78 in state 120, call vardef_assign, goto 220
Shift token ';' at line 78 in state 220, goto 333
Reduce #3 to statement by token "var" at line 79 in state 333, call definition, goto 91
Shift token "var" at line 79 in state 91, goto 109
Shift token IDENT = "Object" at line 79 in state 109, goto 18
Reduce #1 to typename by token IDENT = "obj" at line 79 in state 18, goto 7
Reduce #1 to generic_typename by token IDENT = "obj" at line 79 in state 7, goto 8
Reduce #1 to typespec by token IDENT = "obj" at line 79 in state 8, call typespec "", goto 9
Shift token IDENT = "obj" at line 79 in state 9, goto 37
Shift token '=' at line 79 in state 37, goto 64
Shift token IDENT = "ab" at line 79 in state 64, goto 95
Reduce #1 to expression by token '.' at line 79 in state 95, call variable, goto 120
Shift token '.' at line 79 in state 120, goto 208
Shift token IDENT = "object" at line 79 in state 208, goto 328
Reduce #3 to expression by token '(' at line 79 in state 328, call member, goto 120
Shift token '(' at line 79 in state 120, goto 173
Shift token ')' at line 79 in state 173, goto 294
Reduce #3 to expression by token ';' at line 79 in state 294, call operator "()", goto 120
Reduce #4 to variabledefinition by token ';' at line 79 in state 120, call vardef_assign, goto 220
Shift token ';' at line 79 in state 220, goto 333
Reduce #3 to statement by token IDENT = "printf" at line 80 in state 333, call definition, goto 91
Shift token IDENT = "printf" at line 80 in state 91, goto 95
Reduce #1 to expression by token '(' at line 80 in state 95, call variable, goto 92
Shift token '(' at line 80 in state 92, goto 173
Shift token DQSTRING = "RESULT[1] x = %d\n" at line 80 in state 173, goto 96
Reduce #1 to expression by token ',' at line 80 in state 96, call string_constant "constexpr float", goto 229
Shift token ',' at line 80 in state 229, goto 331
Shift token IDENT = "obj" at line 80 in state 331, goto 95
Reduce #1 to expression by token '.' at line 80 in state 95, call variable, goto 229
Shift token '.' at line 80 in state 229, goto 208
Shift token IDENT = "x" at line 80 in state 208, goto 328
Reduce #3 to expression by token '(' at line 80 in state 328, call member, goto 229
Shift token '(' at line 80 in state 229, goto 173
Shift token ')' at line 80 in state 173, goto 294
Reduce #3 to expression by token ')' at line 80 in state 294, call operator "()", goto 229
Reduce #1 to expressionlist by token ')' at line 80 in state 229, goto 370
Reduce #3 to expressionlist by token ')' at line 80 in state 370, goto 293
Shift token ')' at line 80 in state 293, goto 368
Reduce #4 to expression by token ';' at line 80 in state 368, call operator "()", goto 92
Shift token ';' at line 80 in state 92, goto 174
Reduce #2 to statement by token IDENT = "printf" at line 81 in state 174, call free_expression, goto 91
Shift token IDENT = "printf" at line 81 in state 91, goto 95
Reduce #1 to expression by token '(' at line 81 in state 95, call variable, goto 92
Shift token '(' at line 81 in state 92, goto 173
Shift token DQSTRING = "RESULT[1] y = %d\n" at line 81 in state 173, goto 96
Reduce #1 to expression by token ',' at line 81 in state 96, call string_constant "constexpr float", goto 229
Shift token ',' at line 81 in state 229, goto 331
Shift token IDENT = "obj" at line 81 in state 331, goto 95
Reduce #1 to expression by token '.' at line 81 in state 95, call variable, goto 229
Shift token '.' at line 81 in state 229, goto 208
Shift token IDENT = "y" at line 81 in state 208, goto 328
Reduce #3 to expression by token '(' at line 81 in state 328, call member, goto 229
Shift token '(' at line 81 in state 229, goto 173
Shift token ')' at line 81 in state 173, goto 294
Reduce #3 to expression by token ')' at line 81 in state 294, call operator "()", goto 229
Reduce #1 to expressionlist by token ')' at line 81 in state 229, goto 370
Reduce #3 to expressionlist by token ')' at line 81 in state 370, goto 293
Shift token ')' at line 81 in state 293, goto 368
Reduce #4 to expression by token ';' at line 81 in state 368, call operator "()", goto 92
Shift token ';' at line 81 in state 92, goto 174
Reduce #2 to statement by token "var" at line 82 in state 174, call free_expression, goto 91
Shift token "var" at line 82 in state 91, goto 109
Shift token IDENT = "ObjectUpdater" at line 82 in state 109, goto 18
Reduce #1 to typename by token IDENT = "updater" at line 82 in state 18, goto 7
Reduce #1 to generic_typename by token IDENT = "updater" at line 82 in state 7, goto 8
Reduce #1 to typespec by token IDENT = "updater" at line 82 in state 8, call typespec "", goto 9
Shift token IDENT = "updater" at line 82 in state 9, goto 37
Shift token '=' at line 82 in state 37, goto 64
Shift token IDENT = "ab" at line 82 in state 64, goto 95
Reduce #1 to expression by token '.' at line 82 in state 95, call variable, goto 120
Shift token '.' at line 82 in state 120, goto 208
Shift token IDENT = "updater" at line 82 in state 208, goto 328
Reduce #3 to expression by token '(' at line 82 in state 328, call member, goto 120
Shift token '(' at line 82 in state 120, goto 173
Shift token ')' at line 82 in state 173, goto 294
Reduce #3 to expression by token ';' at line 82 in state 294, call operator "()", goto 120
Reduce #4 to variabledefinition by token ';' at line 82 in state 120, call vardef_assign, goto 220
Shift token ';' at line 82 in state 220, goto 333
Reduce #3 to statement by token IDENT = "updater" at line 83 in state 333, call definition, goto 91
Shift token IDENT = "updater" at line 83 in state 91, goto 95
Reduce #1 to expression by token '=' at line 83 in state 95, call variable, goto 92
Shift token '=' at line 83 in state 92, goto 180
Shift token '{' at line 83 in state 180, goto 121
Shift token CARDINAL = "31" at line 83 in state 121, goto 98
Reduce #1 to expression by token ',' at line 83 in state 98, call constant "constexpr uint", goto 229
Shift token ',' at line 83 in state 229, goto 331
Shift token CARDINAL = "411" at line 83 in state 331, goto 98
Reduce #1 to expression by token '}' at line 83 in state 98, call constant "constexpr uint", goto 229
Reduce #1 to expressionlist by token '}' at line 83 in state 229, goto 370
Reduce #3 to expressionlist by token '}' at line 83 in state 370, goto 213
Shift token '}' at line 83 in state 213, goto 332
Reduce #3 to expression by token ';' at line 83 in state 332, call structure, goto 300
Reduce #3 to expression by token ';' at line 83 in state 300, call operator "=", goto 92
Shift token ';' at line 83 in state 92, goto 174
Reduce #2 to statement by token IDENT = "printf" at line 84 in state 174, call free_expression, goto 91
Shift token IDENT = "printf" at line 84 in state 91, goto 95
Reduce #1 to expression by token '(' at line 84 in state 95, call variable, goto 92
Shift token '(' at line 84 in state 92, goto 173
Shift token DQSTRING = "RESULT[2] x = %d\n" at line 84 in state 173, goto 96
Reduce #1 to expression by token ',' at line 84 in state 96, call string_constant "constexpr float", goto 229
Shift token ',' at line 84 in state 229, goto 331
Shift token IDENT = "obj" at line 84 in state 331, goto 95
Reduce #1 to expression by token '.' at line 84 in state 95, call variable, goto 229
Shift token '.' at line 84 in state 229, goto 208
Shift token IDENT = "x" at line 84 in state 208, goto 328
Reduce #3 to expression by token '(' at line 84 in state 328, call member, goto 229
Shift token '(' at line 84 in state 229, goto 173
Shift token ')' at line 84 in state 173, goto 294
Reduce #3 to expression by token ')' at line 84 in state 294, call operator "()", goto 229
Reduce #1 to expressionlist by token ')' at line 84 in state 229, goto 370
Reduce #3 to expressionlist by token ')' at line 84 in state 370, goto 293
Shift token ')' at line 84 in state 293, goto 368
Reduce #4 to expression by token ';' at line 84 in state 368, call operator "()", goto 92
Shift token ';' at line 84 in state 92, goto 174
Reduce #2 to statement by token IDENT = "printf" at line 85 in state 174, call free_expression, goto 91
Shift token IDENT = "printf" at line 85 in state 91, goto 95
Reduce #1 to expression by token '(' at line 85 in state 95, call variable, goto 92
Shift token '(' at line 85 in state 92, goto 173
Shift token DQSTRING = "RESULT[2] y = %d\n" at line 85 in state 173, goto 96
Reduce #1 to expression by token ',' at line 85 in state 96, call string_constant "constexpr float", goto 229
Shift token ',' at line 85 in state 229, goto 331
Shift token IDENT = "obj" at line 85 in state 331, goto 95
Reduce #1 to expression by token '.' at line 85 in state 95, call variable, goto 229
Shift token '.' at line 85 in state 229, goto 208
Shift token IDENT = "y" at line 85 in state 208, goto 328
Reduce #3 to expression by token '(' at line 85 in state 328, call member, goto 229
Shift token '(' at line 85 in state 229, goto 173
Shift token ')' at line 85 in state 173, goto 294
Reduce #3 to expression by token ')' at line 85 in state 294, call operator "()", goto 229
Reduce #1 to expressionlist by token ')' at line 85 in state 229, goto 370
Reduce #3 to expressionlist by token ')' at line 85 in state 370, goto 293
Shift token ')' at line 85 in state 293, goto 368
Reduce #4 to expression by token ';' at line 85 in state 368, call operator "()", goto 92
Shift token ';' at line 85 in state 92, goto 174
Reduce #2 to statement by token IDENT = "updater" at line 86 in state 174, call free_expression, goto 91
Shift token IDENT = "updater" at line 86 in state 91, goto 95
Reduce #1 to expression by token '=' at line 86 in state 95, call variable, goto 92
Shift token '=' at line 86 in state 92, goto 180
Shift token '{' at line 86 in state 180, goto 121
Shift token CARDINAL = "71" at line 86 in state 121, goto 98
Reduce #1 to expression by token ',' at line 86 in state 98, call constant "constexpr uint", goto 229
Shift token ',' at line 86 in state 229, goto 331
Shift token CARDINAL = "511" at line 86 in state 331, goto 98
Reduce #1 to expression by token '}' at line 86 in state 98, call constant "constexpr uint", goto 229
Reduce #1 to expressionlist by token '}' at line 86 in state 229, goto 370
Reduce #3 to expressionlist by token '}' at line 86 in state 370, goto 213
Shift token '}' at line 86 in state 213, goto 332
Reduce #3 to expression by token ';' at line 86 in state 332, call structure, goto 300
Reduce #3 to expression by token ';' at line 86 in state 300, call operator "=", goto 92
Shift token ';' at line 86 in state 92, goto 174
Reduce #2 to statement by token IDENT = "printf" at line 87 in state 174, call free_expression, goto 91
Shift token IDENT = "printf" at line 87 in state 91, goto 95
Reduce #1 to expression by token '(' at line 87 in state 95, call variable, goto 92
Shift token '(' at line 87 in state 92, goto 173
Shift token DQSTRING = "RESULT[3] x = %d\n" at line 87 in state 173, goto 96
Reduce #1 to expression by token ',' at line 87 in state 96, call string_constant "constexpr float", goto 229
Shift token ',' at line 87 in state 229, goto 331
Shift token IDENT = "obj" at line 87 in state 331, goto 95
Reduce #1 to expression by token '.' at line 87 in state 95, call variable, goto 229
Shift token '.' at line 87 in state 229, goto 208
Shift token IDENT = "ofs_x" at line 87 in state 208, goto 328
Reduce #3 to expression by token '(' at line 87 in state 328, call member, goto 229
Shift token '(' at line 87 in state 229, goto 173
Shift token INTEGER = "-13" at line 87 in state 173, goto 99
Reduce #1 to expression by token ')' at line 87 in state 99, call constant "constexpr int", goto 229
Reduce #1 to expressionlist by token ')' at line 87 in state 229, goto 293
Shift token ')' at line 87 in state 293, goto 368
Reduce #4 to expression by token ')' at line 87 in state 368, call operator "()", goto 229
Reduce #1 to expressionlist by token ')' at line 87 in state 229, goto 370
Reduce #3 to expressionlist by token ')' at line 87 in state 370, goto 293
Shift token ')' at line 87 in state 293, goto 368
Reduce #4 to expression by token ';' at line 87 in state 368, call operator "()", goto 92
Shift token ';' at line 87 in state 92, goto 174
Reduce #2 to statement by token IDENT = "printf" at line 88 in state 174, call free_expression, goto 91
Shift token IDENT = "printf" at line 88 in state 91, goto 95
Reduce #1 to expression by token '(' at line 88 in state 95, call variable, goto 92
Shift token '(' at line 88 in state 92, goto 173
Shift token DQSTRING = "RESULT[3] y = %d\n" at line 88 in state 173, goto 96
Reduce #1 to expression by token ',' at line 88 in state 96, call string_constant "constexpr float", goto 229
Shift token ',' at line 88 in state 229, goto 331
Shift token IDENT = "obj" at line 88 in state 331, goto 95
Reduce #1 to expression by token '.' at line 88 in state 95, call variable, goto 229
Shift token '.' at line 88 in state 229, goto 208
Shift token IDENT = "ofs_y" at line 88 in state 208, goto 328
Reduce #3 to expression by token '(' at line 88 in state 328, call member, goto 229
Shift token '(' at line 88 in state 229, goto 173
Shift token CARDINAL = "1" at line 88 in state 173, goto 98
Reduce #1 to expression by token ')' at line 88 in state 98, call constant "constexpr uint", goto 229
Reduce #1 to expressionlist by token ')' at line 88 in state 229, goto 293
Shift token ')' at line 88 in state 293, goto 368
Reduce #4 to expression by token ')' at line 88 in state 368, call operator "()", goto 229
Reduce #1 to expressionlist by token ')' at line 88 in state 229, goto 370
Reduce #3 to expressionlist by token ')' at line 88 in state 370, goto 293
Shift token ')' at line 88 in state 293, goto 368
Reduce #4 to expression by token ';' at line 88 in state 368, call operator "()", goto 92
Shift token ';' at line 88 in state 92, goto 174
Reduce #2 to statement by token "var" at line 89 in state 174, call free_expression, goto 91
Shift token "var" at line 89 in state 91, goto 109
Shift token IDENT = "ObjectUpdater" at line 89 in state 109, goto 18
Reduce #1 to typename by token IDENT = "updater2" at line 89 in state 18, goto 7
Reduce #1 to generic_typename by token IDENT = "updater2" at line 89 in state 7, goto 8
Reduce #1 to typespec by token IDENT = "updater2" at line 89 in state 8, call typespec "", goto 9
Shift token IDENT = "updater2" at line 89 in state 9, goto 37
Shift token '=' at line 89 in state 37, goto 64
Shift token IDENT = "updater" at line 89 in state 64, goto 95
Reduce #1 to expression by token ';' at line 89 in state 95, call variable, goto 120
Reduce #4 to variabledefinition by token ';' at line 89 in state 120, call vardef_assign, goto 220
Shift token ';' at line 89 in state 220, goto 333
Reduce #3 to statement by token IDENT = "updater2" at line 90 in state 333, call definition, goto 91
Shift token IDENT = "updater2" at line 90 in state 91, goto 95
Reduce #1 to expression by token '=' at line 90 in state 95, call variable, goto 92
Shift token '=' at line 90 in state 92, goto 180
Shift token '{' at line 90 in state 180, goto 121
Shift token CARDINAL = "32" at line 90 in state 121, goto 98
Reduce #1 to expression by token ',' at line 90 in state 98, call constant "constexpr uint", goto 229
Shift token ',' at line 90 in state 229, goto 331
Shift token CARDINAL = "412" at line 90 in state 331, goto 98
Reduce #1 to expression by token '}' at line 90 in state 98, call constant "constexpr uint", goto 229
Reduce #1 to expressionlist by token '}' at line 90 in state 229, goto 370
Reduce #3 to expressionlist by token '}' at line 90 in state 370, goto 213
Shift token '}' at line 90 in state 213, goto 332
Reduce #3 to expression by token ';' at line 90 in state 332, call structure, goto 300
Reduce #3 to expression by token ';' at line 90 in state 300, call operator "=", goto 92
Shift token ';' at line 90 in state 92, goto 174
Reduce #2 to statement by token IDENT = "printf" at line 91 in state 174, call free_expression, goto 91
Shift token IDENT = "printf" at line 91 in state 91, goto 95
Reduce #1 to expression by token '(' at line 91 in state 95, call variable, goto 92
Shift token '(' at line 91 in state 92, goto 173
Shift token DQSTRING = "RESULT[4] x = %d\n" at line 91 in state 173, goto 96
Reduce #1 to expression by token ',' at line 91 in state 96, call string_constant "constexpr float", goto 229
Shift token ',' at line 91 in state 229, goto 331
Shift token IDENT = "obj" at line 91 in state 331, goto 95
Reduce #1 to expression by token '.' at line 91 in state 95, call variable, goto 229
Shift token '.' at line 91 in state 229, goto 208
Shift token IDENT = "ofs_x" at line 91 in state 208, goto 328
Reduce #3 to expression by token '(' at line 91 in state 328, call member, goto 229
Shift token '(' at line 91 in state 229, goto 173
Shift token INTEGER = "-11" at line 91 in state 173, goto 99
Reduce #1 to expression by token ')' at line 91 in state 99, call constant "constexpr int", goto 229
Reduce #1 to expressionlist by token ')' at line 91 in state 229, goto 293
Shift token ')' at line 91 in state 293, goto 368
Reduce #4 to expression by token ')' at line 91 in state 368, call operator "()", goto 229
Reduce #1 to expressionlist by token ')' at line 91 in state 229, goto 370
Reduce #3 to expressionlist by token ')' at line 91 in state 370, goto 293
Shift token ')' at line 91 in state 293, goto 368
Reduce #4 to expression by token ';' at line 91 in state 368, call operator "()", goto 92
Shift token ';' at line 91 in state 92, goto 174
Reduce #2 to statement by token IDENT = "printf" at line 92 in state 174, call free_expression, goto 91
Shift token IDENT = "printf" at line 92 in state 91, goto 95
Reduce #1 to expression by token '(' at line 92 in state 95, call variable, goto 92
Shift token '(' at line 92 in state 92, goto 173
Shift token DQSTRING = "RESULT[4] y = %d\n" at line 92 in state 173, goto 96
Reduce #1 to expression by token ',' at line 92 in state 96, call string_constant "constexpr float", goto 229
Shift token ',' at line 92 in state 229, goto 331
Shift token IDENT = "obj" at line 92 in state 331, goto 95
Reduce #1 to expression by token '.' at line 92 in state 95, call variable, goto 229
Shift token '.' at line 92 in state 229, goto 208
Shift token IDENT = "y" at line 92 in state 208, goto 328
Reduce #3 to expression by token '(' at line 92 in state 328, call member, goto 229
Shift token '(' at line 92 in state 229, goto 173
Shift token ')' at line 92 in state 173, goto 294
Reduce #3 to expression by token ')' at line 92 in state 294, call operator "()", goto 229
Reduce #1 to expressionlist by token ')' at line 92 in state 229, goto 370
Reduce #3 to expressionlist by token ')' at line 92 in state 370, goto 293
Shift token ')' at line 92 in state 293, goto 368
Reduce #4 to expression by token ';' at line 92 in state 368, call operator "()", goto 92
Shift token ';' at line 92 in state 92, goto 174
Reduce #2 to statement by token "return" at line 93 in state 174, call free_expression, goto 91
Shift token "return" at line 93 in state 91, goto 110
Shift token CARDINAL = "0" at line 93 in state 110, goto 98
Reduce #1 to expression by token ';' at line 93 in state 98, call constant "constexpr uint", goto 221
Shift token ';' at line 93 in state 221, goto 334
Reduce #3 to statement by token '}' at line 94 in state 334, call return_value, goto 91
Reduce #0 to statementlist by token '}' at line 94 in state 91, goto 171
Reduce #2 to statementlist by token '}' at line 94 in state 171, goto 171
Reduce #2 to statementlist by token '}' at line 94 in state 171, goto 171
Reduce #2 to statementlist by token '}' at line 94 in state 171, goto 171
Reduce #2 to statementlist by token '}' at line 94 in state 171, goto 171
Reduce #2 to statementlist by token '}' at line 94 in state 171, goto 171
Reduce #2 to statementlist by token '}' at line 94 in state 171, goto 171
Reduce #2 to statementlist by token '}' at line 94 in state 171, goto 171
Reduce #2 to statementlist by token '}' at line 94 in state 171, goto 171
Reduce #2 to statementlist by token '}' at line 94 in state 171, goto 171
Reduce #2 to statementlist by token '}' at line 94 in state 171, goto 171
Reduce #2 to statementlist by token '}' at line 94 in state 171, goto 171
Reduce #2 to statementlist by token '}' at line 94 in state 171, goto 171
Reduce #2 to statementlist by token '}' at line 94 in state 171, goto 171
Reduce #2 to statementlist by token '}' at line 94 in state 171, goto 171
Reduce #2 to statementlist by token '}' at line 94 in state 171, goto 171
Reduce #2 to statementlist by token '}' at line 94 in state 171, goto 171
Reduce #2 to statementlist by token '}' at line 94 in state 171, goto 90
Reduce #1 to codeblock by token '}' at line 94 in state 90, call codeblock, goto 89
Shift token '}' at line 94 in state 89, goto 170
Accept
Calling Lua function: program
Lua call result [1]
{
  arg = {
    {
      arg = {
        {
          line = 1,
          name = "DQSTRING",
          value = "C"},
        {
          line = 1,
          name = "IDENT",
          value = "printf"},
        {
          arg = {
            {
              arg = {
                {
                  arg = {
                    {
                      line = 1,
                      name = "IDENT",
                      value = "byte"}},
                  call = {
                    name = "typespec const^",
                    obj = "const^",
                    proc = <function>},
                  line = 1,
                  step = 0},
                {
                  line = 1,
                  name = "IDENT",
                  value = "fmt"}},
              call = {
                name = "extern_paramdef",
                proc = <function>},
              line = 1,
              step = 0}},
          call = {
            name = "extern_paramdeflist",
            proc = <function>},
          line = 1,
          step = 0}},
      call = {
        name = "extern_procdef_vararg",
        proc = <function>},
      line = 1,
      step = 0},
    {
      arg = {
        {
          arg = {
            {
              line = 3,
              name = "IDENT",
              value = "Object"},
            {
              arg = {
                {
                  line = 5,
                  name = "IDENT",
                  value = "x"},
                {
                  arg = {
                    {
                      line = 5,
                      name = "IDENT",
                      value = "int"}},
                  call = {
                    name = "typespec ",
                    obj = "",
                    proc = <function>},
                  line = 5,
                  step = 0},
                {
                  arg = {},
                  call = {
                    name = "extern_paramdeflist",
                    proc = <function>},
                  line = 5,
                  step = 0}},
              call = {
                name = "interface_funcdef {const=true}",
                obj = {
                  const = true},
                proc = <function>},
              line = 5,
              step = 0},
            {
              arg = {
                {
                  line = 6,
                  name = "IDENT",
                  value = "y"},
                {
                  arg = {
                    {
                      line = 6,
                      name = "IDENT",
                      value = "int"}},
                  call = {
                    name = "typespec ",
                    obj = "",
                    proc = <function>},
                  line = 6,
                  step = 0},
                {
                  arg = {},
                  call = {
                    name = "extern_paramdeflist",
                    proc = <function>},
                  line = 6,
                  step = 0}},
              call = {
                name = "interface_funcdef {const=true}",
                obj = {
                  const = true},
                proc = <function>},
              line = 6,
              step = 0},
            {
              arg = {
                {
                  line = 7,
                  name = "IDENT",
                  value = "ofs_x"},
                {
                  arg = {
                    {
                      line = 7,
                      name = "IDENT",
                      value = "int"}},
                  call = {
                    name = "typespec ",
                    obj = "",
                    proc = <function>},
                  line = 7,
                  step = 0},
                {
                  arg = {
                    {
                      arg = {
                        {
                          arg = {
                            {
                              line = 7,
                              name = "IDENT",
                              value = "int"}},
                          call = {
                            name = "typespec ",
                            obj = "",
                            proc = <function>},
                          line = 7,
                          step = 0},
                        {
                          line = 7,
                          name = "IDENT",
                          value = "addx"}},
                      call = {
                        name = "extern_paramdef",
                        proc = <function>},
                      line = 7,
                      step = 0}},
                  call = {
                    name = "extern_paramdeflist",
                    proc = <function>},
                  line = 7,
                  step = 0}},
              call = {
                name = "interface_funcdef {const=true}",
                obj = {
                  const = true},
                proc = <function>},
              line = 7,
              step = 0},
            {
              arg = {
                {
                  line = 8,
                  name = "IDENT",
                  value = "ofs_y"},
                {
                  arg = {
                    {
                      line = 8,
                      name = "IDENT",
                      value = "int"}},
                  call = {
                    name = "typespec ",
                    obj = "",
                    proc = <function>},
                  line = 8,
                  step = 0},
                {
                  arg = {
                    {
                      arg = {
                        {
                          arg = {
                            {
                              line = 8,
                              name = "IDENT",
                              value = "int"}},
                          call = {
                            name = "typespec ",
                            obj = "",
                            proc = <function>},
                          line = 8,
                          step = 0},
                        {
                          line = 8,
                          name = "IDENT",
                          value = "addy"}},
                      call = {
                        name = "extern_paramdef",
                        proc = <function>},
                      line = 8,
                      step = 0}},
                  call = {
                    name = "extern_paramdeflist",
                    proc = <function>},
                  line = 8,
                  step = 0}},
              call = {
                name = "interface_funcdef {const=true}",
                obj = {
                  const = true},
                proc = <function>},
              line = 8,
              step = 0}},
          call = {
            name = "interfacedef",
            proc = <function>},
          line = 8,
          step = 1}},
      call = {
        name = "definition 1",
        obj = 1,
        proc = <function>},
      line = 8,
      step = 1},
    {
      arg = {
        {
          arg = {
            {
              line = 11,
              name = "IDENT",
              value = "ObjectUpdater"},
            {
              arg = {
                {
                  arg = {},
                  call = {
                    name = "operatordecl {name="=",symbol="assign"}",
                    obj = {
                      name = "=",
                      symbol = "assign"},
                    proc = <function>},
                  line = 11,
                  step = 1},
                {
                  arg = {
                    {
                      arg = {
                        {
                          arg = {
                            {
                              line = 13,
                              name = "IDENT",
                              value = "int"}},
                          call = {
                            name = "typespec ",
                            obj = "",
                            proc = <function>},
                          line = 13,
                          step = 1},
                        {
                          line = 13,
                          name = "IDENT",
                          value = "x_"},
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  line = 13,
                                  name = "IDENT",
                                  value = "int"}},
                              call = {
                                name = "typespec ",
                                obj = "",
                                proc = <function>},
                              line = 13,
                              step = 1},
                            {
                              line = 13,
                              name = "IDENT",
                              value = "y_"}},
                          call = {
                            name = "extern_paramdef",
                            proc = <function>},
                          line = 13,
                          step = 1}},
                      call = {
                        name = "extern_paramdef",
                        proc = <function>},
                      line = 13,
                      step = 1}},
                  call = {
                    name = "extern_paramdeflist",
                    proc = <function>},
                  line = 13,
                  step = 1}},
              call = {
                name = "interface_operator_procdef {const=false}",
                obj = {
                  const = false},
                proc = <function>},
              line = 13,
              step = 1}},
          call = {
            name = "interfacedef",
            proc = <function>},
          line = 13,
          step = 2}},
      call = {
        name = "definition 1",
        obj = 1,
        proc = <function>},
      line = 13,
      step = 2},
    {
      arg = {
        {
          arg = {
            {
              line = 16,
              name = "IDENT",
              value = "Point"},
            {
              arg = {
                {
                  arg = {
                    {
                      line = 16,
                      name = "IDENT",
                      value = "Object"}},
                  call = {
                    name = "typespec ",
                    obj = "",
                    proc = <function>},
                  line = 16,
                  step = 2},
                {
                  arg = {
                    {
                      arg = {
                        {
                          line = 16,
                          name = "IDENT",
                          value = "ObjectUpdater"}},
                      call = {
                        name = "typespec ",
                        obj = "",
                        proc = <function>},
                      line = 16,
                      step = 2}},
                  call = {
                    name = "inheritdef 1",
                    obj = 1,
                    proc = <function>},
                  line = 16,
                  step = 3}},
              call = {
                name = "inheritdef 1",
                obj = 1,
                proc = <function>},
              line = 16,
              step = 4},
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {},
                      call = {
                        name = "linkage {private=false,linkage="external"}",
                        obj = {
                          linkage = "external",
                          private = false},
                        proc = <function>},
                      line = 16,
                      step = 4},
                    {
                      arg = {
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      line = 18,
                                      name = "IDENT",
                                      value = "int"}},
                                  call = {
                                    name = "typespec ",
                                    obj = "",
                                    proc = <function>},
                                  line = 18,
                                  step = 4},
                                {
                                  line = 18,
                                  name = "IDENT",
                                  value = "x_"}},
                              call = {
                                name = "paramdef",
                                proc = <function>},
                              line = 18,
                              step = 4},
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      line = 18,
                                      name = "IDENT",
                                      value = "int"}},
                                  call = {
                                    name = "typespec ",
                                    obj = "",
                                    proc = <function>},
                                  line = 18,
                                  step = 4},
                                {
                                  line = 18,
                                  name = "IDENT",
                                  value = "y_"}},
                              call = {
                                name = "paramdef",
                                proc = <function>},
                              line = 18,
                              step = 4}},
                          call = {
                            name = "paramdeflist",
                            proc = <function>},
                          line = 18,
                          step = 4},
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          line = 20,
                                          name = "IDENT",
                                          value = "m_x"}},
                                      call = {
                                        name = "variable",
                                        proc = <function>},
                                      line = 20,
                                      step = 4},
                                    {
                                      arg = {
                                        {
                                          line = 20,
                                          name = "IDENT",
                                          value = "x_"}},
                                      call = {
                                        name = "variable",
                                        proc = <function>},
                                      line = 20,
                                      step = 4}},
                                  call = {
                                    name = "operator =",
                                    obj = "=",
                                    proc = <function>},
                                  line = 20,
                                  step = 4}},
                              call = {
                                name = "free_expression",
                                proc = <function>},
                              line = 20,
                              step = 4},
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          arg = {
                                            {
                                              line = 21,
                                              name = "IDENT",
                                              value = "this"}},
                                          call = {
                                            name = "variable",
                                            proc = <function>},
                                          line = 21,
                                          step = 4},
                                        {
                                          arg = {},
                                          call = {
                                            name = "count",
                                            proc = <function>},
                                          line = 21,
                                          step = 4},
                                        {
                                          line = 21,
                                          name = "IDENT",
                                          value = "m_y"}},
                                      call = {
                                        name = "rep_operator ->",
                                        obj = "->",
                                        proc = <function>},
                                      line = 21,
                                      step = 4},
                                    {
                                      arg = {
                                        {
                                          line = 21,
                                          name = "IDENT",
                                          value = "y_"}},
                                      call = {
                                        name = "variable",
                                        proc = <function>},
                                      line = 21,
                                      step = 4}},
                                  call = {
                                    name = "operator =",
                                    obj = "=",
                                    proc = <function>},
                                  line = 21,
                                  step = 4}},
                              call = {
                                name = "free_expression",
                                proc = <function>},
                              line = 21,
                              step = 4}},
                          call = {
                            name = "codeblock",
                            proc = <function>},
                          line = 21,
                          step = 4}},
                      call = {
                        name = "callablebody",
                        proc = <function>},
                      line = 21,
                      scope = {
                        4,
                        5}}},
                  call = {
                    name = "constructordef",
                    proc = <function>},
                  line = 21,
                  step = 5}},
              call = {
                name = "definition 2",
                obj = 2,
                proc = <function>},
              line = 21,
              step = 5},
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {},
                      call = {
                        name = "linkage {private=false,linkage="external"}",
                        obj = {
                          linkage = "external",
                          private = false},
                        proc = <function>},
                      line = 21,
                      step = 5},
                    {
                      arg = {},
                      call = {
                        name = "operatordecl {name="=",symbol="assign"}",
                        obj = {
                          name = "=",
                          symbol = "assign"},
                        proc = <function>},
                      line = 21,
                      step = 5},
                    {
                      arg = {
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      line = 24,
                                      name = "IDENT",
                                      value = "int"}},
                                  call = {
                                    name = "typespec ",
                                    obj = "",
                                    proc = <function>},
                                  line = 24,
                                  step = 5},
                                {
                                  line = 24,
                                  name = "IDENT",
                                  value = "x_"}},
                              call = {
                                name = "paramdef",
                                proc = <function>},
                              line = 24,
                              step = 5},
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      line = 24,
                                      name = "IDENT",
                                      value = "int"}},
                                  call = {
                                    name = "typespec ",
                                    obj = "",
                                    proc = <function>},
                                  line = 24,
                                  step = 5},
                                {
                                  line = 24,
                                  name = "IDENT",
                                  value = "y_"}},
                              call = {
                                name = "paramdef",
                                proc = <function>},
                              line = 24,
                              step = 5}},
                          call = {
                            name = "paramdeflist",
                            proc = <function>},
                          line = 24,
                          step = 5},
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          arg = {
                                            {
                                              line = 26,
                                              name = "IDENT",
                                              value = "this"}},
                                          call = {
                                            name = "variable",
                                            proc = <function>},
                                          line = 26,
                                          step = 5},
                                        {
                                          arg = {},
                                          call = {
                                            name = "count",
                                            proc = <function>},
                                          line = 26,
                                          step = 5},
                                        {
                                          line = 26,
                                          name = "IDENT",
                                          value = "m_x"}},
                                      call = {
                                        name = "rep_operator ->",
                                        obj = "->",
                                        proc = <function>},
                                      line = 26,
                                      step = 5},
                                    {
                                      arg = {
                                        {
                                          line = 26,
                                          name = "IDENT",
                                          value = "x_"}},
                                      call = {
                                        name = "variable",
                                        proc = <function>},
                                      line = 26,
                                      step = 5}},
                                  call = {
                                    name = "operator =",
                                    obj = "=",
                                    proc = <function>},
                                  line = 26,
                                  step = 5}},
                              call = {
                                name = "free_expression",
                                proc = <function>},
                              line = 26,
                              step = 5},
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          line = 27,
                                          name = "IDENT",
                                          value = "m_y"}},
                                      call = {
                                        name = "variable",
                                        proc = <function>},
                                      line = 27,
                                      step = 5},
                                    {
                                      arg = {
                                        {
                                          line = 27,
                                          name = "IDENT",
                                          value = "y_"}},
                                      call = {
                                        name = "variable",
                                        proc = <function>},
                                      line = 27,
                                      step = 5}},
                                  call = {
                                    name = "operator =",
                                    obj = "=",
                                    proc = <function>},
                                  line = 27,
                                  step = 5}},
                              call = {
                                name = "free_expression",
                                proc = <function>},
                              line = 27,
                              step = 5}},
                          call = {
                            name = "codeblock",
                            proc = <function>},
                          line = 27,
                          step = 5}},
                      call = {
                        name = "callablebody",
                        proc = <function>},
                      line = 27,
                      scope = {
                        5,
                        6}}},
                  call = {
                    name = "operator_procdef {const=false}",
                    obj = {
                      const = false},
                    proc = <function>},
                  line = 27,
                  step = 6}},
              call = {
                name = "definition 2",
                obj = 2,
                proc = <function>},
              line = 27,
              step = 6},
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {},
                      call = {
                        name = "linkage {private=false,linkage="external"}",
                        obj = {
                          linkage = "external",
                          private = false},
                        proc = <function>},
                      line = 27,
                      step = 6},
                    {
                      line = 30,
                      name = "IDENT",
                      value = "x"},
                    {
                      arg = {
                        {
                          line = 30,
                          name = "IDENT",
                          value = "int"}},
                      call = {
                        name = "typespec ",
                        obj = "",
                        proc = <function>},
                      line = 30,
                      step = 6},
                    {
                      arg = {
                        {
                          arg = {},
                          call = {
                            name = "paramdeflist",
                            proc = <function>},
                          line = 30,
                          step = 6},
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      line = 32,
                                      name = "IDENT",
                                      value = "m_x"}},
                                  call = {
                                    name = "variable",
                                    proc = <function>},
                                  line = 32,
                                  step = 6}},
                              call = {
                                name = "return_value",
                                proc = <function>},
                              line = 32,
                              step = 7}},
                          call = {
                            name = "codeblock",
                            proc = <function>},
                          line = 32,
                          step = 7}},
                      call = {
                        name = "callablebody",
                        proc = <function>},
                      line = 32,
                      scope = {
                        6,
                        8}}},
                  call = {
                    name = "funcdef {const=true}",
                    obj = {
                      const = true},
                    proc = <function>},
                  line = 32,
                  step = 8}},
              call = {
                name = "definition 2",
                obj = 2,
                proc = <function>},
              line = 32,
              step = 8},
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {},
                      call = {
                        name = "linkage {private=false,linkage="external"}",
                        obj = {
                          linkage = "external",
                          private = false},
                        proc = <function>},
                      line = 32,
                      step = 8},
                    {
                      line = 35,
                      name = "IDENT",
                      value = "y"},
                    {
                      arg = {
                        {
                          line = 35,
                          name = "IDENT",
                          value = "int"}},
                      call = {
                        name = "typespec ",
                        obj = "",
                        proc = <function>},
                      line = 35,
                      step = 8},
                    {
                      arg = {
                        {
                          arg = {},
                          call = {
                            name = "paramdeflist",
                            proc = <function>},
                          line = 35,
                          step = 8},
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          line = 37,
                                          name = "IDENT",
                                          value = "this"}},
                                      call = {
                                        name = "variable",
                                        proc = <function>},
                                      line = 37,
                                      step = 8},
                                    {
                                      arg = {},
                                      call = {
                                        name = "count",
                                        proc = <function>},
                                      line = 37,
                                      step = 8},
                                    {
                                      line = 37,
                                      name = "IDENT",
                                      value = "m_y"}},
                                  call = {
                                    name = "rep_operator ->",
                                    obj = "->",
                                    proc = <function>},
                                  line = 37,
                                  step = 8}},
                              call = {
                                name = "return_value",
                                proc = <function>},
                              line = 37,
                              step = 9}},
                          call = {
                            name = "codeblock",
                            proc = <function>},
                          line = 37,
                          step = 9}},
                      call = {
                        name = "callablebody",
                        proc = <function>},
                      line = 37,
                      scope = {
                        8,
                        10}}},
                  call = {
                    name = "funcdef {const=true}",
                    obj = {
                      const = true},
                    proc = <function>},
                  line = 37,
                  step = 10}},
              call = {
                name = "definition 2",
                obj = 2,
                proc = <function>},
              line = 37,
              step = 10},
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {},
                      call = {
                        name = "linkage {private=false,linkage="external"}",
                        obj = {
                          linkage = "external",
                          private = false},
                        proc = <function>},
                      line = 37,
                      step = 10},
                    {
                      line = 40,
                      name = "IDENT",
                      value = "ofs_x"},
                    {
                      arg = {
                        {
                          line = 40,
                          name = "IDENT",
                          value = "int"}},
                      call = {
                        name = "typespec ",
                        obj = "",
                        proc = <function>},
                      line = 40,
                      step = 10},
                    {
                      arg = {
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      line = 40,
                                      name = "IDENT",
                                      value = "int"}},
                                  call = {
                                    name = "typespec ",
                                    obj = "",
                                    proc = <function>},
                                  line = 40,
                                  step = 10},
                                {
                                  line = 40,
                                  name = "IDENT",
                                  value = "addx"}},
                              call = {
                                name = "paramdef",
                                proc = <function>},
                              line = 40,
                              step = 10}},
                          call = {
                            name = "paramdeflist",
                            proc = <function>},
                          line = 40,
                          step = 10},
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          line = 42,
                                          name = "IDENT",
                                          value = "m_x"}},
                                      call = {
                                        name = "variable",
                                        proc = <function>},
                                      line = 42,
                                      step = 10},
                                    {
                                      arg = {
                                        {
                                          line = 42,
                                          name = "IDENT",
                                          value = "addx"}},
                                      call = {
                                        name = "variable",
                                        proc = <function>},
                                      line = 42,
                                      step = 10}},
                                  call = {
                                    name = "operator +",
                                    obj = "+",
                                    proc = <function>},
                                  line = 42,
                                  step = 10}},
                              call = {
                                name = "return_value",
                                proc = <function>},
                              line = 42,
                              step = 11}},
                          call = {
                            name = "codeblock",
                            proc = <function>},
                          line = 42,
                          step = 11}},
                      call = {
                        name = "callablebody",
                        proc = <function>},
                      line = 42,
                      scope = {
                        10,
                        12}}},
                  call = {
                    name = "funcdef {const=true}",
                    obj = {
                      const = true},
                    proc = <function>},
                  line = 42,
                  step = 12}},
              call = {
                name = "definition 2",
                obj = 2,
                proc = <function>},
              line = 42,
              step = 12},
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {},
                      call = {
                        name = "linkage {private=false,linkage="external"}",
                        obj = {
                          linkage = "external",
                          private = false},
                        proc = <function>},
                      line = 42,
                      step = 12},
                    {
                      line = 45,
                      name = "IDENT",
                      value = "ofs_y"},
                    {
                      arg = {
                        {
                          line = 45,
                          name = "IDENT",
                          value = "int"}},
                      call = {
                        name = "typespec ",
                        obj = "",
                        proc = <function>},
                      line = 45,
                      step = 12},
                    {
                      arg = {
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      line = 45,
                                      name = "IDENT",
                                      value = "int"}},
                                  call = {
                                    name = "typespec ",
                                    obj = "",
                                    proc = <function>},
                                  line = 45,
                                  step = 12},
                                {
                                  line = 45,
                                  name = "IDENT",
                                  value = "addy"}},
                              call = {
                                name = "paramdef",
                                proc = <function>},
                              line = 45,
                              step = 12}},
                          call = {
                            name = "paramdeflist",
                            proc = <function>},
                          line = 45,
                          step = 12},
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          line = 47,
                                          name = "IDENT",
                                          value = "m_y"}},
                                      call = {
                                        name = "variable",
                                        proc = <function>},
                                      line = 47,
                                      step = 12},
                                    {
                                      arg = {
                                        {
                                          line = 47,
                                          name = "IDENT",
                                          value = "addy"}},
                                      call = {
                                        name = "variable",
                                        proc = <function>},
                                      line = 47,
                                      step = 12}},
                                  call = {
                                    name = "operator +",
                                    obj = "+",
                                    proc = <function>},
                                  line = 47,
                                  step = 12}},
                              call = {
                                name = "return_value",
                                proc = <function>},
                              line = 47,
                              step = 13}},
                          call = {
                            name = "codeblock",
                            proc = <function>},
                          line = 47,
                          step = 13}},
                      call = {
                        name = "callablebody",
                        proc = <function>},
                      line = 47,
                      scope = {
                        12,
                        14}}},
                  call = {
                    name = "funcdef {const=true}",
                    obj = {
                      const = true},
                    proc = <function>},
                  line = 47,
                  step = 14}},
              call = {
                name = "definition 2",
                obj = 2,
                proc = <function>},
              line = 47,
              step = 14},
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {},
                      call = {
                        name = "linkage {private=false,linkage="external"}",
                        obj = {
                          linkage = "external",
                          private = false},
                        proc = <function>},
                      line = 47,
                      step = 14},
                    {
                      line = 50,
                      name = "IDENT",
                      value = "object"},
                    {
                      arg = {
                        {
                          line = 50,
                          name = "IDENT",
                          value = "Object"}},
                      call = {
                        name = "typespec ",
                        obj = "",
                        proc = <function>},
                      line = 50,
                      step = 14},
                    {
                      arg = {
                        {
                          arg = {},
                          call = {
                            name = "paramdeflist",
                            proc = <function>},
                          line = 50,
                          step = 14},
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          line = 52,
                                          name = "IDENT",
                                          value = "this"}},
                                      call = {
                                        name = "variable",
                                        proc = <function>},
                                      line = 52,
                                      step = 14},
                                    {
                                      arg = {},
                                      call = {
                                        name = "count",
                                        proc = <function>},
                                      line = 52,
                                      step = 14},
                                    {
                                      line = 52,
                                      name = "IDENT",
                                      value = "Object"}},
                                  call = {
                                    name = "rep_operator ->",
                                    obj = "->",
                                    proc = <function>},
                                  line = 52,
                                  step = 14}},
                              call = {
                                name = "return_value",
                                proc = <function>},
                              line = 52,
                              step = 15}},
                          call = {
                            name = "codeblock",
                            proc = <function>},
                          line = 52,
                          step = 15}},
                      call = {
                        name = "callablebody",
                        proc = <function>},
                      line = 52,
                      scope = {
                        14,
                        16}}},
                  call = {
                    name = "funcdef {const=true}",
                    obj = {
                      const = true},
                    proc = <function>},
                  line = 52,
                  step = 16}},
              call = {
                name = "definition 2",
                obj = 2,
                proc = <function>},
              line = 52,
              step = 16},
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {},
                      call = {
                        name = "linkage {private=false,linkage="external"}",
                        obj = {
                          linkage = "external",
                          private = false},
                        proc = <function>},
                      line = 52,
                      step = 16},
                    {
                      line = 54,
                      name = "IDENT",
                      value = "updater"},
                    {
                      arg = {
                        {
                          line = 54,
                          name = "IDENT",
                          value = "ObjectUpdater"}},
                      call = {
                        name = "typespec ",
                        obj = "",
                        proc = <function>},
                      line = 54,
                      step = 16},
                    {
                      arg = {
                        {
                          arg = {},
                          call = {
                            name = "paramdeflist",
                            proc = <function>},
                          line = 54,
                          step = 16},
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          line = 56,
                                          name = "IDENT",
                                          value = "this"}},
                                      call = {
                                        name = "variable",
                                        proc = <function>},
                                      line = 56,
                                      step = 16},
                                    {
                                      arg = {},
                                      call = {
                                        name = "count",
                                        proc = <function>},
                                      line = 56,
                                      step = 16},
                                    {
                                      line = 56,
                                      name = "IDENT",
                                      value = "ObjectUpdater"}},
                                  call = {
                                    name = "rep_operator ->",
                                    obj = "->",
                                    proc = <function>},
                                  line = 56,
                                  step = 16}},
                              call = {
                                name = "return_value",
                                proc = <function>},
                              line = 56,
                              step = 17}},
                          call = {
                            name = "codeblock",
                            proc = <function>},
                          line = 56,
                          step = 17}},
                      call = {
                        name = "callablebody",
                        proc = <function>},
                      line = 56,
                      scope = {
                        16,
                        18}}},
                  call = {
                    name = "funcdef {const=false}",
                    obj = {
                      const = false},
                    proc = <function>},
                  line = 56,
                  step = 18}},
              call = {
                name = "definition 2",
                obj = 2,
                proc = <function>},
              line = 56,
              step = 18},
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {
                        {
                          line = 59,
                          name = "IDENT",
                          value = "int"}},
                      call = {
                        name = "typespec ",
                        obj = "",
                        proc = <function>},
                      line = 59,
                      step = 18},
                    {
                      line = 59,
                      name = "IDENT",
                      value = "m_x"}},
                  call = {
                    name = "vardef",
                    proc = <function>},
                  line = 59,
                  step = 19}},
              call = {
                name = "definition 1",
                obj = 1,
                proc = <function>},
              line = 59,
              step = 19},
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {
                        {
                          line = 60,
                          name = "IDENT",
                          value = "int"}},
                      call = {
                        name = "typespec ",
                        obj = "",
                        proc = <function>},
                      line = 60,
                      step = 19},
                    {
                      line = 60,
                      name = "IDENT",
                      value = "m_y"}},
                  call = {
                    name = "vardef",
                    proc = <function>},
                  line = 60,
                  step = 20}},
              call = {
                name = "definition 1",
                obj = 1,
                proc = <function>},
              line = 60,
              step = 20}},
          call = {
            name = "classdef",
            proc = <function>},
          line = 60,
          step = 21}},
      call = {
        name = "definition 1",
        obj = 1,
        proc = <function>},
      line = 60,
      step = 21},
    {
      arg = {
        {
          arg = {
            {
              line = 63,
              name = "IDENT",
              value = "Line"},
            {
              arg = {
                {
                  arg = {
                    {
                      line = 63,
                      name = "IDENT",
                      value = "Point"}},
                  call = {
                    name = "typespec ",
                    obj = "",
                    proc = <function>},
                  line = 63,
                  step = 21}},
              call = {
                name = "inheritdef 1",
                obj = 1,
                proc = <function>},
              line = 63,
              step = 22},
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {},
                      call = {
                        name = "linkage {private=false,linkage="external"}",
                        obj = {
                          linkage = "external",
                          private = false},
                        proc = <function>},
                      line = 63,
                      step = 22},
                    {
                      arg = {
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      line = 65,
                                      name = "IDENT",
                                      value = "int"}},
                                  call = {
                                    name = "typespec ",
                                    obj = "",
                                    proc = <function>},
                                  line = 65,
                                  step = 22},
                                {
                                  line = 65,
                                  name = "IDENT",
                                  value = "x_"}},
                              call = {
                                name = "paramdef",
                                proc = <function>},
                              line = 65,
                              step = 22},
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      line = 65,
                                      name = "IDENT",
                                      value = "int"}},
                                  call = {
                                    name = "typespec ",
                                    obj = "",
                                    proc = <function>},
                                  line = 65,
                                  step = 22},
                                {
                                  line = 65,
                                  name = "IDENT",
                                  value = "y_"}},
                              call = {
                                name = "paramdef",
                                proc = <function>},
                              line = 65,
                              step = 22}},
                          call = {
                            name = "paramdeflist",
                            proc = <function>},
                          line = 65,
                          step = 22},
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          arg = {
                                            {
                                              line = 67,
                                              name = "IDENT",
                                              value = "this"}},
                                          call = {
                                            name = "variable",
                                            proc = <function>},
                                          line = 67,
                                          step = 22},
                                        {
                                          arg = {},
                                          call = {
                                            name = "count",
                                            proc = <function>},
                                          line = 67,
                                          step = 22},
                                        {
                                          line = 67,
                                          name = "IDENT",
                                          value = "Point"}},
                                      call = {
                                        name = "rep_operator ->",
                                        obj = "->",
                                        proc = <function>},
                                      line = 67,
                                      step = 22},
                                    {
                                      arg = {
                                        {
                                          arg = {
                                            {
                                              line = 67,
                                              name = "IDENT",
                                              value = "x_"}},
                                          call = {
                                            name = "variable",
                                            proc = <function>},
                                          line = 67,
                                          step = 22},
                                        {
                                          arg = {
                                            {
                                              line = 67,
                                              name = "IDENT",
                                              value = "y_"}},
                                          call = {
                                            name = "variable",
                                            proc = <function>},
                                          line = 67,
                                          step = 22}},
                                      call = {
                                        name = "structure",
                                        proc = <function>},
                                      line = 67,
                                      step = 22}},
                                  call = {
                                    name = "operator =",
                                    obj = "=",
                                    proc = <function>},
                                  line = 67,
                                  step = 22}},
                              call = {
                                name = "free_expression",
                                proc = <function>},
                              line = 67,
                              step = 22}},
                          call = {
                            name = "codeblock",
                            proc = <function>},
                          line = 67,
                          step = 22}},
                      call = {
                        name = "callablebody",
                        proc = <function>},
                      line = 67,
                      scope = {
                        22,
                        23}}},
                  call = {
                    name = "constructordef",
                    proc = <function>},
                  line = 67,
                  step = 23}},
              call = {
                name = "definition 2",
                obj = 2,
                proc = <function>},
              line = 67,
              step = 23},
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {},
                      call = {
                        name = "linkage {private=false,linkage="external"}",
                        obj = {
                          linkage = "external",
                          private = false},
                        proc = <function>},
                      line = 67,
                      step = 23},
                    {
                      line = 70,
                      name = "IDENT",
                      value = "move"},
                    {
                      arg = {
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      line = 70,
                                      name = "IDENT",
                                      value = "int"}},
                                  call = {
                                    name = "typespec ",
                                    obj = "",
                                    proc = <function>},
                                  line = 70,
                                  step = 23},
                                {
                                  line = 70,
                                  name = "IDENT",
                                  value = "x_"}},
                              call = {
                                name = "paramdef",
                                proc = <function>},
                              line = 70,
                              step = 23},
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      line = 70,
                                      name = "IDENT",
                                      value = "int"}},
                                  call = {
                                    name = "typespec ",
                                    obj = "",
                                    proc = <function>},
                                  line = 70,
                                  step = 23},
                                {
                                  line = 70,
                                  name = "IDENT",
                                  value = "y_"}},
                              call = {
                                name = "paramdef",
                                proc = <function>},
                              line = 70,
                              step = 23}},
                          call = {
                            name = "paramdeflist",
                            proc = <function>},
                          line = 70,
                          step = 23},
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          arg = {
                                            {
                                              line = 72,
                                              name = "IDENT",
                                              value = "this"}},
                                          call = {
                                            name = "variable",
                                            proc = <function>},
                                          line = 72,
                                          step = 23},
                                        {
                                          arg = {},
                                          call = {
                                            name = "count",
                                            proc = <function>},
                                          line = 72,
                                          step = 23},
                                        {
                                          line = 72,
                                          name = "IDENT",
                                          value = "Point"}},
                                      call = {
                                        name = "rep_operator ->",
                                        obj = "->",
                                        proc = <function>},
                                      line = 72,
                                      step = 23},
                                    {
                                      arg = {
                                        {
                                          arg = {
                                            {
                                              line = 72,
                                              name = "IDENT",
                                              value = "x_"}},
                                          call = {
                                            name = "variable",
                                            proc = <function>},
                                          line = 72,
                                          step = 23},
                                        {
                                          arg = {
                                            {
                                              line = 72,
                                              name = "IDENT",
                                              value = "y_"}},
                                          call = {
                                            name = "variable",
                                            proc = <function>},
                                          line = 72,
                                          step = 23}},
                                      call = {
                                        name = "structure",
                                        proc = <function>},
                                      line = 72,
                                      step = 23}},
                                  call = {
                                    name = "operator =",
                                    obj = "=",
                                    proc = <function>},
                                  line = 72,
                                  step = 23}},
                              call = {
                                name = "free_expression",
                                proc = <function>},
                              line = 72,
                              step = 23}},
                          call = {
                            name = "codeblock",
                            proc = <function>},
                          line = 72,
                          step = 23}},
                      call = {
                        name = "callablebody",
                        proc = <function>},
                      line = 72,
                      scope = {
                        23,
                        24}}},
                  call = {
                    name = "procdef {const=false}",
                    obj = {
                      const = false},
                    proc = <function>},
                  line = 72,
                  step = 24}},
              call = {
                name = "definition 2",
                obj = 2,
                proc = <function>},
              line = 72,
              step = 24}},
          call = {
            name = "classdef",
            proc = <function>},
          line = 72,
          step = 25}},
      call = {
        name = "definition 1",
        obj = 1,
        proc = <function>},
      line = 72,
      step = 25},
    {
      arg = {
        {
          arg = {
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {
                        {
                          line = 77,
                          name = "IDENT",
                          value = "float"}},
                      call = {
                        name = "typespec ",
                        obj = "",
                        proc = <function>},
                      line = 77,
                      step = 25},
                    {
                      line = 77,
                      name = "IDENT",
                      value = "x"},
                    {
                      arg = {
                        {
                          line = 77,
                          name = "FLOAT",
                          value = "1.23"}},
                      call = {
                        name = "constant constexpr float",
                        obj = "constexpr float",
                        proc = <function>},
                      line = 77,
                      step = 25}},
                  call = {
                    name = "vardef_assign",
                    proc = <function>},
                  line = 77,
                  step = 26}},
              call = {
                name = "definition",
                proc = <function>},
              line = 77,
              step = 26},
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {
                        {
                          line = 78,
                          name = "IDENT",
                          value = "Line"}},
                      call = {
                        name = "typespec ",
                        obj = "",
                        proc = <function>},
                      line = 78,
                      step = 26},
                    {
                      line = 78,
                      name = "IDENT",
                      value = "ab"},
                    {
                      arg = {
                        {
                          arg = {
                            {
                              line = 78,
                              name = "FLOAT",
                              value = "1.23"}},
                          call = {
                            name = "constant constexpr float",
                            obj = "constexpr float",
                            proc = <function>},
                          line = 78,
                          step = 26},
                        {
                          arg = {
                            {
                              line = 78,
                              name = "FLOAT",
                              value = "4.23"}},
                          call = {
                            name = "constant constexpr float",
                            obj = "constexpr float",
                            proc = <function>},
                          line = 78,
                          step = 26}},
                      call = {
                        name = "structure",
                        proc = <function>},
                      line = 78,
                      step = 26}},
                  call = {
                    name = "vardef_assign",
                    proc = <function>},
                  line = 78,
                  step = 27}},
              call = {
                name = "definition",
                proc = <function>},
              line = 78,
              step = 27},
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {
                        {
                          line = 79,
                          name = "IDENT",
                          value = "Object"}},
                      call = {
                        name = "typespec ",
                        obj = "",
                        proc = <function>},
                      line = 79,
                      step = 27},
                    {
                      line = 79,
                      name = "IDENT",
                      value = "obj"},
                    {
                      arg = {
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  line = 79,
                                  name = "IDENT",
                                  value = "ab"}},
                              call = {
                                name = "variable",
                                proc = <function>},
                              line = 79,
                              step = 27},
                            {
                              line = 79,
                              name = "IDENT",
                              value = "object"}},
                          call = {
                            name = "member",
                            proc = <function>},
                          line = 79,
                          step = 27}},
                      call = {
                        name = "operator ()",
                        obj = "()",
                        proc = <function>},
                      line = 79,
                      step = 27}},
                  call = {
                    name = "vardef_assign",
                    proc = <function>},
                  line = 79,
                  step = 28}},
              call = {
                name = "definition",
                proc = <function>},
              line = 79,
              step = 28},
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {
                        {
                          line = 80,
                          name = "IDENT",
                          value = "printf"}},
                      call = {
                        name = "variable",
                        proc = <function>},
                      line = 80,
                      step = 28},
                    {
                      arg = {
                        {
                          line = 80,
                          name = "DQSTRING",
                          value = "RESULT[1] x = %d\\n"}},
                      call = {
                        name = "string_constant constexpr float",
                        obj = "constexpr float",
                        proc = <function>},
                      line = 80,
                      step = 28},
                    {
                      arg = {
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  line = 80,
                                  name = "IDENT",
                                  value = "obj"}},
                              call = {
                                name = "variable",
                                proc = <function>},
                              line = 80,
                              step = 28},
                            {
                              line = 80,
                              name = "IDENT",
                              value = "x"}},
                          call = {
                            name = "member",
                            proc = <function>},
                          line = 80,
                          step = 28}},
                      call = {
                        name = "operator ()",
                        obj = "()",
                        proc = <function>},
                      line = 80,
                      step = 28}},
                  call = {
                    name = "operator ()",
                    obj = "()",
                    proc = <function>},
                  line = 80,
                  step = 28}},
              call = {
                name = "free_expression",
                proc = <function>},
              line = 80,
              step = 28},
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {
                        {
                          line = 81,
                          name = "IDENT",
                          value = "printf"}},
                      call = {
                        name = "variable",
                        proc = <function>},
                      line = 81,
                      step = 28},
                    {
                      arg = {
                        {
                          line = 81,
                          name = "DQSTRING",
                          value = "RESULT[1] y = %d\\n"}},
                      call = {
                        name = "string_constant constexpr float",
                        obj = "constexpr float",
                        proc = <function>},
                      line = 81,
                      step = 28},
                    {
                      arg = {
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  line = 81,
                                  name = "IDENT",
                                  value = "obj"}},
                              call = {
                                name = "variable",
                                proc = <function>},
                              line = 81,
                              step = 28},
                            {
                              line = 81,
                              name = "IDENT",
                              value = "y"}},
                          call = {
                            name = "member",
                            proc = <function>},
                          line = 81,
                          step = 28}},
                      call = {
                        name = "operator ()",
                        obj = "()",
                        proc = <function>},
                      line = 81,
                      step = 28}},
                  call = {
                    name = "operator ()",
                    obj = "()",
                    proc = <function>},
                  line = 81,
                  step = 28}},
              call = {
                name = "free_expression",
                proc = <function>},
              line = 81,
              step = 28},
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {
                        {
                          line = 82,
                          name = "IDENT",
                          value = "ObjectUpdater"}},
                      call = {
                        name = "typespec ",
                        obj = "",
                        proc = <function>},
                      line = 82,
                      step = 28},
                    {
                      line = 82,
                      name = "IDENT",
                      value = "updater"},
                    {
                      arg = {
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  line = 82,
                                  name = "IDENT",
                                  value = "ab"}},
                              call = {
                                name = "variable",
                                proc = <function>},
                              line = 82,
                              step = 28},
                            {
                              line = 82,
                              name = "IDENT",
                              value = "updater"}},
                          call = {
                            name = "member",
                            proc = <function>},
                          line = 82,
                          step = 28}},
                      call = {
                        name = "operator ()",
                        obj = "()",
                        proc = <function>},
                      line = 82,
                      step = 28}},
                  call = {
                    name = "vardef_assign",
                    proc = <function>},
                  line = 82,
                  step = 29}},
              call = {
                name = "definition",
                proc = <function>},
              line = 82,
              step = 29},
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {
                        {
                          line = 83,
                          name = "IDENT",
                          value = "updater"}},
                      call = {
                        name = "variable",
                        proc = <function>},
                      line = 83,
                      step = 29},
                    {
                      arg = {
                        {
                          arg = {
                            {
                              line = 83,
                              name = "CARDINAL",
                              value = "31"}},
                          call = {
                            name = "constant constexpr uint",
                            obj = "constexpr uint",
                            proc = <function>},
                          line = 83,
                          step = 29},
                        {
                          arg = {
                            {
                              line = 83,
                              name = "CARDINAL",
                              value = "411"}},
                          call = {
                            name = "constant constexpr uint",
                            obj = "constexpr uint",
                            proc = <function>},
                          line = 83,
                          step = 29}},
                      call = {
                        name = "structure",
                        proc = <function>},
                      line = 83,
                      step = 29}},
                  call = {
                    name = "operator =",
                    obj = "=",
                    proc = <function>},
                  line = 83,
                  step = 29}},
              call = {
                name = "free_expression",
                proc = <function>},
              line = 83,
              step = 29},
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {
                        {
                          line = 84,
                          name = "IDENT",
                          value = "printf"}},
                      call = {
                        name = "variable",
                        proc = <function>},
                      line = 84,
                      step = 29},
                    {
                      arg = {
                        {
                          line = 84,
                          name = "DQSTRING",
                          value = "RESULT[2] x = %d\\n"}},
                      call = {
                        name = "string_constant constexpr float",
                        obj = "constexpr float",
                        proc = <function>},
                      line = 84,
                      step = 29},
                    {
                      arg = {
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  line = 84,
                                  name = "IDENT",
                                  value = "obj"}},
                              call = {
                                name = "variable",
                                proc = <function>},
                              line = 84,
                              step = 29},
                            {
                              line = 84,
                              name = "IDENT",
                              value = "x"}},
                          call = {
                            name = "member",
                            proc = <function>},
                          line = 84,
                          step = 29}},
                      call = {
                        name = "operator ()",
                        obj = "()",
                        proc = <function>},
                      line = 84,
                      step = 29}},
                  call = {
                    name = "operator ()",
                    obj = "()",
                    proc = <function>},
                  line = 84,
                  step = 29}},
              call = {
                name = "free_expression",
                proc = <function>},
              line = 84,
              step = 29},
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {
                        {
                          line = 85,
                          name = "IDENT",
                          value = "printf"}},
                      call = {
                        name = "variable",
                        proc = <function>},
                      line = 85,
                      step = 29},
                    {
                      arg = {
                        {
                          line = 85,
                          name = "DQSTRING",
                          value = "RESULT[2] y = %d\\n"}},
                      call = {
                        name = "string_constant constexpr float",
                        obj = "constexpr float",
                        proc = <function>},
                      line = 85,
                      step = 29},
                    {
                      arg = {
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  line = 85,
                                  name = "IDENT",
                                  value = "obj"}},
                              call = {
                                name = "variable",
                                proc = <function>},
                              line = 85,
                              step = 29},
                            {
                              line = 85,
                              name = "IDENT",
                              value = "y"}},
                          call = {
                            name = "member",
                            proc = <function>},
                          line = 85,
                          step = 29}},
                      call = {
                        name = "operator ()",
                        obj = "()",
                        proc = <function>},
                      line = 85,
                      step = 29}},
                  call = {
                    name = "operator ()",
                    obj = "()",
                    proc = <function>},
                  line = 85,
                  step = 29}},
              call = {
                name = "free_expression",
                proc = <function>},
              line = 85,
              step = 29},
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {
                        {
                          line = 86,
                          name = "IDENT",
                          value = "updater"}},
                      call = {
                        name = "variable",
                        proc = <function>},
                      line = 86,
                      step = 29},
                    {
                      arg = {
                        {
                          arg = {
                            {
                              line = 86,
                              name = "CARDINAL",
                              value = "71"}},
                          call = {
                            name = "constant constexpr uint",
                            obj = "constexpr uint",
                            proc = <function>},
                          line = 86,
                          step = 29},
                        {
                          arg = {
                            {
                              line = 86,
                              name = "CARDINAL",
                              value = "511"}},
                          call = {
                            name = "constant constexpr uint",
                            obj = "constexpr uint",
                            proc = <function>},
                          line = 86,
                          step = 29}},
                      call = {
                        name = "structure",
                        proc = <function>},
                      line = 86,
                      step = 29}},
                  call = {
                    name = "operator =",
                    obj = "=",
                    proc = <function>},
                  line = 86,
                  step = 29}},
              call = {
                name = "free_expression",
                proc = <function>},
              line = 86,
              step = 29},
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {
                        {
                          line = 87,
                          name = "IDENT",
                          value = "printf"}},
                      call = {
                        name = "variable",
                        proc = <function>},
                      line = 87,
                      step = 29},
                    {
                      arg = {
                        {
                          line = 87,
                          name = "DQSTRING",
                          value = "RESULT[3] x = %d\\n"}},
                      call = {
                        name = "string_constant constexpr float",
                        obj = "constexpr float",
                        proc = <function>},
                      line = 87,
                      step = 29},
                    {
                      arg = {
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  line = 87,
                                  name = "IDENT",
                                  value = "obj"}},
                              call = {
                                name = "variable",
                                proc = <function>},
                              line = 87,
                              step = 29},
                            {
                              line = 87,
                              name = "IDENT",
                              value = "ofs_x"}},
                          call = {
                            name = "member",
                            proc = <function>},
                          line = 87,
                          step = 29},
                        {
                          arg = {
                            {
                              line = 87,
                              name = "INTEGER",
                              value = "-13"}},
                          call = {
                            name = "constant constexpr int",
                            obj = "constexpr int",
                            proc = <function>},
                          line = 87,
                          step = 29}},
                      call = {
                        name = "operator ()",
                        obj = "()",
                        proc = <function>},
                      line = 87,
                      step = 29}},
                  call = {
                    name = "operator ()",
                    obj = "()",
                    proc = <function>},
                  line = 87,
                  step = 29}},
              call = {
                name = "free_expression",
                proc = <function>},
              line = 87,
              step = 29},
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {
                        {
                          line = 88,
                          name = "IDENT",
                          value = "printf"}},
                      call = {
                        name = "variable",
                        proc = <function>},
                      line = 88,
                      step = 29},
                    {
                      arg = {
                        {
                          line = 88,
                          name = "DQSTRING",
                          value = "RESULT[3] y = %d\\n"}},
                      call = {
                        name = "string_constant constexpr float",
                        obj = "constexpr float",
                        proc = <function>},
                      line = 88,
                      step = 29},
                    {
                      arg = {
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  line = 88,
                                  name = "IDENT",
                                  value = "obj"}},
                              call = {
                                name = "variable",
                                proc = <function>},
                              line = 88,
                              step = 29},
                            {
                              line = 88,
                              name = "IDENT",
                              value = "ofs_y"}},
                          call = {
                            name = "member",
                            proc = <function>},
                          line = 88,
                          step = 29},
                        {
                          arg = {
                            {
                              line = 88,
                              name = "CARDINAL",
                              value = "1"}},
                          call = {
                            name = "constant constexpr uint",
                            obj = "constexpr uint",
                            proc = <function>},
                          line = 88,
                          step = 29}},
                      call = {
                        name = "operator ()",
                        obj = "()",
                        proc = <function>},
                      line = 88,
                      step = 29}},
                  call = {
                    name = "operator ()",
                    obj = "()",
                    proc = <function>},
                  line = 88,
                  step = 29}},
              call = {
                name = "free_expression",
                proc = <function>},
              line = 88,
              step = 29},
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {
                        {
                          line = 89,
                          name = "IDENT",
                          value = "ObjectUpdater"}},
                      call = {
                        name = "typespec ",
                        obj = "",
                        proc = <function>},
                      line = 89,
                      step = 29},
                    {
                      line = 89,
                      name = "IDENT",
                      value = "updater2"},
                    {
                      arg = {
                        {
                          line = 89,
                          name = "IDENT",
                          value = "updater"}},
                      call = {
                        name = "variable",
                        proc = <function>},
                      line = 89,
                      step = 29}},
                  call = {
                    name = "vardef_assign",
                    proc = <function>},
                  line = 89,
                  step = 30}},
              call = {
                name = "definition",
                proc = <function>},
              line = 89,
              step = 30},
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {
                        {
                          line = 90,
                          name = "IDENT",
                          value = "updater2"}},
                      call = {
                        name = "variable",
                        proc = <function>},
                      line = 90,
                      step = 30},
                    {
                      arg = {
                        {
                          arg = {
                            {
                              line = 90,
                              name = "CARDINAL",
                              value = "32"}},
                          call = {
                            name = "constant constexpr uint",
                            obj = "constexpr uint",
                            proc = <function>},
                          line = 90,
                          step = 30},
                        {
                          arg = {
                            {
                              line = 90,
                              name = "CARDINAL",
                              value = "412"}},
                          call = {
                            name = "constant constexpr uint",
                            obj = "constexpr uint",
                            proc = <function>},
                          line = 90,
                          step = 30}},
                      call = {
                        name = "structure",
                        proc = <function>},
                      line = 90,
                      step = 30}},
                  call = {
                    name = "operator =",
                    obj = "=",
                    proc = <function>},
                  line = 90,
                  step = 30}},
              call = {
                name = "free_expression",
                proc = <function>},
              line = 90,
              step = 30},
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {
                        {
                          line = 91,
                          name = "IDENT",
                          value = "printf"}},
                      call = {
                        name = "variable",
                        proc = <function>},
                      line = 91,
                      step = 30},
                    {
                      arg = {
                        {
                          line = 91,
                          name = "DQSTRING",
                          value = "RESULT[4] x = %d\\n"}},
                      call = {
                        name = "string_constant constexpr float",
                        obj = "constexpr float",
                        proc = <function>},
                      line = 91,
                      step = 30},
                    {
                      arg = {
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  line = 91,
                                  name = "IDENT",
                                  value = "obj"}},
                              call = {
                                name = "variable",
                                proc = <function>},
                              line = 91,
                              step = 30},
                            {
                              line = 91,
                              name = "IDENT",
                              value = "ofs_x"}},
                          call = {
                            name = "member",
                            proc = <function>},
                          line = 91,
                          step = 30},
                        {
                          arg = {
                            {
                              line = 91,
                              name = "INTEGER",
                              value = "-11"}},
                          call = {
                            name = "constant constexpr int",
                            obj = "constexpr int",
                            proc = <function>},
                          line = 91,
                          step = 30}},
                      call = {
                        name = "operator ()",
                        obj = "()",
                        proc = <function>},
                      line = 91,
                      step = 30}},
                  call = {
                    name = "operator ()",
                    obj = "()",
                    proc = <function>},
                  line = 91,
                  step = 30}},
              call = {
                name = "free_expression",
                proc = <function>},
              line = 91,
              step = 30},
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {
                        {
                          line = 92,
                          name = "IDENT",
                          value = "printf"}},
                      call = {
                        name = "variable",
                        proc = <function>},
                      line = 92,
                      step = 30},
                    {
                      arg = {
                        {
                          line = 92,
                          name = "DQSTRING",
                          value = "RESULT[4] y = %d\\n"}},
                      call = {
                        name = "string_constant constexpr float",
                        obj = "constexpr float",
                        proc = <function>},
                      line = 92,
                      step = 30},
                    {
                      arg = {
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  line = 92,
                                  name = "IDENT",
                                  value = "obj"}},
                              call = {
                                name = "variable",
                                proc = <function>},
                              line = 92,
                              step = 30},
                            {
                              line = 92,
                              name = "IDENT",
                              value = "y"}},
                          call = {
                            name = "member",
                            proc = <function>},
                          line = 92,
                          step = 30}},
                      call = {
                        name = "operator ()",
                        obj = "()",
                        proc = <function>},
                      line = 92,
                      step = 30}},
                  call = {
                    name = "operator ()",
                    obj = "()",
                    proc = <function>},
                  line = 92,
                  step = 30}},
              call = {
                name = "free_expression",
                proc = <function>},
              line = 92,
              step = 30},
            {
              arg = {
                {
                  arg = {
                    {
                      line = 93,
                      name = "CARDINAL",
                      value = "0"}},
                  call = {
                    name = "constant constexpr uint",
                    obj = "constexpr uint",
                    proc = <function>},
                  line = 93,
                  step = 30}},
              call = {
                name = "return_value",
                proc = <function>},
              line = 93,
              step = 31}},
          call = {
            name = "codeblock",
            proc = <function>},
          line = 93,
          step = 31}},
      call = {
        name = "main_procdef",
        proc = <function>},
      line = 93,
      scope = {
        25,
        32}}},
  call = {
    name = "program",
    proc = <function>},
  line = 93,
  step = 32}
