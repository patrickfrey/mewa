local languagedef = {
	LANGUAGE="language1",
	TYPESYSTEM="language1/typesystem",
	CMDLINE="cmdlinearg",
	RULES = {
		{op="TOKEN",name="BOOLEAN",pattern="((true)|(false))",rule= {'BOOLEAN ::= "true" | "false"'},line=12},
		{op="TOKEN",name="IDENT",pattern="[a-zA-Z_]+[a-zA-Z_0-9]*",rule= {'LOALPHA ::= "a"|"b"|"c"|"d"|"e"|"f"|"g"|"h"|"i"|"j"|"k"|"l"|"m"|"n"|"o"|"p"|"q"|"r"|"s"|"t"|"u"|"v"|"w"|"x"|"y"|"z"','HIALPHA ::= "A"|"B"|"B"|"D"|"E"|"F"|"G"|"H"|"I"|"J"|"K"|"L"|"M"|"N"|"O"|"P"|"Q"|"R"|"S"|"T"|"U"|"V"|"W"|"X"|"Y"|"Z"','USCORE  ::= "_"',"IDENT   ::= (LOALPHA | HIALPHA | USCORE) (LOALPHA | HIALPHA | USCORE | DIGIT)*"},line=17},
		{op="TOKEN",name="DQSTRING",pattern='["]((([^\\\\"\\n]+)|([\\\\][^"\\n]))*)["]',select=1,rule= {"DQSTRING ::= [double quoted string]"},description= {"Double quoted string with backslash are used for escaping double quotes and back slashes in the string"},line=20},
		{op="TOKEN",name="SQSTRING",pattern="[']((([^\\\\'\\n]+)|([\\\\][^'\\n]))*)[']",select=1,rule= {"SQSTRING ::= [single quoted string]"},description= {"Single quoted string with backslash are used for escaping single quotes and back slashes in the string"},line=23},
		{op="TOKEN",name="UINTEGER",pattern="[0123456789]+",rule= {'DIGIT ::= ("0"|"1"|"2"|"3"|"4"|"5"|"6"|"7"|"8"|"9")',"UINTEGER ::= DIGIT*"},line=26},
		{op="TOKEN",name="FLOAT",pattern="[0123456789]*[.][0123456789]+",rule= {'FLOAT ::= DIGIT* "." DIGIT+'},line=28},
		{op="TOKEN",name="FLOAT",pattern="[0123456789]*[.][0123456789]+[Ee][+-]{0,1}[0123456789]+",rule= {'EXPONENT ::= ("E"|"e") (("-"|"+") DIGIT+ | DIGIT+)','FLOAT ::= DIGIT* "." DIGIT+ EXPONENT'},line=31},
		{op="TOKEN",name="ILLEGAL",pattern="[0123456789]+[A-Za-z_]",description= {"Numbers must not be followed immediately by an identifier"},line=33},
		{op="TOKEN",name="ILLEGAL",pattern="[0123456789]*[.][0123456789]+[A-Za-z_]",line=34},
		{op="TOKEN",name="ILLEGAL",pattern="[0123456789]*[.][0123456789]+[Ee][+-]{0,1}[0123456789]+[A-Za-z_]",line=35},
		{op="COMMENT",open="/*",close="*/",description= {"C style comments"},rule= {'COMMENT ::= "/*" ... "*/"'},line=6},
		{op="COMMENT",open="//",description= {"C++ style end of line comments"},rule= {'COMMENT ::= "//" ... "\\\\n"'},line=9},
		{op="PROD",left="program",right={{type="name",value="extern_definitionlist"},{type="name",value="free_definitionlist"},{type="name",value="main_procedure"}},call="program",startsymbol= {"program"},line=38},
		{op="PROD",left="extern_definitionlist",right={{type="name",value="extern_definition"},{type="name",value="extern_definitionlist"}},line=40},
		{op="PROD",left="extern_definitionlist",right={},line=41},
		{op="PROD",left="free_definitionlist",right={{type="name",value="free_definition"},{type="name",value="free_definitionlist"}},line=43},
		{op="PROD",left="free_definitionlist",right={},line=44},
		{op="PROD",left="namespace_definitionlist",right={{type="name",value="namespace_definition"},{type="name",value="namespace_definitionlist"}},line=46},
		{op="PROD",left="namespace_definitionlist",right={},line=47},
		{op="PROD",left="instruct_definitionlist",right={{type="name",value="instruct_definition"},{type="name",value="instruct_definitionlist"}},line=49},
		{op="PROD",left="instruct_definitionlist",right={},line=50},
		{op="PROD",left="inclass_definitionlist",right={{type="name",value="inclass_definition"},{type="name",value="inclass_definitionlist"}},line=52},
		{op="PROD",left="inclass_definitionlist",right={},line=53},
		{op="PROD",left="ininterf_definitionlist",right={{type="name",value="ininterf_definition"},{type="name",value="ininterf_definitionlist"}},line=55},
		{op="PROD",left="ininterf_definitionlist",right={},line=56},
		{op="PROD",left="extern_definition",right={{type="symbol",value="extern"},{type="name",value="DQSTRING"},{type="symbol",value="function"},{type="name",value="IDENT"},{type="name",value="typespec"},{type="symbol",value="("},{type="name",value="extern_paramlist"},{type="symbol",value=")"},{type="symbol",value=";"}},call="extern_funcdef",line=58},
		{op="PROD",left="extern_definition",right={{type="symbol",value="extern"},{type="name",value="DQSTRING"},{type="symbol",value="procedure"},{type="name",value="IDENT"},{type="symbol",value="("},{type="name",value="extern_paramlist"},{type="symbol",value=")"},{type="symbol",value=";"}},call="extern_procdef",line=59},
		{op="PROD",left="extern_definition",right={{type="symbol",value="extern"},{type="name",value="DQSTRING"},{type="symbol",value="function"},{type="name",value="IDENT"},{type="name",value="typespec"},{type="symbol",value="("},{type="name",value="extern_paramlist"},{type="symbol",value="..."},{type="symbol",value=")"},{type="symbol",value=";"}},call="extern_funcdef_vararg",line=60},
		{op="PROD",left="extern_definition",right={{type="symbol",value="extern"},{type="name",value="DQSTRING"},{type="symbol",value="procedure"},{type="name",value="IDENT"},{type="symbol",value="("},{type="name",value="extern_paramlist"},{type="symbol",value="..."},{type="symbol",value=")"},{type="symbol",value=";"}},call="extern_procdef_vararg",line=61},
		{op="PROD",left="extern_paramdecl",right={{type="name",value="typespec"},{type="name",value="IDENT"}},call="extern_paramdef",line=63},
		{op="PROD",left="extern_paramdecl",right={{type="name",value="typespec"}},call="extern_paramdef",line=64},
		{op="PROD",left="extern_parameters",right={{type="name",value="extern_paramdecl"},{type="symbol",value=","},{type="name",value="extern_parameters"}},call="extern_paramdef_collect",line=66},
		{op="PROD",left="extern_parameters",right={{type="name",value="extern_paramdecl"}},call="extern_paramdef_collect",line=67},
		{op="PROD",left="extern_paramlist",right={{type="name",value="extern_parameters"}},call="extern_paramdeflist",line=69},
		{op="PROD",left="extern_paramlist",right={},call="extern_paramdeflist",line=70},
		{op="PROD",left="ininterf_definition",right={{type="symbol",value="function"},{type="name",value="IDENT"},{type="name",value="typespec"},{type="symbol",value="("},{type="name",value="extern_paramlist"},{type="symbol",value=")"},{type="name",value="funcattribute"},{type="symbol",value=";"}},call="interface_funcdef",line=72},
		{op="PROD",left="ininterf_definition",right={{type="symbol",value="procedure"},{type="name",value="IDENT"},{type="symbol",value="("},{type="name",value="extern_paramlist"},{type="symbol",value=")"},{type="name",value="funcattribute"},{type="symbol",value=";"}},call="interface_procdef",line=73},
		{op="PROD",left="ininterf_definition",right={{type="symbol",value="operator"},{type="name",value="operatordecl"},{type="name",value="typespec"},{type="symbol",value="("},{type="name",value="extern_paramlist"},{type="symbol",value=")"},{type="name",value="funcattribute"},{type="symbol",value=";"}},call="interface_operator_funcdef",line=74},
		{op="PROD",left="ininterf_definition",right={{type="symbol",value="operator"},{type="name",value="operatordecl"},{type="symbol",value="("},{type="name",value="extern_paramlist"},{type="symbol",value=")"},{type="name",value="funcattribute"},{type="symbol",value=";"}},call="interface_operator_procdef",line=75},
		{op="PROD",left="funcattribute",right={{type="symbol",value="const"},{type="name",value="funcattribute"}},call="funcattribute {const=true}",line=77},
		{op="PROD",left="funcattribute",right={{type="symbol",value="nothrow"},{type="name",value="funcattribute"}},call="funcattribute {throws=false}",line=78},
		{op="PROD",left="funcattribute",right={},call="funcattribute {const=false,throws=true}",line=79},
		{op="PROD",left="instruct_definition",right={{type="name",value="typedefinition"},{type="symbol",value=";"}},call="definition 1",line=81},
		{op="PROD",left="instruct_definition",right={{type="name",value="variabledefinition"},{type="symbol",value=";"}},call="definition 2",line=82},
		{op="PROD",left="instruct_definition",right={{type="name",value="structdefinition"}},call="definition 1",line=83},
		{op="PROD",left="inclass_definition",right={{type="name",value="typedefinition"},{type="symbol",value=";"}},call="definition 1",line=85},
		{op="PROD",left="inclass_definition",right={{type="name",value="variabledefinition"},{type="symbol",value=";"}},call="definition 2",line=86},
		{op="PROD",left="inclass_definition",right={{type="name",value="structdefinition"}},call="definition 1",line=87},
		{op="PROD",left="inclass_definition",right={{type="name",value="classdefinition"}},call="definition 1",line=88},
		{op="PROD",left="inclass_definition",right={{type="name",value="interfacedefinition"}},call="definition 1",line=89},
		{op="PROD",left="inclass_definition",right={{type="name",value="functiondefinition"}},call="definition_2pass 4",line=90},
		{op="PROD",left="inclass_definition",right={{type="name",value="operatordefinition"}},call="definition_2pass 4",line=91},
		{op="PROD",left="inclass_definition",right={{type="name",value="constructordefinition"}},call="definition_2pass 4",line=92},
		{op="PROD",left="free_definition",right={{type="name",value="namespacedefinition"}},line=94},
		{op="PROD",left="free_definition",right={{type="name",value="typedefinition"},{type="symbol",value=";"}},call="definition 1",line=95},
		{op="PROD",left="free_definition",right={{type="name",value="variabledefinition"},{type="symbol",value=";"}},call="definition 1",line=96},
		{op="PROD",left="free_definition",right={{type="name",value="structdefinition"}},call="definition 1",line=97},
		{op="PROD",left="free_definition",right={{type="name",value="classdefinition"}},call="definition 1",line=98},
		{op="PROD",left="free_definition",right={{type="name",value="interfacedefinition"}},call="definition 1",line=99},
		{op="PROD",left="free_definition",right={{type="name",value="functiondefinition"}},call="definition 1",line=100},
		{op="PROD",left="namespace_definition",right={{type="name",value="namespacedefinition"}},call="definition 1",line=102},
		{op="PROD",left="namespace_definition",right={{type="name",value="typedefinition"},{type="symbol",value=";"}},call="definition 1",line=103},
		{op="PROD",left="namespace_definition",right={{type="name",value="structdefinition"}},call="definition 1",line=104},
		{op="PROD",left="namespace_definition",right={{type="name",value="classdefinition"}},call="definition 1",line=105},
		{op="PROD",left="namespace_definition",right={{type="name",value="interfacedefinition"}},call="definition 1",line=106},
		{op="PROD",left="namespace_definition",right={{type="name",value="functiondefinition"}},call="definition 1",line=107},
		{op="PROD",left="typename",right={{type="name",value="IDENT"}},priority="L1",line=109},
		{op="PROD",left="typename",right={{type="name",value="IDENT"},{type="symbol",value="::"},{type="name",value="typename"}},priority="L1",line=110},
		{op="PROD",left="typehdr",right={{type="name",value="typename"}},priority="L1",call="typehdr {const=false}",line=112},
		{op="PROD",left="typehdr",right={{type="symbol",value="const"},{type="name",value="typename"}},priority="L1",call="typehdr {const=true}",line=113},
		{op="PROD",left="typehdr",right={{type="symbol",value="any"},{type="symbol",value="class"},{type="symbol",value="^"}},priority="L1",call='typehdr_any "any class^"',line=114},
		{op="PROD",left="typehdr",right={{type="symbol",value="any"},{type="symbol",value="const"},{type="symbol",value="class"},{type="symbol",value="^"}},priority="L1",call='typehdr_any "any const class^"',line=115},
		{op="PROD",left="typehdr",right={{type="symbol",value="any"},{type="symbol",value="struct"},{type="symbol",value="^"}},priority="L1",call='typehdr_any "any struct^"',line=116},
		{op="PROD",left="typehdr",right={{type="symbol",value="any"},{type="symbol",value="const"},{type="symbol",value="struct"},{type="symbol",value="^"}},priority="L1",call='typehdr_any "any const struct^"',line=117},
		{op="PROD",left="typegen",right={{type="name",value="typehdr"}},priority="L1",line=119},
		{op="PROD",left="typegen",right={{type="name",value="typegen"},{type="symbol",value="["},{type="name",value="generic_instance"},{type="symbol",value="]"}},priority="L1",call="typegen_generic",line=120},
		{op="PROD",left="typegen",right={{type="name",value="typegen"},{type="symbol",value="^"}},priority="L1",call="typegen_pointer {const=false}",line=121},
		{op="PROD",left="typegen",right={{type="name",value="typegen"},{type="symbol",value="const"},{type="symbol",value="^"}},priority="L1",call="typegen_pointer {const=true}",line=122},
		{op="PROD",left="typespec",right={{type="name",value="typegen"}},priority="L1",call="typespec",line=124},
		{op="PROD",left="typespec",right={{type="name",value="typegen"},{type="symbol",value="&"}},priority="L1",call="typespec_ref",line=125},
		{op="PROD",left="typedefinition",right={{type="symbol",value="typedef"},{type="name",value="typegen"},{type="name",value="IDENT"}},call="typedef",line=127},
		{op="PROD",left="typedefinition",right={{type="symbol",value="typedef"},{type="symbol",value="function"},{type="name",value="IDENT"},{type="name",value="typespec"},{type="symbol",value="("},{type="name",value="extern_paramlist"},{type="symbol",value=")"}},call="typedef_functype {throws=true}",line=128},
		{op="PROD",left="typedefinition",right={{type="symbol",value="typedef"},{type="symbol",value="procedure"},{type="name",value="IDENT"},{type="symbol",value="("},{type="name",value="extern_paramlist"},{type="symbol",value=")"}},call="typedef_proctype {throws=true}",line=129},
		{op="PROD",left="typedefinition",right={{type="symbol",value="typedef"},{type="symbol",value="function"},{type="name",value="IDENT"},{type="name",value="typespec"},{type="symbol",value="("},{type="name",value="extern_paramlist"},{type="symbol",value=")"},{type="symbol",value="nothrow"}},call="typedef_functype {throws=false}",line=130},
		{op="PROD",left="typedefinition",right={{type="symbol",value="typedef"},{type="symbol",value="procedure"},{type="name",value="IDENT"},{type="symbol",value="("},{type="name",value="extern_paramlist"},{type="symbol",value=")"},{type="symbol",value="nothrow"}},call="typedef_proctype {throws=false}",line=131},
		{op="PROD",left="structdefinition",right={{type="symbol",value="struct"},{type="name",value="IDENT"},{type="symbol",value="{"},{type="name",value="instruct_definitionlist"},{type="symbol",value="}"}},call="structdef",line=133},
		{op="PROD",left="structdefinition",right={{type="symbol",value="generic"},{type="symbol",value="struct"},{type="name",value="IDENT"},{type="symbol",value="["},{type="name",value="generic_header"},{type="symbol",value="]"},{type="symbol",value="{"},{type="name",value="instruct_definitionlist"},{type="symbol",value="}"}},call="generic_structdef",line=134},
		{op="PROD",left="interfacedefinition",right={{type="symbol",value="interface"},{type="name",value="IDENT"},{type="symbol",value="{"},{type="name",value="ininterf_definitionlist"},{type="symbol",value="}"}},call="interfacedef",line=137},
		{op="PROD",left="inheritlist",right={{type="name",value="typegen"},{type="symbol",value=","},{type="name",value="inheritlist"}},call="inheritdef 1",line=139},
		{op="PROD",left="inheritlist",right={{type="name",value="typegen"}},call="inheritdef 1",line=140},
		{op="PROD",left="namespacedefinition",right={{type="symbol",value="namespace"},{type="name",value="IDENT"},{type="symbol",value="{"},{type="name",value="namespace_definitionlist"},{type="symbol",value="}"}},call="namespacedef",line=142},
		{op="PROD",left="classdefinition",right={{type="symbol",value="class"},{type="name",value="IDENT"},{type="symbol",value="{"},{type="name",value="inclass_definitionlist"},{type="symbol",value="}"}},call="classdef",line=144},
		{op="PROD",left="classdefinition",right={{type="symbol",value="class"},{type="name",value="IDENT"},{type="symbol",value=":"},{type="name",value="inheritlist"},{type="symbol",value="{"},{type="name",value="inclass_definitionlist"},{type="symbol",value="}"}},call="classdef",line=145},
		{op="PROD",left="classdefinition",right={{type="symbol",value="generic"},{type="symbol",value="class"},{type="name",value="IDENT"},{type="symbol",value="["},{type="name",value="generic_header"},{type="symbol",value="]"},{type="symbol",value="{"},{type="name",value="inclass_definitionlist"},{type="symbol",value="}"}},call="generic_classdef",line=146},
		{op="PROD",left="classdefinition",right={{type="symbol",value="generic"},{type="symbol",value="class"},{type="name",value="IDENT"},{type="symbol",value="["},{type="name",value="generic_header"},{type="symbol",value="]"},{type="symbol",value=":"},{type="name",value="inheritlist"},{type="symbol",value="{"},{type="name",value="inclass_definitionlist"},{type="symbol",value="}"}},call="generic_classdef",line=148},
		{op="PROD",left="linkage",right={{type="symbol",value="private"}},call='linkage {private=true,linkage="internal",explicit=true}',line=151},
		{op="PROD",left="linkage",right={{type="symbol",value="public"}},call='linkage {private=false,linkage="external",explicit=true}',line=152},
		{op="PROD",left="linkage",right={},call='linkage {private=false,linkage="external",explicit=false}',line=153},
		{op="PROD",left="functiondefinition",right={{type="name",value="linkage"},{type="symbol",value="function"},{type="name",value="IDENT"},{type="name",value="typespec"},{type="name",value="callablebody"}},call="funcdef",line=155},
		{op="PROD",left="functiondefinition",right={{type="name",value="linkage"},{type="symbol",value="procedure"},{type="name",value="IDENT"},{type="name",value="callablebody"}},call="procdef",line=156},
		{op="PROD",left="functiondefinition",right={{type="symbol",value="generic"},{type="name",value="linkage"},{type="symbol",value="function"},{type="name",value="IDENT"},{type="symbol",value="["},{type="name",value="generic_header"},{type="symbol",value="]"},{type="name",value="typespec"},{type="name",value="callablebody"}},call="generic_funcdef",line=157},
		{op="PROD",left="functiondefinition",right={{type="symbol",value="generic"},{type="name",value="linkage"},{type="symbol",value="procedure"},{type="name",value="IDENT"},{type="symbol",value="["},{type="name",value="generic_header"},{type="symbol",value="]"},{type="name",value="callablebody"}},call="generic_procdef",line=159},
		{op="PROD",left="constructordefinition",right={{type="name",value="linkage"},{type="symbol",value="constructor"},{type="name",value="callablebody"}},call="constructordef",line=162},
		{op="PROD",left="constructordefinition",right={{type="symbol",value="destructor"},{type="name",value="codeblock"}},call='destructordef {linkage="external"}',line=163},
		{op="PROD",left="operatordefinition",right={{type="name",value="linkage"},{type="symbol",value="operator"},{type="name",value="operatordecl"},{type="name",value="typespec"},{type="name",value="callablebody"}},call="operator_funcdef",line=165},
		{op="PROD",left="operatordefinition",right={{type="name",value="linkage"},{type="symbol",value="operator"},{type="name",value="operatordecl"},{type="name",value="callablebody"}},call="operator_procdef",line=166},
		{op="PROD",left="operatordecl",right={{type="symbol",value="->"}},call='operatordecl {name="->",symbol="arrow"}',line=168},
		{op="PROD",left="operatordecl",right={{type="symbol",value="="}},call='operatordecl {name="=",symbol="assign"}',line=169},
		{op="PROD",left="operatordecl",right={{type="symbol",value="+"}},call='operatordecl {name="+",symbol="plus"}',line=170},
		{op="PROD",left="operatordecl",right={{type="symbol",value="-"}},call='operatordecl {name="-",symbol="minus"}',line=171},
		{op="PROD",left="operatordecl",right={{type="symbol",value="*"}},call='operatordecl {name="*",symbol="mul"}',line=172},
		{op="PROD",left="operatordecl",right={{type="symbol",value="/"}},call='operatordecl {name="/",symbol="div"}',line=173},
		{op="PROD",left="operatordecl",right={{type="symbol",value="%"}},call='operatordecl {name="%",symbol="mod"}',line=174},
		{op="PROD",left="operatordecl",right={{type="symbol",value="&&"}},call='operatordecl {name="&&",symbol="and"}',line=175},
		{op="PROD",left="operatordecl",right={{type="symbol",value="||"}},call='operatordecl {name="||",symbol="or"}',line=176},
		{op="PROD",left="operatordecl",right={{type="symbol",value="&"}},call='operatordecl {name="&",symbol="bitand"}',line=177},
		{op="PROD",left="operatordecl",right={{type="symbol",value="|"}},call='operatordecl {name="|",symbol="bitor"}',line=178},
		{op="PROD",left="operatordecl",right={{type="symbol",value="<<"}},call='operatordecl {name="<<",symbol="lsh"}',line=179},
		{op="PROD",left="operatordecl",right={{type="symbol",value=">>"}},call='operatordecl {name=">>",symbol="rsh"}',line=180},
		{op="PROD",left="operatordecl",right={{type="symbol",value="~"}},call='operatordecl {name="~",symbol="lneg"}',line=181},
		{op="PROD",left="operatordecl",right={{type="symbol",value="!"}},call='operatordecl {name="!",symbol="not"}',line=182},
		{op="PROD",left="operatordecl",right={{type="symbol",value="("},{type="symbol",value=")"}},call='operatordecl {name="()",symbol="call"}',line=183},
		{op="PROD",left="operatordecl",right={{type="symbol",value="["},{type="symbol",value="]"}},call='operatordecl {name="[]",symbol="get"}',line=184},
		{op="PROD",left="operatordecl",right={{type="symbol",value="=="}},call='operatordecl {name="==",symbol="eq"}',line=185},
		{op="PROD",left="operatordecl",right={{type="symbol",value="!="}},call='operatordecl {name="!=",symbol="ne"}',line=186},
		{op="PROD",left="operatordecl",right={{type="symbol",value=">="}},call='operatordecl {name=">=",symbol="ge"}',line=187},
		{op="PROD",left="operatordecl",right={{type="symbol",value="<="}},call='operatordecl {name="<=",symbol="le"}',line=188},
		{op="PROD",left="operatordecl",right={{type="symbol",value=">"}},call='operatordecl {name=">",symbol="gt"}',line=189},
		{op="PROD",left="operatordecl",right={{type="symbol",value="<"}},call='operatordecl {name="<",symbol="lt"}',line=190},
		{op="PROD",left="lambda_paramlist",right={{type="name",value="lambda_parameters"}},call="lambda_paramdeflist",line=192},
		{op="PROD",left="lambda_paramlist",right={},call="lambda_paramdeflist",line=193},
		{op="PROD",left="lambda_parameters",right={{type="name",value="IDENT"},{type="symbol",value=","},{type="name",value="lambda_parameters"}},line=195},
		{op="PROD",left="lambda_parameters",right={{type="name",value="IDENT"}},line=196},
		{op="PROD",left="lamda_expression",right={{type="symbol",value="lambda"},{type="symbol",value="("},{type="name",value="lambda_paramlist"},{type="symbol",value=")"},{type="name",value="codeblock"}},call="lambda_expression",line=198},
		{op="PROD",left="generic_instance_defelem",right={{type="name",value="typegen"}},line=200},
		{op="PROD",left="generic_instance_defelem",right={{type="name",value="UINTEGER"}},call="generic_instance_dimension",line=201},
		{op="PROD",left="generic_instance_defelem",right={{type="name",value="lamda_expression"}},line=202},
		{op="PROD",left="generic_instance_deflist",right={{type="name",value="generic_instance_defelem"}},call="generic_instance_deflist",line=204},
		{op="PROD",left="generic_instance_deflist",right={{type="name",value="generic_instance_defelem"},{type="symbol",value=","},{type="name",value="generic_instance_deflist"}},call="generic_instance_deflist",line=205},
		{op="PROD",left="generic_instance",right={{type="name",value="generic_instance_deflist"}},call="generic_instance",line=207},
		{op="PROD",left="generic_defaultlist",right={{type="name",value="IDENT"},{type="symbol",value="="},{type="name",value="typegen"},{type="symbol",value=","},{type="name",value="generic_defaultlist"}},call="generic_header_ident_type",line=209},
		{op="PROD",left="generic_defaultlist",right={{type="name",value="IDENT"},{type="symbol",value="="},{type="name",value="typegen"}},call="generic_header_ident_type",line=210},
		{op="PROD",left="generic_identlist",right={{type="name",value="IDENT"},{type="symbol",value=","},{type="name",value="generic_identlist"}},call="generic_header_ident",line=212},
		{op="PROD",left="generic_identlist",right={{type="name",value="IDENT"},{type="symbol",value=","},{type="name",value="generic_defaultlist"}},call="generic_header_ident",line=213},
		{op="PROD",left="generic_identlist",right={{type="name",value="IDENT"}},call="generic_header_ident",line=214},
		{op="PROD",left="generic_header",right={{type="name",value="generic_identlist"}},call="generic_header",line=216},
		{op="PROD",left="generic_header",right={{type="name",value="generic_defaultlist"}},call="generic_header",line=217},
		{op="PROD",left="callablebody",right={{type="symbol",value="("},{type="name",value="impl_paramlist"},{type="symbol",value=")"},{type="name",value="funcattribute"},{type="symbol",value="{"},{type="name",value="statementlist"},{type="symbol",value="}"}},scope="{}",call="callablebody",line=219},
		{op="PROD",left="main_procedure",right={{type="symbol",value="main"},{type="name",value="codeblock"}},call="main_procdef",line=221},
		{op="PROD",left="main_procedure",right={},line=222},
		{op="PROD",left="impl_paramlist",right={{type="name",value="impl_parameters"}},call="paramdeflist",line=224},
		{op="PROD",left="impl_paramlist",right={},call="paramdeflist",line=225},
		{op="PROD",left="impl_parameters",right={{type="name",value="impl_paramdecl"},{type="symbol",value=","},{type="name",value="impl_parameters"}},line=227},
		{op="PROD",left="impl_parameters",right={{type="name",value="impl_paramdecl"}},line=228},
		{op="PROD",left="impl_paramdecl",right={{type="name",value="typespec"},{type="name",value="IDENT"}},call="paramdef",line=230},
		{op="PROD",left="codeblock",right={{type="symbol",value="{"},{type="name",value="statementlist"},{type="symbol",value="}"}},priority="L1",scope="{}",call="codeblock",line=232},
		{op="PROD",left="statementlist",right={{type="name",value="statement"},{type="name",value="statementlist"}},priority="L1",scope=">>",line=234},
		{op="PROD",left="statementlist",right={},priority="L1",line=235},
		{op="PROD",left="elseblock",right={{type="symbol",value="elseif"},{type="symbol",value="("},{type="name",value="expression"},{type="symbol",value=")"},{type="name",value="codeblock"},{type="name",value="elseblock"}},priority="L1",call="conditional_elseif",line=237},
		{op="PROD",left="elseblock",right={{type="symbol",value="elseif"},{type="symbol",value="("},{type="name",value="expression"},{type="symbol",value=")"},{type="name",value="codeblock"}},priority="L1",call="conditional_elseif",line=238},
		{op="PROD",left="elseblock",right={{type="symbol",value="else"},{type="name",value="codeblock"}},priority="L1",call="conditional_else",line=239},
		{op="PROD",left="catchblock",right={{type="symbol",value="catch"},{type="name",value="IDENT"},{type="name",value="codeblock"}},scope=">>",call="catchblock",line=241},
		{op="PROD",left="catchblock",right={{type="symbol",value="catch"},{type="name",value="IDENT"},{type="symbol",value=","},{type="name",value="IDENT"},{type="name",value="codeblock"}},scope=">>",call="catchblock",line=242},
		{op="PROD",left="tryblock",right={{type="symbol",value="try"},{type="name",value="codeblock"}},call="tryblock",line=244},
		{op="PROD",left="statement",right={{type="name",value="structdefinition"}},priority="L1",call="definition 1",line=246},
		{op="PROD",left="statement",right={{type="name",value="classdefinition"}},priority="L1",call="definition 1",line=247},
		{op="PROD",left="statement",right={{type="name",value="functiondefinition"}},priority="L1",call="definition 1",line=248},
		{op="PROD",left="statement",right={{type="name",value="typedefinition"},{type="symbol",value=";"}},priority="L1",call="definition 1",line=249},
		{op="PROD",left="statement",right={{type="symbol",value="var"},{type="name",value="variabledefinition"},{type="symbol",value=";"}},priority="L1",scope=">>",call="definition 1",line=250},
		{op="PROD",left="statement",right={{type="name",value="expression"},{type="symbol",value=";"}},priority="L1",call="free_expression",line=251},
		{op="PROD",left="statement",right={{type="symbol",value="return"},{type="name",value="expression"},{type="symbol",value=";"}},priority="L1",scope=">>",call="return_value",line=252},
		{op="PROD",left="statement",right={{type="symbol",value="return"},{type="symbol",value=";"}},priority="L1",scope=">>",call="return_void",line=253},
		{op="PROD",left="statement",right={{type="symbol",value="throw"},{type="name",value="expression"},{type="symbol",value=","},{type="name",value="expression"},{type="symbol",value=";"}},priority="L1",call="throw_exception",line=254},
		{op="PROD",left="statement",right={{type="symbol",value="throw"},{type="name",value="expression"},{type="symbol",value=";"}},priority="L1",call="throw_exception",line=255},
		{op="PROD",left="statement",right={{type="name",value="tryblock"},{type="name",value="catchblock"}},priority="L1",scope="{}",call="trycatch",line=256},
		{op="PROD",left="statement",right={{type="symbol",value="delete"},{type="name",value="expression"},{type="symbol",value=";"}},priority="L1",call="delete",line=257},
		{op="PROD",left="statement",right={{type="symbol",value="if"},{type="symbol",value="("},{type="name",value="expression"},{type="symbol",value=")"},{type="name",value="codeblock"},{type="name",value="elseblock"}},priority="L1",call="conditional_if",line=258},
		{op="PROD",left="statement",right={{type="symbol",value="if"},{type="symbol",value="("},{type="name",value="expression"},{type="symbol",value=")"},{type="name",value="codeblock"}},priority="L1",call="conditional_if",line=259},
		{op="PROD",left="statement",right={{type="symbol",value="while"},{type="symbol",value="("},{type="name",value="expression"},{type="symbol",value=")"},{type="name",value="codeblock"}},priority="L1",call="conditional_while",line=260},
		{op="PROD",left="statement",right={{type="symbol",value="with"},{type="symbol",value="("},{type="name",value="expression"},{type="symbol",value=")"},{type="name",value="codeblock"}},priority="L1",call="with_do",line=261},
		{op="PROD",left="statement",right={{type="symbol",value="with"},{type="symbol",value="("},{type="name",value="expression"},{type="symbol",value=")"},{type="symbol",value=";"}},priority="L1",call="with_do",line=262},
		{op="PROD",left="statement",right={{type="name",value="codeblock"}},priority="L1",line=263},
		{op="PROD",left="variabledefinition",right={{type="name",value="typespec"},{type="name",value="IDENT"}},scope=">>",call="vardef",line=265},
		{op="PROD",left="variabledefinition",right={{type="name",value="typespec"},{type="name",value="IDENT"},{type="symbol",value="="},{type="name",value="expression"}},scope=">>",call="vardef",line=266},
		{op="PROD",left="expression",right={{type="symbol",value="{"},{type="name",value="expressionlist"},{type="symbol",value="}"}},priority="L1",scope=">>",call="structure",line=268},
		{op="PROD",left="expression",right={{type="symbol",value="{"},{type="symbol",value="}"}},priority="L1",scope=">>",call="structure",line=269},
		{op="PROD",left="expression",right={{type="symbol",value="new"},{type="name",value="typespec"},{type="symbol",value=":"},{type="name",value="expression"}},priority="L1",scope=">>",call="allocate",line=270},
		{op="PROD",left="expression",right={{type="symbol",value="cast"},{type="name",value="typespec"},{type="symbol",value=":"},{type="name",value="expression"}},priority="L1",scope=">>",call="typecast",line=271},
		{op="PROD",left="expression",right={{type="name",value="IDENT"}},priority="L2",call="variable",line=273},
		{op="PROD",left="expression",right={{type="name",value="BOOLEAN"}},priority="L2",call='constant "constexpr bool"',line=274},
		{op="PROD",left="expression",right={{type="name",value="UINTEGER"}},priority="L2",call='constant "constexpr uint"',line=275},
		{op="PROD",left="expression",right={{type="name",value="FLOAT"}},priority="L2",call='constant "constexpr float"',line=276},
		{op="PROD",left="expression",right={{type="symbol",value="null"}},priority="L2",call="null",line=277},
		{op="PROD",left="expression",right={{type="name",value="DQSTRING"}},priority="L2",call="string_constant",line=278},
		{op="PROD",left="expression",right={{type="name",value="SQSTRING"}},priority="L2",call="char_constant",line=279},
		{op="PROD",left="expression",right={{type="name",value="lamda_expression"}},priority="L2",line=280},
		{op="PROD",left="expression",right={{type="symbol",value="("},{type="name",value="expression"},{type="symbol",value=")"}},priority="L2",line=281},
		{op="PROD",left="expression",right={{type="name",value="expression"},{type="symbol",value="="},{type="name",value="expression"}},priority="L3",scope=">>",call='binop "="',line=283},
		{op="PROD",left="expression",right={{type="name",value="expression"},{type="symbol",value="+="},{type="name",value="expression"}},priority="L3",scope=">>",call='assign_operator "+"',line=284},
		{op="PROD",left="expression",right={{type="name",value="expression"},{type="symbol",value="-="},{type="name",value="expression"}},priority="L3",scope=">>",call='assign_operator "-"',line=285},
		{op="PROD",left="expression",right={{type="name",value="expression"},{type="symbol",value="*="},{type="name",value="expression"}},priority="L3",scope=">>",call='assign_operator "*"',line=286},
		{op="PROD",left="expression",right={{type="name",value="expression"},{type="symbol",value="/="},{type="name",value="expression"}},priority="L3",scope=">>",call='assign_operator "/"',line=287},
		{op="PROD",left="expression",right={{type="name",value="expression"},{type="symbol",value="^="},{type="name",value="expression"}},priority="L3",scope=">>",call='assign_operator "^"',line=288},
		{op="PROD",left="expression",right={{type="name",value="expression"},{type="symbol",value="&="},{type="name",value="expression"}},priority="L3",scope=">>",call='assign_operator "&"',line=289},
		{op="PROD",left="expression",right={{type="name",value="expression"},{type="symbol",value="%="},{type="name",value="expression"}},priority="L3",scope=">>",call='assign_operator "%"',line=290},
		{op="PROD",left="expression",right={{type="name",value="expression"},{type="symbol",value="&&="},{type="name",value="expression"}},priority="L3",scope=">>",call='assign_operator "&&"',line=291},
		{op="PROD",left="expression",right={{type="name",value="expression"},{type="symbol",value="||="},{type="name",value="expression"}},priority="L3",scope=">>",call='assign_operator "||"',line=292},
		{op="PROD",left="expression",right={{type="name",value="expression"},{type="symbol",value="&="},{type="name",value="expression"}},priority="L3",scope=">>",call='assign_operator "&"',line=293},
		{op="PROD",left="expression",right={{type="name",value="expression"},{type="symbol",value="|="},{type="name",value="expression"}},priority="L3",scope=">>",call='assign_operator "|"',line=294},
		{op="PROD",left="expression",right={{type="name",value="expression"},{type="symbol",value="<<="},{type="name",value="expression"}},priority="L3",scope=">>",call='assign_operator "<<"',line=295},
		{op="PROD",left="expression",right={{type="name",value="expression"},{type="symbol",value=">>="},{type="name",value="expression"}},priority="L3",scope=">>",call='assign_operator ">>"',line=296},
		{op="PROD",left="expression",right={{type="name",value="expression"},{type="symbol",value="||"},{type="name",value="expression"}},priority="L4",scope=">>",call='binop "||"',line=298},
		{op="PROD",left="expression",right={{type="name",value="expression"},{type="symbol",value="&&"},{type="name",value="expression"}},priority="L5",scope=">>",call='binop "&&"',line=300},
		{op="PROD",left="expression",right={{type="name",value="expression"},{type="symbol",value="|"},{type="name",value="expression"}},priority="L6",scope=">>",call='binop "|"',line=302},
		{op="PROD",left="expression",right={{type="name",value="expression"},{type="symbol",value="^"},{type="name",value="expression"}},priority="L7",scope=">>",call='binop "^"',line=304},
		{op="PROD",left="expression",right={{type="name",value="expression"},{type="symbol",value="&"},{type="name",value="expression"}},priority="L7",scope=">>",call='binop "&"',line=305},
		{op="PROD",left="expression",right={{type="name",value="expression"},{type="symbol",value="=="},{type="name",value="expression"}},priority="L8",scope=">>",call='binop "=="',line=307},
		{op="PROD",left="expression",right={{type="name",value="expression"},{type="symbol",value="!="},{type="name",value="expression"}},priority="L8",scope=">>",call='binop "!="',line=308},
		{op="PROD",left="expression",right={{type="name",value="expression"},{type="symbol",value="<="},{type="name",value="expression"}},priority="L8",scope=">>",call='binop "<="',line=309},
		{op="PROD",left="expression",right={{type="name",value="expression"},{type="symbol",value="<"},{type="name",value="expression"}},priority="L8",scope=">>",call='binop "<"',line=310},
		{op="PROD",left="expression",right={{type="name",value="expression"},{type="symbol",value=">="},{type="name",value="expression"}},priority="L8",scope=">>",call='binop ">="',line=311},
		{op="PROD",left="expression",right={{type="name",value="expression"},{type="symbol",value=">"},{type="name",value="expression"}},priority="L8",scope=">>",call='binop ">"',line=312},
		{op="PROD",left="expression",right={{type="name",value="expression"},{type="symbol",value="+"},{type="name",value="expression"}},priority="L9",scope=">>",call='binop "+"',line=314},
		{op="PROD",left="expression",right={{type="name",value="expression"},{type="symbol",value="-"},{type="name",value="expression"}},priority="L9",scope=">>",call='binop "-"',line=315},
		{op="PROD",left="expression",right={{type="symbol",value="&"},{type="name",value="expression"}},priority="L9",call='operator_address "&"',line=316},
		{op="PROD",left="expression",right={{type="symbol",value="-"},{type="name",value="expression"}},priority="L9",scope=">>",call='unop "-"',line=317},
		{op="PROD",left="expression",right={{type="symbol",value="+"},{type="name",value="expression"}},priority="L9",scope=">>",call='unop "+"',line=318},
		{op="PROD",left="expression",right={{type="symbol",value="~"},{type="name",value="expression"}},priority="L9",scope=">>",call='unop "~"',line=319},
		{op="PROD",left="expression",right={{type="symbol",value="!"},{type="name",value="expression"}},priority="L9",scope=">>",call='unop "!"',line=320},
		{op="PROD",left="expression",right={{type="name",value="expression"},{type="symbol",value="*"},{type="name",value="expression"}},priority="L10",scope=">>",call='binop "*"',line=322},
		{op="PROD",left="expression",right={{type="name",value="expression"},{type="symbol",value="/"},{type="name",value="expression"}},priority="L10",scope=">>",call='binop "/"',line=323},
		{op="PROD",left="expression",right={{type="name",value="expression"},{type="symbol",value="%"},{type="name",value="expression"}},priority="L10",scope=">>",call='binop "%"',line=324},
		{op="PROD",left="expression",right={{type="name",value="expression"},{type="symbol",value="<<"},{type="name",value="expression"}},priority="L11",scope=">>",call='binop "<<"',line=326},
		{op="PROD",left="expression",right={{type="name",value="expression"},{type="symbol",value=">>"},{type="name",value="expression"}},priority="L11",scope=">>",call='binop ">>"',line=327},
		{op="PROD",left="expression",right={{type="name",value="iexpression"}},priority="L12",line=329},
		{op="PROD",left="expression",right={{type="name",value="expression"},{type="symbol",value="."},{type="name",value="IDENT"}},priority="L12",call="member",line=330},
		{op="PROD",left="expression",right={{type="symbol",value="*"},{type="name",value="expression"}},priority="L12",scope=">>",call='unop "->"',line=331},
		{op="PROD",left="expression",right={{type="name",value="expression"},{type="symbol",value="("},{type="name",value="expressionlist"},{type="symbol",value=")"}},priority="L13",scope=">>",call='operator "()"',line=333},
		{op="PROD",left="expression",right={{type="name",value="expression"},{type="symbol",value="("},{type="symbol",value=")"}},priority="L13",scope=">>",call='operator "()"',line=334},
		{op="PROD",left="expression",right={{type="name",value="expression"},{type="symbol",value="["},{type="name",value="expressionlist"},{type="symbol",value="]"}},priority="L13",scope=">>",call='operator_array "[]"',line=335},
		{op="PROD",left="iexpression",right={{type="name",value="expression"},{type="name",value="indirection"},{type="name",value="IDENT"}},priority="L14",call='rep_operator "->"',line=337},
		{op="PROD",left="indirection",right={{type="symbol",value="->"},{type="name",value="indirection"}},priority="L14",call="count",line=339},
		{op="PROD",left="indirection",right={{type="symbol",value="->"}},priority="L14",call="count",line=340},
		{op="PROD",left="expressionlist",right={{type="name",value="expression"},{type="symbol",value=","},{type="name",value="expressionlist"}},priority="L0",line=342},
		{op="PROD",left="expressionlist",right={{type="name",value="expression"}},priority="L0",line=343}
	}
}
return languagedef

