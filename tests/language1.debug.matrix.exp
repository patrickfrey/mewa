Shift token "extern" at line 3 in state XXX, goto XXX
Shift token DQSTRING = "C" at line 3 in state XXX, goto XXX
Shift token "procedure" at line 3 in state XXX, goto XXX
Shift token IDENT = "printf" at line 3 in state XXX, goto XXX
Shift token '(' at line 3 in state XXX, goto XXX
Shift token "const" at line 3 in state XXX, goto XXX
Shift token IDENT = "byte" at line 3 in state XXX, goto XXX
Reduce #1 to typename by token '^' at line 3 in state XXX, goto XXX
Reduce #2 to typehdr by token '^' at line 3 in state XXX, call typehdr {const=true}, goto XXX
Reduce #1 to typegen by token '^' at line 3 in state XXX, goto XXX
Shift token '^' at line 3 in state XXX, goto XXX
Reduce #2 to typegen by token IDENT = "fmt" at line 3 in state XXX, call typegen_pointer {const=false}, goto XXX
Reduce #1 to typespec by token IDENT = "fmt" at line 3 in state XXX, call typespec, goto XXX
Shift token IDENT = "fmt" at line 3 in state XXX, goto XXX
Reduce #2 to extern_parameters by token "..." at line 3 in state XXX, call extern_paramdeftail, goto XXX
Reduce #1 to extern_paramlist by token "..." at line 3 in state XXX, call extern_paramdeflist, goto XXX
Shift token "..." at line 3 in state XXX, goto XXX
Shift token ')' at line 3 in state XXX, goto XXX
Shift token ';' at line 3 in state XXX, goto XXX
Reduce #9 to extern_definition by token IDENT = "double" at line 5 in state XXX, call extern_procdef_vararg, goto XXX
Reduce #0 to extern_definitionlist by token IDENT = "double" at line 5 in state XXX, goto XXX
Reduce #2 to extern_definitionlist by token IDENT = "double" at line 5 in state XXX, goto XXX
Shift token IDENT = "double" at line 5 in state XXX, goto XXX
Reduce #1 to typename by token IDENT = "epsilon" at line 5 in state XXX, goto XXX
Reduce #1 to typehdr by token IDENT = "epsilon" at line 5 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token IDENT = "epsilon" at line 5 in state XXX, goto XXX
Reduce #1 to typespec by token IDENT = "epsilon" at line 5 in state XXX, call typespec, goto XXX
Shift token IDENT = "epsilon" at line 5 in state XXX, goto XXX
Shift token '=' at line 5 in state XXX, goto XXX
Shift token FLOAT = "1.11e-16" at line 5 in state XXX, goto XXX
Reduce #1 to expression by token ';' at line 5 in state XXX, call constant "constexpr float", goto XXX
Reduce #4 to variabledefinition by token ';' at line 5 in state XXX, call vardef_assign, goto XXX
Shift token ';' at line 5 in state XXX, goto XXX
Reduce #2 to free_definition by token "function" at line 7 in state XXX, call definition 1, goto XXX
Reduce #0 to linkage by token "function" at line 7 in state XXX, call linkage {private=false,linkage="external",explicit=false}, goto XXX
Shift token "function" at line 7 in state XXX, goto XXX
Shift token IDENT = "sgn" at line 7 in state XXX, goto XXX
Shift token IDENT = "int" at line 7 in state XXX, goto XXX
Reduce #1 to typename by token '(' at line 7 in state XXX, goto XXX
Reduce #1 to typehdr by token '(' at line 7 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token '(' at line 7 in state XXX, goto XXX
Reduce #1 to typespec by token '(' at line 7 in state XXX, call typespec, goto XXX
Shift token '(' at line 7 in state XXX, goto XXX
Shift token IDENT = "double" at line 7 in state XXX, goto XXX
Reduce #1 to typename by token IDENT = "val" at line 7 in state XXX, goto XXX
Reduce #1 to typehdr by token IDENT = "val" at line 7 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token IDENT = "val" at line 7 in state XXX, goto XXX
Reduce #1 to typespec by token IDENT = "val" at line 7 in state XXX, call typespec, goto XXX
Shift token IDENT = "val" at line 7 in state XXX, goto XXX
Reduce #2 to paramdecl by token ')' at line 7 in state XXX, call paramdef, goto XXX
Reduce #1 to parameters by token ')' at line 7 in state XXX, goto XXX
Reduce #1 to parameterlist by token ')' at line 7 in state XXX, call paramdeflist, goto XXX
Shift token ')' at line 7 in state XXX, goto XXX
Shift token "nothrow" at line 7 in state XXX, goto XXX
Shift token '{' at line 8 in state XXX, goto XXX
Shift token "if" at line 9 in state XXX, goto XXX
Shift token '(' at line 9 in state XXX, goto XXX
Shift token IDENT = "val" at line 9 in state XXX, goto XXX
Reduce #1 to expression by token ">=" at line 9 in state XXX, call variable, goto XXX
Shift token ">=" at line 9 in state XXX, goto XXX
Shift token IDENT = "epsilon" at line 9 in state XXX, goto XXX
Reduce #1 to expression by token ')' at line 9 in state XXX, call variable, goto XXX
Reduce #3 to expression by token ')' at line 9 in state XXX, call binop ">=", goto XXX
Shift token ')' at line 9 in state XXX, goto XXX
Shift token '{' at line 10 in state XXX, goto XXX
Shift token "return" at line 11 in state XXX, goto XXX
Shift token UINTEGER = "1" at line 11 in state XXX, goto XXX
Reduce #1 to expression by token ';' at line 11 in state XXX, call constant "constexpr uint", goto XXX
Shift token ';' at line 11 in state XXX, goto XXX
Reduce #3 to statement by token '}' at line 12 in state XXX, call return_value, goto XXX
Reduce #0 to statementlist by token '}' at line 12 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 12 in state XXX, goto XXX
Shift token '}' at line 12 in state XXX, goto XXX
Reduce #3 to codeblock by token "elseif" at line 13 in state XXX, call codeblock, goto XXX
Shift token "elseif" at line 13 in state XXX, goto XXX
Shift token '(' at line 13 in state XXX, goto XXX
Shift token IDENT = "val" at line 13 in state XXX, goto XXX
Reduce #1 to expression by token "<=" at line 13 in state XXX, call variable, goto XXX
Shift token "<=" at line 13 in state XXX, goto XXX
Shift token '-' at line 13 in state XXX, goto XXX
Shift token IDENT = "epsilon" at line 13 in state XXX, goto XXX
Reduce #1 to expression by token ')' at line 13 in state XXX, call variable, goto XXX
Reduce #2 to expression by token ')' at line 13 in state XXX, call unop "-", goto XXX
Reduce #3 to expression by token ')' at line 13 in state XXX, call binop "<=", goto XXX
Shift token ')' at line 13 in state XXX, goto XXX
Shift token '{' at line 14 in state XXX, goto XXX
Shift token "return" at line 15 in state XXX, goto XXX
Shift token SINTEGER = "-1" at line 15 in state XXX, goto XXX
Reduce #1 to expression by token ';' at line 15 in state XXX, call constant "constexpr int", goto XXX
Shift token ';' at line 15 in state XXX, goto XXX
Reduce #3 to statement by token '}' at line 16 in state XXX, call return_value, goto XXX
Reduce #0 to statementlist by token '}' at line 16 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 16 in state XXX, goto XXX
Shift token '}' at line 16 in state XXX, goto XXX
Reduce #3 to codeblock by token "else" at line 17 in state XXX, call codeblock, goto XXX
Shift token "else" at line 17 in state XXX, goto XXX
Shift token '{' at line 18 in state XXX, goto XXX
Shift token "return" at line 19 in state XXX, goto XXX
Shift token UINTEGER = "0" at line 19 in state XXX, goto XXX
Reduce #1 to expression by token ';' at line 19 in state XXX, call constant "constexpr uint", goto XXX
Shift token ';' at line 19 in state XXX, goto XXX
Reduce #3 to statement by token '}' at line 20 in state XXX, call return_value, goto XXX
Reduce #0 to statementlist by token '}' at line 20 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 20 in state XXX, goto XXX
Shift token '}' at line 20 in state XXX, goto XXX
Reduce #3 to codeblock by token '}' at line 21 in state XXX, call codeblock, goto XXX
Reduce #2 to elseblock by token '}' at line 21 in state XXX, call conditional_else, goto XXX
Reduce #6 to elseblock by token '}' at line 21 in state XXX, call conditional_elseif, goto XXX
Reduce #6 to statement by token '}' at line 21 in state XXX, call conditional_if, goto XXX
Reduce #0 to statementlist by token '}' at line 21 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 21 in state XXX, goto XXX
Shift token '}' at line 21 in state XXX, goto XXX
Reduce #7 to callablebody by token "generic" at line 23 in state XXX, call callablebody {throws=false,const=false}, goto XXX
Reduce #5 to functiondefinition by token "generic" at line 23 in state XXX, call funcdef, goto XXX
Reduce #1 to free_definition by token "generic" at line 23 in state XXX, call definition 1, goto XXX
Shift token "generic" at line 23 in state XXX, goto XXX
Shift token "class" at line 23 in state XXX, goto XXX
Shift token IDENT = "Matrix" at line 23 in state XXX, goto XXX
Shift token '[' at line 23 in state XXX, goto XXX
Shift token IDENT = "R" at line 23 in state XXX, goto XXX
Shift token ',' at line 23 in state XXX, goto XXX
Shift token IDENT = "DIM1" at line 23 in state XXX, goto XXX
Shift token ',' at line 23 in state XXX, goto XXX
Shift token IDENT = "DIM2" at line 23 in state XXX, goto XXX
Reduce #1 to generic_identlist by token ']' at line 23 in state XXX, call generic_header_ident, goto XXX
Reduce #3 to generic_identlist by token ']' at line 23 in state XXX, call generic_header_ident, goto XXX
Reduce #3 to generic_identlist by token ']' at line 23 in state XXX, call generic_header_ident, goto XXX
Reduce #1 to generic_header by token ']' at line 23 in state XXX, call generic_header, goto XXX
Shift token ']' at line 23 in state XXX, goto XXX
Shift token '{' at line 24 in state XXX, goto XXX
Reduce #0 to linkage by token "constructor" at line 25 in state XXX, call linkage {private=false,linkage="external",explicit=false}, goto XXX
Shift token "constructor" at line 25 in state XXX, goto XXX
Shift token '(' at line 25 in state XXX, goto XXX
Reduce #0 to parameterlist by token ')' at line 25 in state XXX, call paramdeflist, goto XXX
Shift token ')' at line 25 in state XXX, goto XXX
Shift token "nothrow" at line 25 in state XXX, goto XXX
Shift token '{' at line 26 in state XXX, goto XXX
Shift token IDENT = "m_ar" at line 27 in state XXX, goto XXX
Reduce #1 to expression by token '=' at line 27 in state XXX, call variable, goto XXX
Shift token '=' at line 27 in state XXX, goto XXX
Shift token '{' at line 27 in state XXX, goto XXX
Shift token '}' at line 27 in state XXX, goto XXX
Reduce #2 to expression by token ';' at line 27 in state XXX, call structure, goto XXX
Reduce #3 to expression by token ';' at line 27 in state XXX, call binop "=", goto XXX
Shift token ';' at line 27 in state XXX, goto XXX
Reduce #2 to statement by token '}' at line 28 in state XXX, call free_expression, goto XXX
Reduce #0 to statementlist by token '}' at line 28 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 28 in state XXX, goto XXX
Shift token '}' at line 28 in state XXX, goto XXX
Reduce #7 to callablebody by token "constructor" at line 29 in state XXX, call callablebody {throws=false,const=false}, goto XXX
Reduce #3 to constructordefinition by token "constructor" at line 29 in state XXX, call constructordef, goto XXX
Reduce #1 to inclass_definition by token "constructor" at line 29 in state XXX, call definition_decl_impl_pass 4, goto XXX
Reduce #0 to linkage by token "constructor" at line 29 in state XXX, call linkage {private=false,linkage="external",explicit=false}, goto XXX
Shift token "constructor" at line 29 in state XXX, goto XXX
Shift token '(' at line 29 in state XXX, goto XXX
Shift token "const" at line 29 in state XXX, goto XXX
Shift token IDENT = "R" at line 29 in state XXX, goto XXX
Reduce #1 to typename by token '[' at line 29 in state XXX, goto XXX
Reduce #2 to typehdr by token '[' at line 29 in state XXX, call typehdr {const=true}, goto XXX
Reduce #1 to typegen by token '[' at line 29 in state XXX, goto XXX
Shift token '[' at line 29 in state XXX, goto XXX
Shift token IDENT = "DIM2" at line 29 in state XXX, goto XXX
Reduce #1 to typename by token ']' at line 29 in state XXX, goto XXX
Reduce #1 to typehdr by token ']' at line 29 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token ']' at line 29 in state XXX, goto XXX
Reduce #1 to generic_instance_deflist by token ']' at line 29 in state XXX, call generic_instance_type, goto XXX
Reduce #1 to generic_instance by token ']' at line 29 in state XXX, call generic_instance, goto XXX
Shift token ']' at line 29 in state XXX, goto XXX
Reduce #4 to typegen by token '[' at line 29 in state XXX, call typegen_generic, goto XXX
Shift token '[' at line 29 in state XXX, goto XXX
Shift token IDENT = "DIM1" at line 29 in state XXX, goto XXX
Reduce #1 to typename by token ']' at line 29 in state XXX, goto XXX
Reduce #1 to typehdr by token ']' at line 29 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token ']' at line 29 in state XXX, goto XXX
Reduce #1 to generic_instance_deflist by token ']' at line 29 in state XXX, call generic_instance_type, goto XXX
Reduce #1 to generic_instance by token ']' at line 29 in state XXX, call generic_instance, goto XXX
Shift token ']' at line 29 in state XXX, goto XXX
Reduce #4 to typegen by token IDENT = "ar_" at line 29 in state XXX, call typegen_generic, goto XXX
Reduce #1 to typespec by token IDENT = "ar_" at line 29 in state XXX, call typespec, goto XXX
Shift token IDENT = "ar_" at line 29 in state XXX, goto XXX
Reduce #2 to paramdecl by token ')' at line 29 in state XXX, call paramdef, goto XXX
Reduce #1 to parameters by token ')' at line 29 in state XXX, goto XXX
Reduce #1 to parameterlist by token ')' at line 29 in state XXX, call paramdeflist, goto XXX
Shift token ')' at line 29 in state XXX, goto XXX
Shift token "nothrow" at line 29 in state XXX, goto XXX
Shift token '{' at line 30 in state XXX, goto XXX
Shift token IDENT = "m_ar" at line 31 in state XXX, goto XXX
Reduce #1 to expression by token '=' at line 31 in state XXX, call variable, goto XXX
Shift token '=' at line 31 in state XXX, goto XXX
Shift token IDENT = "ar_" at line 31 in state XXX, goto XXX
Reduce #1 to expression by token ';' at line 31 in state XXX, call variable, goto XXX
Reduce #3 to expression by token ';' at line 31 in state XXX, call binop "=", goto XXX
Shift token ';' at line 31 in state XXX, goto XXX
Reduce #2 to statement by token '}' at line 32 in state XXX, call free_expression, goto XXX
Reduce #0 to statementlist by token '}' at line 32 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 32 in state XXX, goto XXX
Shift token '}' at line 32 in state XXX, goto XXX
Reduce #7 to callablebody by token "constructor" at line 33 in state XXX, call callablebody {throws=false,const=false}, goto XXX
Reduce #3 to constructordefinition by token "constructor" at line 33 in state XXX, call constructordef, goto XXX
Reduce #1 to inclass_definition by token "constructor" at line 33 in state XXX, call definition_decl_impl_pass 4, goto XXX
Reduce #0 to linkage by token "constructor" at line 33 in state XXX, call linkage {private=false,linkage="external",explicit=false}, goto XXX
Shift token "constructor" at line 33 in state XXX, goto XXX
Shift token '(' at line 33 in state XXX, goto XXX
Shift token "const" at line 33 in state XXX, goto XXX
Shift token IDENT = "Matrix" at line 33 in state XXX, goto XXX
Reduce #1 to typename by token '[' at line 33 in state XXX, goto XXX
Reduce #2 to typehdr by token '[' at line 33 in state XXX, call typehdr {const=true}, goto XXX
Reduce #1 to typegen by token '[' at line 33 in state XXX, goto XXX
Shift token '[' at line 33 in state XXX, goto XXX
Shift token IDENT = "R" at line 33 in state XXX, goto XXX
Reduce #1 to typename by token ',' at line 33 in state XXX, goto XXX
Reduce #1 to typehdr by token ',' at line 33 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token ',' at line 33 in state XXX, goto XXX
Shift token ',' at line 33 in state XXX, goto XXX
Shift token IDENT = "DIM1" at line 33 in state XXX, goto XXX
Reduce #1 to typename by token ',' at line 33 in state XXX, goto XXX
Reduce #1 to typehdr by token ',' at line 33 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token ',' at line 33 in state XXX, goto XXX
Shift token ',' at line 33 in state XXX, goto XXX
Shift token IDENT = "DIM2" at line 33 in state XXX, goto XXX
Reduce #1 to typename by token ']' at line 33 in state XXX, goto XXX
Reduce #1 to typehdr by token ']' at line 33 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token ']' at line 33 in state XXX, goto XXX
Reduce #1 to generic_instance_deflist by token ']' at line 33 in state XXX, call generic_instance_type, goto XXX
Reduce #3 to generic_instance_deflist by token ']' at line 33 in state XXX, call generic_instance_type, goto XXX
Reduce #3 to generic_instance_deflist by token ']' at line 33 in state XXX, call generic_instance_type, goto XXX
Reduce #1 to generic_instance by token ']' at line 33 in state XXX, call generic_instance, goto XXX
Shift token ']' at line 33 in state XXX, goto XXX
Reduce #4 to typegen by token IDENT = "o" at line 33 in state XXX, call typegen_generic, goto XXX
Reduce #1 to typespec by token IDENT = "o" at line 33 in state XXX, call typespec, goto XXX
Shift token IDENT = "o" at line 33 in state XXX, goto XXX
Reduce #2 to paramdecl by token ')' at line 33 in state XXX, call paramdef, goto XXX
Reduce #1 to parameters by token ')' at line 33 in state XXX, goto XXX
Reduce #1 to parameterlist by token ')' at line 33 in state XXX, call paramdeflist, goto XXX
Shift token ')' at line 33 in state XXX, goto XXX
Shift token "nothrow" at line 33 in state XXX, goto XXX
Shift token '{' at line 34 in state XXX, goto XXX
Shift token IDENT = "m_ar" at line 35 in state XXX, goto XXX
Reduce #1 to expression by token '=' at line 35 in state XXX, call variable, goto XXX
Shift token '=' at line 35 in state XXX, goto XXX
Shift token IDENT = "o" at line 35 in state XXX, goto XXX
Reduce #1 to expression by token '.' at line 35 in state XXX, call variable, goto XXX
Shift token '.' at line 35 in state XXX, goto XXX
Shift token IDENT = "m_ar" at line 35 in state XXX, goto XXX
Reduce #3 to expression by token ';' at line 35 in state XXX, call member, goto XXX
Reduce #3 to expression by token ';' at line 35 in state XXX, call binop "=", goto XXX
Shift token ';' at line 35 in state XXX, goto XXX
Reduce #2 to statement by token '}' at line 36 in state XXX, call free_expression, goto XXX
Reduce #0 to statementlist by token '}' at line 36 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 36 in state XXX, goto XXX
Shift token '}' at line 36 in state XXX, goto XXX
Reduce #7 to callablebody by token "public" at line 37 in state XXX, call callablebody {throws=false,const=false}, goto XXX
Reduce #3 to constructordefinition by token "public" at line 37 in state XXX, call constructordef, goto XXX
Reduce #1 to inclass_definition by token "public" at line 37 in state XXX, call definition_decl_impl_pass 4, goto XXX
Shift token "public" at line 37 in state XXX, goto XXX
Reduce #1 to linkage by token "operator" at line 37 in state XXX, call linkage {private=false,linkage="external",explicit=true}, goto XXX
Shift token "operator" at line 37 in state XXX, goto XXX
Shift token '+' at line 37 in state XXX, goto XXX
Reduce #1 to operatordecl by token IDENT = "Matrix" at line 37 in state XXX, call operatordecl {name="+",symbol="plus"}, goto XXX
Shift token IDENT = "Matrix" at line 37 in state XXX, goto XXX
Reduce #1 to typename by token '[' at line 37 in state XXX, goto XXX
Reduce #1 to typehdr by token '[' at line 37 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token '[' at line 37 in state XXX, goto XXX
Shift token '[' at line 37 in state XXX, goto XXX
Shift token IDENT = "R" at line 37 in state XXX, goto XXX
Reduce #1 to typename by token ',' at line 37 in state XXX, goto XXX
Reduce #1 to typehdr by token ',' at line 37 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token ',' at line 37 in state XXX, goto XXX
Shift token ',' at line 37 in state XXX, goto XXX
Shift token IDENT = "DIM1" at line 37 in state XXX, goto XXX
Reduce #1 to typename by token ',' at line 37 in state XXX, goto XXX
Reduce #1 to typehdr by token ',' at line 37 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token ',' at line 37 in state XXX, goto XXX
Shift token ',' at line 37 in state XXX, goto XXX
Shift token IDENT = "DIM2" at line 37 in state XXX, goto XXX
Reduce #1 to typename by token ']' at line 37 in state XXX, goto XXX
Reduce #1 to typehdr by token ']' at line 37 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token ']' at line 37 in state XXX, goto XXX
Reduce #1 to generic_instance_deflist by token ']' at line 37 in state XXX, call generic_instance_type, goto XXX
Reduce #3 to generic_instance_deflist by token ']' at line 37 in state XXX, call generic_instance_type, goto XXX
Reduce #3 to generic_instance_deflist by token ']' at line 37 in state XXX, call generic_instance_type, goto XXX
Reduce #1 to generic_instance by token ']' at line 37 in state XXX, call generic_instance, goto XXX
Shift token ']' at line 37 in state XXX, goto XXX
Reduce #4 to typegen by token '(' at line 37 in state XXX, call typegen_generic, goto XXX
Reduce #1 to typespec by token '(' at line 37 in state XXX, call typespec, goto XXX
Shift token '(' at line 37 in state XXX, goto XXX
Shift token "const" at line 37 in state XXX, goto XXX
Shift token IDENT = "Matrix" at line 37 in state XXX, goto XXX
Reduce #1 to typename by token '[' at line 37 in state XXX, goto XXX
Reduce #2 to typehdr by token '[' at line 37 in state XXX, call typehdr {const=true}, goto XXX
Reduce #1 to typegen by token '[' at line 37 in state XXX, goto XXX
Shift token '[' at line 37 in state XXX, goto XXX
Shift token IDENT = "R" at line 37 in state XXX, goto XXX
Reduce #1 to typename by token ',' at line 37 in state XXX, goto XXX
Reduce #1 to typehdr by token ',' at line 37 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token ',' at line 37 in state XXX, goto XXX
Shift token ',' at line 37 in state XXX, goto XXX
Shift token IDENT = "DIM1" at line 37 in state XXX, goto XXX
Reduce #1 to typename by token ',' at line 37 in state XXX, goto XXX
Reduce #1 to typehdr by token ',' at line 37 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token ',' at line 37 in state XXX, goto XXX
Shift token ',' at line 37 in state XXX, goto XXX
Shift token IDENT = "DIM2" at line 37 in state XXX, goto XXX
Reduce #1 to typename by token ']' at line 37 in state XXX, goto XXX
Reduce #1 to typehdr by token ']' at line 37 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token ']' at line 37 in state XXX, goto XXX
Reduce #1 to generic_instance_deflist by token ']' at line 37 in state XXX, call generic_instance_type, goto XXX
Reduce #3 to generic_instance_deflist by token ']' at line 37 in state XXX, call generic_instance_type, goto XXX
Reduce #3 to generic_instance_deflist by token ']' at line 37 in state XXX, call generic_instance_type, goto XXX
Reduce #1 to generic_instance by token ']' at line 37 in state XXX, call generic_instance, goto XXX
Shift token ']' at line 37 in state XXX, goto XXX
Reduce #4 to typegen by token IDENT = "o" at line 37 in state XXX, call typegen_generic, goto XXX
Reduce #1 to typespec by token IDENT = "o" at line 37 in state XXX, call typespec, goto XXX
Shift token IDENT = "o" at line 37 in state XXX, goto XXX
Reduce #2 to paramdecl by token ')' at line 37 in state XXX, call paramdef, goto XXX
Reduce #1 to parameters by token ')' at line 37 in state XXX, goto XXX
Reduce #1 to parameterlist by token ')' at line 37 in state XXX, call paramdeflist, goto XXX
Shift token ')' at line 37 in state XXX, goto XXX
Shift token "const" at line 37 in state XXX, goto XXX
Shift token "nothrow" at line 37 in state XXX, goto XXX
Shift token '{' at line 38 in state XXX, goto XXX
Shift token "var" at line 39 in state XXX, goto XXX
Shift token IDENT = "Matrix" at line 39 in state XXX, goto XXX
Reduce #1 to typename by token '[' at line 39 in state XXX, goto XXX
Reduce #1 to typehdr by token '[' at line 39 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token '[' at line 39 in state XXX, goto XXX
Shift token '[' at line 39 in state XXX, goto XXX
Shift token IDENT = "R" at line 39 in state XXX, goto XXX
Reduce #1 to typename by token ',' at line 39 in state XXX, goto XXX
Reduce #1 to typehdr by token ',' at line 39 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token ',' at line 39 in state XXX, goto XXX
Shift token ',' at line 39 in state XXX, goto XXX
Shift token IDENT = "DIM1" at line 39 in state XXX, goto XXX
Reduce #1 to typename by token ',' at line 39 in state XXX, goto XXX
Reduce #1 to typehdr by token ',' at line 39 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token ',' at line 39 in state XXX, goto XXX
Shift token ',' at line 39 in state XXX, goto XXX
Shift token IDENT = "DIM2" at line 39 in state XXX, goto XXX
Reduce #1 to typename by token ']' at line 39 in state XXX, goto XXX
Reduce #1 to typehdr by token ']' at line 39 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token ']' at line 39 in state XXX, goto XXX
Reduce #1 to generic_instance_deflist by token ']' at line 39 in state XXX, call generic_instance_type, goto XXX
Reduce #3 to generic_instance_deflist by token ']' at line 39 in state XXX, call generic_instance_type, goto XXX
Reduce #3 to generic_instance_deflist by token ']' at line 39 in state XXX, call generic_instance_type, goto XXX
Reduce #1 to generic_instance by token ']' at line 39 in state XXX, call generic_instance, goto XXX
Shift token ']' at line 39 in state XXX, goto XXX
Reduce #4 to typegen by token IDENT = "rt" at line 39 in state XXX, call typegen_generic, goto XXX
Reduce #1 to typespec by token IDENT = "rt" at line 39 in state XXX, call typespec, goto XXX
Shift token IDENT = "rt" at line 39 in state XXX, goto XXX
Reduce #2 to variabledefinition by token ';' at line 39 in state XXX, call vardef, goto XXX
Shift token ';' at line 39 in state XXX, goto XXX
Reduce #3 to statement by token "var" at line 40 in state XXX, call definition 1, goto XXX
Shift token "var" at line 40 in state XXX, goto XXX
Shift token IDENT = "int" at line 40 in state XXX, goto XXX
Reduce #1 to typename by token IDENT = "ii" at line 40 in state XXX, goto XXX
Reduce #1 to typehdr by token IDENT = "ii" at line 40 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token IDENT = "ii" at line 40 in state XXX, goto XXX
Reduce #1 to typespec by token IDENT = "ii" at line 40 in state XXX, call typespec, goto XXX
Shift token IDENT = "ii" at line 40 in state XXX, goto XXX
Shift token '=' at line 40 in state XXX, goto XXX
Shift token UINTEGER = "0" at line 40 in state XXX, goto XXX
Reduce #1 to expression by token ';' at line 40 in state XXX, call constant "constexpr uint", goto XXX
Reduce #4 to variabledefinition by token ';' at line 40 in state XXX, call vardef_assign, goto XXX
Shift token ';' at line 40 in state XXX, goto XXX
Reduce #3 to statement by token "while" at line 41 in state XXX, call definition 1, goto XXX
Shift token "while" at line 41 in state XXX, goto XXX
Shift token '(' at line 41 in state XXX, goto XXX
Shift token IDENT = "ii" at line 41 in state XXX, goto XXX
Reduce #1 to expression by token '<' at line 41 in state XXX, call variable, goto XXX
Shift token '<' at line 41 in state XXX, goto XXX
Shift token IDENT = "DIM1" at line 41 in state XXX, goto XXX
Reduce #1 to expression by token ')' at line 41 in state XXX, call variable, goto XXX
Reduce #3 to expression by token ')' at line 41 in state XXX, call binop "<", goto XXX
Shift token ')' at line 41 in state XXX, goto XXX
Shift token '{' at line 42 in state XXX, goto XXX
Shift token "var" at line 43 in state XXX, goto XXX
Shift token IDENT = "int" at line 43 in state XXX, goto XXX
Reduce #1 to typename by token IDENT = "jj" at line 43 in state XXX, goto XXX
Reduce #1 to typehdr by token IDENT = "jj" at line 43 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token IDENT = "jj" at line 43 in state XXX, goto XXX
Reduce #1 to typespec by token IDENT = "jj" at line 43 in state XXX, call typespec, goto XXX
Shift token IDENT = "jj" at line 43 in state XXX, goto XXX
Shift token '=' at line 43 in state XXX, goto XXX
Shift token UINTEGER = "0" at line 43 in state XXX, goto XXX
Reduce #1 to expression by token ';' at line 43 in state XXX, call constant "constexpr uint", goto XXX
Reduce #4 to variabledefinition by token ';' at line 43 in state XXX, call vardef_assign, goto XXX
Shift token ';' at line 43 in state XXX, goto XXX
Reduce #3 to statement by token "while" at line 44 in state XXX, call definition 1, goto XXX
Shift token "while" at line 44 in state XXX, goto XXX
Shift token '(' at line 44 in state XXX, goto XXX
Shift token IDENT = "jj" at line 44 in state XXX, goto XXX
Reduce #1 to expression by token '<' at line 44 in state XXX, call variable, goto XXX
Shift token '<' at line 44 in state XXX, goto XXX
Shift token IDENT = "DIM2" at line 44 in state XXX, goto XXX
Reduce #1 to expression by token ')' at line 44 in state XXX, call variable, goto XXX
Reduce #3 to expression by token ')' at line 44 in state XXX, call binop "<", goto XXX
Shift token ')' at line 44 in state XXX, goto XXX
Shift token '{' at line 45 in state XXX, goto XXX
Shift token IDENT = "rt" at line 46 in state XXX, goto XXX
Reduce #1 to expression by token '.' at line 46 in state XXX, call variable, goto XXX
Shift token '.' at line 46 in state XXX, goto XXX
Shift token IDENT = "m_ar" at line 46 in state XXX, goto XXX
Reduce #3 to expression by token '[' at line 46 in state XXX, call member, goto XXX
Shift token '[' at line 46 in state XXX, goto XXX
Shift token IDENT = "ii" at line 46 in state XXX, goto XXX
Reduce #1 to expression by token ']' at line 46 in state XXX, call variable, goto XXX
Reduce #1 to expressionlist by token ']' at line 46 in state XXX, goto XXX
Shift token ']' at line 46 in state XXX, goto XXX
Reduce #4 to expression by token '[' at line 46 in state XXX, call operator_array "[]", goto XXX
Shift token '[' at line 46 in state XXX, goto XXX
Shift token IDENT = "jj" at line 46 in state XXX, goto XXX
Reduce #1 to expression by token ']' at line 46 in state XXX, call variable, goto XXX
Reduce #1 to expressionlist by token ']' at line 46 in state XXX, goto XXX
Shift token ']' at line 46 in state XXX, goto XXX
Reduce #4 to expression by token '=' at line 46 in state XXX, call operator_array "[]", goto XXX
Shift token '=' at line 46 in state XXX, goto XXX
Shift token IDENT = "m_ar" at line 46 in state XXX, goto XXX
Reduce #1 to expression by token '[' at line 46 in state XXX, call variable, goto XXX
Shift token '[' at line 46 in state XXX, goto XXX
Shift token IDENT = "ii" at line 46 in state XXX, goto XXX
Reduce #1 to expression by token ']' at line 46 in state XXX, call variable, goto XXX
Reduce #1 to expressionlist by token ']' at line 46 in state XXX, goto XXX
Shift token ']' at line 46 in state XXX, goto XXX
Reduce #4 to expression by token '[' at line 46 in state XXX, call operator_array "[]", goto XXX
Shift token '[' at line 46 in state XXX, goto XXX
Shift token IDENT = "jj" at line 46 in state XXX, goto XXX
Reduce #1 to expression by token ']' at line 46 in state XXX, call variable, goto XXX
Reduce #1 to expressionlist by token ']' at line 46 in state XXX, goto XXX
Shift token ']' at line 46 in state XXX, goto XXX
Reduce #4 to expression by token '+' at line 46 in state XXX, call operator_array "[]", goto XXX
Shift token '+' at line 46 in state XXX, goto XXX
Shift token IDENT = "o" at line 46 in state XXX, goto XXX
Reduce #1 to expression by token '.' at line 46 in state XXX, call variable, goto XXX
Shift token '.' at line 46 in state XXX, goto XXX
Shift token IDENT = "m_ar" at line 46 in state XXX, goto XXX
Reduce #3 to expression by token '[' at line 46 in state XXX, call member, goto XXX
Shift token '[' at line 46 in state XXX, goto XXX
Shift token IDENT = "ii" at line 46 in state XXX, goto XXX
Reduce #1 to expression by token ']' at line 46 in state XXX, call variable, goto XXX
Reduce #1 to expressionlist by token ']' at line 46 in state XXX, goto XXX
Shift token ']' at line 46 in state XXX, goto XXX
Reduce #4 to expression by token '[' at line 46 in state XXX, call operator_array "[]", goto XXX
Shift token '[' at line 46 in state XXX, goto XXX
Shift token IDENT = "jj" at line 46 in state XXX, goto XXX
Reduce #1 to expression by token ']' at line 46 in state XXX, call variable, goto XXX
Reduce #1 to expressionlist by token ']' at line 46 in state XXX, goto XXX
Shift token ']' at line 46 in state XXX, goto XXX
Reduce #4 to expression by token ';' at line 46 in state XXX, call operator_array "[]", goto XXX
Reduce #3 to expression by token ';' at line 46 in state XXX, call binop "+", goto XXX
Reduce #3 to expression by token ';' at line 46 in state XXX, call binop "=", goto XXX
Shift token ';' at line 46 in state XXX, goto XXX
Reduce #2 to statement by token IDENT = "jj" at line 47 in state XXX, call free_expression, goto XXX
Shift token IDENT = "jj" at line 47 in state XXX, goto XXX
Reduce #1 to expression by token "+=" at line 47 in state XXX, call variable, goto XXX
Shift token "+=" at line 47 in state XXX, goto XXX
Shift token UINTEGER = "1" at line 47 in state XXX, goto XXX
Reduce #1 to expression by token ';' at line 47 in state XXX, call constant "constexpr uint", goto XXX
Reduce #3 to expression by token ';' at line 47 in state XXX, call assign_operator "+", goto XXX
Shift token ';' at line 47 in state XXX, goto XXX
Reduce #2 to statement by token '}' at line 48 in state XXX, call free_expression, goto XXX
Reduce #0 to statementlist by token '}' at line 48 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 48 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 48 in state XXX, goto XXX
Shift token '}' at line 48 in state XXX, goto XXX
Reduce #3 to codeblock by token IDENT = "ii" at line 49 in state XXX, call codeblock, goto XXX
Reduce #5 to statement by token IDENT = "ii" at line 49 in state XXX, call conditional_while, goto XXX
Shift token IDENT = "ii" at line 49 in state XXX, goto XXX
Reduce #1 to expression by token "+=" at line 49 in state XXX, call variable, goto XXX
Shift token "+=" at line 49 in state XXX, goto XXX
Shift token UINTEGER = "1" at line 49 in state XXX, goto XXX
Reduce #1 to expression by token ';' at line 49 in state XXX, call constant "constexpr uint", goto XXX
Reduce #3 to expression by token ';' at line 49 in state XXX, call assign_operator "+", goto XXX
Shift token ';' at line 49 in state XXX, goto XXX
Reduce #2 to statement by token '}' at line 50 in state XXX, call free_expression, goto XXX
Reduce #0 to statementlist by token '}' at line 50 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 50 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 50 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 50 in state XXX, goto XXX
Shift token '}' at line 50 in state XXX, goto XXX
Reduce #3 to codeblock by token "return" at line 51 in state XXX, call codeblock, goto XXX
Reduce #5 to statement by token "return" at line 51 in state XXX, call conditional_while, goto XXX
Shift token "return" at line 51 in state XXX, goto XXX
Shift token IDENT = "rt" at line 51 in state XXX, goto XXX
Reduce #1 to expression by token ';' at line 51 in state XXX, call variable, goto XXX
Shift token ';' at line 51 in state XXX, goto XXX
Reduce #3 to statement by token '}' at line 52 in state XXX, call return_value, goto XXX
Reduce #0 to statementlist by token '}' at line 52 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 52 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 52 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 52 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 52 in state XXX, goto XXX
Shift token '}' at line 52 in state XXX, goto XXX
Reduce #8 to callablebody by token "public" at line 53 in state XXX, call callablebody {throws=false,const=true}, goto XXX
Reduce #5 to operatordefinition by token "public" at line 53 in state XXX, call operator_funcdef, goto XXX
Reduce #1 to inclass_definition by token "public" at line 53 in state XXX, call definition_decl_impl_pass 4, goto XXX
Shift token "public" at line 53 in state XXX, goto XXX
Reduce #1 to linkage by token "operator" at line 53 in state XXX, call linkage {private=false,linkage="external",explicit=true}, goto XXX
Shift token "operator" at line 53 in state XXX, goto XXX
Shift token '-' at line 53 in state XXX, goto XXX
Reduce #1 to operatordecl by token IDENT = "Matrix" at line 53 in state XXX, call operatordecl {name="-",symbol="minus"}, goto XXX
Shift token IDENT = "Matrix" at line 53 in state XXX, goto XXX
Reduce #1 to typename by token '[' at line 53 in state XXX, goto XXX
Reduce #1 to typehdr by token '[' at line 53 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token '[' at line 53 in state XXX, goto XXX
Shift token '[' at line 53 in state XXX, goto XXX
Shift token IDENT = "R" at line 53 in state XXX, goto XXX
Reduce #1 to typename by token ',' at line 53 in state XXX, goto XXX
Reduce #1 to typehdr by token ',' at line 53 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token ',' at line 53 in state XXX, goto XXX
Shift token ',' at line 53 in state XXX, goto XXX
Shift token IDENT = "DIM1" at line 53 in state XXX, goto XXX
Reduce #1 to typename by token ',' at line 53 in state XXX, goto XXX
Reduce #1 to typehdr by token ',' at line 53 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token ',' at line 53 in state XXX, goto XXX
Shift token ',' at line 53 in state XXX, goto XXX
Shift token IDENT = "DIM2" at line 53 in state XXX, goto XXX
Reduce #1 to typename by token ']' at line 53 in state XXX, goto XXX
Reduce #1 to typehdr by token ']' at line 53 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token ']' at line 53 in state XXX, goto XXX
Reduce #1 to generic_instance_deflist by token ']' at line 53 in state XXX, call generic_instance_type, goto XXX
Reduce #3 to generic_instance_deflist by token ']' at line 53 in state XXX, call generic_instance_type, goto XXX
Reduce #3 to generic_instance_deflist by token ']' at line 53 in state XXX, call generic_instance_type, goto XXX
Reduce #1 to generic_instance by token ']' at line 53 in state XXX, call generic_instance, goto XXX
Shift token ']' at line 53 in state XXX, goto XXX
Reduce #4 to typegen by token '(' at line 53 in state XXX, call typegen_generic, goto XXX
Reduce #1 to typespec by token '(' at line 53 in state XXX, call typespec, goto XXX
Shift token '(' at line 53 in state XXX, goto XXX
Shift token "const" at line 53 in state XXX, goto XXX
Shift token IDENT = "Matrix" at line 53 in state XXX, goto XXX
Reduce #1 to typename by token '[' at line 53 in state XXX, goto XXX
Reduce #2 to typehdr by token '[' at line 53 in state XXX, call typehdr {const=true}, goto XXX
Reduce #1 to typegen by token '[' at line 53 in state XXX, goto XXX
Shift token '[' at line 53 in state XXX, goto XXX
Shift token IDENT = "R" at line 53 in state XXX, goto XXX
Reduce #1 to typename by token ',' at line 53 in state XXX, goto XXX
Reduce #1 to typehdr by token ',' at line 53 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token ',' at line 53 in state XXX, goto XXX
Shift token ',' at line 53 in state XXX, goto XXX
Shift token IDENT = "DIM1" at line 53 in state XXX, goto XXX
Reduce #1 to typename by token ',' at line 53 in state XXX, goto XXX
Reduce #1 to typehdr by token ',' at line 53 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token ',' at line 53 in state XXX, goto XXX
Shift token ',' at line 53 in state XXX, goto XXX
Shift token IDENT = "DIM2" at line 53 in state XXX, goto XXX
Reduce #1 to typename by token ']' at line 53 in state XXX, goto XXX
Reduce #1 to typehdr by token ']' at line 53 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token ']' at line 53 in state XXX, goto XXX
Reduce #1 to generic_instance_deflist by token ']' at line 53 in state XXX, call generic_instance_type, goto XXX
Reduce #3 to generic_instance_deflist by token ']' at line 53 in state XXX, call generic_instance_type, goto XXX
Reduce #3 to generic_instance_deflist by token ']' at line 53 in state XXX, call generic_instance_type, goto XXX
Reduce #1 to generic_instance by token ']' at line 53 in state XXX, call generic_instance, goto XXX
Shift token ']' at line 53 in state XXX, goto XXX
Reduce #4 to typegen by token IDENT = "o" at line 53 in state XXX, call typegen_generic, goto XXX
Reduce #1 to typespec by token IDENT = "o" at line 53 in state XXX, call typespec, goto XXX
Shift token IDENT = "o" at line 53 in state XXX, goto XXX
Reduce #2 to paramdecl by token ')' at line 53 in state XXX, call paramdef, goto XXX
Reduce #1 to parameters by token ')' at line 53 in state XXX, goto XXX
Reduce #1 to parameterlist by token ')' at line 53 in state XXX, call paramdeflist, goto XXX
Shift token ')' at line 53 in state XXX, goto XXX
Shift token "const" at line 53 in state XXX, goto XXX
Shift token "nothrow" at line 53 in state XXX, goto XXX
Shift token '{' at line 54 in state XXX, goto XXX
Shift token "var" at line 55 in state XXX, goto XXX
Shift token IDENT = "Matrix" at line 55 in state XXX, goto XXX
Reduce #1 to typename by token '[' at line 55 in state XXX, goto XXX
Reduce #1 to typehdr by token '[' at line 55 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token '[' at line 55 in state XXX, goto XXX
Shift token '[' at line 55 in state XXX, goto XXX
Shift token IDENT = "R" at line 55 in state XXX, goto XXX
Reduce #1 to typename by token ',' at line 55 in state XXX, goto XXX
Reduce #1 to typehdr by token ',' at line 55 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token ',' at line 55 in state XXX, goto XXX
Shift token ',' at line 55 in state XXX, goto XXX
Shift token IDENT = "DIM1" at line 55 in state XXX, goto XXX
Reduce #1 to typename by token ',' at line 55 in state XXX, goto XXX
Reduce #1 to typehdr by token ',' at line 55 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token ',' at line 55 in state XXX, goto XXX
Shift token ',' at line 55 in state XXX, goto XXX
Shift token IDENT = "DIM2" at line 55 in state XXX, goto XXX
Reduce #1 to typename by token ']' at line 55 in state XXX, goto XXX
Reduce #1 to typehdr by token ']' at line 55 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token ']' at line 55 in state XXX, goto XXX
Reduce #1 to generic_instance_deflist by token ']' at line 55 in state XXX, call generic_instance_type, goto XXX
Reduce #3 to generic_instance_deflist by token ']' at line 55 in state XXX, call generic_instance_type, goto XXX
Reduce #3 to generic_instance_deflist by token ']' at line 55 in state XXX, call generic_instance_type, goto XXX
Reduce #1 to generic_instance by token ']' at line 55 in state XXX, call generic_instance, goto XXX
Shift token ']' at line 55 in state XXX, goto XXX
Reduce #4 to typegen by token IDENT = "rt" at line 55 in state XXX, call typegen_generic, goto XXX
Reduce #1 to typespec by token IDENT = "rt" at line 55 in state XXX, call typespec, goto XXX
Shift token IDENT = "rt" at line 55 in state XXX, goto XXX
Reduce #2 to variabledefinition by token ';' at line 55 in state XXX, call vardef, goto XXX
Shift token ';' at line 55 in state XXX, goto XXX
Reduce #3 to statement by token "var" at line 56 in state XXX, call definition 1, goto XXX
Shift token "var" at line 56 in state XXX, goto XXX
Shift token IDENT = "int" at line 56 in state XXX, goto XXX
Reduce #1 to typename by token IDENT = "ii" at line 56 in state XXX, goto XXX
Reduce #1 to typehdr by token IDENT = "ii" at line 56 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token IDENT = "ii" at line 56 in state XXX, goto XXX
Reduce #1 to typespec by token IDENT = "ii" at line 56 in state XXX, call typespec, goto XXX
Shift token IDENT = "ii" at line 56 in state XXX, goto XXX
Shift token '=' at line 56 in state XXX, goto XXX
Shift token UINTEGER = "0" at line 56 in state XXX, goto XXX
Reduce #1 to expression by token ';' at line 56 in state XXX, call constant "constexpr uint", goto XXX
Reduce #4 to variabledefinition by token ';' at line 56 in state XXX, call vardef_assign, goto XXX
Shift token ';' at line 56 in state XXX, goto XXX
Reduce #3 to statement by token "while" at line 57 in state XXX, call definition 1, goto XXX
Shift token "while" at line 57 in state XXX, goto XXX
Shift token '(' at line 57 in state XXX, goto XXX
Shift token IDENT = "ii" at line 57 in state XXX, goto XXX
Reduce #1 to expression by token '<' at line 57 in state XXX, call variable, goto XXX
Shift token '<' at line 57 in state XXX, goto XXX
Shift token IDENT = "DIM1" at line 57 in state XXX, goto XXX
Reduce #1 to expression by token ')' at line 57 in state XXX, call variable, goto XXX
Reduce #3 to expression by token ')' at line 57 in state XXX, call binop "<", goto XXX
Shift token ')' at line 57 in state XXX, goto XXX
Shift token '{' at line 58 in state XXX, goto XXX
Shift token "var" at line 59 in state XXX, goto XXX
Shift token IDENT = "int" at line 59 in state XXX, goto XXX
Reduce #1 to typename by token IDENT = "jj" at line 59 in state XXX, goto XXX
Reduce #1 to typehdr by token IDENT = "jj" at line 59 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token IDENT = "jj" at line 59 in state XXX, goto XXX
Reduce #1 to typespec by token IDENT = "jj" at line 59 in state XXX, call typespec, goto XXX
Shift token IDENT = "jj" at line 59 in state XXX, goto XXX
Shift token '=' at line 59 in state XXX, goto XXX
Shift token UINTEGER = "0" at line 59 in state XXX, goto XXX
Reduce #1 to expression by token ';' at line 59 in state XXX, call constant "constexpr uint", goto XXX
Reduce #4 to variabledefinition by token ';' at line 59 in state XXX, call vardef_assign, goto XXX
Shift token ';' at line 59 in state XXX, goto XXX
Reduce #3 to statement by token "while" at line 60 in state XXX, call definition 1, goto XXX
Shift token "while" at line 60 in state XXX, goto XXX
Shift token '(' at line 60 in state XXX, goto XXX
Shift token IDENT = "jj" at line 60 in state XXX, goto XXX
Reduce #1 to expression by token '<' at line 60 in state XXX, call variable, goto XXX
Shift token '<' at line 60 in state XXX, goto XXX
Shift token IDENT = "DIM2" at line 60 in state XXX, goto XXX
Reduce #1 to expression by token ')' at line 60 in state XXX, call variable, goto XXX
Reduce #3 to expression by token ')' at line 60 in state XXX, call binop "<", goto XXX
Shift token ')' at line 60 in state XXX, goto XXX
Shift token '{' at line 61 in state XXX, goto XXX
Shift token IDENT = "rt" at line 62 in state XXX, goto XXX
Reduce #1 to expression by token '.' at line 62 in state XXX, call variable, goto XXX
Shift token '.' at line 62 in state XXX, goto XXX
Shift token IDENT = "m_ar" at line 62 in state XXX, goto XXX
Reduce #3 to expression by token '[' at line 62 in state XXX, call member, goto XXX
Shift token '[' at line 62 in state XXX, goto XXX
Shift token IDENT = "ii" at line 62 in state XXX, goto XXX
Reduce #1 to expression by token ']' at line 62 in state XXX, call variable, goto XXX
Reduce #1 to expressionlist by token ']' at line 62 in state XXX, goto XXX
Shift token ']' at line 62 in state XXX, goto XXX
Reduce #4 to expression by token '[' at line 62 in state XXX, call operator_array "[]", goto XXX
Shift token '[' at line 62 in state XXX, goto XXX
Shift token IDENT = "jj" at line 62 in state XXX, goto XXX
Reduce #1 to expression by token ']' at line 62 in state XXX, call variable, goto XXX
Reduce #1 to expressionlist by token ']' at line 62 in state XXX, goto XXX
Shift token ']' at line 62 in state XXX, goto XXX
Reduce #4 to expression by token '=' at line 62 in state XXX, call operator_array "[]", goto XXX
Shift token '=' at line 62 in state XXX, goto XXX
Shift token IDENT = "m_ar" at line 62 in state XXX, goto XXX
Reduce #1 to expression by token '[' at line 62 in state XXX, call variable, goto XXX
Shift token '[' at line 62 in state XXX, goto XXX
Shift token IDENT = "ii" at line 62 in state XXX, goto XXX
Reduce #1 to expression by token ']' at line 62 in state XXX, call variable, goto XXX
Reduce #1 to expressionlist by token ']' at line 62 in state XXX, goto XXX
Shift token ']' at line 62 in state XXX, goto XXX
Reduce #4 to expression by token '[' at line 62 in state XXX, call operator_array "[]", goto XXX
Shift token '[' at line 62 in state XXX, goto XXX
Shift token IDENT = "jj" at line 62 in state XXX, goto XXX
Reduce #1 to expression by token ']' at line 62 in state XXX, call variable, goto XXX
Reduce #1 to expressionlist by token ']' at line 62 in state XXX, goto XXX
Shift token ']' at line 62 in state XXX, goto XXX
Reduce #4 to expression by token '-' at line 62 in state XXX, call operator_array "[]", goto XXX
Shift token '-' at line 62 in state XXX, goto XXX
Shift token IDENT = "o" at line 62 in state XXX, goto XXX
Reduce #1 to expression by token '.' at line 62 in state XXX, call variable, goto XXX
Shift token '.' at line 62 in state XXX, goto XXX
Shift token IDENT = "m_ar" at line 62 in state XXX, goto XXX
Reduce #3 to expression by token '[' at line 62 in state XXX, call member, goto XXX
Shift token '[' at line 62 in state XXX, goto XXX
Shift token IDENT = "ii" at line 62 in state XXX, goto XXX
Reduce #1 to expression by token ']' at line 62 in state XXX, call variable, goto XXX
Reduce #1 to expressionlist by token ']' at line 62 in state XXX, goto XXX
Shift token ']' at line 62 in state XXX, goto XXX
Reduce #4 to expression by token '[' at line 62 in state XXX, call operator_array "[]", goto XXX
Shift token '[' at line 62 in state XXX, goto XXX
Shift token IDENT = "jj" at line 62 in state XXX, goto XXX
Reduce #1 to expression by token ']' at line 62 in state XXX, call variable, goto XXX
Reduce #1 to expressionlist by token ']' at line 62 in state XXX, goto XXX
Shift token ']' at line 62 in state XXX, goto XXX
Reduce #4 to expression by token ';' at line 62 in state XXX, call operator_array "[]", goto XXX
Reduce #3 to expression by token ';' at line 62 in state XXX, call binop "-", goto XXX
Reduce #3 to expression by token ';' at line 62 in state XXX, call binop "=", goto XXX
Shift token ';' at line 62 in state XXX, goto XXX
Reduce #2 to statement by token IDENT = "jj" at line 63 in state XXX, call free_expression, goto XXX
Shift token IDENT = "jj" at line 63 in state XXX, goto XXX
Reduce #1 to expression by token "+=" at line 63 in state XXX, call variable, goto XXX
Shift token "+=" at line 63 in state XXX, goto XXX
Shift token UINTEGER = "1" at line 63 in state XXX, goto XXX
Reduce #1 to expression by token ';' at line 63 in state XXX, call constant "constexpr uint", goto XXX
Reduce #3 to expression by token ';' at line 63 in state XXX, call assign_operator "+", goto XXX
Shift token ';' at line 63 in state XXX, goto XXX
Reduce #2 to statement by token '}' at line 64 in state XXX, call free_expression, goto XXX
Reduce #0 to statementlist by token '}' at line 64 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 64 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 64 in state XXX, goto XXX
Shift token '}' at line 64 in state XXX, goto XXX
Reduce #3 to codeblock by token IDENT = "ii" at line 65 in state XXX, call codeblock, goto XXX
Reduce #5 to statement by token IDENT = "ii" at line 65 in state XXX, call conditional_while, goto XXX
Shift token IDENT = "ii" at line 65 in state XXX, goto XXX
Reduce #1 to expression by token "+=" at line 65 in state XXX, call variable, goto XXX
Shift token "+=" at line 65 in state XXX, goto XXX
Shift token UINTEGER = "1" at line 65 in state XXX, goto XXX
Reduce #1 to expression by token ';' at line 65 in state XXX, call constant "constexpr uint", goto XXX
Reduce #3 to expression by token ';' at line 65 in state XXX, call assign_operator "+", goto XXX
Shift token ';' at line 65 in state XXX, goto XXX
Reduce #2 to statement by token '}' at line 66 in state XXX, call free_expression, goto XXX
Reduce #0 to statementlist by token '}' at line 66 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 66 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 66 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 66 in state XXX, goto XXX
Shift token '}' at line 66 in state XXX, goto XXX
Reduce #3 to codeblock by token "return" at line 67 in state XXX, call codeblock, goto XXX
Reduce #5 to statement by token "return" at line 67 in state XXX, call conditional_while, goto XXX
Shift token "return" at line 67 in state XXX, goto XXX
Shift token IDENT = "rt" at line 67 in state XXX, goto XXX
Reduce #1 to expression by token ';' at line 67 in state XXX, call variable, goto XXX
Shift token ';' at line 67 in state XXX, goto XXX
Reduce #3 to statement by token '}' at line 68 in state XXX, call return_value, goto XXX
Reduce #0 to statementlist by token '}' at line 68 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 68 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 68 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 68 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 68 in state XXX, goto XXX
Shift token '}' at line 68 in state XXX, goto XXX
Reduce #8 to callablebody by token "public" at line 69 in state XXX, call callablebody {throws=false,const=true}, goto XXX
Reduce #5 to operatordefinition by token "public" at line 69 in state XXX, call operator_funcdef, goto XXX
Reduce #1 to inclass_definition by token "public" at line 69 in state XXX, call definition_decl_impl_pass 4, goto XXX
Shift token "public" at line 69 in state XXX, goto XXX
Reduce #1 to linkage by token "operator" at line 69 in state XXX, call linkage {private=false,linkage="external",explicit=true}, goto XXX
Shift token "operator" at line 69 in state XXX, goto XXX
Shift token '-' at line 69 in state XXX, goto XXX
Reduce #1 to operatordecl by token IDENT = "Matrix" at line 69 in state XXX, call operatordecl {name="-",symbol="minus"}, goto XXX
Shift token IDENT = "Matrix" at line 69 in state XXX, goto XXX
Reduce #1 to typename by token '[' at line 69 in state XXX, goto XXX
Reduce #1 to typehdr by token '[' at line 69 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token '[' at line 69 in state XXX, goto XXX
Shift token '[' at line 69 in state XXX, goto XXX
Shift token IDENT = "R" at line 69 in state XXX, goto XXX
Reduce #1 to typename by token ',' at line 69 in state XXX, goto XXX
Reduce #1 to typehdr by token ',' at line 69 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token ',' at line 69 in state XXX, goto XXX
Shift token ',' at line 69 in state XXX, goto XXX
Shift token IDENT = "DIM1" at line 69 in state XXX, goto XXX
Reduce #1 to typename by token ',' at line 69 in state XXX, goto XXX
Reduce #1 to typehdr by token ',' at line 69 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token ',' at line 69 in state XXX, goto XXX
Shift token ',' at line 69 in state XXX, goto XXX
Shift token IDENT = "DIM2" at line 69 in state XXX, goto XXX
Reduce #1 to typename by token ']' at line 69 in state XXX, goto XXX
Reduce #1 to typehdr by token ']' at line 69 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token ']' at line 69 in state XXX, goto XXX
Reduce #1 to generic_instance_deflist by token ']' at line 69 in state XXX, call generic_instance_type, goto XXX
Reduce #3 to generic_instance_deflist by token ']' at line 69 in state XXX, call generic_instance_type, goto XXX
Reduce #3 to generic_instance_deflist by token ']' at line 69 in state XXX, call generic_instance_type, goto XXX
Reduce #1 to generic_instance by token ']' at line 69 in state XXX, call generic_instance, goto XXX
Shift token ']' at line 69 in state XXX, goto XXX
Reduce #4 to typegen by token '(' at line 69 in state XXX, call typegen_generic, goto XXX
Reduce #1 to typespec by token '(' at line 69 in state XXX, call typespec, goto XXX
Shift token '(' at line 69 in state XXX, goto XXX
Reduce #0 to parameterlist by token ')' at line 69 in state XXX, call paramdeflist, goto XXX
Shift token ')' at line 69 in state XXX, goto XXX
Shift token "const" at line 69 in state XXX, goto XXX
Shift token "nothrow" at line 69 in state XXX, goto XXX
Shift token '{' at line 70 in state XXX, goto XXX
Shift token "var" at line 71 in state XXX, goto XXX
Shift token IDENT = "Matrix" at line 71 in state XXX, goto XXX
Reduce #1 to typename by token '[' at line 71 in state XXX, goto XXX
Reduce #1 to typehdr by token '[' at line 71 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token '[' at line 71 in state XXX, goto XXX
Shift token '[' at line 71 in state XXX, goto XXX
Shift token IDENT = "R" at line 71 in state XXX, goto XXX
Reduce #1 to typename by token ',' at line 71 in state XXX, goto XXX
Reduce #1 to typehdr by token ',' at line 71 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token ',' at line 71 in state XXX, goto XXX
Shift token ',' at line 71 in state XXX, goto XXX
Shift token IDENT = "DIM1" at line 71 in state XXX, goto XXX
Reduce #1 to typename by token ',' at line 71 in state XXX, goto XXX
Reduce #1 to typehdr by token ',' at line 71 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token ',' at line 71 in state XXX, goto XXX
Shift token ',' at line 71 in state XXX, goto XXX
Shift token IDENT = "DIM2" at line 71 in state XXX, goto XXX
Reduce #1 to typename by token ']' at line 71 in state XXX, goto XXX
Reduce #1 to typehdr by token ']' at line 71 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token ']' at line 71 in state XXX, goto XXX
Reduce #1 to generic_instance_deflist by token ']' at line 71 in state XXX, call generic_instance_type, goto XXX
Reduce #3 to generic_instance_deflist by token ']' at line 71 in state XXX, call generic_instance_type, goto XXX
Reduce #3 to generic_instance_deflist by token ']' at line 71 in state XXX, call generic_instance_type, goto XXX
Reduce #1 to generic_instance by token ']' at line 71 in state XXX, call generic_instance, goto XXX
Shift token ']' at line 71 in state XXX, goto XXX
Reduce #4 to typegen by token IDENT = "rt" at line 71 in state XXX, call typegen_generic, goto XXX
Reduce #1 to typespec by token IDENT = "rt" at line 71 in state XXX, call typespec, goto XXX
Shift token IDENT = "rt" at line 71 in state XXX, goto XXX
Reduce #2 to variabledefinition by token ';' at line 71 in state XXX, call vardef, goto XXX
Shift token ';' at line 71 in state XXX, goto XXX
Reduce #3 to statement by token "var" at line 72 in state XXX, call definition 1, goto XXX
Shift token "var" at line 72 in state XXX, goto XXX
Shift token IDENT = "int" at line 72 in state XXX, goto XXX
Reduce #1 to typename by token IDENT = "ii" at line 72 in state XXX, goto XXX
Reduce #1 to typehdr by token IDENT = "ii" at line 72 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token IDENT = "ii" at line 72 in state XXX, goto XXX
Reduce #1 to typespec by token IDENT = "ii" at line 72 in state XXX, call typespec, goto XXX
Shift token IDENT = "ii" at line 72 in state XXX, goto XXX
Shift token '=' at line 72 in state XXX, goto XXX
Shift token UINTEGER = "0" at line 72 in state XXX, goto XXX
Reduce #1 to expression by token ';' at line 72 in state XXX, call constant "constexpr uint", goto XXX
Reduce #4 to variabledefinition by token ';' at line 72 in state XXX, call vardef_assign, goto XXX
Shift token ';' at line 72 in state XXX, goto XXX
Reduce #3 to statement by token "while" at line 73 in state XXX, call definition 1, goto XXX
Shift token "while" at line 73 in state XXX, goto XXX
Shift token '(' at line 73 in state XXX, goto XXX
Shift token IDENT = "ii" at line 73 in state XXX, goto XXX
Reduce #1 to expression by token '<' at line 73 in state XXX, call variable, goto XXX
Shift token '<' at line 73 in state XXX, goto XXX
Shift token IDENT = "DIM1" at line 73 in state XXX, goto XXX
Reduce #1 to expression by token ')' at line 73 in state XXX, call variable, goto XXX
Reduce #3 to expression by token ')' at line 73 in state XXX, call binop "<", goto XXX
Shift token ')' at line 73 in state XXX, goto XXX
Shift token '{' at line 74 in state XXX, goto XXX
Shift token "var" at line 75 in state XXX, goto XXX
Shift token IDENT = "int" at line 75 in state XXX, goto XXX
Reduce #1 to typename by token IDENT = "jj" at line 75 in state XXX, goto XXX
Reduce #1 to typehdr by token IDENT = "jj" at line 75 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token IDENT = "jj" at line 75 in state XXX, goto XXX
Reduce #1 to typespec by token IDENT = "jj" at line 75 in state XXX, call typespec, goto XXX
Shift token IDENT = "jj" at line 75 in state XXX, goto XXX
Shift token '=' at line 75 in state XXX, goto XXX
Shift token UINTEGER = "0" at line 75 in state XXX, goto XXX
Reduce #1 to expression by token ';' at line 75 in state XXX, call constant "constexpr uint", goto XXX
Reduce #4 to variabledefinition by token ';' at line 75 in state XXX, call vardef_assign, goto XXX
Shift token ';' at line 75 in state XXX, goto XXX
Reduce #3 to statement by token "while" at line 76 in state XXX, call definition 1, goto XXX
Shift token "while" at line 76 in state XXX, goto XXX
Shift token '(' at line 76 in state XXX, goto XXX
Shift token IDENT = "jj" at line 76 in state XXX, goto XXX
Reduce #1 to expression by token '<' at line 76 in state XXX, call variable, goto XXX
Shift token '<' at line 76 in state XXX, goto XXX
Shift token IDENT = "DIM2" at line 76 in state XXX, goto XXX
Reduce #1 to expression by token ')' at line 76 in state XXX, call variable, goto XXX
Reduce #3 to expression by token ')' at line 76 in state XXX, call binop "<", goto XXX
Shift token ')' at line 76 in state XXX, goto XXX
Shift token '{' at line 77 in state XXX, goto XXX
Shift token IDENT = "rt" at line 78 in state XXX, goto XXX
Reduce #1 to expression by token '.' at line 78 in state XXX, call variable, goto XXX
Shift token '.' at line 78 in state XXX, goto XXX
Shift token IDENT = "m_ar" at line 78 in state XXX, goto XXX
Reduce #3 to expression by token '[' at line 78 in state XXX, call member, goto XXX
Shift token '[' at line 78 in state XXX, goto XXX
Shift token IDENT = "ii" at line 78 in state XXX, goto XXX
Reduce #1 to expression by token ']' at line 78 in state XXX, call variable, goto XXX
Reduce #1 to expressionlist by token ']' at line 78 in state XXX, goto XXX
Shift token ']' at line 78 in state XXX, goto XXX
Reduce #4 to expression by token '[' at line 78 in state XXX, call operator_array "[]", goto XXX
Shift token '[' at line 78 in state XXX, goto XXX
Shift token IDENT = "jj" at line 78 in state XXX, goto XXX
Reduce #1 to expression by token ']' at line 78 in state XXX, call variable, goto XXX
Reduce #1 to expressionlist by token ']' at line 78 in state XXX, goto XXX
Shift token ']' at line 78 in state XXX, goto XXX
Reduce #4 to expression by token '=' at line 78 in state XXX, call operator_array "[]", goto XXX
Shift token '=' at line 78 in state XXX, goto XXX
Shift token '-' at line 78 in state XXX, goto XXX
Shift token IDENT = "m_ar" at line 78 in state XXX, goto XXX
Reduce #1 to expression by token '[' at line 78 in state XXX, call variable, goto XXX
Shift token '[' at line 78 in state XXX, goto XXX
Shift token IDENT = "ii" at line 78 in state XXX, goto XXX
Reduce #1 to expression by token ']' at line 78 in state XXX, call variable, goto XXX
Reduce #1 to expressionlist by token ']' at line 78 in state XXX, goto XXX
Shift token ']' at line 78 in state XXX, goto XXX
Reduce #4 to expression by token '[' at line 78 in state XXX, call operator_array "[]", goto XXX
Shift token '[' at line 78 in state XXX, goto XXX
Shift token IDENT = "jj" at line 78 in state XXX, goto XXX
Reduce #1 to expression by token ']' at line 78 in state XXX, call variable, goto XXX
Reduce #1 to expressionlist by token ']' at line 78 in state XXX, goto XXX
Shift token ']' at line 78 in state XXX, goto XXX
Reduce #4 to expression by token ';' at line 78 in state XXX, call operator_array "[]", goto XXX
Reduce #2 to expression by token ';' at line 78 in state XXX, call unop "-", goto XXX
Reduce #3 to expression by token ';' at line 78 in state XXX, call binop "=", goto XXX
Shift token ';' at line 78 in state XXX, goto XXX
Reduce #2 to statement by token IDENT = "jj" at line 79 in state XXX, call free_expression, goto XXX
Shift token IDENT = "jj" at line 79 in state XXX, goto XXX
Reduce #1 to expression by token "+=" at line 79 in state XXX, call variable, goto XXX
Shift token "+=" at line 79 in state XXX, goto XXX
Shift token UINTEGER = "1" at line 79 in state XXX, goto XXX
Reduce #1 to expression by token ';' at line 79 in state XXX, call constant "constexpr uint", goto XXX
Reduce #3 to expression by token ';' at line 79 in state XXX, call assign_operator "+", goto XXX
Shift token ';' at line 79 in state XXX, goto XXX
Reduce #2 to statement by token '}' at line 80 in state XXX, call free_expression, goto XXX
Reduce #0 to statementlist by token '}' at line 80 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 80 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 80 in state XXX, goto XXX
Shift token '}' at line 80 in state XXX, goto XXX
Reduce #3 to codeblock by token IDENT = "ii" at line 81 in state XXX, call codeblock, goto XXX
Reduce #5 to statement by token IDENT = "ii" at line 81 in state XXX, call conditional_while, goto XXX
Shift token IDENT = "ii" at line 81 in state XXX, goto XXX
Reduce #1 to expression by token "+=" at line 81 in state XXX, call variable, goto XXX
Shift token "+=" at line 81 in state XXX, goto XXX
Shift token UINTEGER = "1" at line 81 in state XXX, goto XXX
Reduce #1 to expression by token ';' at line 81 in state XXX, call constant "constexpr uint", goto XXX
Reduce #3 to expression by token ';' at line 81 in state XXX, call assign_operator "+", goto XXX
Shift token ';' at line 81 in state XXX, goto XXX
Reduce #2 to statement by token '}' at line 82 in state XXX, call free_expression, goto XXX
Reduce #0 to statementlist by token '}' at line 82 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 82 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 82 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 82 in state XXX, goto XXX
Shift token '}' at line 82 in state XXX, goto XXX
Reduce #3 to codeblock by token "return" at line 83 in state XXX, call codeblock, goto XXX
Reduce #5 to statement by token "return" at line 83 in state XXX, call conditional_while, goto XXX
Shift token "return" at line 83 in state XXX, goto XXX
Shift token IDENT = "rt" at line 83 in state XXX, goto XXX
Reduce #1 to expression by token ';' at line 83 in state XXX, call variable, goto XXX
Shift token ';' at line 83 in state XXX, goto XXX
Reduce #3 to statement by token '}' at line 84 in state XXX, call return_value, goto XXX
Reduce #0 to statementlist by token '}' at line 84 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 84 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 84 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 84 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 84 in state XXX, goto XXX
Shift token '}' at line 84 in state XXX, goto XXX
Reduce #8 to callablebody by token "public" at line 85 in state XXX, call callablebody {throws=false,const=true}, goto XXX
Reduce #5 to operatordefinition by token "public" at line 85 in state XXX, call operator_funcdef, goto XXX
Reduce #1 to inclass_definition by token "public" at line 85 in state XXX, call definition_decl_impl_pass 4, goto XXX
Shift token "public" at line 85 in state XXX, goto XXX
Reduce #1 to linkage by token "operator" at line 85 in state XXX, call linkage {private=false,linkage="external",explicit=true}, goto XXX
Shift token "operator" at line 85 in state XXX, goto XXX
Shift token '*' at line 85 in state XXX, goto XXX
Reduce #1 to operatordecl by token IDENT = "Matrix" at line 85 in state XXX, call operatordecl {name="*",symbol="mul"}, goto XXX
Shift token IDENT = "Matrix" at line 85 in state XXX, goto XXX
Reduce #1 to typename by token '[' at line 85 in state XXX, goto XXX
Reduce #1 to typehdr by token '[' at line 85 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token '[' at line 85 in state XXX, goto XXX
Shift token '[' at line 85 in state XXX, goto XXX
Shift token IDENT = "R" at line 85 in state XXX, goto XXX
Reduce #1 to typename by token ',' at line 85 in state XXX, goto XXX
Reduce #1 to typehdr by token ',' at line 85 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token ',' at line 85 in state XXX, goto XXX
Shift token ',' at line 85 in state XXX, goto XXX
Shift token IDENT = "DIM1" at line 85 in state XXX, goto XXX
Reduce #1 to typename by token ',' at line 85 in state XXX, goto XXX
Reduce #1 to typehdr by token ',' at line 85 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token ',' at line 85 in state XXX, goto XXX
Shift token ',' at line 85 in state XXX, goto XXX
Shift token IDENT = "DIM1" at line 85 in state XXX, goto XXX
Reduce #1 to typename by token ']' at line 85 in state XXX, goto XXX
Reduce #1 to typehdr by token ']' at line 85 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token ']' at line 85 in state XXX, goto XXX
Reduce #1 to generic_instance_deflist by token ']' at line 85 in state XXX, call generic_instance_type, goto XXX
Reduce #3 to generic_instance_deflist by token ']' at line 85 in state XXX, call generic_instance_type, goto XXX
Reduce #3 to generic_instance_deflist by token ']' at line 85 in state XXX, call generic_instance_type, goto XXX
Reduce #1 to generic_instance by token ']' at line 85 in state XXX, call generic_instance, goto XXX
Shift token ']' at line 85 in state XXX, goto XXX
Reduce #4 to typegen by token '(' at line 85 in state XXX, call typegen_generic, goto XXX
Reduce #1 to typespec by token '(' at line 85 in state XXX, call typespec, goto XXX
Shift token '(' at line 85 in state XXX, goto XXX
Shift token "const" at line 85 in state XXX, goto XXX
Shift token IDENT = "Matrix" at line 85 in state XXX, goto XXX
Reduce #1 to typename by token '[' at line 85 in state XXX, goto XXX
Reduce #2 to typehdr by token '[' at line 85 in state XXX, call typehdr {const=true}, goto XXX
Reduce #1 to typegen by token '[' at line 85 in state XXX, goto XXX
Shift token '[' at line 85 in state XXX, goto XXX
Shift token IDENT = "R" at line 85 in state XXX, goto XXX
Reduce #1 to typename by token ',' at line 85 in state XXX, goto XXX
Reduce #1 to typehdr by token ',' at line 85 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token ',' at line 85 in state XXX, goto XXX
Shift token ',' at line 85 in state XXX, goto XXX
Shift token IDENT = "DIM2" at line 85 in state XXX, goto XXX
Reduce #1 to typename by token ',' at line 85 in state XXX, goto XXX
Reduce #1 to typehdr by token ',' at line 85 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token ',' at line 85 in state XXX, goto XXX
Shift token ',' at line 85 in state XXX, goto XXX
Shift token IDENT = "DIM1" at line 85 in state XXX, goto XXX
Reduce #1 to typename by token ']' at line 85 in state XXX, goto XXX
Reduce #1 to typehdr by token ']' at line 85 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token ']' at line 85 in state XXX, goto XXX
Reduce #1 to generic_instance_deflist by token ']' at line 85 in state XXX, call generic_instance_type, goto XXX
Reduce #3 to generic_instance_deflist by token ']' at line 85 in state XXX, call generic_instance_type, goto XXX
Reduce #3 to generic_instance_deflist by token ']' at line 85 in state XXX, call generic_instance_type, goto XXX
Reduce #1 to generic_instance by token ']' at line 85 in state XXX, call generic_instance, goto XXX
Shift token ']' at line 85 in state XXX, goto XXX
Reduce #4 to typegen by token IDENT = "o" at line 85 in state XXX, call typegen_generic, goto XXX
Reduce #1 to typespec by token IDENT = "o" at line 85 in state XXX, call typespec, goto XXX
Shift token IDENT = "o" at line 85 in state XXX, goto XXX
Reduce #2 to paramdecl by token ')' at line 85 in state XXX, call paramdef, goto XXX
Reduce #1 to parameters by token ')' at line 85 in state XXX, goto XXX
Reduce #1 to parameterlist by token ')' at line 85 in state XXX, call paramdeflist, goto XXX
Shift token ')' at line 85 in state XXX, goto XXX
Shift token "const" at line 85 in state XXX, goto XXX
Shift token "nothrow" at line 85 in state XXX, goto XXX
Shift token '{' at line 86 in state XXX, goto XXX
Shift token "var" at line 87 in state XXX, goto XXX
Shift token IDENT = "Matrix" at line 87 in state XXX, goto XXX
Reduce #1 to typename by token '[' at line 87 in state XXX, goto XXX
Reduce #1 to typehdr by token '[' at line 87 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token '[' at line 87 in state XXX, goto XXX
Shift token '[' at line 87 in state XXX, goto XXX
Shift token IDENT = "R" at line 87 in state XXX, goto XXX
Reduce #1 to typename by token ',' at line 87 in state XXX, goto XXX
Reduce #1 to typehdr by token ',' at line 87 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token ',' at line 87 in state XXX, goto XXX
Shift token ',' at line 87 in state XXX, goto XXX
Shift token IDENT = "DIM1" at line 87 in state XXX, goto XXX
Reduce #1 to typename by token ',' at line 87 in state XXX, goto XXX
Reduce #1 to typehdr by token ',' at line 87 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token ',' at line 87 in state XXX, goto XXX
Shift token ',' at line 87 in state XXX, goto XXX
Shift token IDENT = "DIM1" at line 87 in state XXX, goto XXX
Reduce #1 to typename by token ']' at line 87 in state XXX, goto XXX
Reduce #1 to typehdr by token ']' at line 87 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token ']' at line 87 in state XXX, goto XXX
Reduce #1 to generic_instance_deflist by token ']' at line 87 in state XXX, call generic_instance_type, goto XXX
Reduce #3 to generic_instance_deflist by token ']' at line 87 in state XXX, call generic_instance_type, goto XXX
Reduce #3 to generic_instance_deflist by token ']' at line 87 in state XXX, call generic_instance_type, goto XXX
Reduce #1 to generic_instance by token ']' at line 87 in state XXX, call generic_instance, goto XXX
Shift token ']' at line 87 in state XXX, goto XXX
Reduce #4 to typegen by token IDENT = "rt" at line 87 in state XXX, call typegen_generic, goto XXX
Reduce #1 to typespec by token IDENT = "rt" at line 87 in state XXX, call typespec, goto XXX
Shift token IDENT = "rt" at line 87 in state XXX, goto XXX
Reduce #2 to variabledefinition by token ';' at line 87 in state XXX, call vardef, goto XXX
Shift token ';' at line 87 in state XXX, goto XXX
Reduce #3 to statement by token "var" at line 88 in state XXX, call definition 1, goto XXX
Shift token "var" at line 88 in state XXX, goto XXX
Shift token IDENT = "int" at line 88 in state XXX, goto XXX
Reduce #1 to typename by token IDENT = "ii" at line 88 in state XXX, goto XXX
Reduce #1 to typehdr by token IDENT = "ii" at line 88 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token IDENT = "ii" at line 88 in state XXX, goto XXX
Reduce #1 to typespec by token IDENT = "ii" at line 88 in state XXX, call typespec, goto XXX
Shift token IDENT = "ii" at line 88 in state XXX, goto XXX
Shift token '=' at line 88 in state XXX, goto XXX
Shift token UINTEGER = "0" at line 88 in state XXX, goto XXX
Reduce #1 to expression by token ';' at line 88 in state XXX, call constant "constexpr uint", goto XXX
Reduce #4 to variabledefinition by token ';' at line 88 in state XXX, call vardef_assign, goto XXX
Shift token ';' at line 88 in state XXX, goto XXX
Reduce #3 to statement by token "while" at line 89 in state XXX, call definition 1, goto XXX
Shift token "while" at line 89 in state XXX, goto XXX
Shift token '(' at line 89 in state XXX, goto XXX
Shift token IDENT = "ii" at line 89 in state XXX, goto XXX
Reduce #1 to expression by token '<' at line 89 in state XXX, call variable, goto XXX
Shift token '<' at line 89 in state XXX, goto XXX
Shift token IDENT = "DIM1" at line 89 in state XXX, goto XXX
Reduce #1 to expression by token ')' at line 89 in state XXX, call variable, goto XXX
Reduce #3 to expression by token ')' at line 89 in state XXX, call binop "<", goto XXX
Shift token ')' at line 89 in state XXX, goto XXX
Shift token '{' at line 90 in state XXX, goto XXX
Shift token "var" at line 91 in state XXX, goto XXX
Shift token IDENT = "int" at line 91 in state XXX, goto XXX
Reduce #1 to typename by token IDENT = "jj" at line 91 in state XXX, goto XXX
Reduce #1 to typehdr by token IDENT = "jj" at line 91 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token IDENT = "jj" at line 91 in state XXX, goto XXX
Reduce #1 to typespec by token IDENT = "jj" at line 91 in state XXX, call typespec, goto XXX
Shift token IDENT = "jj" at line 91 in state XXX, goto XXX
Shift token '=' at line 91 in state XXX, goto XXX
Shift token UINTEGER = "0" at line 91 in state XXX, goto XXX
Reduce #1 to expression by token ';' at line 91 in state XXX, call constant "constexpr uint", goto XXX
Reduce #4 to variabledefinition by token ';' at line 91 in state XXX, call vardef_assign, goto XXX
Shift token ';' at line 91 in state XXX, goto XXX
Reduce #3 to statement by token "while" at line 92 in state XXX, call definition 1, goto XXX
Shift token "while" at line 92 in state XXX, goto XXX
Shift token '(' at line 92 in state XXX, goto XXX
Shift token IDENT = "jj" at line 92 in state XXX, goto XXX
Reduce #1 to expression by token '<' at line 92 in state XXX, call variable, goto XXX
Shift token '<' at line 92 in state XXX, goto XXX
Shift token IDENT = "DIM1" at line 92 in state XXX, goto XXX
Reduce #1 to expression by token ')' at line 92 in state XXX, call variable, goto XXX
Reduce #3 to expression by token ')' at line 92 in state XXX, call binop "<", goto XXX
Shift token ')' at line 92 in state XXX, goto XXX
Shift token '{' at line 93 in state XXX, goto XXX
Shift token "var" at line 94 in state XXX, goto XXX
Shift token IDENT = "double" at line 94 in state XXX, goto XXX
Reduce #1 to typename by token IDENT = "sum" at line 94 in state XXX, goto XXX
Reduce #1 to typehdr by token IDENT = "sum" at line 94 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token IDENT = "sum" at line 94 in state XXX, goto XXX
Reduce #1 to typespec by token IDENT = "sum" at line 94 in state XXX, call typespec, goto XXX
Shift token IDENT = "sum" at line 94 in state XXX, goto XXX
Shift token '=' at line 94 in state XXX, goto XXX
Shift token UINTEGER = "0" at line 94 in state XXX, goto XXX
Reduce #1 to expression by token ';' at line 94 in state XXX, call constant "constexpr uint", goto XXX
Reduce #4 to variabledefinition by token ';' at line 94 in state XXX, call vardef_assign, goto XXX
Shift token ';' at line 94 in state XXX, goto XXX
Reduce #3 to statement by token "var" at line 95 in state XXX, call definition 1, goto XXX
Shift token "var" at line 95 in state XXX, goto XXX
Shift token IDENT = "int" at line 95 in state XXX, goto XXX
Reduce #1 to typename by token IDENT = "kk" at line 95 in state XXX, goto XXX
Reduce #1 to typehdr by token IDENT = "kk" at line 95 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token IDENT = "kk" at line 95 in state XXX, goto XXX
Reduce #1 to typespec by token IDENT = "kk" at line 95 in state XXX, call typespec, goto XXX
Shift token IDENT = "kk" at line 95 in state XXX, goto XXX
Shift token '=' at line 95 in state XXX, goto XXX
Shift token UINTEGER = "0" at line 95 in state XXX, goto XXX
Reduce #1 to expression by token ';' at line 95 in state XXX, call constant "constexpr uint", goto XXX
Reduce #4 to variabledefinition by token ';' at line 95 in state XXX, call vardef_assign, goto XXX
Shift token ';' at line 95 in state XXX, goto XXX
Reduce #3 to statement by token "while" at line 96 in state XXX, call definition 1, goto XXX
Shift token "while" at line 96 in state XXX, goto XXX
Shift token '(' at line 96 in state XXX, goto XXX
Shift token IDENT = "kk" at line 96 in state XXX, goto XXX
Reduce #1 to expression by token '<' at line 96 in state XXX, call variable, goto XXX
Shift token '<' at line 96 in state XXX, goto XXX
Shift token IDENT = "DIM2" at line 96 in state XXX, goto XXX
Reduce #1 to expression by token ')' at line 96 in state XXX, call variable, goto XXX
Reduce #3 to expression by token ')' at line 96 in state XXX, call binop "<", goto XXX
Shift token ')' at line 96 in state XXX, goto XXX
Shift token '{' at line 97 in state XXX, goto XXX
Shift token IDENT = "sum" at line 98 in state XXX, goto XXX
Reduce #1 to expression by token "+=" at line 98 in state XXX, call variable, goto XXX
Shift token "+=" at line 98 in state XXX, goto XXX
Shift token IDENT = "m_ar" at line 98 in state XXX, goto XXX
Reduce #1 to expression by token '[' at line 98 in state XXX, call variable, goto XXX
Shift token '[' at line 98 in state XXX, goto XXX
Shift token IDENT = "ii" at line 98 in state XXX, goto XXX
Reduce #1 to expression by token ']' at line 98 in state XXX, call variable, goto XXX
Reduce #1 to expressionlist by token ']' at line 98 in state XXX, goto XXX
Shift token ']' at line 98 in state XXX, goto XXX
Reduce #4 to expression by token '[' at line 98 in state XXX, call operator_array "[]", goto XXX
Shift token '[' at line 98 in state XXX, goto XXX
Shift token IDENT = "kk" at line 98 in state XXX, goto XXX
Reduce #1 to expression by token ']' at line 98 in state XXX, call variable, goto XXX
Reduce #1 to expressionlist by token ']' at line 98 in state XXX, goto XXX
Shift token ']' at line 98 in state XXX, goto XXX
Reduce #4 to expression by token '*' at line 98 in state XXX, call operator_array "[]", goto XXX
Shift token '*' at line 98 in state XXX, goto XXX
Shift token IDENT = "o" at line 98 in state XXX, goto XXX
Reduce #1 to expression by token '.' at line 98 in state XXX, call variable, goto XXX
Shift token '.' at line 98 in state XXX, goto XXX
Shift token IDENT = "m_ar" at line 98 in state XXX, goto XXX
Reduce #3 to expression by token '[' at line 98 in state XXX, call member, goto XXX
Shift token '[' at line 98 in state XXX, goto XXX
Shift token IDENT = "kk" at line 98 in state XXX, goto XXX
Reduce #1 to expression by token ']' at line 98 in state XXX, call variable, goto XXX
Reduce #1 to expressionlist by token ']' at line 98 in state XXX, goto XXX
Shift token ']' at line 98 in state XXX, goto XXX
Reduce #4 to expression by token '[' at line 98 in state XXX, call operator_array "[]", goto XXX
Shift token '[' at line 98 in state XXX, goto XXX
Shift token IDENT = "jj" at line 98 in state XXX, goto XXX
Reduce #1 to expression by token ']' at line 98 in state XXX, call variable, goto XXX
Reduce #1 to expressionlist by token ']' at line 98 in state XXX, goto XXX
Shift token ']' at line 98 in state XXX, goto XXX
Reduce #4 to expression by token ';' at line 98 in state XXX, call operator_array "[]", goto XXX
Reduce #3 to expression by token ';' at line 98 in state XXX, call binop "*", goto XXX
Reduce #3 to expression by token ';' at line 98 in state XXX, call assign_operator "+", goto XXX
Shift token ';' at line 98 in state XXX, goto XXX
Reduce #2 to statement by token IDENT = "kk" at line 99 in state XXX, call free_expression, goto XXX
Shift token IDENT = "kk" at line 99 in state XXX, goto XXX
Reduce #1 to expression by token "+=" at line 99 in state XXX, call variable, goto XXX
Shift token "+=" at line 99 in state XXX, goto XXX
Shift token UINTEGER = "1" at line 99 in state XXX, goto XXX
Reduce #1 to expression by token ';' at line 99 in state XXX, call constant "constexpr uint", goto XXX
Reduce #3 to expression by token ';' at line 99 in state XXX, call assign_operator "+", goto XXX
Shift token ';' at line 99 in state XXX, goto XXX
Reduce #2 to statement by token '}' at line 100 in state XXX, call free_expression, goto XXX
Reduce #0 to statementlist by token '}' at line 100 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 100 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 100 in state XXX, goto XXX
Shift token '}' at line 100 in state XXX, goto XXX
Reduce #3 to codeblock by token IDENT = "rt" at line 101 in state XXX, call codeblock, goto XXX
Reduce #5 to statement by token IDENT = "rt" at line 101 in state XXX, call conditional_while, goto XXX
Shift token IDENT = "rt" at line 101 in state XXX, goto XXX
Reduce #1 to expression by token '.' at line 101 in state XXX, call variable, goto XXX
Shift token '.' at line 101 in state XXX, goto XXX
Shift token IDENT = "m_ar" at line 101 in state XXX, goto XXX
Reduce #3 to expression by token '[' at line 101 in state XXX, call member, goto XXX
Shift token '[' at line 101 in state XXX, goto XXX
Shift token IDENT = "ii" at line 101 in state XXX, goto XXX
Reduce #1 to expression by token ']' at line 101 in state XXX, call variable, goto XXX
Reduce #1 to expressionlist by token ']' at line 101 in state XXX, goto XXX
Shift token ']' at line 101 in state XXX, goto XXX
Reduce #4 to expression by token '[' at line 101 in state XXX, call operator_array "[]", goto XXX
Shift token '[' at line 101 in state XXX, goto XXX
Shift token IDENT = "jj" at line 101 in state XXX, goto XXX
Reduce #1 to expression by token ']' at line 101 in state XXX, call variable, goto XXX
Reduce #1 to expressionlist by token ']' at line 101 in state XXX, goto XXX
Shift token ']' at line 101 in state XXX, goto XXX
Reduce #4 to expression by token '=' at line 101 in state XXX, call operator_array "[]", goto XXX
Shift token '=' at line 101 in state XXX, goto XXX
Shift token IDENT = "sum" at line 101 in state XXX, goto XXX
Reduce #1 to expression by token ';' at line 101 in state XXX, call variable, goto XXX
Reduce #3 to expression by token ';' at line 101 in state XXX, call binop "=", goto XXX
Shift token ';' at line 101 in state XXX, goto XXX
Reduce #2 to statement by token IDENT = "jj" at line 102 in state XXX, call free_expression, goto XXX
Shift token IDENT = "jj" at line 102 in state XXX, goto XXX
Reduce #1 to expression by token "+=" at line 102 in state XXX, call variable, goto XXX
Shift token "+=" at line 102 in state XXX, goto XXX
Shift token UINTEGER = "1" at line 102 in state XXX, goto XXX
Reduce #1 to expression by token ';' at line 102 in state XXX, call constant "constexpr uint", goto XXX
Reduce #3 to expression by token ';' at line 102 in state XXX, call assign_operator "+", goto XXX
Shift token ';' at line 102 in state XXX, goto XXX
Reduce #2 to statement by token '}' at line 103 in state XXX, call free_expression, goto XXX
Reduce #0 to statementlist by token '}' at line 103 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 103 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 103 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 103 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 103 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 103 in state XXX, goto XXX
Shift token '}' at line 103 in state XXX, goto XXX
Reduce #3 to codeblock by token IDENT = "ii" at line 104 in state XXX, call codeblock, goto XXX
Reduce #5 to statement by token IDENT = "ii" at line 104 in state XXX, call conditional_while, goto XXX
Shift token IDENT = "ii" at line 104 in state XXX, goto XXX
Reduce #1 to expression by token "+=" at line 104 in state XXX, call variable, goto XXX
Shift token "+=" at line 104 in state XXX, goto XXX
Shift token UINTEGER = "1" at line 104 in state XXX, goto XXX
Reduce #1 to expression by token ';' at line 104 in state XXX, call constant "constexpr uint", goto XXX
Reduce #3 to expression by token ';' at line 104 in state XXX, call assign_operator "+", goto XXX
Shift token ';' at line 104 in state XXX, goto XXX
Reduce #2 to statement by token '}' at line 105 in state XXX, call free_expression, goto XXX
Reduce #0 to statementlist by token '}' at line 105 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 105 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 105 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 105 in state XXX, goto XXX
Shift token '}' at line 105 in state XXX, goto XXX
Reduce #3 to codeblock by token "return" at line 106 in state XXX, call codeblock, goto XXX
Reduce #5 to statement by token "return" at line 106 in state XXX, call conditional_while, goto XXX
Shift token "return" at line 106 in state XXX, goto XXX
Shift token IDENT = "rt" at line 106 in state XXX, goto XXX
Reduce #1 to expression by token ';' at line 106 in state XXX, call variable, goto XXX
Shift token ';' at line 106 in state XXX, goto XXX
Reduce #3 to statement by token '}' at line 107 in state XXX, call return_value, goto XXX
Reduce #0 to statementlist by token '}' at line 107 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 107 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 107 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 107 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 107 in state XXX, goto XXX
Shift token '}' at line 107 in state XXX, goto XXX
Reduce #8 to callablebody by token "public" at line 108 in state XXX, call callablebody {throws=false,const=true}, goto XXX
Reduce #5 to operatordefinition by token "public" at line 108 in state XXX, call operator_funcdef, goto XXX
Reduce #1 to inclass_definition by token "public" at line 108 in state XXX, call definition_decl_impl_pass 4, goto XXX
Shift token "public" at line 108 in state XXX, goto XXX
Reduce #1 to linkage by token "operator" at line 108 in state XXX, call linkage {private=false,linkage="external",explicit=true}, goto XXX
Shift token "operator" at line 108 in state XXX, goto XXX
Shift token '*' at line 108 in state XXX, goto XXX
Reduce #1 to operatordecl by token IDENT = "Matrix" at line 108 in state XXX, call operatordecl {name="*",symbol="mul"}, goto XXX
Shift token IDENT = "Matrix" at line 108 in state XXX, goto XXX
Reduce #1 to typename by token '[' at line 108 in state XXX, goto XXX
Reduce #1 to typehdr by token '[' at line 108 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token '[' at line 108 in state XXX, goto XXX
Shift token '[' at line 108 in state XXX, goto XXX
Shift token IDENT = "R" at line 108 in state XXX, goto XXX
Reduce #1 to typename by token ',' at line 108 in state XXX, goto XXX
Reduce #1 to typehdr by token ',' at line 108 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token ',' at line 108 in state XXX, goto XXX
Shift token ',' at line 108 in state XXX, goto XXX
Shift token IDENT = "DIM1" at line 108 in state XXX, goto XXX
Reduce #1 to typename by token ',' at line 108 in state XXX, goto XXX
Reduce #1 to typehdr by token ',' at line 108 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token ',' at line 108 in state XXX, goto XXX
Shift token ',' at line 108 in state XXX, goto XXX
Shift token IDENT = "DIM2" at line 108 in state XXX, goto XXX
Reduce #1 to typename by token ']' at line 108 in state XXX, goto XXX
Reduce #1 to typehdr by token ']' at line 108 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token ']' at line 108 in state XXX, goto XXX
Reduce #1 to generic_instance_deflist by token ']' at line 108 in state XXX, call generic_instance_type, goto XXX
Reduce #3 to generic_instance_deflist by token ']' at line 108 in state XXX, call generic_instance_type, goto XXX
Reduce #3 to generic_instance_deflist by token ']' at line 108 in state XXX, call generic_instance_type, goto XXX
Reduce #1 to generic_instance by token ']' at line 108 in state XXX, call generic_instance, goto XXX
Shift token ']' at line 108 in state XXX, goto XXX
Reduce #4 to typegen by token '(' at line 108 in state XXX, call typegen_generic, goto XXX
Reduce #1 to typespec by token '(' at line 108 in state XXX, call typespec, goto XXX
Shift token '(' at line 108 in state XXX, goto XXX
Shift token "const" at line 108 in state XXX, goto XXX
Shift token IDENT = "R" at line 108 in state XXX, goto XXX
Reduce #1 to typename by token IDENT = "o" at line 108 in state XXX, goto XXX
Reduce #2 to typehdr by token IDENT = "o" at line 108 in state XXX, call typehdr {const=true}, goto XXX
Reduce #1 to typegen by token IDENT = "o" at line 108 in state XXX, goto XXX
Reduce #1 to typespec by token IDENT = "o" at line 108 in state XXX, call typespec, goto XXX
Shift token IDENT = "o" at line 108 in state XXX, goto XXX
Reduce #2 to paramdecl by token ')' at line 108 in state XXX, call paramdef, goto XXX
Reduce #1 to parameters by token ')' at line 108 in state XXX, goto XXX
Reduce #1 to parameterlist by token ')' at line 108 in state XXX, call paramdeflist, goto XXX
Shift token ')' at line 108 in state XXX, goto XXX
Shift token "const" at line 108 in state XXX, goto XXX
Shift token "nothrow" at line 108 in state XXX, goto XXX
Shift token '{' at line 109 in state XXX, goto XXX
Shift token "var" at line 110 in state XXX, goto XXX
Shift token IDENT = "Matrix" at line 110 in state XXX, goto XXX
Reduce #1 to typename by token '[' at line 110 in state XXX, goto XXX
Reduce #1 to typehdr by token '[' at line 110 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token '[' at line 110 in state XXX, goto XXX
Shift token '[' at line 110 in state XXX, goto XXX
Shift token IDENT = "R" at line 110 in state XXX, goto XXX
Reduce #1 to typename by token ',' at line 110 in state XXX, goto XXX
Reduce #1 to typehdr by token ',' at line 110 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token ',' at line 110 in state XXX, goto XXX
Shift token ',' at line 110 in state XXX, goto XXX
Shift token IDENT = "DIM1" at line 110 in state XXX, goto XXX
Reduce #1 to typename by token ',' at line 110 in state XXX, goto XXX
Reduce #1 to typehdr by token ',' at line 110 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token ',' at line 110 in state XXX, goto XXX
Shift token ',' at line 110 in state XXX, goto XXX
Shift token IDENT = "DIM2" at line 110 in state XXX, goto XXX
Reduce #1 to typename by token ']' at line 110 in state XXX, goto XXX
Reduce #1 to typehdr by token ']' at line 110 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token ']' at line 110 in state XXX, goto XXX
Reduce #1 to generic_instance_deflist by token ']' at line 110 in state XXX, call generic_instance_type, goto XXX
Reduce #3 to generic_instance_deflist by token ']' at line 110 in state XXX, call generic_instance_type, goto XXX
Reduce #3 to generic_instance_deflist by token ']' at line 110 in state XXX, call generic_instance_type, goto XXX
Reduce #1 to generic_instance by token ']' at line 110 in state XXX, call generic_instance, goto XXX
Shift token ']' at line 110 in state XXX, goto XXX
Reduce #4 to typegen by token IDENT = "rt" at line 110 in state XXX, call typegen_generic, goto XXX
Reduce #1 to typespec by token IDENT = "rt" at line 110 in state XXX, call typespec, goto XXX
Shift token IDENT = "rt" at line 110 in state XXX, goto XXX
Reduce #2 to variabledefinition by token ';' at line 110 in state XXX, call vardef, goto XXX
Shift token ';' at line 110 in state XXX, goto XXX
Reduce #3 to statement by token "var" at line 111 in state XXX, call definition 1, goto XXX
Shift token "var" at line 111 in state XXX, goto XXX
Shift token IDENT = "int" at line 111 in state XXX, goto XXX
Reduce #1 to typename by token IDENT = "ii" at line 111 in state XXX, goto XXX
Reduce #1 to typehdr by token IDENT = "ii" at line 111 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token IDENT = "ii" at line 111 in state XXX, goto XXX
Reduce #1 to typespec by token IDENT = "ii" at line 111 in state XXX, call typespec, goto XXX
Shift token IDENT = "ii" at line 111 in state XXX, goto XXX
Shift token '=' at line 111 in state XXX, goto XXX
Shift token UINTEGER = "0" at line 111 in state XXX, goto XXX
Reduce #1 to expression by token ';' at line 111 in state XXX, call constant "constexpr uint", goto XXX
Reduce #4 to variabledefinition by token ';' at line 111 in state XXX, call vardef_assign, goto XXX
Shift token ';' at line 111 in state XXX, goto XXX
Reduce #3 to statement by token "while" at line 112 in state XXX, call definition 1, goto XXX
Shift token "while" at line 112 in state XXX, goto XXX
Shift token '(' at line 112 in state XXX, goto XXX
Shift token IDENT = "ii" at line 112 in state XXX, goto XXX
Reduce #1 to expression by token '<' at line 112 in state XXX, call variable, goto XXX
Shift token '<' at line 112 in state XXX, goto XXX
Shift token IDENT = "DIM1" at line 112 in state XXX, goto XXX
Reduce #1 to expression by token ')' at line 112 in state XXX, call variable, goto XXX
Reduce #3 to expression by token ')' at line 112 in state XXX, call binop "<", goto XXX
Shift token ')' at line 112 in state XXX, goto XXX
Shift token '{' at line 113 in state XXX, goto XXX
Shift token "var" at line 114 in state XXX, goto XXX
Shift token IDENT = "int" at line 114 in state XXX, goto XXX
Reduce #1 to typename by token IDENT = "jj" at line 114 in state XXX, goto XXX
Reduce #1 to typehdr by token IDENT = "jj" at line 114 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token IDENT = "jj" at line 114 in state XXX, goto XXX
Reduce #1 to typespec by token IDENT = "jj" at line 114 in state XXX, call typespec, goto XXX
Shift token IDENT = "jj" at line 114 in state XXX, goto XXX
Shift token '=' at line 114 in state XXX, goto XXX
Shift token UINTEGER = "0" at line 114 in state XXX, goto XXX
Reduce #1 to expression by token ';' at line 114 in state XXX, call constant "constexpr uint", goto XXX
Reduce #4 to variabledefinition by token ';' at line 114 in state XXX, call vardef_assign, goto XXX
Shift token ';' at line 114 in state XXX, goto XXX
Reduce #3 to statement by token "while" at line 115 in state XXX, call definition 1, goto XXX
Shift token "while" at line 115 in state XXX, goto XXX
Shift token '(' at line 115 in state XXX, goto XXX
Shift token IDENT = "jj" at line 115 in state XXX, goto XXX
Reduce #1 to expression by token '<' at line 115 in state XXX, call variable, goto XXX
Shift token '<' at line 115 in state XXX, goto XXX
Shift token IDENT = "DIM2" at line 115 in state XXX, goto XXX
Reduce #1 to expression by token ')' at line 115 in state XXX, call variable, goto XXX
Reduce #3 to expression by token ')' at line 115 in state XXX, call binop "<", goto XXX
Shift token ')' at line 115 in state XXX, goto XXX
Shift token '{' at line 116 in state XXX, goto XXX
Shift token IDENT = "rt" at line 117 in state XXX, goto XXX
Reduce #1 to expression by token '.' at line 117 in state XXX, call variable, goto XXX
Shift token '.' at line 117 in state XXX, goto XXX
Shift token IDENT = "m_ar" at line 117 in state XXX, goto XXX
Reduce #3 to expression by token '[' at line 117 in state XXX, call member, goto XXX
Shift token '[' at line 117 in state XXX, goto XXX
Shift token IDENT = "ii" at line 117 in state XXX, goto XXX
Reduce #1 to expression by token ']' at line 117 in state XXX, call variable, goto XXX
Reduce #1 to expressionlist by token ']' at line 117 in state XXX, goto XXX
Shift token ']' at line 117 in state XXX, goto XXX
Reduce #4 to expression by token '[' at line 117 in state XXX, call operator_array "[]", goto XXX
Shift token '[' at line 117 in state XXX, goto XXX
Shift token IDENT = "jj" at line 117 in state XXX, goto XXX
Reduce #1 to expression by token ']' at line 117 in state XXX, call variable, goto XXX
Reduce #1 to expressionlist by token ']' at line 117 in state XXX, goto XXX
Shift token ']' at line 117 in state XXX, goto XXX
Reduce #4 to expression by token '=' at line 117 in state XXX, call operator_array "[]", goto XXX
Shift token '=' at line 117 in state XXX, goto XXX
Shift token IDENT = "m_ar" at line 117 in state XXX, goto XXX
Reduce #1 to expression by token '[' at line 117 in state XXX, call variable, goto XXX
Shift token '[' at line 117 in state XXX, goto XXX
Shift token IDENT = "ii" at line 117 in state XXX, goto XXX
Reduce #1 to expression by token ']' at line 117 in state XXX, call variable, goto XXX
Reduce #1 to expressionlist by token ']' at line 117 in state XXX, goto XXX
Shift token ']' at line 117 in state XXX, goto XXX
Reduce #4 to expression by token '[' at line 117 in state XXX, call operator_array "[]", goto XXX
Shift token '[' at line 117 in state XXX, goto XXX
Shift token IDENT = "jj" at line 117 in state XXX, goto XXX
Reduce #1 to expression by token ']' at line 117 in state XXX, call variable, goto XXX
Reduce #1 to expressionlist by token ']' at line 117 in state XXX, goto XXX
Shift token ']' at line 117 in state XXX, goto XXX
Reduce #4 to expression by token '*' at line 117 in state XXX, call operator_array "[]", goto XXX
Shift token '*' at line 117 in state XXX, goto XXX
Shift token IDENT = "o" at line 117 in state XXX, goto XXX
Reduce #1 to expression by token ';' at line 117 in state XXX, call variable, goto XXX
Reduce #3 to expression by token ';' at line 117 in state XXX, call binop "*", goto XXX
Reduce #3 to expression by token ';' at line 117 in state XXX, call binop "=", goto XXX
Shift token ';' at line 117 in state XXX, goto XXX
Reduce #2 to statement by token IDENT = "jj" at line 118 in state XXX, call free_expression, goto XXX
Shift token IDENT = "jj" at line 118 in state XXX, goto XXX
Reduce #1 to expression by token "+=" at line 118 in state XXX, call variable, goto XXX
Shift token "+=" at line 118 in state XXX, goto XXX
Shift token UINTEGER = "1" at line 118 in state XXX, goto XXX
Reduce #1 to expression by token ';' at line 118 in state XXX, call constant "constexpr uint", goto XXX
Reduce #3 to expression by token ';' at line 118 in state XXX, call assign_operator "+", goto XXX
Shift token ';' at line 118 in state XXX, goto XXX
Reduce #2 to statement by token '}' at line 119 in state XXX, call free_expression, goto XXX
Reduce #0 to statementlist by token '}' at line 119 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 119 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 119 in state XXX, goto XXX
Shift token '}' at line 119 in state XXX, goto XXX
Reduce #3 to codeblock by token IDENT = "ii" at line 120 in state XXX, call codeblock, goto XXX
Reduce #5 to statement by token IDENT = "ii" at line 120 in state XXX, call conditional_while, goto XXX
Shift token IDENT = "ii" at line 120 in state XXX, goto XXX
Reduce #1 to expression by token "+=" at line 120 in state XXX, call variable, goto XXX
Shift token "+=" at line 120 in state XXX, goto XXX
Shift token UINTEGER = "1" at line 120 in state XXX, goto XXX
Reduce #1 to expression by token ';' at line 120 in state XXX, call constant "constexpr uint", goto XXX
Reduce #3 to expression by token ';' at line 120 in state XXX, call assign_operator "+", goto XXX
Shift token ';' at line 120 in state XXX, goto XXX
Reduce #2 to statement by token '}' at line 121 in state XXX, call free_expression, goto XXX
Reduce #0 to statementlist by token '}' at line 121 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 121 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 121 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 121 in state XXX, goto XXX
Shift token '}' at line 121 in state XXX, goto XXX
Reduce #3 to codeblock by token "return" at line 122 in state XXX, call codeblock, goto XXX
Reduce #5 to statement by token "return" at line 122 in state XXX, call conditional_while, goto XXX
Shift token "return" at line 122 in state XXX, goto XXX
Shift token IDENT = "rt" at line 122 in state XXX, goto XXX
Reduce #1 to expression by token ';' at line 122 in state XXX, call variable, goto XXX
Shift token ';' at line 122 in state XXX, goto XXX
Reduce #3 to statement by token '}' at line 123 in state XXX, call return_value, goto XXX
Reduce #0 to statementlist by token '}' at line 123 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 123 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 123 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 123 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 123 in state XXX, goto XXX
Shift token '}' at line 123 in state XXX, goto XXX
Reduce #8 to callablebody by token "public" at line 124 in state XXX, call callablebody {throws=false,const=true}, goto XXX
Reduce #5 to operatordefinition by token "public" at line 124 in state XXX, call operator_funcdef, goto XXX
Reduce #1 to inclass_definition by token "public" at line 124 in state XXX, call definition_decl_impl_pass 4, goto XXX
Shift token "public" at line 124 in state XXX, goto XXX
Reduce #1 to linkage by token "operator" at line 124 in state XXX, call linkage {private=false,linkage="external",explicit=true}, goto XXX
Shift token "operator" at line 124 in state XXX, goto XXX
Shift token '/' at line 124 in state XXX, goto XXX
Reduce #1 to operatordecl by token IDENT = "Matrix" at line 124 in state XXX, call operatordecl {name="/",symbol="div"}, goto XXX
Shift token IDENT = "Matrix" at line 124 in state XXX, goto XXX
Reduce #1 to typename by token '[' at line 124 in state XXX, goto XXX
Reduce #1 to typehdr by token '[' at line 124 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token '[' at line 124 in state XXX, goto XXX
Shift token '[' at line 124 in state XXX, goto XXX
Shift token IDENT = "R" at line 124 in state XXX, goto XXX
Reduce #1 to typename by token ',' at line 124 in state XXX, goto XXX
Reduce #1 to typehdr by token ',' at line 124 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token ',' at line 124 in state XXX, goto XXX
Shift token ',' at line 124 in state XXX, goto XXX
Shift token IDENT = "DIM1" at line 124 in state XXX, goto XXX
Reduce #1 to typename by token ',' at line 124 in state XXX, goto XXX
Reduce #1 to typehdr by token ',' at line 124 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token ',' at line 124 in state XXX, goto XXX
Shift token ',' at line 124 in state XXX, goto XXX
Shift token IDENT = "DIM2" at line 124 in state XXX, goto XXX
Reduce #1 to typename by token ']' at line 124 in state XXX, goto XXX
Reduce #1 to typehdr by token ']' at line 124 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token ']' at line 124 in state XXX, goto XXX
Reduce #1 to generic_instance_deflist by token ']' at line 124 in state XXX, call generic_instance_type, goto XXX
Reduce #3 to generic_instance_deflist by token ']' at line 124 in state XXX, call generic_instance_type, goto XXX
Reduce #3 to generic_instance_deflist by token ']' at line 124 in state XXX, call generic_instance_type, goto XXX
Reduce #1 to generic_instance by token ']' at line 124 in state XXX, call generic_instance, goto XXX
Shift token ']' at line 124 in state XXX, goto XXX
Reduce #4 to typegen by token '(' at line 124 in state XXX, call typegen_generic, goto XXX
Reduce #1 to typespec by token '(' at line 124 in state XXX, call typespec, goto XXX
Shift token '(' at line 124 in state XXX, goto XXX
Shift token "const" at line 124 in state XXX, goto XXX
Shift token IDENT = "R" at line 124 in state XXX, goto XXX
Reduce #1 to typename by token IDENT = "o" at line 124 in state XXX, goto XXX
Reduce #2 to typehdr by token IDENT = "o" at line 124 in state XXX, call typehdr {const=true}, goto XXX
Reduce #1 to typegen by token IDENT = "o" at line 124 in state XXX, goto XXX
Reduce #1 to typespec by token IDENT = "o" at line 124 in state XXX, call typespec, goto XXX
Shift token IDENT = "o" at line 124 in state XXX, goto XXX
Reduce #2 to paramdecl by token ')' at line 124 in state XXX, call paramdef, goto XXX
Reduce #1 to parameters by token ')' at line 124 in state XXX, goto XXX
Reduce #1 to parameterlist by token ')' at line 124 in state XXX, call paramdeflist, goto XXX
Shift token ')' at line 124 in state XXX, goto XXX
Shift token "const" at line 124 in state XXX, goto XXX
Shift token "nothrow" at line 124 in state XXX, goto XXX
Shift token '{' at line 125 in state XXX, goto XXX
Shift token "var" at line 126 in state XXX, goto XXX
Shift token IDENT = "Matrix" at line 126 in state XXX, goto XXX
Reduce #1 to typename by token '[' at line 126 in state XXX, goto XXX
Reduce #1 to typehdr by token '[' at line 126 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token '[' at line 126 in state XXX, goto XXX
Shift token '[' at line 126 in state XXX, goto XXX
Shift token IDENT = "R" at line 126 in state XXX, goto XXX
Reduce #1 to typename by token ',' at line 126 in state XXX, goto XXX
Reduce #1 to typehdr by token ',' at line 126 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token ',' at line 126 in state XXX, goto XXX
Shift token ',' at line 126 in state XXX, goto XXX
Shift token IDENT = "DIM1" at line 126 in state XXX, goto XXX
Reduce #1 to typename by token ',' at line 126 in state XXX, goto XXX
Reduce #1 to typehdr by token ',' at line 126 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token ',' at line 126 in state XXX, goto XXX
Shift token ',' at line 126 in state XXX, goto XXX
Shift token IDENT = "DIM2" at line 126 in state XXX, goto XXX
Reduce #1 to typename by token ']' at line 126 in state XXX, goto XXX
Reduce #1 to typehdr by token ']' at line 126 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token ']' at line 126 in state XXX, goto XXX
Reduce #1 to generic_instance_deflist by token ']' at line 126 in state XXX, call generic_instance_type, goto XXX
Reduce #3 to generic_instance_deflist by token ']' at line 126 in state XXX, call generic_instance_type, goto XXX
Reduce #3 to generic_instance_deflist by token ']' at line 126 in state XXX, call generic_instance_type, goto XXX
Reduce #1 to generic_instance by token ']' at line 126 in state XXX, call generic_instance, goto XXX
Shift token ']' at line 126 in state XXX, goto XXX
Reduce #4 to typegen by token IDENT = "rt" at line 126 in state XXX, call typegen_generic, goto XXX
Reduce #1 to typespec by token IDENT = "rt" at line 126 in state XXX, call typespec, goto XXX
Shift token IDENT = "rt" at line 126 in state XXX, goto XXX
Reduce #2 to variabledefinition by token ';' at line 126 in state XXX, call vardef, goto XXX
Shift token ';' at line 126 in state XXX, goto XXX
Reduce #3 to statement by token "var" at line 127 in state XXX, call definition 1, goto XXX
Shift token "var" at line 127 in state XXX, goto XXX
Shift token IDENT = "int" at line 127 in state XXX, goto XXX
Reduce #1 to typename by token IDENT = "ii" at line 127 in state XXX, goto XXX
Reduce #1 to typehdr by token IDENT = "ii" at line 127 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token IDENT = "ii" at line 127 in state XXX, goto XXX
Reduce #1 to typespec by token IDENT = "ii" at line 127 in state XXX, call typespec, goto XXX
Shift token IDENT = "ii" at line 127 in state XXX, goto XXX
Shift token '=' at line 127 in state XXX, goto XXX
Shift token UINTEGER = "0" at line 127 in state XXX, goto XXX
Reduce #1 to expression by token ';' at line 127 in state XXX, call constant "constexpr uint", goto XXX
Reduce #4 to variabledefinition by token ';' at line 127 in state XXX, call vardef_assign, goto XXX
Shift token ';' at line 127 in state XXX, goto XXX
Reduce #3 to statement by token "while" at line 128 in state XXX, call definition 1, goto XXX
Shift token "while" at line 128 in state XXX, goto XXX
Shift token '(' at line 128 in state XXX, goto XXX
Shift token IDENT = "ii" at line 128 in state XXX, goto XXX
Reduce #1 to expression by token '<' at line 128 in state XXX, call variable, goto XXX
Shift token '<' at line 128 in state XXX, goto XXX
Shift token IDENT = "DIM1" at line 128 in state XXX, goto XXX
Reduce #1 to expression by token ')' at line 128 in state XXX, call variable, goto XXX
Reduce #3 to expression by token ')' at line 128 in state XXX, call binop "<", goto XXX
Shift token ')' at line 128 in state XXX, goto XXX
Shift token '{' at line 129 in state XXX, goto XXX
Shift token "var" at line 130 in state XXX, goto XXX
Shift token IDENT = "int" at line 130 in state XXX, goto XXX
Reduce #1 to typename by token IDENT = "jj" at line 130 in state XXX, goto XXX
Reduce #1 to typehdr by token IDENT = "jj" at line 130 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token IDENT = "jj" at line 130 in state XXX, goto XXX
Reduce #1 to typespec by token IDENT = "jj" at line 130 in state XXX, call typespec, goto XXX
Shift token IDENT = "jj" at line 130 in state XXX, goto XXX
Shift token '=' at line 130 in state XXX, goto XXX
Shift token UINTEGER = "0" at line 130 in state XXX, goto XXX
Reduce #1 to expression by token ';' at line 130 in state XXX, call constant "constexpr uint", goto XXX
Reduce #4 to variabledefinition by token ';' at line 130 in state XXX, call vardef_assign, goto XXX
Shift token ';' at line 130 in state XXX, goto XXX
Reduce #3 to statement by token "while" at line 131 in state XXX, call definition 1, goto XXX
Shift token "while" at line 131 in state XXX, goto XXX
Shift token '(' at line 131 in state XXX, goto XXX
Shift token IDENT = "jj" at line 131 in state XXX, goto XXX
Reduce #1 to expression by token '<' at line 131 in state XXX, call variable, goto XXX
Shift token '<' at line 131 in state XXX, goto XXX
Shift token IDENT = "DIM2" at line 131 in state XXX, goto XXX
Reduce #1 to expression by token ')' at line 131 in state XXX, call variable, goto XXX
Reduce #3 to expression by token ')' at line 131 in state XXX, call binop "<", goto XXX
Shift token ')' at line 131 in state XXX, goto XXX
Shift token '{' at line 132 in state XXX, goto XXX
Shift token IDENT = "rt" at line 133 in state XXX, goto XXX
Reduce #1 to expression by token '.' at line 133 in state XXX, call variable, goto XXX
Shift token '.' at line 133 in state XXX, goto XXX
Shift token IDENT = "m_ar" at line 133 in state XXX, goto XXX
Reduce #3 to expression by token '[' at line 133 in state XXX, call member, goto XXX
Shift token '[' at line 133 in state XXX, goto XXX
Shift token IDENT = "ii" at line 133 in state XXX, goto XXX
Reduce #1 to expression by token ']' at line 133 in state XXX, call variable, goto XXX
Reduce #1 to expressionlist by token ']' at line 133 in state XXX, goto XXX
Shift token ']' at line 133 in state XXX, goto XXX
Reduce #4 to expression by token '[' at line 133 in state XXX, call operator_array "[]", goto XXX
Shift token '[' at line 133 in state XXX, goto XXX
Shift token IDENT = "jj" at line 133 in state XXX, goto XXX
Reduce #1 to expression by token ']' at line 133 in state XXX, call variable, goto XXX
Reduce #1 to expressionlist by token ']' at line 133 in state XXX, goto XXX
Shift token ']' at line 133 in state XXX, goto XXX
Reduce #4 to expression by token '=' at line 133 in state XXX, call operator_array "[]", goto XXX
Shift token '=' at line 133 in state XXX, goto XXX
Shift token IDENT = "m_ar" at line 133 in state XXX, goto XXX
Reduce #1 to expression by token '[' at line 133 in state XXX, call variable, goto XXX
Shift token '[' at line 133 in state XXX, goto XXX
Shift token IDENT = "ii" at line 133 in state XXX, goto XXX
Reduce #1 to expression by token ']' at line 133 in state XXX, call variable, goto XXX
Reduce #1 to expressionlist by token ']' at line 133 in state XXX, goto XXX
Shift token ']' at line 133 in state XXX, goto XXX
Reduce #4 to expression by token '[' at line 133 in state XXX, call operator_array "[]", goto XXX
Shift token '[' at line 133 in state XXX, goto XXX
Shift token IDENT = "jj" at line 133 in state XXX, goto XXX
Reduce #1 to expression by token ']' at line 133 in state XXX, call variable, goto XXX
Reduce #1 to expressionlist by token ']' at line 133 in state XXX, goto XXX
Shift token ']' at line 133 in state XXX, goto XXX
Reduce #4 to expression by token '/' at line 133 in state XXX, call operator_array "[]", goto XXX
Shift token '/' at line 133 in state XXX, goto XXX
Shift token IDENT = "o" at line 133 in state XXX, goto XXX
Reduce #1 to expression by token ';' at line 133 in state XXX, call variable, goto XXX
Reduce #3 to expression by token ';' at line 133 in state XXX, call binop "/", goto XXX
Reduce #3 to expression by token ';' at line 133 in state XXX, call binop "=", goto XXX
Shift token ';' at line 133 in state XXX, goto XXX
Reduce #2 to statement by token IDENT = "jj" at line 134 in state XXX, call free_expression, goto XXX
Shift token IDENT = "jj" at line 134 in state XXX, goto XXX
Reduce #1 to expression by token "+=" at line 134 in state XXX, call variable, goto XXX
Shift token "+=" at line 134 in state XXX, goto XXX
Shift token UINTEGER = "1" at line 134 in state XXX, goto XXX
Reduce #1 to expression by token ';' at line 134 in state XXX, call constant "constexpr uint", goto XXX
Reduce #3 to expression by token ';' at line 134 in state XXX, call assign_operator "+", goto XXX
Shift token ';' at line 134 in state XXX, goto XXX
Reduce #2 to statement by token '}' at line 135 in state XXX, call free_expression, goto XXX
Reduce #0 to statementlist by token '}' at line 135 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 135 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 135 in state XXX, goto XXX
Shift token '}' at line 135 in state XXX, goto XXX
Reduce #3 to codeblock by token IDENT = "ii" at line 136 in state XXX, call codeblock, goto XXX
Reduce #5 to statement by token IDENT = "ii" at line 136 in state XXX, call conditional_while, goto XXX
Shift token IDENT = "ii" at line 136 in state XXX, goto XXX
Reduce #1 to expression by token "+=" at line 136 in state XXX, call variable, goto XXX
Shift token "+=" at line 136 in state XXX, goto XXX
Shift token UINTEGER = "1" at line 136 in state XXX, goto XXX
Reduce #1 to expression by token ';' at line 136 in state XXX, call constant "constexpr uint", goto XXX
Reduce #3 to expression by token ';' at line 136 in state XXX, call assign_operator "+", goto XXX
Shift token ';' at line 136 in state XXX, goto XXX
Reduce #2 to statement by token '}' at line 137 in state XXX, call free_expression, goto XXX
Reduce #0 to statementlist by token '}' at line 137 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 137 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 137 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 137 in state XXX, goto XXX
Shift token '}' at line 137 in state XXX, goto XXX
Reduce #3 to codeblock by token "return" at line 138 in state XXX, call codeblock, goto XXX
Reduce #5 to statement by token "return" at line 138 in state XXX, call conditional_while, goto XXX
Shift token "return" at line 138 in state XXX, goto XXX
Shift token IDENT = "rt" at line 138 in state XXX, goto XXX
Reduce #1 to expression by token ';' at line 138 in state XXX, call variable, goto XXX
Shift token ';' at line 138 in state XXX, goto XXX
Reduce #3 to statement by token '}' at line 139 in state XXX, call return_value, goto XXX
Reduce #0 to statementlist by token '}' at line 139 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 139 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 139 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 139 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 139 in state XXX, goto XXX
Shift token '}' at line 139 in state XXX, goto XXX
Reduce #8 to callablebody by token "public" at line 140 in state XXX, call callablebody {throws=false,const=true}, goto XXX
Reduce #5 to operatordefinition by token "public" at line 140 in state XXX, call operator_funcdef, goto XXX
Reduce #1 to inclass_definition by token "public" at line 140 in state XXX, call definition_decl_impl_pass 4, goto XXX
Shift token "public" at line 140 in state XXX, goto XXX
Reduce #1 to linkage by token "operator" at line 140 in state XXX, call linkage {private=false,linkage="external",explicit=true}, goto XXX
Shift token "operator" at line 140 in state XXX, goto XXX
Shift token '[' at line 140 in state XXX, goto XXX
Shift token ']' at line 140 in state XXX, goto XXX
Reduce #2 to operatordecl by token IDENT = "R" at line 140 in state XXX, call operatordecl {name="[]",symbol="get"}, goto XXX
Shift token IDENT = "R" at line 140 in state XXX, goto XXX
Reduce #1 to typename by token '&' at line 140 in state XXX, goto XXX
Reduce #1 to typehdr by token '&' at line 140 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token '&' at line 140 in state XXX, goto XXX
Shift token '&' at line 140 in state XXX, goto XXX
Reduce #2 to typespec by token '(' at line 140 in state XXX, call typespec_ref, goto XXX
Shift token '(' at line 140 in state XXX, goto XXX
Shift token IDENT = "int" at line 140 in state XXX, goto XXX
Reduce #1 to typename by token IDENT = "i" at line 140 in state XXX, goto XXX
Reduce #1 to typehdr by token IDENT = "i" at line 140 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token IDENT = "i" at line 140 in state XXX, goto XXX
Reduce #1 to typespec by token IDENT = "i" at line 140 in state XXX, call typespec, goto XXX
Shift token IDENT = "i" at line 140 in state XXX, goto XXX
Reduce #2 to paramdecl by token ',' at line 140 in state XXX, call paramdef, goto XXX
Shift token ',' at line 140 in state XXX, goto XXX
Shift token IDENT = "int" at line 140 in state XXX, goto XXX
Reduce #1 to typename by token IDENT = "j" at line 140 in state XXX, goto XXX
Reduce #1 to typehdr by token IDENT = "j" at line 140 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token IDENT = "j" at line 140 in state XXX, goto XXX
Reduce #1 to typespec by token IDENT = "j" at line 140 in state XXX, call typespec, goto XXX
Shift token IDENT = "j" at line 140 in state XXX, goto XXX
Reduce #2 to paramdecl by token ')' at line 140 in state XXX, call paramdef, goto XXX
Reduce #1 to parameters by token ')' at line 140 in state XXX, goto XXX
Reduce #3 to parameters by token ')' at line 140 in state XXX, goto XXX
Reduce #1 to parameterlist by token ')' at line 140 in state XXX, call paramdeflist, goto XXX
Shift token ')' at line 140 in state XXX, goto XXX
Shift token "nothrow" at line 140 in state XXX, goto XXX
Shift token '{' at line 141 in state XXX, goto XXX
Shift token "return" at line 142 in state XXX, goto XXX
Shift token IDENT = "m_ar" at line 142 in state XXX, goto XXX
Reduce #1 to expression by token '[' at line 142 in state XXX, call variable, goto XXX
Shift token '[' at line 142 in state XXX, goto XXX
Shift token IDENT = "i" at line 142 in state XXX, goto XXX
Reduce #1 to expression by token ']' at line 142 in state XXX, call variable, goto XXX
Reduce #1 to expressionlist by token ']' at line 142 in state XXX, goto XXX
Shift token ']' at line 142 in state XXX, goto XXX
Reduce #4 to expression by token '[' at line 142 in state XXX, call operator_array "[]", goto XXX
Shift token '[' at line 142 in state XXX, goto XXX
Shift token IDENT = "j" at line 142 in state XXX, goto XXX
Reduce #1 to expression by token ']' at line 142 in state XXX, call variable, goto XXX
Reduce #1 to expressionlist by token ']' at line 142 in state XXX, goto XXX
Shift token ']' at line 142 in state XXX, goto XXX
Reduce #4 to expression by token ';' at line 142 in state XXX, call operator_array "[]", goto XXX
Shift token ';' at line 142 in state XXX, goto XXX
Reduce #3 to statement by token '}' at line 143 in state XXX, call return_value, goto XXX
Reduce #0 to statementlist by token '}' at line 143 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 143 in state XXX, goto XXX
Shift token '}' at line 143 in state XXX, goto XXX
Reduce #7 to callablebody by token "public" at line 144 in state XXX, call callablebody {throws=false,const=false}, goto XXX
Reduce #5 to operatordefinition by token "public" at line 144 in state XXX, call operator_funcdef, goto XXX
Reduce #1 to inclass_definition by token "public" at line 144 in state XXX, call definition_decl_impl_pass 4, goto XXX
Shift token "public" at line 144 in state XXX, goto XXX
Reduce #1 to linkage by token "operator" at line 144 in state XXX, call linkage {private=false,linkage="external",explicit=true}, goto XXX
Shift token "operator" at line 144 in state XXX, goto XXX
Shift token '[' at line 144 in state XXX, goto XXX
Shift token ']' at line 144 in state XXX, goto XXX
Reduce #2 to operatordecl by token "const" at line 144 in state XXX, call operatordecl {name="[]",symbol="get"}, goto XXX
Shift token "const" at line 144 in state XXX, goto XXX
Shift token IDENT = "R" at line 144 in state XXX, goto XXX
Reduce #1 to typename by token '(' at line 144 in state XXX, goto XXX
Reduce #2 to typehdr by token '(' at line 144 in state XXX, call typehdr {const=true}, goto XXX
Reduce #1 to typegen by token '(' at line 144 in state XXX, goto XXX
Reduce #1 to typespec by token '(' at line 144 in state XXX, call typespec, goto XXX
Shift token '(' at line 144 in state XXX, goto XXX
Shift token IDENT = "int" at line 144 in state XXX, goto XXX
Reduce #1 to typename by token IDENT = "i" at line 144 in state XXX, goto XXX
Reduce #1 to typehdr by token IDENT = "i" at line 144 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token IDENT = "i" at line 144 in state XXX, goto XXX
Reduce #1 to typespec by token IDENT = "i" at line 144 in state XXX, call typespec, goto XXX
Shift token IDENT = "i" at line 144 in state XXX, goto XXX
Reduce #2 to paramdecl by token ',' at line 144 in state XXX, call paramdef, goto XXX
Shift token ',' at line 144 in state XXX, goto XXX
Shift token IDENT = "int" at line 144 in state XXX, goto XXX
Reduce #1 to typename by token IDENT = "j" at line 144 in state XXX, goto XXX
Reduce #1 to typehdr by token IDENT = "j" at line 144 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token IDENT = "j" at line 144 in state XXX, goto XXX
Reduce #1 to typespec by token IDENT = "j" at line 144 in state XXX, call typespec, goto XXX
Shift token IDENT = "j" at line 144 in state XXX, goto XXX
Reduce #2 to paramdecl by token ')' at line 144 in state XXX, call paramdef, goto XXX
Reduce #1 to parameters by token ')' at line 144 in state XXX, goto XXX
Reduce #3 to parameters by token ')' at line 144 in state XXX, goto XXX
Reduce #1 to parameterlist by token ')' at line 144 in state XXX, call paramdeflist, goto XXX
Shift token ')' at line 144 in state XXX, goto XXX
Shift token "const" at line 144 in state XXX, goto XXX
Shift token "nothrow" at line 144 in state XXX, goto XXX
Shift token '{' at line 145 in state XXX, goto XXX
Shift token "return" at line 146 in state XXX, goto XXX
Shift token IDENT = "m_ar" at line 146 in state XXX, goto XXX
Reduce #1 to expression by token '[' at line 146 in state XXX, call variable, goto XXX
Shift token '[' at line 146 in state XXX, goto XXX
Shift token IDENT = "i" at line 146 in state XXX, goto XXX
Reduce #1 to expression by token ']' at line 146 in state XXX, call variable, goto XXX
Reduce #1 to expressionlist by token ']' at line 146 in state XXX, goto XXX
Shift token ']' at line 146 in state XXX, goto XXX
Reduce #4 to expression by token '[' at line 146 in state XXX, call operator_array "[]", goto XXX
Shift token '[' at line 146 in state XXX, goto XXX
Shift token IDENT = "j" at line 146 in state XXX, goto XXX
Reduce #1 to expression by token ']' at line 146 in state XXX, call variable, goto XXX
Reduce #1 to expressionlist by token ']' at line 146 in state XXX, goto XXX
Shift token ']' at line 146 in state XXX, goto XXX
Reduce #4 to expression by token ';' at line 146 in state XXX, call operator_array "[]", goto XXX
Shift token ';' at line 146 in state XXX, goto XXX
Reduce #3 to statement by token '}' at line 147 in state XXX, call return_value, goto XXX
Reduce #0 to statementlist by token '}' at line 147 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 147 in state XXX, goto XXX
Shift token '}' at line 147 in state XXX, goto XXX
Reduce #8 to callablebody by token IDENT = "R" at line 149 in state XXX, call callablebody {throws=false,const=true}, goto XXX
Reduce #5 to operatordefinition by token IDENT = "R" at line 149 in state XXX, call operator_funcdef, goto XXX
Reduce #1 to inclass_definition by token IDENT = "R" at line 149 in state XXX, call definition_decl_impl_pass 4, goto XXX
Shift token IDENT = "R" at line 149 in state XXX, goto XXX
Reduce #1 to typename by token '[' at line 149 in state XXX, goto XXX
Reduce #1 to typehdr by token '[' at line 149 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token '[' at line 149 in state XXX, goto XXX
Shift token '[' at line 149 in state XXX, goto XXX
Shift token IDENT = "DIM2" at line 149 in state XXX, goto XXX
Reduce #1 to typename by token ']' at line 149 in state XXX, goto XXX
Reduce #1 to typehdr by token ']' at line 149 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token ']' at line 149 in state XXX, goto XXX
Reduce #1 to generic_instance_deflist by token ']' at line 149 in state XXX, call generic_instance_type, goto XXX
Reduce #1 to generic_instance by token ']' at line 149 in state XXX, call generic_instance, goto XXX
Shift token ']' at line 149 in state XXX, goto XXX
Reduce #4 to typegen by token '[' at line 149 in state XXX, call typegen_generic, goto XXX
Shift token '[' at line 149 in state XXX, goto XXX
Shift token IDENT = "DIM1" at line 149 in state XXX, goto XXX
Reduce #1 to typename by token ']' at line 149 in state XXX, goto XXX
Reduce #1 to typehdr by token ']' at line 149 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token ']' at line 149 in state XXX, goto XXX
Reduce #1 to generic_instance_deflist by token ']' at line 149 in state XXX, call generic_instance_type, goto XXX
Reduce #1 to generic_instance by token ']' at line 149 in state XXX, call generic_instance, goto XXX
Shift token ']' at line 149 in state XXX, goto XXX
Reduce #4 to typegen by token IDENT = "m_ar" at line 149 in state XXX, call typegen_generic, goto XXX
Reduce #1 to typespec by token IDENT = "m_ar" at line 149 in state XXX, call typespec, goto XXX
Shift token IDENT = "m_ar" at line 149 in state XXX, goto XXX
Reduce #2 to variabledefinition by token ';' at line 149 in state XXX, call vardef, goto XXX
Shift token ';' at line 149 in state XXX, goto XXX
Reduce #2 to inclass_definition by token '}' at line 150 in state XXX, call definition 2, goto XXX
Reduce #0 to inclass_definitionlist by token '}' at line 150 in state XXX, goto XXX
Reduce #2 to inclass_definitionlist by token '}' at line 150 in state XXX, goto XXX
Reduce #2 to inclass_definitionlist by token '}' at line 150 in state XXX, goto XXX
Reduce #2 to inclass_definitionlist by token '}' at line 150 in state XXX, goto XXX
Reduce #2 to inclass_definitionlist by token '}' at line 150 in state XXX, goto XXX
Reduce #2 to inclass_definitionlist by token '}' at line 150 in state XXX, goto XXX
Reduce #2 to inclass_definitionlist by token '}' at line 150 in state XXX, goto XXX
Reduce #2 to inclass_definitionlist by token '}' at line 150 in state XXX, goto XXX
Reduce #2 to inclass_definitionlist by token '}' at line 150 in state XXX, goto XXX
Reduce #2 to inclass_definitionlist by token '}' at line 150 in state XXX, goto XXX
Reduce #2 to inclass_definitionlist by token '}' at line 150 in state XXX, goto XXX
Reduce #2 to inclass_definitionlist by token '}' at line 150 in state XXX, goto XXX
Reduce #2 to inclass_definitionlist by token '}' at line 150 in state XXX, goto XXX
Shift token '}' at line 150 in state XXX, goto XXX
Reduce #9 to classdefinition by token "generic" at line 152 in state XXX, call generic_classdef, goto XXX
Reduce #1 to free_definition by token "generic" at line 152 in state XXX, call definition 1, goto XXX
Shift token "generic" at line 152 in state XXX, goto XXX
Reduce #0 to linkage by token "procedure" at line 152 in state XXX, call linkage {private=false,linkage="external",explicit=false}, goto XXX
Shift token "procedure" at line 152 in state XXX, goto XXX
Shift token IDENT = "printMatrix" at line 152 in state XXX, goto XXX
Shift token '[' at line 152 in state XXX, goto XXX
Shift token IDENT = "DIM1" at line 152 in state XXX, goto XXX
Shift token ',' at line 152 in state XXX, goto XXX
Shift token IDENT = "DIM2" at line 152 in state XXX, goto XXX
Reduce #1 to generic_identlist by token ']' at line 152 in state XXX, call generic_header_ident, goto XXX
Reduce #3 to generic_identlist by token ']' at line 152 in state XXX, call generic_header_ident, goto XXX
Reduce #1 to generic_header by token ']' at line 152 in state XXX, call generic_header, goto XXX
Shift token ']' at line 152 in state XXX, goto XXX
Shift token '(' at line 152 in state XXX, goto XXX
Shift token "const" at line 152 in state XXX, goto XXX
Shift token IDENT = "Matrix" at line 152 in state XXX, goto XXX
Reduce #1 to typename by token '[' at line 152 in state XXX, goto XXX
Reduce #2 to typehdr by token '[' at line 152 in state XXX, call typehdr {const=true}, goto XXX
Reduce #1 to typegen by token '[' at line 152 in state XXX, goto XXX
Shift token '[' at line 152 in state XXX, goto XXX
Shift token IDENT = "double" at line 152 in state XXX, goto XXX
Reduce #1 to typename by token ',' at line 152 in state XXX, goto XXX
Reduce #1 to typehdr by token ',' at line 152 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token ',' at line 152 in state XXX, goto XXX
Shift token ',' at line 152 in state XXX, goto XXX
Shift token IDENT = "DIM1" at line 152 in state XXX, goto XXX
Reduce #1 to typename by token ',' at line 152 in state XXX, goto XXX
Reduce #1 to typehdr by token ',' at line 152 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token ',' at line 152 in state XXX, goto XXX
Shift token ',' at line 152 in state XXX, goto XXX
Shift token IDENT = "DIM2" at line 152 in state XXX, goto XXX
Reduce #1 to typename by token ']' at line 152 in state XXX, goto XXX
Reduce #1 to typehdr by token ']' at line 152 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token ']' at line 152 in state XXX, goto XXX
Reduce #1 to generic_instance_deflist by token ']' at line 152 in state XXX, call generic_instance_type, goto XXX
Reduce #3 to generic_instance_deflist by token ']' at line 152 in state XXX, call generic_instance_type, goto XXX
Reduce #3 to generic_instance_deflist by token ']' at line 152 in state XXX, call generic_instance_type, goto XXX
Reduce #1 to generic_instance by token ']' at line 152 in state XXX, call generic_instance, goto XXX
Shift token ']' at line 152 in state XXX, goto XXX
Reduce #4 to typegen by token IDENT = "mt" at line 152 in state XXX, call typegen_generic, goto XXX
Reduce #1 to typespec by token IDENT = "mt" at line 152 in state XXX, call typespec, goto XXX
Shift token IDENT = "mt" at line 152 in state XXX, goto XXX
Reduce #2 to paramdecl by token ')' at line 152 in state XXX, call paramdef, goto XXX
Reduce #1 to parameters by token ')' at line 152 in state XXX, goto XXX
Reduce #1 to parameterlist by token ')' at line 152 in state XXX, call paramdeflist, goto XXX
Shift token ')' at line 152 in state XXX, goto XXX
Shift token "nothrow" at line 152 in state XXX, goto XXX
Shift token '{' at line 153 in state XXX, goto XXX
Shift token "var" at line 154 in state XXX, goto XXX
Shift token IDENT = "int" at line 154 in state XXX, goto XXX
Reduce #1 to typename by token IDENT = "ii" at line 154 in state XXX, goto XXX
Reduce #1 to typehdr by token IDENT = "ii" at line 154 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token IDENT = "ii" at line 154 in state XXX, goto XXX
Reduce #1 to typespec by token IDENT = "ii" at line 154 in state XXX, call typespec, goto XXX
Shift token IDENT = "ii" at line 154 in state XXX, goto XXX
Shift token '=' at line 154 in state XXX, goto XXX
Shift token UINTEGER = "0" at line 154 in state XXX, goto XXX
Reduce #1 to expression by token ';' at line 154 in state XXX, call constant "constexpr uint", goto XXX
Reduce #4 to variabledefinition by token ';' at line 154 in state XXX, call vardef_assign, goto XXX
Shift token ';' at line 154 in state XXX, goto XXX
Reduce #3 to statement by token "while" at line 155 in state XXX, call definition 1, goto XXX
Shift token "while" at line 155 in state XXX, goto XXX
Shift token '(' at line 155 in state XXX, goto XXX
Shift token IDENT = "ii" at line 155 in state XXX, goto XXX
Reduce #1 to expression by token '<' at line 155 in state XXX, call variable, goto XXX
Shift token '<' at line 155 in state XXX, goto XXX
Shift token IDENT = "DIM1" at line 155 in state XXX, goto XXX
Reduce #1 to expression by token ')' at line 155 in state XXX, call variable, goto XXX
Reduce #3 to expression by token ')' at line 155 in state XXX, call binop "<", goto XXX
Shift token ')' at line 155 in state XXX, goto XXX
Shift token '{' at line 156 in state XXX, goto XXX
Shift token "var" at line 157 in state XXX, goto XXX
Shift token IDENT = "int" at line 157 in state XXX, goto XXX
Reduce #1 to typename by token IDENT = "jj" at line 157 in state XXX, goto XXX
Reduce #1 to typehdr by token IDENT = "jj" at line 157 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token IDENT = "jj" at line 157 in state XXX, goto XXX
Reduce #1 to typespec by token IDENT = "jj" at line 157 in state XXX, call typespec, goto XXX
Shift token IDENT = "jj" at line 157 in state XXX, goto XXX
Shift token '=' at line 157 in state XXX, goto XXX
Shift token UINTEGER = "0" at line 157 in state XXX, goto XXX
Reduce #1 to expression by token ';' at line 157 in state XXX, call constant "constexpr uint", goto XXX
Reduce #4 to variabledefinition by token ';' at line 157 in state XXX, call vardef_assign, goto XXX
Shift token ';' at line 157 in state XXX, goto XXX
Reduce #3 to statement by token "while" at line 158 in state XXX, call definition 1, goto XXX
Shift token "while" at line 158 in state XXX, goto XXX
Shift token '(' at line 158 in state XXX, goto XXX
Shift token IDENT = "jj" at line 158 in state XXX, goto XXX
Reduce #1 to expression by token '<' at line 158 in state XXX, call variable, goto XXX
Shift token '<' at line 158 in state XXX, goto XXX
Shift token IDENT = "DIM2" at line 158 in state XXX, goto XXX
Reduce #1 to expression by token ')' at line 158 in state XXX, call variable, goto XXX
Reduce #3 to expression by token ')' at line 158 in state XXX, call binop "<", goto XXX
Shift token ')' at line 158 in state XXX, goto XXX
Shift token '{' at line 159 in state XXX, goto XXX
Shift token IDENT = "printf" at line 160 in state XXX, goto XXX
Reduce #1 to expression by token '(' at line 160 in state XXX, call variable, goto XXX
Shift token '(' at line 160 in state XXX, goto XXX
Shift token DQSTRING = "\t%.4f" at line 160 in state XXX, goto XXX
Reduce #1 to expression by token ',' at line 160 in state XXX, call string_constant, goto XXX
Shift token ',' at line 160 in state XXX, goto XXX
Shift token IDENT = "mt" at line 160 in state XXX, goto XXX
Reduce #1 to expression by token '[' at line 160 in state XXX, call variable, goto XXX
Shift token '[' at line 160 in state XXX, goto XXX
Shift token IDENT = "ii" at line 160 in state XXX, goto XXX
Reduce #1 to expression by token ',' at line 160 in state XXX, call variable, goto XXX
Shift token ',' at line 160 in state XXX, goto XXX
Shift token IDENT = "jj" at line 160 in state XXX, goto XXX
Reduce #1 to expression by token ']' at line 160 in state XXX, call variable, goto XXX
Reduce #1 to expressionlist by token ']' at line 160 in state XXX, goto XXX
Reduce #3 to expressionlist by token ']' at line 160 in state XXX, goto XXX
Shift token ']' at line 160 in state XXX, goto XXX
Reduce #4 to expression by token ')' at line 160 in state XXX, call operator_array "[]", goto XXX
Reduce #1 to expressionlist by token ')' at line 160 in state XXX, goto XXX
Reduce #3 to expressionlist by token ')' at line 160 in state XXX, goto XXX
Shift token ')' at line 160 in state XXX, goto XXX
Reduce #4 to expression by token ';' at line 160 in state XXX, call operator "()", goto XXX
Shift token ';' at line 160 in state XXX, goto XXX
Reduce #2 to statement by token IDENT = "jj" at line 161 in state XXX, call free_expression, goto XXX
Shift token IDENT = "jj" at line 161 in state XXX, goto XXX
Reduce #1 to expression by token "+=" at line 161 in state XXX, call variable, goto XXX
Shift token "+=" at line 161 in state XXX, goto XXX
Shift token UINTEGER = "1" at line 161 in state XXX, goto XXX
Reduce #1 to expression by token ';' at line 161 in state XXX, call constant "constexpr uint", goto XXX
Reduce #3 to expression by token ';' at line 161 in state XXX, call assign_operator "+", goto XXX
Shift token ';' at line 161 in state XXX, goto XXX
Reduce #2 to statement by token '}' at line 162 in state XXX, call free_expression, goto XXX
Reduce #0 to statementlist by token '}' at line 162 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 162 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 162 in state XXX, goto XXX
Shift token '}' at line 162 in state XXX, goto XXX
Reduce #3 to codeblock by token IDENT = "printf" at line 163 in state XXX, call codeblock, goto XXX
Reduce #5 to statement by token IDENT = "printf" at line 163 in state XXX, call conditional_while, goto XXX
Shift token IDENT = "printf" at line 163 in state XXX, goto XXX
Reduce #1 to expression by token '(' at line 163 in state XXX, call variable, goto XXX
Shift token '(' at line 163 in state XXX, goto XXX
Shift token DQSTRING = "\n" at line 163 in state XXX, goto XXX
Reduce #1 to expression by token ')' at line 163 in state XXX, call string_constant, goto XXX
Reduce #1 to expressionlist by token ')' at line 163 in state XXX, goto XXX
Shift token ')' at line 163 in state XXX, goto XXX
Reduce #4 to expression by token ';' at line 163 in state XXX, call operator "()", goto XXX
Shift token ';' at line 163 in state XXX, goto XXX
Reduce #2 to statement by token IDENT = "ii" at line 164 in state XXX, call free_expression, goto XXX
Shift token IDENT = "ii" at line 164 in state XXX, goto XXX
Reduce #1 to expression by token "+=" at line 164 in state XXX, call variable, goto XXX
Shift token "+=" at line 164 in state XXX, goto XXX
Shift token UINTEGER = "1" at line 164 in state XXX, goto XXX
Reduce #1 to expression by token ';' at line 164 in state XXX, call constant "constexpr uint", goto XXX
Reduce #3 to expression by token ';' at line 164 in state XXX, call assign_operator "+", goto XXX
Shift token ';' at line 164 in state XXX, goto XXX
Reduce #2 to statement by token '}' at line 165 in state XXX, call free_expression, goto XXX
Reduce #0 to statementlist by token '}' at line 165 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 165 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 165 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 165 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 165 in state XXX, goto XXX
Shift token '}' at line 165 in state XXX, goto XXX
Reduce #3 to codeblock by token '}' at line 166 in state XXX, call codeblock, goto XXX
Reduce #5 to statement by token '}' at line 166 in state XXX, call conditional_while, goto XXX
Reduce #0 to statementlist by token '}' at line 166 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 166 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 166 in state XXX, goto XXX
Shift token '}' at line 166 in state XXX, goto XXX
Reduce #7 to callablebody by token "main" at line 168 in state XXX, call callablebody {throws=false,const=false}, goto XXX
Reduce #8 to functiondefinition by token "main" at line 168 in state XXX, call generic_procdef, goto XXX
Reduce #1 to free_definition by token "main" at line 168 in state XXX, call definition 1, goto XXX
Reduce #0 to free_definitionlist by token "main" at line 168 in state XXX, goto XXX
Reduce #2 to free_definitionlist by token "main" at line 168 in state XXX, goto XXX
Reduce #2 to free_definitionlist by token "main" at line 168 in state XXX, goto XXX
Reduce #2 to free_definitionlist by token "main" at line 168 in state XXX, goto XXX
Reduce #2 to free_definitionlist by token "main" at line 168 in state XXX, goto XXX
Shift token "main" at line 168 in state XXX, goto XXX
Shift token '{' at line 168 in state XXX, goto XXX
Shift token "var" at line 174 in state XXX, goto XXX
Shift token IDENT = "Matrix" at line 174 in state XXX, goto XXX
Reduce #1 to typename by token '[' at line 174 in state XXX, goto XXX
Reduce #1 to typehdr by token '[' at line 174 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token '[' at line 174 in state XXX, goto XXX
Shift token '[' at line 174 in state XXX, goto XXX
Shift token IDENT = "double" at line 174 in state XXX, goto XXX
Reduce #1 to typename by token ',' at line 174 in state XXX, goto XXX
Reduce #1 to typehdr by token ',' at line 174 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token ',' at line 174 in state XXX, goto XXX
Shift token ',' at line 174 in state XXX, goto XXX
Shift token UINTEGER = "4" at line 174 in state XXX, goto XXX
Shift token ',' at line 174 in state XXX, goto XXX
Shift token UINTEGER = "3" at line 174 in state XXX, goto XXX
Reduce #1 to generic_instance_deflist by token ']' at line 174 in state XXX, call generic_instance_dimension, goto XXX
Reduce #3 to generic_instance_deflist by token ']' at line 174 in state XXX, call generic_instance_dimension, goto XXX
Reduce #3 to generic_instance_deflist by token ']' at line 174 in state XXX, call generic_instance_type, goto XXX
Reduce #1 to generic_instance by token ']' at line 174 in state XXX, call generic_instance, goto XXX
Shift token ']' at line 174 in state XXX, goto XXX
Reduce #4 to typegen by token IDENT = "A" at line 174 in state XXX, call typegen_generic, goto XXX
Reduce #1 to typespec by token IDENT = "A" at line 174 in state XXX, call typespec, goto XXX
Shift token IDENT = "A" at line 174 in state XXX, goto XXX
Shift token '=' at line 174 in state XXX, goto XXX
Shift token '{' at line 174 in state XXX, goto XXX
Shift token '{' at line 174 in state XXX, goto XXX
Shift token UINTEGER = "0" at line 174 in state XXX, goto XXX
Reduce #1 to expression by token ',' at line 174 in state XXX, call constant "constexpr uint", goto XXX
Shift token ',' at line 174 in state XXX, goto XXX
Shift token UINTEGER = "2" at line 174 in state XXX, goto XXX
Reduce #1 to expression by token ',' at line 174 in state XXX, call constant "constexpr uint", goto XXX
Shift token ',' at line 174 in state XXX, goto XXX
Shift token UINTEGER = "1" at line 174 in state XXX, goto XXX
Reduce #1 to expression by token '}' at line 174 in state XXX, call constant "constexpr uint", goto XXX
Reduce #1 to expressionlist by token '}' at line 174 in state XXX, goto XXX
Reduce #3 to expressionlist by token '}' at line 174 in state XXX, goto XXX
Reduce #3 to expressionlist by token '}' at line 174 in state XXX, goto XXX
Shift token '}' at line 174 in state XXX, goto XXX
Reduce #3 to expression by token ',' at line 174 in state XXX, call structure, goto XXX
Shift token ',' at line 174 in state XXX, goto XXX
Shift token '{' at line 174 in state XXX, goto XXX
Shift token UINTEGER = "3" at line 174 in state XXX, goto XXX
Reduce #1 to expression by token ',' at line 174 in state XXX, call constant "constexpr uint", goto XXX
Shift token ',' at line 174 in state XXX, goto XXX
Shift token UINTEGER = "1" at line 174 in state XXX, goto XXX
Reduce #1 to expression by token ',' at line 174 in state XXX, call constant "constexpr uint", goto XXX
Shift token ',' at line 174 in state XXX, goto XXX
Shift token UINTEGER = "1" at line 174 in state XXX, goto XXX
Reduce #1 to expression by token '}' at line 174 in state XXX, call constant "constexpr uint", goto XXX
Reduce #1 to expressionlist by token '}' at line 174 in state XXX, goto XXX
Reduce #3 to expressionlist by token '}' at line 174 in state XXX, goto XXX
Reduce #3 to expressionlist by token '}' at line 174 in state XXX, goto XXX
Shift token '}' at line 174 in state XXX, goto XXX
Reduce #3 to expression by token ',' at line 174 in state XXX, call structure, goto XXX
Shift token ',' at line 174 in state XXX, goto XXX
Shift token '{' at line 174 in state XXX, goto XXX
Shift token UINTEGER = "4" at line 174 in state XXX, goto XXX
Reduce #1 to expression by token ',' at line 174 in state XXX, call constant "constexpr uint", goto XXX
Shift token ',' at line 174 in state XXX, goto XXX
Shift token UINTEGER = "0" at line 174 in state XXX, goto XXX
Reduce #1 to expression by token ',' at line 174 in state XXX, call constant "constexpr uint", goto XXX
Shift token ',' at line 174 in state XXX, goto XXX
Shift token UINTEGER = "1" at line 174 in state XXX, goto XXX
Reduce #1 to expression by token '}' at line 174 in state XXX, call constant "constexpr uint", goto XXX
Reduce #1 to expressionlist by token '}' at line 174 in state XXX, goto XXX
Reduce #3 to expressionlist by token '}' at line 174 in state XXX, goto XXX
Reduce #3 to expressionlist by token '}' at line 174 in state XXX, goto XXX
Shift token '}' at line 174 in state XXX, goto XXX
Reduce #3 to expression by token ',' at line 174 in state XXX, call structure, goto XXX
Shift token ',' at line 174 in state XXX, goto XXX
Shift token '{' at line 174 in state XXX, goto XXX
Shift token UINTEGER = "1" at line 174 in state XXX, goto XXX
Reduce #1 to expression by token ',' at line 174 in state XXX, call constant "constexpr uint", goto XXX
Shift token ',' at line 174 in state XXX, goto XXX
Shift token UINTEGER = "5" at line 174 in state XXX, goto XXX
Reduce #1 to expression by token ',' at line 174 in state XXX, call constant "constexpr uint", goto XXX
Shift token ',' at line 174 in state XXX, goto XXX
Shift token UINTEGER = "2" at line 174 in state XXX, goto XXX
Reduce #1 to expression by token '}' at line 174 in state XXX, call constant "constexpr uint", goto XXX
Reduce #1 to expressionlist by token '}' at line 174 in state XXX, goto XXX
Reduce #3 to expressionlist by token '}' at line 174 in state XXX, goto XXX
Reduce #3 to expressionlist by token '}' at line 174 in state XXX, goto XXX
Shift token '}' at line 174 in state XXX, goto XXX
Reduce #3 to expression by token '}' at line 174 in state XXX, call structure, goto XXX
Reduce #1 to expressionlist by token '}' at line 174 in state XXX, goto XXX
Reduce #3 to expressionlist by token '}' at line 174 in state XXX, goto XXX
Reduce #3 to expressionlist by token '}' at line 174 in state XXX, goto XXX
Reduce #3 to expressionlist by token '}' at line 174 in state XXX, goto XXX
Shift token '}' at line 174 in state XXX, goto XXX
Reduce #3 to expression by token ';' at line 174 in state XXX, call structure, goto XXX
Reduce #4 to variabledefinition by token ';' at line 174 in state XXX, call vardef_assign, goto XXX
Shift token ';' at line 174 in state XXX, goto XXX
Reduce #3 to statement by token IDENT = "printf" at line 175 in state XXX, call definition 1, goto XXX
Shift token IDENT = "printf" at line 175 in state XXX, goto XXX
Reduce #1 to expression by token '(' at line 175 in state XXX, call variable, goto XXX
Shift token '(' at line 175 in state XXX, goto XXX
Shift token DQSTRING = "Matrix %s:\n" at line 175 in state XXX, goto XXX
Reduce #1 to expression by token ',' at line 175 in state XXX, call string_constant, goto XXX
Shift token ',' at line 175 in state XXX, goto XXX
Shift token DQSTRING = "A" at line 175 in state XXX, goto XXX
Reduce #1 to expression by token ')' at line 175 in state XXX, call string_constant, goto XXX
Reduce #1 to expressionlist by token ')' at line 175 in state XXX, goto XXX
Reduce #3 to expressionlist by token ')' at line 175 in state XXX, goto XXX
Shift token ')' at line 175 in state XXX, goto XXX
Reduce #4 to expression by token ';' at line 175 in state XXX, call operator "()", goto XXX
Shift token ';' at line 175 in state XXX, goto XXX
Reduce #2 to statement by token IDENT = "printMatrix" at line 176 in state XXX, call free_expression, goto XXX
Shift token IDENT = "printMatrix" at line 176 in state XXX, goto XXX
Reduce #1 to expression by token '[' at line 176 in state XXX, call variable, goto XXX
Shift token '[' at line 176 in state XXX, goto XXX
Shift token UINTEGER = "4" at line 176 in state XXX, goto XXX
Reduce #1 to expression by token ',' at line 176 in state XXX, call constant "constexpr uint", goto XXX
Shift token ',' at line 176 in state XXX, goto XXX
Shift token UINTEGER = "3" at line 176 in state XXX, goto XXX
Reduce #1 to expression by token ']' at line 176 in state XXX, call constant "constexpr uint", goto XXX
Reduce #1 to expressionlist by token ']' at line 176 in state XXX, goto XXX
Reduce #3 to expressionlist by token ']' at line 176 in state XXX, goto XXX
Shift token ']' at line 176 in state XXX, goto XXX
Reduce #4 to expression by token '(' at line 176 in state XXX, call operator_array "[]", goto XXX
Shift token '(' at line 176 in state XXX, goto XXX
Shift token IDENT = "A" at line 176 in state XXX, goto XXX
Reduce #1 to expression by token ')' at line 176 in state XXX, call variable, goto XXX
Reduce #1 to expressionlist by token ')' at line 176 in state XXX, goto XXX
Shift token ')' at line 176 in state XXX, goto XXX
Reduce #4 to expression by token ';' at line 176 in state XXX, call operator "()", goto XXX
Shift token ';' at line 176 in state XXX, goto XXX
Reduce #2 to statement by token IDENT = "printf" at line 177 in state XXX, call free_expression, goto XXX
Shift token IDENT = "printf" at line 177 in state XXX, goto XXX
Reduce #1 to expression by token '(' at line 177 in state XXX, call variable, goto XXX
Shift token '(' at line 177 in state XXX, goto XXX
Shift token DQSTRING = "\n" at line 177 in state XXX, goto XXX
Reduce #1 to expression by token ')' at line 177 in state XXX, call string_constant, goto XXX
Reduce #1 to expressionlist by token ')' at line 177 in state XXX, goto XXX
Shift token ')' at line 177 in state XXX, goto XXX
Reduce #4 to expression by token ';' at line 177 in state XXX, call operator "()", goto XXX
Shift token ';' at line 177 in state XXX, goto XXX
Reduce #2 to statement by token "var" at line 183 in state XXX, call free_expression, goto XXX
Shift token "var" at line 183 in state XXX, goto XXX
Shift token IDENT = "Matrix" at line 183 in state XXX, goto XXX
Reduce #1 to typename by token '[' at line 183 in state XXX, goto XXX
Reduce #1 to typehdr by token '[' at line 183 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token '[' at line 183 in state XXX, goto XXX
Shift token '[' at line 183 in state XXX, goto XXX
Shift token IDENT = "double" at line 183 in state XXX, goto XXX
Reduce #1 to typename by token ',' at line 183 in state XXX, goto XXX
Reduce #1 to typehdr by token ',' at line 183 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token ',' at line 183 in state XXX, goto XXX
Shift token ',' at line 183 in state XXX, goto XXX
Shift token UINTEGER = "3" at line 183 in state XXX, goto XXX
Shift token ',' at line 183 in state XXX, goto XXX
Shift token UINTEGER = "4" at line 183 in state XXX, goto XXX
Reduce #1 to generic_instance_deflist by token ']' at line 183 in state XXX, call generic_instance_dimension, goto XXX
Reduce #3 to generic_instance_deflist by token ']' at line 183 in state XXX, call generic_instance_dimension, goto XXX
Reduce #3 to generic_instance_deflist by token ']' at line 183 in state XXX, call generic_instance_type, goto XXX
Reduce #1 to generic_instance by token ']' at line 183 in state XXX, call generic_instance, goto XXX
Shift token ']' at line 183 in state XXX, goto XXX
Reduce #4 to typegen by token IDENT = "B" at line 183 in state XXX, call typegen_generic, goto XXX
Reduce #1 to typespec by token IDENT = "B" at line 183 in state XXX, call typespec, goto XXX
Shift token IDENT = "B" at line 183 in state XXX, goto XXX
Shift token '=' at line 183 in state XXX, goto XXX
Shift token '{' at line 183 in state XXX, goto XXX
Shift token '{' at line 183 in state XXX, goto XXX
Shift token UINTEGER = "1" at line 183 in state XXX, goto XXX
Reduce #1 to expression by token ',' at line 183 in state XXX, call constant "constexpr uint", goto XXX
Shift token ',' at line 183 in state XXX, goto XXX
Shift token UINTEGER = "2" at line 183 in state XXX, goto XXX
Reduce #1 to expression by token ',' at line 183 in state XXX, call constant "constexpr uint", goto XXX
Shift token ',' at line 183 in state XXX, goto XXX
Shift token UINTEGER = "0" at line 183 in state XXX, goto XXX
Reduce #1 to expression by token ',' at line 183 in state XXX, call constant "constexpr uint", goto XXX
Shift token ',' at line 183 in state XXX, goto XXX
Shift token UINTEGER = "3" at line 183 in state XXX, goto XXX
Reduce #1 to expression by token '}' at line 183 in state XXX, call constant "constexpr uint", goto XXX
Reduce #1 to expressionlist by token '}' at line 183 in state XXX, goto XXX
Reduce #3 to expressionlist by token '}' at line 183 in state XXX, goto XXX
Reduce #3 to expressionlist by token '}' at line 183 in state XXX, goto XXX
Reduce #3 to expressionlist by token '}' at line 183 in state XXX, goto XXX
Shift token '}' at line 183 in state XXX, goto XXX
Reduce #3 to expression by token ',' at line 183 in state XXX, call structure, goto XXX
Shift token ',' at line 183 in state XXX, goto XXX
Shift token '{' at line 183 in state XXX, goto XXX
Shift token UINTEGER = "4" at line 183 in state XXX, goto XXX
Reduce #1 to expression by token ',' at line 183 in state XXX, call constant "constexpr uint", goto XXX
Shift token ',' at line 183 in state XXX, goto XXX
Shift token UINTEGER = "0" at line 183 in state XXX, goto XXX
Reduce #1 to expression by token ',' at line 183 in state XXX, call constant "constexpr uint", goto XXX
Shift token ',' at line 183 in state XXX, goto XXX
Shift token UINTEGER = "5" at line 183 in state XXX, goto XXX
Reduce #1 to expression by token ',' at line 183 in state XXX, call constant "constexpr uint", goto XXX
Shift token ',' at line 183 in state XXX, goto XXX
Shift token UINTEGER = "2" at line 183 in state XXX, goto XXX
Reduce #1 to expression by token '}' at line 183 in state XXX, call constant "constexpr uint", goto XXX
Reduce #1 to expressionlist by token '}' at line 183 in state XXX, goto XXX
Reduce #3 to expressionlist by token '}' at line 183 in state XXX, goto XXX
Reduce #3 to expressionlist by token '}' at line 183 in state XXX, goto XXX
Reduce #3 to expressionlist by token '}' at line 183 in state XXX, goto XXX
Shift token '}' at line 183 in state XXX, goto XXX
Reduce #3 to expression by token ',' at line 183 in state XXX, call structure, goto XXX
Shift token ',' at line 183 in state XXX, goto XXX
Shift token '{' at line 183 in state XXX, goto XXX
Shift token UINTEGER = "3" at line 183 in state XXX, goto XXX
Reduce #1 to expression by token ',' at line 183 in state XXX, call constant "constexpr uint", goto XXX
Shift token ',' at line 183 in state XXX, goto XXX
Shift token UINTEGER = "3" at line 183 in state XXX, goto XXX
Reduce #1 to expression by token ',' at line 183 in state XXX, call constant "constexpr uint", goto XXX
Shift token ',' at line 183 in state XXX, goto XXX
Shift token UINTEGER = "1" at line 183 in state XXX, goto XXX
Reduce #1 to expression by token ',' at line 183 in state XXX, call constant "constexpr uint", goto XXX
Shift token ',' at line 183 in state XXX, goto XXX
Shift token UINTEGER = "1" at line 183 in state XXX, goto XXX
Reduce #1 to expression by token '}' at line 183 in state XXX, call constant "constexpr uint", goto XXX
Reduce #1 to expressionlist by token '}' at line 183 in state XXX, goto XXX
Reduce #3 to expressionlist by token '}' at line 183 in state XXX, goto XXX
Reduce #3 to expressionlist by token '}' at line 183 in state XXX, goto XXX
Reduce #3 to expressionlist by token '}' at line 183 in state XXX, goto XXX
Shift token '}' at line 183 in state XXX, goto XXX
Reduce #3 to expression by token '}' at line 183 in state XXX, call structure, goto XXX
Reduce #1 to expressionlist by token '}' at line 183 in state XXX, goto XXX
Reduce #3 to expressionlist by token '}' at line 183 in state XXX, goto XXX
Reduce #3 to expressionlist by token '}' at line 183 in state XXX, goto XXX
Shift token '}' at line 183 in state XXX, goto XXX
Reduce #3 to expression by token ';' at line 183 in state XXX, call structure, goto XXX
Reduce #4 to variabledefinition by token ';' at line 183 in state XXX, call vardef_assign, goto XXX
Shift token ';' at line 183 in state XXX, goto XXX
Reduce #3 to statement by token IDENT = "printf" at line 184 in state XXX, call definition 1, goto XXX
Shift token IDENT = "printf" at line 184 in state XXX, goto XXX
Reduce #1 to expression by token '(' at line 184 in state XXX, call variable, goto XXX
Shift token '(' at line 184 in state XXX, goto XXX
Shift token DQSTRING = "Matrix %s:\n" at line 184 in state XXX, goto XXX
Reduce #1 to expression by token ',' at line 184 in state XXX, call string_constant, goto XXX
Shift token ',' at line 184 in state XXX, goto XXX
Shift token DQSTRING = "B" at line 184 in state XXX, goto XXX
Reduce #1 to expression by token ')' at line 184 in state XXX, call string_constant, goto XXX
Reduce #1 to expressionlist by token ')' at line 184 in state XXX, goto XXX
Reduce #3 to expressionlist by token ')' at line 184 in state XXX, goto XXX
Shift token ')' at line 184 in state XXX, goto XXX
Reduce #4 to expression by token ';' at line 184 in state XXX, call operator "()", goto XXX
Shift token ';' at line 184 in state XXX, goto XXX
Reduce #2 to statement by token IDENT = "printMatrix" at line 185 in state XXX, call free_expression, goto XXX
Shift token IDENT = "printMatrix" at line 185 in state XXX, goto XXX
Reduce #1 to expression by token '[' at line 185 in state XXX, call variable, goto XXX
Shift token '[' at line 185 in state XXX, goto XXX
Shift token UINTEGER = "3" at line 185 in state XXX, goto XXX
Reduce #1 to expression by token ',' at line 185 in state XXX, call constant "constexpr uint", goto XXX
Shift token ',' at line 185 in state XXX, goto XXX
Shift token UINTEGER = "4" at line 185 in state XXX, goto XXX
Reduce #1 to expression by token ']' at line 185 in state XXX, call constant "constexpr uint", goto XXX
Reduce #1 to expressionlist by token ']' at line 185 in state XXX, goto XXX
Reduce #3 to expressionlist by token ']' at line 185 in state XXX, goto XXX
Shift token ']' at line 185 in state XXX, goto XXX
Reduce #4 to expression by token '(' at line 185 in state XXX, call operator_array "[]", goto XXX
Shift token '(' at line 185 in state XXX, goto XXX
Shift token IDENT = "B" at line 185 in state XXX, goto XXX
Reduce #1 to expression by token ')' at line 185 in state XXX, call variable, goto XXX
Reduce #1 to expressionlist by token ')' at line 185 in state XXX, goto XXX
Shift token ')' at line 185 in state XXX, goto XXX
Reduce #4 to expression by token ';' at line 185 in state XXX, call operator "()", goto XXX
Shift token ';' at line 185 in state XXX, goto XXX
Reduce #2 to statement by token IDENT = "printf" at line 186 in state XXX, call free_expression, goto XXX
Shift token IDENT = "printf" at line 186 in state XXX, goto XXX
Reduce #1 to expression by token '(' at line 186 in state XXX, call variable, goto XXX
Shift token '(' at line 186 in state XXX, goto XXX
Shift token DQSTRING = "\n" at line 186 in state XXX, goto XXX
Reduce #1 to expression by token ')' at line 186 in state XXX, call string_constant, goto XXX
Reduce #1 to expressionlist by token ')' at line 186 in state XXX, goto XXX
Shift token ')' at line 186 in state XXX, goto XXX
Reduce #4 to expression by token ';' at line 186 in state XXX, call operator "()", goto XXX
Shift token ';' at line 186 in state XXX, goto XXX
Reduce #2 to statement by token "var" at line 193 in state XXX, call free_expression, goto XXX
Shift token "var" at line 193 in state XXX, goto XXX
Shift token IDENT = "Matrix" at line 193 in state XXX, goto XXX
Reduce #1 to typename by token '[' at line 193 in state XXX, goto XXX
Reduce #1 to typehdr by token '[' at line 193 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token '[' at line 193 in state XXX, goto XXX
Shift token '[' at line 193 in state XXX, goto XXX
Shift token IDENT = "double" at line 193 in state XXX, goto XXX
Reduce #1 to typename by token ',' at line 193 in state XXX, goto XXX
Reduce #1 to typehdr by token ',' at line 193 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token ',' at line 193 in state XXX, goto XXX
Shift token ',' at line 193 in state XXX, goto XXX
Shift token UINTEGER = "4" at line 193 in state XXX, goto XXX
Shift token ',' at line 193 in state XXX, goto XXX
Shift token UINTEGER = "4" at line 193 in state XXX, goto XXX
Reduce #1 to generic_instance_deflist by token ']' at line 193 in state XXX, call generic_instance_dimension, goto XXX
Reduce #3 to generic_instance_deflist by token ']' at line 193 in state XXX, call generic_instance_dimension, goto XXX
Reduce #3 to generic_instance_deflist by token ']' at line 193 in state XXX, call generic_instance_type, goto XXX
Reduce #1 to generic_instance by token ']' at line 193 in state XXX, call generic_instance, goto XXX
Shift token ']' at line 193 in state XXX, goto XXX
Reduce #4 to typegen by token IDENT = "C" at line 193 in state XXX, call typegen_generic, goto XXX
Reduce #1 to typespec by token IDENT = "C" at line 193 in state XXX, call typespec, goto XXX
Shift token IDENT = "C" at line 193 in state XXX, goto XXX
Shift token '=' at line 193 in state XXX, goto XXX
Shift token IDENT = "A" at line 193 in state XXX, goto XXX
Reduce #1 to expression by token '*' at line 193 in state XXX, call variable, goto XXX
Shift token '*' at line 193 in state XXX, goto XXX
Shift token IDENT = "B" at line 193 in state XXX, goto XXX
Reduce #1 to expression by token ';' at line 193 in state XXX, call variable, goto XXX
Reduce #3 to expression by token ';' at line 193 in state XXX, call binop "*", goto XXX
Reduce #4 to variabledefinition by token ';' at line 193 in state XXX, call vardef_assign, goto XXX
Shift token ';' at line 193 in state XXX, goto XXX
Reduce #3 to statement by token IDENT = "printf" at line 194 in state XXX, call definition 1, goto XXX
Shift token IDENT = "printf" at line 194 in state XXX, goto XXX
Reduce #1 to expression by token '(' at line 194 in state XXX, call variable, goto XXX
Shift token '(' at line 194 in state XXX, goto XXX
Shift token DQSTRING = "Matrix %s:\n" at line 194 in state XXX, goto XXX
Reduce #1 to expression by token ',' at line 194 in state XXX, call string_constant, goto XXX
Shift token ',' at line 194 in state XXX, goto XXX
Shift token DQSTRING = "A*B" at line 194 in state XXX, goto XXX
Reduce #1 to expression by token ')' at line 194 in state XXX, call string_constant, goto XXX
Reduce #1 to expressionlist by token ')' at line 194 in state XXX, goto XXX
Reduce #3 to expressionlist by token ')' at line 194 in state XXX, goto XXX
Shift token ')' at line 194 in state XXX, goto XXX
Reduce #4 to expression by token ';' at line 194 in state XXX, call operator "()", goto XXX
Shift token ';' at line 194 in state XXX, goto XXX
Reduce #2 to statement by token IDENT = "printMatrix" at line 195 in state XXX, call free_expression, goto XXX
Shift token IDENT = "printMatrix" at line 195 in state XXX, goto XXX
Reduce #1 to expression by token '[' at line 195 in state XXX, call variable, goto XXX
Shift token '[' at line 195 in state XXX, goto XXX
Shift token UINTEGER = "4" at line 195 in state XXX, goto XXX
Reduce #1 to expression by token ',' at line 195 in state XXX, call constant "constexpr uint", goto XXX
Shift token ',' at line 195 in state XXX, goto XXX
Shift token UINTEGER = "4" at line 195 in state XXX, goto XXX
Reduce #1 to expression by token ']' at line 195 in state XXX, call constant "constexpr uint", goto XXX
Reduce #1 to expressionlist by token ']' at line 195 in state XXX, goto XXX
Reduce #3 to expressionlist by token ']' at line 195 in state XXX, goto XXX
Shift token ']' at line 195 in state XXX, goto XXX
Reduce #4 to expression by token '(' at line 195 in state XXX, call operator_array "[]", goto XXX
Shift token '(' at line 195 in state XXX, goto XXX
Shift token IDENT = "C" at line 195 in state XXX, goto XXX
Reduce #1 to expression by token ')' at line 195 in state XXX, call variable, goto XXX
Reduce #1 to expressionlist by token ')' at line 195 in state XXX, goto XXX
Shift token ')' at line 195 in state XXX, goto XXX
Reduce #4 to expression by token ';' at line 195 in state XXX, call operator "()", goto XXX
Shift token ';' at line 195 in state XXX, goto XXX
Reduce #2 to statement by token IDENT = "printf" at line 196 in state XXX, call free_expression, goto XXX
Shift token IDENT = "printf" at line 196 in state XXX, goto XXX
Reduce #1 to expression by token '(' at line 196 in state XXX, call variable, goto XXX
Shift token '(' at line 196 in state XXX, goto XXX
Shift token DQSTRING = "\n" at line 196 in state XXX, goto XXX
Reduce #1 to expression by token ')' at line 196 in state XXX, call string_constant, goto XXX
Reduce #1 to expressionlist by token ')' at line 196 in state XXX, goto XXX
Shift token ')' at line 196 in state XXX, goto XXX
Reduce #4 to expression by token ';' at line 196 in state XXX, call operator "()", goto XXX
Shift token ';' at line 196 in state XXX, goto XXX
Reduce #2 to statement by token "var" at line 202 in state XXX, call free_expression, goto XXX
Shift token "var" at line 202 in state XXX, goto XXX
Shift token IDENT = "Matrix" at line 202 in state XXX, goto XXX
Reduce #1 to typename by token '[' at line 202 in state XXX, goto XXX
Reduce #1 to typehdr by token '[' at line 202 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token '[' at line 202 in state XXX, goto XXX
Shift token '[' at line 202 in state XXX, goto XXX
Shift token IDENT = "double" at line 202 in state XXX, goto XXX
Reduce #1 to typename by token ',' at line 202 in state XXX, goto XXX
Reduce #1 to typehdr by token ',' at line 202 in state XXX, call typehdr {const=false}, goto XXX
Reduce #1 to typegen by token ',' at line 202 in state XXX, goto XXX
Shift token ',' at line 202 in state XXX, goto XXX
Shift token UINTEGER = "3" at line 202 in state XXX, goto XXX
Shift token ',' at line 202 in state XXX, goto XXX
Shift token UINTEGER = "3" at line 202 in state XXX, goto XXX
Reduce #1 to generic_instance_deflist by token ']' at line 202 in state XXX, call generic_instance_dimension, goto XXX
Reduce #3 to generic_instance_deflist by token ']' at line 202 in state XXX, call generic_instance_dimension, goto XXX
Reduce #3 to generic_instance_deflist by token ']' at line 202 in state XXX, call generic_instance_type, goto XXX
Reduce #1 to generic_instance by token ']' at line 202 in state XXX, call generic_instance, goto XXX
Shift token ']' at line 202 in state XXX, goto XXX
Reduce #4 to typegen by token IDENT = "D" at line 202 in state XXX, call typegen_generic, goto XXX
Reduce #1 to typespec by token IDENT = "D" at line 202 in state XXX, call typespec, goto XXX
Shift token IDENT = "D" at line 202 in state XXX, goto XXX
Shift token '=' at line 202 in state XXX, goto XXX
Shift token IDENT = "B" at line 202 in state XXX, goto XXX
Reduce #1 to expression by token '*' at line 202 in state XXX, call variable, goto XXX
Shift token '*' at line 202 in state XXX, goto XXX
Shift token IDENT = "A" at line 202 in state XXX, goto XXX
Reduce #1 to expression by token ';' at line 202 in state XXX, call variable, goto XXX
Reduce #3 to expression by token ';' at line 202 in state XXX, call binop "*", goto XXX
Reduce #4 to variabledefinition by token ';' at line 202 in state XXX, call vardef_assign, goto XXX
Shift token ';' at line 202 in state XXX, goto XXX
Reduce #3 to statement by token IDENT = "printf" at line 203 in state XXX, call definition 1, goto XXX
Shift token IDENT = "printf" at line 203 in state XXX, goto XXX
Reduce #1 to expression by token '(' at line 203 in state XXX, call variable, goto XXX
Shift token '(' at line 203 in state XXX, goto XXX
Shift token DQSTRING = "Matrix %s:\n" at line 203 in state XXX, goto XXX
Reduce #1 to expression by token ',' at line 203 in state XXX, call string_constant, goto XXX
Shift token ',' at line 203 in state XXX, goto XXX
Shift token DQSTRING = "B*A" at line 203 in state XXX, goto XXX
Reduce #1 to expression by token ')' at line 203 in state XXX, call string_constant, goto XXX
Reduce #1 to expressionlist by token ')' at line 203 in state XXX, goto XXX
Reduce #3 to expressionlist by token ')' at line 203 in state XXX, goto XXX
Shift token ')' at line 203 in state XXX, goto XXX
Reduce #4 to expression by token ';' at line 203 in state XXX, call operator "()", goto XXX
Shift token ';' at line 203 in state XXX, goto XXX
Reduce #2 to statement by token IDENT = "printMatrix" at line 204 in state XXX, call free_expression, goto XXX
Shift token IDENT = "printMatrix" at line 204 in state XXX, goto XXX
Reduce #1 to expression by token '[' at line 204 in state XXX, call variable, goto XXX
Shift token '[' at line 204 in state XXX, goto XXX
Shift token UINTEGER = "3" at line 204 in state XXX, goto XXX
Reduce #1 to expression by token ',' at line 204 in state XXX, call constant "constexpr uint", goto XXX
Shift token ',' at line 204 in state XXX, goto XXX
Shift token UINTEGER = "3" at line 204 in state XXX, goto XXX
Reduce #1 to expression by token ']' at line 204 in state XXX, call constant "constexpr uint", goto XXX
Reduce #1 to expressionlist by token ']' at line 204 in state XXX, goto XXX
Reduce #3 to expressionlist by token ']' at line 204 in state XXX, goto XXX
Shift token ']' at line 204 in state XXX, goto XXX
Reduce #4 to expression by token '(' at line 204 in state XXX, call operator_array "[]", goto XXX
Shift token '(' at line 204 in state XXX, goto XXX
Shift token IDENT = "D" at line 204 in state XXX, goto XXX
Reduce #1 to expression by token ')' at line 204 in state XXX, call variable, goto XXX
Reduce #1 to expressionlist by token ')' at line 204 in state XXX, goto XXX
Shift token ')' at line 204 in state XXX, goto XXX
Reduce #4 to expression by token ';' at line 204 in state XXX, call operator "()", goto XXX
Shift token ';' at line 204 in state XXX, goto XXX
Reduce #2 to statement by token IDENT = "printf" at line 205 in state XXX, call free_expression, goto XXX
Shift token IDENT = "printf" at line 205 in state XXX, goto XXX
Reduce #1 to expression by token '(' at line 205 in state XXX, call variable, goto XXX
Shift token '(' at line 205 in state XXX, goto XXX
Shift token DQSTRING = "\n" at line 205 in state XXX, goto XXX
Reduce #1 to expression by token ')' at line 205 in state XXX, call string_constant, goto XXX
Reduce #1 to expressionlist by token ')' at line 205 in state XXX, goto XXX
Shift token ')' at line 205 in state XXX, goto XXX
Reduce #4 to expression by token ';' at line 205 in state XXX, call operator "()", goto XXX
Shift token ';' at line 205 in state XXX, goto XXX
Reduce #2 to statement by token '}' at line 206 in state XXX, call free_expression, goto XXX
Reduce #0 to statementlist by token '}' at line 206 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 206 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 206 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 206 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 206 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 206 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 206 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 206 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 206 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 206 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 206 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 206 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 206 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 206 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 206 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 206 in state XXX, goto XXX
Reduce #2 to statementlist by token '}' at line 206 in state XXX, goto XXX
Shift token '}' at line 206 in state XXX, goto XXX
Reduce #2 to main_procedure by token $ at line 208 in state XXX, call main_procdef, goto XXX
Accept
Calling Lua function: program
Lua call result [1]
{
  arg = {
    {
      arg = {
        {
          line = 3,
          name = "DQSTRING",
          value = "C"},
        {
          line = 3,
          name = "IDENT",
          value = "printf"},
        {
          arg = {
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {
                        {
                          arg = {
                            {
                              line = 3,
                              name = "IDENT",
                              value = "byte"}},
                          call = {
                            name = "typehdr {const=true}",
                            obj = {
                              const = true},
                            proc = <function>},
                          line = 3,
                          step = 0}},
                      call = {
                        name = "typegen_pointer {const=false}",
                        obj = {
                          const = false},
                        proc = <function>},
                      line = 3,
                      step = 0}},
                  call = {
                    name = "typespec",
                    proc = <function>},
                  line = 3,
                  step = 0},
                {
                  line = 3,
                  name = "IDENT",
                  value = "fmt"}},
              call = {
                name = "extern_paramdeftail",
                proc = <function>},
              line = 3,
              step = 0}},
          call = {
            name = "extern_paramdeflist",
            proc = <function>},
          line = 3,
          step = 0}},
      call = {
        name = "extern_procdef_vararg",
        proc = <function>},
      line = 3,
      step = 0},
    {
      arg = {
        {
          arg = {
            {
              arg = {
                {
                  arg = {
                    {
                      line = 5,
                      name = "IDENT",
                      value = "double"}},
                  call = {
                    name = "typehdr {const=false}",
                    obj = {
                      const = false},
                    proc = <function>},
                  line = 5,
                  step = 0}},
              call = {
                name = "typespec",
                proc = <function>},
              line = 5,
              step = 0},
            {
              line = 5,
              name = "IDENT",
              value = "epsilon"},
            {
              arg = {
                {
                  line = 5,
                  name = "FLOAT",
                  value = "1.11e-16"}},
              call = {
                name = "constant constexpr float",
                obj = "constexpr float",
                proc = <function>},
              line = 5,
              step = 0}},
          call = {
            name = "vardef_assign",
            proc = <function>},
          line = 5,
          step = 1}},
      call = {
        name = "definition 1",
        obj = 1,
        proc = <function>},
      line = 5,
      step = 1},
    {
      arg = {
        {
          arg = {
            {
              arg = {},
              call = {
                name = "linkage {private=false,linkage="external",explicit=false}",
                obj = {
                  explicit = false,
                  linkage = "external",
                  private = false},
                proc = <function>},
              line = 5,
              step = 1},
            {
              line = 7,
              name = "IDENT",
              value = "sgn"},
            {
              arg = {
                {
                  arg = {
                    {
                      line = 7,
                      name = "IDENT",
                      value = "int"}},
                  call = {
                    name = "typehdr {const=false}",
                    obj = {
                      const = false},
                    proc = <function>},
                  line = 7,
                  step = 1}},
              call = {
                name = "typespec",
                proc = <function>},
              line = 7,
              step = 1},
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  line = 7,
                                  name = "IDENT",
                                  value = "double"}},
                              call = {
                                name = "typehdr {const=false}",
                                obj = {
                                  const = false},
                                proc = <function>},
                              line = 7,
                              step = 1}},
                          call = {
                            name = "typespec",
                            proc = <function>},
                          line = 7,
                          step = 1},
                        {
                          line = 7,
                          name = "IDENT",
                          value = "val"}},
                      call = {
                        name = "paramdef",
                        proc = <function>},
                      line = 7,
                      step = 1}},
                  call = {
                    name = "paramdeflist",
                    proc = <function>},
                  line = 7,
                  step = 1},
                {
                  arg = {
                    {
                      arg = {
                        {
                          arg = {
                            {
                              line = 9,
                              name = "IDENT",
                              value = "val"}},
                          call = {
                            name = "variable",
                            proc = <function>},
                          line = 9,
                          step = 1},
                        {
                          arg = {
                            {
                              line = 9,
                              name = "IDENT",
                              value = "epsilon"}},
                          call = {
                            name = "variable",
                            proc = <function>},
                          line = 9,
                          step = 1}},
                      call = {
                        name = "binop >=",
                        obj = ">=",
                        proc = <function>},
                      line = 9,
                      step = 1},
                    {
                      arg = {
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  line = 11,
                                  name = "UINTEGER",
                                  value = "1"}},
                              call = {
                                name = "constant constexpr uint",
                                obj = "constexpr uint",
                                proc = <function>},
                              line = 11,
                              step = 1}},
                          call = {
                            name = "return_value",
                            proc = <function>},
                          line = 11,
                          step = 2}},
                      call = {
                        name = "codeblock",
                        proc = <function>},
                      line = 11,
                      scope = {
                        1,
                        3}},
                    {
                      arg = {
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  line = 13,
                                  name = "IDENT",
                                  value = "val"}},
                              call = {
                                name = "variable",
                                proc = <function>},
                              line = 13,
                              step = 3},
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      line = 13,
                                      name = "IDENT",
                                      value = "epsilon"}},
                                  call = {
                                    name = "variable",
                                    proc = <function>},
                                  line = 13,
                                  step = 3}},
                              call = {
                                name = "unop -",
                                obj = "-",
                                proc = <function>},
                              line = 13,
                              step = 3}},
                          call = {
                            name = "binop <=",
                            obj = "<=",
                            proc = <function>},
                          line = 13,
                          step = 3},
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      line = 15,
                                      name = "SINTEGER",
                                      value = "-1"}},
                                  call = {
                                    name = "constant constexpr int",
                                    obj = "constexpr int",
                                    proc = <function>},
                                  line = 15,
                                  step = 3}},
                              call = {
                                name = "return_value",
                                proc = <function>},
                              line = 15,
                              step = 4}},
                          call = {
                            name = "codeblock",
                            proc = <function>},
                          line = 15,
                          scope = {
                            3,
                            5}},
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          line = 19,
                                          name = "UINTEGER",
                                          value = "0"}},
                                      call = {
                                        name = "constant constexpr uint",
                                        obj = "constexpr uint",
                                        proc = <function>},
                                      line = 19,
                                      step = 5}},
                                  call = {
                                    name = "return_value",
                                    proc = <function>},
                                  line = 19,
                                  step = 6}},
                              call = {
                                name = "codeblock",
                                proc = <function>},
                              line = 19,
                              scope = {
                                5,
                                7}}},
                          call = {
                            name = "conditional_else",
                            proc = <function>},
                          line = 19,
                          step = 7}},
                      call = {
                        name = "conditional_elseif",
                        proc = <function>},
                      line = 19,
                      step = 7}},
                  call = {
                    name = "conditional_if",
                    proc = <function>},
                  line = 19,
                  step = 7}},
              call = {
                name = "callablebody {throws=false,const=false}",
                obj = {
                  const = false,
                  throws = false},
                proc = <function>},
              line = 19,
              scope = {
                1,
                8}}},
          call = {
            name = "funcdef",
            proc = <function>},
          id = 1,
          line = 19,
          step = 8}},
      call = {
        name = "definition 1",
        obj = 1,
        proc = <function>},
      line = 19,
      step = 8},
    {
      arg = {
        {
          arg = {
            {
              line = 23,
              name = "IDENT",
              value = "Matrix"},
            {
              arg = {
                {
                  arg = {
                    {
                      line = 23,
                      name = "IDENT",
                      value = "R"},
                    {
                      arg = {
                        {
                          line = 23,
                          name = "IDENT",
                          value = "DIM1"},
                        {
                          arg = {
                            {
                              line = 23,
                              name = "IDENT",
                              value = "DIM2"}},
                          call = {
                            name = "generic_header_ident",
                            proc = <function>},
                          line = 23,
                          step = 8}},
                      call = {
                        name = "generic_header_ident",
                        proc = <function>},
                      line = 23,
                      step = 8}},
                  call = {
                    name = "generic_header_ident",
                    proc = <function>},
                  line = 23,
                  step = 8}},
              call = {
                name = "generic_header",
                proc = <function>},
              line = 23,
              step = 8},
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {},
                      call = {
                        name = "linkage {private=false,linkage="external",explicit=false}",
                        obj = {
                          explicit = false,
                          linkage = "external",
                          private = false},
                        proc = <function>},
                      line = 23,
                      step = 8},
                    {
                      arg = {
                        {
                          arg = {},
                          call = {
                            name = "paramdeflist",
                            proc = <function>},
                          line = 23,
                          step = 8},
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      line = 27,
                                      name = "IDENT",
                                      value = "m_ar"}},
                                  call = {
                                    name = "variable",
                                    proc = <function>},
                                  line = 27,
                                  step = 8},
                                {
                                  arg = {},
                                  call = {
                                    name = "structure",
                                    proc = <function>},
                                  line = 27,
                                  step = 8}},
                              call = {
                                name = "binop =",
                                obj = "=",
                                proc = <function>},
                              line = 27,
                              step = 9}},
                          call = {
                            name = "free_expression",
                            proc = <function>},
                          line = 27,
                          step = 9}},
                      call = {
                        name = "callablebody {throws=false,const=false}",
                        obj = {
                          const = false,
                          throws = false},
                        proc = <function>},
                      line = 27,
                      scope = {
                        8,
                        10}}},
                  call = {
                    name = "constructordef",
                    proc = <function>},
                  id = 2,
                  line = 27,
                  step = 10}},
              call = {
                name = "definition_decl_impl_pass 4",
                obj = 4,
                proc = <function>},
              line = 27,
              step = 10},
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {},
                      call = {
                        name = "linkage {private=false,linkage="external",explicit=false}",
                        obj = {
                          explicit = false,
                          linkage = "external",
                          private = false},
                        proc = <function>},
                      line = 27,
                      step = 10},
                    {
                      arg = {
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          arg = {
                                            {
                                              arg = {
                                                {
                                                  line = 29,
                                                  name = "IDENT",
                                                  value = "R"}},
                                              call = {
                                                name = "typehdr {const=true}",
                                                obj = {
                                                  const = true},
                                                proc = <function>},
                                              line = 29,
                                              step = 10},
                                            {
                                              arg = {
                                                {
                                                  arg = {
                                                    {
                                                      arg = {
                                                        {
                                                          line = 29,
                                                          name = "IDENT",
                                                          value = "DIM2"}},
                                                      call = {
                                                        name = "typehdr {const=false}",
                                                        obj = {
                                                          const = false},
                                                        proc = <function>},
                                                      line = 29,
                                                      step = 10}},
                                                  call = {
                                                    name = "generic_instance_type",
                                                    proc = <function>},
                                                  line = 29,
                                                  step = 10}},
                                              call = {
                                                name = "generic_instance",
                                                proc = <function>},
                                              line = 29,
                                              step = 10}},
                                          call = {
                                            name = "typegen_generic",
                                            proc = <function>},
                                          line = 29,
                                          step = 10},
                                        {
                                          arg = {
                                            {
                                              arg = {
                                                {
                                                  arg = {
                                                    {
                                                      line = 29,
                                                      name = "IDENT",
                                                      value = "DIM1"}},
                                                  call = {
                                                    name = "typehdr {const=false}",
                                                    obj = {
                                                      const = false},
                                                    proc = <function>},
                                                  line = 29,
                                                  step = 10}},
                                              call = {
                                                name = "generic_instance_type",
                                                proc = <function>},
                                              line = 29,
                                              step = 10}},
                                          call = {
                                            name = "generic_instance",
                                            proc = <function>},
                                          line = 29,
                                          step = 10}},
                                      call = {
                                        name = "typegen_generic",
                                        proc = <function>},
                                      line = 29,
                                      step = 10}},
                                  call = {
                                    name = "typespec",
                                    proc = <function>},
                                  line = 29,
                                  step = 10},
                                {
                                  line = 29,
                                  name = "IDENT",
                                  value = "ar_"}},
                              call = {
                                name = "paramdef",
                                proc = <function>},
                              line = 29,
                              step = 10}},
                          call = {
                            name = "paramdeflist",
                            proc = <function>},
                          line = 29,
                          step = 10},
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      line = 31,
                                      name = "IDENT",
                                      value = "m_ar"}},
                                  call = {
                                    name = "variable",
                                    proc = <function>},
                                  line = 31,
                                  step = 10},
                                {
                                  arg = {
                                    {
                                      line = 31,
                                      name = "IDENT",
                                      value = "ar_"}},
                                  call = {
                                    name = "variable",
                                    proc = <function>},
                                  line = 31,
                                  step = 10}},
                              call = {
                                name = "binop =",
                                obj = "=",
                                proc = <function>},
                              line = 31,
                              step = 11}},
                          call = {
                            name = "free_expression",
                            proc = <function>},
                          line = 31,
                          step = 11}},
                      call = {
                        name = "callablebody {throws=false,const=false}",
                        obj = {
                          const = false,
                          throws = false},
                        proc = <function>},
                      line = 31,
                      scope = {
                        10,
                        12}}},
                  call = {
                    name = "constructordef",
                    proc = <function>},
                  id = 3,
                  line = 31,
                  step = 12}},
              call = {
                name = "definition_decl_impl_pass 4",
                obj = 4,
                proc = <function>},
              line = 31,
              step = 12},
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {},
                      call = {
                        name = "linkage {private=false,linkage="external",explicit=false}",
                        obj = {
                          explicit = false,
                          linkage = "external",
                          private = false},
                        proc = <function>},
                      line = 31,
                      step = 12},
                    {
                      arg = {
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          arg = {
                                            {
                                              line = 33,
                                              name = "IDENT",
                                              value = "Matrix"}},
                                          call = {
                                            name = "typehdr {const=true}",
                                            obj = {
                                              const = true},
                                            proc = <function>},
                                          line = 33,
                                          step = 12},
                                        {
                                          arg = {
                                            {
                                              arg = {
                                                {
                                                  arg = {
                                                    {
                                                      line = 33,
                                                      name = "IDENT",
                                                      value = "R"}},
                                                  call = {
                                                    name = "typehdr {const=false}",
                                                    obj = {
                                                      const = false},
                                                    proc = <function>},
                                                  line = 33,
                                                  step = 12},
                                                {
                                                  arg = {
                                                    {
                                                      arg = {
                                                        {
                                                          line = 33,
                                                          name = "IDENT",
                                                          value = "DIM1"}},
                                                      call = {
                                                        name = "typehdr {const=false}",
                                                        obj = {
                                                          const = false},
                                                        proc = <function>},
                                                      line = 33,
                                                      step = 12},
                                                    {
                                                      arg = {
                                                        {
                                                          arg = {
                                                            {
                                                              line = 33,
                                                              name = "IDENT",
                                                              value = "DIM2"}},
                                                          call = {
                                                            name = "typehdr {const=false}",
                                                            obj = {
                                                              const = false},
                                                            proc = <function>},
                                                          line = 33,
                                                          step = 12}},
                                                      call = {
                                                        name = "generic_instance_type",
                                                        proc = <function>},
                                                      line = 33,
                                                      step = 12}},
                                                  call = {
                                                    name = "generic_instance_type",
                                                    proc = <function>},
                                                  line = 33,
                                                  step = 12}},
                                              call = {
                                                name = "generic_instance_type",
                                                proc = <function>},
                                              line = 33,
                                              step = 12}},
                                          call = {
                                            name = "generic_instance",
                                            proc = <function>},
                                          line = 33,
                                          step = 12}},
                                      call = {
                                        name = "typegen_generic",
                                        proc = <function>},
                                      line = 33,
                                      step = 12}},
                                  call = {
                                    name = "typespec",
                                    proc = <function>},
                                  line = 33,
                                  step = 12},
                                {
                                  line = 33,
                                  name = "IDENT",
                                  value = "o"}},
                              call = {
                                name = "paramdef",
                                proc = <function>},
                              line = 33,
                              step = 12}},
                          call = {
                            name = "paramdeflist",
                            proc = <function>},
                          line = 33,
                          step = 12},
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      line = 35,
                                      name = "IDENT",
                                      value = "m_ar"}},
                                  call = {
                                    name = "variable",
                                    proc = <function>},
                                  line = 35,
                                  step = 12},
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          line = 35,
                                          name = "IDENT",
                                          value = "o"}},
                                      call = {
                                        name = "variable",
                                        proc = <function>},
                                      line = 35,
                                      step = 12},
                                    {
                                      line = 35,
                                      name = "IDENT",
                                      value = "m_ar"}},
                                  call = {
                                    name = "member",
                                    proc = <function>},
                                  line = 35,
                                  step = 12}},
                              call = {
                                name = "binop =",
                                obj = "=",
                                proc = <function>},
                              line = 35,
                              step = 13}},
                          call = {
                            name = "free_expression",
                            proc = <function>},
                          line = 35,
                          step = 13}},
                      call = {
                        name = "callablebody {throws=false,const=false}",
                        obj = {
                          const = false,
                          throws = false},
                        proc = <function>},
                      line = 35,
                      scope = {
                        12,
                        14}}},
                  call = {
                    name = "constructordef",
                    proc = <function>},
                  id = 4,
                  line = 35,
                  step = 14}},
              call = {
                name = "definition_decl_impl_pass 4",
                obj = 4,
                proc = <function>},
              line = 35,
              step = 14},
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {},
                      call = {
                        name = "linkage {private=false,linkage="external",explicit=true}",
                        obj = {
                          explicit = true,
                          linkage = "external",
                          private = false},
                        proc = <function>},
                      line = 35,
                      step = 14},
                    {
                      arg = {},
                      call = {
                        name = "operatordecl {name="+",symbol="plus"}",
                        obj = {
                          name = "+",
                          symbol = "plus"},
                        proc = <function>},
                      line = 35,
                      step = 14},
                    {
                      arg = {
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  line = 37,
                                  name = "IDENT",
                                  value = "Matrix"}},
                              call = {
                                name = "typehdr {const=false}",
                                obj = {
                                  const = false},
                                proc = <function>},
                              line = 37,
                              step = 14},
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          line = 37,
                                          name = "IDENT",
                                          value = "R"}},
                                      call = {
                                        name = "typehdr {const=false}",
                                        obj = {
                                          const = false},
                                        proc = <function>},
                                      line = 37,
                                      step = 14},
                                    {
                                      arg = {
                                        {
                                          arg = {
                                            {
                                              line = 37,
                                              name = "IDENT",
                                              value = "DIM1"}},
                                          call = {
                                            name = "typehdr {const=false}",
                                            obj = {
                                              const = false},
                                            proc = <function>},
                                          line = 37,
                                          step = 14},
                                        {
                                          arg = {
                                            {
                                              arg = {
                                                {
                                                  line = 37,
                                                  name = "IDENT",
                                                  value = "DIM2"}},
                                              call = {
                                                name = "typehdr {const=false}",
                                                obj = {
                                                  const = false},
                                                proc = <function>},
                                              line = 37,
                                              step = 14}},
                                          call = {
                                            name = "generic_instance_type",
                                            proc = <function>},
                                          line = 37,
                                          step = 14}},
                                      call = {
                                        name = "generic_instance_type",
                                        proc = <function>},
                                      line = 37,
                                      step = 14}},
                                  call = {
                                    name = "generic_instance_type",
                                    proc = <function>},
                                  line = 37,
                                  step = 14}},
                              call = {
                                name = "generic_instance",
                                proc = <function>},
                              line = 37,
                              step = 14}},
                          call = {
                            name = "typegen_generic",
                            proc = <function>},
                          line = 37,
                          step = 14}},
                      call = {
                        name = "typespec",
                        proc = <function>},
                      line = 37,
                      step = 14},
                    {
                      arg = {
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          arg = {
                                            {
                                              line = 37,
                                              name = "IDENT",
                                              value = "Matrix"}},
                                          call = {
                                            name = "typehdr {const=true}",
                                            obj = {
                                              const = true},
                                            proc = <function>},
                                          line = 37,
                                          step = 14},
                                        {
                                          arg = {
                                            {
                                              arg = {
                                                {
                                                  arg = {
                                                    {
                                                      line = 37,
                                                      name = "IDENT",
                                                      value = "R"}},
                                                  call = {
                                                    name = "typehdr {const=false}",
                                                    obj = {
                                                      const = false},
                                                    proc = <function>},
                                                  line = 37,
                                                  step = 14},
                                                {
                                                  arg = {
                                                    {
                                                      arg = {
                                                        {
                                                          line = 37,
                                                          name = "IDENT",
                                                          value = "DIM1"}},
                                                      call = {
                                                        name = "typehdr {const=false}",
                                                        obj = {
                                                          const = false},
                                                        proc = <function>},
                                                      line = 37,
                                                      step = 14},
                                                    {
                                                      arg = {
                                                        {
                                                          arg = {
                                                            {
                                                              line = 37,
                                                              name = "IDENT",
                                                              value = "DIM2"}},
                                                          call = {
                                                            name = "typehdr {const=false}",
                                                            obj = {
                                                              const = false},
                                                            proc = <function>},
                                                          line = 37,
                                                          step = 14}},
                                                      call = {
                                                        name = "generic_instance_type",
                                                        proc = <function>},
                                                      line = 37,
                                                      step = 14}},
                                                  call = {
                                                    name = "generic_instance_type",
                                                    proc = <function>},
                                                  line = 37,
                                                  step = 14}},
                                              call = {
                                                name = "generic_instance_type",
                                                proc = <function>},
                                              line = 37,
                                              step = 14}},
                                          call = {
                                            name = "generic_instance",
                                            proc = <function>},
                                          line = 37,
                                          step = 14}},
                                      call = {
                                        name = "typegen_generic",
                                        proc = <function>},
                                      line = 37,
                                      step = 14}},
                                  call = {
                                    name = "typespec",
                                    proc = <function>},
                                  line = 37,
                                  step = 14},
                                {
                                  line = 37,
                                  name = "IDENT",
                                  value = "o"}},
                              call = {
                                name = "paramdef",
                                proc = <function>},
                              line = 37,
                              step = 14}},
                          call = {
                            name = "paramdeflist",
                            proc = <function>},
                          line = 37,
                          step = 14},
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          arg = {
                                            {
                                              line = 39,
                                              name = "IDENT",
                                              value = "Matrix"}},
                                          call = {
                                            name = "typehdr {const=false}",
                                            obj = {
                                              const = false},
                                            proc = <function>},
                                          line = 39,
                                          step = 14},
                                        {
                                          arg = {
                                            {
                                              arg = {
                                                {
                                                  arg = {
                                                    {
                                                      line = 39,
                                                      name = "IDENT",
                                                      value = "R"}},
                                                  call = {
                                                    name = "typehdr {const=false}",
                                                    obj = {
                                                      const = false},
                                                    proc = <function>},
                                                  line = 39,
                                                  step = 14},
                                                {
                                                  arg = {
                                                    {
                                                      arg = {
                                                        {
                                                          line = 39,
                                                          name = "IDENT",
                                                          value = "DIM1"}},
                                                      call = {
                                                        name = "typehdr {const=false}",
                                                        obj = {
                                                          const = false},
                                                        proc = <function>},
                                                      line = 39,
                                                      step = 14},
                                                    {
                                                      arg = {
                                                        {
                                                          arg = {
                                                            {
                                                              line = 39,
                                                              name = "IDENT",
                                                              value = "DIM2"}},
                                                          call = {
                                                            name = "typehdr {const=false}",
                                                            obj = {
                                                              const = false},
                                                            proc = <function>},
                                                          line = 39,
                                                          step = 14}},
                                                      call = {
                                                        name = "generic_instance_type",
                                                        proc = <function>},
                                                      line = 39,
                                                      step = 14}},
                                                  call = {
                                                    name = "generic_instance_type",
                                                    proc = <function>},
                                                  line = 39,
                                                  step = 14}},
                                              call = {
                                                name = "generic_instance_type",
                                                proc = <function>},
                                              line = 39,
                                              step = 14}},
                                          call = {
                                            name = "generic_instance",
                                            proc = <function>},
                                          line = 39,
                                          step = 14}},
                                      call = {
                                        name = "typegen_generic",
                                        proc = <function>},
                                      line = 39,
                                      step = 14}},
                                  call = {
                                    name = "typespec",
                                    proc = <function>},
                                  line = 39,
                                  step = 14},
                                {
                                  line = 39,
                                  name = "IDENT",
                                  value = "rt"}},
                              call = {
                                name = "vardef",
                                proc = <function>},
                              line = 39,
                              step = 15}},
                          call = {
                            name = "definition 1",
                            obj = 1,
                            proc = <function>},
                          line = 39,
                          step = 16},
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          line = 40,
                                          name = "IDENT",
                                          value = "int"}},
                                      call = {
                                        name = "typehdr {const=false}",
                                        obj = {
                                          const = false},
                                        proc = <function>},
                                      line = 40,
                                      step = 16}},
                                  call = {
                                    name = "typespec",
                                    proc = <function>},
                                  line = 40,
                                  step = 16},
                                {
                                  line = 40,
                                  name = "IDENT",
                                  value = "ii"},
                                {
                                  arg = {
                                    {
                                      line = 40,
                                      name = "UINTEGER",
                                      value = "0"}},
                                  call = {
                                    name = "constant constexpr uint",
                                    obj = "constexpr uint",
                                    proc = <function>},
                                  line = 40,
                                  step = 16}},
                              call = {
                                name = "vardef_assign",
                                proc = <function>},
                              line = 40,
                              step = 17}},
                          call = {
                            name = "definition 1",
                            obj = 1,
                            proc = <function>},
                          line = 40,
                          step = 18},
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      line = 41,
                                      name = "IDENT",
                                      value = "ii"}},
                                  call = {
                                    name = "variable",
                                    proc = <function>},
                                  line = 41,
                                  step = 18},
                                {
                                  arg = {
                                    {
                                      line = 41,
                                      name = "IDENT",
                                      value = "DIM1"}},
                                  call = {
                                    name = "variable",
                                    proc = <function>},
                                  line = 41,
                                  step = 18}},
                              call = {
                                name = "binop <",
                                obj = "<",
                                proc = <function>},
                              line = 41,
                              step = 18},
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          arg = {
                                            {
                                              arg = {
                                                {
                                                  line = 43,
                                                  name = "IDENT",
                                                  value = "int"}},
                                              call = {
                                                name = "typehdr {const=false}",
                                                obj = {
                                                  const = false},
                                                proc = <function>},
                                              line = 43,
                                              step = 18}},
                                          call = {
                                            name = "typespec",
                                            proc = <function>},
                                          line = 43,
                                          step = 18},
                                        {
                                          line = 43,
                                          name = "IDENT",
                                          value = "jj"},
                                        {
                                          arg = {
                                            {
                                              line = 43,
                                              name = "UINTEGER",
                                              value = "0"}},
                                          call = {
                                            name = "constant constexpr uint",
                                            obj = "constexpr uint",
                                            proc = <function>},
                                          line = 43,
                                          step = 18}},
                                      call = {
                                        name = "vardef_assign",
                                        proc = <function>},
                                      line = 43,
                                      step = 19}},
                                  call = {
                                    name = "definition 1",
                                    obj = 1,
                                    proc = <function>},
                                  line = 43,
                                  step = 20},
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          arg = {
                                            {
                                              line = 44,
                                              name = "IDENT",
                                              value = "jj"}},
                                          call = {
                                            name = "variable",
                                            proc = <function>},
                                          line = 44,
                                          step = 20},
                                        {
                                          arg = {
                                            {
                                              line = 44,
                                              name = "IDENT",
                                              value = "DIM2"}},
                                          call = {
                                            name = "variable",
                                            proc = <function>},
                                          line = 44,
                                          step = 20}},
                                      call = {
                                        name = "binop <",
                                        obj = "<",
                                        proc = <function>},
                                      line = 44,
                                      step = 20},
                                    {
                                      arg = {
                                        {
                                          arg = {
                                            {
                                              arg = {
                                                {
                                                  arg = {
                                                    {
                                                      arg = {
                                                        {
                                                          arg = {
                                                            {
                                                              arg = {
                                                                {
                                                                  line = 46,
                                                                  name = "IDENT",
                                                                  value = "rt"}},
                                                              call = {
                                                                name = "variable",
                                                                proc = <function>},
                                                              line = 46,
                                                              step = 20},
                                                            {
                                                              line = 46,
                                                              name = "IDENT",
                                                              value = "m_ar"}},
                                                          call = {
                                                            name = "member",
                                                            proc = <function>},
                                                          line = 46,
                                                          step = 20},
                                                        {
                                                          arg = {
                                                            {
                                                              line = 46,
                                                              name = "IDENT",
                                                              value = "ii"}},
                                                          call = {
                                                            name = "variable",
                                                            proc = <function>},
                                                          line = 46,
                                                          step = 20}},
                                                      call = {
                                                        name = "operator_array []",
                                                        obj = "[]",
                                                        proc = <function>},
                                                      line = 46,
                                                      step = 20},
                                                    {
                                                      arg = {
                                                        {
                                                          line = 46,
                                                          name = "IDENT",
                                                          value = "jj"}},
                                                      call = {
                                                        name = "variable",
                                                        proc = <function>},
                                                      line = 46,
                                                      step = 20}},
                                                  call = {
                                                    name = "operator_array []",
                                                    obj = "[]",
                                                    proc = <function>},
                                                  line = 46,
                                                  step = 20},
                                                {
                                                  arg = {
                                                    {
                                                      arg = {
                                                        {
                                                          arg = {
                                                            {
                                                              arg = {
                                                                {
                                                                  line = 46,
                                                                  name = "IDENT",
                                                                  value = "m_ar"}},
                                                              call = {
                                                                name = "variable",
                                                                proc = <function>},
                                                              line = 46,
                                                              step = 20},
                                                            {
                                                              arg = {
                                                                {
                                                                  line = 46,
                                                                  name = "IDENT",
                                                                  value = "ii"}},
                                                              call = {
                                                                name = "variable",
                                                                proc = <function>},
                                                              line = 46,
                                                              step = 20}},
                                                          call = {
                                                            name = "operator_array []",
                                                            obj = "[]",
                                                            proc = <function>},
                                                          line = 46,
                                                          step = 20},
                                                        {
                                                          arg = {
                                                            {
                                                              line = 46,
                                                              name = "IDENT",
                                                              value = "jj"}},
                                                          call = {
                                                            name = "variable",
                                                            proc = <function>},
                                                          line = 46,
                                                          step = 20}},
                                                      call = {
                                                        name = "operator_array []",
                                                        obj = "[]",
                                                        proc = <function>},
                                                      line = 46,
                                                      step = 20},
                                                    {
                                                      arg = {
                                                        {
                                                          arg = {
                                                            {
                                                              arg = {
                                                                {
                                                                  arg = {
                                                                    {
                                                                      line = 46,
                                                                      name = "IDENT",
                                                                      value = "o"}},
                                                                  call = {
                                                                    name = "variable",
                                                                    proc = <function>},
                                                                  line = 46,
                                                                  step = 20},
                                                                {
                                                                  line = 46,
                                                                  name = "IDENT",
                                                                  value = "m_ar"}},
                                                              call = {
                                                                name = "member",
                                                                proc = <function>},
                                                              line = 46,
                                                              step = 20},
                                                            {
                                                              arg = {
                                                                {
                                                                  line = 46,
                                                                  name = "IDENT",
                                                                  value = "ii"}},
                                                              call = {
                                                                name = "variable",
                                                                proc = <function>},
                                                              line = 46,
                                                              step = 20}},
                                                          call = {
                                                            name = "operator_array []",
                                                            obj = "[]",
                                                            proc = <function>},
                                                          line = 46,
                                                          step = 20},
                                                        {
                                                          arg = {
                                                            {
                                                              line = 46,
                                                              name = "IDENT",
                                                              value = "jj"}},
                                                          call = {
                                                            name = "variable",
                                                            proc = <function>},
                                                          line = 46,
                                                          step = 20}},
                                                      call = {
                                                        name = "operator_array []",
                                                        obj = "[]",
                                                        proc = <function>},
                                                      line = 46,
                                                      step = 20}},
                                                  call = {
                                                    name = "binop +",
                                                    obj = "+",
                                                    proc = <function>},
                                                  line = 46,
                                                  step = 20}},
                                              call = {
                                                name = "binop =",
                                                obj = "=",
                                                proc = <function>},
                                              line = 46,
                                              step = 21}},
                                          call = {
                                            name = "free_expression",
                                            proc = <function>},
                                          line = 46,
                                          step = 21},
                                        {
                                          arg = {
                                            {
                                              arg = {
                                                {
                                                  arg = {
                                                    {
                                                      line = 47,
                                                      name = "IDENT",
                                                      value = "jj"}},
                                                  call = {
                                                    name = "variable",
                                                    proc = <function>},
                                                  line = 47,
                                                  step = 21},
                                                {
                                                  arg = {
                                                    {
                                                      line = 47,
                                                      name = "UINTEGER",
                                                      value = "1"}},
                                                  call = {
                                                    name = "constant constexpr uint",
                                                    obj = "constexpr uint",
                                                    proc = <function>},
                                                  line = 47,
                                                  step = 21}},
                                              call = {
                                                name = "assign_operator +",
                                                obj = "+",
                                                proc = <function>},
                                              line = 47,
                                              step = 22}},
                                          call = {
                                            name = "free_expression",
                                            proc = <function>},
                                          line = 47,
                                          step = 22}},
                                      call = {
                                        name = "codeblock",
                                        proc = <function>},
                                      line = 47,
                                      scope = {
                                        20,
                                        23}}},
                                  call = {
                                    name = "conditional_while",
                                    proc = <function>},
                                  line = 47,
                                  step = 23},
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          arg = {
                                            {
                                              line = 49,
                                              name = "IDENT",
                                              value = "ii"}},
                                          call = {
                                            name = "variable",
                                            proc = <function>},
                                          line = 49,
                                          step = 23},
                                        {
                                          arg = {
                                            {
                                              line = 49,
                                              name = "UINTEGER",
                                              value = "1"}},
                                          call = {
                                            name = "constant constexpr uint",
                                            obj = "constexpr uint",
                                            proc = <function>},
                                          line = 49,
                                          step = 23}},
                                      call = {
                                        name = "assign_operator +",
                                        obj = "+",
                                        proc = <function>},
                                      line = 49,
                                      step = 24}},
                                  call = {
                                    name = "free_expression",
                                    proc = <function>},
                                  line = 49,
                                  step = 24}},
                              call = {
                                name = "codeblock",
                                proc = <function>},
                              line = 49,
                              scope = {
                                18,
                                25}}},
                          call = {
                            name = "conditional_while",
                            proc = <function>},
                          line = 49,
                          step = 25},
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  line = 51,
                                  name = "IDENT",
                                  value = "rt"}},
                              call = {
                                name = "variable",
                                proc = <function>},
                              line = 51,
                              step = 25}},
                          call = {
                            name = "return_value",
                            proc = <function>},
                          line = 51,
                          step = 26}},
                      call = {
                        name = "callablebody {throws=false,const=true}",
                        obj = {
                          const = true,
                          throws = false},
                        proc = <function>},
                      line = 51,
                      scope = {
                        14,
                        27}}},
                  call = {
                    name = "operator_funcdef",
                    proc = <function>},
                  id = 5,
                  line = 51,
                  step = 27}},
              call = {
                name = "definition_decl_impl_pass 4",
                obj = 4,
                proc = <function>},
              line = 51,
              step = 27},
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {},
                      call = {
                        name = "linkage {private=false,linkage="external",explicit=true}",
                        obj = {
                          explicit = true,
                          linkage = "external",
                          private = false},
                        proc = <function>},
                      line = 51,
                      step = 27},
                    {
                      arg = {},
                      call = {
                        name = "operatordecl {name="-",symbol="minus"}",
                        obj = {
                          name = "-",
                          symbol = "minus"},
                        proc = <function>},
                      line = 51,
                      step = 27},
                    {
                      arg = {
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  line = 53,
                                  name = "IDENT",
                                  value = "Matrix"}},
                              call = {
                                name = "typehdr {const=false}",
                                obj = {
                                  const = false},
                                proc = <function>},
                              line = 53,
                              step = 27},
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          line = 53,
                                          name = "IDENT",
                                          value = "R"}},
                                      call = {
                                        name = "typehdr {const=false}",
                                        obj = {
                                          const = false},
                                        proc = <function>},
                                      line = 53,
                                      step = 27},
                                    {
                                      arg = {
                                        {
                                          arg = {
                                            {
                                              line = 53,
                                              name = "IDENT",
                                              value = "DIM1"}},
                                          call = {
                                            name = "typehdr {const=false}",
                                            obj = {
                                              const = false},
                                            proc = <function>},
                                          line = 53,
                                          step = 27},
                                        {
                                          arg = {
                                            {
                                              arg = {
                                                {
                                                  line = 53,
                                                  name = "IDENT",
                                                  value = "DIM2"}},
                                              call = {
                                                name = "typehdr {const=false}",
                                                obj = {
                                                  const = false},
                                                proc = <function>},
                                              line = 53,
                                              step = 27}},
                                          call = {
                                            name = "generic_instance_type",
                                            proc = <function>},
                                          line = 53,
                                          step = 27}},
                                      call = {
                                        name = "generic_instance_type",
                                        proc = <function>},
                                      line = 53,
                                      step = 27}},
                                  call = {
                                    name = "generic_instance_type",
                                    proc = <function>},
                                  line = 53,
                                  step = 27}},
                              call = {
                                name = "generic_instance",
                                proc = <function>},
                              line = 53,
                              step = 27}},
                          call = {
                            name = "typegen_generic",
                            proc = <function>},
                          line = 53,
                          step = 27}},
                      call = {
                        name = "typespec",
                        proc = <function>},
                      line = 53,
                      step = 27},
                    {
                      arg = {
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          arg = {
                                            {
                                              line = 53,
                                              name = "IDENT",
                                              value = "Matrix"}},
                                          call = {
                                            name = "typehdr {const=true}",
                                            obj = {
                                              const = true},
                                            proc = <function>},
                                          line = 53,
                                          step = 27},
                                        {
                                          arg = {
                                            {
                                              arg = {
                                                {
                                                  arg = {
                                                    {
                                                      line = 53,
                                                      name = "IDENT",
                                                      value = "R"}},
                                                  call = {
                                                    name = "typehdr {const=false}",
                                                    obj = {
                                                      const = false},
                                                    proc = <function>},
                                                  line = 53,
                                                  step = 27},
                                                {
                                                  arg = {
                                                    {
                                                      arg = {
                                                        {
                                                          line = 53,
                                                          name = "IDENT",
                                                          value = "DIM1"}},
                                                      call = {
                                                        name = "typehdr {const=false}",
                                                        obj = {
                                                          const = false},
                                                        proc = <function>},
                                                      line = 53,
                                                      step = 27},
                                                    {
                                                      arg = {
                                                        {
                                                          arg = {
                                                            {
                                                              line = 53,
                                                              name = "IDENT",
                                                              value = "DIM2"}},
                                                          call = {
                                                            name = "typehdr {const=false}",
                                                            obj = {
                                                              const = false},
                                                            proc = <function>},
                                                          line = 53,
                                                          step = 27}},
                                                      call = {
                                                        name = "generic_instance_type",
                                                        proc = <function>},
                                                      line = 53,
                                                      step = 27}},
                                                  call = {
                                                    name = "generic_instance_type",
                                                    proc = <function>},
                                                  line = 53,
                                                  step = 27}},
                                              call = {
                                                name = "generic_instance_type",
                                                proc = <function>},
                                              line = 53,
                                              step = 27}},
                                          call = {
                                            name = "generic_instance",
                                            proc = <function>},
                                          line = 53,
                                          step = 27}},
                                      call = {
                                        name = "typegen_generic",
                                        proc = <function>},
                                      line = 53,
                                      step = 27}},
                                  call = {
                                    name = "typespec",
                                    proc = <function>},
                                  line = 53,
                                  step = 27},
                                {
                                  line = 53,
                                  name = "IDENT",
                                  value = "o"}},
                              call = {
                                name = "paramdef",
                                proc = <function>},
                              line = 53,
                              step = 27}},
                          call = {
                            name = "paramdeflist",
                            proc = <function>},
                          line = 53,
                          step = 27},
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          arg = {
                                            {
                                              line = 55,
                                              name = "IDENT",
                                              value = "Matrix"}},
                                          call = {
                                            name = "typehdr {const=false}",
                                            obj = {
                                              const = false},
                                            proc = <function>},
                                          line = 55,
                                          step = 27},
                                        {
                                          arg = {
                                            {
                                              arg = {
                                                {
                                                  arg = {
                                                    {
                                                      line = 55,
                                                      name = "IDENT",
                                                      value = "R"}},
                                                  call = {
                                                    name = "typehdr {const=false}",
                                                    obj = {
                                                      const = false},
                                                    proc = <function>},
                                                  line = 55,
                                                  step = 27},
                                                {
                                                  arg = {
                                                    {
                                                      arg = {
                                                        {
                                                          line = 55,
                                                          name = "IDENT",
                                                          value = "DIM1"}},
                                                      call = {
                                                        name = "typehdr {const=false}",
                                                        obj = {
                                                          const = false},
                                                        proc = <function>},
                                                      line = 55,
                                                      step = 27},
                                                    {
                                                      arg = {
                                                        {
                                                          arg = {
                                                            {
                                                              line = 55,
                                                              name = "IDENT",
                                                              value = "DIM2"}},
                                                          call = {
                                                            name = "typehdr {const=false}",
                                                            obj = {
                                                              const = false},
                                                            proc = <function>},
                                                          line = 55,
                                                          step = 27}},
                                                      call = {
                                                        name = "generic_instance_type",
                                                        proc = <function>},
                                                      line = 55,
                                                      step = 27}},
                                                  call = {
                                                    name = "generic_instance_type",
                                                    proc = <function>},
                                                  line = 55,
                                                  step = 27}},
                                              call = {
                                                name = "generic_instance_type",
                                                proc = <function>},
                                              line = 55,
                                              step = 27}},
                                          call = {
                                            name = "generic_instance",
                                            proc = <function>},
                                          line = 55,
                                          step = 27}},
                                      call = {
                                        name = "typegen_generic",
                                        proc = <function>},
                                      line = 55,
                                      step = 27}},
                                  call = {
                                    name = "typespec",
                                    proc = <function>},
                                  line = 55,
                                  step = 27},
                                {
                                  line = 55,
                                  name = "IDENT",
                                  value = "rt"}},
                              call = {
                                name = "vardef",
                                proc = <function>},
                              line = 55,
                              step = 28}},
                          call = {
                            name = "definition 1",
                            obj = 1,
                            proc = <function>},
                          line = 55,
                          step = 29},
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          line = 56,
                                          name = "IDENT",
                                          value = "int"}},
                                      call = {
                                        name = "typehdr {const=false}",
                                        obj = {
                                          const = false},
                                        proc = <function>},
                                      line = 56,
                                      step = 29}},
                                  call = {
                                    name = "typespec",
                                    proc = <function>},
                                  line = 56,
                                  step = 29},
                                {
                                  line = 56,
                                  name = "IDENT",
                                  value = "ii"},
                                {
                                  arg = {
                                    {
                                      line = 56,
                                      name = "UINTEGER",
                                      value = "0"}},
                                  call = {
                                    name = "constant constexpr uint",
                                    obj = "constexpr uint",
                                    proc = <function>},
                                  line = 56,
                                  step = 29}},
                              call = {
                                name = "vardef_assign",
                                proc = <function>},
                              line = 56,
                              step = 30}},
                          call = {
                            name = "definition 1",
                            obj = 1,
                            proc = <function>},
                          line = 56,
                          step = 31},
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      line = 57,
                                      name = "IDENT",
                                      value = "ii"}},
                                  call = {
                                    name = "variable",
                                    proc = <function>},
                                  line = 57,
                                  step = 31},
                                {
                                  arg = {
                                    {
                                      line = 57,
                                      name = "IDENT",
                                      value = "DIM1"}},
                                  call = {
                                    name = "variable",
                                    proc = <function>},
                                  line = 57,
                                  step = 31}},
                              call = {
                                name = "binop <",
                                obj = "<",
                                proc = <function>},
                              line = 57,
                              step = 31},
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          arg = {
                                            {
                                              arg = {
                                                {
                                                  line = 59,
                                                  name = "IDENT",
                                                  value = "int"}},
                                              call = {
                                                name = "typehdr {const=false}",
                                                obj = {
                                                  const = false},
                                                proc = <function>},
                                              line = 59,
                                              step = 31}},
                                          call = {
                                            name = "typespec",
                                            proc = <function>},
                                          line = 59,
                                          step = 31},
                                        {
                                          line = 59,
                                          name = "IDENT",
                                          value = "jj"},
                                        {
                                          arg = {
                                            {
                                              line = 59,
                                              name = "UINTEGER",
                                              value = "0"}},
                                          call = {
                                            name = "constant constexpr uint",
                                            obj = "constexpr uint",
                                            proc = <function>},
                                          line = 59,
                                          step = 31}},
                                      call = {
                                        name = "vardef_assign",
                                        proc = <function>},
                                      line = 59,
                                      step = 32}},
                                  call = {
                                    name = "definition 1",
                                    obj = 1,
                                    proc = <function>},
                                  line = 59,
                                  step = 33},
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          arg = {
                                            {
                                              line = 60,
                                              name = "IDENT",
                                              value = "jj"}},
                                          call = {
                                            name = "variable",
                                            proc = <function>},
                                          line = 60,
                                          step = 33},
                                        {
                                          arg = {
                                            {
                                              line = 60,
                                              name = "IDENT",
                                              value = "DIM2"}},
                                          call = {
                                            name = "variable",
                                            proc = <function>},
                                          line = 60,
                                          step = 33}},
                                      call = {
                                        name = "binop <",
                                        obj = "<",
                                        proc = <function>},
                                      line = 60,
                                      step = 33},
                                    {
                                      arg = {
                                        {
                                          arg = {
                                            {
                                              arg = {
                                                {
                                                  arg = {
                                                    {
                                                      arg = {
                                                        {
                                                          arg = {
                                                            {
                                                              arg = {
                                                                {
                                                                  line = 62,
                                                                  name = "IDENT",
                                                                  value = "rt"}},
                                                              call = {
                                                                name = "variable",
                                                                proc = <function>},
                                                              line = 62,
                                                              step = 33},
                                                            {
                                                              line = 62,
                                                              name = "IDENT",
                                                              value = "m_ar"}},
                                                          call = {
                                                            name = "member",
                                                            proc = <function>},
                                                          line = 62,
                                                          step = 33},
                                                        {
                                                          arg = {
                                                            {
                                                              line = 62,
                                                              name = "IDENT",
                                                              value = "ii"}},
                                                          call = {
                                                            name = "variable",
                                                            proc = <function>},
                                                          line = 62,
                                                          step = 33}},
                                                      call = {
                                                        name = "operator_array []",
                                                        obj = "[]",
                                                        proc = <function>},
                                                      line = 62,
                                                      step = 33},
                                                    {
                                                      arg = {
                                                        {
                                                          line = 62,
                                                          name = "IDENT",
                                                          value = "jj"}},
                                                      call = {
                                                        name = "variable",
                                                        proc = <function>},
                                                      line = 62,
                                                      step = 33}},
                                                  call = {
                                                    name = "operator_array []",
                                                    obj = "[]",
                                                    proc = <function>},
                                                  line = 62,
                                                  step = 33},
                                                {
                                                  arg = {
                                                    {
                                                      arg = {
                                                        {
                                                          arg = {
                                                            {
                                                              arg = {
                                                                {
                                                                  line = 62,
                                                                  name = "IDENT",
                                                                  value = "m_ar"}},
                                                              call = {
                                                                name = "variable",
                                                                proc = <function>},
                                                              line = 62,
                                                              step = 33},
                                                            {
                                                              arg = {
                                                                {
                                                                  line = 62,
                                                                  name = "IDENT",
                                                                  value = "ii"}},
                                                              call = {
                                                                name = "variable",
                                                                proc = <function>},
                                                              line = 62,
                                                              step = 33}},
                                                          call = {
                                                            name = "operator_array []",
                                                            obj = "[]",
                                                            proc = <function>},
                                                          line = 62,
                                                          step = 33},
                                                        {
                                                          arg = {
                                                            {
                                                              line = 62,
                                                              name = "IDENT",
                                                              value = "jj"}},
                                                          call = {
                                                            name = "variable",
                                                            proc = <function>},
                                                          line = 62,
                                                          step = 33}},
                                                      call = {
                                                        name = "operator_array []",
                                                        obj = "[]",
                                                        proc = <function>},
                                                      line = 62,
                                                      step = 33},
                                                    {
                                                      arg = {
                                                        {
                                                          arg = {
                                                            {
                                                              arg = {
                                                                {
                                                                  arg = {
                                                                    {
                                                                      line = 62,
                                                                      name = "IDENT",
                                                                      value = "o"}},
                                                                  call = {
                                                                    name = "variable",
                                                                    proc = <function>},
                                                                  line = 62,
                                                                  step = 33},
                                                                {
                                                                  line = 62,
                                                                  name = "IDENT",
                                                                  value = "m_ar"}},
                                                              call = {
                                                                name = "member",
                                                                proc = <function>},
                                                              line = 62,
                                                              step = 33},
                                                            {
                                                              arg = {
                                                                {
                                                                  line = 62,
                                                                  name = "IDENT",
                                                                  value = "ii"}},
                                                              call = {
                                                                name = "variable",
                                                                proc = <function>},
                                                              line = 62,
                                                              step = 33}},
                                                          call = {
                                                            name = "operator_array []",
                                                            obj = "[]",
                                                            proc = <function>},
                                                          line = 62,
                                                          step = 33},
                                                        {
                                                          arg = {
                                                            {
                                                              line = 62,
                                                              name = "IDENT",
                                                              value = "jj"}},
                                                          call = {
                                                            name = "variable",
                                                            proc = <function>},
                                                          line = 62,
                                                          step = 33}},
                                                      call = {
                                                        name = "operator_array []",
                                                        obj = "[]",
                                                        proc = <function>},
                                                      line = 62,
                                                      step = 33}},
                                                  call = {
                                                    name = "binop -",
                                                    obj = "-",
                                                    proc = <function>},
                                                  line = 62,
                                                  step = 33}},
                                              call = {
                                                name = "binop =",
                                                obj = "=",
                                                proc = <function>},
                                              line = 62,
                                              step = 34}},
                                          call = {
                                            name = "free_expression",
                                            proc = <function>},
                                          line = 62,
                                          step = 34},
                                        {
                                          arg = {
                                            {
                                              arg = {
                                                {
                                                  arg = {
                                                    {
                                                      line = 63,
                                                      name = "IDENT",
                                                      value = "jj"}},
                                                  call = {
                                                    name = "variable",
                                                    proc = <function>},
                                                  line = 63,
                                                  step = 34},
                                                {
                                                  arg = {
                                                    {
                                                      line = 63,
                                                      name = "UINTEGER",
                                                      value = "1"}},
                                                  call = {
                                                    name = "constant constexpr uint",
                                                    obj = "constexpr uint",
                                                    proc = <function>},
                                                  line = 63,
                                                  step = 34}},
                                              call = {
                                                name = "assign_operator +",
                                                obj = "+",
                                                proc = <function>},
                                              line = 63,
                                              step = 35}},
                                          call = {
                                            name = "free_expression",
                                            proc = <function>},
                                          line = 63,
                                          step = 35}},
                                      call = {
                                        name = "codeblock",
                                        proc = <function>},
                                      line = 63,
                                      scope = {
                                        33,
                                        36}}},
                                  call = {
                                    name = "conditional_while",
                                    proc = <function>},
                                  line = 63,
                                  step = 36},
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          arg = {
                                            {
                                              line = 65,
                                              name = "IDENT",
                                              value = "ii"}},
                                          call = {
                                            name = "variable",
                                            proc = <function>},
                                          line = 65,
                                          step = 36},
                                        {
                                          arg = {
                                            {
                                              line = 65,
                                              name = "UINTEGER",
                                              value = "1"}},
                                          call = {
                                            name = "constant constexpr uint",
                                            obj = "constexpr uint",
                                            proc = <function>},
                                          line = 65,
                                          step = 36}},
                                      call = {
                                        name = "assign_operator +",
                                        obj = "+",
                                        proc = <function>},
                                      line = 65,
                                      step = 37}},
                                  call = {
                                    name = "free_expression",
                                    proc = <function>},
                                  line = 65,
                                  step = 37}},
                              call = {
                                name = "codeblock",
                                proc = <function>},
                              line = 65,
                              scope = {
                                31,
                                38}}},
                          call = {
                            name = "conditional_while",
                            proc = <function>},
                          line = 65,
                          step = 38},
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  line = 67,
                                  name = "IDENT",
                                  value = "rt"}},
                              call = {
                                name = "variable",
                                proc = <function>},
                              line = 67,
                              step = 38}},
                          call = {
                            name = "return_value",
                            proc = <function>},
                          line = 67,
                          step = 39}},
                      call = {
                        name = "callablebody {throws=false,const=true}",
                        obj = {
                          const = true,
                          throws = false},
                        proc = <function>},
                      line = 67,
                      scope = {
                        27,
                        40}}},
                  call = {
                    name = "operator_funcdef",
                    proc = <function>},
                  id = 6,
                  line = 67,
                  step = 40}},
              call = {
                name = "definition_decl_impl_pass 4",
                obj = 4,
                proc = <function>},
              line = 67,
              step = 40},
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {},
                      call = {
                        name = "linkage {private=false,linkage="external",explicit=true}",
                        obj = {
                          explicit = true,
                          linkage = "external",
                          private = false},
                        proc = <function>},
                      line = 67,
                      step = 40},
                    {
                      arg = {},
                      call = {
                        name = "operatordecl {name="-",symbol="minus"}",
                        obj = {
                          name = "-",
                          symbol = "minus"},
                        proc = <function>},
                      line = 67,
                      step = 40},
                    {
                      arg = {
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  line = 69,
                                  name = "IDENT",
                                  value = "Matrix"}},
                              call = {
                                name = "typehdr {const=false}",
                                obj = {
                                  const = false},
                                proc = <function>},
                              line = 69,
                              step = 40},
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          line = 69,
                                          name = "IDENT",
                                          value = "R"}},
                                      call = {
                                        name = "typehdr {const=false}",
                                        obj = {
                                          const = false},
                                        proc = <function>},
                                      line = 69,
                                      step = 40},
                                    {
                                      arg = {
                                        {
                                          arg = {
                                            {
                                              line = 69,
                                              name = "IDENT",
                                              value = "DIM1"}},
                                          call = {
                                            name = "typehdr {const=false}",
                                            obj = {
                                              const = false},
                                            proc = <function>},
                                          line = 69,
                                          step = 40},
                                        {
                                          arg = {
                                            {
                                              arg = {
                                                {
                                                  line = 69,
                                                  name = "IDENT",
                                                  value = "DIM2"}},
                                              call = {
                                                name = "typehdr {const=false}",
                                                obj = {
                                                  const = false},
                                                proc = <function>},
                                              line = 69,
                                              step = 40}},
                                          call = {
                                            name = "generic_instance_type",
                                            proc = <function>},
                                          line = 69,
                                          step = 40}},
                                      call = {
                                        name = "generic_instance_type",
                                        proc = <function>},
                                      line = 69,
                                      step = 40}},
                                  call = {
                                    name = "generic_instance_type",
                                    proc = <function>},
                                  line = 69,
                                  step = 40}},
                              call = {
                                name = "generic_instance",
                                proc = <function>},
                              line = 69,
                              step = 40}},
                          call = {
                            name = "typegen_generic",
                            proc = <function>},
                          line = 69,
                          step = 40}},
                      call = {
                        name = "typespec",
                        proc = <function>},
                      line = 69,
                      step = 40},
                    {
                      arg = {
                        {
                          arg = {},
                          call = {
                            name = "paramdeflist",
                            proc = <function>},
                          line = 69,
                          step = 40},
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          arg = {
                                            {
                                              line = 71,
                                              name = "IDENT",
                                              value = "Matrix"}},
                                          call = {
                                            name = "typehdr {const=false}",
                                            obj = {
                                              const = false},
                                            proc = <function>},
                                          line = 71,
                                          step = 40},
                                        {
                                          arg = {
                                            {
                                              arg = {
                                                {
                                                  arg = {
                                                    {
                                                      line = 71,
                                                      name = "IDENT",
                                                      value = "R"}},
                                                  call = {
                                                    name = "typehdr {const=false}",
                                                    obj = {
                                                      const = false},
                                                    proc = <function>},
                                                  line = 71,
                                                  step = 40},
                                                {
                                                  arg = {
                                                    {
                                                      arg = {
                                                        {
                                                          line = 71,
                                                          name = "IDENT",
                                                          value = "DIM1"}},
                                                      call = {
                                                        name = "typehdr {const=false}",
                                                        obj = {
                                                          const = false},
                                                        proc = <function>},
                                                      line = 71,
                                                      step = 40},
                                                    {
                                                      arg = {
                                                        {
                                                          arg = {
                                                            {
                                                              line = 71,
                                                              name = "IDENT",
                                                              value = "DIM2"}},
                                                          call = {
                                                            name = "typehdr {const=false}",
                                                            obj = {
                                                              const = false},
                                                            proc = <function>},
                                                          line = 71,
                                                          step = 40}},
                                                      call = {
                                                        name = "generic_instance_type",
                                                        proc = <function>},
                                                      line = 71,
                                                      step = 40}},
                                                  call = {
                                                    name = "generic_instance_type",
                                                    proc = <function>},
                                                  line = 71,
                                                  step = 40}},
                                              call = {
                                                name = "generic_instance_type",
                                                proc = <function>},
                                              line = 71,
                                              step = 40}},
                                          call = {
                                            name = "generic_instance",
                                            proc = <function>},
                                          line = 71,
                                          step = 40}},
                                      call = {
                                        name = "typegen_generic",
                                        proc = <function>},
                                      line = 71,
                                      step = 40}},
                                  call = {
                                    name = "typespec",
                                    proc = <function>},
                                  line = 71,
                                  step = 40},
                                {
                                  line = 71,
                                  name = "IDENT",
                                  value = "rt"}},
                              call = {
                                name = "vardef",
                                proc = <function>},
                              line = 71,
                              step = 41}},
                          call = {
                            name = "definition 1",
                            obj = 1,
                            proc = <function>},
                          line = 71,
                          step = 42},
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          line = 72,
                                          name = "IDENT",
                                          value = "int"}},
                                      call = {
                                        name = "typehdr {const=false}",
                                        obj = {
                                          const = false},
                                        proc = <function>},
                                      line = 72,
                                      step = 42}},
                                  call = {
                                    name = "typespec",
                                    proc = <function>},
                                  line = 72,
                                  step = 42},
                                {
                                  line = 72,
                                  name = "IDENT",
                                  value = "ii"},
                                {
                                  arg = {
                                    {
                                      line = 72,
                                      name = "UINTEGER",
                                      value = "0"}},
                                  call = {
                                    name = "constant constexpr uint",
                                    obj = "constexpr uint",
                                    proc = <function>},
                                  line = 72,
                                  step = 42}},
                              call = {
                                name = "vardef_assign",
                                proc = <function>},
                              line = 72,
                              step = 43}},
                          call = {
                            name = "definition 1",
                            obj = 1,
                            proc = <function>},
                          line = 72,
                          step = 44},
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      line = 73,
                                      name = "IDENT",
                                      value = "ii"}},
                                  call = {
                                    name = "variable",
                                    proc = <function>},
                                  line = 73,
                                  step = 44},
                                {
                                  arg = {
                                    {
                                      line = 73,
                                      name = "IDENT",
                                      value = "DIM1"}},
                                  call = {
                                    name = "variable",
                                    proc = <function>},
                                  line = 73,
                                  step = 44}},
                              call = {
                                name = "binop <",
                                obj = "<",
                                proc = <function>},
                              line = 73,
                              step = 44},
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          arg = {
                                            {
                                              arg = {
                                                {
                                                  line = 75,
                                                  name = "IDENT",
                                                  value = "int"}},
                                              call = {
                                                name = "typehdr {const=false}",
                                                obj = {
                                                  const = false},
                                                proc = <function>},
                                              line = 75,
                                              step = 44}},
                                          call = {
                                            name = "typespec",
                                            proc = <function>},
                                          line = 75,
                                          step = 44},
                                        {
                                          line = 75,
                                          name = "IDENT",
                                          value = "jj"},
                                        {
                                          arg = {
                                            {
                                              line = 75,
                                              name = "UINTEGER",
                                              value = "0"}},
                                          call = {
                                            name = "constant constexpr uint",
                                            obj = "constexpr uint",
                                            proc = <function>},
                                          line = 75,
                                          step = 44}},
                                      call = {
                                        name = "vardef_assign",
                                        proc = <function>},
                                      line = 75,
                                      step = 45}},
                                  call = {
                                    name = "definition 1",
                                    obj = 1,
                                    proc = <function>},
                                  line = 75,
                                  step = 46},
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          arg = {
                                            {
                                              line = 76,
                                              name = "IDENT",
                                              value = "jj"}},
                                          call = {
                                            name = "variable",
                                            proc = <function>},
                                          line = 76,
                                          step = 46},
                                        {
                                          arg = {
                                            {
                                              line = 76,
                                              name = "IDENT",
                                              value = "DIM2"}},
                                          call = {
                                            name = "variable",
                                            proc = <function>},
                                          line = 76,
                                          step = 46}},
                                      call = {
                                        name = "binop <",
                                        obj = "<",
                                        proc = <function>},
                                      line = 76,
                                      step = 46},
                                    {
                                      arg = {
                                        {
                                          arg = {
                                            {
                                              arg = {
                                                {
                                                  arg = {
                                                    {
                                                      arg = {
                                                        {
                                                          arg = {
                                                            {
                                                              arg = {
                                                                {
                                                                  line = 78,
                                                                  name = "IDENT",
                                                                  value = "rt"}},
                                                              call = {
                                                                name = "variable",
                                                                proc = <function>},
                                                              line = 78,
                                                              step = 46},
                                                            {
                                                              line = 78,
                                                              name = "IDENT",
                                                              value = "m_ar"}},
                                                          call = {
                                                            name = "member",
                                                            proc = <function>},
                                                          line = 78,
                                                          step = 46},
                                                        {
                                                          arg = {
                                                            {
                                                              line = 78,
                                                              name = "IDENT",
                                                              value = "ii"}},
                                                          call = {
                                                            name = "variable",
                                                            proc = <function>},
                                                          line = 78,
                                                          step = 46}},
                                                      call = {
                                                        name = "operator_array []",
                                                        obj = "[]",
                                                        proc = <function>},
                                                      line = 78,
                                                      step = 46},
                                                    {
                                                      arg = {
                                                        {
                                                          line = 78,
                                                          name = "IDENT",
                                                          value = "jj"}},
                                                      call = {
                                                        name = "variable",
                                                        proc = <function>},
                                                      line = 78,
                                                      step = 46}},
                                                  call = {
                                                    name = "operator_array []",
                                                    obj = "[]",
                                                    proc = <function>},
                                                  line = 78,
                                                  step = 46},
                                                {
                                                  arg = {
                                                    {
                                                      arg = {
                                                        {
                                                          arg = {
                                                            {
                                                              arg = {
                                                                {
                                                                  line = 78,
                                                                  name = "IDENT",
                                                                  value = "m_ar"}},
                                                              call = {
                                                                name = "variable",
                                                                proc = <function>},
                                                              line = 78,
                                                              step = 46},
                                                            {
                                                              arg = {
                                                                {
                                                                  line = 78,
                                                                  name = "IDENT",
                                                                  value = "ii"}},
                                                              call = {
                                                                name = "variable",
                                                                proc = <function>},
                                                              line = 78,
                                                              step = 46}},
                                                          call = {
                                                            name = "operator_array []",
                                                            obj = "[]",
                                                            proc = <function>},
                                                          line = 78,
                                                          step = 46},
                                                        {
                                                          arg = {
                                                            {
                                                              line = 78,
                                                              name = "IDENT",
                                                              value = "jj"}},
                                                          call = {
                                                            name = "variable",
                                                            proc = <function>},
                                                          line = 78,
                                                          step = 46}},
                                                      call = {
                                                        name = "operator_array []",
                                                        obj = "[]",
                                                        proc = <function>},
                                                      line = 78,
                                                      step = 46}},
                                                  call = {
                                                    name = "unop -",
                                                    obj = "-",
                                                    proc = <function>},
                                                  line = 78,
                                                  step = 46}},
                                              call = {
                                                name = "binop =",
                                                obj = "=",
                                                proc = <function>},
                                              line = 78,
                                              step = 47}},
                                          call = {
                                            name = "free_expression",
                                            proc = <function>},
                                          line = 78,
                                          step = 47},
                                        {
                                          arg = {
                                            {
                                              arg = {
                                                {
                                                  arg = {
                                                    {
                                                      line = 79,
                                                      name = "IDENT",
                                                      value = "jj"}},
                                                  call = {
                                                    name = "variable",
                                                    proc = <function>},
                                                  line = 79,
                                                  step = 47},
                                                {
                                                  arg = {
                                                    {
                                                      line = 79,
                                                      name = "UINTEGER",
                                                      value = "1"}},
                                                  call = {
                                                    name = "constant constexpr uint",
                                                    obj = "constexpr uint",
                                                    proc = <function>},
                                                  line = 79,
                                                  step = 47}},
                                              call = {
                                                name = "assign_operator +",
                                                obj = "+",
                                                proc = <function>},
                                              line = 79,
                                              step = 48}},
                                          call = {
                                            name = "free_expression",
                                            proc = <function>},
                                          line = 79,
                                          step = 48}},
                                      call = {
                                        name = "codeblock",
                                        proc = <function>},
                                      line = 79,
                                      scope = {
                                        46,
                                        49}}},
                                  call = {
                                    name = "conditional_while",
                                    proc = <function>},
                                  line = 79,
                                  step = 49},
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          arg = {
                                            {
                                              line = 81,
                                              name = "IDENT",
                                              value = "ii"}},
                                          call = {
                                            name = "variable",
                                            proc = <function>},
                                          line = 81,
                                          step = 49},
                                        {
                                          arg = {
                                            {
                                              line = 81,
                                              name = "UINTEGER",
                                              value = "1"}},
                                          call = {
                                            name = "constant constexpr uint",
                                            obj = "constexpr uint",
                                            proc = <function>},
                                          line = 81,
                                          step = 49}},
                                      call = {
                                        name = "assign_operator +",
                                        obj = "+",
                                        proc = <function>},
                                      line = 81,
                                      step = 50}},
                                  call = {
                                    name = "free_expression",
                                    proc = <function>},
                                  line = 81,
                                  step = 50}},
                              call = {
                                name = "codeblock",
                                proc = <function>},
                              line = 81,
                              scope = {
                                44,
                                51}}},
                          call = {
                            name = "conditional_while",
                            proc = <function>},
                          line = 81,
                          step = 51},
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  line = 83,
                                  name = "IDENT",
                                  value = "rt"}},
                              call = {
                                name = "variable",
                                proc = <function>},
                              line = 83,
                              step = 51}},
                          call = {
                            name = "return_value",
                            proc = <function>},
                          line = 83,
                          step = 52}},
                      call = {
                        name = "callablebody {throws=false,const=true}",
                        obj = {
                          const = true,
                          throws = false},
                        proc = <function>},
                      line = 83,
                      scope = {
                        40,
                        53}}},
                  call = {
                    name = "operator_funcdef",
                    proc = <function>},
                  id = 7,
                  line = 83,
                  step = 53}},
              call = {
                name = "definition_decl_impl_pass 4",
                obj = 4,
                proc = <function>},
              line = 83,
              step = 53},
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {},
                      call = {
                        name = "linkage {private=false,linkage="external",explicit=true}",
                        obj = {
                          explicit = true,
                          linkage = "external",
                          private = false},
                        proc = <function>},
                      line = 83,
                      step = 53},
                    {
                      arg = {},
                      call = {
                        name = "operatordecl {name="*",symbol="mul"}",
                        obj = {
                          name = "*",
                          symbol = "mul"},
                        proc = <function>},
                      line = 83,
                      step = 53},
                    {
                      arg = {
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  line = 85,
                                  name = "IDENT",
                                  value = "Matrix"}},
                              call = {
                                name = "typehdr {const=false}",
                                obj = {
                                  const = false},
                                proc = <function>},
                              line = 85,
                              step = 53},
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          line = 85,
                                          name = "IDENT",
                                          value = "R"}},
                                      call = {
                                        name = "typehdr {const=false}",
                                        obj = {
                                          const = false},
                                        proc = <function>},
                                      line = 85,
                                      step = 53},
                                    {
                                      arg = {
                                        {
                                          arg = {
                                            {
                                              line = 85,
                                              name = "IDENT",
                                              value = "DIM1"}},
                                          call = {
                                            name = "typehdr {const=false}",
                                            obj = {
                                              const = false},
                                            proc = <function>},
                                          line = 85,
                                          step = 53},
                                        {
                                          arg = {
                                            {
                                              arg = {
                                                {
                                                  line = 85,
                                                  name = "IDENT",
                                                  value = "DIM1"}},
                                              call = {
                                                name = "typehdr {const=false}",
                                                obj = {
                                                  const = false},
                                                proc = <function>},
                                              line = 85,
                                              step = 53}},
                                          call = {
                                            name = "generic_instance_type",
                                            proc = <function>},
                                          line = 85,
                                          step = 53}},
                                      call = {
                                        name = "generic_instance_type",
                                        proc = <function>},
                                      line = 85,
                                      step = 53}},
                                  call = {
                                    name = "generic_instance_type",
                                    proc = <function>},
                                  line = 85,
                                  step = 53}},
                              call = {
                                name = "generic_instance",
                                proc = <function>},
                              line = 85,
                              step = 53}},
                          call = {
                            name = "typegen_generic",
                            proc = <function>},
                          line = 85,
                          step = 53}},
                      call = {
                        name = "typespec",
                        proc = <function>},
                      line = 85,
                      step = 53},
                    {
                      arg = {
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          arg = {
                                            {
                                              line = 85,
                                              name = "IDENT",
                                              value = "Matrix"}},
                                          call = {
                                            name = "typehdr {const=true}",
                                            obj = {
                                              const = true},
                                            proc = <function>},
                                          line = 85,
                                          step = 53},
                                        {
                                          arg = {
                                            {
                                              arg = {
                                                {
                                                  arg = {
                                                    {
                                                      line = 85,
                                                      name = "IDENT",
                                                      value = "R"}},
                                                  call = {
                                                    name = "typehdr {const=false}",
                                                    obj = {
                                                      const = false},
                                                    proc = <function>},
                                                  line = 85,
                                                  step = 53},
                                                {
                                                  arg = {
                                                    {
                                                      arg = {
                                                        {
                                                          line = 85,
                                                          name = "IDENT",
                                                          value = "DIM2"}},
                                                      call = {
                                                        name = "typehdr {const=false}",
                                                        obj = {
                                                          const = false},
                                                        proc = <function>},
                                                      line = 85,
                                                      step = 53},
                                                    {
                                                      arg = {
                                                        {
                                                          arg = {
                                                            {
                                                              line = 85,
                                                              name = "IDENT",
                                                              value = "DIM1"}},
                                                          call = {
                                                            name = "typehdr {const=false}",
                                                            obj = {
                                                              const = false},
                                                            proc = <function>},
                                                          line = 85,
                                                          step = 53}},
                                                      call = {
                                                        name = "generic_instance_type",
                                                        proc = <function>},
                                                      line = 85,
                                                      step = 53}},
                                                  call = {
                                                    name = "generic_instance_type",
                                                    proc = <function>},
                                                  line = 85,
                                                  step = 53}},
                                              call = {
                                                name = "generic_instance_type",
                                                proc = <function>},
                                              line = 85,
                                              step = 53}},
                                          call = {
                                            name = "generic_instance",
                                            proc = <function>},
                                          line = 85,
                                          step = 53}},
                                      call = {
                                        name = "typegen_generic",
                                        proc = <function>},
                                      line = 85,
                                      step = 53}},
                                  call = {
                                    name = "typespec",
                                    proc = <function>},
                                  line = 85,
                                  step = 53},
                                {
                                  line = 85,
                                  name = "IDENT",
                                  value = "o"}},
                              call = {
                                name = "paramdef",
                                proc = <function>},
                              line = 85,
                              step = 53}},
                          call = {
                            name = "paramdeflist",
                            proc = <function>},
                          line = 85,
                          step = 53},
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          arg = {
                                            {
                                              line = 87,
                                              name = "IDENT",
                                              value = "Matrix"}},
                                          call = {
                                            name = "typehdr {const=false}",
                                            obj = {
                                              const = false},
                                            proc = <function>},
                                          line = 87,
                                          step = 53},
                                        {
                                          arg = {
                                            {
                                              arg = {
                                                {
                                                  arg = {
                                                    {
                                                      line = 87,
                                                      name = "IDENT",
                                                      value = "R"}},
                                                  call = {
                                                    name = "typehdr {const=false}",
                                                    obj = {
                                                      const = false},
                                                    proc = <function>},
                                                  line = 87,
                                                  step = 53},
                                                {
                                                  arg = {
                                                    {
                                                      arg = {
                                                        {
                                                          line = 87,
                                                          name = "IDENT",
                                                          value = "DIM1"}},
                                                      call = {
                                                        name = "typehdr {const=false}",
                                                        obj = {
                                                          const = false},
                                                        proc = <function>},
                                                      line = 87,
                                                      step = 53},
                                                    {
                                                      arg = {
                                                        {
                                                          arg = {
                                                            {
                                                              line = 87,
                                                              name = "IDENT",
                                                              value = "DIM1"}},
                                                          call = {
                                                            name = "typehdr {const=false}",
                                                            obj = {
                                                              const = false},
                                                            proc = <function>},
                                                          line = 87,
                                                          step = 53}},
                                                      call = {
                                                        name = "generic_instance_type",
                                                        proc = <function>},
                                                      line = 87,
                                                      step = 53}},
                                                  call = {
                                                    name = "generic_instance_type",
                                                    proc = <function>},
                                                  line = 87,
                                                  step = 53}},
                                              call = {
                                                name = "generic_instance_type",
                                                proc = <function>},
                                              line = 87,
                                              step = 53}},
                                          call = {
                                            name = "generic_instance",
                                            proc = <function>},
                                          line = 87,
                                          step = 53}},
                                      call = {
                                        name = "typegen_generic",
                                        proc = <function>},
                                      line = 87,
                                      step = 53}},
                                  call = {
                                    name = "typespec",
                                    proc = <function>},
                                  line = 87,
                                  step = 53},
                                {
                                  line = 87,
                                  name = "IDENT",
                                  value = "rt"}},
                              call = {
                                name = "vardef",
                                proc = <function>},
                              line = 87,
                              step = 54}},
                          call = {
                            name = "definition 1",
                            obj = 1,
                            proc = <function>},
                          line = 87,
                          step = 55},
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          line = 88,
                                          name = "IDENT",
                                          value = "int"}},
                                      call = {
                                        name = "typehdr {const=false}",
                                        obj = {
                                          const = false},
                                        proc = <function>},
                                      line = 88,
                                      step = 55}},
                                  call = {
                                    name = "typespec",
                                    proc = <function>},
                                  line = 88,
                                  step = 55},
                                {
                                  line = 88,
                                  name = "IDENT",
                                  value = "ii"},
                                {
                                  arg = {
                                    {
                                      line = 88,
                                      name = "UINTEGER",
                                      value = "0"}},
                                  call = {
                                    name = "constant constexpr uint",
                                    obj = "constexpr uint",
                                    proc = <function>},
                                  line = 88,
                                  step = 55}},
                              call = {
                                name = "vardef_assign",
                                proc = <function>},
                              line = 88,
                              step = 56}},
                          call = {
                            name = "definition 1",
                            obj = 1,
                            proc = <function>},
                          line = 88,
                          step = 57},
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      line = 89,
                                      name = "IDENT",
                                      value = "ii"}},
                                  call = {
                                    name = "variable",
                                    proc = <function>},
                                  line = 89,
                                  step = 57},
                                {
                                  arg = {
                                    {
                                      line = 89,
                                      name = "IDENT",
                                      value = "DIM1"}},
                                  call = {
                                    name = "variable",
                                    proc = <function>},
                                  line = 89,
                                  step = 57}},
                              call = {
                                name = "binop <",
                                obj = "<",
                                proc = <function>},
                              line = 89,
                              step = 57},
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          arg = {
                                            {
                                              arg = {
                                                {
                                                  line = 91,
                                                  name = "IDENT",
                                                  value = "int"}},
                                              call = {
                                                name = "typehdr {const=false}",
                                                obj = {
                                                  const = false},
                                                proc = <function>},
                                              line = 91,
                                              step = 57}},
                                          call = {
                                            name = "typespec",
                                            proc = <function>},
                                          line = 91,
                                          step = 57},
                                        {
                                          line = 91,
                                          name = "IDENT",
                                          value = "jj"},
                                        {
                                          arg = {
                                            {
                                              line = 91,
                                              name = "UINTEGER",
                                              value = "0"}},
                                          call = {
                                            name = "constant constexpr uint",
                                            obj = "constexpr uint",
                                            proc = <function>},
                                          line = 91,
                                          step = 57}},
                                      call = {
                                        name = "vardef_assign",
                                        proc = <function>},
                                      line = 91,
                                      step = 58}},
                                  call = {
                                    name = "definition 1",
                                    obj = 1,
                                    proc = <function>},
                                  line = 91,
                                  step = 59},
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          arg = {
                                            {
                                              line = 92,
                                              name = "IDENT",
                                              value = "jj"}},
                                          call = {
                                            name = "variable",
                                            proc = <function>},
                                          line = 92,
                                          step = 59},
                                        {
                                          arg = {
                                            {
                                              line = 92,
                                              name = "IDENT",
                                              value = "DIM1"}},
                                          call = {
                                            name = "variable",
                                            proc = <function>},
                                          line = 92,
                                          step = 59}},
                                      call = {
                                        name = "binop <",
                                        obj = "<",
                                        proc = <function>},
                                      line = 92,
                                      step = 59},
                                    {
                                      arg = {
                                        {
                                          arg = {
                                            {
                                              arg = {
                                                {
                                                  arg = {
                                                    {
                                                      arg = {
                                                        {
                                                          line = 94,
                                                          name = "IDENT",
                                                          value = "double"}},
                                                      call = {
                                                        name = "typehdr {const=false}",
                                                        obj = {
                                                          const = false},
                                                        proc = <function>},
                                                      line = 94,
                                                      step = 59}},
                                                  call = {
                                                    name = "typespec",
                                                    proc = <function>},
                                                  line = 94,
                                                  step = 59},
                                                {
                                                  line = 94,
                                                  name = "IDENT",
                                                  value = "sum"},
                                                {
                                                  arg = {
                                                    {
                                                      line = 94,
                                                      name = "UINTEGER",
                                                      value = "0"}},
                                                  call = {
                                                    name = "constant constexpr uint",
                                                    obj = "constexpr uint",
                                                    proc = <function>},
                                                  line = 94,
                                                  step = 59}},
                                              call = {
                                                name = "vardef_assign",
                                                proc = <function>},
                                              line = 94,
                                              step = 60}},
                                          call = {
                                            name = "definition 1",
                                            obj = 1,
                                            proc = <function>},
                                          line = 94,
                                          step = 61},
                                        {
                                          arg = {
                                            {
                                              arg = {
                                                {
                                                  arg = {
                                                    {
                                                      arg = {
                                                        {
                                                          line = 95,
                                                          name = "IDENT",
                                                          value = "int"}},
                                                      call = {
                                                        name = "typehdr {const=false}",
                                                        obj = {
                                                          const = false},
                                                        proc = <function>},
                                                      line = 95,
                                                      step = 61}},
                                                  call = {
                                                    name = "typespec",
                                                    proc = <function>},
                                                  line = 95,
                                                  step = 61},
                                                {
                                                  line = 95,
                                                  name = "IDENT",
                                                  value = "kk"},
                                                {
                                                  arg = {
                                                    {
                                                      line = 95,
                                                      name = "UINTEGER",
                                                      value = "0"}},
                                                  call = {
                                                    name = "constant constexpr uint",
                                                    obj = "constexpr uint",
                                                    proc = <function>},
                                                  line = 95,
                                                  step = 61}},
                                              call = {
                                                name = "vardef_assign",
                                                proc = <function>},
                                              line = 95,
                                              step = 62}},
                                          call = {
                                            name = "definition 1",
                                            obj = 1,
                                            proc = <function>},
                                          line = 95,
                                          step = 63},
                                        {
                                          arg = {
                                            {
                                              arg = {
                                                {
                                                  arg = {
                                                    {
                                                      line = 96,
                                                      name = "IDENT",
                                                      value = "kk"}},
                                                  call = {
                                                    name = "variable",
                                                    proc = <function>},
                                                  line = 96,
                                                  step = 63},
                                                {
                                                  arg = {
                                                    {
                                                      line = 96,
                                                      name = "IDENT",
                                                      value = "DIM2"}},
                                                  call = {
                                                    name = "variable",
                                                    proc = <function>},
                                                  line = 96,
                                                  step = 63}},
                                              call = {
                                                name = "binop <",
                                                obj = "<",
                                                proc = <function>},
                                              line = 96,
                                              step = 63},
                                            {
                                              arg = {
                                                {
                                                  arg = {
                                                    {
                                                      arg = {
                                                        {
                                                          arg = {
                                                            {
                                                              line = 98,
                                                              name = "IDENT",
                                                              value = "sum"}},
                                                          call = {
                                                            name = "variable",
                                                            proc = <function>},
                                                          line = 98,
                                                          step = 63},
                                                        {
                                                          arg = {
                                                            {
                                                              arg = {
                                                                {
                                                                  arg = {
                                                                    {
                                                                      arg = {
                                                                        {
                                                                          line = 98,
                                                                          name = "IDENT",
                                                                          value = "m_ar"}},
                                                                      call = {
                                                                        name = "variable",
                                                                        proc = <function>},
                                                                      line = 98,
                                                                      step = 63},
                                                                    {
                                                                      arg = {
                                                                        {
                                                                          line = 98,
                                                                          name = "IDENT",
                                                                          value = "ii"}},
                                                                      call = {
                                                                        name = "variable",
                                                                        proc = <function>},
                                                                      line = 98,
                                                                      step = 63}},
                                                                  call = {
                                                                    name = "operator_array []",
                                                                    obj = "[]",
                                                                    proc = <function>},
                                                                  line = 98,
                                                                  step = 63},
                                                                {
                                                                  arg = {
                                                                    {
                                                                      line = 98,
                                                                      name = "IDENT",
                                                                      value = "kk"}},
                                                                  call = {
                                                                    name = "variable",
                                                                    proc = <function>},
                                                                  line = 98,
                                                                  step = 63}},
                                                              call = {
                                                                name = "operator_array []",
                                                                obj = "[]",
                                                                proc = <function>},
                                                              line = 98,
                                                              step = 63},
                                                            {
                                                              arg = {
                                                                {
                                                                  arg = {
                                                                    {
                                                                      arg = {
                                                                        {
                                                                          arg = {
                                                                            {
                                                                              line = 98,
                                                                              name = "IDENT",
                                                                              value = "o"}},
                                                                          call = {
                                                                            name = "variable",
                                                                            proc = <function>},
                                                                          line = 98,
                                                                          step = 63},
                                                                        {
                                                                          line = 98,
                                                                          name = "IDENT",
                                                                          value = "m_ar"}},
                                                                      call = {
                                                                        name = "member",
                                                                        proc = <function>},
                                                                      line = 98,
                                                                      step = 63},
                                                                    {
                                                                      arg = {
                                                                        {
                                                                          line = 98,
                                                                          name = "IDENT",
                                                                          value = "kk"}},
                                                                      call = {
                                                                        name = "variable",
                                                                        proc = <function>},
                                                                      line = 98,
                                                                      step = 63}},
                                                                  call = {
                                                                    name = "operator_array []",
                                                                    obj = "[]",
                                                                    proc = <function>},
                                                                  line = 98,
                                                                  step = 63},
                                                                {
                                                                  arg = {
                                                                    {
                                                                      line = 98,
                                                                      name = "IDENT",
                                                                      value = "jj"}},
                                                                  call = {
                                                                    name = "variable",
                                                                    proc = <function>},
                                                                  line = 98,
                                                                  step = 63}},
                                                              call = {
                                                                name = "operator_array []",
                                                                obj = "[]",
                                                                proc = <function>},
                                                              line = 98,
                                                              step = 63}},
                                                          call = {
                                                            name = "binop *",
                                                            obj = "*",
                                                            proc = <function>},
                                                          line = 98,
                                                          step = 63}},
                                                      call = {
                                                        name = "assign_operator +",
                                                        obj = "+",
                                                        proc = <function>},
                                                      line = 98,
                                                      step = 64}},
                                                  call = {
                                                    name = "free_expression",
                                                    proc = <function>},
                                                  line = 98,
                                                  step = 64},
                                                {
                                                  arg = {
                                                    {
                                                      arg = {
                                                        {
                                                          arg = {
                                                            {
                                                              line = 99,
                                                              name = "IDENT",
                                                              value = "kk"}},
                                                          call = {
                                                            name = "variable",
                                                            proc = <function>},
                                                          line = 99,
                                                          step = 64},
                                                        {
                                                          arg = {
                                                            {
                                                              line = 99,
                                                              name = "UINTEGER",
                                                              value = "1"}},
                                                          call = {
                                                            name = "constant constexpr uint",
                                                            obj = "constexpr uint",
                                                            proc = <function>},
                                                          line = 99,
                                                          step = 64}},
                                                      call = {
                                                        name = "assign_operator +",
                                                        obj = "+",
                                                        proc = <function>},
                                                      line = 99,
                                                      step = 65}},
                                                  call = {
                                                    name = "free_expression",
                                                    proc = <function>},
                                                  line = 99,
                                                  step = 65}},
                                              call = {
                                                name = "codeblock",
                                                proc = <function>},
                                              line = 99,
                                              scope = {
                                                63,
                                                66}}},
                                          call = {
                                            name = "conditional_while",
                                            proc = <function>},
                                          line = 99,
                                          step = 66},
                                        {
                                          arg = {
                                            {
                                              arg = {
                                                {
                                                  arg = {
                                                    {
                                                      arg = {
                                                        {
                                                          arg = {
                                                            {
                                                              arg = {
                                                                {
                                                                  line = 101,
                                                                  name = "IDENT",
                                                                  value = "rt"}},
                                                              call = {
                                                                name = "variable",
                                                                proc = <function>},
                                                              line = 101,
                                                              step = 66},
                                                            {
                                                              line = 101,
                                                              name = "IDENT",
                                                              value = "m_ar"}},
                                                          call = {
                                                            name = "member",
                                                            proc = <function>},
                                                          line = 101,
                                                          step = 66},
                                                        {
                                                          arg = {
                                                            {
                                                              line = 101,
                                                              name = "IDENT",
                                                              value = "ii"}},
                                                          call = {
                                                            name = "variable",
                                                            proc = <function>},
                                                          line = 101,
                                                          step = 66}},
                                                      call = {
                                                        name = "operator_array []",
                                                        obj = "[]",
                                                        proc = <function>},
                                                      line = 101,
                                                      step = 66},
                                                    {
                                                      arg = {
                                                        {
                                                          line = 101,
                                                          name = "IDENT",
                                                          value = "jj"}},
                                                      call = {
                                                        name = "variable",
                                                        proc = <function>},
                                                      line = 101,
                                                      step = 66}},
                                                  call = {
                                                    name = "operator_array []",
                                                    obj = "[]",
                                                    proc = <function>},
                                                  line = 101,
                                                  step = 66},
                                                {
                                                  arg = {
                                                    {
                                                      line = 101,
                                                      name = "IDENT",
                                                      value = "sum"}},
                                                  call = {
                                                    name = "variable",
                                                    proc = <function>},
                                                  line = 101,
                                                  step = 66}},
                                              call = {
                                                name = "binop =",
                                                obj = "=",
                                                proc = <function>},
                                              line = 101,
                                              step = 67}},
                                          call = {
                                            name = "free_expression",
                                            proc = <function>},
                                          line = 101,
                                          step = 67},
                                        {
                                          arg = {
                                            {
                                              arg = {
                                                {
                                                  arg = {
                                                    {
                                                      line = 102,
                                                      name = "IDENT",
                                                      value = "jj"}},
                                                  call = {
                                                    name = "variable",
                                                    proc = <function>},
                                                  line = 102,
                                                  step = 67},
                                                {
                                                  arg = {
                                                    {
                                                      line = 102,
                                                      name = "UINTEGER",
                                                      value = "1"}},
                                                  call = {
                                                    name = "constant constexpr uint",
                                                    obj = "constexpr uint",
                                                    proc = <function>},
                                                  line = 102,
                                                  step = 67}},
                                              call = {
                                                name = "assign_operator +",
                                                obj = "+",
                                                proc = <function>},
                                              line = 102,
                                              step = 68}},
                                          call = {
                                            name = "free_expression",
                                            proc = <function>},
                                          line = 102,
                                          step = 68}},
                                      call = {
                                        name = "codeblock",
                                        proc = <function>},
                                      line = 102,
                                      scope = {
                                        59,
                                        69}}},
                                  call = {
                                    name = "conditional_while",
                                    proc = <function>},
                                  line = 102,
                                  step = 69},
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          arg = {
                                            {
                                              line = 104,
                                              name = "IDENT",
                                              value = "ii"}},
                                          call = {
                                            name = "variable",
                                            proc = <function>},
                                          line = 104,
                                          step = 69},
                                        {
                                          arg = {
                                            {
                                              line = 104,
                                              name = "UINTEGER",
                                              value = "1"}},
                                          call = {
                                            name = "constant constexpr uint",
                                            obj = "constexpr uint",
                                            proc = <function>},
                                          line = 104,
                                          step = 69}},
                                      call = {
                                        name = "assign_operator +",
                                        obj = "+",
                                        proc = <function>},
                                      line = 104,
                                      step = 70}},
                                  call = {
                                    name = "free_expression",
                                    proc = <function>},
                                  line = 104,
                                  step = 70}},
                              call = {
                                name = "codeblock",
                                proc = <function>},
                              line = 104,
                              scope = {
                                57,
                                71}}},
                          call = {
                            name = "conditional_while",
                            proc = <function>},
                          line = 104,
                          step = 71},
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  line = 106,
                                  name = "IDENT",
                                  value = "rt"}},
                              call = {
                                name = "variable",
                                proc = <function>},
                              line = 106,
                              step = 71}},
                          call = {
                            name = "return_value",
                            proc = <function>},
                          line = 106,
                          step = 72}},
                      call = {
                        name = "callablebody {throws=false,const=true}",
                        obj = {
                          const = true,
                          throws = false},
                        proc = <function>},
                      line = 106,
                      scope = {
                        53,
                        73}}},
                  call = {
                    name = "operator_funcdef",
                    proc = <function>},
                  id = 8,
                  line = 106,
                  step = 73}},
              call = {
                name = "definition_decl_impl_pass 4",
                obj = 4,
                proc = <function>},
              line = 106,
              step = 73},
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {},
                      call = {
                        name = "linkage {private=false,linkage="external",explicit=true}",
                        obj = {
                          explicit = true,
                          linkage = "external",
                          private = false},
                        proc = <function>},
                      line = 106,
                      step = 73},
                    {
                      arg = {},
                      call = {
                        name = "operatordecl {name="*",symbol="mul"}",
                        obj = {
                          name = "*",
                          symbol = "mul"},
                        proc = <function>},
                      line = 106,
                      step = 73},
                    {
                      arg = {
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  line = 108,
                                  name = "IDENT",
                                  value = "Matrix"}},
                              call = {
                                name = "typehdr {const=false}",
                                obj = {
                                  const = false},
                                proc = <function>},
                              line = 108,
                              step = 73},
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          line = 108,
                                          name = "IDENT",
                                          value = "R"}},
                                      call = {
                                        name = "typehdr {const=false}",
                                        obj = {
                                          const = false},
                                        proc = <function>},
                                      line = 108,
                                      step = 73},
                                    {
                                      arg = {
                                        {
                                          arg = {
                                            {
                                              line = 108,
                                              name = "IDENT",
                                              value = "DIM1"}},
                                          call = {
                                            name = "typehdr {const=false}",
                                            obj = {
                                              const = false},
                                            proc = <function>},
                                          line = 108,
                                          step = 73},
                                        {
                                          arg = {
                                            {
                                              arg = {
                                                {
                                                  line = 108,
                                                  name = "IDENT",
                                                  value = "DIM2"}},
                                              call = {
                                                name = "typehdr {const=false}",
                                                obj = {
                                                  const = false},
                                                proc = <function>},
                                              line = 108,
                                              step = 73}},
                                          call = {
                                            name = "generic_instance_type",
                                            proc = <function>},
                                          line = 108,
                                          step = 73}},
                                      call = {
                                        name = "generic_instance_type",
                                        proc = <function>},
                                      line = 108,
                                      step = 73}},
                                  call = {
                                    name = "generic_instance_type",
                                    proc = <function>},
                                  line = 108,
                                  step = 73}},
                              call = {
                                name = "generic_instance",
                                proc = <function>},
                              line = 108,
                              step = 73}},
                          call = {
                            name = "typegen_generic",
                            proc = <function>},
                          line = 108,
                          step = 73}},
                      call = {
                        name = "typespec",
                        proc = <function>},
                      line = 108,
                      step = 73},
                    {
                      arg = {
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          line = 108,
                                          name = "IDENT",
                                          value = "R"}},
                                      call = {
                                        name = "typehdr {const=true}",
                                        obj = {
                                          const = true},
                                        proc = <function>},
                                      line = 108,
                                      step = 73}},
                                  call = {
                                    name = "typespec",
                                    proc = <function>},
                                  line = 108,
                                  step = 73},
                                {
                                  line = 108,
                                  name = "IDENT",
                                  value = "o"}},
                              call = {
                                name = "paramdef",
                                proc = <function>},
                              line = 108,
                              step = 73}},
                          call = {
                            name = "paramdeflist",
                            proc = <function>},
                          line = 108,
                          step = 73},
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          arg = {
                                            {
                                              line = 110,
                                              name = "IDENT",
                                              value = "Matrix"}},
                                          call = {
                                            name = "typehdr {const=false}",
                                            obj = {
                                              const = false},
                                            proc = <function>},
                                          line = 110,
                                          step = 73},
                                        {
                                          arg = {
                                            {
                                              arg = {
                                                {
                                                  arg = {
                                                    {
                                                      line = 110,
                                                      name = "IDENT",
                                                      value = "R"}},
                                                  call = {
                                                    name = "typehdr {const=false}",
                                                    obj = {
                                                      const = false},
                                                    proc = <function>},
                                                  line = 110,
                                                  step = 73},
                                                {
                                                  arg = {
                                                    {
                                                      arg = {
                                                        {
                                                          line = 110,
                                                          name = "IDENT",
                                                          value = "DIM1"}},
                                                      call = {
                                                        name = "typehdr {const=false}",
                                                        obj = {
                                                          const = false},
                                                        proc = <function>},
                                                      line = 110,
                                                      step = 73},
                                                    {
                                                      arg = {
                                                        {
                                                          arg = {
                                                            {
                                                              line = 110,
                                                              name = "IDENT",
                                                              value = "DIM2"}},
                                                          call = {
                                                            name = "typehdr {const=false}",
                                                            obj = {
                                                              const = false},
                                                            proc = <function>},
                                                          line = 110,
                                                          step = 73}},
                                                      call = {
                                                        name = "generic_instance_type",
                                                        proc = <function>},
                                                      line = 110,
                                                      step = 73}},
                                                  call = {
                                                    name = "generic_instance_type",
                                                    proc = <function>},
                                                  line = 110,
                                                  step = 73}},
                                              call = {
                                                name = "generic_instance_type",
                                                proc = <function>},
                                              line = 110,
                                              step = 73}},
                                          call = {
                                            name = "generic_instance",
                                            proc = <function>},
                                          line = 110,
                                          step = 73}},
                                      call = {
                                        name = "typegen_generic",
                                        proc = <function>},
                                      line = 110,
                                      step = 73}},
                                  call = {
                                    name = "typespec",
                                    proc = <function>},
                                  line = 110,
                                  step = 73},
                                {
                                  line = 110,
                                  name = "IDENT",
                                  value = "rt"}},
                              call = {
                                name = "vardef",
                                proc = <function>},
                              line = 110,
                              step = 74}},
                          call = {
                            name = "definition 1",
                            obj = 1,
                            proc = <function>},
                          line = 110,
                          step = 75},
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          line = 111,
                                          name = "IDENT",
                                          value = "int"}},
                                      call = {
                                        name = "typehdr {const=false}",
                                        obj = {
                                          const = false},
                                        proc = <function>},
                                      line = 111,
                                      step = 75}},
                                  call = {
                                    name = "typespec",
                                    proc = <function>},
                                  line = 111,
                                  step = 75},
                                {
                                  line = 111,
                                  name = "IDENT",
                                  value = "ii"},
                                {
                                  arg = {
                                    {
                                      line = 111,
                                      name = "UINTEGER",
                                      value = "0"}},
                                  call = {
                                    name = "constant constexpr uint",
                                    obj = "constexpr uint",
                                    proc = <function>},
                                  line = 111,
                                  step = 75}},
                              call = {
                                name = "vardef_assign",
                                proc = <function>},
                              line = 111,
                              step = 76}},
                          call = {
                            name = "definition 1",
                            obj = 1,
                            proc = <function>},
                          line = 111,
                          step = 77},
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      line = 112,
                                      name = "IDENT",
                                      value = "ii"}},
                                  call = {
                                    name = "variable",
                                    proc = <function>},
                                  line = 112,
                                  step = 77},
                                {
                                  arg = {
                                    {
                                      line = 112,
                                      name = "IDENT",
                                      value = "DIM1"}},
                                  call = {
                                    name = "variable",
                                    proc = <function>},
                                  line = 112,
                                  step = 77}},
                              call = {
                                name = "binop <",
                                obj = "<",
                                proc = <function>},
                              line = 112,
                              step = 77},
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          arg = {
                                            {
                                              arg = {
                                                {
                                                  line = 114,
                                                  name = "IDENT",
                                                  value = "int"}},
                                              call = {
                                                name = "typehdr {const=false}",
                                                obj = {
                                                  const = false},
                                                proc = <function>},
                                              line = 114,
                                              step = 77}},
                                          call = {
                                            name = "typespec",
                                            proc = <function>},
                                          line = 114,
                                          step = 77},
                                        {
                                          line = 114,
                                          name = "IDENT",
                                          value = "jj"},
                                        {
                                          arg = {
                                            {
                                              line = 114,
                                              name = "UINTEGER",
                                              value = "0"}},
                                          call = {
                                            name = "constant constexpr uint",
                                            obj = "constexpr uint",
                                            proc = <function>},
                                          line = 114,
                                          step = 77}},
                                      call = {
                                        name = "vardef_assign",
                                        proc = <function>},
                                      line = 114,
                                      step = 78}},
                                  call = {
                                    name = "definition 1",
                                    obj = 1,
                                    proc = <function>},
                                  line = 114,
                                  step = 79},
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          arg = {
                                            {
                                              line = 115,
                                              name = "IDENT",
                                              value = "jj"}},
                                          call = {
                                            name = "variable",
                                            proc = <function>},
                                          line = 115,
                                          step = 79},
                                        {
                                          arg = {
                                            {
                                              line = 115,
                                              name = "IDENT",
                                              value = "DIM2"}},
                                          call = {
                                            name = "variable",
                                            proc = <function>},
                                          line = 115,
                                          step = 79}},
                                      call = {
                                        name = "binop <",
                                        obj = "<",
                                        proc = <function>},
                                      line = 115,
                                      step = 79},
                                    {
                                      arg = {
                                        {
                                          arg = {
                                            {
                                              arg = {
                                                {
                                                  arg = {
                                                    {
                                                      arg = {
                                                        {
                                                          arg = {
                                                            {
                                                              arg = {
                                                                {
                                                                  line = 117,
                                                                  name = "IDENT",
                                                                  value = "rt"}},
                                                              call = {
                                                                name = "variable",
                                                                proc = <function>},
                                                              line = 117,
                                                              step = 79},
                                                            {
                                                              line = 117,
                                                              name = "IDENT",
                                                              value = "m_ar"}},
                                                          call = {
                                                            name = "member",
                                                            proc = <function>},
                                                          line = 117,
                                                          step = 79},
                                                        {
                                                          arg = {
                                                            {
                                                              line = 117,
                                                              name = "IDENT",
                                                              value = "ii"}},
                                                          call = {
                                                            name = "variable",
                                                            proc = <function>},
                                                          line = 117,
                                                          step = 79}},
                                                      call = {
                                                        name = "operator_array []",
                                                        obj = "[]",
                                                        proc = <function>},
                                                      line = 117,
                                                      step = 79},
                                                    {
                                                      arg = {
                                                        {
                                                          line = 117,
                                                          name = "IDENT",
                                                          value = "jj"}},
                                                      call = {
                                                        name = "variable",
                                                        proc = <function>},
                                                      line = 117,
                                                      step = 79}},
                                                  call = {
                                                    name = "operator_array []",
                                                    obj = "[]",
                                                    proc = <function>},
                                                  line = 117,
                                                  step = 79},
                                                {
                                                  arg = {
                                                    {
                                                      arg = {
                                                        {
                                                          arg = {
                                                            {
                                                              arg = {
                                                                {
                                                                  line = 117,
                                                                  name = "IDENT",
                                                                  value = "m_ar"}},
                                                              call = {
                                                                name = "variable",
                                                                proc = <function>},
                                                              line = 117,
                                                              step = 79},
                                                            {
                                                              arg = {
                                                                {
                                                                  line = 117,
                                                                  name = "IDENT",
                                                                  value = "ii"}},
                                                              call = {
                                                                name = "variable",
                                                                proc = <function>},
                                                              line = 117,
                                                              step = 79}},
                                                          call = {
                                                            name = "operator_array []",
                                                            obj = "[]",
                                                            proc = <function>},
                                                          line = 117,
                                                          step = 79},
                                                        {
                                                          arg = {
                                                            {
                                                              line = 117,
                                                              name = "IDENT",
                                                              value = "jj"}},
                                                          call = {
                                                            name = "variable",
                                                            proc = <function>},
                                                          line = 117,
                                                          step = 79}},
                                                      call = {
                                                        name = "operator_array []",
                                                        obj = "[]",
                                                        proc = <function>},
                                                      line = 117,
                                                      step = 79},
                                                    {
                                                      arg = {
                                                        {
                                                          line = 117,
                                                          name = "IDENT",
                                                          value = "o"}},
                                                      call = {
                                                        name = "variable",
                                                        proc = <function>},
                                                      line = 117,
                                                      step = 79}},
                                                  call = {
                                                    name = "binop *",
                                                    obj = "*",
                                                    proc = <function>},
                                                  line = 117,
                                                  step = 79}},
                                              call = {
                                                name = "binop =",
                                                obj = "=",
                                                proc = <function>},
                                              line = 117,
                                              step = 80}},
                                          call = {
                                            name = "free_expression",
                                            proc = <function>},
                                          line = 117,
                                          step = 80},
                                        {
                                          arg = {
                                            {
                                              arg = {
                                                {
                                                  arg = {
                                                    {
                                                      line = 118,
                                                      name = "IDENT",
                                                      value = "jj"}},
                                                  call = {
                                                    name = "variable",
                                                    proc = <function>},
                                                  line = 118,
                                                  step = 80},
                                                {
                                                  arg = {
                                                    {
                                                      line = 118,
                                                      name = "UINTEGER",
                                                      value = "1"}},
                                                  call = {
                                                    name = "constant constexpr uint",
                                                    obj = "constexpr uint",
                                                    proc = <function>},
                                                  line = 118,
                                                  step = 80}},
                                              call = {
                                                name = "assign_operator +",
                                                obj = "+",
                                                proc = <function>},
                                              line = 118,
                                              step = 81}},
                                          call = {
                                            name = "free_expression",
                                            proc = <function>},
                                          line = 118,
                                          step = 81}},
                                      call = {
                                        name = "codeblock",
                                        proc = <function>},
                                      line = 118,
                                      scope = {
                                        79,
                                        82}}},
                                  call = {
                                    name = "conditional_while",
                                    proc = <function>},
                                  line = 118,
                                  step = 82},
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          arg = {
                                            {
                                              line = 120,
                                              name = "IDENT",
                                              value = "ii"}},
                                          call = {
                                            name = "variable",
                                            proc = <function>},
                                          line = 120,
                                          step = 82},
                                        {
                                          arg = {
                                            {
                                              line = 120,
                                              name = "UINTEGER",
                                              value = "1"}},
                                          call = {
                                            name = "constant constexpr uint",
                                            obj = "constexpr uint",
                                            proc = <function>},
                                          line = 120,
                                          step = 82}},
                                      call = {
                                        name = "assign_operator +",
                                        obj = "+",
                                        proc = <function>},
                                      line = 120,
                                      step = 83}},
                                  call = {
                                    name = "free_expression",
                                    proc = <function>},
                                  line = 120,
                                  step = 83}},
                              call = {
                                name = "codeblock",
                                proc = <function>},
                              line = 120,
                              scope = {
                                77,
                                84}}},
                          call = {
                            name = "conditional_while",
                            proc = <function>},
                          line = 120,
                          step = 84},
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  line = 122,
                                  name = "IDENT",
                                  value = "rt"}},
                              call = {
                                name = "variable",
                                proc = <function>},
                              line = 122,
                              step = 84}},
                          call = {
                            name = "return_value",
                            proc = <function>},
                          line = 122,
                          step = 85}},
                      call = {
                        name = "callablebody {throws=false,const=true}",
                        obj = {
                          const = true,
                          throws = false},
                        proc = <function>},
                      line = 122,
                      scope = {
                        73,
                        86}}},
                  call = {
                    name = "operator_funcdef",
                    proc = <function>},
                  id = 9,
                  line = 122,
                  step = 86}},
              call = {
                name = "definition_decl_impl_pass 4",
                obj = 4,
                proc = <function>},
              line = 122,
              step = 86},
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {},
                      call = {
                        name = "linkage {private=false,linkage="external",explicit=true}",
                        obj = {
                          explicit = true,
                          linkage = "external",
                          private = false},
                        proc = <function>},
                      line = 122,
                      step = 86},
                    {
                      arg = {},
                      call = {
                        name = "operatordecl {name="/",symbol="div"}",
                        obj = {
                          name = "/",
                          symbol = "div"},
                        proc = <function>},
                      line = 122,
                      step = 86},
                    {
                      arg = {
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  line = 124,
                                  name = "IDENT",
                                  value = "Matrix"}},
                              call = {
                                name = "typehdr {const=false}",
                                obj = {
                                  const = false},
                                proc = <function>},
                              line = 124,
                              step = 86},
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          line = 124,
                                          name = "IDENT",
                                          value = "R"}},
                                      call = {
                                        name = "typehdr {const=false}",
                                        obj = {
                                          const = false},
                                        proc = <function>},
                                      line = 124,
                                      step = 86},
                                    {
                                      arg = {
                                        {
                                          arg = {
                                            {
                                              line = 124,
                                              name = "IDENT",
                                              value = "DIM1"}},
                                          call = {
                                            name = "typehdr {const=false}",
                                            obj = {
                                              const = false},
                                            proc = <function>},
                                          line = 124,
                                          step = 86},
                                        {
                                          arg = {
                                            {
                                              arg = {
                                                {
                                                  line = 124,
                                                  name = "IDENT",
                                                  value = "DIM2"}},
                                              call = {
                                                name = "typehdr {const=false}",
                                                obj = {
                                                  const = false},
                                                proc = <function>},
                                              line = 124,
                                              step = 86}},
                                          call = {
                                            name = "generic_instance_type",
                                            proc = <function>},
                                          line = 124,
                                          step = 86}},
                                      call = {
                                        name = "generic_instance_type",
                                        proc = <function>},
                                      line = 124,
                                      step = 86}},
                                  call = {
                                    name = "generic_instance_type",
                                    proc = <function>},
                                  line = 124,
                                  step = 86}},
                              call = {
                                name = "generic_instance",
                                proc = <function>},
                              line = 124,
                              step = 86}},
                          call = {
                            name = "typegen_generic",
                            proc = <function>},
                          line = 124,
                          step = 86}},
                      call = {
                        name = "typespec",
                        proc = <function>},
                      line = 124,
                      step = 86},
                    {
                      arg = {
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          line = 124,
                                          name = "IDENT",
                                          value = "R"}},
                                      call = {
                                        name = "typehdr {const=true}",
                                        obj = {
                                          const = true},
                                        proc = <function>},
                                      line = 124,
                                      step = 86}},
                                  call = {
                                    name = "typespec",
                                    proc = <function>},
                                  line = 124,
                                  step = 86},
                                {
                                  line = 124,
                                  name = "IDENT",
                                  value = "o"}},
                              call = {
                                name = "paramdef",
                                proc = <function>},
                              line = 124,
                              step = 86}},
                          call = {
                            name = "paramdeflist",
                            proc = <function>},
                          line = 124,
                          step = 86},
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          arg = {
                                            {
                                              line = 126,
                                              name = "IDENT",
                                              value = "Matrix"}},
                                          call = {
                                            name = "typehdr {const=false}",
                                            obj = {
                                              const = false},
                                            proc = <function>},
                                          line = 126,
                                          step = 86},
                                        {
                                          arg = {
                                            {
                                              arg = {
                                                {
                                                  arg = {
                                                    {
                                                      line = 126,
                                                      name = "IDENT",
                                                      value = "R"}},
                                                  call = {
                                                    name = "typehdr {const=false}",
                                                    obj = {
                                                      const = false},
                                                    proc = <function>},
                                                  line = 126,
                                                  step = 86},
                                                {
                                                  arg = {
                                                    {
                                                      arg = {
                                                        {
                                                          line = 126,
                                                          name = "IDENT",
                                                          value = "DIM1"}},
                                                      call = {
                                                        name = "typehdr {const=false}",
                                                        obj = {
                                                          const = false},
                                                        proc = <function>},
                                                      line = 126,
                                                      step = 86},
                                                    {
                                                      arg = {
                                                        {
                                                          arg = {
                                                            {
                                                              line = 126,
                                                              name = "IDENT",
                                                              value = "DIM2"}},
                                                          call = {
                                                            name = "typehdr {const=false}",
                                                            obj = {
                                                              const = false},
                                                            proc = <function>},
                                                          line = 126,
                                                          step = 86}},
                                                      call = {
                                                        name = "generic_instance_type",
                                                        proc = <function>},
                                                      line = 126,
                                                      step = 86}},
                                                  call = {
                                                    name = "generic_instance_type",
                                                    proc = <function>},
                                                  line = 126,
                                                  step = 86}},
                                              call = {
                                                name = "generic_instance_type",
                                                proc = <function>},
                                              line = 126,
                                              step = 86}},
                                          call = {
                                            name = "generic_instance",
                                            proc = <function>},
                                          line = 126,
                                          step = 86}},
                                      call = {
                                        name = "typegen_generic",
                                        proc = <function>},
                                      line = 126,
                                      step = 86}},
                                  call = {
                                    name = "typespec",
                                    proc = <function>},
                                  line = 126,
                                  step = 86},
                                {
                                  line = 126,
                                  name = "IDENT",
                                  value = "rt"}},
                              call = {
                                name = "vardef",
                                proc = <function>},
                              line = 126,
                              step = 87}},
                          call = {
                            name = "definition 1",
                            obj = 1,
                            proc = <function>},
                          line = 126,
                          step = 88},
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          line = 127,
                                          name = "IDENT",
                                          value = "int"}},
                                      call = {
                                        name = "typehdr {const=false}",
                                        obj = {
                                          const = false},
                                        proc = <function>},
                                      line = 127,
                                      step = 88}},
                                  call = {
                                    name = "typespec",
                                    proc = <function>},
                                  line = 127,
                                  step = 88},
                                {
                                  line = 127,
                                  name = "IDENT",
                                  value = "ii"},
                                {
                                  arg = {
                                    {
                                      line = 127,
                                      name = "UINTEGER",
                                      value = "0"}},
                                  call = {
                                    name = "constant constexpr uint",
                                    obj = "constexpr uint",
                                    proc = <function>},
                                  line = 127,
                                  step = 88}},
                              call = {
                                name = "vardef_assign",
                                proc = <function>},
                              line = 127,
                              step = 89}},
                          call = {
                            name = "definition 1",
                            obj = 1,
                            proc = <function>},
                          line = 127,
                          step = 90},
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      line = 128,
                                      name = "IDENT",
                                      value = "ii"}},
                                  call = {
                                    name = "variable",
                                    proc = <function>},
                                  line = 128,
                                  step = 90},
                                {
                                  arg = {
                                    {
                                      line = 128,
                                      name = "IDENT",
                                      value = "DIM1"}},
                                  call = {
                                    name = "variable",
                                    proc = <function>},
                                  line = 128,
                                  step = 90}},
                              call = {
                                name = "binop <",
                                obj = "<",
                                proc = <function>},
                              line = 128,
                              step = 90},
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          arg = {
                                            {
                                              arg = {
                                                {
                                                  line = 130,
                                                  name = "IDENT",
                                                  value = "int"}},
                                              call = {
                                                name = "typehdr {const=false}",
                                                obj = {
                                                  const = false},
                                                proc = <function>},
                                              line = 130,
                                              step = 90}},
                                          call = {
                                            name = "typespec",
                                            proc = <function>},
                                          line = 130,
                                          step = 90},
                                        {
                                          line = 130,
                                          name = "IDENT",
                                          value = "jj"},
                                        {
                                          arg = {
                                            {
                                              line = 130,
                                              name = "UINTEGER",
                                              value = "0"}},
                                          call = {
                                            name = "constant constexpr uint",
                                            obj = "constexpr uint",
                                            proc = <function>},
                                          line = 130,
                                          step = 90}},
                                      call = {
                                        name = "vardef_assign",
                                        proc = <function>},
                                      line = 130,
                                      step = 91}},
                                  call = {
                                    name = "definition 1",
                                    obj = 1,
                                    proc = <function>},
                                  line = 130,
                                  step = 92},
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          arg = {
                                            {
                                              line = 131,
                                              name = "IDENT",
                                              value = "jj"}},
                                          call = {
                                            name = "variable",
                                            proc = <function>},
                                          line = 131,
                                          step = 92},
                                        {
                                          arg = {
                                            {
                                              line = 131,
                                              name = "IDENT",
                                              value = "DIM2"}},
                                          call = {
                                            name = "variable",
                                            proc = <function>},
                                          line = 131,
                                          step = 92}},
                                      call = {
                                        name = "binop <",
                                        obj = "<",
                                        proc = <function>},
                                      line = 131,
                                      step = 92},
                                    {
                                      arg = {
                                        {
                                          arg = {
                                            {
                                              arg = {
                                                {
                                                  arg = {
                                                    {
                                                      arg = {
                                                        {
                                                          arg = {
                                                            {
                                                              arg = {
                                                                {
                                                                  line = 133,
                                                                  name = "IDENT",
                                                                  value = "rt"}},
                                                              call = {
                                                                name = "variable",
                                                                proc = <function>},
                                                              line = 133,
                                                              step = 92},
                                                            {
                                                              line = 133,
                                                              name = "IDENT",
                                                              value = "m_ar"}},
                                                          call = {
                                                            name = "member",
                                                            proc = <function>},
                                                          line = 133,
                                                          step = 92},
                                                        {
                                                          arg = {
                                                            {
                                                              line = 133,
                                                              name = "IDENT",
                                                              value = "ii"}},
                                                          call = {
                                                            name = "variable",
                                                            proc = <function>},
                                                          line = 133,
                                                          step = 92}},
                                                      call = {
                                                        name = "operator_array []",
                                                        obj = "[]",
                                                        proc = <function>},
                                                      line = 133,
                                                      step = 92},
                                                    {
                                                      arg = {
                                                        {
                                                          line = 133,
                                                          name = "IDENT",
                                                          value = "jj"}},
                                                      call = {
                                                        name = "variable",
                                                        proc = <function>},
                                                      line = 133,
                                                      step = 92}},
                                                  call = {
                                                    name = "operator_array []",
                                                    obj = "[]",
                                                    proc = <function>},
                                                  line = 133,
                                                  step = 92},
                                                {
                                                  arg = {
                                                    {
                                                      arg = {
                                                        {
                                                          arg = {
                                                            {
                                                              arg = {
                                                                {
                                                                  line = 133,
                                                                  name = "IDENT",
                                                                  value = "m_ar"}},
                                                              call = {
                                                                name = "variable",
                                                                proc = <function>},
                                                              line = 133,
                                                              step = 92},
                                                            {
                                                              arg = {
                                                                {
                                                                  line = 133,
                                                                  name = "IDENT",
                                                                  value = "ii"}},
                                                              call = {
                                                                name = "variable",
                                                                proc = <function>},
                                                              line = 133,
                                                              step = 92}},
                                                          call = {
                                                            name = "operator_array []",
                                                            obj = "[]",
                                                            proc = <function>},
                                                          line = 133,
                                                          step = 92},
                                                        {
                                                          arg = {
                                                            {
                                                              line = 133,
                                                              name = "IDENT",
                                                              value = "jj"}},
                                                          call = {
                                                            name = "variable",
                                                            proc = <function>},
                                                          line = 133,
                                                          step = 92}},
                                                      call = {
                                                        name = "operator_array []",
                                                        obj = "[]",
                                                        proc = <function>},
                                                      line = 133,
                                                      step = 92},
                                                    {
                                                      arg = {
                                                        {
                                                          line = 133,
                                                          name = "IDENT",
                                                          value = "o"}},
                                                      call = {
                                                        name = "variable",
                                                        proc = <function>},
                                                      line = 133,
                                                      step = 92}},
                                                  call = {
                                                    name = "binop /",
                                                    obj = "/",
                                                    proc = <function>},
                                                  line = 133,
                                                  step = 92}},
                                              call = {
                                                name = "binop =",
                                                obj = "=",
                                                proc = <function>},
                                              line = 133,
                                              step = 93}},
                                          call = {
                                            name = "free_expression",
                                            proc = <function>},
                                          line = 133,
                                          step = 93},
                                        {
                                          arg = {
                                            {
                                              arg = {
                                                {
                                                  arg = {
                                                    {
                                                      line = 134,
                                                      name = "IDENT",
                                                      value = "jj"}},
                                                  call = {
                                                    name = "variable",
                                                    proc = <function>},
                                                  line = 134,
                                                  step = 93},
                                                {
                                                  arg = {
                                                    {
                                                      line = 134,
                                                      name = "UINTEGER",
                                                      value = "1"}},
                                                  call = {
                                                    name = "constant constexpr uint",
                                                    obj = "constexpr uint",
                                                    proc = <function>},
                                                  line = 134,
                                                  step = 93}},
                                              call = {
                                                name = "assign_operator +",
                                                obj = "+",
                                                proc = <function>},
                                              line = 134,
                                              step = 94}},
                                          call = {
                                            name = "free_expression",
                                            proc = <function>},
                                          line = 134,
                                          step = 94}},
                                      call = {
                                        name = "codeblock",
                                        proc = <function>},
                                      line = 134,
                                      scope = {
                                        92,
                                        95}}},
                                  call = {
                                    name = "conditional_while",
                                    proc = <function>},
                                  line = 134,
                                  step = 95},
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          arg = {
                                            {
                                              line = 136,
                                              name = "IDENT",
                                              value = "ii"}},
                                          call = {
                                            name = "variable",
                                            proc = <function>},
                                          line = 136,
                                          step = 95},
                                        {
                                          arg = {
                                            {
                                              line = 136,
                                              name = "UINTEGER",
                                              value = "1"}},
                                          call = {
                                            name = "constant constexpr uint",
                                            obj = "constexpr uint",
                                            proc = <function>},
                                          line = 136,
                                          step = 95}},
                                      call = {
                                        name = "assign_operator +",
                                        obj = "+",
                                        proc = <function>},
                                      line = 136,
                                      step = 96}},
                                  call = {
                                    name = "free_expression",
                                    proc = <function>},
                                  line = 136,
                                  step = 96}},
                              call = {
                                name = "codeblock",
                                proc = <function>},
                              line = 136,
                              scope = {
                                90,
                                97}}},
                          call = {
                            name = "conditional_while",
                            proc = <function>},
                          line = 136,
                          step = 97},
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  line = 138,
                                  name = "IDENT",
                                  value = "rt"}},
                              call = {
                                name = "variable",
                                proc = <function>},
                              line = 138,
                              step = 97}},
                          call = {
                            name = "return_value",
                            proc = <function>},
                          line = 138,
                          step = 98}},
                      call = {
                        name = "callablebody {throws=false,const=true}",
                        obj = {
                          const = true,
                          throws = false},
                        proc = <function>},
                      line = 138,
                      scope = {
                        86,
                        99}}},
                  call = {
                    name = "operator_funcdef",
                    proc = <function>},
                  id = 10,
                  line = 138,
                  step = 99}},
              call = {
                name = "definition_decl_impl_pass 4",
                obj = 4,
                proc = <function>},
              line = 138,
              step = 99},
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {},
                      call = {
                        name = "linkage {private=false,linkage="external",explicit=true}",
                        obj = {
                          explicit = true,
                          linkage = "external",
                          private = false},
                        proc = <function>},
                      line = 138,
                      step = 99},
                    {
                      arg = {},
                      call = {
                        name = "operatordecl {name="[]",symbol="get"}",
                        obj = {
                          name = "[]",
                          symbol = "get"},
                        proc = <function>},
                      line = 138,
                      step = 99},
                    {
                      arg = {
                        {
                          arg = {
                            {
                              line = 140,
                              name = "IDENT",
                              value = "R"}},
                          call = {
                            name = "typehdr {const=false}",
                            obj = {
                              const = false},
                            proc = <function>},
                          line = 140,
                          step = 99}},
                      call = {
                        name = "typespec_ref",
                        proc = <function>},
                      line = 140,
                      step = 99},
                    {
                      arg = {
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          line = 140,
                                          name = "IDENT",
                                          value = "int"}},
                                      call = {
                                        name = "typehdr {const=false}",
                                        obj = {
                                          const = false},
                                        proc = <function>},
                                      line = 140,
                                      step = 99}},
                                  call = {
                                    name = "typespec",
                                    proc = <function>},
                                  line = 140,
                                  step = 99},
                                {
                                  line = 140,
                                  name = "IDENT",
                                  value = "i"}},
                              call = {
                                name = "paramdef",
                                proc = <function>},
                              line = 140,
                              step = 99},
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          line = 140,
                                          name = "IDENT",
                                          value = "int"}},
                                      call = {
                                        name = "typehdr {const=false}",
                                        obj = {
                                          const = false},
                                        proc = <function>},
                                      line = 140,
                                      step = 99}},
                                  call = {
                                    name = "typespec",
                                    proc = <function>},
                                  line = 140,
                                  step = 99},
                                {
                                  line = 140,
                                  name = "IDENT",
                                  value = "j"}},
                              call = {
                                name = "paramdef",
                                proc = <function>},
                              line = 140,
                              step = 99}},
                          call = {
                            name = "paramdeflist",
                            proc = <function>},
                          line = 140,
                          step = 99},
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          line = 142,
                                          name = "IDENT",
                                          value = "m_ar"}},
                                      call = {
                                        name = "variable",
                                        proc = <function>},
                                      line = 142,
                                      step = 99},
                                    {
                                      arg = {
                                        {
                                          line = 142,
                                          name = "IDENT",
                                          value = "i"}},
                                      call = {
                                        name = "variable",
                                        proc = <function>},
                                      line = 142,
                                      step = 99}},
                                  call = {
                                    name = "operator_array []",
                                    obj = "[]",
                                    proc = <function>},
                                  line = 142,
                                  step = 99},
                                {
                                  arg = {
                                    {
                                      line = 142,
                                      name = "IDENT",
                                      value = "j"}},
                                  call = {
                                    name = "variable",
                                    proc = <function>},
                                  line = 142,
                                  step = 99}},
                              call = {
                                name = "operator_array []",
                                obj = "[]",
                                proc = <function>},
                              line = 142,
                              step = 99}},
                          call = {
                            name = "return_value",
                            proc = <function>},
                          line = 142,
                          step = 100}},
                      call = {
                        name = "callablebody {throws=false,const=false}",
                        obj = {
                          const = false,
                          throws = false},
                        proc = <function>},
                      line = 142,
                      scope = {
                        99,
                        101}}},
                  call = {
                    name = "operator_funcdef",
                    proc = <function>},
                  id = 11,
                  line = 142,
                  step = 101}},
              call = {
                name = "definition_decl_impl_pass 4",
                obj = 4,
                proc = <function>},
              line = 142,
              step = 101},
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {},
                      call = {
                        name = "linkage {private=false,linkage="external",explicit=true}",
                        obj = {
                          explicit = true,
                          linkage = "external",
                          private = false},
                        proc = <function>},
                      line = 142,
                      step = 101},
                    {
                      arg = {},
                      call = {
                        name = "operatordecl {name="[]",symbol="get"}",
                        obj = {
                          name = "[]",
                          symbol = "get"},
                        proc = <function>},
                      line = 142,
                      step = 101},
                    {
                      arg = {
                        {
                          arg = {
                            {
                              line = 144,
                              name = "IDENT",
                              value = "R"}},
                          call = {
                            name = "typehdr {const=true}",
                            obj = {
                              const = true},
                            proc = <function>},
                          line = 144,
                          step = 101}},
                      call = {
                        name = "typespec",
                        proc = <function>},
                      line = 144,
                      step = 101},
                    {
                      arg = {
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          line = 144,
                                          name = "IDENT",
                                          value = "int"}},
                                      call = {
                                        name = "typehdr {const=false}",
                                        obj = {
                                          const = false},
                                        proc = <function>},
                                      line = 144,
                                      step = 101}},
                                  call = {
                                    name = "typespec",
                                    proc = <function>},
                                  line = 144,
                                  step = 101},
                                {
                                  line = 144,
                                  name = "IDENT",
                                  value = "i"}},
                              call = {
                                name = "paramdef",
                                proc = <function>},
                              line = 144,
                              step = 101},
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          line = 144,
                                          name = "IDENT",
                                          value = "int"}},
                                      call = {
                                        name = "typehdr {const=false}",
                                        obj = {
                                          const = false},
                                        proc = <function>},
                                      line = 144,
                                      step = 101}},
                                  call = {
                                    name = "typespec",
                                    proc = <function>},
                                  line = 144,
                                  step = 101},
                                {
                                  line = 144,
                                  name = "IDENT",
                                  value = "j"}},
                              call = {
                                name = "paramdef",
                                proc = <function>},
                              line = 144,
                              step = 101}},
                          call = {
                            name = "paramdeflist",
                            proc = <function>},
                          line = 144,
                          step = 101},
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          line = 146,
                                          name = "IDENT",
                                          value = "m_ar"}},
                                      call = {
                                        name = "variable",
                                        proc = <function>},
                                      line = 146,
                                      step = 101},
                                    {
                                      arg = {
                                        {
                                          line = 146,
                                          name = "IDENT",
                                          value = "i"}},
                                      call = {
                                        name = "variable",
                                        proc = <function>},
                                      line = 146,
                                      step = 101}},
                                  call = {
                                    name = "operator_array []",
                                    obj = "[]",
                                    proc = <function>},
                                  line = 146,
                                  step = 101},
                                {
                                  arg = {
                                    {
                                      line = 146,
                                      name = "IDENT",
                                      value = "j"}},
                                  call = {
                                    name = "variable",
                                    proc = <function>},
                                  line = 146,
                                  step = 101}},
                              call = {
                                name = "operator_array []",
                                obj = "[]",
                                proc = <function>},
                              line = 146,
                              step = 101}},
                          call = {
                            name = "return_value",
                            proc = <function>},
                          line = 146,
                          step = 102}},
                      call = {
                        name = "callablebody {throws=false,const=true}",
                        obj = {
                          const = true,
                          throws = false},
                        proc = <function>},
                      line = 146,
                      scope = {
                        101,
                        103}}},
                  call = {
                    name = "operator_funcdef",
                    proc = <function>},
                  id = 12,
                  line = 146,
                  step = 103}},
              call = {
                name = "definition_decl_impl_pass 4",
                obj = 4,
                proc = <function>},
              line = 146,
              step = 103},
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      line = 149,
                                      name = "IDENT",
                                      value = "R"}},
                                  call = {
                                    name = "typehdr {const=false}",
                                    obj = {
                                      const = false},
                                    proc = <function>},
                                  line = 149,
                                  step = 103},
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          arg = {
                                            {
                                              line = 149,
                                              name = "IDENT",
                                              value = "DIM2"}},
                                          call = {
                                            name = "typehdr {const=false}",
                                            obj = {
                                              const = false},
                                            proc = <function>},
                                          line = 149,
                                          step = 103}},
                                      call = {
                                        name = "generic_instance_type",
                                        proc = <function>},
                                      line = 149,
                                      step = 103}},
                                  call = {
                                    name = "generic_instance",
                                    proc = <function>},
                                  line = 149,
                                  step = 103}},
                              call = {
                                name = "typegen_generic",
                                proc = <function>},
                              line = 149,
                              step = 103},
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          line = 149,
                                          name = "IDENT",
                                          value = "DIM1"}},
                                      call = {
                                        name = "typehdr {const=false}",
                                        obj = {
                                          const = false},
                                        proc = <function>},
                                      line = 149,
                                      step = 103}},
                                  call = {
                                    name = "generic_instance_type",
                                    proc = <function>},
                                  line = 149,
                                  step = 103}},
                              call = {
                                name = "generic_instance",
                                proc = <function>},
                              line = 149,
                              step = 103}},
                          call = {
                            name = "typegen_generic",
                            proc = <function>},
                          line = 149,
                          step = 103}},
                      call = {
                        name = "typespec",
                        proc = <function>},
                      line = 149,
                      step = 103},
                    {
                      line = 149,
                      name = "IDENT",
                      value = "m_ar"}},
                  call = {
                    name = "vardef",
                    proc = <function>},
                  line = 149,
                  step = 104}},
              call = {
                name = "definition 2",
                obj = 2,
                proc = <function>},
              line = 149,
              step = 104}},
          call = {
            name = "generic_classdef",
            proc = <function>},
          line = 149,
          step = 105}},
      call = {
        name = "definition 1",
        obj = 1,
        proc = <function>},
      line = 149,
      step = 105},
    {
      arg = {
        {
          arg = {
            {
              arg = {},
              call = {
                name = "linkage {private=false,linkage="external",explicit=false}",
                obj = {
                  explicit = false,
                  linkage = "external",
                  private = false},
                proc = <function>},
              line = 149,
              step = 105},
            {
              line = 152,
              name = "IDENT",
              value = "printMatrix"},
            {
              arg = {
                {
                  arg = {
                    {
                      line = 152,
                      name = "IDENT",
                      value = "DIM1"},
                    {
                      arg = {
                        {
                          line = 152,
                          name = "IDENT",
                          value = "DIM2"}},
                      call = {
                        name = "generic_header_ident",
                        proc = <function>},
                      line = 152,
                      step = 105}},
                  call = {
                    name = "generic_header_ident",
                    proc = <function>},
                  line = 152,
                  step = 105}},
              call = {
                name = "generic_header",
                proc = <function>},
              line = 152,
              step = 105},
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      line = 152,
                                      name = "IDENT",
                                      value = "Matrix"}},
                                  call = {
                                    name = "typehdr {const=true}",
                                    obj = {
                                      const = true},
                                    proc = <function>},
                                  line = 152,
                                  step = 105},
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          arg = {
                                            {
                                              line = 152,
                                              name = "IDENT",
                                              value = "double"}},
                                          call = {
                                            name = "typehdr {const=false}",
                                            obj = {
                                              const = false},
                                            proc = <function>},
                                          line = 152,
                                          step = 105},
                                        {
                                          arg = {
                                            {
                                              arg = {
                                                {
                                                  line = 152,
                                                  name = "IDENT",
                                                  value = "DIM1"}},
                                              call = {
                                                name = "typehdr {const=false}",
                                                obj = {
                                                  const = false},
                                                proc = <function>},
                                              line = 152,
                                              step = 105},
                                            {
                                              arg = {
                                                {
                                                  arg = {
                                                    {
                                                      line = 152,
                                                      name = "IDENT",
                                                      value = "DIM2"}},
                                                  call = {
                                                    name = "typehdr {const=false}",
                                                    obj = {
                                                      const = false},
                                                    proc = <function>},
                                                  line = 152,
                                                  step = 105}},
                                              call = {
                                                name = "generic_instance_type",
                                                proc = <function>},
                                              line = 152,
                                              step = 105}},
                                          call = {
                                            name = "generic_instance_type",
                                            proc = <function>},
                                          line = 152,
                                          step = 105}},
                                      call = {
                                        name = "generic_instance_type",
                                        proc = <function>},
                                      line = 152,
                                      step = 105}},
                                  call = {
                                    name = "generic_instance",
                                    proc = <function>},
                                  line = 152,
                                  step = 105}},
                              call = {
                                name = "typegen_generic",
                                proc = <function>},
                              line = 152,
                              step = 105}},
                          call = {
                            name = "typespec",
                            proc = <function>},
                          line = 152,
                          step = 105},
                        {
                          line = 152,
                          name = "IDENT",
                          value = "mt"}},
                      call = {
                        name = "paramdef",
                        proc = <function>},
                      line = 152,
                      step = 105}},
                  call = {
                    name = "paramdeflist",
                    proc = <function>},
                  line = 152,
                  step = 105},
                {
                  arg = {
                    {
                      arg = {
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  line = 154,
                                  name = "IDENT",
                                  value = "int"}},
                              call = {
                                name = "typehdr {const=false}",
                                obj = {
                                  const = false},
                                proc = <function>},
                              line = 154,
                              step = 105}},
                          call = {
                            name = "typespec",
                            proc = <function>},
                          line = 154,
                          step = 105},
                        {
                          line = 154,
                          name = "IDENT",
                          value = "ii"},
                        {
                          arg = {
                            {
                              line = 154,
                              name = "UINTEGER",
                              value = "0"}},
                          call = {
                            name = "constant constexpr uint",
                            obj = "constexpr uint",
                            proc = <function>},
                          line = 154,
                          step = 105}},
                      call = {
                        name = "vardef_assign",
                        proc = <function>},
                      line = 154,
                      step = 106}},
                  call = {
                    name = "definition 1",
                    obj = 1,
                    proc = <function>},
                  line = 154,
                  step = 107},
                {
                  arg = {
                    {
                      arg = {
                        {
                          arg = {
                            {
                              line = 155,
                              name = "IDENT",
                              value = "ii"}},
                          call = {
                            name = "variable",
                            proc = <function>},
                          line = 155,
                          step = 107},
                        {
                          arg = {
                            {
                              line = 155,
                              name = "IDENT",
                              value = "DIM1"}},
                          call = {
                            name = "variable",
                            proc = <function>},
                          line = 155,
                          step = 107}},
                      call = {
                        name = "binop <",
                        obj = "<",
                        proc = <function>},
                      line = 155,
                      step = 107},
                    {
                      arg = {
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          line = 157,
                                          name = "IDENT",
                                          value = "int"}},
                                      call = {
                                        name = "typehdr {const=false}",
                                        obj = {
                                          const = false},
                                        proc = <function>},
                                      line = 157,
                                      step = 107}},
                                  call = {
                                    name = "typespec",
                                    proc = <function>},
                                  line = 157,
                                  step = 107},
                                {
                                  line = 157,
                                  name = "IDENT",
                                  value = "jj"},
                                {
                                  arg = {
                                    {
                                      line = 157,
                                      name = "UINTEGER",
                                      value = "0"}},
                                  call = {
                                    name = "constant constexpr uint",
                                    obj = "constexpr uint",
                                    proc = <function>},
                                  line = 157,
                                  step = 107}},
                              call = {
                                name = "vardef_assign",
                                proc = <function>},
                              line = 157,
                              step = 108}},
                          call = {
                            name = "definition 1",
                            obj = 1,
                            proc = <function>},
                          line = 157,
                          step = 109},
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      line = 158,
                                      name = "IDENT",
                                      value = "jj"}},
                                  call = {
                                    name = "variable",
                                    proc = <function>},
                                  line = 158,
                                  step = 109},
                                {
                                  arg = {
                                    {
                                      line = 158,
                                      name = "IDENT",
                                      value = "DIM2"}},
                                  call = {
                                    name = "variable",
                                    proc = <function>},
                                  line = 158,
                                  step = 109}},
                              call = {
                                name = "binop <",
                                obj = "<",
                                proc = <function>},
                              line = 158,
                              step = 109},
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          arg = {
                                            {
                                              line = 160,
                                              name = "IDENT",
                                              value = "printf"}},
                                          call = {
                                            name = "variable",
                                            proc = <function>},
                                          line = 160,
                                          step = 109},
                                        {
                                          arg = {
                                            {
                                              line = 160,
                                              name = "DQSTRING",
                                              value = "\\t%.4f"}},
                                          call = {
                                            name = "string_constant",
                                            proc = <function>},
                                          line = 160,
                                          step = 109},
                                        {
                                          arg = {
                                            {
                                              arg = {
                                                {
                                                  line = 160,
                                                  name = "IDENT",
                                                  value = "mt"}},
                                              call = {
                                                name = "variable",
                                                proc = <function>},
                                              line = 160,
                                              step = 109},
                                            {
                                              arg = {
                                                {
                                                  line = 160,
                                                  name = "IDENT",
                                                  value = "ii"}},
                                              call = {
                                                name = "variable",
                                                proc = <function>},
                                              line = 160,
                                              step = 109},
                                            {
                                              arg = {
                                                {
                                                  line = 160,
                                                  name = "IDENT",
                                                  value = "jj"}},
                                              call = {
                                                name = "variable",
                                                proc = <function>},
                                              line = 160,
                                              step = 109}},
                                          call = {
                                            name = "operator_array []",
                                            obj = "[]",
                                            proc = <function>},
                                          line = 160,
                                          step = 109}},
                                      call = {
                                        name = "operator ()",
                                        obj = "()",
                                        proc = <function>},
                                      line = 160,
                                      step = 109}},
                                  call = {
                                    name = "free_expression",
                                    proc = <function>},
                                  line = 160,
                                  step = 109},
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          arg = {
                                            {
                                              line = 161,
                                              name = "IDENT",
                                              value = "jj"}},
                                          call = {
                                            name = "variable",
                                            proc = <function>},
                                          line = 161,
                                          step = 109},
                                        {
                                          arg = {
                                            {
                                              line = 161,
                                              name = "UINTEGER",
                                              value = "1"}},
                                          call = {
                                            name = "constant constexpr uint",
                                            obj = "constexpr uint",
                                            proc = <function>},
                                          line = 161,
                                          step = 109}},
                                      call = {
                                        name = "assign_operator +",
                                        obj = "+",
                                        proc = <function>},
                                      line = 161,
                                      step = 110}},
                                  call = {
                                    name = "free_expression",
                                    proc = <function>},
                                  line = 161,
                                  step = 110}},
                              call = {
                                name = "codeblock",
                                proc = <function>},
                              line = 161,
                              scope = {
                                109,
                                111}}},
                          call = {
                            name = "conditional_while",
                            proc = <function>},
                          line = 161,
                          step = 111},
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      line = 163,
                                      name = "IDENT",
                                      value = "printf"}},
                                  call = {
                                    name = "variable",
                                    proc = <function>},
                                  line = 163,
                                  step = 111},
                                {
                                  arg = {
                                    {
                                      line = 163,
                                      name = "DQSTRING",
                                      value = "\\n"}},
                                  call = {
                                    name = "string_constant",
                                    proc = <function>},
                                  line = 163,
                                  step = 111}},
                              call = {
                                name = "operator ()",
                                obj = "()",
                                proc = <function>},
                              line = 163,
                              step = 111}},
                          call = {
                            name = "free_expression",
                            proc = <function>},
                          line = 163,
                          step = 111},
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      line = 164,
                                      name = "IDENT",
                                      value = "ii"}},
                                  call = {
                                    name = "variable",
                                    proc = <function>},
                                  line = 164,
                                  step = 111},
                                {
                                  arg = {
                                    {
                                      line = 164,
                                      name = "UINTEGER",
                                      value = "1"}},
                                  call = {
                                    name = "constant constexpr uint",
                                    obj = "constexpr uint",
                                    proc = <function>},
                                  line = 164,
                                  step = 111}},
                              call = {
                                name = "assign_operator +",
                                obj = "+",
                                proc = <function>},
                              line = 164,
                              step = 112}},
                          call = {
                            name = "free_expression",
                            proc = <function>},
                          line = 164,
                          step = 112}},
                      call = {
                        name = "codeblock",
                        proc = <function>},
                      line = 164,
                      scope = {
                        107,
                        113}}},
                  call = {
                    name = "conditional_while",
                    proc = <function>},
                  line = 164,
                  step = 113}},
              call = {
                name = "callablebody {throws=false,const=false}",
                obj = {
                  const = false,
                  throws = false},
                proc = <function>},
              line = 164,
              scope = {
                105,
                114}}},
          call = {
            name = "generic_procdef",
            proc = <function>},
          line = 164,
          step = 114}},
      call = {
        name = "definition 1",
        obj = 1,
        proc = <function>},
      line = 164,
      step = 114},
    {
      arg = {
        {
          arg = {
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  line = 174,
                                  name = "IDENT",
                                  value = "Matrix"}},
                              call = {
                                name = "typehdr {const=false}",
                                obj = {
                                  const = false},
                                proc = <function>},
                              line = 174,
                              step = 114},
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          line = 174,
                                          name = "IDENT",
                                          value = "double"}},
                                      call = {
                                        name = "typehdr {const=false}",
                                        obj = {
                                          const = false},
                                        proc = <function>},
                                      line = 174,
                                      step = 114},
                                    {
                                      arg = {
                                        {
                                          line = 174,
                                          name = "UINTEGER",
                                          value = "4"},
                                        {
                                          arg = {
                                            {
                                              line = 174,
                                              name = "UINTEGER",
                                              value = "3"}},
                                          call = {
                                            name = "generic_instance_dimension",
                                            proc = <function>},
                                          line = 174,
                                          step = 114}},
                                      call = {
                                        name = "generic_instance_dimension",
                                        proc = <function>},
                                      line = 174,
                                      step = 114}},
                                  call = {
                                    name = "generic_instance_type",
                                    proc = <function>},
                                  line = 174,
                                  step = 114}},
                              call = {
                                name = "generic_instance",
                                proc = <function>},
                              line = 174,
                              step = 114}},
                          call = {
                            name = "typegen_generic",
                            proc = <function>},
                          line = 174,
                          step = 114}},
                      call = {
                        name = "typespec",
                        proc = <function>},
                      line = 174,
                      step = 114},
                    {
                      line = 174,
                      name = "IDENT",
                      value = "A"},
                    {
                      arg = {
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  line = 174,
                                  name = "UINTEGER",
                                  value = "0"}},
                              call = {
                                name = "constant constexpr uint",
                                obj = "constexpr uint",
                                proc = <function>},
                              line = 174,
                              step = 114},
                            {
                              arg = {
                                {
                                  line = 174,
                                  name = "UINTEGER",
                                  value = "2"}},
                              call = {
                                name = "constant constexpr uint",
                                obj = "constexpr uint",
                                proc = <function>},
                              line = 174,
                              step = 114},
                            {
                              arg = {
                                {
                                  line = 174,
                                  name = "UINTEGER",
                                  value = "1"}},
                              call = {
                                name = "constant constexpr uint",
                                obj = "constexpr uint",
                                proc = <function>},
                              line = 174,
                              step = 114}},
                          call = {
                            name = "structure",
                            proc = <function>},
                          line = 174,
                          step = 114},
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  line = 174,
                                  name = "UINTEGER",
                                  value = "3"}},
                              call = {
                                name = "constant constexpr uint",
                                obj = "constexpr uint",
                                proc = <function>},
                              line = 174,
                              step = 114},
                            {
                              arg = {
                                {
                                  line = 174,
                                  name = "UINTEGER",
                                  value = "1"}},
                              call = {
                                name = "constant constexpr uint",
                                obj = "constexpr uint",
                                proc = <function>},
                              line = 174,
                              step = 114},
                            {
                              arg = {
                                {
                                  line = 174,
                                  name = "UINTEGER",
                                  value = "1"}},
                              call = {
                                name = "constant constexpr uint",
                                obj = "constexpr uint",
                                proc = <function>},
                              line = 174,
                              step = 114}},
                          call = {
                            name = "structure",
                            proc = <function>},
                          line = 174,
                          step = 114},
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  line = 174,
                                  name = "UINTEGER",
                                  value = "4"}},
                              call = {
                                name = "constant constexpr uint",
                                obj = "constexpr uint",
                                proc = <function>},
                              line = 174,
                              step = 114},
                            {
                              arg = {
                                {
                                  line = 174,
                                  name = "UINTEGER",
                                  value = "0"}},
                              call = {
                                name = "constant constexpr uint",
                                obj = "constexpr uint",
                                proc = <function>},
                              line = 174,
                              step = 114},
                            {
                              arg = {
                                {
                                  line = 174,
                                  name = "UINTEGER",
                                  value = "1"}},
                              call = {
                                name = "constant constexpr uint",
                                obj = "constexpr uint",
                                proc = <function>},
                              line = 174,
                              step = 114}},
                          call = {
                            name = "structure",
                            proc = <function>},
                          line = 174,
                          step = 114},
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  line = 174,
                                  name = "UINTEGER",
                                  value = "1"}},
                              call = {
                                name = "constant constexpr uint",
                                obj = "constexpr uint",
                                proc = <function>},
                              line = 174,
                              step = 114},
                            {
                              arg = {
                                {
                                  line = 174,
                                  name = "UINTEGER",
                                  value = "5"}},
                              call = {
                                name = "constant constexpr uint",
                                obj = "constexpr uint",
                                proc = <function>},
                              line = 174,
                              step = 114},
                            {
                              arg = {
                                {
                                  line = 174,
                                  name = "UINTEGER",
                                  value = "2"}},
                              call = {
                                name = "constant constexpr uint",
                                obj = "constexpr uint",
                                proc = <function>},
                              line = 174,
                              step = 114}},
                          call = {
                            name = "structure",
                            proc = <function>},
                          line = 174,
                          step = 114}},
                      call = {
                        name = "structure",
                        proc = <function>},
                      line = 174,
                      step = 114}},
                  call = {
                    name = "vardef_assign",
                    proc = <function>},
                  line = 174,
                  step = 115}},
              call = {
                name = "definition 1",
                obj = 1,
                proc = <function>},
              line = 174,
              step = 116},
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {
                        {
                          line = 175,
                          name = "IDENT",
                          value = "printf"}},
                      call = {
                        name = "variable",
                        proc = <function>},
                      line = 175,
                      step = 116},
                    {
                      arg = {
                        {
                          line = 175,
                          name = "DQSTRING",
                          value = "Matrix %s:\\n"}},
                      call = {
                        name = "string_constant",
                        proc = <function>},
                      line = 175,
                      step = 116},
                    {
                      arg = {
                        {
                          line = 175,
                          name = "DQSTRING",
                          value = "A"}},
                      call = {
                        name = "string_constant",
                        proc = <function>},
                      line = 175,
                      step = 116}},
                  call = {
                    name = "operator ()",
                    obj = "()",
                    proc = <function>},
                  line = 175,
                  step = 116}},
              call = {
                name = "free_expression",
                proc = <function>},
              line = 175,
              step = 116},
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {
                        {
                          arg = {
                            {
                              line = 176,
                              name = "IDENT",
                              value = "printMatrix"}},
                          call = {
                            name = "variable",
                            proc = <function>},
                          line = 176,
                          step = 116},
                        {
                          arg = {
                            {
                              line = 176,
                              name = "UINTEGER",
                              value = "4"}},
                          call = {
                            name = "constant constexpr uint",
                            obj = "constexpr uint",
                            proc = <function>},
                          line = 176,
                          step = 116},
                        {
                          arg = {
                            {
                              line = 176,
                              name = "UINTEGER",
                              value = "3"}},
                          call = {
                            name = "constant constexpr uint",
                            obj = "constexpr uint",
                            proc = <function>},
                          line = 176,
                          step = 116}},
                      call = {
                        name = "operator_array []",
                        obj = "[]",
                        proc = <function>},
                      line = 176,
                      step = 116},
                    {
                      arg = {
                        {
                          line = 176,
                          name = "IDENT",
                          value = "A"}},
                      call = {
                        name = "variable",
                        proc = <function>},
                      line = 176,
                      step = 116}},
                  call = {
                    name = "operator ()",
                    obj = "()",
                    proc = <function>},
                  line = 176,
                  step = 116}},
              call = {
                name = "free_expression",
                proc = <function>},
              line = 176,
              step = 116},
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {
                        {
                          line = 177,
                          name = "IDENT",
                          value = "printf"}},
                      call = {
                        name = "variable",
                        proc = <function>},
                      line = 177,
                      step = 116},
                    {
                      arg = {
                        {
                          line = 177,
                          name = "DQSTRING",
                          value = "\\n"}},
                      call = {
                        name = "string_constant",
                        proc = <function>},
                      line = 177,
                      step = 116}},
                  call = {
                    name = "operator ()",
                    obj = "()",
                    proc = <function>},
                  line = 177,
                  step = 116}},
              call = {
                name = "free_expression",
                proc = <function>},
              line = 177,
              step = 116},
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  line = 183,
                                  name = "IDENT",
                                  value = "Matrix"}},
                              call = {
                                name = "typehdr {const=false}",
                                obj = {
                                  const = false},
                                proc = <function>},
                              line = 183,
                              step = 116},
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          line = 183,
                                          name = "IDENT",
                                          value = "double"}},
                                      call = {
                                        name = "typehdr {const=false}",
                                        obj = {
                                          const = false},
                                        proc = <function>},
                                      line = 183,
                                      step = 116},
                                    {
                                      arg = {
                                        {
                                          line = 183,
                                          name = "UINTEGER",
                                          value = "3"},
                                        {
                                          arg = {
                                            {
                                              line = 183,
                                              name = "UINTEGER",
                                              value = "4"}},
                                          call = {
                                            name = "generic_instance_dimension",
                                            proc = <function>},
                                          line = 183,
                                          step = 116}},
                                      call = {
                                        name = "generic_instance_dimension",
                                        proc = <function>},
                                      line = 183,
                                      step = 116}},
                                  call = {
                                    name = "generic_instance_type",
                                    proc = <function>},
                                  line = 183,
                                  step = 116}},
                              call = {
                                name = "generic_instance",
                                proc = <function>},
                              line = 183,
                              step = 116}},
                          call = {
                            name = "typegen_generic",
                            proc = <function>},
                          line = 183,
                          step = 116}},
                      call = {
                        name = "typespec",
                        proc = <function>},
                      line = 183,
                      step = 116},
                    {
                      line = 183,
                      name = "IDENT",
                      value = "B"},
                    {
                      arg = {
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  line = 183,
                                  name = "UINTEGER",
                                  value = "1"}},
                              call = {
                                name = "constant constexpr uint",
                                obj = "constexpr uint",
                                proc = <function>},
                              line = 183,
                              step = 116},
                            {
                              arg = {
                                {
                                  line = 183,
                                  name = "UINTEGER",
                                  value = "2"}},
                              call = {
                                name = "constant constexpr uint",
                                obj = "constexpr uint",
                                proc = <function>},
                              line = 183,
                              step = 116},
                            {
                              arg = {
                                {
                                  line = 183,
                                  name = "UINTEGER",
                                  value = "0"}},
                              call = {
                                name = "constant constexpr uint",
                                obj = "constexpr uint",
                                proc = <function>},
                              line = 183,
                              step = 116},
                            {
                              arg = {
                                {
                                  line = 183,
                                  name = "UINTEGER",
                                  value = "3"}},
                              call = {
                                name = "constant constexpr uint",
                                obj = "constexpr uint",
                                proc = <function>},
                              line = 183,
                              step = 116}},
                          call = {
                            name = "structure",
                            proc = <function>},
                          line = 183,
                          step = 116},
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  line = 183,
                                  name = "UINTEGER",
                                  value = "4"}},
                              call = {
                                name = "constant constexpr uint",
                                obj = "constexpr uint",
                                proc = <function>},
                              line = 183,
                              step = 116},
                            {
                              arg = {
                                {
                                  line = 183,
                                  name = "UINTEGER",
                                  value = "0"}},
                              call = {
                                name = "constant constexpr uint",
                                obj = "constexpr uint",
                                proc = <function>},
                              line = 183,
                              step = 116},
                            {
                              arg = {
                                {
                                  line = 183,
                                  name = "UINTEGER",
                                  value = "5"}},
                              call = {
                                name = "constant constexpr uint",
                                obj = "constexpr uint",
                                proc = <function>},
                              line = 183,
                              step = 116},
                            {
                              arg = {
                                {
                                  line = 183,
                                  name = "UINTEGER",
                                  value = "2"}},
                              call = {
                                name = "constant constexpr uint",
                                obj = "constexpr uint",
                                proc = <function>},
                              line = 183,
                              step = 116}},
                          call = {
                            name = "structure",
                            proc = <function>},
                          line = 183,
                          step = 116},
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  line = 183,
                                  name = "UINTEGER",
                                  value = "3"}},
                              call = {
                                name = "constant constexpr uint",
                                obj = "constexpr uint",
                                proc = <function>},
                              line = 183,
                              step = 116},
                            {
                              arg = {
                                {
                                  line = 183,
                                  name = "UINTEGER",
                                  value = "3"}},
                              call = {
                                name = "constant constexpr uint",
                                obj = "constexpr uint",
                                proc = <function>},
                              line = 183,
                              step = 116},
                            {
                              arg = {
                                {
                                  line = 183,
                                  name = "UINTEGER",
                                  value = "1"}},
                              call = {
                                name = "constant constexpr uint",
                                obj = "constexpr uint",
                                proc = <function>},
                              line = 183,
                              step = 116},
                            {
                              arg = {
                                {
                                  line = 183,
                                  name = "UINTEGER",
                                  value = "1"}},
                              call = {
                                name = "constant constexpr uint",
                                obj = "constexpr uint",
                                proc = <function>},
                              line = 183,
                              step = 116}},
                          call = {
                            name = "structure",
                            proc = <function>},
                          line = 183,
                          step = 116}},
                      call = {
                        name = "structure",
                        proc = <function>},
                      line = 183,
                      step = 116}},
                  call = {
                    name = "vardef_assign",
                    proc = <function>},
                  line = 183,
                  step = 117}},
              call = {
                name = "definition 1",
                obj = 1,
                proc = <function>},
              line = 183,
              step = 118},
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {
                        {
                          line = 184,
                          name = "IDENT",
                          value = "printf"}},
                      call = {
                        name = "variable",
                        proc = <function>},
                      line = 184,
                      step = 118},
                    {
                      arg = {
                        {
                          line = 184,
                          name = "DQSTRING",
                          value = "Matrix %s:\\n"}},
                      call = {
                        name = "string_constant",
                        proc = <function>},
                      line = 184,
                      step = 118},
                    {
                      arg = {
                        {
                          line = 184,
                          name = "DQSTRING",
                          value = "B"}},
                      call = {
                        name = "string_constant",
                        proc = <function>},
                      line = 184,
                      step = 118}},
                  call = {
                    name = "operator ()",
                    obj = "()",
                    proc = <function>},
                  line = 184,
                  step = 118}},
              call = {
                name = "free_expression",
                proc = <function>},
              line = 184,
              step = 118},
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {
                        {
                          arg = {
                            {
                              line = 185,
                              name = "IDENT",
                              value = "printMatrix"}},
                          call = {
                            name = "variable",
                            proc = <function>},
                          line = 185,
                          step = 118},
                        {
                          arg = {
                            {
                              line = 185,
                              name = "UINTEGER",
                              value = "3"}},
                          call = {
                            name = "constant constexpr uint",
                            obj = "constexpr uint",
                            proc = <function>},
                          line = 185,
                          step = 118},
                        {
                          arg = {
                            {
                              line = 185,
                              name = "UINTEGER",
                              value = "4"}},
                          call = {
                            name = "constant constexpr uint",
                            obj = "constexpr uint",
                            proc = <function>},
                          line = 185,
                          step = 118}},
                      call = {
                        name = "operator_array []",
                        obj = "[]",
                        proc = <function>},
                      line = 185,
                      step = 118},
                    {
                      arg = {
                        {
                          line = 185,
                          name = "IDENT",
                          value = "B"}},
                      call = {
                        name = "variable",
                        proc = <function>},
                      line = 185,
                      step = 118}},
                  call = {
                    name = "operator ()",
                    obj = "()",
                    proc = <function>},
                  line = 185,
                  step = 118}},
              call = {
                name = "free_expression",
                proc = <function>},
              line = 185,
              step = 118},
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {
                        {
                          line = 186,
                          name = "IDENT",
                          value = "printf"}},
                      call = {
                        name = "variable",
                        proc = <function>},
                      line = 186,
                      step = 118},
                    {
                      arg = {
                        {
                          line = 186,
                          name = "DQSTRING",
                          value = "\\n"}},
                      call = {
                        name = "string_constant",
                        proc = <function>},
                      line = 186,
                      step = 118}},
                  call = {
                    name = "operator ()",
                    obj = "()",
                    proc = <function>},
                  line = 186,
                  step = 118}},
              call = {
                name = "free_expression",
                proc = <function>},
              line = 186,
              step = 118},
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  line = 193,
                                  name = "IDENT",
                                  value = "Matrix"}},
                              call = {
                                name = "typehdr {const=false}",
                                obj = {
                                  const = false},
                                proc = <function>},
                              line = 193,
                              step = 118},
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          line = 193,
                                          name = "IDENT",
                                          value = "double"}},
                                      call = {
                                        name = "typehdr {const=false}",
                                        obj = {
                                          const = false},
                                        proc = <function>},
                                      line = 193,
                                      step = 118},
                                    {
                                      arg = {
                                        {
                                          line = 193,
                                          name = "UINTEGER",
                                          value = "4"},
                                        {
                                          arg = {
                                            {
                                              line = 193,
                                              name = "UINTEGER",
                                              value = "4"}},
                                          call = {
                                            name = "generic_instance_dimension",
                                            proc = <function>},
                                          line = 193,
                                          step = 118}},
                                      call = {
                                        name = "generic_instance_dimension",
                                        proc = <function>},
                                      line = 193,
                                      step = 118}},
                                  call = {
                                    name = "generic_instance_type",
                                    proc = <function>},
                                  line = 193,
                                  step = 118}},
                              call = {
                                name = "generic_instance",
                                proc = <function>},
                              line = 193,
                              step = 118}},
                          call = {
                            name = "typegen_generic",
                            proc = <function>},
                          line = 193,
                          step = 118}},
                      call = {
                        name = "typespec",
                        proc = <function>},
                      line = 193,
                      step = 118},
                    {
                      line = 193,
                      name = "IDENT",
                      value = "C"},
                    {
                      arg = {
                        {
                          arg = {
                            {
                              line = 193,
                              name = "IDENT",
                              value = "A"}},
                          call = {
                            name = "variable",
                            proc = <function>},
                          line = 193,
                          step = 118},
                        {
                          arg = {
                            {
                              line = 193,
                              name = "IDENT",
                              value = "B"}},
                          call = {
                            name = "variable",
                            proc = <function>},
                          line = 193,
                          step = 118}},
                      call = {
                        name = "binop *",
                        obj = "*",
                        proc = <function>},
                      line = 193,
                      step = 118}},
                  call = {
                    name = "vardef_assign",
                    proc = <function>},
                  line = 193,
                  step = 119}},
              call = {
                name = "definition 1",
                obj = 1,
                proc = <function>},
              line = 193,
              step = 120},
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {
                        {
                          line = 194,
                          name = "IDENT",
                          value = "printf"}},
                      call = {
                        name = "variable",
                        proc = <function>},
                      line = 194,
                      step = 120},
                    {
                      arg = {
                        {
                          line = 194,
                          name = "DQSTRING",
                          value = "Matrix %s:\\n"}},
                      call = {
                        name = "string_constant",
                        proc = <function>},
                      line = 194,
                      step = 120},
                    {
                      arg = {
                        {
                          line = 194,
                          name = "DQSTRING",
                          value = "A*B"}},
                      call = {
                        name = "string_constant",
                        proc = <function>},
                      line = 194,
                      step = 120}},
                  call = {
                    name = "operator ()",
                    obj = "()",
                    proc = <function>},
                  line = 194,
                  step = 120}},
              call = {
                name = "free_expression",
                proc = <function>},
              line = 194,
              step = 120},
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {
                        {
                          arg = {
                            {
                              line = 195,
                              name = "IDENT",
                              value = "printMatrix"}},
                          call = {
                            name = "variable",
                            proc = <function>},
                          line = 195,
                          step = 120},
                        {
                          arg = {
                            {
                              line = 195,
                              name = "UINTEGER",
                              value = "4"}},
                          call = {
                            name = "constant constexpr uint",
                            obj = "constexpr uint",
                            proc = <function>},
                          line = 195,
                          step = 120},
                        {
                          arg = {
                            {
                              line = 195,
                              name = "UINTEGER",
                              value = "4"}},
                          call = {
                            name = "constant constexpr uint",
                            obj = "constexpr uint",
                            proc = <function>},
                          line = 195,
                          step = 120}},
                      call = {
                        name = "operator_array []",
                        obj = "[]",
                        proc = <function>},
                      line = 195,
                      step = 120},
                    {
                      arg = {
                        {
                          line = 195,
                          name = "IDENT",
                          value = "C"}},
                      call = {
                        name = "variable",
                        proc = <function>},
                      line = 195,
                      step = 120}},
                  call = {
                    name = "operator ()",
                    obj = "()",
                    proc = <function>},
                  line = 195,
                  step = 120}},
              call = {
                name = "free_expression",
                proc = <function>},
              line = 195,
              step = 120},
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {
                        {
                          line = 196,
                          name = "IDENT",
                          value = "printf"}},
                      call = {
                        name = "variable",
                        proc = <function>},
                      line = 196,
                      step = 120},
                    {
                      arg = {
                        {
                          line = 196,
                          name = "DQSTRING",
                          value = "\\n"}},
                      call = {
                        name = "string_constant",
                        proc = <function>},
                      line = 196,
                      step = 120}},
                  call = {
                    name = "operator ()",
                    obj = "()",
                    proc = <function>},
                  line = 196,
                  step = 120}},
              call = {
                name = "free_expression",
                proc = <function>},
              line = 196,
              step = 120},
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  line = 202,
                                  name = "IDENT",
                                  value = "Matrix"}},
                              call = {
                                name = "typehdr {const=false}",
                                obj = {
                                  const = false},
                                proc = <function>},
                              line = 202,
                              step = 120},
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          line = 202,
                                          name = "IDENT",
                                          value = "double"}},
                                      call = {
                                        name = "typehdr {const=false}",
                                        obj = {
                                          const = false},
                                        proc = <function>},
                                      line = 202,
                                      step = 120},
                                    {
                                      arg = {
                                        {
                                          line = 202,
                                          name = "UINTEGER",
                                          value = "3"},
                                        {
                                          arg = {
                                            {
                                              line = 202,
                                              name = "UINTEGER",
                                              value = "3"}},
                                          call = {
                                            name = "generic_instance_dimension",
                                            proc = <function>},
                                          line = 202,
                                          step = 120}},
                                      call = {
                                        name = "generic_instance_dimension",
                                        proc = <function>},
                                      line = 202,
                                      step = 120}},
                                  call = {
                                    name = "generic_instance_type",
                                    proc = <function>},
                                  line = 202,
                                  step = 120}},
                              call = {
                                name = "generic_instance",
                                proc = <function>},
                              line = 202,
                              step = 120}},
                          call = {
                            name = "typegen_generic",
                            proc = <function>},
                          line = 202,
                          step = 120}},
                      call = {
                        name = "typespec",
                        proc = <function>},
                      line = 202,
                      step = 120},
                    {
                      line = 202,
                      name = "IDENT",
                      value = "D"},
                    {
                      arg = {
                        {
                          arg = {
                            {
                              line = 202,
                              name = "IDENT",
                              value = "B"}},
                          call = {
                            name = "variable",
                            proc = <function>},
                          line = 202,
                          step = 120},
                        {
                          arg = {
                            {
                              line = 202,
                              name = "IDENT",
                              value = "A"}},
                          call = {
                            name = "variable",
                            proc = <function>},
                          line = 202,
                          step = 120}},
                      call = {
                        name = "binop *",
                        obj = "*",
                        proc = <function>},
                      line = 202,
                      step = 120}},
                  call = {
                    name = "vardef_assign",
                    proc = <function>},
                  line = 202,
                  step = 121}},
              call = {
                name = "definition 1",
                obj = 1,
                proc = <function>},
              line = 202,
              step = 122},
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {
                        {
                          line = 203,
                          name = "IDENT",
                          value = "printf"}},
                      call = {
                        name = "variable",
                        proc = <function>},
                      line = 203,
                      step = 122},
                    {
                      arg = {
                        {
                          line = 203,
                          name = "DQSTRING",
                          value = "Matrix %s:\\n"}},
                      call = {
                        name = "string_constant",
                        proc = <function>},
                      line = 203,
                      step = 122},
                    {
                      arg = {
                        {
                          line = 203,
                          name = "DQSTRING",
                          value = "B*A"}},
                      call = {
                        name = "string_constant",
                        proc = <function>},
                      line = 203,
                      step = 122}},
                  call = {
                    name = "operator ()",
                    obj = "()",
                    proc = <function>},
                  line = 203,
                  step = 122}},
              call = {
                name = "free_expression",
                proc = <function>},
              line = 203,
              step = 122},
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {
                        {
                          arg = {
                            {
                              line = 204,
                              name = "IDENT",
                              value = "printMatrix"}},
                          call = {
                            name = "variable",
                            proc = <function>},
                          line = 204,
                          step = 122},
                        {
                          arg = {
                            {
                              line = 204,
                              name = "UINTEGER",
                              value = "3"}},
                          call = {
                            name = "constant constexpr uint",
                            obj = "constexpr uint",
                            proc = <function>},
                          line = 204,
                          step = 122},
                        {
                          arg = {
                            {
                              line = 204,
                              name = "UINTEGER",
                              value = "3"}},
                          call = {
                            name = "constant constexpr uint",
                            obj = "constexpr uint",
                            proc = <function>},
                          line = 204,
                          step = 122}},
                      call = {
                        name = "operator_array []",
                        obj = "[]",
                        proc = <function>},
                      line = 204,
                      step = 122},
                    {
                      arg = {
                        {
                          line = 204,
                          name = "IDENT",
                          value = "D"}},
                      call = {
                        name = "variable",
                        proc = <function>},
                      line = 204,
                      step = 122}},
                  call = {
                    name = "operator ()",
                    obj = "()",
                    proc = <function>},
                  line = 204,
                  step = 122}},
              call = {
                name = "free_expression",
                proc = <function>},
              line = 204,
              step = 122},
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {
                        {
                          line = 205,
                          name = "IDENT",
                          value = "printf"}},
                      call = {
                        name = "variable",
                        proc = <function>},
                      line = 205,
                      step = 122},
                    {
                      arg = {
                        {
                          line = 205,
                          name = "DQSTRING",
                          value = "\\n"}},
                      call = {
                        name = "string_constant",
                        proc = <function>},
                      line = 205,
                      step = 122}},
                  call = {
                    name = "operator ()",
                    obj = "()",
                    proc = <function>},
                  line = 205,
                  step = 122}},
              call = {
                name = "free_expression",
                proc = <function>},
              line = 205,
              step = 122}},
          call = {
            name = "codeblock",
            proc = <function>},
          line = 205,
          scope = {
            114,
            123}}},
      call = {
        name = "main_procdef",
        proc = <function>},
      line = 205,
      step = 123}},
  call = {
    name = "program",
    proc = <function>},
  line = 205,
  step = 123}
