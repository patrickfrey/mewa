Shift token "extern" at line 1 in state 1, goto 4
Shift token DQSTRING = "C" at line 1 in state 4, goto 23
Shift token "procedure" at line 1 in state 23, goto 43
Shift token IDENT = "printf" at line 1 in state 43, goto 57
Shift token '(' at line 1 in state 57, goto 101
Shift token "const" at line 1 in state 101, goto 41
Shift token IDENT = "byte" at line 1 in state 41, goto 35
Reduce #1 to typename by token '^' at line 1 in state 35, goto 55
Shift token '^' at line 1 in state 55, goto 99
Reduce #3 to typespec by token ',' at line 1 in state 99, call typespec "const^", goto 174
Shift token ',' at line 1 in state 174, goto 227
Shift token IDENT = "int" at line 1 in state 227, goto 35
Reduce #1 to typename by token ')' at line 1 in state 35, goto 39
Reduce #1 to typespec by token ')' at line 1 in state 39, call typespec "", goto 174
Reduce #1 to externparameters by token ')' at line 1 in state 174, goto 240
Reduce #3 to externparameters by token ')' at line 1 in state 240, goto 173
Reduce #1 to externparameterlist by token ')' at line 1 in state 173, call extern_paramdeflist, goto 172
Shift token ')' at line 1 in state 172, goto 226
Shift token ';' at line 1 in state 226, goto 239
Reduce #8 to externdefinition by token "private" at line 3 in state 239, call extern_procdef, goto 3
Reduce #0 to externlist by token "private" at line 3 in state 3, goto 22
Reduce #2 to externlist by token "private" at line 3 in state 22, goto 2
Shift token "private" at line 3 in state 2, goto 19
Reduce #1 to linkage by token "procedure" at line 3 in state 19, call linkage {linkage="internal",attributes="#0 nounwind"}, goto 12
Shift token "procedure" at line 3 in state 12, goto 32
Shift token IDENT = "swap" at line 3 in state 32, goto 46
Shift token '(' at line 3 in state 46, goto 85
Shift token IDENT = "int" at line 3 in state 85, goto 35
Reduce #1 to typename by token '&' at line 3 in state 35, goto 39
Shift token '&' at line 3 in state 39, goto 52
Reduce #2 to typespec by token IDENT = "a" at line 3 in state 52, call typespec "&", goto 155
Shift token IDENT = "a" at line 3 in state 155, goto 218
Reduce #2 to paramdecl by token ',' at line 3 in state 218, call paramdef, goto 158
Shift token ',' at line 3 in state 158, goto 220
Shift token IDENT = "int" at line 3 in state 220, goto 35
Reduce #1 to typename by token '&' at line 3 in state 35, goto 39
Shift token '&' at line 3 in state 39, goto 52
Reduce #2 to typespec by token IDENT = "b" at line 3 in state 52, call typespec "&", goto 155
Shift token IDENT = "b" at line 3 in state 155, goto 218
Reduce #2 to paramdecl by token ')' at line 3 in state 218, call paramdef, goto 158
Reduce #1 to parameters by token ')' at line 3 in state 158, goto 234
Reduce #3 to parameters by token ')' at line 3 in state 234, goto 157
Reduce #1 to parameterlist by token ')' at line 3 in state 157, call paramdeflist, goto 156
Shift token ')' at line 3 in state 156, goto 219
Shift token '{' at line 4 in state 219, goto 233
Shift token "var" at line 5 in state 233, goto 21
Shift token IDENT = "int" at line 5 in state 21, goto 35
Reduce #1 to typename by token IDENT = "tmp" at line 5 in state 35, goto 39
Reduce #1 to typespec by token IDENT = "tmp" at line 5 in state 39, call typespec "", goto 40
Shift token IDENT = "tmp" at line 5 in state 40, goto 54
Shift token '=' at line 5 in state 54, goto 96
Shift token IDENT = "a" at line 5 in state 96, goto 66
Reduce #1 to expression by token ';' at line 5 in state 66, call variable, goto 167
Reduce #5 to variabledefinition by token ';' at line 5 in state 167, call vardef_assign, goto 62
Shift token ';' at line 5 in state 62, goto 105
Reduce #2 to statement by token IDENT = "a" at line 6 in state 105, call definition, goto 61
Shift token IDENT = "a" at line 6 in state 61, goto 66
Reduce #1 to expression by token '=' at line 6 in state 66, call variable, goto 63
Shift token '=' at line 6 in state 63, goto 112
Shift token IDENT = "b" at line 6 in state 112, goto 66
Reduce #1 to expression by token ';' at line 6 in state 66, call variable, goto 182
Reduce #3 to expression by token ';' at line 6 in state 182, call operator "=", goto 63
Shift token ';' at line 6 in state 63, goto 108
Reduce #2 to statement by token IDENT = "b" at line 7 in state 108, call free_expression, goto 61
Shift token IDENT = "b" at line 7 in state 61, goto 66
Reduce #1 to expression by token '=' at line 7 in state 66, call variable, goto 63
Shift token '=' at line 7 in state 63, goto 112
Shift token IDENT = "tmp" at line 7 in state 112, goto 66
Reduce #1 to expression by token ';' at line 7 in state 66, call variable, goto 182
Reduce #3 to expression by token ';' at line 7 in state 182, call operator "=", goto 63
Shift token ';' at line 7 in state 63, goto 108
Reduce #2 to statement by token '}' at line 8 in state 108, call free_expression, goto 61
Reduce #0 to statementlist by token '}' at line 8 in state 61, goto 104
Reduce #2 to statementlist by token '}' at line 8 in state 104, call statement, goto 104
Reduce #2 to statementlist by token '}' at line 8 in state 104, call statement, goto 104
Reduce #2 to statementlist by token '}' at line 8 in state 104, call statement, goto 244
Shift token '}' at line 8 in state 244, goto 251
Reduce #6 to callablebody by token "private" at line 10 in state 251, call callablebody, goto 84
Reduce #4 to functiondefinition by token "private" at line 10 in state 84, call procdef, goto 13
Reduce #1 to definition by token "private" at line 10 in state 13, call definition, goto 7
Shift token "private" at line 10 in state 7, goto 19
Reduce #1 to linkage by token "function" at line 10 in state 19, call linkage {linkage="internal",attributes="#0 nounwind"}, goto 12
Shift token "function" at line 10 in state 12, goto 31
Shift token IDENT = "int" at line 10 in state 31, goto 35
Reduce #1 to typename by token IDENT = "fibonacci" at line 10 in state 35, goto 39
Reduce #1 to typespec by token IDENT = "fibonacci" at line 10 in state 39, call typespec "", goto 45
Shift token IDENT = "fibonacci" at line 10 in state 45, goto 83
Shift token '(' at line 10 in state 83, goto 85
Shift token IDENT = "int" at line 10 in state 85, goto 35
Reduce #1 to typename by token IDENT = "n" at line 10 in state 35, goto 39
Reduce #1 to typespec by token IDENT = "n" at line 10 in state 39, call typespec "", goto 155
Shift token IDENT = "n" at line 10 in state 155, goto 218
Reduce #2 to paramdecl by token ')' at line 10 in state 218, call paramdef, goto 158
Reduce #1 to parameters by token ')' at line 10 in state 158, goto 157
Reduce #1 to parameterlist by token ')' at line 10 in state 157, call paramdeflist, goto 156
Shift token ')' at line 10 in state 156, goto 219
Shift token '{' at line 11 in state 219, goto 233
Shift token "var" at line 12 in state 233, goto 21
Shift token IDENT = "int" at line 12 in state 21, goto 35
Reduce #1 to typename by token IDENT = "i1" at line 12 in state 35, goto 39
Reduce #1 to typespec by token IDENT = "i1" at line 12 in state 39, call typespec "", goto 40
Shift token IDENT = "i1" at line 12 in state 40, goto 54
Shift token '=' at line 12 in state 54, goto 96
Shift token CARDINAL = "0" at line 12 in state 96, goto 69
Reduce #1 to expression by token ';' at line 12 in state 69, call constant "constexpr uint", goto 167
Reduce #5 to variabledefinition by token ';' at line 12 in state 167, call vardef_assign, goto 62
Shift token ';' at line 12 in state 62, goto 105
Reduce #2 to statement by token "var" at line 13 in state 105, call definition, goto 61
Shift token "var" at line 13 in state 61, goto 21
Shift token IDENT = "int" at line 13 in state 21, goto 35
Reduce #1 to typename by token IDENT = "i2" at line 13 in state 35, goto 39
Reduce #1 to typespec by token IDENT = "i2" at line 13 in state 39, call typespec "", goto 40
Shift token IDENT = "i2" at line 13 in state 40, goto 54
Shift token '=' at line 13 in state 54, goto 96
Shift token CARDINAL = "1" at line 13 in state 96, goto 69
Reduce #1 to expression by token ';' at line 13 in state 69, call constant "constexpr uint", goto 167
Reduce #5 to variabledefinition by token ';' at line 13 in state 167, call vardef_assign, goto 62
Shift token ';' at line 13 in state 62, goto 105
Reduce #2 to statement by token "var" at line 14 in state 105, call definition, goto 61
Shift token "var" at line 14 in state 61, goto 21
Shift token IDENT = "int" at line 14 in state 21, goto 35
Reduce #1 to typename by token IDENT = "i" at line 14 in state 35, goto 39
Reduce #1 to typespec by token IDENT = "i" at line 14 in state 39, call typespec "", goto 40
Shift token IDENT = "i" at line 14 in state 40, goto 54
Shift token '=' at line 14 in state 54, goto 96
Shift token CARDINAL = "0" at line 14 in state 96, goto 69
Reduce #1 to expression by token ';' at line 14 in state 69, call constant "constexpr uint", goto 167
Reduce #5 to variabledefinition by token ';' at line 14 in state 167, call vardef_assign, goto 62
Shift token ';' at line 14 in state 62, goto 105
Reduce #2 to statement by token "while" at line 15 in state 105, call definition, goto 61
Shift token "while" at line 15 in state 61, goto 77
Shift token '(' at line 15 in state 77, goto 148
Shift token IDENT = "i" at line 15 in state 148, goto 66
Reduce #1 to expression by token '<' at line 15 in state 66, call variable, goto 217
Shift token '<' at line 15 in state 217, goto 131
Shift token IDENT = "n" at line 15 in state 131, goto 66
Reduce #1 to expression by token ')' at line 15 in state 66, call variable, goto 201
Reduce #3 to expression by token ')' at line 15 in state 201, call operator "<", goto 217
Shift token ')' at line 15 in state 217, goto 232
Shift token '{' at line 16 in state 232, goto 243
Shift token IDENT = "i1" at line 17 in state 243, goto 66
Reduce #1 to expression by token '=' at line 17 in state 66, call variable, goto 63
Shift token '=' at line 17 in state 63, goto 112
Shift token IDENT = "i2" at line 17 in state 112, goto 66
Reduce #1 to expression by token '+' at line 17 in state 66, call variable, goto 182
Shift token '+' at line 17 in state 182, goto 134
Shift token IDENT = "i1" at line 17 in state 134, goto 66
Reduce #1 to expression by token ';' at line 17 in state 66, call variable, goto 204
Reduce #3 to expression by token ';' at line 17 in state 204, call operator "+", goto 182
Reduce #3 to expression by token ';' at line 17 in state 182, call operator "=", goto 63
Shift token ';' at line 17 in state 63, goto 108
Reduce #2 to statement by token IDENT = "swap" at line 18 in state 108, call free_expression, goto 61
Shift token IDENT = "swap" at line 18 in state 61, goto 66
Reduce #1 to expression by token '(' at line 18 in state 66, call variable, goto 63
Shift token '(' at line 18 in state 63, goto 107
Shift token IDENT = "i1" at line 18 in state 107, goto 66
Reduce #1 to expression by token ',' at line 18 in state 66, call variable, goto 176
Shift token ',' at line 18 in state 176, goto 228
Shift token IDENT = "i2" at line 18 in state 228, goto 66
Reduce #1 to expression by token ')' at line 18 in state 66, call variable, goto 176
Reduce #1 to expressionlist by token ')' at line 18 in state 176, goto 241
Reduce #3 to expressionlist by token ')' at line 18 in state 241, goto 177
Shift token ')' at line 18 in state 177, goto 229
Reduce #4 to expression by token ';' at line 18 in state 229, call operator "()", goto 63
Shift token ';' at line 18 in state 63, goto 108
Reduce #2 to statement by token IDENT = "i" at line 19 in state 108, call free_expression, goto 61
Shift token IDENT = "i" at line 19 in state 61, goto 66
Reduce #1 to expression by token "+=" at line 19 in state 66, call variable, goto 63
Shift token "+=" at line 19 in state 63, goto 114
Shift token CARDINAL = "1" at line 19 in state 114, goto 69
Reduce #1 to expression by token ';' at line 19 in state 69, call constant "constexpr uint", goto 184
Reduce #3 to expression by token ';' at line 19 in state 184, call assign_operator "+", goto 63
Shift token ';' at line 19 in state 63, goto 108
Reduce #2 to statement by token '}' at line 20 in state 108, call free_expression, goto 61
Reduce #0 to statementlist by token '}' at line 20 in state 61, goto 104
Reduce #2 to statementlist by token '}' at line 20 in state 104, call statement, goto 104
Reduce #2 to statementlist by token '}' at line 20 in state 104, call statement, goto 104
Reduce #2 to statementlist by token '}' at line 20 in state 104, call statement, goto 250
Shift token '}' at line 20 in state 250, goto 255
Reduce #7 to statement by token "return" at line 21 in state 255, call conditional_while, goto 61
Shift token "return" at line 21 in state 61, goto 75
Shift token IDENT = "i2" at line 21 in state 75, goto 66
Reduce #1 to expression by token ';' at line 21 in state 66, call variable, goto 146
Shift token ';' at line 21 in state 146, goto 215
Reduce #3 to statement by token '}' at line 22 in state 215, call return_value, goto 61
Reduce #0 to statementlist by token '}' at line 22 in state 61, goto 104
Reduce #2 to statementlist by token '}' at line 22 in state 104, call statement, goto 104
Reduce #2 to statementlist by token '}' at line 22 in state 104, call statement, goto 104
Reduce #2 to statementlist by token '}' at line 22 in state 104, call statement, goto 104
Reduce #2 to statementlist by token '}' at line 22 in state 104, call statement, goto 104
Reduce #2 to statementlist by token '}' at line 22 in state 104, call statement, goto 244
Shift token '}' at line 22 in state 244, goto 251
Reduce #6 to callablebody by token "main" at line 24 in state 251, call callablebody, goto 154
Reduce #5 to functiondefinition by token "main" at line 24 in state 154, call funcdef, goto 13
Reduce #1 to definition by token "main" at line 24 in state 13, call definition, goto 7
Reduce #0 to definitionlist by token "main" at line 24 in state 7, goto 26
Reduce #2 to definitionlist by token "main" at line 24 in state 26, goto 26
Reduce #2 to definitionlist by token "main" at line 24 in state 26, goto 5
Shift token "main" at line 24 in state 5, goto 25
Shift token '{' at line 25 in state 25, goto 44
Shift token "var" at line 26 in state 44, goto 21
Shift token IDENT = "int" at line 26 in state 21, goto 35
Reduce #1 to typename by token IDENT = "val" at line 26 in state 35, goto 39
Reduce #1 to typespec by token IDENT = "val" at line 26 in state 39, call typespec "", goto 40
Shift token IDENT = "val" at line 26 in state 40, goto 54
Shift token '=' at line 26 in state 54, goto 96
Shift token IDENT = "fibonacci" at line 26 in state 96, goto 66
Reduce #1 to expression by token '(' at line 26 in state 66, call variable, goto 167
Shift token '(' at line 26 in state 167, goto 107
Shift token CARDINAL = "20" at line 26 in state 107, goto 69
Reduce #1 to expression by token ')' at line 26 in state 69, call constant "constexpr uint", goto 176
Reduce #1 to expressionlist by token ')' at line 26 in state 176, goto 177
Shift token ')' at line 26 in state 177, goto 229
Reduce #4 to expression by token ';' at line 26 in state 229, call operator "()", goto 167
Reduce #5 to variabledefinition by token ';' at line 26 in state 167, call vardef_assign, goto 62
Shift token ';' at line 26 in state 62, goto 105
Reduce #2 to statement by token IDENT = "printf" at line 27 in state 105, call definition, goto 61
Shift token IDENT = "printf" at line 27 in state 61, goto 66
Reduce #1 to expression by token '(' at line 27 in state 66, call variable, goto 63
Shift token '(' at line 27 in state 63, goto 107
Shift token DQSTRING = "Result: %d\n" at line 27 in state 107, goto 67
Reduce #1 to expression by token ',' at line 27 in state 67, call string_constant "constexpr float", goto 176
Shift token ',' at line 27 in state 176, goto 228
Shift token IDENT = "val" at line 27 in state 228, goto 66
Reduce #1 to expression by token ')' at line 27 in state 66, call variable, goto 176
Reduce #1 to expressionlist by token ')' at line 27 in state 176, goto 241
Reduce #3 to expressionlist by token ')' at line 27 in state 241, goto 177
Shift token ')' at line 27 in state 177, goto 229
Reduce #4 to expression by token ';' at line 27 in state 229, call operator "()", goto 63
Shift token ';' at line 27 in state 63, goto 108
Reduce #2 to statement by token '}' at line 28 in state 108, call free_expression, goto 61
Reduce #0 to statementlist by token '}' at line 28 in state 61, goto 104
Reduce #2 to statementlist by token '}' at line 28 in state 104, call statement, goto 104
Reduce #2 to statementlist by token '}' at line 28 in state 104, call statement, goto 60
Shift token '}' at line 28 in state 60, goto 103
Accept
Calling Lua function: program
Lua call result [1]
{
  arg = {
    {
      arg = {
        {
          line = 1,
          name = "DQSTRING",
          value = "C"},
        {
          line = 1,
          name = "IDENT",
          value = "printf"},
        {
          arg = {
            {
              arg = {
                {
                  line = 1,
                  name = "IDENT",
                  value = "byte"}},
              call = {
                name = "typespec const^",
                obj = "const^",
                proc = <function>},
              line = 1,
              step = 0},
            {
              arg = {
                {
                  line = 1,
                  name = "IDENT",
                  value = "int"}},
              call = {
                name = "typespec ",
                obj = "",
                proc = <function>},
              line = 1,
              step = 0}},
          call = {
            name = "extern_paramdeflist",
            proc = <function>},
          line = 1,
          step = 0}},
      call = {
        name = "extern_procdef",
        proc = <function>},
      line = 1,
      step = 0},
    {
      arg = {
        {
          arg = {
            {
              arg = {},
              call = {
                name = "linkage {linkage="internal",attributes="#0 nounwind"}",
                obj = {
                  attributes = "#0 nounwind",
                  linkage = "internal"},
                proc = <function>},
              line = 1,
              step = 0},
            {
              line = 3,
              name = "IDENT",
              value = "swap"},
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {
                        {
                          arg = {
                            {
                              line = 3,
                              name = "IDENT",
                              value = "int"}},
                          call = {
                            name = "typespec &",
                            obj = "&",
                            proc = <function>},
                          line = 3,
                          step = 0},
                        {
                          line = 3,
                          name = "IDENT",
                          value = "a"}},
                      call = {
                        name = "paramdef",
                        proc = <function>},
                      line = 3,
                      step = 0},
                    {
                      arg = {
                        {
                          arg = {
                            {
                              line = 3,
                              name = "IDENT",
                              value = "int"}},
                          call = {
                            name = "typespec &",
                            obj = "&",
                            proc = <function>},
                          line = 3,
                          step = 0},
                        {
                          line = 3,
                          name = "IDENT",
                          value = "b"}},
                      call = {
                        name = "paramdef",
                        proc = <function>},
                      line = 3,
                      step = 0}},
                  call = {
                    name = "paramdeflist",
                    proc = <function>},
                  line = 3,
                  step = 0},
                {
                  arg = {
                    {
                      arg = {
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  line = 5,
                                  name = "IDENT",
                                  value = "int"}},
                              call = {
                                name = "typespec ",
                                obj = "",
                                proc = <function>},
                              line = 5,
                              step = 0},
                            {
                              line = 5,
                              name = "IDENT",
                              value = "tmp"},
                            {
                              arg = {
                                {
                                  line = 5,
                                  name = "IDENT",
                                  value = "a"}},
                              call = {
                                name = "variable",
                                proc = <function>},
                              line = 5,
                              step = 0}},
                          call = {
                            name = "vardef_assign",
                            proc = <function>},
                          line = 5,
                          step = 1}},
                      call = {
                        name = "definition",
                        proc = <function>},
                      line = 5,
                      step = 1},
                    {
                      arg = {
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      line = 6,
                                      name = "IDENT",
                                      value = "a"}},
                                  call = {
                                    name = "variable",
                                    proc = <function>},
                                  line = 6,
                                  step = 1},
                                {
                                  arg = {
                                    {
                                      line = 6,
                                      name = "IDENT",
                                      value = "b"}},
                                  call = {
                                    name = "variable",
                                    proc = <function>},
                                  line = 6,
                                  step = 1}},
                              call = {
                                name = "operator =",
                                obj = "=",
                                proc = <function>},
                              line = 6,
                              step = 1}},
                          call = {
                            name = "free_expression",
                            proc = <function>},
                          line = 6,
                          step = 1},
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          line = 7,
                                          name = "IDENT",
                                          value = "b"}},
                                      call = {
                                        name = "variable",
                                        proc = <function>},
                                      line = 7,
                                      step = 1},
                                    {
                                      arg = {
                                        {
                                          line = 7,
                                          name = "IDENT",
                                          value = "tmp"}},
                                      call = {
                                        name = "variable",
                                        proc = <function>},
                                      line = 7,
                                      step = 1}},
                                  call = {
                                    name = "operator =",
                                    obj = "=",
                                    proc = <function>},
                                  line = 7,
                                  step = 1}},
                              call = {
                                name = "free_expression",
                                proc = <function>},
                              line = 7,
                              step = 1}},
                          call = {
                            name = "statement",
                            proc = <function>},
                          line = 7,
                          step = 2}},
                      call = {
                        name = "statement",
                        proc = <function>},
                      line = 7,
                      step = 3}},
                  call = {
                    name = "statement",
                    proc = <function>},
                  line = 7,
                  step = 4}},
              call = {
                name = "callablebody",
                proc = <function>},
              line = 7,
              scope = {
                0,
                5}}},
          call = {
            name = "procdef",
            proc = <function>},
          line = 7,
          step = 5}},
      call = {
        name = "definition",
        proc = <function>},
      line = 7,
      step = 5},
    {
      arg = {
        {
          arg = {
            {
              arg = {},
              call = {
                name = "linkage {linkage="internal",attributes="#0 nounwind"}",
                obj = {
                  attributes = "#0 nounwind",
                  linkage = "internal"},
                proc = <function>},
              line = 7,
              step = 5},
            {
              arg = {
                {
                  line = 10,
                  name = "IDENT",
                  value = "int"}},
              call = {
                name = "typespec ",
                obj = "",
                proc = <function>},
              line = 10,
              step = 5},
            {
              line = 10,
              name = "IDENT",
              value = "fibonacci"},
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {
                        {
                          arg = {
                            {
                              line = 10,
                              name = "IDENT",
                              value = "int"}},
                          call = {
                            name = "typespec ",
                            obj = "",
                            proc = <function>},
                          line = 10,
                          step = 5},
                        {
                          line = 10,
                          name = "IDENT",
                          value = "n"}},
                      call = {
                        name = "paramdef",
                        proc = <function>},
                      line = 10,
                      step = 5}},
                  call = {
                    name = "paramdeflist",
                    proc = <function>},
                  line = 10,
                  step = 5},
                {
                  arg = {
                    {
                      arg = {
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  line = 12,
                                  name = "IDENT",
                                  value = "int"}},
                              call = {
                                name = "typespec ",
                                obj = "",
                                proc = <function>},
                              line = 12,
                              step = 5},
                            {
                              line = 12,
                              name = "IDENT",
                              value = "i1"},
                            {
                              arg = {
                                {
                                  line = 12,
                                  name = "CARDINAL",
                                  value = "0"}},
                              call = {
                                name = "constant constexpr uint",
                                obj = "constexpr uint",
                                proc = <function>},
                              line = 12,
                              step = 5}},
                          call = {
                            name = "vardef_assign",
                            proc = <function>},
                          line = 12,
                          step = 6}},
                      call = {
                        name = "definition",
                        proc = <function>},
                      line = 12,
                      step = 6},
                    {
                      arg = {
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      line = 13,
                                      name = "IDENT",
                                      value = "int"}},
                                  call = {
                                    name = "typespec ",
                                    obj = "",
                                    proc = <function>},
                                  line = 13,
                                  step = 6},
                                {
                                  line = 13,
                                  name = "IDENT",
                                  value = "i2"},
                                {
                                  arg = {
                                    {
                                      line = 13,
                                      name = "CARDINAL",
                                      value = "1"}},
                                  call = {
                                    name = "constant constexpr uint",
                                    obj = "constexpr uint",
                                    proc = <function>},
                                  line = 13,
                                  step = 6}},
                              call = {
                                name = "vardef_assign",
                                proc = <function>},
                              line = 13,
                              step = 7}},
                          call = {
                            name = "definition",
                            proc = <function>},
                          line = 13,
                          step = 7},
                        {
                          arg = {
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          line = 14,
                                          name = "IDENT",
                                          value = "int"}},
                                      call = {
                                        name = "typespec ",
                                        obj = "",
                                        proc = <function>},
                                      line = 14,
                                      step = 7},
                                    {
                                      line = 14,
                                      name = "IDENT",
                                      value = "i"},
                                    {
                                      arg = {
                                        {
                                          line = 14,
                                          name = "CARDINAL",
                                          value = "0"}},
                                      call = {
                                        name = "constant constexpr uint",
                                        obj = "constexpr uint",
                                        proc = <function>},
                                      line = 14,
                                      step = 7}},
                                  call = {
                                    name = "vardef_assign",
                                    proc = <function>},
                                  line = 14,
                                  step = 8}},
                              call = {
                                name = "definition",
                                proc = <function>},
                              line = 14,
                              step = 8},
                            {
                              arg = {
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          arg = {
                                            {
                                              line = 15,
                                              name = "IDENT",
                                              value = "i"}},
                                          call = {
                                            name = "variable",
                                            proc = <function>},
                                          line = 15,
                                          step = 8},
                                        {
                                          arg = {
                                            {
                                              line = 15,
                                              name = "IDENT",
                                              value = "n"}},
                                          call = {
                                            name = "variable",
                                            proc = <function>},
                                          line = 15,
                                          step = 8}},
                                      call = {
                                        name = "operator <",
                                        obj = "<",
                                        proc = <function>},
                                      line = 15,
                                      step = 8},
                                    {
                                      arg = {
                                        {
                                          arg = {
                                            {
                                              arg = {
                                                {
                                                  arg = {
                                                    {
                                                      line = 17,
                                                      name = "IDENT",
                                                      value = "i1"}},
                                                  call = {
                                                    name = "variable",
                                                    proc = <function>},
                                                  line = 17,
                                                  step = 8},
                                                {
                                                  arg = {
                                                    {
                                                      arg = {
                                                        {
                                                          line = 17,
                                                          name = "IDENT",
                                                          value = "i2"}},
                                                      call = {
                                                        name = "variable",
                                                        proc = <function>},
                                                      line = 17,
                                                      step = 8},
                                                    {
                                                      arg = {
                                                        {
                                                          line = 17,
                                                          name = "IDENT",
                                                          value = "i1"}},
                                                      call = {
                                                        name = "variable",
                                                        proc = <function>},
                                                      line = 17,
                                                      step = 8}},
                                                  call = {
                                                    name = "operator +",
                                                    obj = "+",
                                                    proc = <function>},
                                                  line = 17,
                                                  step = 8}},
                                              call = {
                                                name = "operator =",
                                                obj = "=",
                                                proc = <function>},
                                              line = 17,
                                              step = 8}},
                                          call = {
                                            name = "free_expression",
                                            proc = <function>},
                                          line = 17,
                                          step = 8},
                                        {
                                          arg = {
                                            {
                                              arg = {
                                                {
                                                  arg = {
                                                    {
                                                      arg = {
                                                        {
                                                          line = 18,
                                                          name = "IDENT",
                                                          value = "swap"}},
                                                      call = {
                                                        name = "variable",
                                                        proc = <function>},
                                                      line = 18,
                                                      step = 8},
                                                    {
                                                      arg = {
                                                        {
                                                          line = 18,
                                                          name = "IDENT",
                                                          value = "i1"}},
                                                      call = {
                                                        name = "variable",
                                                        proc = <function>},
                                                      line = 18,
                                                      step = 8},
                                                    {
                                                      arg = {
                                                        {
                                                          line = 18,
                                                          name = "IDENT",
                                                          value = "i2"}},
                                                      call = {
                                                        name = "variable",
                                                        proc = <function>},
                                                      line = 18,
                                                      step = 8}},
                                                  call = {
                                                    name = "operator ()",
                                                    obj = "()",
                                                    proc = <function>},
                                                  line = 18,
                                                  step = 8}},
                                              call = {
                                                name = "free_expression",
                                                proc = <function>},
                                              line = 18,
                                              step = 8},
                                            {
                                              arg = {
                                                {
                                                  arg = {
                                                    {
                                                      arg = {
                                                        {
                                                          arg = {
                                                            {
                                                              line = 19,
                                                              name = "IDENT",
                                                              value = "i"}},
                                                          call = {
                                                            name = "variable",
                                                            proc = <function>},
                                                          line = 19,
                                                          step = 8},
                                                        {
                                                          arg = {
                                                            {
                                                              line = 19,
                                                              name = "CARDINAL",
                                                              value = "1"}},
                                                          call = {
                                                            name = "constant constexpr uint",
                                                            obj = "constexpr uint",
                                                            proc = <function>},
                                                          line = 19,
                                                          step = 8}},
                                                      call = {
                                                        name = "assign_operator +",
                                                        obj = "+",
                                                        proc = <function>},
                                                      line = 19,
                                                      step = 8}},
                                                  call = {
                                                    name = "free_expression",
                                                    proc = <function>},
                                                  line = 19,
                                                  step = 8}},
                                              call = {
                                                name = "statement",
                                                proc = <function>},
                                              line = 19,
                                              step = 9}},
                                          call = {
                                            name = "statement",
                                            proc = <function>},
                                          line = 19,
                                          step = 10}},
                                      call = {
                                        name = "statement",
                                        proc = <function>},
                                      line = 19,
                                      step = 11}},
                                  call = {
                                    name = "conditional_while",
                                    proc = <function>},
                                  line = 19,
                                  scope = {
                                    8,
                                    12}},
                                {
                                  arg = {
                                    {
                                      arg = {
                                        {
                                          arg = {
                                            {
                                              line = 21,
                                              name = "IDENT",
                                              value = "i2"}},
                                          call = {
                                            name = "variable",
                                            proc = <function>},
                                          line = 21,
                                          step = 12}},
                                      call = {
                                        name = "return_value",
                                        proc = <function>},
                                      line = 21,
                                      step = 13}},
                                  call = {
                                    name = "statement",
                                    proc = <function>},
                                  line = 21,
                                  step = 14}},
                              call = {
                                name = "statement",
                                proc = <function>},
                              line = 21,
                              step = 15}},
                          call = {
                            name = "statement",
                            proc = <function>},
                          line = 21,
                          step = 16}},
                      call = {
                        name = "statement",
                        proc = <function>},
                      line = 21,
                      step = 17}},
                  call = {
                    name = "statement",
                    proc = <function>},
                  line = 21,
                  step = 18}},
              call = {
                name = "callablebody",
                proc = <function>},
              line = 21,
              scope = {
                5,
                19}}},
          call = {
            name = "funcdef",
            proc = <function>},
          line = 21,
          step = 19}},
      call = {
        name = "definition",
        proc = <function>},
      line = 21,
      step = 19},
    {
      arg = {
        {
          arg = {
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {
                        {
                          line = 26,
                          name = "IDENT",
                          value = "int"}},
                      call = {
                        name = "typespec ",
                        obj = "",
                        proc = <function>},
                      line = 26,
                      step = 19},
                    {
                      line = 26,
                      name = "IDENT",
                      value = "val"},
                    {
                      arg = {
                        {
                          arg = {
                            {
                              line = 26,
                              name = "IDENT",
                              value = "fibonacci"}},
                          call = {
                            name = "variable",
                            proc = <function>},
                          line = 26,
                          step = 19},
                        {
                          arg = {
                            {
                              line = 26,
                              name = "CARDINAL",
                              value = "20"}},
                          call = {
                            name = "constant constexpr uint",
                            obj = "constexpr uint",
                            proc = <function>},
                          line = 26,
                          step = 19}},
                      call = {
                        name = "operator ()",
                        obj = "()",
                        proc = <function>},
                      line = 26,
                      step = 19}},
                  call = {
                    name = "vardef_assign",
                    proc = <function>},
                  line = 26,
                  step = 20}},
              call = {
                name = "definition",
                proc = <function>},
              line = 26,
              step = 20},
            {
              arg = {
                {
                  arg = {
                    {
                      arg = {
                        {
                          arg = {
                            {
                              line = 27,
                              name = "IDENT",
                              value = "printf"}},
                          call = {
                            name = "variable",
                            proc = <function>},
                          line = 27,
                          step = 20},
                        {
                          arg = {
                            {
                              line = 27,
                              name = "DQSTRING",
                              value = "Result: %d\\n"}},
                          call = {
                            name = "string_constant constexpr float",
                            obj = "constexpr float",
                            proc = <function>},
                          line = 27,
                          step = 20},
                        {
                          arg = {
                            {
                              line = 27,
                              name = "IDENT",
                              value = "val"}},
                          call = {
                            name = "variable",
                            proc = <function>},
                          line = 27,
                          step = 20}},
                      call = {
                        name = "operator ()",
                        obj = "()",
                        proc = <function>},
                      line = 27,
                      step = 20}},
                  call = {
                    name = "free_expression",
                    proc = <function>},
                  line = 27,
                  step = 20}},
              call = {
                name = "statement",
                proc = <function>},
              line = 27,
              step = 21}},
          call = {
            name = "statement",
            proc = <function>},
          line = 27,
          step = 22}},
      call = {
        name = "main_procdef",
        proc = <function>},
      line = 27,
      scope = {
        19,
        23}}},
  call = {
    name = "program",
    proc = <function>},
  line = 27,
  step = 23}
