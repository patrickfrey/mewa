return {
	double = {
		def_local = "{1} = alloca double, align 8\n",
		def_local_val = "{1} = alloca double, align 8\nstore double {2}, double* {1}, align 8",
		def_global = "{1} = internal global double 0.00000, align 8\n",
		def_global_val = "{1} = internal global double {2}, align 8\n",
		default = "0.00000",
		class = "fp",
		maxvalue = "1.8e+308",
		store = "store double {2}, double* {1}, align 8",
		load = "{2} = load double, double* {1} align 8\n",
		conv = {
			["float"] = "{3} = load float, float* {1}, align 4\n{2} = fpext float {3} to double\n",
			["ulong"] = "{3} = load i64, i64* {1}, align 8\n{2} = uitofp i64 {3} to double\n",
			["long"] = "{3} = load i64, i64* {1}, align 8\n{2} = sitofp i64 {3} to double\n",
			["uint"] = "{3} = load i32, i32* {1}, align 4\n{2} = uitofp i32 {3} to double\n",
			["int"] = "{3} = load i32, i32* {1}, align 4\n{2} = sitofp i32 {3} to double\n",
			["ushort"] = "{3} = load i16, i16* {1}, align 2\n{2} = uitofp i16 {3} to double\n",
			["short"] = "{3} = load i16, i16* {1}, align 2\n{2} = sitofp i16 {3} to double\n",
			["byte"] = "{3} = load i8, i8* {1}, align 1\n{2} = uitofp i8 {3} to double\n",
			["bool"] = "{3} = load i8, i8* {1}, align 1\n{4} = trunc i8 {3} to i1\n{5} = zext i1 {4} to i32\n{2} = sitofp i32 {5} to double\n"},
		unop = {
			["-"] = "{2} = fneg double {1}\n"},
		binop = {
			["+"] = "{3} = fadd double {1}, {2}\n",
			["-"] = "{3} = fsub double {1}, {2}\n",
			["*"] = "{3} = fmul double {1}, {2}\n",
			["/"] = "{3} = fdiv double {1}, {2}\n",
			["%"] = "{3} = frem double {1}, {2}\n"}
	},
	float = {
		def_local = "{1} = alloca float, align 4\n",
		def_local_val = "{1} = alloca float, align 4\nstore float {2}, float* {1}, align 4",
		def_global = "{1} = internal global float 0.00000, align 4\n",
		def_global_val = "{1} = internal global float {2}, align 4\n",
		default = "0.00000",
		class = "fp",
		maxvalue = "3.402823e+38",
		store = "store float {2}, float* {1}, align 4",
		load = "{2} = load float, float* {1} align 4\n",
		conv = {
			["double"] = "{3} = load double, double* {1}, align 8\n{2} = fptrunc double {3} to float\n",
			["ulong"] = "{3} = load i64, i64* {1}, align 8\n{2} = uitofp i64 {3} to float\n",
			["long"] = "{3} = load i64, i64* {1}, align 8\n{2} = sitofp i64 {3} to float\n",
			["uint"] = "{3} = load i32, i32* {1}, align 4\n{2} = uitofp i32 {3} to float\n",
			["int"] = "{3} = load i32, i32* {1}, align 4\n{2} = sitofp i32 {3} to float\n",
			["ushort"] = "{3} = load i16, i16* {1}, align 2\n{2} = uitofp i16 {3} to float\n",
			["short"] = "{3} = load i16, i16* {1}, align 2\n{2} = sitofp i16 {3} to float\n",
			["byte"] = "{3} = load i8, i8* {1}, align 1\n{2} = uitofp i8 {3} to float\n",
			["bool"] = "{3} = load i8, i8* {1}, align 1\n{4} = trunc i8 {3} to i1\n{5} = zext i1 {4} to i32\n{2} = sitofp i32 {5} to float\n"},
		unop = {
			["-"] = "{2} = fneg float {1}\n"},
		binop = {
			["+"] = "{3} = fadd float {1}, {2}\n",
			["-"] = "{3} = fsub float {1}, {2}\n",
			["*"] = "{3} = fmul float {1}, {2}\n",
			["/"] = "{3} = fdiv float {1}, {2}\n",
			["%"] = "{3} = frem float {1}, {2}\n"}
	},
	ulong = {
		def_local = "{1} = alloca i64, align 8\n",
		def_local_val = "{1} = alloca i64, align 8\nstore i64 {2}, i64* {1}, align 8",
		def_global = "{1} = internal global i64 0, align 8\n",
		def_global_val = "{1} = internal global i64 {2}, align 8\n",
		default = "0",
		class = "unsigned",
		maxvalue = "18446744073709551616",
		store = "store i64 {2}, i64* {1}, align 8",
		load = "{2} = load i64, i64* {1} align 8\n",
		conv = {
			["double"] = "{3} = load double, double* {1}, align 8\n{2} = fptoui double {3} to i64\n",
			["float"] = "{3} = load float, float* {1}, align 4\n{2} = fptoui float {3} to i64\n",
			["long"] = "{2} = load i64, i64* {1} align 8\n",
			["uint"] = "{3} = load i32, i32* {1}, align 4\n{2} = zext i32 {3} to i64\n",
			["int"] = "{3} = load i32, i32* {1}, align 4\n{2} = sext i32 {3} to i64\n",
			["ushort"] = "{3} = load i16, i16* {1}, align 2\n{2} = zext i16 {3} to i64\n",
			["short"] = "{3} = load i16, i16* {1}, align 2\n{2} = sext i16 {3} to i64\n",
			["byte"] = "{3} = load i8, i8* {1}, align 1\n{2} = zext i8 {3} to i64\n",
			["bool"] = "{3} = load i1, i1* {1}, align 1\n{2} = zext i1 {3} to i64\n"},
		unop = {
			["!"] = "{2} = xor i64 {1}, -1\n"},
		binop = {
			["+"] = "{3} = add nuw i64 {1}, {2}\n",
			["-"] = "{3} = add nsw i64 {1}, {2}\n",
			["*"] = "{3} = mul nsw i64 {1}, {2}\n",
			["/"] = "{3} = udiv i64 {1}, {2}\n",
			["%"] = "{3} = urem i64 {1}, {2}\n",
			["<<"] = "{3} = shl i64 {1}, {2}\n",
			[">>"] = "{3} = lshr i64 {1}, {2}\n",
			["&"] = "{3} = and i64 {1}, {2}\n",
			["|"] = "{3} = or i64 {1}, {2}\n",
			["^"] = "{3} = xor i64 {1}, {2}\n"}
	},
	long = {
		def_local = "{1} = alloca i64, align 8\n",
		def_local_val = "{1} = alloca i64, align 8\nstore i64 {2}, i64* {1}, align 8",
		def_global = "{1} = internal global i64 0, align 8\n",
		def_global_val = "{1} = internal global i64 {2}, align 8\n",
		default = "0",
		class = "signed",
		maxvalue = "9223372036854775808",
		store = "store i64 {2}, i64* {1}, align 8",
		load = "{2} = load i64, i64* {1} align 8\n",
		conv = {
			["double"] = "{3} = load double, double* {1}, align 8\n{2} = fptosi double {3} to i64\n",
			["float"] = "{3} = load float, float* {1}, align 4\n{2} = fptosi float {3} to i64\n",
			["ulong"] = "{2} = load i64, i64* {1} align 8\n",
			["uint"] = "{3} = load i32, i32* {1}, align 4\n{2} = zext i32 {3} to i64\n",
			["int"] = "{3} = load i32, i32* {1}, align 4\n{2} = sext i32 {3} to i64\n",
			["ushort"] = "{3} = load i16, i16* {1}, align 2\n{2} = zext i16 {3} to i64\n",
			["short"] = "{3} = load i16, i16* {1}, align 2\n{2} = sext i16 {3} to i64\n",
			["byte"] = "{3} = load i8, i8* {1}, align 1\n{2} = zext i8 {3} to i64\n",
			["bool"] = "{3} = load i1, i1* {1}, align 1\n{2} = zext i1 {3} to i64\n"},
		unop = {
			["-"] = "{2} = sub i64 0, {1}\n"},
		binop = {
			["+"] = "{3} = add nsw i64 {1}, {2}\n",
			["-"] = "{3} = sub nsw i64 {1}, {2}\n",
			["*"] = "{3} = mul nsw i64 {1}, {2}\n",
			["/"] = "{3} = sdiv i64 {1}, {2}\n",
			["%"] = "{3} = srem i64 {1}, {2}\n",
			["<<"] = "{3} = shl nsw i64 {1}, {2}\n",
			[">>"] = "{3} = ashr i64 {1}, {2}\n"}
	},
	uint = {
		def_local = "{1} = alloca i32, align 4\n",
		def_local_val = "{1} = alloca i32, align 4\nstore i32 {2}, i32* {1}, align 4",
		def_global = "{1} = internal global i32 0, align 4\n",
		def_global_val = "{1} = internal global i32 {2}, align 4\n",
		default = "0",
		class = "unsigned",
		maxvalue = "4294967296",
		store = "store i32 {2}, i32* {1}, align 4",
		load = "{2} = load i32, i32* {1} align 4\n",
		conv = {
			["double"] = "{3} = load double, double* {1}, align 8\n{2} = fptoui double {3} to i32\n",
			["float"] = "{3} = load float, float* {1}, align 4\n{2} = fptoui float {3} to i32\n",
			["ulong"] = "{3} = load i64, i64* {1}, align 8\n{2} = trunc i64 {3} to i32\n",
			["long"] = "{3} = load i64, i64* {1}, align 8\n{2} = trunc i64 {3} to i32\n",
			["int"] = "{2} = load i32, i32* {1} align 4\n",
			["ushort"] = "{3} = load i16, i16* {1}, align 2\n{2} = zext i16 {3} to i32\n",
			["short"] = "{3} = load i16, i16* {1}, align 2\n{2} = sext i16 {3} to i32\n",
			["byte"] = "{3} = load i8, i8* {1}, align 1\n{2} = zext i8 {3} to i32\n",
			["bool"] = "{3} = load i1, i1* {1}, align 1\n{2} = zext i1 {3} to i32\n"},
		unop = {
			["!"] = "{2} = xor i32 {1}, -1\n"},
		binop = {
			["+"] = "{3} = add nuw i32 {1}, {2}\n",
			["-"] = "{3} = add nsw i32 {1}, {2}\n",
			["*"] = "{3} = mul nsw i32 {1}, {2}\n",
			["/"] = "{3} = udiv i32 {1}, {2}\n",
			["%"] = "{3} = urem i32 {1}, {2}\n",
			["<<"] = "{3} = shl i32 {1}, {2}\n",
			[">>"] = "{3} = lshr i32 {1}, {2}\n",
			["&"] = "{3} = and i32 {1}, {2}\n",
			["|"] = "{3} = or i32 {1}, {2}\n",
			["^"] = "{3} = xor i32 {1}, {2}\n"}
	},
	int = {
		def_local = "{1} = alloca i32, align 4\n",
		def_local_val = "{1} = alloca i32, align 4\nstore i32 {2}, i32* {1}, align 4",
		def_global = "{1} = internal global i32 0, align 4\n",
		def_global_val = "{1} = internal global i32 {2}, align 4\n",
		default = "0",
		class = "signed",
		maxvalue = "2147483648",
		store = "store i32 {2}, i32* {1}, align 4",
		load = "{2} = load i32, i32* {1} align 4\n",
		conv = {
			["double"] = "{3} = load double, double* {1}, align 8\n{2} = fptosi double {3} to i32\n",
			["float"] = "{3} = load float, float* {1}, align 4\n{2} = fptosi float {3} to i32\n",
			["ulong"] = "{3} = load i64, i64* {1}, align 8\n{2} = trunc i64 {3} to i32\n",
			["long"] = "{3} = load i64, i64* {1}, align 8\n{2} = trunc i64 {3} to i32\n",
			["uint"] = "{2} = load i32, i32* {1} align 4\n",
			["ushort"] = "{3} = load i16, i16* {1}, align 2\n{2} = zext i16 {3} to i32\n",
			["short"] = "{3} = load i16, i16* {1}, align 2\n{2} = sext i16 {3} to i32\n",
			["byte"] = "{3} = load i8, i8* {1}, align 1\n{2} = zext i8 {3} to i32\n",
			["bool"] = "{3} = load i1, i1* {1}, align 1\n{2} = zext i1 {3} to i32\n"},
		unop = {
			["-"] = "{2} = sub i32 0, {1}\n"},
		binop = {
			["+"] = "{3} = add nsw i32 {1}, {2}\n",
			["-"] = "{3} = sub nsw i32 {1}, {2}\n",
			["*"] = "{3} = mul nsw i32 {1}, {2}\n",
			["/"] = "{3} = sdiv i32 {1}, {2}\n",
			["%"] = "{3} = srem i32 {1}, {2}\n",
			["<<"] = "{3} = shl nsw i32 {1}, {2}\n",
			[">>"] = "{3} = ashr i32 {1}, {2}\n"}
	},
	ushort = {
		def_local = "{1} = alloca i16, align 2\n",
		def_local_val = "{1} = alloca i16, align 2\nstore i16 {2}, i16* {1}, align 2",
		def_global = "{1} = internal global i16 0, align 2\n",
		def_global_val = "{1} = internal global i16 {2}, align 2\n",
		default = "0",
		class = "unsigned",
		maxvalue = "65536",
		store = "store i16 {2}, i16* {1}, align 2",
		load = "{2} = load i16, i16* {1} align 2\n",
		conv = {
			["double"] = "{3} = load double, double* {1}, align 8\n{2} = fptoui double {3} to i16\n",
			["float"] = "{3} = load float, float* {1}, align 4\n{2} = fptoui float {3} to i16\n",
			["ulong"] = "{3} = load i64, i64* {1}, align 8\n{2} = trunc i64 {3} to i16\n",
			["long"] = "{3} = load i64, i64* {1}, align 8\n{2} = trunc i64 {3} to i16\n",
			["uint"] = "{3} = load i32, i32* {1}, align 4\n{2} = trunc i32 {3} to i16\n",
			["int"] = "{3} = load i32, i32* {1}, align 4\n{2} = trunc i32 {3} to i16\n",
			["short"] = "{2} = load i16, i16* {1} align 2\n",
			["byte"] = "{3} = load i8, i8* {1}, align 1\n{2} = zext i8 {3} to i16\n",
			["bool"] = "{3} = load i1, i1* {1}, align 1\n{2} = zext i1 {3} to i16\n"},
		unop = {
			["!"] = "{2} = xor i16 {1}, -1\n"},
		binop = {
			["+"] = "{3} = add nuw i16 {1}, {2}\n",
			["-"] = "{3} = add nsw i16 {1}, {2}\n",
			["*"] = "{3} = mul nsw i16 {1}, {2}\n",
			["/"] = "{3} = udiv i16 {1}, {2}\n",
			["%"] = "{3} = urem i16 {1}, {2}\n",
			["<<"] = "{3} = shl i16 {1}, {2}\n",
			[">>"] = "{3} = lshr i16 {1}, {2}\n",
			["&"] = "{3} = and i16 {1}, {2}\n",
			["|"] = "{3} = or i16 {1}, {2}\n",
			["^"] = "{3} = xor i16 {1}, {2}\n"}
	},
	short = {
		def_local = "{1} = alloca i16, align 2\n",
		def_local_val = "{1} = alloca i16, align 2\nstore i16 {2}, i16* {1}, align 2",
		def_global = "{1} = internal global i16 0, align 2\n",
		def_global_val = "{1} = internal global i16 {2}, align 2\n",
		default = "0",
		class = "signed",
		maxvalue = "32768",
		store = "store i16 {2}, i16* {1}, align 2",
		load = "{2} = load i16, i16* {1} align 2\n",
		conv = {
			["double"] = "{3} = load double, double* {1}, align 8\n{2} = fptosi double {3} to i16\n",
			["float"] = "{3} = load float, float* {1}, align 4\n{2} = fptosi float {3} to i16\n",
			["ulong"] = "{3} = load i64, i64* {1}, align 8\n{2} = trunc i64 {3} to i16\n",
			["long"] = "{3} = load i64, i64* {1}, align 8\n{2} = trunc i64 {3} to i16\n",
			["uint"] = "{3} = load i32, i32* {1}, align 4\n{2} = trunc i32 {3} to i16\n",
			["int"] = "{3} = load i32, i32* {1}, align 4\n{2} = trunc i32 {3} to i16\n",
			["ushort"] = "{2} = load i16, i16* {1} align 2\n",
			["byte"] = "{3} = load i8, i8* {1}, align 1\n{2} = zext i8 {3} to i16\n",
			["bool"] = "{3} = load i1, i1* {1}, align 1\n{2} = zext i1 {3} to i16\n"},
		unop = {
			["-"] = "{2} = sub i16 0, {1}\n"},
		binop = {
			["+"] = "{3} = add nsw i16 {1}, {2}\n",
			["-"] = "{3} = sub nsw i16 {1}, {2}\n",
			["*"] = "{3} = mul nsw i16 {1}, {2}\n",
			["/"] = "{3} = sdiv i16 {1}, {2}\n",
			["%"] = "{3} = srem i16 {1}, {2}\n",
			["<<"] = "{3} = shl nsw i16 {1}, {2}\n",
			[">>"] = "{3} = ashr i16 {1}, {2}\n"}
	},
	byte = {
		def_local = "{1} = alloca i8, align 1\n",
		def_local_val = "{1} = alloca i8, align 1\nstore i8 {2}, i8* {1}, align 1",
		def_global = "{1} = internal global i8 0, align 1\n",
		def_global_val = "{1} = internal global i8 {2}, align 1\n",
		default = "0",
		class = "unsigned",
		maxvalue = "256",
		store = "store i8 {2}, i8* {1}, align 1",
		load = "{2} = load i8, i8* {1} align 1\n",
		conv = {
			["double"] = "{3} = load double, double* {1}, align 8\n{2} = fptoui double {3} to i8\n",
			["float"] = "{3} = load float, float* {1}, align 4\n{2} = fptoui float {3} to i8\n",
			["ulong"] = "{3} = load i64, i64* {1}, align 8\n{2} = trunc i64 {3} to i8\n",
			["long"] = "{3} = load i64, i64* {1}, align 8\n{2} = trunc i64 {3} to i8\n",
			["uint"] = "{3} = load i32, i32* {1}, align 4\n{2} = trunc i32 {3} to i8\n",
			["int"] = "{3} = load i32, i32* {1}, align 4\n{2} = trunc i32 {3} to i8\n",
			["ushort"] = "{3} = load i16, i16* {1}, align 2\n{2} = trunc i16 {3} to i8\n",
			["short"] = "{3} = load i16, i16* {1}, align 2\n{2} = trunc i16 {3} to i8\n",
			["bool"] = "{3} = load i1, i1* {1}, align 1\n{2} = zext i1 {3} to i8\n"},
		unop = {
			["!"] = "{2} = xor i8 {1}, -1\n"},
		binop = {
			["+"] = "{3} = add nuw i8 {1}, {2}\n",
			["-"] = "{3} = add nsw i8 {1}, {2}\n",
			["*"] = "{3} = mul nsw i8 {1}, {2}\n",
			["/"] = "{3} = udiv i8 {1}, {2}\n",
			["%"] = "{3} = urem i8 {1}, {2}\n",
			["<<"] = "{3} = shl i8 {1}, {2}\n",
			[">>"] = "{3} = lshr i8 {1}, {2}\n",
			["&"] = "{3} = and i8 {1}, {2}\n",
			["|"] = "{3} = or i8 {1}, {2}\n",
			["^"] = "{3} = xor i8 {1}, {2}\n"}
	},
	bool = {
		def_local = "{1} = alloca i8, align 1\n",
		def_local_val = "{1} = alloca i8, align 1\n{3} = zext i1 {2} to i8\nstore i8 {3}, i8* {1}, align 1\n",
		def_global = "{1} = internal global i8 false, align 1\n",
		def_global_val = "{1} = internal global i8 {2}, align 1\n",
		default = "false",
		class = "bool",
		maxvalue = "1",
		store = "{3} = zext i1 {2} to i8\nstore i8 {3}, i8* {1}, align 1\n",
		load = "{3} = load i8, i8* {1}, align 1\n{2} = trunc i8 {3} to i1\n",
		conv = {
			["double"] = "{3} = load double, double* {1}, align 8\n{2} = fcmp une double {3}, 0.000000e+00\n",
			["float"] = "{3} = load float, float* {1}, align 4\n{2} = fcmp une float {3}, 0.000000e+00\n",
			["ulong"] = "{3} = load i64, i64* {1}, align 8\n{2} = cmp ne i64 {3}, 0\n",
			["long"] = "{3} = load i64, i64* {1}, align 8\n{2} = cmp ne i64 {3}, 0\n",
			["uint"] = "{3} = load i32, i32* {1}, align 4\n{2} = cmp ne i32 {3}, 0\n",
			["int"] = "{3} = load i32, i32* {1}, align 4\n{2} = cmp ne i32 {3}, 0\n",
			["ushort"] = "{3} = load i16, i16* {1}, align 2\n{2} = cmp ne i16 {3}, 0\n",
			["short"] = "{3} = load i16, i16* {1}, align 2\n{2} = cmp ne i16 {3}, 0\n",
			["byte"] = "{3} = load i8, i8* {1}, align 1\n{2} = cmp ne i8 {3}, 0\n"},
		unop = {
			["!"] = "{2} = xor i1 {1}, true\n"},
		binop = {
			["&&"] = "{3} = and i1 {1}, {2}\n",
			["||"] = "{3} = or i1 {1}, {2}\n"}
	}
}
